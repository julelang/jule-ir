// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 17/5/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1abad9873_Importer{};
struct _1abce75a8_Kind{};
struct _1abd13959_Lookup{};
struct _1ace4d2bd_CommonFlag{};
struct _1a77e9433_Range16;
struct _1a77e98a6_Range32;
struct _1a77e9d29_RangeTable;
struct _1a78cccec_acceptRange;
struct _1a7915b15_lazyBuff;
struct _1d95ba601_DirEntry;
struct _1d9600aba_Directory;
struct _1d7cc668d_File;
struct _1d96aa317_Status;
struct _1a79e0915_Cmd;
struct _1a7995777_Log;
struct _1a97237bc_Token;
struct _1a9728b57_File;
struct _1a972abae_kindPair;
struct _1a9731720_lex;
struct _1ab039532_Ast;
struct _1ab03a324_Node;
struct _1ab03a720_Directive;
struct _1ab06d9b7_TypeDecl;
struct _1ab06e07d_IdentTypeDecl;
struct _1ab06e6cc_SubIdentTypeDecl;
struct _1ab06ea84_NamespaceTypeDecl;
struct _1ab06ed70_SptrTypeDecl;
struct _1ab07026b_SlcTypeDecl;
struct _1ab070557_TupleTypeDecl;
struct _1ab070843_PtrTypeDecl;
struct _1ab070ec5_ArrTypeDecl;
struct _1ab071723_MapTypeDecl;
struct _1ab071aca_RetTypeDecl;
struct _1ab072ed8_Expr;
struct _1ab0732c4_RangeExpr;
struct _1ab073879_UseExpr;
struct _1ab073b65_TupleExpr;
struct _1ab07401c_LitExpr;
struct _1ab074726_UnsafeExpr;
struct _1ab074b99_IdentExpr;
struct _1ab0753a3_UnaryExpr;
struct _1ab07575a_VariadicExpr;
struct _1ab075b12_CastExpr;
struct _1ab075eb9_NsSelectionExpr;
struct _1ab07643c_SubIdentExpr;
struct _1ab0768b0_BinopExpr;
struct _1ab076eba_FnCallExpr;
struct _1ab077949_FieldExprPair;
struct _1ab078197_StructLit;
struct _1ab07861a_BraceLit;
struct _1ab078de0_KeyValPair;
struct _1ab0795c7_SliceExpr;
struct _1ab079e46_IndexingExpr;
struct _1ab07a551_SlicingExpr;
struct _1ab07a83c_Constraint;
struct _1ab07acb0_GenericDecl;
struct _1ab07b167_LabelSt;
struct _1ab07b51e_GotoSt;
struct _1ab07b80a_FallSt;
struct _1ab07be15_AssignLeft;
struct _1ab07c454_AssignSt;
struct _1ab07d345_Stmt;
struct _1ab07d950_ScopeTree;
struct _1ab07e126_ParamDecl;
struct _1ab080446_FnDecl;
struct _1ab081425_VarDecl;
struct _1ab0817cc_RetSt;
struct _1ab081e3c_Iter;
struct _1ab082712_WhileKind;
struct _1ab0830a3_RangeKind;
struct _1ab08345a_BreakSt;
struct _1ab083812_ContSt;
struct _1ab083c85_If;
struct _1ab08413c_Else;
struct _1ab0845b0_Conditional;
struct _1ab084c86_TypeAliasDecl;
struct _1ab085209_Case;
struct _1ab0858d0_MatchCase;
struct _1ab086172_UseDecl;
struct _1ab0865e5_EnumItemDecl;
struct _1ab08711d_EnumDecl;
struct _1ab087b24_TypeEnumItemDecl;
struct _1ab08822e_TypeEnumDecl;
struct _1ab08842c_FieldDecl;
struct _1ab088bd0_StructDecl;
struct _1ab0892da_TraitDecl;
struct _1ab0898e5_Impl;
struct _1ab93ae00_floatInfo;
struct _1ab5c106e_decimalSlice;
struct _1aba7de22_leftCheat;
struct _1aba7e32e_decimal;
struct _1aba86b94_Const;
struct _1ab05e216_Field;
struct _1ab06685b_Operators;
struct _1ab08a1a9_Struct;
struct _1ab08a396_FieldIns;
struct _1aba90928_OperandExprModel;
struct _1aba90de0_BinopExprModel;
struct _1aba91297_UnaryExprModel;
struct _1aba91693_StructArgExprModel;
struct _1aba91a4a_StructLitExprModel;
struct _1aba91d58_AllocStructLitExprModel;
struct _1aba923a8_CastingExprModel;
struct _1aba92c5a_FnCallExprModel;
struct _1aba93112_SliceExprModel;
struct _1aba93585_IndexingExprModel;
struct _1aba9393c_AnonFnExprModel;
struct _1aba93ce4_KeyValPairExprModel;
struct _1aba94267_MapExprModel;
struct _1aba947a6_SlicingExprModel;
struct _1aba94ce5_TraitSubIdentExprModel;
struct _1aba95697_StructSubIdentExprModel;
struct _1aba95a3d_StructStaticIdentExprModel;
struct _1aba95e06_ArrayExprModel;
struct _1aba961e2_CommonIdentExprModel;
struct _1aba96753_CommonSubIdentExprModel;
struct _1aba96a50_TupleExprModel;
struct _1aba96e29_BuiltinOutCallExprModel;
struct _1aba97314_BuiltinOutlnCallExprModel;
struct _1aba97633_BuiltinCloneCallExprModel;
struct _1aba97a1d_BuiltinNewCallExprModel;
struct _1aba97e08_BuiltinPanicCallExprModel;
struct _1aba983ae_BuiltinAssertCallExprModel;
struct _1aba98865_BuiltinMakeCallExprModel;
struct _1aba98c50_BuiltinAppendCallExprModel;
struct _1aba9906e_BuiltinLenCallExprModel;
struct _1aba9938d_BuiltinCapCallExprModel;
struct _1aba99a42_BuiltinDeleteCallExprModel;
struct _1aba99da5_BuiltinCopyCallExprModel;
struct _1aba9a290_BuiltinErrorCallExprModel;
struct _1aba9a58c_SizeofExprModel;
struct _1aba9a878_AlignofExprModel;
struct _1aba9ab64_RuneExprModel;
struct _1aba9ae72_IntegratedToStrExprModel;
struct _1aba9b33a_BackendEmitExprModel;
struct _1aba9b626_FreeExprModel;
struct _1aba9c1b5_RetType;
struct _1aba9c88b_Param;
struct _1aba9e1c8_Fn;
struct _1abaa0eaa_ParamIns;
struct _1abaa1d79_FnIns;
struct _1abaa4ce4_ReferenceStack;
struct _1abaa6158_Pass;
struct _1abaaa602_symbolBuilder;
struct _1abab10ca_Trait;
struct _1abab272a_EnumItem;
struct _1abab3220_Enum;
struct _1abab4254_TypeEnumItem;
struct _1abab481a_TypeEnum;
struct _1abab6d4a_constraintChecker;
struct _1abab8c81_Impl;
struct _1ababdcdb_Scope;
struct _1ababe1d7_If;
struct _1ababe4c3_Else;
struct _1ababe847_Conditional;
struct _1ababeb33_InfIter;
struct _1abac00a6_WhileIter;
struct _1abac098b_RangeIter;
struct _1abac0d87_ContSt;
struct _1abac123e_BreakSt;
struct _1abac152a_Label;
struct _1abac1816_GotoSt;
struct _1abac1bbd_Postfix;
struct _1abac2141_Assign;
struct _1abac24e8_MultiAssign;
struct _1abac2a37_Match;
struct _1abac3582_Case;
struct _1abac3b37_FallSt;
struct _1abac3eab_RetSt;
struct _1abac45b6_scopeLabel;
struct _1abac4a39_scopeGoto;
struct _1abac584d_scopeChecker;
struct _1abad6463_directiveChecker;
struct _1abc4cd9e_ImportInfo;
struct _1abc50d08_Package;
struct _1abc55eea_Sema;
struct _1abc71301_missingRetChecker;
struct _1abc72eb2_IterRelation;
struct _1abc73ee6_Var;
struct _1abc74c94_FuncPattern;
struct _1abca581e_typeCompatibilityChecker;
struct _1abca7447_assignTypeChecker;
struct _1abca8e2c_dynamicTypeAnnotation;
struct _1abcad7e4_fnCallArgChecker;
struct _1abcb11ed_structLitChecker;
struct _1abcb2cd2_rangeChecker;
struct _1abcb4d6c_retTypeChecker;
struct _1abcb6c2b_SymbolTable;
struct _1abcbba55_Data;
struct _1abcbcacd_Value;
struct _1abcbd5c3_Eval;
struct _1abcd9468_unaryEval;
struct _1abcdb206_binaryEval;
struct _1abce62aa_InsGeneric;
struct _1abce6ce4_TypeAlias;
struct _1abce79d7_TypeKind;
struct _1abcebdb5_TypeSymbol;
struct _1abcec734_Prim;
struct _1abd00eb8_Sptr;
struct _1abd01925_Slc;
struct _1abd024a3_Tuple;
struct _1abd02ecb_Map;
struct _1abd03ac0_Arr;
struct _1abd0452c_Ptr;
struct _1abd05473_referencer;
struct _1abd06353_typeChecker;
struct _1abd0da64_identTypeLookup;
struct _1ac4c8ad0_FileInfo;
struct _1ac5226ea_stmt;
struct _1ac523025_scopeParser;
struct _1ac52e53c_exprBuilder;
struct _1ac53ad40_assignInfo;
struct _1ac53e66d_parser;
struct _1ac550382_typeBuilder;
struct _1ab780eba_CompileInfo;
struct _1ab78231d_directiveEval;
struct _1ac44b657_JuleImporter;
struct _1ac2e83e4_OrderedDefines;
struct _1ac553819_defineOrderer;
struct _1abbde5c1_liveTable;
struct _1abc25393_scopeDeadCode;
struct _1abc292ed_exprDeadCode;
struct _1a9750e7b_UnsafeBinopExprModel;
struct _1a97dda1e_UnsafeIndexingExprModel;
struct _1a9791384_PushToSliceExprModel;
struct _1a9cd418a_MutSlicingExprModel;
struct _1a9e8e1e1_StrInsertBeginExprModel;
struct _1a9749e20_scopeOptimizer;
struct _1a98cd3e4_exprOptimizer;
struct _1abbab318_Optimizer;
struct _1ac6ecc7c_AnsiEscape;
struct _1ac6ee29a_Logger;
struct _1ace0d7de_AbsTime;
struct _1ace0de82_Time;
struct _1acd54427_scopeCoder;
struct _1acd5c0bc_exprCoder;
struct _1acd6b230_deriveCoder;
struct _1acd6cb05_TestCoder;
struct _1acd70256_identCoder;
struct _1acda29e7_SerializationInfo;
struct _1acd7800b_traitHash;
struct _1ace1b7ec_customType;
struct _1ace1c29d_typeCoder;
struct _1ace24a8b_resultCoder;
struct _1bc11484e_Flag;
struct _1bc118589_Flag;
struct _1bc11bda6_Flag;
struct _1bc120717_Flag;
struct _1bc124034_Flag;
struct _1ace50ea2_FlagSet;
struct _1ab08a583_StructIns;
struct _1abbde989_ObjectDeadCode;
struct _1ace15c9c_ObjectCoder;
struct _1ac317732_IR;
struct _1ace5367a_argParser;
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1abcbba55_Data__jule_tuple_x_1abcbba55_Data {
	jule::Ptr<_1abcbba55_Data> __jule_result_arg0;
	jule::Ptr<_1abcbba55_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1ab085209_Case__jule_tuple_bool {
	jule::Ptr<_1ab085209_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ab085209_Case__jule_tuple_x_1ab08413c_Else {
	jule::Slice<jule::Ptr<_1ab085209_Case>> __jule_result_arg0;
	jule::Ptr<_1ab08413c_Else> __jule_result_arg1;
};
struct __jule_tuple__1ab07d114_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab07c454_AssignSt__jule_tuple_bool {
	jule::Ptr<_1ab07c454_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1ab06d9b7_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab071aca_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1ab071aca_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ab039532_Ast__jule_tuple_s_1a7995777_Log {
	jule::Slice<jule::Ptr<_1ab039532_Ast>> __jule_result_arg0;
	jule::Slice<_1a7995777_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1a7995777_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1a7995777_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ac317732_IR__jule_tuple_s_1a7995777_Log {
	jule::Ptr<_1ac317732_IR> __jule_result_arg0;
	jule::Slice<_1a7995777_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1ab512e39_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1ab512e39_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1ab512e39_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1ab512e39_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1abcb6c2b_SymbolTable__jule_tuple_s_1a7995777_Log {
	jule::Ptr<_1abcb6c2b_SymbolTable> __jule_result_arg0;
	jule::Slice<_1a7995777_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1abc50d08_Package__jule_tuple_s_1a7995777_Log {
	jule::Ptr<_1abc50d08_Package> __jule_result_arg0;
	jule::Slice<_1a7995777_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ab039532_Ast__jule_tuple_s_1a7995777_Log {
	jule::Ptr<_1ab039532_Ast> __jule_result_arg0;
	jule::Slice<_1a7995777_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a97237bc_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a97237bc_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a97237bc_Token__jule_tuple_sx_1a97237bc_Token {
	jule::Slice<jule::Ptr<_1a97237bc_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1a97237bc_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1a97237bc_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> __jule_result_arg0;
	jule::Slice<_1a7995777_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct _1a77e9433_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	_1a77e9433_Range16(void) = default;

	inline bool operator==(_1a77e9433_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1a77e9433_Range16 _other) { return !this->operator==(_other); }


};
struct _1a77e98a6_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	_1a77e98a6_Range32(void) = default;

	inline bool operator==(_1a77e98a6_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1a77e98a6_Range32 _other) { return !this->operator==(_other); }


};
struct _1a77e9d29_RangeTable {
	jule::Slice<_1a77e9433_Range16> _field_R16;
	jule::Slice<_1a77e98a6_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	

	_1a77e9d29_RangeTable(void) = default;


};
struct _1a78cccec_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	_1a78cccec_acceptRange(void) = default;

	inline bool operator==(_1a78cccec_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1a78cccec_acceptRange _other) { return !this->operator==(_other); }


};
inline jule::U8 _1a7916088_index(_1a7915b15_lazyBuff*, jule::I64);
inline void _1a791630d_append(_1a7915b15_lazyBuff*, jule::U8);
inline jule::Str _1a7916572_string(_1a7915b15_lazyBuff*);
struct _1a7915b15_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	

	_1a7915b15_lazyBuff(void) = default;


};
struct _1d95ba601_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_1d96aa317_Status> _field_Stat;
	

	_1d95ba601_DirEntry(void) = default;

	inline bool operator==(_1d95ba601_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_1d95ba601_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_1d95ba601_DirEntry>>> static__1a791a17a_Read(jule::Str);
inline jule::VoidExceptional static__1a791a389_Create(jule::Str);
inline jule::VoidExceptional static__1a791a598_Remove(jule::Str);
struct _1d9600aba_Directory {
	

	_1d9600aba_Directory(void) = default;

	inline bool operator==(_1d9600aba_Directory _other) { return true; }

	inline bool operator!=(_1d9600aba_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_1d7cc668d_File>> static__1d7cc75d4_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__1d7cc8937_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _1d7c8eed6_Write(_1d7cc668d_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1d7ca4e0d_Read(_1d7cc668d_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_1d7cc668d_File> static__1d7cc687a_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_1d7cc668d_File>> static__1d7ca6393_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1d95bb404_Read(jule::Str);
inline jule::VoidExceptional static__1d95bb9ba_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _1d7ca54c4_Seek(_1d7cc668d_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _1d7cc742a_Close(_1d7cc668d_File*);
struct _1d7cc668d_File {
	jule::Uintptr _field_handle = 0;
	

	_1d7cc668d_File(void) = default;

	inline bool operator==(_1d7cc668d_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_1d7cc668d_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_1d96aa317_Status>> static__1d7ca5c11_Of(jule::Str);
inline jule::Bool _1d95bace9_IsDir(_1d96aa317_Status*);
inline jule::Bool _1d9601725_IsReg(_1d96aa317_Status*);
struct _1d96aa317_Status {
	jule::U64 _field_Mode = 0;
	jule::U64 _field_Size = 0;
	

	_1d96aa317_Status(void) = default;

	inline bool operator==(_1d96aa317_Status _other) {
		return 
			this->_field_Mode == _other._field_Mode &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1d96aa317_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a79e0915_Cmd> static__1a79e0d44_New(jule::Str);
inline jule::Exceptional<jule::I64> _1a79e10a8_Spawn(_1a79e0915_Cmd*);
inline jule::Exceptional<jule::I64> _1a79e3e79_spawn(_1a79e0915_Cmd*);
struct _1a79e0915_Cmd {
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

	_1a79e0915_Cmd(void) = default;


};
struct _1a7995777_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	_1a7995777_Log(void) = default;

	inline bool operator==(_1a7995777_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1a7995777_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1a9723b74_Prec(_1a97237bc_Token*);
struct _1a97237bc_Token {
	jule::Ptr<_1a9728b57_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	_1a97237bc_Token(void) = default;

	inline bool operator==(_1a97237bc_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1a97237bc_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a9729064_IsOk(_1a9728b57_File*);
inline void _1a97292d9_Fill(_1a9728b57_File*, jule::Slice<jule::U8>);
inline jule::Str _1a972954d_Dir(_1a9728b57_File*);
inline jule::Str _1a97297b2_Name(_1a9728b57_File*);
inline jule::Uintptr _1a9729a26_Addr(_1a9728b57_File*);
inline jule::Str _1a9729d34_GetRow(_1a9728b57_File*, jule::I64);
struct _1a9728b57_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _field_Tokens;
	

	_1a9728b57_File(void) = default;


};
struct _1a972abae_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_1a972abae_kindPair(void) = default;

	inline bool operator==(_1a972abae_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1a972abae_kindPair _other) { return !this->operator==(_other); }


};
inline void _1a9731cb4_pushErr(_1a9731720_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1a97320d3_pushErrTok(_1a9731720_lex*, jule::Ptr<_1a97237bc_Token>&, jule::Str);
inline void _1a97322ae_lex(_1a9731720_lex*);
inline jule::Str _1a97325bc_id(_1a9731720_lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1a9732831_resume(_1a9731720_lex*);
inline void _1a9732aa6_lexLineComment(_1a9731720_lex*, jule::Ptr<_1a97237bc_Token>&);
inline void _1a9732d2b_lexRangeComment(_1a9731720_lex*, jule::Ptr<_1a97237bc_Token>&);
inline jule::Str _1a9733139_num(_1a9731720_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1a9733447_escapeSeq(_1a9731720_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1a97337ee_getRune(_1a9731720_lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _1a9733b0c_lexRune(_1a9731720_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1a9733d71_lexStr(_1a9731720_lex*);
inline jule::Bool _1a97340d5_isFirstTokenOfLine(_1a9731720_lex*);
inline void _1a97342b1_newLine(_1a9731720_lex*);
inline jule::Bool _1a97347ab_isOp(_1a9731720_lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_1a97237bc_Token>&);
inline jule::Bool _1a9734b63_lexBasicOps(_1a9731720_lex*, jule::Slice<jule::U8>, jule::Ptr<_1a97237bc_Token>&);
inline jule::Bool _1a973501a_lexId(_1a9731720_lex*, jule::Slice<jule::U8>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Bool _1a97353c2_lexNum(_1a9731720_lex*, jule::Slice<jule::U8>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Ptr<_1a97237bc_Token> _1a9735636_token(_1a9731720_lex*);
struct _1a9731720_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _field_tokens;
	jule::Ptr<_1a9728b57_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_1a7995777_Log> _field_errors;
	

	_1a9731720_lex(void) = default;


};
struct _1ab039532_Ast {
	jule::Ptr<_1a9728b57_File> _field_File;
	jule::Slice<jule::Ptr<_1ab03a720_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1ab086172_UseDecl>> _field_UseDecls;
	jule::Slice<_1ab03a324_Node> _field_Nodes;
	

	_1ab039532_Ast(void) = default;


};
struct _1ab03a324_Node {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_1ab03a324_Node(void) = default;

	inline bool operator==(_1ab03a324_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ab03a324_Node _other) { return !this->operator==(_other); }


};
struct _1ab03a720_Directive {
	jule::Ptr<_1a97237bc_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _field_Args;
	

	_1ab03a720_Directive(void) = default;


};
struct _1ab06d9b7_TypeDecl {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_1ab06d9b7_TypeDecl(void) = default;

	inline bool operator==(_1ab06d9b7_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab06d9b7_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab06e3e1_IsPrim(_1ab06e07d_IdentTypeDecl*);
struct _1ab06e07d_IdentTypeDecl {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>> _field_Generics;
	

	_1ab06e07d_IdentTypeDecl(void) = default;


};
struct _1ab06e6cc_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1ab06e07d_IdentTypeDecl>> _field_Idents;
	

	_1ab06e6cc_SubIdentTypeDecl(void) = default;


};
struct _1ab06ea84_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _field_Idents;
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Kind;
	

	_1ab06ea84_NamespaceTypeDecl(void) = default;


};
struct _1ab06ed70_SptrTypeDecl {
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Elem;
	

	_1ab06ed70_SptrTypeDecl(void) = default;

	inline bool operator==(_1ab06ed70_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ab06ed70_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ab07026b_SlcTypeDecl {
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Elem;
	

	_1ab07026b_SlcTypeDecl(void) = default;

	inline bool operator==(_1ab07026b_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ab07026b_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ab070557_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>> _field_Types;
	

	_1ab070557_TupleTypeDecl(void) = default;


};
inline jule::Bool _1ab070b95_IsUnsafe(_1ab070843_PtrTypeDecl*);
struct _1ab070843_PtrTypeDecl {
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Elem;
	

	_1ab070843_PtrTypeDecl(void) = default;

	inline bool operator==(_1ab070843_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ab070843_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab07139e_AutoSized(_1ab070ec5_ArrTypeDecl*);
struct _1ab070ec5_ArrTypeDecl {
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Elem;
	jule::Ptr<_1ab072ed8_Expr> _field_Size;
	

	_1ab070ec5_ArrTypeDecl(void) = default;

	inline bool operator==(_1ab070ec5_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1ab070ec5_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ab071723_MapTypeDecl {
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Key;
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Val;
	

	_1ab071723_MapTypeDecl(void) = default;

	inline bool operator==(_1ab071723_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1ab071723_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ab071aca_RetTypeDecl {
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _field_Idents;
	

	_1ab071aca_RetTypeDecl(void) = default;


};
struct _1ab072ed8_Expr {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1a97237bc_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_1ab072ed8_Expr(void) = default;

	inline bool operator==(_1ab072ed8_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab072ed8_Expr _other) { return !this->operator==(_other); }


};
struct _1ab0732c4_RangeExpr {
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	

	_1ab0732c4_RangeExpr(void) = default;

	inline bool operator==(_1ab0732c4_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab0732c4_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1ab073879_UseExpr {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	

	_1ab073879_UseExpr(void) = default;

	inline bool operator==(_1ab073879_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab073879_UseExpr _other) { return !this->operator==(_other); }


};
struct _1ab073b65_TupleExpr {
	jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _field_Expr;
	

	_1ab073b65_TupleExpr(void) = default;


};
inline jule::Bool _1ab07436e_IsNil(_1ab07401c_LitExpr*);
struct _1ab07401c_LitExpr {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Value;
	

	_1ab07401c_LitExpr(void) = default;

	inline bool operator==(_1ab07401c_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1ab07401c_LitExpr _other) { return !this->operator==(_other); }


};
struct _1ab074726_UnsafeExpr {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	

	_1ab074726_UnsafeExpr(void) = default;

	inline bool operator==(_1ab074726_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab074726_UnsafeExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab074eeb_IsSelf(_1ab074b99_IdentExpr*);
struct _1ab074b99_IdentExpr {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	

	_1ab074b99_IdentExpr(void) = default;

	inline bool operator==(_1ab074b99_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_1ab074b99_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1ab0753a3_UnaryExpr {
	jule::Ptr<_1a97237bc_Token> _field_Op;
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	

	_1ab0753a3_UnaryExpr(void) = default;

	inline bool operator==(_1ab0753a3_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab0753a3_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1ab07575a_VariadicExpr {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	

	_1ab07575a_VariadicExpr(void) = default;

	inline bool operator==(_1ab07575a_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab07575a_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1ab075b12_CastExpr {
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Kind;
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	

	_1ab075b12_CastExpr(void) = default;

	inline bool operator==(_1ab075b12_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab075b12_CastExpr _other) { return !this->operator==(_other); }


};
struct _1ab075eb9_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _field_Ns;
	jule::Ptr<_1a97237bc_Token> _field_Ident;
	

	_1ab075eb9_NsSelectionExpr(void) = default;


};
struct _1ab07643c_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	jule::Ptr<_1a97237bc_Token> _field_Ident;
	

	_1ab07643c_SubIdentExpr(void) = default;

	inline bool operator==(_1ab07643c_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ab07643c_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1ab0768b0_BinopExpr {
	jule::Ptr<_1ab072ed8_Expr> _field_Left;
	jule::Ptr<_1ab072ed8_Expr> _field_Right;
	jule::Ptr<_1a97237bc_Token> _field_Op;
	

	_1ab0768b0_BinopExpr(void) = default;

	inline bool operator==(_1ab0768b0_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ab0768b0_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab07732d_Unhandled(_1ab076eba_FnCallExpr*);
inline jule::Bool _1ab077592_Ignored(_1ab076eba_FnCallExpr*);
struct _1ab076eba_FnCallExpr {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _field_Args;
	jule::Ptr<_1ab07d950_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	

	_1ab076eba_FnCallExpr(void) = default;


};
inline jule::Bool _1ab077c9b_IsTargeted(_1ab077949_FieldExprPair*);
struct _1ab077949_FieldExprPair {
	jule::Ptr<_1a97237bc_Token> _field_Field;
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	

	_1ab077949_FieldExprPair(void) = default;

	inline bool operator==(_1ab077949_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab077949_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1ab078197_StructLit {
	jule::Ptr<_1a97237bc_Token> _field_End;
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _field_Exprs;
	

	_1ab078197_StructLit(void) = default;


};
inline jule::Bool _1ab07896c_IsEmpty(_1ab07861a_BraceLit*);
struct _1ab07861a_BraceLit {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1a97237bc_Token> _field_End;
	jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _field_Exprs;
	

	_1ab07861a_BraceLit(void) = default;


};
struct _1ab078de0_KeyValPair {
	jule::Ptr<_1ab072ed8_Expr> _field_Key;
	jule::Ptr<_1ab072ed8_Expr> _field_Val;
	jule::Ptr<_1a97237bc_Token> _field_Colon;
	

	_1ab078de0_KeyValPair(void) = default;

	inline bool operator==(_1ab078de0_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1ab078de0_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab079907_IsEmpty(_1ab0795c7_SliceExpr*);
struct _1ab0795c7_SliceExpr {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1a97237bc_Token> _field_End;
	jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _field_Exprs;
	

	_1ab0795c7_SliceExpr(void) = default;


};
struct _1ab079e46_IndexingExpr {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1a97237bc_Token> _field_End;
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	jule::Ptr<_1ab072ed8_Expr> _field_Index;
	

	_1ab079e46_IndexingExpr(void) = default;

	inline bool operator==(_1ab079e46_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1ab079e46_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1ab07a551_SlicingExpr {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1a97237bc_Token> _field_End;
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	jule::Ptr<_1ab072ed8_Expr> _field_Start;
	jule::Ptr<_1ab072ed8_Expr> _field_To;
	

	_1ab07a551_SlicingExpr(void) = default;

	inline bool operator==(_1ab07a551_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1ab07a551_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1ab07a83c_Constraint {
	jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>> _field_Mask;
	

	_1ab07a83c_Constraint(void) = default;


};
struct _1ab07acb0_GenericDecl {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab07a83c_Constraint> _field_Constraint;
	

	_1ab07acb0_GenericDecl(void) = default;

	inline bool operator==(_1ab07acb0_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1ab07acb0_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1ab07b167_LabelSt {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Ident;
	

	_1ab07b167_LabelSt(void) = default;

	inline bool operator==(_1ab07b167_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ab07b167_LabelSt _other) { return !this->operator==(_other); }


};
struct _1ab07b51e_GotoSt {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1a97237bc_Token> _field_Label;
	

	_1ab07b51e_GotoSt(void) = default;

	inline bool operator==(_1ab07b51e_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ab07b51e_GotoSt _other) { return !this->operator==(_other); }


};
struct _1ab07b80a_FallSt {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	

	_1ab07b80a_FallSt(void) = default;

	inline bool operator==(_1ab07b80a_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1ab07b80a_FallSt _other) { return !this->operator==(_other); }


};
struct _1ab07be15_AssignLeft {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	

	_1ab07be15_AssignLeft(void) = default;

	inline bool operator==(_1ab07be15_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab07be15_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1ab07c454_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1a97237bc_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1ab07be15_AssignLeft>> _field_Left;
	jule::Ptr<_1ab072ed8_Expr> _field_Right;
	

	_1ab07c454_AssignSt(void) = default;


};
struct _1ab07d345_Stmt {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_1ab07d345_Stmt(void) = default;

	inline bool operator==(_1ab07d345_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ab07d345_Stmt _other) { return !this->operator==(_other); }


};
struct _1ab07d950_ScopeTree {
	jule::Ptr<_1ab07d950_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1ab07d345_Stmt> _field_Stmts;
	jule::Ptr<_1a97237bc_Token> _field_End;
	

	_1ab07d950_ScopeTree(void) = default;


};
inline jule::Bool _1ab07e489_IsSelf(_1ab07e126_ParamDecl*);
inline jule::Bool _1ab07e6ed_IsRef(_1ab07e126_ParamDecl*);
struct _1ab07e126_ParamDecl {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	_1ab07e126_ParamDecl(void) = default;

	inline bool operator==(_1ab07e126_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ab07e126_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab080798_IsAnon(_1ab080446_FnDecl*);
struct _1ab080446_FnDecl {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab03a720_Directive>> _field_Directives;
	jule::Ptr<_1ab07d950_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>> _field_Generics;
	jule::Ptr<_1ab071aca_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1ab07e126_ParamDecl>> _field_Params;
	

	_1ab080446_FnDecl(void) = default;


};
struct _1ab081425_VarDecl {
	jule::Ptr<_1ab07d950_ScopeTree> _field_Scope;
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1ab03a720_Directive>> _field_Directives;
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Kind;
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	

	_1ab081425_VarDecl(void) = default;


};
struct _1ab0817cc_RetSt {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	

	_1ab0817cc_RetSt(void) = default;

	inline bool operator==(_1ab0817cc_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab0817cc_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab08228e_IsInf(_1ab081e3c_Iter*);
struct _1ab081e3c_Iter {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1ab07d950_ScopeTree> _field_Scope;
	

	_1ab081e3c_Iter(void) = default;

	inline bool operator==(_1ab081e3c_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab081e3c_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab082a64_IsWhileNext(_1ab082712_WhileKind*);
struct _1ab082712_WhileKind {
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1a97237bc_Token> _field_NextToken;
	

	_1ab082712_WhileKind(void) = default;

	inline bool operator==(_1ab082712_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1ab082712_WhileKind _other) { return !this->operator==(_other); }


};
struct _1ab0830a3_RangeKind {
	jule::Ptr<_1a97237bc_Token> _field_InToken;
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	jule::Ptr<_1ab081425_VarDecl> _field_KeyA;
	jule::Ptr<_1ab081425_VarDecl> _field_KeyB;
	

	_1ab0830a3_RangeKind(void) = default;

	inline bool operator==(_1ab0830a3_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1ab0830a3_RangeKind _other) { return !this->operator==(_other); }


};
struct _1ab08345a_BreakSt {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1a97237bc_Token> _field_Label;
	

	_1ab08345a_BreakSt(void) = default;

	inline bool operator==(_1ab08345a_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ab08345a_BreakSt _other) { return !this->operator==(_other); }


};
struct _1ab083812_ContSt {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1a97237bc_Token> _field_Label;
	

	_1ab083812_ContSt(void) = default;

	inline bool operator==(_1ab083812_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ab083812_ContSt _other) { return !this->operator==(_other); }


};
struct _1ab083c85_If {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	jule::Ptr<_1ab07d950_ScopeTree> _field_Scope;
	

	_1ab083c85_If(void) = default;

	inline bool operator==(_1ab083c85_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab083c85_If _other) { return !this->operator==(_other); }


};
struct _1ab08413c_Else {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1ab07d950_ScopeTree> _field_Scope;
	

	_1ab08413c_Else(void) = default;

	inline bool operator==(_1ab08413c_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab08413c_Else _other) { return !this->operator==(_other); }


};
struct _1ab0845b0_Conditional {
	jule::Ptr<_1ab083c85_If> _field_Head;
	jule::Slice<jule::Ptr<_1ab083c85_If>> _field_Tail;
	jule::Ptr<_1ab08413c_Else> _field_Default;
	

	_1ab0845b0_Conditional(void) = default;


};
struct _1ab084c86_TypeAliasDecl {
	jule::Ptr<_1ab07d950_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Kind;
	

	_1ab084c86_TypeAliasDecl(void) = default;

	inline bool operator==(_1ab084c86_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab084c86_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1ab085209_Case {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1ab07d950_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _field_Exprs;
	

	_1ab085209_Case(void) = default;


};
struct _1ab0858d0_MatchCase {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1a97237bc_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1ab085209_Case>> _field_Cases;
	jule::Ptr<_1ab08413c_Else> _field_Default;
	

	_1ab0858d0_MatchCase(void) = default;


};
struct _1ab086172_UseDecl {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _field_Selected;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	

	_1ab086172_UseDecl(void) = default;


};
inline jule::Bool _1ab086947_AutoExpr(_1ab0865e5_EnumItemDecl*);
struct _1ab0865e5_EnumItemDecl {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	

	_1ab0865e5_EnumItemDecl(void) = default;

	inline bool operator==(_1ab0865e5_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab0865e5_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab0876a1_DefaultTyped(_1ab08711d_EnumDecl*);
struct _1ab08711d_EnumDecl {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ab0865e5_EnumItemDecl>> _field_Items;
	jule::Ptr<_1a97237bc_Token> _field_End;
	

	_1ab08711d_EnumDecl(void) = default;


};
struct _1ab087b24_TypeEnumItemDecl {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Kind;
	

	_1ab087b24_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1ab087b24_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab087b24_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1ab08822e_TypeEnumDecl {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab087b24_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1a97237bc_Token> _field_End;
	

	_1ab08822e_TypeEnumDecl(void) = default;


};
struct _1ab08842c_FieldDecl {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Kind;
	jule::Ptr<_1ab072ed8_Expr> _field_Default;
	

	_1ab08842c_FieldDecl(void) = default;

	inline bool operator==(_1ab08842c_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ab08842c_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1ab088bd0_StructDecl {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1a97237bc_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab08842c_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1ab03a720_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>> _field_Generics;
	

	_1ab088bd0_StructDecl(void) = default;


};
struct _1ab0892da_TraitDecl {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1a97237bc_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1ab080446_FnDecl>> _field_Methods;
	

	_1ab0892da_TraitDecl(void) = default;


};
inline jule::Bool _1ab089c58_IsTraitImpl(_1ab0898e5_Impl*);
inline jule::Bool _1ab089ebc_IsStructImpl(_1ab0898e5_Impl*);
struct _1ab0898e5_Impl {
	jule::Ptr<_1a97237bc_Token> _field_End;
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Base;
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1ab080446_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1ab081425_VarDecl>> _field_Statics;
	

	_1ab0898e5_Impl(void) = default;


};
struct _1ab93ae00_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	_1ab93ae00_floatInfo(void) = default;

	inline bool operator==(_1ab93ae00_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1ab93ae00_floatInfo _other) { return !this->operator==(_other); }


};
struct _1ab5c106e_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	

	_1ab5c106e_decimalSlice(void) = default;


};
struct _1aba7de22_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	_1aba7de22_leftCheat(void) = default;

	inline bool operator==(_1aba7de22_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1aba7de22_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aba7aeb8_set(_1aba7e32e_decimal*, jule::Str);
inline __jule_tuple_u64__jule_tuple_bool _1aba7b0ea_floatBits(_1aba7e32e_decimal*, _1ab93ae00_floatInfo&);
inline void _1aba7e51b_assign(_1aba7e32e_decimal*, jule::U64);
inline void _1aba7e64d_shift(_1aba7e32e_decimal*, jule::I64);
inline void _1aba7e780_roundDown(_1aba7e32e_decimal*, jule::I64);
inline void _1aba7e8b2_roundUp(_1aba7e32e_decimal*, jule::I64);
inline void _1aba7e9e4_round(_1aba7e32e_decimal*, jule::I64);
inline jule::U64 _1aba7eb26_roundedInteger(_1aba7e32e_decimal*);
struct _1aba7e32e_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	_1aba7e32e_decimal(void) = default;

	inline bool operator==(_1aba7e32e_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1aba7e32e_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aba86b94_Const> static__1aba86d81_NewI64(jule::I64);
inline jule::Ptr<_1aba86b94_Const> static__1aba86eb3_NewU64(jule::U64);
inline jule::Ptr<_1aba86b94_Const> static__1aba870e5_NewBool(jule::Bool);
inline jule::Ptr<_1aba86b94_Const> static__1aba87227_NewStr(jule::Str);
inline jule::Ptr<_1aba86b94_Const> static__1aba87359_NewF64(jule::F64);
inline jule::Ptr<_1aba86b94_Const> static__1aba8748b_NewNil(void);
inline jule::I64 _1aba87887_ReadI64(_1aba86b94_Const*);
inline jule::U64 _1aba879b9_ReadU64(_1aba86b94_Const*);
inline jule::Bool _1aba87aeb_ReadBool(_1aba86b94_Const*);
inline jule::Str _1aba87c2d_ReadStr(_1aba86b94_Const*);
inline jule::F64 _1aba87d60_ReadF64(_1aba86b94_Const*);
inline jule::I64 _1aba87e92_AsI64(_1aba86b94_Const*);
inline jule::U64 _1aba880c4_AsU64(_1aba86b94_Const*);
inline jule::F64 _1aba88206_AsF64(_1aba86b94_Const*);
inline void _1aba88338_SetI64(_1aba86b94_Const*, jule::I64);
inline void _1aba8846a_SetU64(_1aba86b94_Const*, jule::U64);
inline void _1aba8859c_SetBool(_1aba86b94_Const*, jule::Bool);
inline void _1aba886ce_SetStr(_1aba86b94_Const*, jule::Str);
inline void _1aba88811_SetF64(_1aba86b94_Const*, jule::F64);
inline void _1aba88943_SetNil(_1aba86b94_Const*);
inline jule::Bool _1aba88a75_IsI64(_1aba86b94_Const*);
inline jule::Bool _1aba88ba7_IsU64(_1aba86b94_Const*);
inline jule::Bool _1aba88cd9_IsBool(_1aba86b94_Const*);
inline jule::Bool _1aba88ed7_IsStr(_1aba86b94_Const*);
inline jule::Bool _1aba8924b_IsF64(_1aba86b94_Const*);
inline jule::Bool _1aba894b0_IsNil(_1aba86b94_Const*);
inline jule::Bool _1aba897bd_AreSameTypes(_1aba86b94_Const*, _1aba86b94_Const);
inline jule::Bool _1aba89acb_And(_1aba86b94_Const*, _1aba86b94_Const);
inline jule::Bool _1aba89dd9_Or(_1aba86b94_Const*, _1aba86b94_Const);
inline jule::Bool _1aba8a1e7_Eq(_1aba86b94_Const*, _1aba86b94_Const);
inline jule::Bool _1aba8a505_Lt(_1aba86b94_Const*, _1aba86b94_Const);
inline jule::Bool _1aba8a813_LtEq(_1aba86b94_Const*, _1aba86b94_Const);
inline jule::Bool _1aba8ab21_Gt(_1aba86b94_Const*, _1aba86b94_Const);
inline jule::Bool _1aba8ae2e_GtEq(_1aba86b94_Const*, _1aba86b94_Const);
inline jule::Bool _1aba8b23c_Add(_1aba86b94_Const*, _1aba86b94_Const);
inline jule::Bool _1aba8b54a_Sub(_1aba86b94_Const*, _1aba86b94_Const);
inline jule::Bool _1aba8b858_Mul(_1aba86b94_Const*, _1aba86b94_Const);
inline jule::Bool _1aba8bb66_Div(_1aba86b94_Const*, _1aba86b94_Const);
inline jule::Bool _1aba8be74_Mod(_1aba86b94_Const*, _1aba86b94_Const);
inline jule::Bool _1aba8c282_BitwiseAnd(_1aba86b94_Const*, _1aba86b94_Const);
inline jule::Bool _1aba8c590_BitwiseOr(_1aba86b94_Const*, _1aba86b94_Const);
inline jule::Bool _1aba8c89d_Xor(_1aba86b94_Const*, _1aba86b94_Const);
inline jule::Bool _1aba8cbab_Lshift(_1aba86b94_Const*, _1aba86b94_Const);
inline jule::Bool _1aba8ceb9_Rshift(_1aba86b94_Const*, _1aba86b94_Const);
struct _1aba86b94_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	_1aba86b94_Const(void) = default;

	inline jule::Bool operator==(_1aba86b94_Const _other) { return _1aba8a1e7_Eq(this, _other); }

	inline bool operator!=(_1aba86b94_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1aba86b94_Const _other) { return _1aba8ab21_Gt(this, _other); }

	inline jule::Bool operator>=(_1aba86b94_Const _other) { return _1aba8ae2e_GtEq(this, _other); }

	inline jule::Bool operator<(_1aba86b94_Const _other) { return _1aba8a505_Lt(this, _other); }

	inline jule::Bool operator<=(_1aba86b94_Const _other) { return _1aba8a813_LtEq(this, _other); }


};
inline jule::Ptr<_1ab08a396_FieldIns> _1ab04695c_instance(jule::Ptr<_1ab05e216_Field>);
struct _1ab05e216_Field {
	jule::Ptr<_1ab08a1a9_Struct> _field_Owner;
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1abcebdb5_TypeSymbol> _field_Kind;
	jule::Ptr<_1ab072ed8_Expr> _field_Default;
	

	_1ab05e216_Field(void) = default;

	inline bool operator==(_1ab05e216_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ab05e216_Field _other) { return !this->operator==(_other); }


};
struct _1ab06685b_Operators {
	jule::Ptr<_1abaa1d79_FnIns> _field_Eq;
	jule::Ptr<_1abaa1d79_FnIns> _field_Gt;
	jule::Ptr<_1abaa1d79_FnIns> _field_GtEq;
	jule::Ptr<_1abaa1d79_FnIns> _field_Lt;
	jule::Ptr<_1abaa1d79_FnIns> _field_LtEq;
	jule::Ptr<_1abaa1d79_FnIns> _field_Shl;
	jule::Ptr<_1abaa1d79_FnIns> _field_Shr;
	jule::Ptr<_1abaa1d79_FnIns> _field_Add;
	jule::Ptr<_1abaa1d79_FnIns> _field_Sub;
	jule::Ptr<_1abaa1d79_FnIns> _field_Div;
	jule::Ptr<_1abaa1d79_FnIns> _field_Mul;
	jule::Ptr<_1abaa1d79_FnIns> _field_Mod;
	jule::Ptr<_1abaa1d79_FnIns> _field_BitAnd;
	jule::Ptr<_1abaa1d79_FnIns> _field_BitOr;
	jule::Ptr<_1abaa1d79_FnIns> _field_BitXor;
	jule::Ptr<_1abaa1d79_FnIns> _field_Neg;
	jule::Ptr<_1abaa1d79_FnIns> _field_Pos;
	jule::Ptr<_1abaa1d79_FnIns> _field_BitNot;
	jule::Ptr<_1abaa1d79_FnIns> _field_AddAssign;
	jule::Ptr<_1abaa1d79_FnIns> _field_SubAssign;
	jule::Ptr<_1abaa1d79_FnIns> _field_DivAssign;
	jule::Ptr<_1abaa1d79_FnIns> _field_MulAssign;
	jule::Ptr<_1abaa1d79_FnIns> _field_ModAssign;
	jule::Ptr<_1abaa1d79_FnIns> _field_ShlAssign;
	jule::Ptr<_1abaa1d79_FnIns> _field_ShrAssign;
	jule::Ptr<_1abaa1d79_FnIns> _field_BitOrAssign;
	jule::Ptr<_1abaa1d79_FnIns> _field_BitAndAssign;
	jule::Ptr<_1abaa1d79_FnIns> _field_BitXorAssign;
	

	_1ab06685b_Operators(void) = default;

	inline bool operator==(_1ab06685b_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1ab06685b_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ab08a583_StructIns> _1ab04a730_instance(jule::Ptr<_1ab08a1a9_Struct>);
inline jule::Ptr<_1ab08a583_StructIns> _1ab04b489_appendInstance(_1ab08a1a9_Struct*, jule::Ptr<_1ab08a583_StructIns>&);
inline jule::Ptr<_1aba9e1c8_Fn> _1ab04e5e1_FindMethod(_1ab08a1a9_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1abc73ee6_Var> _1ab04da41_FindStatic(_1ab08a1a9_Struct*, jule::Str);
inline jule::Ptr<_1ab05e216_Field> _1ab050e1c_FindField(_1ab08a1a9_Struct*, jule::Str);
inline jule::Bool _1ab050218_IsImplements(_1ab08a1a9_Struct*, jule::Ptr<_1abab10ca_Trait>);
inline jule::Bool _1ab0541d9_IsDerives(_1ab08a1a9_Struct*, jule::Str);
inline jule::Bool _1ab05489e_IsUses(_1ab08a1a9_Struct*, jule::Ptr<_1ab08a1a9_Struct>);
inline jule::Bool _1ab059d6b_HasRefAccessible(_1ab08a1a9_Struct*);
struct _1ab08a1a9_Struct {
	jule::Ptr<_1abc55eea_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1ab08a1a9_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1ab08a1a9_Struct>> _field_Uses;
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab05e216_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1aba9e1c8_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1abc73ee6_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1ab03a720_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1abab10ca_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1ab08a583_StructIns>> _field_Instances;
	

	_1ab08a1a9_Struct(void) = default;


};
struct _1ab08a396_FieldIns {
	jule::Ptr<_1ab05e216_Field> _field_Decl;
	jule::Ptr<_1abce79d7_TypeKind> _field_Kind;
	jule::Ptr<_1abcbba55_Data> _field_Default;
	

	_1ab08a396_FieldIns(void) = default;

	inline bool operator==(_1ab08a396_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ab08a396_FieldIns _other) { return !this->operator==(_other); }


};
struct _1aba90928_OperandExprModel {
	jule::Ptr<_1abce79d7_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	_1aba90928_OperandExprModel(void) = default;

	inline bool operator==(_1aba90928_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1aba90928_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1aba90de0_BinopExprModel {
	jule::Ptr<_1aba90928_OperandExprModel> _field_Left;
	jule::Ptr<_1aba90928_OperandExprModel> _field_Right;
	jule::Ptr<_1a97237bc_Token> _field_Op;
	

	_1aba90de0_BinopExprModel(void) = default;

	inline bool operator==(_1aba90de0_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1aba90de0_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1aba91297_UnaryExprModel {
	jule::Ptr<_1abcbba55_Data> _field_Expr;
	jule::Ptr<_1a97237bc_Token> _field_Op;
	

	_1aba91297_UnaryExprModel(void) = default;

	inline bool operator==(_1aba91297_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1aba91297_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1aba91693_StructArgExprModel {
	jule::Ptr<_1ab08a396_FieldIns> _field_Field;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1aba91693_StructArgExprModel(void) = default;

	inline bool operator==(_1aba91693_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aba91693_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1aba91a4a_StructLitExprModel {
	jule::Ptr<_1ab08a583_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1aba91693_StructArgExprModel>> _field_Args;
	

	_1aba91a4a_StructLitExprModel(void) = default;


};
struct _1aba91d58_AllocStructLitExprModel {
	jule::Ptr<_1aba91a4a_StructLitExprModel> _field_Lit;
	

	_1aba91d58_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1aba91d58_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1aba91d58_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1aba923a8_CastingExprModel {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1abce79d7_TypeKind> _field_Kind;
	jule::Ptr<_1abce79d7_TypeKind> _field_ExprKind;
	

	_1aba923a8_CastingExprModel(void) = default;

	inline bool operator==(_1aba923a8_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1aba923a8_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1aba92c5a_FnCallExprModel {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1abaa1d79_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1ababdcdb_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	

	_1aba92c5a_FnCallExprModel(void) = default;


};
struct _1aba93112_SliceExprModel {
	jule::Ptr<_1abce79d7_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1aba93112_SliceExprModel(void) = default;


};
struct _1aba93585_IndexingExprModel {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1abcbba55_Data> _field_Expr;
	jule::Ptr<_1abcbba55_Data> _field_Index;
	

	_1aba93585_IndexingExprModel(void) = default;

	inline bool operator==(_1aba93585_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1aba93585_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1aba9393c_AnonFnExprModel {
	jule::Ptr<_1abaa1d79_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	_1aba9393c_AnonFnExprModel(void) = default;

	inline bool operator==(_1aba9393c_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1aba9393c_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1aba93ce4_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	_1aba93ce4_KeyValPairExprModel(void) = default;

	inline bool operator==(_1aba93ce4_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1aba93ce4_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1aba94267_MapExprModel {
	jule::Ptr<_1abce79d7_TypeKind> _field_KeyKind;
	jule::Ptr<_1abce79d7_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1aba93ce4_KeyValPairExprModel>> _field_Entries;
	

	_1aba94267_MapExprModel(void) = default;


};
struct _1aba947a6_SlicingExprModel {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_1aba947a6_SlicingExprModel(void) = default;

	inline bool operator==(_1aba947a6_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1aba947a6_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1aba94ce5_TraitSubIdentExprModel {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1aba9e1c8_Fn> _field_Method;
	jule::Ptr<_1abab10ca_Trait> _field_Trt;
	

	_1aba94ce5_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1aba94ce5_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1aba94ce5_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1aba95697_StructSubIdentExprModel {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Ptr<_1abcbba55_Data> _field_Expr;
	jule::Ptr<_1abce79d7_TypeKind> _field_ExprKind;
	jule::Ptr<_1abaa1d79_FnIns> _field_Method;
	jule::Ptr<_1ab08a396_FieldIns> _field_Field;
	jule::Ptr<_1ab08a583_StructIns> _field_Owner;
	

	_1aba95697_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1aba95697_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1aba95697_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1aba95a3d_StructStaticIdentExprModel {
	jule::Ptr<_1ab08a583_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1abaa1d79_FnIns> _field_Method;
	

	_1aba95a3d_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1aba95a3d_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1aba95a3d_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1aba95e06_ArrayExprModel {
	jule::Ptr<_1abd03ac0_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1aba95e06_ArrayExprModel(void) = default;


};
struct _1aba961e2_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	_1aba961e2_CommonIdentExprModel(void) = default;

	inline bool operator==(_1aba961e2_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aba961e2_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1aba96753_CommonSubIdentExprModel {
	jule::Ptr<_1abce79d7_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Ident;
	

	_1aba96753_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1aba96753_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aba96753_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1aba96a50_TupleExprModel {
	jule::Slice<jule::Ptr<_1abcbba55_Data>> _field_Datas;
	

	_1aba96a50_TupleExprModel(void) = default;


};
struct _1aba96e29_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1aba96e29_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1aba96e29_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1aba96e29_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aba97314_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1aba97314_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1aba97314_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1aba97314_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aba97633_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1aba97633_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1aba97633_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aba97633_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aba97a1d_BuiltinNewCallExprModel {
	jule::Ptr<_1abce79d7_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	_1aba97a1d_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1aba97a1d_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1aba97a1d_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aba97e08_BuiltinPanicCallExprModel {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1aba97e08_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1aba97e08_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aba97e08_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aba983ae_BuiltinAssertCallExprModel {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	_1aba983ae_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1aba983ae_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1aba983ae_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aba98865_BuiltinMakeCallExprModel {
	jule::Ptr<_1abce79d7_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	_1aba98865_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1aba98865_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1aba98865_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aba98c50_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	_1aba98c50_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1aba98c50_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1aba98c50_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aba9906e_BuiltinLenCallExprModel {
	jule::Ptr<_1abcbba55_Data> _field_Expr;
	

	_1aba9906e_BuiltinLenCallExprModel(void) = default;

	inline bool operator==(_1aba9906e_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aba9906e_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aba9938d_BuiltinCapCallExprModel {
	jule::Ptr<_1abcbba55_Data> _field_Expr;
	

	_1aba9938d_BuiltinCapCallExprModel(void) = default;

	inline bool operator==(_1aba9938d_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aba9938d_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aba99a42_BuiltinDeleteCallExprModel {
	jule::Ptr<_1abcbba55_Data> _field_Dest;
	jule::Ptr<_1abcbba55_Data> _field_Key;
	

	_1aba99a42_BuiltinDeleteCallExprModel(void) = default;

	inline bool operator==(_1aba99a42_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1aba99a42_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aba99da5_BuiltinCopyCallExprModel {
	jule::Ptr<_1abcbba55_Data> _field_Dest;
	jule::Ptr<_1abcbba55_Data> _field_Src;
	

	_1aba99da5_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1aba99da5_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1aba99da5_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aba9a290_BuiltinErrorCallExprModel {
	jule::Ptr<_1abaa1d79_FnIns> _field_Func;
	jule::Ptr<_1abcbba55_Data> _field_Err;
	

	_1aba9a290_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1aba9a290_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1aba9a290_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aba9a58c_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1aba9a58c_SizeofExprModel(void) = default;

	inline bool operator==(_1aba9a58c_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aba9a58c_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1aba9a878_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1aba9a878_AlignofExprModel(void) = default;

	inline bool operator==(_1aba9a878_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aba9a878_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1aba9ab64_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	_1aba9ab64_RuneExprModel(void) = default;

	inline bool operator==(_1aba9ab64_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1aba9ab64_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1aba9ae72_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1aba9ae72_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1aba9ae72_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aba9ae72_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1aba9b33a_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

	_1aba9b33a_BackendEmitExprModel(void) = default;


};
struct _1aba9b626_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1aba9b626_FreeExprModel(void) = default;

	inline bool operator==(_1aba9b626_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aba9b626_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1aba9c1b5_RetType {
	jule::Ptr<_1abcebdb5_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _field_Idents;
	

	_1aba9c1b5_RetType(void) = default;


};
inline jule::Ptr<_1abaa0eaa_ParamIns> _1aba9cc54_instance(jule::Ptr<_1aba9c88b_Param>);
inline jule::Bool _1aba9ceb8_IsSelf(_1aba9c88b_Param*);
inline jule::Bool _1aba9d22c_IsRef(_1aba9c88b_Param*);
struct _1aba9c88b_Param {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1abcebdb5_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	_1aba9c88b_Param(void) = default;

	inline bool operator==(_1aba9c88b_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aba9c88b_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aba9e63a_IsVoid(_1aba9e1c8_Fn*);
inline jule::Bool _1aba9e89e_IsMethod(_1aba9e1c8_Fn*);
inline jule::Bool _1aba9eb13_IsEntryPoint(_1aba9e1c8_Fn*);
inline jule::Bool _1aba9ed77_IsInit(_1aba9e1c8_Fn*);
inline jule::Bool _1abaa00db_IsAnon(_1aba9e1c8_Fn*);
inline jule::Bool _1abaa0350_AnyVar(_1aba9e1c8_Fn*);
inline jule::Ptr<_1abaa1d79_FnIns> _1abaa05b4_instanceForce(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Ptr<_1abaa1d79_FnIns> _1abaa0828_instance(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Ptr<_1abaa1d79_FnIns> _1abaa0b03_appendInstance(_1aba9e1c8_Fn*, jule::Ptr<_1abaa1d79_FnIns>&);
struct _1aba9e1c8_Fn {
	jule::Ptr<_1abc55eea_Sema> _field_sema;
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab03a720_Directive>> _field_Directives;
	jule::Ptr<_1ab07d950_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>> _field_Generics;
	jule::Ptr<_1aba9c1b5_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1aba9c88b_Param>> _field_Params;
	jule::Ptr<_1ab08a1a9_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1abaa1d79_FnIns>> _field_Instances;
	

	_1aba9e1c8_Fn(void) = default;


};
inline jule::Str _1abaa1384_Str(_1abaa0eaa_ParamIns*);
struct _1abaa0eaa_ParamIns {
	jule::Ptr<_1aba9c88b_Param> _field_Decl;
	jule::Ptr<_1abce79d7_TypeKind> _field_Kind;
	

	_1abaa0eaa_ParamIns(void) = default;

	inline bool operator==(_1abaa0eaa_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1abaa0eaa_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1abaa21a9_Str(_1abaa1d79_FnIns*);
inline jule::Bool _1abaa24b7_Equal(jule::Ptr<_1abaa1d79_FnIns>, jule::Ptr<_1abce79d7_TypeKind>);
inline jule::Bool _1abaa2929_EqualFn(jule::Ptr<_1abaa1d79_FnIns>, jule::Ptr<_1abaa1d79_FnIns>&);
inline jule::Bool _1abaa2c37_equalTrait(jule::Ptr<_1abaa1d79_FnIns>, jule::Ptr<_1abaa1d79_FnIns>&);
inline jule::Slice<jule::Ptr<_1abce79d7_TypeKind>> _1abaa2e9b_Types(_1abaa1d79_FnIns*);
inline jule::Bool _1abaa3210_IsBuiltin(_1abaa1d79_FnIns*);
inline jule::Bool _1abaa3474_IsAnon(_1abaa1d79_FnIns*);
inline jule::Bool _1abaa3782_Same(_1abaa1d79_FnIns*, jule::Ptr<_1abaa1d79_FnIns>);
inline jule::Str _1abaa3a90_GetKindStr(_1abaa1d79_FnIns*, jule::Bool);
struct _1abaa1d79_FnIns {
	jule::Ptr<_1ab08a583_StructIns> _field_Owner;
	jule::Ptr<_1aba9e1c8_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1abce62aa_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1abaa0eaa_ParamIns>> _field_Params;
	jule::Ptr<_1abce79d7_TypeKind> _field_Result;
	jule::Ptr<_1ababdcdb_Scope> _field_Scope;
	jule::Ptr<_1abaa4ce4_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)> _field_caller;
	jule::Bool _field_reloaded = false;
	

	_1abaa1d79_FnIns(void) = default;


};
inline jule::Ptr<_1abaa4ce4_ReferenceStack> static__1abaa507a_new(void);
inline jule::I64 _1abaa5410_Len(_1abaa4ce4_ReferenceStack*);
inline jule::Any _1abaa571d_At(_1abaa4ce4_ReferenceStack*, jule::I64);
inline void _1abaa5993_Push(_1abaa4ce4_ReferenceStack*, jule::Any);
inline jule::Bool _1bc0dee34_Exist(_1abaa4ce4_ReferenceStack*, jule::Ptr<_1abaa1d79_FnIns>);
inline jule::Bool _1bc104157_Exist(_1abaa4ce4_ReferenceStack*, jule::Ptr<_1abc73ee6_Var>);
inline jule::Bool _1bc1d5403_Exist(_1abaa4ce4_ReferenceStack*, jule::Ptr<_1ab08a583_StructIns>);
inline jule::Bool _1bc45ea67_Exist(_1abaa4ce4_ReferenceStack*, jule::Ptr<_1abab10ca_Trait>);
struct _1abaa4ce4_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

	_1abaa4ce4_ReferenceStack(void) = default;


};
struct _1abaa6158_Pass {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Text;
	

	_1abaa6158_Pass(void) = default;

	inline bool operator==(_1abaa6158_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1abaa6158_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1abaaa602_symbolBuilder> _1abaaaaa8_getRoot(jule::Ptr<_1abaaa602_symbolBuilder>);
inline void _1abaaae71_pushErr(_1abaaa602_symbolBuilder*, jule::Ptr<_1a97237bc_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1abaab339_pushErrText(_1abaaa602_symbolBuilder*, jule::Ptr<_1a97237bc_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1abaab658_pushSuggestion(_1abaaa602_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1abaaba10_checkCppUseDeclPath(_1abaaa602_symbolBuilder*, jule::Ptr<_1ab086172_UseDecl>&, jule::Str);
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abaabcda_buildCppHeaderImport(_1abaaa602_symbolBuilder*, jule::Ptr<_1ab086172_UseDecl>&);
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abaac0e8_buildStdImport(_1abaaa602_symbolBuilder*, jule::Ptr<_1ab086172_UseDecl>&);
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abaac406_buildIdentImport(jule::Ptr<_1abaaa602_symbolBuilder>, jule::Ptr<_1ab086172_UseDecl>&);
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abaac714_buildImport(jule::Ptr<_1abaaa602_symbolBuilder>, jule::Ptr<_1ab086172_UseDecl>&);
inline jule::Bool _1abaaca22_checkDuplicateUseDecl(_1abaaa602_symbolBuilder*, jule::Ptr<_1abc4cd9e_ImportInfo>&);
inline void _1abaacd41_implImportSelections(_1abaaa602_symbolBuilder*, jule::Ptr<_1abc4cd9e_ImportInfo>&, jule::Ptr<_1ab086172_UseDecl>&);
inline jule::Str _1abaad14e_getAsLinkPath(jule::Ptr<_1abaaa602_symbolBuilder>, jule::Str);
inline void _1abaad517_pushCycleError(jule::Ptr<_1abaaa602_symbolBuilder>, jule::Ptr<_1abaaa602_symbolBuilder>&, jule::Str, jule::Str&);
inline void _1abaad8d0_pushCrossCycleError(jule::Ptr<_1abaaa602_symbolBuilder>, jule::Ptr<_1abaaa602_symbolBuilder>&, jule::Ptr<_1abc4cd9e_ImportInfo>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Bool _1abaadc87_checkImportCycles(jule::Ptr<_1abaaa602_symbolBuilder>, jule::Ptr<_1abc4cd9e_ImportInfo>, jule::Ptr<_1ab086172_UseDecl>&);
inline void _1abaae172_checkPackageAccessibility(_1abaaa602_symbolBuilder*, jule::Ptr<_1ab086172_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1abaae53a_importPackage(jule::Ptr<_1abaaa602_symbolBuilder>, jule::Ptr<_1abc4cd9e_ImportInfo>&, jule::Ptr<_1ab086172_UseDecl>&);
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abaae848_importUseDecl(jule::Ptr<_1abaaa602_symbolBuilder>, jule::Ptr<_1ab086172_UseDecl>&);
inline void _1abaaea24_importUseDecls(jule::Ptr<_1abaaa602_symbolBuilder>);
inline void _1abaaec99_appendNode(_1abaaa602_symbolBuilder*, _1ab03a324_Node&);
inline void _1abaaee75_appendNodes(_1abaaa602_symbolBuilder*);
inline void _1abab01ea_pushDirectivePass(_1abaaa602_symbolBuilder*, jule::Ptr<_1ab03a720_Directive>&);
inline void _1abab03c6_appendTopDirectives(_1abaaa602_symbolBuilder*);
inline void _1abab05a2_build(jule::Ptr<_1abaaa602_symbolBuilder>);
struct _1abaaa602_symbolBuilder {
	jule::Ptr<_1abaaa602_symbolBuilder> _field_owner;
	jule::Trait<_1abad9873_Importer> _field_importer;
	jule::Slice<_1a7995777_Log> _field_errors;
	jule::Ptr<_1ab039532_Ast> _field_ast;
	jule::Ptr<_1abcb6c2b_SymbolTable> _field_table;
	

	_1abaaa602_symbolBuilder(void) = default;


};
inline jule::Str _1abab14c6_Str(_1abab10ca_Trait*);
inline jule::Bool _1abab17d4_Equal(jule::Ptr<_1abab10ca_Trait>, jule::Ptr<_1abce79d7_TypeKind>);
inline jule::Bool _1abab1b47_IsBuiltin(_1abab10ca_Trait*);
inline jule::Ptr<_1aba9e1c8_Fn> _1abab1e55_FindMethod(_1abab10ca_Trait*, jule::Str);
struct _1abab10ca_Trait {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_1aba9e1c8_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ab08a1a9_Struct>> _field_Implemented;
	

	_1abab10ca_Trait(void) = default;


};
inline jule::Bool _1abab2b15_AutoExpr(_1abab272a_EnumItem*);
struct _1abab272a_EnumItem {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1abcbcacd_Value> _field_Value;
	

	_1abab272a_EnumItem(void) = default;

	inline bool operator==(_1abab272a_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1abab272a_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1abab3583_Str(_1abab3220_Enum*);
inline jule::Bool _1abab3891_Equal(jule::Ptr<_1abab3220_Enum>, jule::Ptr<_1abce79d7_TypeKind>);
inline jule::Ptr<_1abab272a_EnumItem> _1abab3cd1_FindItem(_1abab3220_Enum*, jule::Str);
struct _1abab3220_Enum {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1abcebdb5_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1abab272a_EnumItem>> _field_Items;
	

	_1abab3220_Enum(void) = default;


};
struct _1abab4254_TypeEnumItem {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1abcebdb5_TypeSymbol> _field_Kind;
	

	_1abab4254_TypeEnumItem(void) = default;

	inline bool operator==(_1abab4254_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1abab4254_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1abab4b4a_Str(_1abab481a_TypeEnum*);
inline jule::Bool _1abab4e58_Equal(jule::Ptr<_1abab481a_TypeEnum>, jule::Ptr<_1abce79d7_TypeKind>);
inline jule::Ptr<_1abab4254_TypeEnumItem> _1abab5354_FindItem(_1abab481a_TypeEnum*, jule::Str);
struct _1abab481a_TypeEnum {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1abab4254_TypeEnumItem>> _field_Items;
	

	_1abab481a_TypeEnum(void) = default;


};
inline jule::Fn<jule::Bool(jule::Ptr<_1abc55eea_Sema>&,jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>&)> _1abab7279_readyFn(jule::Ptr<_1abab6d4a_constraintChecker>);
inline jule::Bool _1abab74dd_readyFi(jule::Ptr<_1abab6d4a_constraintChecker>);
inline jule::Bool _1abab7752_readySi(jule::Ptr<_1abab6d4a_constraintChecker>);
inline jule::Bool _1abab79b6_ready(jule::Ptr<_1abab6d4a_constraintChecker>);
inline jule::Bool _1abab7c2a_check(jule::Ptr<_1abab6d4a_constraintChecker>);
struct _1abab6d4a_constraintChecker {
	jule::Ptr<_1abc55eea_Sema> _field_s;
	jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1abce62aa_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>> _field_genericsA;
	jule::Ptr<_1abaa1d79_FnIns> _field_fi;
	jule::Ptr<_1ab08a583_StructIns> _field_si;
	jule::Ptr<_1a97237bc_Token> _field_et;
	jule::Bool _field_uniq = false;
	

	_1abab6d4a_constraintChecker(void) = default;


};
inline jule::Bool _1abab917c_IsTraitImpl(_1abab8c81_Impl*);
inline jule::Bool _1abab93e1_IsStructImpl(_1abab8c81_Impl*);
struct _1abab8c81_Impl {
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Base;
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1aba9e1c8_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1abc73ee6_Var>> _field_Statics;
	

	_1abab8c81_Impl(void) = default;


};
struct _1ababdcdb_Scope {
	jule::Ptr<_1ababdcdb_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	

	_1ababdcdb_Scope(void) = default;


};
struct _1ababe1d7_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ababdcdb_Scope> _field_Scope;
	

	_1ababe1d7_If(void) = default;

	inline bool operator==(_1ababe1d7_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ababe1d7_If _other) { return !this->operator==(_other); }


};
struct _1ababe4c3_Else {
	jule::Ptr<_1ababdcdb_Scope> _field_Scope;
	

	_1ababe4c3_Else(void) = default;

	inline bool operator==(_1ababe4c3_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ababe4c3_Else _other) { return !this->operator==(_other); }


};
struct _1ababe847_Conditional {
	jule::Slice<jule::Ptr<_1ababe1d7_If>> _field_Elifs;
	jule::Ptr<_1ababe4c3_Else> _field_Default;
	

	_1ababe847_Conditional(void) = default;


};
struct _1ababeb33_InfIter {
	jule::Ptr<_1ababdcdb_Scope> _field_Scope;
	

	_1ababeb33_InfIter(void) = default;

	inline bool operator==(_1ababeb33_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ababeb33_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1abac044c_IsWhileNext(_1abac00a6_WhileIter*);
struct _1abac00a6_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1ababdcdb_Scope> _field_Scope;
	

	_1abac00a6_WhileIter(void) = default;

	inline bool operator==(_1abac00a6_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1abac00a6_WhileIter _other) { return !this->operator==(_other); }


};
struct _1abac098b_RangeIter {
	jule::Ptr<_1abcbba55_Data> _field_Expr;
	jule::Ptr<_1ababdcdb_Scope> _field_Scope;
	jule::Ptr<_1abc73ee6_Var> _field_KeyA;
	jule::Ptr<_1abc73ee6_Var> _field_KeyB;
	

	_1abac098b_RangeIter(void) = default;

	inline bool operator==(_1abac098b_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1abac098b_RangeIter _other) { return !this->operator==(_other); }


};
struct _1abac0d87_ContSt {
	jule::Uintptr _field_It = 0;
	

	_1abac0d87_ContSt(void) = default;

	inline bool operator==(_1abac0d87_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1abac0d87_ContSt _other) { return !this->operator==(_other); }


};
struct _1abac123e_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	_1abac123e_BreakSt(void) = default;

	inline bool operator==(_1abac123e_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1abac123e_BreakSt _other) { return !this->operator==(_other); }


};
struct _1abac152a_Label {
	jule::Str _field_Ident;
	

	_1abac152a_Label(void) = default;

	inline bool operator==(_1abac152a_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1abac152a_Label _other) { return !this->operator==(_other); }


};
struct _1abac1816_GotoSt {
	jule::Str _field_Ident;
	

	_1abac1816_GotoSt(void) = default;

	inline bool operator==(_1abac1816_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1abac1816_GotoSt _other) { return !this->operator==(_other); }


};
struct _1abac1bbd_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	_1abac1bbd_Postfix(void) = default;

	inline bool operator==(_1abac1bbd_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1abac1bbd_Postfix _other) { return !this->operator==(_other); }


};
struct _1abac2141_Assign {
	jule::Ptr<_1aba90928_OperandExprModel> _field_L;
	jule::Ptr<_1aba90928_OperandExprModel> _field_R;
	jule::Ptr<_1a97237bc_Token> _field_Op;
	

	_1abac2141_Assign(void) = default;

	inline bool operator==(_1abac2141_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1abac2141_Assign _other) { return !this->operator==(_other); }


};
struct _1abac24e8_MultiAssign {
	jule::Slice<jule::Ptr<_1abcbba55_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	

	_1abac24e8_MultiAssign(void) = default;


};
inline jule::Bool _1abac3043_IsGenericTypeMatch(_1abac2a37_Match*);
struct _1abac2a37_Match {
	jule::Ptr<_1abcbba55_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Slice<jule::Ptr<_1abac3582_Case>> _field_Cases;
	jule::Ptr<_1abac3582_Case> _field_Default;
	

	_1abac2a37_Match(void) = default;


};
inline jule::Bool _1abac384b_isDefault(_1abac3582_Case*);
struct _1abac3582_Case {
	jule::Ptr<_1abac2a37_Match> _field_Owner;
	jule::Ptr<_1ababdcdb_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1abcbba55_Data>> _field_Exprs;
	jule::Ptr<_1abac3582_Case> _field_Next;
	

	_1abac3582_Case(void) = default;


};
struct _1abac3b37_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	_1abac3b37_FallSt(void) = default;

	inline bool operator==(_1abac3b37_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1abac3b37_FallSt _other) { return !this->operator==(_other); }


};
struct _1abac3eab_RetSt {
	jule::Ptr<_1abaa1d79_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1abac3eab_RetSt(void) = default;

	inline bool operator==(_1abac3eab_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abac3eab_RetSt _other) { return !this->operator==(_other); }


};
struct _1abac45b6_scopeLabel {
	jule::Ptr<_1a97237bc_Token> _field_token;
	jule::Ptr<_1abac152a_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1abac584d_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	_1abac45b6_scopeLabel(void) = default;

	inline bool operator==(_1abac45b6_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1abac45b6_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1abac4a39_scopeGoto {
	jule::Ptr<_1ab07b51e_GotoSt> _field_gt;
	jule::Ptr<_1abac584d_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	_1abac4a39_scopeGoto(void) = default;

	inline bool operator==(_1abac4a39_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1abac4a39_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abac5cd2_FindPackage(_1abac584d_scopeChecker*, jule::Str);
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abac60e0_SelectPackage(_1abac584d_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)>);
inline jule::Ptr<_1abc73ee6_Var> _1abac6497_FindVar(_1abac584d_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1abce6ce4_TypeAlias> _1abac684e_FindTypeAlias(_1abac584d_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab08a1a9_Struct> _1abac6c06_FindStruct(_1abac584d_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1aba9e1c8_Fn> _1abac70ad_FindFn(_1abac584d_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1abab10ca_Trait> _1abac73bb_FindTrait(_1abac584d_scopeChecker*, jule::Str);
inline jule::Ptr<_1abab3220_Enum> _1abac76c9_FindEnum(_1abac584d_scopeChecker*, jule::Str);
inline jule::Ptr<_1abab481a_TypeEnum> _1abac79d7_FindTypeEnum(_1abac584d_scopeChecker*, jule::Str);
inline jule::Bool _1abac7d17_isUnsafe(jule::Ptr<_1abac584d_scopeChecker>);
inline jule::Bool _1abac807b_isRoot(_1abac584d_scopeChecker*);
inline void _1abac8257_stop(_1abac584d_scopeChecker*);
inline jule::Bool _1abac84bb_stopped(_1abac584d_scopeChecker*);
inline jule::Bool _1abac8730_isDeferred(jule::Ptr<_1abac584d_scopeChecker>);
inline jule::Ptr<_1abac584d_scopeChecker> _1abac8994_getRoot(jule::Ptr<_1abac584d_scopeChecker>);
inline jule::Ptr<_1abac584d_scopeChecker> _1abac8c08_getHardRoot(jule::Ptr<_1abac584d_scopeChecker>);
inline jule::Ptr<_1abac152a_Label> _1abac9016_findLabel(_1abac584d_scopeChecker*, jule::Str);
inline jule::Ptr<_1abac45b6_scopeLabel> _1abac9324_findLabelScope(jule::Ptr<_1abac584d_scopeChecker>, jule::Str);
inline jule::Ptr<_1abac45b6_scopeLabel> _1abac9632_findLabelAll(_1abac584d_scopeChecker*, jule::Str);
inline jule::Bool _1abac99d9_isDuplicatedIdent(_1abac584d_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1abac9c5e_checkVarDecl(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab081425_VarDecl>);
inline void _1abac9ed4_checkTypeAliasDecl(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab084c86_TypeAliasDecl>);
inline jule::Ptr<_1ababdcdb_Scope> _1abaca248_getChild(_1abac584d_scopeChecker*);
inline void _1abaca611_checkChildSsc(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab07d950_ScopeTree>&, jule::Ptr<_1ababdcdb_Scope>&, jule::Ptr<_1abac584d_scopeChecker>&);
inline jule::Ptr<_1ababdcdb_Scope> _1abaca9b8_checkChildSc(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab07d950_ScopeTree>&, jule::Ptr<_1abac584d_scopeChecker>&);
inline jule::Ptr<_1ababdcdb_Scope> _1abacacc6_checkChild(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab07d950_ScopeTree>&);
inline void _1abacb04b_checkAnonScope(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab07d950_ScopeTree>);
inline void _1abacb36a_processErrorCall(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1aba9a290_BuiltinErrorCallExprModel>&, jule::Ptr<_1a97237bc_Token>);
inline void _1abacb5e0_checkExpr(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab072ed8_Expr>);
inline jule::Ptr<_1ababe1d7_If> _1abacb8ed_checkIf(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab083c85_If>);
inline jule::Ptr<_1ababe4c3_Else> _1abacbc0b_checkElse(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab08413c_Else>);
inline void _1abacbe81_checkConditional(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab0845b0_Conditional>);
inline void _1abacc3e3_checkIterScopeSsc(jule::Ptr<_1abac584d_scopeChecker>, jule::Uintptr, jule::Ptr<_1ab07d950_ScopeTree>, jule::Ptr<_1ababdcdb_Scope>&, jule::Ptr<_1abac584d_scopeChecker>);
inline jule::Ptr<_1ababdcdb_Scope> _1abacc844_checkIterScopeSc(jule::Ptr<_1abac584d_scopeChecker>, jule::Uintptr, jule::Ptr<_1ab07d950_ScopeTree>, jule::Ptr<_1abac584d_scopeChecker>);
inline jule::Ptr<_1ababdcdb_Scope> _1abaccbeb_checkIterScope(jule::Ptr<_1abac584d_scopeChecker>, jule::Uintptr, jule::Ptr<_1ab07d950_ScopeTree>&);
inline void _1abacce71_checkInfIter(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab081e3c_Iter>&);
inline void _1abacd1e6_checkWhileIter(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab081e3c_Iter>&);
inline void _1abacd46b_checkRangeIter(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab081e3c_Iter>&);
inline void _1abacd6e1_checkIter(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab081e3c_Iter>);
inline jule::Bool _1abacd9ee_checkValidContLabel(jule::Ptr<_1abac584d_scopeChecker>, jule::Uintptr);
inline jule::Bool _1abacdd0c_checkValidBreakLabel(jule::Ptr<_1abac584d_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1abac0d87_ContSt> _1abace11a_checkContValidScope(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab083812_ContSt>);
inline void _1abace390_checkCont(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab083812_ContSt>);
inline void _1abace615_checkLabel(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab07b167_LabelSt>);
inline void _1abace88a_pushGoto(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab07b51e_GotoSt>);
inline void _1abaceb10_checkPostfix(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab07c454_AssignSt>);
inline jule::Bool _1abacee1d_isNewAssignIdent(_1abac584d_scopeChecker*, jule::Str);
inline jule::Bool _1abad036e_checkStructureAssignOp(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab08a583_StructIns>&, jule::Ptr<_1ab07c454_AssignSt>&, jule::Ptr<_1abcbba55_Data>&);
inline void _1abad05e4_checkSingleAssign(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab07c454_AssignSt>&);
inline void _1abad0b22_processEndPartOfMultiAssign(_1abac584d_scopeChecker*, jule::Ptr<_1abac24e8_MultiAssign>&, jule::Ptr<_1ab07c454_AssignSt>&, jule::Ptr<_1ab07be15_AssignLeft>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&);
inline void _1abad0da8_checkMultiAssign(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab07c454_AssignSt>&);
inline void _1abad112d_checkAssignSt(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab07c454_AssignSt>);
inline jule::Ptr<_1ababdcdb_Scope> _1abad14d5_checkCaseScope(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1abac3582_Case>&, jule::Ptr<_1ab07d950_ScopeTree>&);
inline jule::Ptr<_1abac3582_Case> _1abad19d0_checkCase(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1abac2a37_Match>, jule::I64, jule::Ptr<_1ab085209_Case>, jule::Ptr<_1abcbba55_Data>);
inline void _1abad1d98_checkCases(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab0858d0_MatchCase>&, jule::Ptr<_1abac2a37_Match>, jule::Ptr<_1abcbba55_Data>);
inline jule::Ptr<_1abac3582_Case> _1abad2250_checkDefault(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1abac2a37_Match>, jule::Ptr<_1ab08413c_Else>);
inline void _1abad24c5_checkComptimePanic(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ababdcdb_Scope>&);
inline void _1abad27e4_pushTypeMatch(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1abac2a37_Match>, jule::Ptr<_1ab0858d0_MatchCase>&);
inline void _1abad2a69_checkTypeMatch(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab0858d0_MatchCase>&);
inline void _1abad2cde_checkCommonMatch(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab0858d0_MatchCase>&);
inline void _1abad3064_checkMatch(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab0858d0_MatchCase>);
inline void _1abad32d9_checkFall(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab07b80a_FallSt>);
inline jule::Ptr<_1abac123e_BreakSt> _1abad35e7_checkBreakWithLabel(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab08345a_BreakSt>);
inline jule::Ptr<_1abac123e_BreakSt> _1abad3905_checkPlainBreak(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab08345a_BreakSt>);
inline void _1abad3b7a_checkBreak(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab08345a_BreakSt>);
inline void _1abad3e00_checkRet(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab0817cc_RetSt>);
inline void _1abad4175_checkUseExpr(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab073879_UseExpr>);
inline void _1abad43ea_checkNode(jule::Ptr<_1abac584d_scopeChecker>, jule::Any&);
inline void _1abad45c6_checkResult(jule::Ptr<_1abac584d_scopeChecker>);
inline void _1abad47a2_checkTree(jule::Ptr<_1abac584d_scopeChecker>);
inline void _1abad4ac1_checkGoto(_1abac584d_scopeChecker*, jule::Ptr<_1abac4a39_scopeGoto>&, jule::Ptr<_1abac45b6_scopeLabel>&);
inline void _1abad4c9c_checkGotos(_1abac584d_scopeChecker*);
inline void _1abad4e78_checkLabels(_1abac584d_scopeChecker*);
inline void _1abad5154_checkVars(_1abac584d_scopeChecker*);
inline void _1abad5330_checkAliases(_1abac584d_scopeChecker*);
inline void _1abad564e_check(jule::Ptr<_1abac584d_scopeChecker>, jule::Ptr<_1ab07d950_ScopeTree>&, jule::Ptr<_1ababdcdb_Scope>&);
inline jule::Ptr<_1abac584d_scopeChecker> _1abad58b3_newChildChecker(jule::Ptr<_1abac584d_scopeChecker>);
struct _1abac584d_scopeChecker {
	jule::Ptr<_1a97237bc_Token> _field_calledFrom;
	jule::Ptr<_1abc55eea_Sema> _field_s;
	jule::Ptr<_1abaa1d79_FnIns> _field_owner;
	jule::Ptr<_1abac584d_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1abcb6c2b_SymbolTable> _field_table;
	jule::Ptr<_1ababdcdb_Scope> _field_scope;
	jule::Ptr<_1ab07d950_ScopeTree> _field_tree;
	jule::Ptr<_1abaa1d79_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1abac45b6_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1abac4a39_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	_1abac584d_scopeChecker(void) = default;

	inline bool operator==(_1abac584d_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1abac584d_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _1abad68a3_checkCdef(_1abad6463_directiveChecker*, jule::Ptr<_1ab03a720_Directive>&);
inline void _1abad6b28_checkTypedef(_1abad6463_directiveChecker*, jule::Ptr<_1ab03a720_Directive>&);
inline void _1abad6d9d_checkDerive(_1abad6463_directiveChecker*, jule::Ptr<_1ab03a720_Directive>&);
inline void _1abad7123_checkNamespace(_1abad6463_directiveChecker*, jule::Ptr<_1ab03a720_Directive>&);
inline void _1abad7398_checkDeprecated(_1abad6463_directiveChecker*, jule::Ptr<_1ab03a720_Directive>&);
inline void _1abad761d_checkTest(_1abad6463_directiveChecker*, jule::Ptr<_1ab03a720_Directive>&);
inline void _1abad7893_checkDirective(_1abad6463_directiveChecker*, jule::Ptr<_1ab03a720_Directive>&);
inline void _1abad7a6e_check(_1abad6463_directiveChecker*);
struct _1abad6463_directiveChecker {
	jule::Ptr<_1abc55eea_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab03a720_Directive>>> _field_d;
	jule::Any _field_o;
	

	_1abad6463_directiveChecker(void) = default;

	inline bool operator==(_1abad6463_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1abad6463_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abc4d3bb_FindPackage(_1abc4cd9e_ImportInfo*, jule::Str);
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abc4d6c9_SelectPackage(_1abc4cd9e_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)>);
inline jule::Ptr<_1abc73ee6_Var> _1abc4da81_FindVar(_1abc4cd9e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1abce6ce4_TypeAlias> _1abc4de38_FindTypeAlias(_1abc4cd9e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab08a1a9_Struct> _1abc4e2e0_FindStruct(_1abc4cd9e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1aba9e1c8_Fn> _1abc4e697_FindFn(_1abc4cd9e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1abab10ca_Trait> _1abc4e9a5_FindTrait(_1abc4cd9e_ImportInfo*, jule::Str);
inline jule::Ptr<_1abab3220_Enum> _1abc4ecb3_FindEnum(_1abc4cd9e_ImportInfo*, jule::Str);
inline jule::Ptr<_1abab481a_TypeEnum> _1abc500c1_FindTypeEnum(_1abc4cd9e_ImportInfo*, jule::Str);
inline jule::Bool _1abc50467_isLookupable(_1abc4cd9e_ImportInfo*, jule::Str);
inline jule::Bool _1abc50775_existIdent(_1abc4cd9e_ImportInfo*, jule::Str);
inline jule::Bool _1abc50a0b_isAccessibleViaSelection(_1abc4cd9e_ImportInfo*);
struct _1abc4cd9e_ImportInfo {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _field_Selected;
	jule::Ptr<_1abc50d08_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	

	_1abc4cd9e_ImportInfo(void) = default;


};
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abc512d1_FindPackage(_1abc50d08_Package*, jule::Str);
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abc515de_SelectPackage(_1abc50d08_Package*, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)>);
inline jule::Ptr<_1abc73ee6_Var> _1abc51996_FindVar(_1abc50d08_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1abce6ce4_TypeAlias> _1abc51d4d_FindTypeAlias(_1abc50d08_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab08a1a9_Struct> _1abc52205_FindStruct(_1abc50d08_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1aba9e1c8_Fn> _1abc525ac_FindFn(_1abc50d08_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1abab10ca_Trait> _1abc528ba_FindTrait(_1abc50d08_Package*, jule::Str);
inline jule::Ptr<_1abab3220_Enum> _1abc52bc8_FindEnum(_1abc50d08_Package*, jule::Str);
inline jule::Ptr<_1abab481a_TypeEnum> _1abc52ed6_FindTypeEnum(_1abc50d08_Package*, jule::Str);
struct _1abc50d08_Package {
	jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>> _field_Files;
	

	_1abc50d08_Package(void) = default;


};
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abc56517_FindPackage(_1abc55eea_Sema*, jule::Str);
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abc56825_SelectPackage(_1abc55eea_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)>);
inline jule::Ptr<_1abc73ee6_Var> _1abc56bcc_FindVar(_1abc55eea_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1abce6ce4_TypeAlias> _1abc57084_FindTypeAlias(_1abc55eea_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab08a1a9_Struct> _1abc5743b_FindStruct(_1abc55eea_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1aba9e1c8_Fn> _1abc577e3_FindFn(_1abc55eea_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1abab10ca_Trait> _1abc57b01_FindTrait(_1abc55eea_Sema*, jule::Str);
inline jule::Ptr<_1abab3220_Enum> _1abc57e0e_FindEnum(_1abc55eea_Sema*, jule::Str);
inline jule::Ptr<_1abab481a_TypeEnum> _1abc5821c_FindTypeEnum(_1abc55eea_Sema*, jule::Str);
inline jule::Bool _1abc5856e_isFlag(_1abc55eea_Sema*, jule::I64);
inline void _1abc587e4_setCurrentFile(_1abc55eea_Sema*, jule::Ptr<_1abcb6c2b_SymbolTable>);
inline void _1abc58bac_pushErr(_1abc55eea_Sema*, jule::Ptr<_1a97237bc_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1abc58ecb_pushSugggestion(_1abc55eea_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1abc59383_isAccessibleDefine(_1abc55eea_Sema*, jule::Bool, jule::Ptr<_1a97237bc_Token>);
inline jule::Bool _1abc597d4_isDuplicatedIdent(_1abc55eea_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1abc59b03_checkDirectives(jule::Ptr<_1abc55eea_Sema>, jule::Slice<jule::Ptr<_1ab03a720_Directive>>&, jule::Any);
inline jule::Bool _1abc5a054_checkGenericQuantity(_1abc55eea_Sema*, jule::I64, jule::I64, jule::Ptr<_1a97237bc_Token>);
inline jule::Bool _1abc5a42d_isDuplicatedImportSelection(_1abc55eea_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1abc5a7e6_getImportDef(_1abc55eea_Sema*, jule::Str, jule::Ptr<_1abc4cd9e_ImportInfo>&);
inline jule::Bool _1bbc63657_checkImportSelection(_1abc55eea_Sema*, jule::Ptr<_1a97237bc_Token>&, jule::Ptr<_1abc73ee6_Var>&);
inline jule::Bool _1bbc6768e_checkImportSelection(_1abc55eea_Sema*, jule::Ptr<_1a97237bc_Token>&, jule::Ptr<_1abce6ce4_TypeAlias>&);
inline jule::Bool _1bbc6b60a_checkImportSelection(_1abc55eea_Sema*, jule::Ptr<_1a97237bc_Token>&, jule::Ptr<_1ab08a1a9_Struct>&);
inline jule::Bool _1bbc708c8_checkImportSelection(_1abc55eea_Sema*, jule::Ptr<_1a97237bc_Token>&, jule::Ptr<_1abab10ca_Trait>&);
inline jule::Bool _1bbc74844_checkImportSelection(_1abc55eea_Sema*, jule::Ptr<_1a97237bc_Token>&, jule::Ptr<_1abab3220_Enum>&);
inline jule::Bool _1bbc78804_checkImportSelection(_1abc55eea_Sema*, jule::Ptr<_1a97237bc_Token>&, jule::Ptr<_1abab481a_TypeEnum>&);
inline jule::Bool _1bbc7c7b4_checkImportSelection(_1abc55eea_Sema*, jule::Ptr<_1a97237bc_Token>&, jule::Ptr<_1aba9e1c8_Fn>&);
inline jule::Bool _1abc5aecd_checkImportSelectedSelections(_1abc55eea_Sema*, jule::Ptr<_1abc4cd9e_ImportInfo>&);
inline jule::Bool _1bbc81c6e_checkImportsAllSelectionsFromCollection(_1abc55eea_Sema*, jule::Slice<jule::Ptr<_1abc73ee6_Var>>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Bool _1bbc85305_checkImportsAllSelectionsFromCollection(_1abc55eea_Sema*, jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Bool _1bbc85910_checkImportsAllSelectionsFromCollection(_1abc55eea_Sema*, jule::Slice<jule::Ptr<_1ab08a1a9_Struct>>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Bool _1bbc8accd_checkImportsAllSelectionsFromCollection(_1abc55eea_Sema*, jule::Slice<jule::Ptr<_1aba9e1c8_Fn>>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Bool _1bbc8b3e9_checkImportsAllSelectionsFromCollection(_1abc55eea_Sema*, jule::Slice<jule::Ptr<_1abab10ca_Trait>>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Bool _1bbc8e111_checkImportsAllSelectionsFromCollection(_1abc55eea_Sema*, jule::Slice<jule::Ptr<_1abab3220_Enum>>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Bool _1bbc91d28_checkImportsAllSelectionsFromCollection(_1abc55eea_Sema*, jule::Slice<jule::Ptr<_1abab481a_TypeEnum>>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Bool _1abc5b709_checkImportAllSelections(_1abc55eea_Sema*, jule::Ptr<_1abc4cd9e_ImportInfo>&);
inline jule::Bool _1abc5ba28_checkImportSelections(_1abc55eea_Sema*, jule::Ptr<_1abc4cd9e_ImportInfo>&);
inline jule::Bool _1abc5bd36_isUseAliasDuplication(_1abc55eea_Sema*, jule::Ptr<_1abc4cd9e_ImportInfo>&);
inline jule::Bool _1abc5c144_checkImport(_1abc55eea_Sema*, jule::Ptr<_1abc4cd9e_ImportInfo>&);
inline void _1abc5c320_checkImports(_1abc55eea_Sema*);
inline void _1abc5c4eb_implFileImpls(jule::Ptr<_1abc55eea_Sema>);
inline void _1abc5c6c7_implImpls(jule::Ptr<_1abc55eea_Sema>);
inline void _1abc5c8a3_checkEnums(jule::Ptr<_1abc55eea_Sema>);
inline _1abd06353_typeChecker _1abc5cd04_typeChecker(jule::Ptr<_1abc55eea_Sema>, jule::Trait<_1abd13959_Lookup>, jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>, jule::Ptr<_1abd05473_referencer>);
inline jule::Ptr<_1abce79d7_TypeKind> _1abc5d2ee_buildTypeWithRefers(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab06d9b7_TypeDecl>&, jule::Trait<_1abd13959_Lookup>, jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>, jule::Ptr<_1abd05473_referencer>);
inline jule::Bool _1abc5d7e9_checkTypeWithRefers(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abcebdb5_TypeSymbol>&, jule::Trait<_1abd13959_Lookup>, jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>, jule::Ptr<_1abd05473_referencer>);
inline jule::Ptr<_1abab6d4a_constraintChecker> _1abc5da5d_constraintChecker(jule::Ptr<_1abc55eea_Sema>);
inline jule::Bool _1abc5de15_checkType(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abcebdb5_TypeSymbol>&, jule::Trait<_1abd13959_Lookup>);
inline jule::Ptr<_1abce79d7_TypeKind> _1abc5e366_buildTypeWithGenerics(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab06d9b7_TypeDecl>&, jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>, jule::Ptr<_1abaa4ce4_ReferenceStack>);
inline jule::Ptr<_1abce79d7_TypeKind> _1abc5e674_buildType(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab06d9b7_TypeDecl>&);
inline jule::Ptr<_1abce79d7_TypeKind> _1abc5e982_selectType(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab06d9b7_TypeDecl>&);
inline jule::Ptr<_1abcbd5c3_Eval> _1abc5edd3_evalpd(jule::Ptr<_1abc55eea_Sema>, jule::Trait<_1abd13959_Lookup>, jule::Ptr<_1abce79d7_TypeKind>, jule::Ptr<_1abc73ee6_Var>);
inline jule::Ptr<_1abcbd5c3_Eval> _1abc6028a_evalp(jule::Ptr<_1abc55eea_Sema>, jule::Trait<_1abd13959_Lookup>, jule::Ptr<_1abce79d7_TypeKind>);
inline jule::Ptr<_1abcbd5c3_Eval> _1abc60598_eval(jule::Ptr<_1abc55eea_Sema>, jule::Trait<_1abd13959_Lookup>);
inline jule::Bool _1abc60a93_checkAssignType(jule::Ptr<_1abc55eea_Sema>, jule::Bool, jule::Ptr<_1abce79d7_TypeKind>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1a97237bc_Token>);
inline jule::Bool _1abc60ee4_checkTypeCompatibility(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abce79d7_TypeKind>&, jule::Ptr<_1abce79d7_TypeKind>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Ptr<_1abce79d7_TypeKind> _1abc61467_buildNonGenericTypeKind(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab06d9b7_TypeDecl>&, jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>>&, jule::Slice<jule::Ptr<_1abce79d7_TypeKind>>&);
inline jule::Bool _1abc61852_buildFnNonGenericTypeKinds(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abaa1d79_FnIns>&, jule::Slice<jule::Ptr<_1abce79d7_TypeKind>>&);
inline jule::Ptr<_1abaa1d79_FnIns> _1abc61b71_getTraitCheckFnKind(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1aba9e1c8_Fn>&);
inline jule::Bool _1abc620c2_checkConstraintsFn(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abaa1d79_FnIns>&, jule::Ptr<_1a97237bc_Token>&, jule::Ptr<_1abaa1d79_FnIns>);
inline jule::Bool _1abc62523_checkConstraintsStruct(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab08a583_StructIns>&, jule::Ptr<_1a97237bc_Token>&, jule::Ptr<_1ab08a583_StructIns>);
inline jule::Bool _1abc628ca_fnEnvironment(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abaa1d79_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_1abc55eea_Sema>&,jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>&)>);
inline void _1abc62b50_checkFnParamKind(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abaa0eaa_ParamIns>&);
inline jule::Bool _1abc62e5d_reloadFnInsTypes(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abaa1d79_FnIns>);
inline jule::Bool _1abc633d1_checkRefValidityForInitExpr(jule::Ptr<_1abc55eea_Sema>, jule::Bool, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Bool _1abc639a8_checkValidityForInitExpr(jule::Ptr<_1abc55eea_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1abce79d7_TypeKind>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Bool _1abc63d71_checkTypeAliasDeclKind(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abce6ce4_TypeAlias>&, jule::Trait<_1abd13959_Lookup>);
inline void _1abc64190_checkTypeAliasDecl(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abce6ce4_TypeAlias>&, jule::Trait<_1abd13959_Lookup>);
inline void _1abc64415_checkTypeAliasDeclDup(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abce6ce4_TypeAlias>&);
inline jule::Bool _1abc64679_checkTypeAliasDecls(jule::Ptr<_1abc55eea_Sema>);
inline void _1bbd0e01b_checkEnumItemsDup(_1abc55eea_Sema*, jule::Slice<jule::Ptr<_1abab272a_EnumItem>>);
inline void _1bbd1960e_checkEnumItemsDup(_1abc55eea_Sema*, jule::Slice<jule::Ptr<_1abab4254_TypeEnumItem>>);
inline void _1abc64b74_checkEnumItemsStr(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abab3220_Enum>&);
inline void _1abc64de9_checkEnumItemsInt(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abab3220_Enum>&);
inline void _1abc6516e_checkEnumDecl(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abab3220_Enum>&);
inline void _1abc653e4_checkTypeEnumDecl(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abab481a_TypeEnum>&);
inline jule::Bool _1abc65658_checkEnumDecls(jule::Ptr<_1abc55eea_Sema>);
inline jule::Bool _1abc658bc_checkTypeEnumDecls(jule::Ptr<_1abc55eea_Sema>);
inline jule::Bool _1abc65bca_checkDeclGenerics(_1abc55eea_Sema*, jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>>&);
inline jule::Bool _1abc65ed8_checkFnDeclParamsDup(_1abc55eea_Sema*, jule::Ptr<_1aba9e1c8_Fn>&);
inline jule::Bool _1abc662e6_checkFnDeclResultDup(_1abc55eea_Sema*, jule::Ptr<_1aba9e1c8_Fn>&);
inline void _1abc6656b_checkFnDeclPrototype(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1aba9e1c8_Fn>&);
inline void _1abc667e1_checkTraitDeclMethod(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1aba9e1c8_Fn>&);
inline void _1abc66a66_checkTraitDeclMethods(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abab10ca_Trait>&);
inline void _1abc66cdb_checkTraitDecl(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abab10ca_Trait>&);
inline jule::Bool _1abc67050_checkTraitDecls(jule::Ptr<_1abc55eea_Sema>);
inline jule::Bool _1abc67407_checkTraitImplMethods(_1abc55eea_Sema*, jule::Ptr<_1abab10ca_Trait>&, jule::Ptr<_1abab8c81_Impl>&);
inline jule::Bool _1abc677ae_implToStruct(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab08a1a9_Struct>&, jule::Ptr<_1abab8c81_Impl>&);
inline void _1abc67a34_implTrait(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abab8c81_Impl>&);
inline void _1abc67ca9_implStruct(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abab8c81_Impl>&);
inline void _1abc6802e_implImpl(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abab8c81_Impl>&);
inline void _1abc6834d_checkVarDecl(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abc73ee6_Var>&, jule::Trait<_1abd13959_Lookup>);
inline void _1abc685c3_checkGlobalVarDecl(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abc73ee6_Var>&);
inline jule::Bool _1abc68837_checkGlobalDecls(jule::Ptr<_1abc55eea_Sema>);
inline jule::Bool _1abc68bde_checkStructTraitImpl(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab08a1a9_Struct>&, jule::Ptr<_1abab10ca_Trait>&);
inline jule::Bool _1abc68eec_checkStructImpls(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab08a1a9_Struct>&);
inline jule::Bool _1abc6930a_checkStructFields(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab08a1a9_Struct>&);
inline void _1abc69580_checkStructDecl(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab08a1a9_Struct>&);
inline jule::Bool _1abc697e4_checkStructDecls(jule::Ptr<_1abc55eea_Sema>);
inline void _1abc69a69_checkFnDecl(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1aba9e1c8_Fn>&);
inline jule::Bool _1abc69ccd_checkFnDecls(jule::Ptr<_1abc55eea_Sema>);
inline void _1abc6a196_pushCycleError(_1abc55eea_Sema*, jule::Ptr<_1ab08a1a9_Struct>&, jule::Ptr<_1ab08a1a9_Struct>&, jule::Str&);
inline jule::Bool _1abc6a5e7_checkCrossCycle(_1abc55eea_Sema*, jule::Ptr<_1ab08a1a9_Struct>&, jule::Ptr<_1ab08a1a9_Struct>&, jule::Str&);
inline jule::Bool _1abc6aa6a_checkStructDeriveIllegalCycles(_1abc55eea_Sema*, jule::Str, jule::Ptr<_1ab08a1a9_Struct>&, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abc6adab_checkStructInsDeriveClone(_1abc55eea_Sema*, jule::Ptr<_1ab08a583_StructIns>);
inline void _1abc6b098_checkPackageDecls(jule::Ptr<_1abc55eea_Sema>);
inline void _1abc6b3d9_checkDataForTypeInference(_1abc55eea_Sema*, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1a97237bc_Token>&);
inline void _1abc6b670_checkVar(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abc73ee6_Var>&);
inline void _1abc6b98e_checkTypeVar(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abc73ee6_Var>&, jule::Trait<_1abd13959_Lookup>);
inline void _1abc6bb6a_checkGlobalTypes(jule::Ptr<_1abc55eea_Sema>);
inline jule::Ptr<_1abaa1d79_FnIns> _1abc6c022_readyToCheckFn(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab08a583_StructIns>&, jule::Ptr<_1aba9e1c8_Fn>&);
inline void _1abc6c341_checkTypeMethod(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab08a583_StructIns>&, jule::Ptr<_1aba9e1c8_Fn>&);
inline jule::Ptr<_1abaa1d79_FnIns> _1abc6c792_checkStructInsOp(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab08a583_StructIns>&, jule::Ptr<_1aba9e1c8_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>);
inline jule::Bool _1abc6cb49_checkStructEnv(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab08a583_StructIns>&, jule::Ptr<_1a97237bc_Token>);
inline jule::Bool _1abc6d001_precheckStructIns(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab08a583_StructIns>&, jule::Ptr<_1a97237bc_Token>);
inline void _1abc6d276_checkStructIns(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab08a583_StructIns>&);
inline void _1abc6d4eb_checkTypeStruct(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab08a1a9_Struct>&);
inline void _1abc6d6c7_checkStructTypes(jule::Ptr<_1abc55eea_Sema>);
inline void _1abc6d96e_checkStructInsOperators(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab08a583_StructIns>);
inline void _1abc6dc05_precheckStructType(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1ab08a1a9_Struct>&);
inline void _1abc6ddd1_precheckStructTypes(jule::Ptr<_1abc55eea_Sema>);
inline void _1abc6e156_checkRets(_1abc55eea_Sema*, jule::Ptr<_1abaa1d79_FnIns>&);
inline void _1abc6e475_checkFnInsSc(_1abc55eea_Sema*, jule::Ptr<_1abaa1d79_FnIns>&, jule::Ptr<_1abac584d_scopeChecker>&);
inline void _1abc6e794_checkFnInsCaller(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abaa1d79_FnIns>&, jule::Ptr<_1a97237bc_Token>);
inline void _1abc6ea19_checkFnIns(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1abaa1d79_FnIns>&);
inline void _1abc6ec8e_checkTypeFn(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1aba9e1c8_Fn>&);
inline void _1abc70014_checkTestFn(_1abc55eea_Sema*, jule::Ptr<_1abaa1d79_FnIns>&);
inline void _1abc70289_precheckTypeFn(jule::Ptr<_1abc55eea_Sema>, jule::Ptr<_1aba9e1c8_Fn>&);
inline void _1abc70465_precheckFnTypes(jule::Ptr<_1abc55eea_Sema>);
inline void _1abc70641_checkFnTypes(jule::Ptr<_1abc55eea_Sema>);
inline void _1abc7081c_checkPackageTypes(jule::Ptr<_1abc55eea_Sema>);
inline void _1abc709e8_setFileSemaFields(jule::Ptr<_1abc55eea_Sema>);
inline void _1abc70bc4_setSemaFields(jule::Ptr<_1abc55eea_Sema>);
inline void _1abc70e49_check(jule::Ptr<_1abc55eea_Sema>, jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>&);
struct _1abc55eea_Sema {
	jule::Slice<_1a7995777_Log> _field_errors;
	jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>> _field_files;
	jule::Ptr<_1abcb6c2b_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	

	_1abc55eea_Sema(void) = default;


};
inline _1abc71301_missingRetChecker static__1abc716b9_new(void);
inline jule::Bool _1abc71994_checkConditional(_1abc71301_missingRetChecker*, jule::Ptr<_1ababe847_Conditional>);
inline jule::Bool _1abc71ca2_checkMatch(_1abc71301_missingRetChecker*, jule::Ptr<_1abac2a37_Match>);
inline jule::Bool _1abc720b0_checkInfIter(_1abc71301_missingRetChecker*, jule::Ptr<_1ababeb33_InfIter>);
inline jule::Bool _1abc723bd_checkScope(_1abc71301_missingRetChecker*, jule::Ptr<_1ababdcdb_Scope>);
inline jule::Bool _1abc726cb_check(_1abc71301_missingRetChecker*, jule::Ptr<_1ababdcdb_Scope>);
struct _1abc71301_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	

	_1abc71301_missingRetChecker(void) = default;


};
struct _1abc72eb2_IterRelation {
	jule::Ptr<_1abc73ee6_Var> _field_Range;
	

	_1abc72eb2_IterRelation(void) = default;

	inline bool operator==(_1abc72eb2_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1abc72eb2_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1abc743ae_IsInitialized(_1abc73ee6_Var*);
inline jule::Bool _1abc74623_IsTypeInferred(_1abc73ee6_Var*);
inline jule::Bool _1abc74887_untypedConstant(_1abc73ee6_Var*);
struct _1abc73ee6_Var {
	jule::Ptr<_1ababdcdb_Scope> _field_Scope;
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1abcebdb5_TypeSymbol> _field_Kind;
	jule::Ptr<_1abcbcacd_Value> _field_Value;
	jule::Ptr<_1abaa4ce4_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1ab03a720_Directive>> _field_Directives;
	jule::Ptr<_1abc72eb2_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1abc73ee6_Var>> _field_Depends;
	

	_1abc73ee6_Var(void) = default;


};
inline jule::Bool static__1abc75415_Dispose(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc756ac_Str(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc759ed_logical(jule::Ptr<_1aba9e1c8_Fn>&, jule::Str);
inline jule::Bool static__1abc75c95_Eq(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc7603c_Gt(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc762d4_GtEq(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc7657b_Lt(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc76823_LtEq(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc76b64_result(jule::Ptr<_1aba9e1c8_Fn>&, jule::Str);
inline jule::Bool static__1abc76e0b_Shl(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc771a3_Shr(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc7744a_Add(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc776e2_Sub(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc77989_Div(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc77c31_Mul(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc77ec8_Mod(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc78270_BitAnd(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc78517_BitOr(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc787ae_BitXor(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc78b00_unary(jule::Ptr<_1aba9e1c8_Fn>&, jule::Str);
inline jule::Bool static__1abc78d97_Neg(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc7913e_Pos(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc793d6_BitNot(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc79727_assign(jule::Ptr<_1aba9e1c8_Fn>&, jule::Str);
inline jule::Bool static__1abc799be_AddAssign(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc79c66_SubAssign(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc7a00d_DivAssign(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc7a2a5_MulAssign(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc7a54c_ModAssign(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc7a7e4_ShlAssign(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc7aa8b_ShrAssign(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc7ad33_BitOrAssign(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc7b0ca_BitAndAssign(jule::Ptr<_1aba9e1c8_Fn>);
inline jule::Bool static__1abc7b372_BitXorAssign(jule::Ptr<_1aba9e1c8_Fn>);
struct _1abc74c94_FuncPattern {
	

	_1abc74c94_FuncPattern(void) = default;


};
inline void _1abca5d3b_pushErr(_1abca581e_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1abca60a0_checkTrait(_1abca581e_typeCompatibilityChecker*);
inline jule::Bool _1abca6314_checkPtr(_1abca581e_typeCompatibilityChecker*);
inline jule::Bool _1abca6578_checkPrim(_1abca581e_typeCompatibilityChecker*);
inline jule::Bool _1abca6930_typeEnum(_1abca581e_typeCompatibilityChecker*, jule::Ptr<_1abab481a_TypeEnum>&, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abca6b94_checkTypeEnum(_1abca581e_typeCompatibilityChecker*);
inline jule::Bool _1abca6e08_check(_1abca581e_typeCompatibilityChecker*);
struct _1abca581e_typeCompatibilityChecker {
	jule::Ptr<_1abc55eea_Sema> _field_s;
	jule::Ptr<_1abce79d7_TypeKind> _field_dest;
	jule::Ptr<_1abce79d7_TypeKind> _field_src;
	jule::Ptr<_1a97237bc_Token> _field_errorToken;
	

	_1abca581e_typeCompatibilityChecker(void) = default;

	inline bool operator==(_1abca581e_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1abca581e_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1abca78a9_pushErr(_1abca7447_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1abca7b1d_checkValidity(_1abca7447_assignTypeChecker*);
inline jule::Bool _1abca7d82_checkConst(_1abca7447_assignTypeChecker*);
inline jule::Bool _1abca80e6_isPrim(_1abca7447_assignTypeChecker*);
inline jule::Bool _1abca835a_checkCompatibility(_1abca7447_assignTypeChecker*);
inline jule::Bool _1abca85be_check(_1abca7447_assignTypeChecker*);
struct _1abca7447_assignTypeChecker {
	jule::Ptr<_1abc55eea_Sema> _field_s;
	jule::Ptr<_1abce79d7_TypeKind> _field_dest;
	jule::Ptr<_1abcbba55_Data> _field_d;
	jule::Ptr<_1a97237bc_Token> _field_errorToken;
	

	_1abca7447_assignTypeChecker(void) = default;

	inline bool operator==(_1abca7447_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1abca7447_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1adac990a_annotateConstraintElem(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1adac9102_annotateConstraintElem(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1adacdbb7_annotateConstraintElem(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1adad18bd_annotateConstraintElem(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abca9812_annotateConstraintMap(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abca9b20_annotateConstraintTup(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abca9e2d_annotateConstraintFn(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abcaa25d_annotateConstraintIdent(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abcaa57c_annotateConstraint(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline void _1abcaa89b_pushGeneric(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&, jule::I64);
inline jule::Bool _1abcaaba9_annotatePrim(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abcaaeb7_annotateArr(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abcab2c5_annotateSlc(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abcab67c_checkMapKey(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abcab98a_annotateMap(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abcabc98_annotateFn(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abcac0a6_annotatePtr(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abcac3b4_annotateSptr(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abcac6c2_annotateStruct(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abcac9d0_annotateAny(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abcaccdd_annotateKind(_1abca8e2c_dynamicTypeAnnotation*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abcad052_annotate(_1abca8e2c_dynamicTypeAnnotation*);
struct _1abca8e2c_dynamicTypeAnnotation {
	jule::Ptr<_1abcbd5c3_Eval> _field_e;
	jule::Ptr<_1abaa1d79_FnIns> _field_f;
	jule::Ptr<_1abaa0eaa_ParamIns> _field_p;
	jule::Ptr<_1abcbba55_Data> _field_a;
	jule::Ptr<_1a97237bc_Token> _field_errorToken;
	jule::Ptr<_1abce79d7_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1abce79d7_TypeKind>> _field_ignored;
	

	_1abca8e2c_dynamicTypeAnnotation(void) = default;


};
inline void _1abcadd44_pushErrToken(_1abcad7e4_fnCallArgChecker*, jule::Ptr<_1a97237bc_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1abcae163_pushErr(_1abcad7e4_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1abaa0eaa_ParamIns>> _1abcae3c7_getParams(_1abcad7e4_fnCallArgChecker*);
inline jule::Bool _1abcae6d5_checkCounts(_1abcad7e4_fnCallArgChecker*, jule::Slice<jule::Ptr<_1abaa0eaa_ParamIns>>&);
inline jule::Bool _1abcaeb36_checkArg(_1abcad7e4_fnCallArgChecker*, jule::Ptr<_1abaa0eaa_ParamIns>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Bool _1abcaeedd_push(_1abcad7e4_fnCallArgChecker*, jule::Ptr<_1abaa0eaa_ParamIns>&, jule::Ptr<_1ab072ed8_Expr>);
inline jule::Bool _1abcb0395_pushVariadic(_1abcad7e4_fnCallArgChecker*, jule::Ptr<_1abaa0eaa_ParamIns>&, jule::I64);
inline jule::Bool _1abcb06a3_checkArgs(_1abcad7e4_fnCallArgChecker*, jule::Slice<jule::Ptr<_1abaa0eaa_ParamIns>>&);
inline jule::Bool _1abcb0939_checkDynamicTypeAnnotation(_1abcad7e4_fnCallArgChecker*);
inline jule::Bool _1abcb0bae_check(_1abcad7e4_fnCallArgChecker*);
struct _1abcad7e4_fnCallArgChecker {
	jule::Ptr<_1abcbd5c3_Eval> _field_e;
	jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _field_args;
	jule::Ptr<_1a97237bc_Token> _field_errorToken;
	jule::Ptr<_1abaa1d79_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1abce79d7_TypeKind>> _field_ignored;
	

	_1abcad7e4_fnCallArgChecker(void) = default;


};
inline void _1abcb1709_pushErr(_1abcb11ed_structLitChecker*, jule::Ptr<_1a97237bc_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1abcb1a28_pushSugggestion(_1abcb11ed_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1abcb1de1_pushMatch(_1abcb11ed_structLitChecker*, jule::Ptr<_1ab08a396_FieldIns>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1a97237bc_Token>&);
inline void _1abcb2210_checkPair(_1abcb11ed_structLitChecker*, jule::Ptr<_1ab077949_FieldExprPair>&, jule::Slice<jule::Ptr<_1ab072ed8_Expr>>&);
inline jule::Bool _1abcb251d_readyExprs(_1abcb11ed_structLitChecker*, jule::Slice<jule::Ptr<_1ab072ed8_Expr>>&);
inline void _1abcb2793_check(_1abcb11ed_structLitChecker*, jule::Slice<jule::Ptr<_1ab072ed8_Expr>>&);
struct _1abcb11ed_structLitChecker {
	jule::Ptr<_1abcbd5c3_Eval> _field_e;
	jule::Ptr<_1a97237bc_Token> _field_errorToken;
	jule::Ptr<_1ab08a583_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1aba91693_StructArgExprModel>> _field_args;
	

	_1abcb11ed_structLitChecker(void) = default;


};
inline jule::Ptr<_1abc73ee6_Var> _1abcb3277_buildVar(_1abcb2cd2_rangeChecker*, jule::Ptr<_1ab081425_VarDecl>&);
inline void _1abcb3453_setSizeKey(_1abcb2cd2_rangeChecker*);
inline void _1abcb381b_checkRangeExprValidity(_1abcb2cd2_rangeChecker*, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abc73ee6_Var>&, jule::Ptr<_1abce79d7_TypeKind>&);
inline void _1abcb39e7_checkSlice(_1abcb2cd2_rangeChecker*);
inline void _1abcb3bc3_checkArray(_1abcb2cd2_rangeChecker*);
inline void _1abcb3d9e_checkMapKeyA(_1abcb2cd2_rangeChecker*);
inline void _1abcb407a_checkMapKeyB(_1abcb2cd2_rangeChecker*);
inline void _1abcb4256_checkMap(_1abcb2cd2_rangeChecker*);
inline void _1abcb4432_checkStr(_1abcb2cd2_rangeChecker*);
inline jule::Bool _1abcb4696_check(_1abcb2cd2_rangeChecker*);
struct _1abcb2cd2_rangeChecker {
	jule::Ptr<_1abac584d_scopeChecker> _field_sc;
	jule::Ptr<_1ab0830a3_RangeKind> _field_rang;
	jule::Ptr<_1abac098b_RangeIter> _field_Kind;
	jule::Ptr<_1abcbba55_Data> _field_d;
	

	_1abcb2cd2_rangeChecker(void) = default;

	inline bool operator==(_1abcb2cd2_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1abcb2cd2_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _1abcb5312_prepareTypes(_1abcb4d6c_retTypeChecker*);
inline void _1abcb5587_prepareExprs(_1abcb4d6c_retTypeChecker*, jule::Ptr<_1ab072ed8_Expr>&);
inline void _1abcb5763_checkExprs(_1abcb4d6c_retTypeChecker*);
inline jule::Bool _1abcb5a71_check(_1abcb4d6c_retTypeChecker*, jule::Ptr<_1ab072ed8_Expr>&);
struct _1abcb4d6c_retTypeChecker {
	jule::Ptr<_1abac584d_scopeChecker> _field_sc;
	jule::Ptr<_1abaa1d79_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1abce79d7_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _field_exprs;
	jule::Ptr<_1a97237bc_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	

	_1abcb4d6c_retTypeChecker(void) = default;


};
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abcb7248_FindPackage(_1abcb6c2b_SymbolTable*, jule::Str);
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abcb7556_SelectPackage(_1abcb6c2b_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)>);
inline jule::Ptr<_1abc73ee6_Var> _1abcb790d_FindVar(_1abcb6c2b_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1abce6ce4_TypeAlias> _1abcb7cb5_FindTypeAlias(_1abcb6c2b_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab08a1a9_Struct> _1abcb816c_FindStruct(_1abcb6c2b_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1aba9e1c8_Fn> _1abcb8524_FindFn(_1abcb6c2b_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1abab10ca_Trait> _1abcb8832_FindTrait(_1abcb6c2b_SymbolTable*, jule::Str);
inline jule::Ptr<_1abab3220_Enum> _1abcb8b40_FindEnum(_1abcb6c2b_SymbolTable*, jule::Str);
inline jule::Ptr<_1abab481a_TypeEnum> _1abcb8e4d_FindTypeEnum(_1abcb6c2b_SymbolTable*, jule::Str);
inline jule::Ptr<_1abc73ee6_Var> _1abcb94c0_findVar(_1abcb6c2b_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1abce6ce4_TypeAlias> _1abcb9921_findTypeAlias(_1abcb6c2b_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1abcb9cc8_defByIdent(_1abcb6c2b_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1abcba229_isDuplicatedIdent(_1abcb6c2b_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1abcb6c2b_SymbolTable {
	jule::Ptr<_1a9728b57_File> _field_File;
	jule::Slice<_1abaa6158_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1abc4cd9e_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1abc73ee6_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1ab08a1a9_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1aba9e1c8_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1abab10ca_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1abab3220_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1abab481a_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1abab8c81_Impl>> _field_Impls;
	

	_1abcb6c2b_SymbolTable(void) = default;


};
inline jule::Bool _1abcbbe40_IsNil(_1abcbba55_Data*);
inline jule::Bool _1abcbc1a4_IsVoid(_1abcbba55_Data*);
inline jule::Bool _1abcbc418_IsConst(_1abcbba55_Data*);
inline jule::Bool _1abcbc726_GoodOperand(_1abcbba55_Data*, jule::Ptr<_1abcbba55_Data>&);
struct _1abcbba55_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1abce79d7_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1aba86b94_Const> _field_Constant;
	

	_1abcbba55_Data(void) = default;

	inline bool operator==(_1abcbba55_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1abcbba55_Data _other) { return !this->operator==(_other); }


};
struct _1abcbcacd_Value {
	jule::Ptr<_1ab072ed8_Expr> _field_Expr;
	jule::Ptr<_1abcbba55_Data> _field_Data;
	

	_1abcbcacd_Value(void) = default;

	inline bool operator==(_1abcbcacd_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1abcbcacd_Value _other) { return !this->operator==(_other); }


};
inline void _1abcbdace_pushErr(_1abcbd5c3_Eval*, jule::Ptr<_1a97237bc_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1abcbdded_pushSugggestion(_1abcbd5c3_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1abcbe0c9_allowBuiltin(_1abcbd5c3_Eval*);
inline void _1abcbe2a5_disallowBuiltin(_1abcbd5c3_Eval*);
inline jule::Bool _1abcbe519_isUnsafe(_1abcbd5c3_Eval*);
inline jule::Bool _1abcbe77d_isGlobal(_1abcbd5c3_Eval*);
inline jule::Bool _1abcbea58_applyNumericPrefix(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abcbecbc_litNil(_1abcbd5c3_Eval*);
inline jule::Ptr<_1abcbba55_Data> _1abcc00ca_litStr(_1abcbd5c3_Eval*, jule::Ptr<_1ab07401c_LitExpr>&);
inline jule::Ptr<_1abcbba55_Data> _1abcc03d8_litBool(_1abcbd5c3_Eval*, jule::Ptr<_1ab07401c_LitExpr>&);
inline jule::Ptr<_1abcbba55_Data> _1abcc06e6_litRune(_1abcbd5c3_Eval*, jule::Ptr<_1ab07401c_LitExpr>&);
inline jule::Ptr<_1abcbba55_Data> _1abcc0a04_litFloat(_1abcbd5c3_Eval*, jule::Ptr<_1ab07401c_LitExpr>&);
inline jule::Ptr<_1abcbba55_Data> _1abcc0d12_litInt(_1abcbd5c3_Eval*, jule::Ptr<_1ab07401c_LitExpr>&);
inline jule::Ptr<_1abcbba55_Data> _1abcc1120_litNum(_1abcbd5c3_Eval*, jule::Ptr<_1ab07401c_LitExpr>&);
inline jule::Ptr<_1abcbba55_Data> _1abcc142d_evalLit(_1abcbd5c3_Eval*, jule::Ptr<_1ab07401c_LitExpr>);
inline jule::Any _1abcc173b_findBuiltins(_1abcbd5c3_Eval*, jule::Str);
inline jule::Any _1abcc1ae3_getDef(_1abcbd5c3_Eval*, jule::Str, jule::Bool);
inline void _1bc0dc6e5_pushReference(_1abcbd5c3_Eval*, jule::Ptr<_1abaa1d79_FnIns>&);
inline void _1bc1019a1_pushReference(_1abcbd5c3_Eval*, jule::Ptr<_1abc73ee6_Var>&);
inline void _1bc1d2b70_pushReference(_1abcbd5c3_Eval*, jule::Ptr<_1ab08a583_StructIns>&);
inline jule::Ptr<_1abcbba55_Data> _1abcc2176__evalEnum(_1abcbd5c3_Eval*, jule::Ptr<_1abab3220_Enum>);
inline jule::Ptr<_1abcbba55_Data> _1abcc252d_evalEnum(_1abcbd5c3_Eval*, jule::Ptr<_1abab3220_Enum>, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcc283b__evalTypeEnum(_1abcbd5c3_Eval*, jule::Ptr<_1abab481a_TypeEnum>);
inline jule::Ptr<_1abcbba55_Data> _1abcc2be3_evalTypeEnum(_1abcbd5c3_Eval*, jule::Ptr<_1abab481a_TypeEnum>, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcc3001__evalStruct(_1abcbd5c3_Eval*, jule::Ptr<_1ab08a583_StructIns>);
inline jule::Ptr<_1abcbba55_Data> _1abcc33a8_evalStruct(_1abcbd5c3_Eval*, jule::Ptr<_1ab08a583_StructIns>, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcc36b6_evalFnIns(_1abcbd5c3_Eval*, jule::Ptr<_1abaa1d79_FnIns>);
inline void _1abcc39d5_checkDeprecated(_1abcbd5c3_Eval*, jule::Slice<jule::Ptr<_1ab03a720_Directive>>&, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcc3d8c_evalFn(_1abcbd5c3_Eval*, jule::Ptr<_1aba9e1c8_Fn>, jule::Ptr<_1a97237bc_Token>);
inline void _1abcc4255_pushIllegalCycleError(_1abcbd5c3_Eval*, jule::Ptr<_1abc73ee6_Var>&, jule::Ptr<_1abc73ee6_Var>&, jule::Str&);
inline jule::Bool _1abcc460c_checkCrossCycle(_1abcbd5c3_Eval*, jule::Ptr<_1abc73ee6_Var>&, jule::Str&);
inline jule::Bool _1abcc49b4_checkIllegalCycles(_1abcbd5c3_Eval*, jule::Ptr<_1abc73ee6_Var>&, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcc4d6b_evalVar(_1abcbd5c3_Eval*, jule::Ptr<_1abc73ee6_Var>, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcc5223_evalTypeAlias(_1abcbd5c3_Eval*, jule::Ptr<_1abce6ce4_TypeAlias>, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcc55ca_evalDef(_1abcbd5c3_Eval*, jule::Any, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcc58d8_evalIdent(_1abcbd5c3_Eval*, jule::Ptr<_1ab074b99_IdentExpr>);
inline jule::Ptr<_1abcbba55_Data> _1abcc5be6_evalUnary(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab0753a3_UnaryExpr>);
inline jule::Ptr<_1abcbba55_Data> _1abcc6004_evalVariadic(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab07575a_VariadicExpr>);
inline jule::Ptr<_1abcbba55_Data> _1abcc6312_evalUnsafe(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab074726_UnsafeExpr>);
inline jule::Ptr<_1abcbba55_Data> _1abcc6620_evalArr(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab0795c7_SliceExpr>);
inline jule::Ptr<_1abcbba55_Data> _1abcc6a71_evalExpSlc(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab0795c7_SliceExpr>, jule::Ptr<_1abce79d7_TypeKind>, jule::Any);
inline jule::Ptr<_1abcbba55_Data> _1abcc6d7e_evalSliceExpr(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab0795c7_SliceExpr>);
inline void _1abcc71c0_checkIntegerIndexingByData(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1a97237bc_Token>);
inline void _1abcc7599_indexingPtr(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1ab079e46_IndexingExpr>&);
inline void _1abcc7962_indexingArr(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1ab079e46_IndexingExpr>&);
inline void _1abcc7d2a_indexingSlc(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1ab079e46_IndexingExpr>&);
inline void _1abcc81e3_indexingMap(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1ab079e46_IndexingExpr>&);
inline void _1abcc85ab_indexingStr(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1ab079e46_IndexingExpr>&);
inline void _1abcc8974_toIndexing(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1ab079e46_IndexingExpr>&);
inline jule::Bool _1abcc8de7_pushGenericsFromExprSubIdent(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab07643c_SubIdentExpr>&, jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>>&, jule::Ptr<_1ab072ed8_Expr>&);
inline jule::Bool _1abcc92b0_pushGenericsFromData(jule::Ptr<_1abcbd5c3_Eval>, jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>>&, jule::Ptr<_1ab072ed8_Expr>&);
inline void _1abcc9601_evalIdentDeclFromIndexing(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1ab079e46_IndexingExpr>&);
inline jule::Bool _1abcc9a63_checkGenericFn(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1abaa1d79_FnIns>&, jule::Ptr<_1a97237bc_Token>&, jule::Any&);
inline void _1abcc9da4_evalFnGenericFromIndexing(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1ab079e46_IndexingExpr>&);
inline jule::Ptr<_1abcbba55_Data> _1abcca1c3_evalIndexing(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab079e46_IndexingExpr>);
inline __jule_tuple_x_1abcbba55_Data__jule_tuple_x_1abcbba55_Data _1abcca4d1_evalSlicingExprs(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab07a551_SlicingExpr>&);
inline void _1abcca756_slicingArr(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>&);
inline void _1abccab1e_slicingStr(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&);
inline void _1abccb081_checkSlicing(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1ab07a551_SlicingExpr>&);
inline jule::Ptr<_1abcbba55_Data> _1abccb38e_evalSlicing(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab07a551_SlicingExpr>);
inline void _1abccb757_castPtr(_1abcbd5c3_Eval*, jule::Ptr<_1abce79d7_TypeKind>, jule::Ptr<_1abcbba55_Data>, jule::Ptr<_1a97237bc_Token>);
inline void _1abccbb20_castStruct(_1abcbd5c3_Eval*, jule::Ptr<_1abce79d7_TypeKind>, jule::Ptr<_1abcbba55_Data>, jule::Ptr<_1a97237bc_Token>);
inline void _1abccbed8_castRef(_1abcbd5c3_Eval*, jule::Ptr<_1abce79d7_TypeKind>, jule::Ptr<_1abcbba55_Data>, jule::Ptr<_1a97237bc_Token>);
inline void _1abccc3a1_castSlc(_1abcbd5c3_Eval*, jule::Ptr<_1abce79d7_TypeKind>, jule::Ptr<_1abcbba55_Data>, jule::Ptr<_1a97237bc_Token>);
inline void _1abccc6c0_castStr(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>, jule::Ptr<_1a97237bc_Token>);
inline void _1abccca88_castInt(_1abcbd5c3_Eval*, jule::Ptr<_1abce79d7_TypeKind>, jule::Ptr<_1abcbba55_Data>, jule::Ptr<_1a97237bc_Token>);
inline void _1abccce51_castNum(_1abcbd5c3_Eval*, jule::Ptr<_1abce79d7_TypeKind>, jule::Ptr<_1abcbba55_Data>, jule::Ptr<_1a97237bc_Token>);
inline void _1abccd319_castPrim(_1abcbd5c3_Eval*, jule::Ptr<_1abce79d7_TypeKind>, jule::Ptr<_1abcbba55_Data>, jule::Ptr<_1a97237bc_Token>);
inline void _1abccd638_castConstant(_1abcbd5c3_Eval*, jule::Ptr<_1abce79d7_TypeKind>&, jule::Ptr<_1abcbba55_Data>&);
inline void _1abccda01_castTypeEnum(_1abcbd5c3_Eval*, jule::Ptr<_1abce79d7_TypeKind>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1a97237bc_Token>&);
inline void _1abccddb9_castTypeEnumT(_1abcbd5c3_Eval*, jule::Ptr<_1abce79d7_TypeKind>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Ptr<_1abcbba55_Data> _1abcce31a_evalCastByTypeNData(_1abcbd5c3_Eval*, jule::Ptr<_1abce79d7_TypeKind>, jule::Ptr<_1abcbba55_Data>, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcce76b_evalCastT(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1abce79d7_TypeKind>&, jule::Ptr<_1ab072ed8_Expr>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Ptr<_1abcbba55_Data> _1abccea79_evalCast(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab075b12_CastExpr>);
inline jule::Ptr<_1abcbba55_Data> _1abcced87_evalNsSelection(_1abcbd5c3_Eval*, jule::Ptr<_1ab075eb9_NsSelectionExpr>);
inline jule::Ptr<_1abcbba55_Data> _1abcd02d8_evalStructLitExplicit(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab08a583_StructIns>, jule::Slice<jule::Ptr<_1ab072ed8_Expr>>, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd05e6_evalStructLit(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab078197_StructLit>);
inline _1abd06353_typeChecker _1abcd085a_typeChecker(_1abcbd5c3_Eval*);
inline jule::Ptr<_1abcbba55_Data> _1abcd0b68_evalType(_1abcbd5c3_Eval*, jule::Ptr<_1ab06d9b7_TypeDecl>);
inline void _1abcd0e87_callTypeFn(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline void _1abcd12a6_callBuiltinFn(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline void _1abcd15e7_checkFnOfConcurrentCall(_1abcbd5c3_Eval*, jule::Ptr<_1abaa1d79_FnIns>&, jule::Ptr<_1a97237bc_Token>);
inline void _1abcd19e3_processExceptionalHandler(_1abcbd5c3_Eval*, jule::Ptr<_1abaa1d79_FnIns>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline void _1abcd1d23_callFn(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abcd2131_evalFnCall(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab076eba_FnCallExpr>);
inline jule::Ptr<_1abcbba55_Data> _1abcd24d8_evalEnumStatic(_1abcbd5c3_Eval*, jule::Ptr<_1abab3220_Enum>, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd2890_evalTypeEnumStatic(_1abcbd5c3_Eval*, jule::Ptr<_1abab481a_TypeEnum>, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd2c47_evalStructStatic(_1abcbd5c3_Eval*, jule::Ptr<_1ab08a583_StructIns>, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd3198_evalTraitSubIdent(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>, jule::Ptr<_1abab10ca_Trait>, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd3693_evalStructSubIdent(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>, jule::Ptr<_1ab08a583_StructIns>, jule::Ptr<_1ab07643c_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1abcbba55_Data> _1abcd3a4a_evalSliceSubIdent(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd3e02_evalArraySubIdent(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd4210_evalIntTypeStatic(_1abcbd5c3_Eval*, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd451d_evalUintTypeStatic(_1abcbd5c3_Eval*, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd482b_evalI8TypeStatic(_1abcbd5c3_Eval*, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd4b39_evalI16TypeStatic(_1abcbd5c3_Eval*, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd4e47_evalI32TypeStatic(_1abcbd5c3_Eval*, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd5255_evalI64TypeStatic(_1abcbd5c3_Eval*, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd5563_evalU8TypeStatic(_1abcbd5c3_Eval*, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd5871_evalU16TypeStatic(_1abcbd5c3_Eval*, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd5b7e_evalU32TypeStatic(_1abcbd5c3_Eval*, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd5e8c_evalU64TypeStatic(_1abcbd5c3_Eval*, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd629a_evalF32TypeStatic(_1abcbd5c3_Eval*, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd65a8_evalF64TypeStatic(_1abcbd5c3_Eval*, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd6960_evalPrimStatic(_1abcbd5c3_Eval*, jule::Str, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1abcbba55_Data> _1abcd6d17_evalTypeStatic(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>, jule::Ptr<_1ab07643c_SubIdentExpr>);
inline jule::Ptr<_1abcbba55_Data> _1abcd71be_evalObjSubIdent(_1abcbd5c3_Eval*, jule::Ptr<_1abcbba55_Data>, jule::Ptr<_1ab07643c_SubIdentExpr>);
inline jule::Ptr<_1abcbba55_Data> _1abcd74cc_evalSubIdent(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab07643c_SubIdentExpr>);
inline jule::Ptr<_1abcbba55_Data> _1abcd77da_evalTuple(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab073b65_TupleExpr>);
inline jule::Ptr<_1abcbba55_Data> _1abcd7b92_evalMap(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1abd02ecb_Map>, jule::Ptr<_1ab07861a_BraceLit>);
inline jule::Ptr<_1abcbba55_Data> _1abcd7ea0_evalBraceLit(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab07861a_BraceLit>);
inline jule::Ptr<_1abcbba55_Data> _1abcd82ad_evalAnonFn(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab080446_FnDecl>);
inline jule::Ptr<_1abcbba55_Data> _1abcd85bb_evalBinop(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab0768b0_BinopExpr>);
inline jule::Ptr<_1abcbba55_Data> _1abcd88c9_evalExprKind(jule::Ptr<_1abcbd5c3_Eval>, jule::Any);
inline jule::Ptr<_1abcbba55_Data> _1abcd8bd7_eval(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab072ed8_Expr>);
inline jule::Ptr<_1abcbba55_Data> _1abcd8ee5_evalExpr(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1ab072ed8_Expr>);
struct _1abcbd5c3_Eval {
	jule::Ptr<_1abc55eea_Sema> _field_s;
	jule::Trait<_1abd13959_Lookup> _field_lookup;
	jule::Ptr<_1abce79d7_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1abc73ee6_Var> _field_owner;
	jule::Ptr<_1ab08a396_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	_1abcbd5c3_Eval(void) = default;

	inline bool operator==(_1abcbd5c3_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1abcbd5c3_Eval _other) { return !this->operator==(_other); }


};
inline _1abcd9468_unaryEval static__1abcd991e_new(jule::Ptr<_1abcbd5c3_Eval>);
inline void _1abcd9aea_minus(_1abcd9468_unaryEval*);
inline void _1abcd9cc6_plus(_1abcd9468_unaryEval*);
inline void _1abcd9ea2_caret(_1abcd9468_unaryEval*);
inline void _1abcda17d_excl(_1abcd9468_unaryEval*);
inline void _1abcda359_star(_1abcd9468_unaryEval*);
inline void _1abcda535_amper(_1abcd9468_unaryEval*);
inline void _1abcda711_typeDecl(_1abcd9468_unaryEval*);
inline void _1abcda8dc_evalData(_1abcd9468_unaryEval*);
inline jule::Ptr<_1abcbba55_Data> _1abcdabb7_eval(_1abcd9468_unaryEval*, jule::Ptr<_1ab0753a3_UnaryExpr>);
struct _1abcd9468_unaryEval {
	jule::Ptr<_1abcbd5c3_Eval> _field_e;
	jule::Ptr<_1abcbba55_Data> _field_d;
	jule::Ptr<_1ab0753a3_UnaryExpr> _field_u;
	

	_1abcd9468_unaryEval(void) = default;

	inline bool operator==(_1abcd9468_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1abcd9468_unaryEval _other) { return !this->operator==(_other); }


};
inline _1abcdb206_binaryEval static__1abcdb7cd_newPlain(jule::Ptr<_1abcbd5c3_Eval>);
inline _1abcdb206_binaryEval static__1abcdbb1e_new(jule::Ptr<_1abcbd5c3_Eval>, jule::Ptr<_1a97237bc_Token>);
inline jule::Bool _1abcdbd83_checkTypeCompatibility(_1abcdb206_binaryEval*);
inline jule::Bool _1abcdc12a_checkStructCommonOperatorCompatibility(_1abcdb206_binaryEval*);
inline jule::Ptr<_1abcbba55_Data> _1abcdc3c2_evalNil(_1abcdb206_binaryEval*);
inline jule::Ptr<_1abcbba55_Data> _1abcdc636_evalEnum(_1abcdb206_binaryEval*);
inline jule::Ptr<_1abcbba55_Data> _1abcdc89a_evalTypeEnum(_1abcdb206_binaryEval*);
inline jule::Ptr<_1abcbba55_Data> _1abcdcb0e_evalSptr(_1abcdb206_binaryEval*);
inline jule::Ptr<_1abcbba55_Data> _1abcdcd73_evalPtr(_1abcdb206_binaryEval*);
inline jule::Ptr<_1abcbba55_Data> _1abcdd0d7_evalArr(_1abcdb206_binaryEval*);
inline jule::Ptr<_1abcbba55_Data> _1abcdd34b_evalSlc(_1abcdb206_binaryEval*);
inline jule::Ptr<_1abcbba55_Data> _1abcdd5b0_evalFn(_1abcdb206_binaryEval*);
inline jule::Ptr<_1abcbba55_Data> _1abcdd824_evalStruct(_1abcdb206_binaryEval*);
inline jule::Ptr<_1abcbba55_Data> _1abcdda88_evalTrait(_1abcdb206_binaryEval*);
inline jule::Ptr<_1abcbba55_Data> _1abcddcec_evalAny(_1abcdb206_binaryEval*);
inline jule::Ptr<_1abcbba55_Data> _1abcde061_evalBool(_1abcdb206_binaryEval*);
inline jule::Ptr<_1abcbba55_Data> _1abcde2c5_evalStr(_1abcdb206_binaryEval*);
inline void _1abcde4a1_setTypeToGreater(_1abcdb206_binaryEval*);
inline void _1abcde6e3_checkModData(_1abcdb206_binaryEval*, jule::Ptr<_1abcbba55_Data>&);
inline void _1abcde8be_mod(_1abcdb206_binaryEval*);
inline jule::Bool _1abcdec76_numbersAreCompatibile(_1abcdb206_binaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1abcbba55_Data> _1abcdeeda_evalFloat(_1abcdb206_binaryEval*);
inline jule::Ptr<_1abcbba55_Data> _1abce024e_evalInt(_1abcdb206_binaryEval*);
inline jule::Ptr<_1abcbba55_Data> _1abce04b3_evalPrim(_1abcdb206_binaryEval*);
inline void _1abce068e_checkSpecialCases(_1abcdb206_binaryEval*);
inline jule::Ptr<_1abcbba55_Data> _1abce0903_evalOp(_1abcdb206_binaryEval*);
inline void _1abce0b78_evalConst(_1abcdb206_binaryEval*, jule::Ptr<_1abcbba55_Data>&);
inline void _1abce0ded_checkData(_1abcdb206_binaryEval*, jule::Ptr<_1abcbba55_Data>&);
inline void _1abce10c9_checkDatas(_1abcdb206_binaryEval*);
inline void _1abce134e_setModel(_1abcdb206_binaryEval*, jule::Ptr<_1abcbba55_Data>&);
inline void _1abce15c4_postEval(_1abcdb206_binaryEval*, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abce197b_solveExplicit(_1abcdb206_binaryEval*, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abce1c89_eval(_1abcdb206_binaryEval*, jule::Ptr<_1ab0768b0_BinopExpr>&);
struct _1abcdb206_binaryEval {
	jule::Ptr<_1abcbd5c3_Eval> _field_e;
	jule::Ptr<_1abcbba55_Data> _field_l;
	jule::Ptr<_1abcbba55_Data> _field_r;
	jule::Ptr<_1a97237bc_Token> _field_op;
	

	_1abcdb206_binaryEval(void) = default;

	inline bool operator==(_1abcdb206_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1abcdb206_binaryEval _other) { return !this->operator==(_other); }


};
struct _1abce62aa_InsGeneric {
	jule::Ptr<_1abce79d7_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1abce79d7_TypeKind>> _field_Constraint;
	

	_1abce62aa_InsGeneric(void) = default;


};
struct _1abce6ce4_TypeAlias {
	jule::Ptr<_1ab07d950_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1abcebdb5_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>> _field_Generics;
	

	_1abce6ce4_TypeAlias(void) = default;


};
inline jule::Str _1abce7dd3_Str(_1abce79d7_TypeKind*);
inline jule::Bool _1abce81e1_Equal(jule::Ptr<_1abce79d7_TypeKind>, jule::Ptr<_1abce79d7_TypeKind>);
inline jule::Bool _1abce86a8_CppLinked(_1abce79d7_TypeKind*);
inline jule::Bool _1abce891c_IsNil(_1abce79d7_TypeKind*);
inline jule::Bool _1abce8b81_Void(_1abce79d7_TypeKind*);
inline jule::Bool _1abce8de5_Comparable(_1abce79d7_TypeKind*);
inline jule::Bool _1abce9159_Mutable(_1abce79d7_TypeKind*);
inline jule::Bool _1abce93bd_NilCompatible(_1abce79d7_TypeKind*);
inline jule::Bool _1abce9632_PerformsRC(_1abce79d7_TypeKind*);
inline jule::Bool _1abce9896_SupportsCloning(_1abce79d7_TypeKind*);
inline jule::Bool _1abce9b0a_Variadicable(_1abce79d7_TypeKind*);
inline jule::Ptr<_1abcec734_Prim> _1abce9d6e_Prim(_1abce79d7_TypeKind*);
inline jule::Ptr<_1abd00eb8_Sptr> _1abcea0d3_Sptr(_1abce79d7_TypeKind*);
inline jule::Ptr<_1abd0452c_Ptr> _1abcea347_Ptr(_1abce79d7_TypeKind*);
inline jule::Ptr<_1abab3220_Enum> _1abcea5ab_Enum(_1abce79d7_TypeKind*);
inline jule::Ptr<_1abab481a_TypeEnum> _1abcea820_TypeEnum(_1abce79d7_TypeKind*);
inline jule::Ptr<_1abd03ac0_Arr> _1abceaa84_Arr(_1abce79d7_TypeKind*);
inline jule::Ptr<_1abd01925_Slc> _1abceace8_Slc(_1abce79d7_TypeKind*);
inline jule::Ptr<_1abaa1d79_FnIns> _1abceb05c_Fn(_1abce79d7_TypeKind*);
inline jule::Ptr<_1ab08a583_StructIns> _1abceb2c1_Struct(_1abce79d7_TypeKind*);
inline jule::Ptr<_1abab10ca_Trait> _1abceb535_Trait(_1abce79d7_TypeKind*);
inline jule::Ptr<_1abd02ecb_Map> _1abceb799_Map(_1abce79d7_TypeKind*);
inline jule::Ptr<_1abd024a3_Tuple> _1abceba0d_Tup(_1abce79d7_TypeKind*);
struct _1abce79d7_TypeKind {
	jule::Str _field_CppIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1abce75a8_Kind> _field_Kind;
	

	_1abce79d7_TypeKind(void) = default;

	inline bool operator==(_1abce79d7_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1abce79d7_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1abcec26c_checked(_1abcebdb5_TypeSymbol*);
inline void _1abcec448_removeKind(_1abcebdb5_TypeSymbol*);
struct _1abcebdb5_TypeSymbol {
	jule::Ptr<_1ab06d9b7_TypeDecl> _field_Decl;
	jule::Ptr<_1abce79d7_TypeKind> _field_Kind;
	

	_1abcebdb5_TypeSymbol(void) = default;

	inline bool operator==(_1abcebdb5_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1abcebdb5_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1abceca97_Str(_1abcec734_Prim*);
inline jule::Bool _1abcecda5_Equal(jule::Ptr<_1abcec734_Prim>, jule::Ptr<_1abce79d7_TypeKind>);
inline jule::Bool _1abced328_IsConstraint(_1abcec734_Prim*);
inline jule::Bool _1abced58c_IsI8(_1abcec734_Prim*);
inline jule::Bool _1abced801_IsI16(_1abcec734_Prim*);
inline jule::Bool _1abceda65_IsI32(_1abcec734_Prim*);
inline jule::Bool _1abcedcc9_IsI64(_1abcec734_Prim*);
inline jule::Bool _1abcee03d_IsU8(_1abcec734_Prim*);
inline jule::Bool _1abcee2a2_IsU16(_1abcec734_Prim*);
inline jule::Bool _1abcee516_IsU32(_1abcec734_Prim*);
inline jule::Bool _1abcee77a_IsU64(_1abcec734_Prim*);
inline jule::Bool _1abcee9de_IsF32(_1abcec734_Prim*);
inline jule::Bool _1abceec53_IsF64(_1abcec734_Prim*);
inline jule::Bool _1abceeeb7_IsInt(_1abcec734_Prim*);
inline jule::Bool _1abd0022b_IsUint(_1abcec734_Prim*);
inline jule::Bool _1abd00490_IsUintptr(_1abcec734_Prim*);
inline jule::Bool _1abd00704_IsBool(_1abcec734_Prim*);
inline jule::Bool _1abd00968_IsStr(_1abcec734_Prim*);
inline jule::Bool _1abd00bcc_IsAny(_1abcec734_Prim*);
struct _1abcec734_Prim {
	jule::Str _field_Kind;
	

	_1abcec734_Prim(void) = default;

	inline bool operator==(_1abcec734_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1abcec734_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1abd0132b_Str(_1abd00eb8_Sptr*);
inline jule::Bool _1abd01639_Equal(jule::Ptr<_1abd00eb8_Sptr>, jule::Ptr<_1abce79d7_TypeKind>);
struct _1abd00eb8_Sptr {
	jule::Ptr<_1abce79d7_TypeKind> _field_Elem;
	

	_1abd00eb8_Sptr(void) = default;

	inline bool operator==(_1abd00eb8_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1abd00eb8_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1abd01e31_Str(_1abd01925_Slc*);
inline jule::Bool _1abd0223e_Equal(jule::Ptr<_1abd01925_Slc>, jule::Ptr<_1abce79d7_TypeKind>);
struct _1abd01925_Slc {
	jule::Ptr<_1abce79d7_TypeKind> _field_Elem;
	

	_1abd01925_Slc(void) = default;

	inline bool operator==(_1abd01925_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1abd01925_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1abd02816_Str(_1abd024a3_Tuple*);
inline jule::Bool _1abd02b24_Equal(jule::Ptr<_1abd024a3_Tuple>, jule::Ptr<_1abce79d7_TypeKind>);
struct _1abd024a3_Tuple {
	jule::Slice<jule::Ptr<_1abce79d7_TypeKind>> _field_Types;
	

	_1abd024a3_Tuple(void) = default;


};
inline jule::Str _1abd0333e_Str(_1abd02ecb_Map*);
inline jule::Bool _1abd0364c_Equal(jule::Ptr<_1abd02ecb_Map>, jule::Ptr<_1abce79d7_TypeKind>);
struct _1abd02ecb_Map {
	jule::Ptr<_1abce79d7_TypeKind> _field_Key;
	jule::Ptr<_1abce79d7_TypeKind> _field_Val;
	

	_1abd02ecb_Map(void) = default;

	inline bool operator==(_1abd02ecb_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1abd02ecb_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1abd03e33_Str(_1abd03ac0_Arr*);
inline jule::Bool _1abd04241_Equal(jule::Ptr<_1abd03ac0_Arr>, jule::Ptr<_1abce79d7_TypeKind>);
struct _1abd03ac0_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1abce79d7_TypeKind> _field_Elem;
	

	_1abd03ac0_Arr(void) = default;

	inline bool operator==(_1abd03ac0_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1abd03ac0_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1abd04890_Str(_1abd0452c_Ptr*);
inline jule::Bool _1abd04b9d_Equal(jule::Ptr<_1abd0452c_Ptr>, jule::Ptr<_1abce79d7_TypeKind>);
inline jule::Bool _1abd05000_IsUnsafe(_1abd0452c_Ptr*);
struct _1abd0452c_Ptr {
	jule::Ptr<_1abce79d7_TypeKind> _field_Elem;
	

	_1abd0452c_Ptr(void) = default;

	inline bool operator==(_1abd0452c_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1abd0452c_Ptr _other) { return !this->operator==(_other); }


};
struct _1abd05473_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1abd05473_referencer(void) = default;

	inline bool operator==(_1abd05473_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1abd05473_referencer _other) { return !this->operator==(_other); }


};
inline void _1abd06a5c_pushErr(_1abd06353_typeChecker*, jule::Ptr<_1a97237bc_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1abd06c38_allowBuiltin(_1abd06353_typeChecker*);
inline void _1abd06e14_disallowBuiltin(_1abd06353_typeChecker*);
inline jule::Ptr<_1abcec734_Prim> _1abd07222_buildPrim(_1abd06353_typeChecker*, jule::Ptr<_1ab06e07d_IdentTypeDecl>&);
inline void _1bc459eb3_pushReference(_1abd06353_typeChecker*, jule::Ptr<_1ab08a583_StructIns>&);
inline void _1bc45cda6_pushReference(_1abd06353_typeChecker*, jule::Ptr<_1abab10ca_Trait>&);
inline void _1abd0771c_pushReferenceByKind(_1abd06353_typeChecker*, jule::Ptr<_1abce79d7_TypeKind>&);
inline void _1abd07ad5_pushCycleError(_1abd06353_typeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1abd07e8c_checkCrossCycle(_1abd06353_typeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1abd08344_checkIllegalCycles(_1abd06353_typeChecker*, jule::Ptr<_1ab06e07d_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1abce75a8_Kind> _1abd086eb_fromTypeAlias(_1abd06353_typeChecker*, jule::Ptr<_1ab06e07d_IdentTypeDecl>&, jule::Ptr<_1abce6ce4_TypeAlias>&);
inline jule::Ptr<_1abab3220_Enum> _1abd08aa3_fromEnum(_1abd06353_typeChecker*, jule::Ptr<_1ab06e07d_IdentTypeDecl>&, jule::Ptr<_1abab3220_Enum>&);
inline jule::Ptr<_1abab481a_TypeEnum> _1abd08e5a_fromTypeEnum(_1abd06353_typeChecker*, jule::Ptr<_1ab06e07d_IdentTypeDecl>&, jule::Ptr<_1abab481a_TypeEnum>&);
inline jule::Ptr<_1abab10ca_Trait> _1abd09312_fromTrait(_1abd06353_typeChecker*, jule::Ptr<_1ab06e07d_IdentTypeDecl>&, jule::Ptr<_1abab10ca_Trait>&);
inline jule::Bool _1abd096b9_checkStructIns(_1abd06353_typeChecker*, jule::Ptr<_1ab08a583_StructIns>&, jule::Ptr<_1a97237bc_Token>&);
inline void _1abd09961_appendUsedStructReference(_1abd06353_typeChecker*, jule::Ptr<_1ab08a1a9_Struct>&);
inline jule::Ptr<_1ab08a583_StructIns> _1abd09d29_buildStructInstance(_1abd06353_typeChecker*, jule::Ptr<_1ab06e07d_IdentTypeDecl>&, jule::Ptr<_1ab08a1a9_Struct>&);
inline jule::Ptr<_1ab08a583_StructIns> _1abd0a1d1_fromStruct(_1abd06353_typeChecker*, jule::Ptr<_1ab06e07d_IdentTypeDecl>&, jule::Ptr<_1ab08a1a9_Struct>&);
inline jule::Trait<_1abce75a8_Kind> _1abd0a4de_getDef(_1abd06353_typeChecker*, jule::Ptr<_1ab06e07d_IdentTypeDecl>&);
inline jule::Trait<_1abce75a8_Kind> _1abd0a7ec_buildIdent(_1abd06353_typeChecker*, jule::Ptr<_1ab06e07d_IdentTypeDecl>);
inline jule::Trait<_1abce75a8_Kind> _1abd0ab0a_buildSubIdent(_1abd06353_typeChecker*, jule::Ptr<_1ab06e6cc_SubIdentTypeDecl>);
inline jule::Ptr<_1abd00eb8_Sptr> _1abd0ae18_buildSptrFromType(_1abd06353_typeChecker*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Ptr<_1abd00eb8_Sptr> _1abd0b226_buildSptr(_1abd06353_typeChecker*, jule::Ptr<_1ab06ed70_SptrTypeDecl>);
inline jule::Ptr<_1abd0452c_Ptr> _1abd0b534_buildPtrFromType(_1abd06353_typeChecker*, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Ptr<_1abd0452c_Ptr> _1abd0b842_buildPtr(_1abd06353_typeChecker*, jule::Ptr<_1ab070843_PtrTypeDecl>);
inline jule::Ptr<_1abd01925_Slc> _1abd0bb50_buildSlc(_1abd06353_typeChecker*, jule::Ptr<_1ab07026b_SlcTypeDecl>);
inline jule::Ptr<_1abd03ac0_Arr> _1abd0be5d_buildArr(_1abd06353_typeChecker*, jule::Ptr<_1ab070ec5_ArrTypeDecl>);
inline jule::Ptr<_1abd02ecb_Map> _1abd0c26b_buildMap(_1abd06353_typeChecker*, jule::Ptr<_1ab071723_MapTypeDecl>);
inline jule::Ptr<_1abd024a3_Tuple> _1abd0c579_buildTuple(_1abd06353_typeChecker*, jule::Ptr<_1ab070557_TupleTypeDecl>);
inline jule::Bool _1abd0c887_checkFnTypes(_1abd06353_typeChecker*, jule::Ptr<_1abaa1d79_FnIns>&);
inline jule::Ptr<_1abaa1d79_FnIns> _1abd0cb95_buildFn(_1abd06353_typeChecker*, jule::Ptr<_1ab080446_FnDecl>);
inline jule::Trait<_1abce75a8_Kind> _1abd0cea3_buildByNamespace(_1abd06353_typeChecker*, jule::Ptr<_1ab06ea84_NamespaceTypeDecl>);
inline jule::Ptr<_1abce79d7_TypeKind> _1abd0d2b1_build(_1abd06353_typeChecker*, jule::Any&);
inline jule::Ptr<_1abce79d7_TypeKind> _1abd0d5be_checkDecl(_1abd06353_typeChecker*, jule::Ptr<_1ab06d9b7_TypeDecl>&);
inline void _1abd0d844_check(_1abd06353_typeChecker*, jule::Ptr<_1abcebdb5_TypeSymbol>&);
struct _1abd06353_typeChecker {
	jule::Ptr<_1abc55eea_Sema> _field_s;
	jule::Trait<_1abd13959_Lookup> _field_rootLookup;
	jule::Trait<_1abd13959_Lookup> _field_lookup;
	jule::Ptr<_1abd05473_referencer> _field_referencer;
	jule::Ptr<_1abaa4ce4_ReferenceStack> _field_refers;
	jule::Ptr<_1a97237bc_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1abce79d7_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>> _field_useGenerics;
	jule::Bool _field_notPlain = false;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1abce6ce4_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	

	_1abd06353_typeChecker(void) = default;


};
inline jule::Bool static__1abd0dea4_prim(jule::Str&, jule::Ptr<_1abcec734_Prim>);
inline jule::Bool static__1abd0e2e5_exist(jule::Str&, jule::Ptr<_1abce79d7_TypeKind>&);
struct _1abd0da64_identTypeLookup {
	

	_1abd0da64_identTypeLookup(void) = default;

	inline bool operator==(_1abd0da64_identTypeLookup _other) { return true; }

	inline bool operator!=(_1abd0da64_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1ac4c8ad0_FileInfo {
	jule::Ptr<_1ab039532_Ast> _field_Ast;
	jule::Slice<_1a7995777_Log> _field_Errors;
	

	_1ac4c8ad0_FileInfo(void) = default;


};
struct _1ac5226ea_stmt {
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	

	_1ac5226ea_stmt(void) = default;


};
inline void _1ac5236a7_stop(_1ac523025_scopeParser*);
inline jule::Bool _1ac52391b_stopped(_1ac523025_scopeParser*);
inline jule::Bool _1ac523b80_finished(_1ac523025_scopeParser*);
inline jule::Bool _1ac523de4_isLastSt(_1ac523025_scopeParser*);
inline void _1ac524213_pushErr(_1ac523025_scopeParser*, jule::Ptr<_1a97237bc_Token>, jule::Str);
inline void _1ac524532_pushSuggestion(_1ac523025_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1ac5247a7_insertAsNext(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ac5226ea_stmt> _1ac524a1b_next(_1ac523025_scopeParser*);
inline jule::Ptr<_1ab07d950_ScopeTree> _1ac524dc3_buildScope(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1ab081425_VarDecl> _1ac5251d1_buildVarSt(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab0817cc_RetSt> _1ac5254de_buildRetSt(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab081e3c_Iter> _1ac5257ec_buildWhileNextIter(_1ac523025_scopeParser*, jule::Ptr<_1ac5226ea_stmt>&);
inline jule::Ptr<_1ab082712_WhileKind> _1ac525b0a_buildWhileIterKind(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _1ac525e18_getRangeKindKeysTokens(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab081425_VarDecl> _1ac526226_buildRangeKindKey(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Slice<jule::Ptr<_1ab081425_VarDecl>> _1ac526534_buildRangeKindKeys(_1ac523025_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>>&);
inline void _1ac526875_setupRangeKindKeysPlain(_1ac523025_scopeParser*, jule::Ptr<_1ab0830a3_RangeKind>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline void _1ac526bc7_setupRangeKindKeysExplicit(_1ac523025_scopeParser*, jule::Ptr<_1ab0830a3_RangeKind>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline void _1ac527007_setupRangeKindKeys(_1ac523025_scopeParser*, jule::Ptr<_1ab0830a3_RangeKind>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab0830a3_RangeKind> _1ac527458_buildRangeIterKind(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Any _1ac527810_buildCommonIterKind(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Ptr<_1ab081e3c_Iter> _1ac527b1d_buildCommonIter(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab081e3c_Iter> _1ac527e2b_buildIterSt(_1ac523025_scopeParser*, jule::Ptr<_1ac5226ea_stmt>&);
inline jule::Ptr<_1ab08345a_BreakSt> _1ac528239_buildBreakSt(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab083812_ContSt> _1ac528547_buildContSt(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab083c85_If> _1ac528855_buildIf(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab08413c_Else> _1ac528b63_buildElse(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab0845b0_Conditional> _1ac528e71_buildIfElseChain(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab072ed8_Expr> _1ac52927e_buildCoCallSt(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab07b51e_GotoSt> _1ac52958c_buildGotoSt(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab07b80a_FallSt> _1ac52989a_buildFallSt(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab084c86_TypeAliasDecl> _1ac529ba8_buildTypeAliasSt(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline void _1ac52a11a_pushCaseExpr(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>, jule::Ptr<_1a97237bc_Token>, jule::Bool, jule::Slice<jule::Ptr<_1ab072ed8_Expr>>&);
inline jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _1ac52a56b_buildCaseExprs(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Ptr<_1a97237bc_Token>&, jule::Bool);
inline jule::Ptr<_1ab07d950_ScopeTree> _1ac52a879_buildCaseScope(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline __jule_tuple_x_1ab085209_Case__jule_tuple_bool _1ac52ac31_buildCase(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Bool);
inline __jule_tuple_sx_1ab085209_Case__jule_tuple_x_1ab08413c_Else _1ac52b0d8_buildCases(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>, jule::Bool);
inline jule::Ptr<_1ab0858d0_MatchCase> _1ac52b3e6_buildMatchCase(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab07d950_ScopeTree> _1ac52b704_buildScopeSt(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab07b167_LabelSt> _1ac52ba12_buildLabelSt(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline __jule_tuple__1ab07d114_StmtData__jule_tuple_bool _1ac52bd20_buildIdSt(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ac53ad40_assignInfo> _1ac52c12d_buildAssignInfo(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab07be15_AssignLeft> _1ac52c43b_buildAssignL(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Slice<jule::Ptr<_1ab07be15_AssignLeft>> _1ac52c749_buildAssignLs(_1ac523025_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>>&);
inline __jule_tuple_x_1ab07c454_AssignSt__jule_tuple_bool _1ac52ca57_buildPlainAssign(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline __jule_tuple_x_1ab07c454_AssignSt__jule_tuple_bool _1ac52cd65_buildDeclAssign(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline __jule_tuple_x_1ab07c454_AssignSt__jule_tuple_bool _1ac52d173_buildAssignSt(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab073879_UseExpr> _1ac52d481_buildUseExpr(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Any _1ac52d78e_buildSt(_1ac523025_scopeParser*, jule::Ptr<_1ac5226ea_stmt>&);
inline void _1ac52daad_build(_1ac523025_scopeParser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Ptr<_1ab07d950_ScopeTree>&);
struct _1ac523025_scopeParser {
	jule::Ptr<_1ac53e66d_parser> _field_p;
	jule::Ptr<_1ab07d950_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1ac5226ea_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	

	_1ac523025_scopeParser(void) = default;


};
inline void _1ac52ecce_pushErr(_1ac52e53c_exprBuilder*, jule::Ptr<_1a97237bc_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ac5300ed_pushSuggestion(_1ac52e53c_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ab073b65_TupleExpr> _1ac53040b_buildTuple(_1ac52e53c_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>>&);
inline jule::Ptr<_1ab07401c_LitExpr> _1ac530719_buildLit(_1ac52e53c_exprBuilder*, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac530a27_buildPrimitiveType(_1ac52e53c_exprBuilder*, jule::Ptr<_1a97237bc_Token>&);
inline jule::Any _1ac530d35_buildSingle(_1ac52e53c_exprBuilder*, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1ab074b99_IdentExpr> _1ac531143_buildCppLinkedIdent(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab0753a3_UnaryExpr> _1ac531451_buildUnary(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab07643c_SubIdentExpr> _1ac53175e_buildObjSubIdent(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab075eb9_NsSelectionExpr> _1ac531a6c_buildNsSubIdent(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac531d7a_buildType(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Any _1ac532188_buildSubIdent(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab07575a_VariadicExpr> _1ac532496_buildVariadic(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Any _1ac5327a4_buildOpRight(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab0732c4_RangeExpr> _1ac532ad4_buildBetweenParentheses(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab075b12_CastExpr> _1ac532e03_tryBuildCast(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline void _1ac5332bb_pushArg(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1ab072ed8_Expr>>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>, jule::Ptr<_1a97237bc_Token>);
inline jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _1ac5335c9_buildArgs(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>> _1ac5338d7_buildCallGenerics(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab076eba_FnCallExpr> _1ac533d38_buildFnCall(_1ac52e53c_exprBuilder*, jule::Ptr<_1a97237bc_Token>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Any _1ac534146_buildParenthesesRange(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab074726_UnsafeExpr> _1ac534454_buildUnsafeExpr(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab080446_FnDecl> _1ac534762_buildAnonFn(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Any _1ac534a70_buildUnsafe(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline void _1ac534e38_pushRangeLitPart(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>, jule::Ptr<_1a97237bc_Token>, jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _1ac535268_getBraceRangeLitExprParts(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab077949_FieldExprPair> _1ac535587_buildFieldExprPair(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab072ed8_Expr> _1ac535895_buildStructLitExpr(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _1ac535ba3_buildStructLitExprs(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab078197_StructLit> _1ac535ed3_buildTypedStructLiteral(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab072ed8_Expr> _1ac536302_buildBraceLitPart(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab07861a_BraceLit> _1ac536610_buildBraceLit(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Any _1ac53691d_buildBraceRange(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _1ac536c2b_getEnumerableParts(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab0795c7_SliceExpr> _1ac537039_buildSlice(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab079e46_IndexingExpr> _1ac53748a_buildIndexing(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>, jule::Slice<jule::Ptr<_1a97237bc_Token>>, jule::Ptr<_1a97237bc_Token>);
inline jule::Ptr<_1ab07a551_SlicingExpr> _1ac537a2e_buildSlicing(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Ptr<_1a97237bc_Token>&, jule::Ptr<_1a97237bc_Token>);
inline jule::Any _1ac537d3c_buildBracketRange(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Any _1ac53814a_buildData(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Any _1ac538502_buildBinop(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::I64);
inline jule::Any _1ac538810_build(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Any _1ac538b1d_buildKind(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab072ed8_Expr> _1ac538e2b_buildFromTokens(_1ac52e53c_exprBuilder*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
struct _1ac52e53c_exprBuilder {
	jule::Ptr<_1ac53e66d_parser> _field_p;
	

	_1ac52e53c_exprBuilder(void) = default;

	inline bool operator==(_1ac52e53c_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1ac52e53c_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1ac53ad40_assignInfo {
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _field_l;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _field_r;
	jule::Ptr<_1a97237bc_Token> _field_setter;
	jule::Bool _field_ok = false;
	

	_1ac53ad40_assignInfo(void) = default;


};
inline void _1ac53e99d_stop(_1ac53e66d_parser*);
inline jule::Bool _1ac53ec12_stopped(_1ac53e66d_parser*);
inline void _1ac5400ca_pushErr(_1ac53e66d_parser*, jule::Ptr<_1a97237bc_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ac5403e9_pushSuggestion(_1ac53e66d_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ab072ed8_Expr> _1ac540707_buildExpr(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab03a720_Directive> _1ac540a15_buildDirective(_1ac53e66d_parser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline void _1ac540c8a_pushDirective(_1ac53e66d_parser*, jule::Ptr<_1ab03a720_Directive>);
inline jule::Ptr<_1ab07d950_ScopeTree> _1ac541142_buildScope(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Ptr<_1a97237bc_Token>);
inline __jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool _1ac541593__buildType(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::I64*, jule::Bool);
inline __jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool _1ac5419e4_buildType(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_1ab084c86_TypeAliasDecl> _1ac541d02_buildTypeAliasDecl(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline void _1ac542121_buildVarTypeAndExpr(jule::Ptr<_1ac53e66d_parser>, jule::Ptr<_1ab081425_VarDecl>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline void _1ac542440_buildVarCommon(jule::Ptr<_1ac53e66d_parser>, jule::Ptr<_1ab081425_VarDecl>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline void _1ac542808_buildVarBegin(_1ac53e66d_parser*, jule::Ptr<_1ab081425_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab081425_VarDecl> _1ac542b16_buildVar(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab07acb0_GenericDecl> _1ac542e24_buildGeneric(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>> _1ac5432cb_buildGenerics(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Ptr<_1a97237bc_Token>&);
inline jule::Ptr<_1ab07e126_ParamDecl> _1ac5435d9_buildSelfParam(_1ac53e66d_parser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline void _1ac5439a2_paramTypeBegin(_1ac53e66d_parser*, jule::Ptr<_1ab07e126_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline void _1ac543cc1_buildParamType(jule::Ptr<_1ac53e66d_parser>, jule::Ptr<_1ab07e126_ParamDecl>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline void _1ac5440e0_buildParamBody(jule::Ptr<_1ac53e66d_parser>, jule::Ptr<_1ab07e126_ParamDecl>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab07e126_ParamDecl> _1ac5443ed_buildParam(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline void _1ac544673_checkParams(_1ac53e66d_parser*, jule::Slice<jule::Ptr<_1ab07e126_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1ab07e126_ParamDecl>> _1ac544a2a_buildParams(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Bool);
inline __jule_tuple_x_1ab071aca_RetTypeDecl__jule_tuple_bool _1ac544dd2_buildMultiRetType(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::I64&);
inline __jule_tuple_x_1ab071aca_RetTypeDecl__jule_tuple_bool _1ac545289_buildRetType(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::I64&);
inline jule::Ptr<_1ab080446_FnDecl> _1ac5456da_buildFnPrototype(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_1ab080446_FnDecl> _1ac545b3b_buildFn(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1a97237bc_Token>> _1ac545e49_getUseDeclSelectors(_1ac53e66d_parser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline void _1ac546268_buildCppUseDecl(_1ac53e66d_parser*, jule::Ptr<_1ab086172_UseDecl>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline void _1ac546587_buildStdUseDecl(_1ac53e66d_parser*, jule::Ptr<_1ab086172_UseDecl>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline void _1ac5468a6_buildIdentUseDecl(_1ac53e66d_parser*, jule::Ptr<_1ab086172_UseDecl>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline void _1ac546bc5_parseUseDecl(_1ac53e66d_parser*, jule::Ptr<_1ab086172_UseDecl>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab086172_UseDecl> _1ac54707c_buildUseDecl(_1ac53e66d_parser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>, jule::Bool);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac547434_buildTypeEnumItemKind(jule::Ptr<_1ac53e66d_parser>, jule::I64&, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Slice<jule::Ptr<_1ab087b24_TypeEnumItemDecl>> _1ac547742_buildTypeEnumItems(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab08822e_TypeEnumDecl> _1ac547a50_buildTypeEnumDecl(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab072ed8_Expr> _1ac547e07_buildEnumItemExpr(jule::Ptr<_1ac53e66d_parser>, jule::I64&, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Slice<jule::Ptr<_1ab0865e5_EnumItemDecl>> _1ac548215_buildEnumItems(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab08711d_EnumDecl> _1ac548523_buildEnumDecl(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Any _1ac548831_buildNodeEnumDecl(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab08842c_FieldDecl> _1ac548b3e_buildField(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Slice<jule::Ptr<_1ab08842c_FieldDecl>> _1ac548e4c_buildStructDeclFields(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab088bd0_StructDecl> _1ac54925a_buildStructDecl(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline void _1ac5494d0_checkMethodReceiver(_1ac53e66d_parser*, jule::Ptr<_1ab080446_FnDecl>&);
inline jule::Slice<jule::Ptr<_1ab080446_FnDecl>> _1ac5497dd_buildTraitMethods(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab0892da_TraitDecl> _1ac549aeb_buildTraitDecl(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab080446_FnDecl> _1ac549e09_buildCppLinkFn(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab081425_VarDecl> _1ac54a217_buildCppLinkVar(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab088bd0_StructDecl> _1ac54a525_buildCppLinkStruct(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab084c86_TypeAliasDecl> _1ac54a833_buildCppLinkTypeAlias(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab086172_UseDecl> _1ac54ab41_buildCppLinkUse(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Any _1ac54ae4e_buildCppLink(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab080446_FnDecl> _1ac54b25c_getMethod(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline void _1ac54b57b_parseImplBody(jule::Ptr<_1ac53e66d_parser>, jule::Ptr<_1ab0898e5_Impl>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab0898e5_Impl> _1ac54b889_buildImpl(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Any _1ac54bb97_buildNodeData(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline void _1ac54be1c_applyFnMeta(_1ac53e66d_parser*, jule::Ptr<_1ab080446_FnDecl>&);
inline void _1ac54c192_applyMeta(_1ac53e66d_parser*, _1ab03a324_Node&);
inline void _1ac54c417_pushUseDecl(jule::Ptr<_1ac53e66d_parser>, jule::Ptr<_1ab086172_UseDecl>&);
inline jule::Bool _1ac54c725_pushMetaNodes(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline _1ab03a324_Node _1ac54ca33_parseNode(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline void _1ac54cca8_appendNode(jule::Ptr<_1ac53e66d_parser>, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline void _1ac54d21a_removeRange(_1ac53e66d_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Slice<jule::I64>&);
inline void _1ac54d5d3_pushWrongOrderCloseErr(_1ac53e66d_parser*, jule::Ptr<_1a97237bc_Token>&, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Slice<jule::I64>&);
inline void _1ac54da45_pushRangeClose(_1ac53e66d_parser*, jule::Ptr<_1a97237bc_Token>, jule::Str, jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Slice<jule::I64>&);
inline void _1ac54dcba_checkRanges(_1ac53e66d_parser*, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline void _1ac54e040_parse(jule::Ptr<_1ac53e66d_parser>, jule::Ptr<_1a9728b57_File>&);
struct _1ac53e66d_parser {
	jule::Ptr<_1ab039532_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1ab03a720_Directive>> _field_directives;
	jule::Slice<_1a7995777_Log> _field_errors;
	

	_1ac53e66d_parser(void) = default;


};
inline void _1ac550959_pushErr(_1ac550382_typeBuilder*, jule::Ptr<_1a97237bc_Token>, jule::Str);
inline void _1ac550c78_pushSuggestion(_1ac550382_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac550edc_buildPrim(_1ac550382_typeBuilder*);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac551251_buildNamespace(_1ac550382_typeBuilder*);
inline jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>> _1ac5514b5_buildGenerics(_1ac550382_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _1ac551729_identGenerics(_1ac550382_typeBuilder*);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac55198d_buildIdent(_1ac550382_typeBuilder*);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac551c02_buildCppLink(_1ac550382_typeBuilder*);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac551e66_buildFn(_1ac550382_typeBuilder*);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac5521ca_buildPtr(_1ac550382_typeBuilder*);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac55243e_buildSptr(_1ac550382_typeBuilder*);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac5526a3_buildOp(_1ac550382_typeBuilder*);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac552917_buildSlc(_1ac550382_typeBuilder*);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac552b7b_buildArr(_1ac550382_typeBuilder*);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac552de0_buildMap(_1ac550382_typeBuilder*);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac553154_buildEnumerable(_1ac550382_typeBuilder*);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac5533b8_step(_1ac550382_typeBuilder*);
inline __jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool _1ac55362c_build(_1ac550382_typeBuilder*);
struct _1ac550382_typeBuilder {
	jule::Ptr<_1ac53e66d_parser> _field_p;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	

	_1ac550382_typeBuilder(void) = default;


};
struct _1ab780eba_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_1ab780eba_CompileInfo(void) = default;

	inline bool operator==(_1ab780eba_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1ab780eba_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1ab78286d_pushErr(_1ab78231d_directiveEval*, jule::Ptr<_1a97237bc_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _1ab782c25_splitOperans(_1ab78231d_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Bool _1ab783033_evalDirectiveIdent(_1ab78231d_directiveEval*, jule::Str);
inline jule::Bool _1ab783341_evalDirectivePart(_1ab78231d_directiveEval*, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Bool _1ab7835a5_eval(_1ab78231d_directiveEval*);
struct _1ab78231d_directiveEval {
	jule::Slice<_1a7995777_Log> _field_logs;
	jule::Ptr<_1ab03a720_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

	_1ab78231d_directiveEval(void) = default;


};
inline jule::Ptr<_1ac44b657_JuleImporter> static__1ac327e6d_New(_1ab780eba_CompileInfo);
inline jule::Slice<jule::Ptr<_1abc4cd9e_ImportInfo>> _1ac38c17a_AllPackages(_1ac44b657_JuleImporter*);
inline void _1ac3a7ae1_SetModPath(_1ac44b657_JuleImporter*, jule::Str);
inline jule::Str _1ac3ca273_GetModPath(_1ac44b657_JuleImporter*);
inline jule::Str _1ac3d9cdd_ModById(_1ac44b657_JuleImporter*, jule::I64);
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1ac428007_GetImport(_1ac44b657_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1ab039532_Ast__jule_tuple_s_1a7995777_Log _1ac441be1_ImportPackage(_1ac44b657_JuleImporter*, jule::Str, jule::Bool);
inline void _1ac46ae29_Imported(_1ac44b657_JuleImporter*, jule::Ptr<_1abc4cd9e_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_1a7995777_Log _1ac472cdd_isPassBuildDirectives(_1ac44b657_JuleImporter*, jule::Ptr<_1ab039532_Ast>&);
struct _1ac44b657_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1abc4cd9e_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

	_1ac44b657_JuleImporter(void) = default;


};
struct _1ac2e83e4_OrderedDefines {
	jule::Slice<jule::Ptr<_1ab08a1a9_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1abc73ee6_Var>> _field_Globals;
	

	_1ac2e83e4_OrderedDefines(void) = default;


};
inline jule::Bool _1bca07890_isCommonOrdered(jule::Slice<jule::Ptr<_1ab08a1a9_Struct>>, jule::Ptr<_1ab08a1a9_Struct>);
inline jule::Bool _1bca0eb2d_isCommonOrdered(jule::Slice<jule::Ptr<_1abc73ee6_Var>>, jule::Ptr<_1abc73ee6_Var>);
inline void _1bca01e1c_orderCommon(jule::Slice<jule::Ptr<_1ab08a1a9_Struct>>&);
inline void _1bca027ad_orderCommon(jule::Slice<jule::Ptr<_1abc73ee6_Var>>&);
inline void static__1ac30c64a_orderStructures(jule::Slice<jule::Ptr<_1ab08a1a9_Struct>>&);
inline void static__1ac3407b0_orderVars(jule::Slice<jule::Ptr<_1abc73ee6_Var>>&);
struct _1ac553819_defineOrderer {
	

	_1ac553819_defineOrderer(void) = default;

	inline bool operator==(_1ac553819_defineOrderer _other) { return true; }

	inline bool operator!=(_1ac553819_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1abbde5c1_liveTable {
	jule::Slice<jule::Ptr<_1abc73ee6_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1abaa1d79_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1ab08a583_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1abab10ca_Trait>> _field_traits;
	

	_1abbde5c1_liveTable(void) = default;


};
inline void _1abc2586b_optimizeChild(jule::Ptr<_1abc25393_scopeDeadCode>, jule::Ptr<_1ababdcdb_Scope>&);
inline void _1abc25b13_optimizeBodyChildExceptional(jule::Ptr<_1abc25393_scopeDeadCode>, jule::Ptr<_1ababdcdb_Scope>&);
inline void _1abc25d99_optimizeBodyChild(jule::Ptr<_1abc25393_scopeDeadCode>, jule::Ptr<_1ababdcdb_Scope>&);
inline void _1abc2611e_optimizeExprModel(jule::Ptr<_1abc25393_scopeDeadCode>, jule::Any&);
inline void _1abc262ea_eliminateFollowed(_1abc25393_scopeDeadCode*);
inline void _1abc26570_pushGoto(jule::Ptr<_1abc25393_scopeDeadCode>, jule::Ptr<_1abac1816_GotoSt>);
inline void _1abc267e5_pushLabel(jule::Ptr<_1abc25393_scopeDeadCode>, jule::Ptr<_1abac152a_Label>);
inline void _1abc26a6a_optimizeRangeIter(jule::Ptr<_1abc25393_scopeDeadCode>, jule::Ptr<_1abac098b_RangeIter>);
inline void _1abc26ce0_optimizeWhileIter(jule::Ptr<_1abc25393_scopeDeadCode>, jule::Ptr<_1abac00a6_WhileIter>);
inline void _1abc27065_optimizeInfIter(jule::Ptr<_1abc25393_scopeDeadCode>, jule::Ptr<_1ababeb33_InfIter>);
inline void _1abc272da_optimizeConditional(jule::Ptr<_1abc25393_scopeDeadCode>, jule::Ptr<_1ababe847_Conditional>);
inline void _1abc27560_optimizeMatch(jule::Ptr<_1abc25393_scopeDeadCode>, jule::Ptr<_1abac2a37_Match>);
inline void _1abc277d5_optimizeAssign(jule::Ptr<_1abc25393_scopeDeadCode>, jule::Ptr<_1abac2141_Assign>);
inline void _1abc27a5a_optimizeMultiAssign(jule::Ptr<_1abc25393_scopeDeadCode>, jule::Ptr<_1abac24e8_MultiAssign>);
inline void _1abc27cd0_optimizeStmt(jule::Ptr<_1abc25393_scopeDeadCode>, jule::Any);
inline void _1abc27eab_optimizeStmts(jule::Ptr<_1abc25393_scopeDeadCode>);
struct _1abc25393_scopeDeadCode {
	jule::Ptr<_1abc25393_scopeDeadCode> _field_parent;
	jule::Ptr<_1ababdcdb_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1abac152a_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1abac1816_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	_1abc25393_scopeDeadCode(void) = default;

	inline bool operator==(_1abc25393_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1abc25393_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1abc292ed_exprDeadCode static__1abc2992a_new(jule::Ptr<_1abc25393_scopeDeadCode>&);
inline void _1abc29ba0_binary(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba90de0_BinopExprModel>);
inline void _1abc29e25_unary(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba91297_UnaryExprModel>);
inline void _1abc2a19a_structureLit(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba91a4a_StructLitExprModel>);
inline void _1abc2a420_allocStructure(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba91d58_AllocStructLitExprModel>);
inline void _1abc2a695_casting(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba923a8_CastingExprModel>);
inline void _1abc2a91a_args(_1abc292ed_exprDeadCode*, jule::Slice<jule::Any>&);
inline void _1abc2ab90_funcCall(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba92c5a_FnCallExprModel>);
inline void _1abc2ae15_slice(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba93112_SliceExprModel>);
inline void _1abc2b18a_array(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba95e06_ArrayExprModel>);
inline void _1abc2b410_indexing(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba93585_IndexingExprModel>);
inline void _1abc2b685_anonFunc(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba9393c_AnonFnExprModel>);
inline void _1abc2b90a_mapExpr(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba94267_MapExprModel>);
inline void _1abc2bb80_slicing(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba947a6_SlicingExprModel>);
inline void _1abc2be05_traitSub(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba94ce5_TraitSubIdentExprModel>);
inline void _1abc2c17a_structureSub(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba95697_StructSubIdentExprModel>);
inline void _1abc2c400_commonSub(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba96753_CommonSubIdentExprModel>);
inline void _1abc2c675_tuple(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba96a50_TupleExprModel>);
inline void _1abc2c8ea_newCall(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba97a1d_BuiltinNewCallExprModel>);
inline void _1abc2cb70_outCall(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba96e29_BuiltinOutCallExprModel>);
inline void _1abc2cde5_outlnCall(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba97314_BuiltinOutlnCallExprModel>);
inline void _1abc2d16a_panicCall(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba97e08_BuiltinPanicCallExprModel>);
inline void _1abc2d3e0_assertCall(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba983ae_BuiltinAssertCallExprModel>);
inline void _1abc2d665_errorCall(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba9a290_BuiltinErrorCallExprModel>);
inline void _1abc2d8da_makeCall(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba98865_BuiltinMakeCallExprModel>);
inline void _1abc2db60_appendCall(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba98c50_BuiltinAppendCallExprModel>);
inline void _1abc2ddd5_lenCall(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba9906e_BuiltinLenCallExprModel>);
inline void _1abc2e15a_capCall(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba9938d_BuiltinCapCallExprModel>);
inline void _1abc2e3d0_cloneCall(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba97633_BuiltinCloneCallExprModel>);
inline void _1abc2e655_deleteCall(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba99a42_BuiltinDeleteCallExprModel>);
inline void _1abc2e8ca_sizeof(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba9a58c_SizeofExprModel>);
inline void _1abc2eb50_alignof(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba9a878_AlignofExprModel>);
inline void _1abc2edc5_integratedToStr(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba9ae72_IntegratedToStrExprModel>);
inline void _1abc3014a_free(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba9b626_FreeExprModel>);
inline void _1abc303c0_backendEmit(_1abc292ed_exprDeadCode*, jule::Ptr<_1aba9b33a_BackendEmitExprModel>);
inline void _1abc30645_optimize(_1abc292ed_exprDeadCode*, jule::Any&);
struct _1abc292ed_exprDeadCode {
	jule::Ptr<_1abc25393_scopeDeadCode> _field_s;
	

	_1abc292ed_exprDeadCode(void) = default;

	inline bool operator==(_1abc292ed_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1abc292ed_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1a9750e7b_UnsafeBinopExprModel {
	jule::Ptr<_1aba90de0_BinopExprModel> _field_Node;
	

	_1a9750e7b_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1a9750e7b_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1a9750e7b_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1a97dda1e_UnsafeIndexingExprModel {
	jule::Ptr<_1aba93585_IndexingExprModel> _field_Node;
	

	_1a97dda1e_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1a97dda1e_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1a97dda1e_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a9791384_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1aba93112_SliceExprModel> _field_Elems;
	

	_1a9791384_PushToSliceExprModel(void) = default;

	inline bool operator==(_1a9791384_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1a9791384_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a9cd418a_MutSlicingExprModel {
	jule::Ptr<_1a97237bc_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_1a9cd418a_MutSlicingExprModel(void) = default;

	inline bool operator==(_1a9cd418a_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1a9cd418a_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a9e8e1e1_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1a9e8e1e1_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1a9e8e1e1_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a9e8e1e1_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9749e20_scopeOptimizer> static__1a9748bee_new(jule::Ptr<_1ababdcdb_Scope>);
inline void _1a976140e_setCurrentStmt(_1a9749e20_scopeOptimizer*, jule::Any);
inline void _1a9763a2c_optimizeData(_1a9749e20_scopeOptimizer*, jule::Ptr<_1abcbba55_Data>);
inline void _1a97710cd_optimizeVar(_1a9749e20_scopeOptimizer*, jule::Ptr<_1abc73ee6_Var>);
inline void _1a9790817_optimizeConditional(_1a9749e20_scopeOptimizer*, jule::Ptr<_1ababe847_Conditional>);
inline void _1a9795553_buildDefaultConstatTrueCase(_1a9749e20_scopeOptimizer*, jule::Ptr<_1abac3582_Case>, jule::I64&, jule::Ptr<_1abac2a37_Match>&);
inline void _1a97969e9_optimizeMatch(_1a9749e20_scopeOptimizer*, jule::Ptr<_1abac2a37_Match>);
inline void _1a9797a72_optimizeRangeIter(_1a9749e20_scopeOptimizer*, jule::Ptr<_1abac098b_RangeIter>);
inline void _1a9798028_optimizeWhileIter(_1a9749e20_scopeOptimizer*, jule::Ptr<_1abac00a6_WhileIter>);
inline jule::Bool _1a97c829a_substr(_1a9749e20_scopeOptimizer*, jule::Ptr<_1abac2141_Assign>);
inline jule::Bool _1a97d1083_strInsert(_1a9749e20_scopeOptimizer*, jule::Ptr<_1abac2141_Assign>);
inline jule::Bool _1a97e764e_strAssign(_1a9749e20_scopeOptimizer*, jule::Ptr<_1abac2141_Assign>);
inline void _1a9871e04_optimizeAssign(_1a9749e20_scopeOptimizer*, jule::Ptr<_1abac2141_Assign>);
inline void _1a98729e8_optimizeMultiAssign(_1a9749e20_scopeOptimizer*, jule::Ptr<_1abac24e8_MultiAssign>);
inline void _1a98d0c21_optimizeRet(_1a9749e20_scopeOptimizer*, jule::Ptr<_1abac3eab_RetSt>);
inline void _1a98d3b36_optimizeStmt(_1a9749e20_scopeOptimizer*, jule::Any);
inline void _1a98d93cd_optimizeChild(_1a9749e20_scopeOptimizer*, jule::Ptr<_1ababdcdb_Scope>);
inline void _1a9ca9825_optimize(_1a9749e20_scopeOptimizer*);
struct _1a9749e20_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1ababdcdb_Scope> _field_scope;
	

	_1a9749e20_scopeOptimizer(void) = default;

	inline bool operator==(_1a9749e20_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a9749e20_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1a9d29840_optimize(jule::Any&);
inline jule::Bool _1a9d30ec8_strCond(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba90de0_BinopExprModel>);
inline void _1a9d34c9b_binary(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba90de0_BinopExprModel>);
inline void _1a9d4069c_unary(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba91297_UnaryExprModel>);
inline void _1a9d459c1_structureLit(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba91a4a_StructLitExprModel>);
inline void _1a9ce1681_allocStructure(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba91d58_AllocStructLitExprModel>);
inline void _1a9d55c9a_casting(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba923a8_CastingExprModel>);
inline void _1a9d5ccd5_args(_1a98cd3e4_exprOptimizer*, jule::Slice<jule::Any>&);
inline void _1a9d6c4dc_scope(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1ababdcdb_Scope>&);
inline void _1a9d73b97_funcCall(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba92c5a_FnCallExprModel>);
inline void _1a9d7b232_slice(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba93112_SliceExprModel>);
inline void _1a9d99409_array(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba95e06_ArrayExprModel>);
inline void _1a9dd2de3_indexing(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba93585_IndexingExprModel>);
inline void _1a9dd6831_anonFunc(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba9393c_AnonFnExprModel>);
inline void _1a9dde3d8_mapExpr(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba94267_MapExprModel>);
inline void _1a9e00dab_slicing(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba947a6_SlicingExprModel>);
inline void _1a9e05ce5_traitSub(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba94ce5_TraitSubIdentExprModel>);
inline void _1a9e76937_structureSub(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba95697_StructSubIdentExprModel>);
inline void _1a9e92ec5_commonSub(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba96753_CommonSubIdentExprModel>);
inline void _1a9758703_tuple(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba96a50_TupleExprModel>);
inline void _1a975be98_newCall(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba97a1d_BuiltinNewCallExprModel>);
inline void _1a975d395_outCall(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba96e29_BuiltinOutCallExprModel>);
inline void _1a975e41d_outlnCall(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba97314_BuiltinOutlnCallExprModel>);
inline void _1a9760496_panicCall(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba97e08_BuiltinPanicCallExprModel>);
inline void _1a976da9d_assertCall(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba983ae_BuiltinAssertCallExprModel>);
inline void _1a9772475_errorCall(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba9a290_BuiltinErrorCallExprModel>);
inline void _1a97920dd_makeCall(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba98865_BuiltinMakeCallExprModel>);
inline void _1a9794992_appendCall(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba98c50_BuiltinAppendCallExprModel>);
inline void _1a9795993_lenCall(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba9906e_BuiltinLenCallExprModel>);
inline void _1a9873895_capCall(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba9938d_BuiltinCapCallExprModel>);
inline void _1a989cb99_cloneCall(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba97633_BuiltinCloneCallExprModel>);
inline void _1a98ed689_deleteCall(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba99a42_BuiltinDeleteCallExprModel>);
inline void _1a9d24b04_sizeof(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba9a58c_SizeofExprModel>);
inline void _1a9d75b44_alignof(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba9a878_AlignofExprModel>);
inline void _1a9e2a3ad_integratedToStr(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba9ae72_IntegratedToStrExprModel>);
inline void _1a9e42e20_free(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba9b626_FreeExprModel>);
inline void _1a9e44042_backendEmit(_1a98cd3e4_exprOptimizer*, jule::Ptr<_1aba9b33a_BackendEmitExprModel>);
inline void _1a9e463b8_do(_1a98cd3e4_exprOptimizer*);
struct _1a98cd3e4_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	_1a98cd3e4_exprOptimizer(void) = default;

	inline bool operator==(_1a98cd3e4_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a98cd3e4_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1abbab318_Optimizer> static__1abb87a64_New(jule::Ptr<_1ac317732_IR>&);
inline void _1abb97348_optimizeGlobal(_1abbab318_Optimizer*, jule::Ptr<_1abc73ee6_Var>&);
inline void _1abba054e_optimizeFunction(_1abbab318_Optimizer*, jule::Ptr<_1aba9e1c8_Fn>&);
inline void _1abbb0295_optimizeStruct(_1abbab318_Optimizer*, jule::Ptr<_1ab08a1a9_Struct>&);
inline void _1abbb19d3_optimizeGlobals(_1abbab318_Optimizer*, jule::Ptr<_1abc50d08_Package>&);
inline void _1abb8a89c_optimizeFunctions(_1abbab318_Optimizer*, jule::Ptr<_1abc50d08_Package>&);
inline void _1abbaaaa9_optimizeStructs(_1abbab318_Optimizer*, jule::Ptr<_1abc50d08_Package>&);
inline void _1abbe0b66_optimizePackage(_1abbab318_Optimizer*, jule::Ptr<_1abc50d08_Package>&);
inline void _1abbe2a14_Optimize(_1abbab318_Optimizer*);
struct _1abbab318_Optimizer {
	jule::Ptr<_1ac317732_IR> _field_ir;
	

	_1abbab318_Optimizer(void) = default;

	inline bool operator==(_1abbab318_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1abbab318_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1ac6ebbc1_Reset(void);
inline void static__1ac6ece69_Print(jule::Str, jule::Str);
struct _1ac6ecc7c_AnsiEscape {
	

	_1ac6ecc7c_AnsiEscape(void) = default;

	inline bool operator==(_1ac6ecc7c_AnsiEscape _other) { return true; }

	inline bool operator!=(_1ac6ecc7c_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1ac6ee4ed_LogFlat(_1a7995777_Log&);
inline void static__1ac6ee70c_LogError(_1a7995777_Log&);
inline void static__1ac6ee91b_Log(_1a7995777_Log&);
inline void static__1ac6eeb2a_PrintLogs(jule::Slice<_1a7995777_Log>&);
struct _1ac6ee29a_Logger {
	

	_1ac6ee29a_Logger(void) = default;

	inline bool operator==(_1ac6ee29a_Logger _other) { return true; }

	inline bool operator!=(_1ac6ee29a_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1ace0db96_Unix(_1ace0d7de_AbsTime*);
struct _1ace0d7de_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	_1ace0d7de_AbsTime(void) = default;

	inline bool operator==(_1ace0d7de_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1ace0d7de_AbsTime _other) { return !this->operator==(_other); }


};
inline _1ace0de82_Time static__1ace0e328_Unix(jule::U64);
inline _1ace0de82_Time static__1ace0e526_Now(void);
inline jule::U64 _1ace0e977_Unix(_1ace0de82_Time*);
inline jule::U64 _1ace0ebdb_Day(_1ace0de82_Time*);
inline jule::U64 _1ace0ee50_Month(_1ace0de82_Time*);
inline jule::U64 _1ace101b4_Year(_1ace0de82_Time*);
inline jule::U64 _1ace10428_Second(_1ace0de82_Time*);
inline jule::U64 _1ace1068c_Minute(_1ace0de82_Time*);
inline jule::U64 _1ace10901_Hour(_1ace0de82_Time*);
inline _1ace0d7de_AbsTime _1ace10b65_Abs(_1ace0de82_Time*);
struct _1ace0de82_Time {
	jule::U64 _field_sec = 0;
	

	_1ace0de82_Time(void) = default;

	inline bool operator==(_1ace0de82_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1ace0de82_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1acd54427_scopeCoder> static__1acd54a43_new(jule::Ptr<_1ace15c9c_ObjectCoder>&);
inline void _1acd54cb8_rangeIndexIter(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac098b_RangeIter>&);
inline void _1acd5503d_rangeHashmapIter(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac098b_RangeIter>&);
inline void _1acd552b3_ifCase(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1ababe1d7_If>);
inline void _1acd55538_conditional(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1ababe847_Conditional>);
inline void _1acd557ad_infIter(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1ababeb33_InfIter>);
inline void _1acd55a33_whileIter(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac00a6_WhileIter>);
inline void _1acd55ca8_rangeIter(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac098b_RangeIter>);
inline void _1acd5602d_cont(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac0d87_ContSt>);
inline void _1acd562a3_label(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac152a_Label>);
inline void _1acd56528_gotoSt(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac1816_GotoSt>);
inline void _1acd5679d_postfix(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac1bbd_Postfix>);
inline void _1acd56a23_assign(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac2141_Assign>);
inline void _1acd56c98_mapLookupAssign(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac24e8_MultiAssign>&);
inline void _1acd5701d_multiAssignTup(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac24e8_MultiAssign>&);
inline void _1acd57293_multiAssignFn(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac24e8_MultiAssign>&);
inline void _1acd57518_multiAssign(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac24e8_MultiAssign>);
inline jule::Fn<void(void)> _1acd57826_matchExpr(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac2a37_Match>);
inline void _1acd57b45_case(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac2a37_Match>, jule::Ptr<_1abac3582_Case>);
inline void _1acd57dba_matchSt(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac2a37_Match>);
inline void _1acd58140_fallSt(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac3b37_FallSt>);
inline void _1acd583b5_breakSt(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac123e_BreakSt>);
inline void _1acd5863a_setResult(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac3eab_RetSt>);
inline void _1acd588b0_retSt(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abac3eab_RetSt>);
inline void _1acd58b35_var(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abc73ee6_Var>);
inline void _1acd58daa_st(jule::Ptr<_1acd54427_scopeCoder>, jule::Any);
inline void _1acd59130_scopeStmts(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1ababdcdb_Scope>&);
inline void _1acd593a5_scope(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1ababdcdb_Scope>);
inline void _1acd5962a_funcScope(jule::Ptr<_1acd54427_scopeCoder>, jule::Ptr<_1abaa1d79_FnIns>);
struct _1acd54427_scopeCoder {
	jule::Ptr<_1ace15c9c_ObjectCoder> _field_oc;
	

	_1acd54427_scopeCoder(void) = default;

	inline bool operator==(_1acd54427_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1acd54427_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1acd5c0bc_exprCoder> static__1acd5c4b8_new(jule::Ptr<_1ace15c9c_ObjectCoder>&);
inline void _1acd5c73d_string(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba86b94_Const>&);
inline void _1acd5c9b3_boolean(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba86b94_Const>&);
inline void _1acd5cb8e_nilLit(jule::Ptr<_1acd5c0bc_exprCoder>);
inline jule::Bool _1acd5ce9c_ftoaSpecialCases(jule::Ptr<_1acd5c0bc_exprCoder>, jule::F64&);
inline void _1acd5d222_float32(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba86b94_Const>&);
inline void _1acd5d497_float64(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba86b94_Const>&);
inline void _1acd5d71c_constant(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba86b94_Const>);
inline void _1acd5dad5_divByZeroBinary(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1a97237bc_Token>&, jule::Ptr<_1aba90928_OperandExprModel>&, jule::Ptr<_1aba90928_OperandExprModel>&);
inline void _1acd5dd5a_unsafeBinary(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba90de0_BinopExprModel>);
inline void _1acd5e0d0_binary(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba90de0_BinopExprModel>);
inline void _1acd5e355_var(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1abc73ee6_Var>);
inline void _1acd5e5ca_structureIns(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1ab08a583_StructIns>);
inline void _1acd5e850_unary(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba91297_UnaryExprModel>);
inline void _1acd5eac5_structureLit(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba91a4a_StructLitExprModel>);
inline void _1acd5ed4a_allocStructure(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba91d58_AllocStructLitExprModel>);
inline void _1acd600c0_casting(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba923a8_CastingExprModel>);
inline void _1acd60345_args(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Slice<jule::Any>);
inline void _1acd605ba_modelForCall(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Any);
inline void _1acd60840_pushCallInf(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba92c5a_FnCallExprModel>&);
inline jule::Bool _1acd60b4d_isWrapped(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba92c5a_FnCallExprModel>&);
inline void _1acd60dc3_pureFuncCall(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba92c5a_FnCallExprModel>&);
inline void _1acd61148_coFuncCall(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba92c5a_FnCallExprModel>&);
inline void _1acd61467_writeUseExpr(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1abaa1d79_FnIns>&, jule::Ptr<_1abcbba55_Data>);
inline void _1acd616dc_funcCall(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba92c5a_FnCallExprModel>);
inline void _1acd61962_slice(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba93112_SliceExprModel>);
inline void _1acd61bd7_indexing(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba93585_IndexingExprModel>);
inline void _1acd61e5c_unsafeIndexing(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1a97dda1e_UnsafeIndexingExprModel>);
inline void _1acd621d2_anonFunc(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba9393c_AnonFnExprModel>);
inline void _1acd62457_mapExpr(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba94267_MapExprModel>);
inline void _1acd626cc_slicing(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba947a6_SlicingExprModel>);
inline void _1acd62952_traitSub(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba94ce5_TraitSubIdentExprModel>);
inline void _1acd62bc7_structureSub(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba95697_StructSubIdentExprModel>);
inline void _1acd62e4c_commonIdent(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba961e2_CommonIdentExprModel>);
inline void _1acd631c2_commonSub(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba96753_CommonSubIdentExprModel>);
inline void _1acd63447_array(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba95e06_ArrayExprModel>);
inline void _1acd636bc_funcInsCommon(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1abaa1d79_FnIns>);
inline void _1acd63942_funcIns(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1abaa1d79_FnIns>);
inline void _1acd63bb7_tuple(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba96a50_TupleExprModel>);
inline void _1acd63e3c_newCall(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba97a1d_BuiltinNewCallExprModel>);
inline void _1acd641b2_outCall(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba96e29_BuiltinOutCallExprModel>);
inline void _1acd64437_outlnCall(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba97314_BuiltinOutlnCallExprModel>);
inline void _1acd646ac_panicCall(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba97e08_BuiltinPanicCallExprModel>);
inline void _1acd64932_assertCall(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba983ae_BuiltinAssertCallExprModel>);
inline void _1acd64ba7_errorCall(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba9a290_BuiltinErrorCallExprModel>);
inline void _1acd64e2c_copyCall(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba99da5_BuiltinCopyCallExprModel>);
inline void _1acd651a2_lenCall(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba9906e_BuiltinLenCallExprModel>);
inline void _1acd65427_capCall(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba9938d_BuiltinCapCallExprModel>);
inline void _1acd6569c_deleteCall(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba99a42_BuiltinDeleteCallExprModel>);
inline void _1acd65922_makeCallSlice(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba98865_BuiltinMakeCallExprModel>&);
inline void _1acd65b97_makeCallStr(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba98865_BuiltinMakeCallExprModel>&);
inline void _1acd65e1c_makeCall(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba98865_BuiltinMakeCallExprModel>);
inline void _1acd66192_pushToSlice(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1a9791384_PushToSliceExprModel>);
inline void _1acd66417_appendCall(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba98c50_BuiltinAppendCallExprModel>);
inline void _1acd6668c_cloneCall(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba97633_BuiltinCloneCallExprModel>);
inline void _1acd66912_sizeof(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba9a58c_SizeofExprModel>);
inline void _1acd66b87_alignof(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba9a878_AlignofExprModel>);
inline jule::Str _1acd66e95_runeLit(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba9ab64_RuneExprModel>);
inline void _1acd6721a_structureStatic(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba95a3d_StructStaticIdentExprModel>);
inline void _1acd67490_integratedToStr(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba9ae72_IntegratedToStrExprModel>);
inline void _1acd67715_backendEmit(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba9b33a_BackendEmitExprModel>);
inline void _1acd6798a_free(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1aba9b626_FreeExprModel>);
inline void _1acd67c10_mutSlicing(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1a9cd418a_MutSlicingExprModel>);
inline void _1acd67e85_strInsertBegin(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1a9e8e1e1_StrInsertBeginExprModel>);
inline void _1acd6820a_model(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Any);
inline void _1acd68480_expr(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Any);
inline void _1acd68705_val(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1abcbcacd_Value>);
inline void _1acd6897a_initExpr(jule::Ptr<_1acd5c0bc_exprCoder>, jule::Ptr<_1abce79d7_TypeKind>);
struct _1acd5c0bc_exprCoder {
	jule::Ptr<_1ace15c9c_ObjectCoder> _field_oc;
	

	_1acd5c0bc_exprCoder(void) = default;

	inline bool operator==(_1acd5c0bc_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1acd5c0bc_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1acd6b230_deriveCoder> static__1acd6b609_new(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline jule::Str _1acd6b917_cloneFuncDecl(_1acd6b230_deriveCoder*, jule::Ptr<_1ab08a1a9_Struct>&);
inline jule::Str _1acd6bc25_cloneFuncDef(_1acd6b230_deriveCoder*, jule::Ptr<_1ab08a1a9_Struct>&);
struct _1acd6b230_deriveCoder {
	jule::Ptr<_1ace15c9c_ObjectCoder> _field_oc;
	

	_1acd6b230_deriveCoder(void) = default;

	inline bool operator==(_1acd6b230_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1acd6b230_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1acd6cb05_TestCoder> static__1acd6d078_New(jule::Ptr<_1ace15c9c_ObjectCoder>&);
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1acd6d2dc_findTestingPackage(jule::Ptr<_1acd6cb05_TestCoder>);
inline void _1acd6d562_appendTest(jule::Ptr<_1acd6cb05_TestCoder>, jule::Ptr<_1abaa1d79_FnIns>);
inline void _1acd6d7d7_appendPackageTests(jule::Ptr<_1acd6cb05_TestCoder>, jule::Ptr<_1abc50d08_Package>&);
inline jule::Bool _1acd6da4b_readyTestingPackage(jule::Ptr<_1acd6cb05_TestCoder>);
inline void _1acd6dc27_callTmReset(jule::Ptr<_1acd6cb05_TestCoder>);
inline void _1acd6de03_callTmFailed(jule::Ptr<_1acd6cb05_TestCoder>);
inline void _1acd6e0ce_callTmSkipped(jule::Ptr<_1acd6cb05_TestCoder>);
inline void _1acd6e2aa_Serialize(jule::Ptr<_1acd6cb05_TestCoder>);
struct _1acd6cb05_TestCoder {
	jule::Ptr<_1ab08a583_StructIns> _field_t;
	jule::Ptr<_1aba9e1c8_Fn> _field_tmReset;
	jule::Ptr<_1aba9e1c8_Fn> _field_tmFailed;
	jule::Ptr<_1aba9e1c8_Fn> _field_tmSkipped;
	jule::Ptr<_1ace15c9c_ObjectCoder> _field_oc;
	

	_1acd6cb05_TestCoder(void) = default;

	inline bool operator==(_1acd6cb05_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1acd6cb05_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1acd7071d_toOut(jule::Str&, jule::Uintptr);
inline jule::Str static__1acd70b08_toLocal(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__1acd70da0_func(jule::Ptr<_1aba9e1c8_Fn>&);
inline jule::Str static__1acd71147_funcIns(jule::Ptr<_1abaa1d79_FnIns>&);
inline jule::Str static__1acd713de_traitDecl(jule::Ptr<_1abab10ca_Trait>);
inline jule::Str static__1acd71686_param(jule::Ptr<_1aba9c88b_Param>&);
inline jule::Str static__1acd7192d_structure(jule::Ptr<_1ab08a1a9_Struct>&);
inline jule::Str static__1acd71bc5_structureIns(jule::Ptr<_1ab08a583_StructIns>&);
inline jule::Str static__1acd71e6c_field(jule::Ptr<_1ab05e216_Field>&);
inline jule::Str static__1acd72214_var(jule::Ptr<_1abc73ee6_Var>);
inline jule::Str static__1acd724ab_iterBegin(jule::Uintptr);
inline jule::Str static__1acd72753_iterEnd(jule::Uintptr);
inline jule::Str static__1acd729ea_iterNext(jule::Uintptr);
inline jule::Str static__1acd72c92_label(jule::Str&);
inline jule::Str static__1acd73039_matchEnd(jule::Uintptr);
inline jule::Str static__1acd732d1_caseBegin(jule::Uintptr);
struct _1acd70256_identCoder {
	

	_1acd70256_identCoder(void) = default;

	inline bool operator==(_1acd70256_identCoder _other) { return true; }

	inline bool operator!=(_1acd70256_identCoder _other) { return !this->operator==(_other); }


};
struct _1acda29e7_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	_1acda29e7_SerializationInfo(void) = default;

	inline bool operator==(_1acda29e7_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1acda29e7_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1acd7800b_traitHash {
	jule::Ptr<_1abab10ca_Trait> _field_t;
	jule::Ptr<_1ab08a583_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	_1acd7800b_traitHash(void) = default;

	inline bool operator==(_1acd7800b_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1acd7800b_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1ace1bad8_Str(_1ace1b7ec_customType*);
inline jule::Bool _1ace1bde6_Equal(jule::Ptr<_1ace1b7ec_customType>, jule::Ptr<_1abce79d7_TypeKind>);
struct _1ace1b7ec_customType {
	jule::Str _field_kind;
	

	_1ace1b7ec_customType(void) = default;

	inline bool operator==(_1ace1b7ec_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ace1b7ec_customType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ace1c29d_typeCoder> static__1ace1c7dc_new(jule::Ptr<_1ace15c9c_ObjectCoder>&);
inline jule::Str _1ace1caea_toType(_1ace1c29d_typeCoder*, jule::Str);
inline jule::Str _1ace1ce08_prim(_1ace1c29d_typeCoder*, jule::Ptr<_1abcec734_Prim>);
inline jule::Str _1ace1d216_tuple(_1ace1c29d_typeCoder*, jule::Ptr<_1abd024a3_Tuple>);
inline jule::Str _1ace1d524_asSptr(_1ace1c29d_typeCoder*, jule::Str);
inline jule::Str _1ace1d832_asPtr(_1ace1c29d_typeCoder*, jule::Str);
inline jule::Str _1ace1db40_sptr(_1ace1c29d_typeCoder*, jule::Ptr<_1abd00eb8_Sptr>);
inline jule::Str _1ace1de4d_ptr(_1ace1c29d_typeCoder*, jule::Ptr<_1abd0452c_Ptr>);
inline jule::Str _1ace1e25b_enumDecl(_1ace1c29d_typeCoder*, jule::Ptr<_1abab3220_Enum>);
inline jule::Str _1ace1e569_typeEnumDecl(_1ace1c29d_typeCoder*, jule::Ptr<_1abab481a_TypeEnum>);
inline jule::Str _1ace1e877_asSlice(_1ace1c29d_typeCoder*, jule::Ptr<_1abce79d7_TypeKind>);
inline jule::Str _1ace1eb85_slice(_1ace1c29d_typeCoder*, jule::Ptr<_1abd01925_Slc>);
inline jule::Str _1ace1ee93_mapType(_1ace1c29d_typeCoder*, jule::Ptr<_1abd02ecb_Map>);
inline jule::Str _1ace202a1_traitIdent(_1ace1c29d_typeCoder*, jule::Str);
inline jule::Str _1ace205ae_traitDecl(_1ace1c29d_typeCoder*, jule::Ptr<_1abab10ca_Trait>);
inline jule::Str _1ace208bc_structure(_1ace1c29d_typeCoder*, jule::Ptr<_1ab08a1a9_Struct>);
inline jule::Str _1ace20bca_structureIns(_1ace1c29d_typeCoder*, jule::Ptr<_1ab08a583_StructIns>);
inline jule::Str _1ace20ed8_array(_1ace1c29d_typeCoder*, jule::Ptr<_1abd03ac0_Arr>);
inline jule::Str _1ace21604_paramIns(_1ace1c29d_typeCoder*, jule::Ptr<_1abaa0eaa_ParamIns>&);
inline void _1ace21c31_funcInsResult(_1ace1c29d_typeCoder*, jule::Str&, jule::Ptr<_1abaa1d79_FnIns>&);
inline jule::Str _1ace2203e_anonFunc(_1ace1c29d_typeCoder*, jule::Ptr<_1abaa1d79_FnIns>);
inline jule::Str _1ace2234c_func(_1ace1c29d_typeCoder*, jule::Ptr<_1abaa1d79_FnIns>);
inline jule::Str _1ace2265a_kind(_1ace1c29d_typeCoder*, jule::Ptr<_1abce79d7_TypeKind>);
struct _1ace1c29d_typeCoder {
	jule::Ptr<_1ace15c9c_ObjectCoder> _field_oc;
	jule::Ptr<_1ace24a8b_resultCoder> _field_rc;
	

	_1ace1c29d_typeCoder(void) = default;

	inline bool operator==(_1ace1c29d_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1ace1c29d_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ace24a8b_resultCoder> static__1ace25097_new(jule::Ptr<_1ace1c29d_typeCoder>&);
inline void _1ace253b6_ptr(_1ace24a8b_resultCoder*, jule::Str&, jule::Ptr<_1abd0452c_Ptr>);
inline void _1ace256d5_sptr(_1ace24a8b_resultCoder*, jule::Str&, jule::Ptr<_1abd00eb8_Sptr>);
inline void _1ace25a04_mapType(_1ace24a8b_resultCoder*, jule::Str&, jule::Ptr<_1abd02ecb_Map>);
inline void _1ace25d23_slice(_1ace24a8b_resultCoder*, jule::Str&, jule::Ptr<_1abd01925_Slc>);
inline void _1ace26142_arr(_1ace24a8b_resultCoder*, jule::Str&, jule::Ptr<_1abd03ac0_Arr>);
inline void _1ace26461_func(_1ace24a8b_resultCoder*, jule::Str&, jule::Ptr<_1abaa1d79_FnIns>);
inline void _1ace26780_tup(_1ace24a8b_resultCoder*, jule::Str&, jule::Ptr<_1abd024a3_Tuple>);
inline void _1ace26a9e_codeMut(_1ace24a8b_resultCoder*, jule::Str&, jule::Ptr<_1abce79d7_TypeKind>&);
inline void _1ace26dbd_codeMut1(_1ace24a8b_resultCoder*, jule::Str&, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Str _1ace27198_code(_1ace24a8b_resultCoder*, jule::Ptr<_1abce79d7_TypeKind>&);
struct _1ace24a8b_resultCoder {
	jule::Ptr<_1ace1c29d_typeCoder> _field_tc;
	

	_1ace24a8b_resultCoder(void) = default;

	inline bool operator==(_1ace24a8b_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1ace24a8b_resultCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1bc114bb2_Name(_1bc11484e_Flag*);
inline jule::Str _1bc114ce4_What(_1bc11484e_Flag*);
inline void _1bc114e37_Reset(_1bc11484e_Flag*);
inline jule::I32 _1bc11507a_Short(_1bc11484e_Flag*);
struct _1bc11484e_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	_1bc11484e_Flag(void) = default;

	inline bool operator==(_1bc11484e_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bc11484e_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1bc118116_Name(_1bc118589_Flag*);
inline jule::Str _1bc118875_What(_1bc118589_Flag*);
inline void _1bc1189a7_Reset(_1bc118589_Flag*);
inline jule::I32 _1bc118ad9_Short(_1bc118589_Flag*);
struct _1bc118589_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	_1bc118589_Flag(void) = default;

	inline bool operator==(_1bc118589_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bc118589_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1bc11b933_Name(_1bc11bda6_Flag*);
inline jule::Str _1bc11c192_What(_1bc11bda6_Flag*);
inline void _1bc11c2c4_Reset(_1bc11bda6_Flag*);
inline jule::I32 _1bc11c406_Short(_1bc11bda6_Flag*);
struct _1bc11bda6_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	_1bc11bda6_Flag(void) = default;

	inline bool operator==(_1bc11bda6_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bc11bda6_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1bc120294_Name(_1bc120717_Flag*);
inline jule::Str _1bc120a03_What(_1bc120717_Flag*);
inline void _1bc120b35_Reset(_1bc120717_Flag*);
inline jule::I32 _1bc120c67_Short(_1bc120717_Flag*);
struct _1bc120717_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	_1bc120717_Flag(void) = default;

	inline bool operator==(_1bc120717_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bc120717_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1bc123ab1_Name(_1bc124034_Flag*);
inline jule::Str _1bc124320_What(_1bc124034_Flag*);
inline void _1bc124452_Reset(_1bc124034_Flag*);
inline jule::I32 _1bc124584_Short(_1bc124034_Flag*);
struct _1bc124034_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	_1bc124034_Flag(void) = default;

	inline bool operator==(_1bc124034_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bc124034_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ace50ea2_FlagSet> static__1ace5128d_New(void);
inline jule::Trait<_1ace4d2bd_CommonFlag> _1ace51722_FindFlag(_1ace50ea2_FlagSet*, jule::Str);
inline jule::Trait<_1ace4d2bd_CommonFlag> _1ace51a30_FindFlagShort(_1ace50ea2_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1ace4d2bd_CommonFlag>> _1ace51c94_Flags(_1ace50ea2_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1ace520a2_Parse(_1ace50ea2_FlagSet*, jule::Slice<jule::Str>);
inline void _1ace5227d_Reset(_1ace50ea2_FlagSet*);
inline jule::Ptr<_1bc124034_Flag> _1bd1c86e2_addFlagCommon(_1ace50ea2_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1bc120717_Flag> _1bd1d20e1_addFlagCommon(_1ace50ea2_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1bd1c6668_AddVar(_1ace50ea2_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1bd1d009a_AddVar(_1ace50ea2_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1ace50ea2_FlagSet {
	jule::Slice<jule::Trait<_1ace4d2bd_CommonFlag>> _field_flags;
	

	_1ace50ea2_FlagSet(void) = default;


};
inline jule::Str _1ab060dd8_Str(_1ab08a583_StructIns*);
inline jule::Bool _1ab06203d_Equal(jule::Ptr<_1ab08a583_StructIns>, jule::Ptr<_1abce79d7_TypeKind>);
inline jule::Bool _1ab064392_Same(_1ab08a583_StructIns*, jule::Ptr<_1ab08a583_StructIns>);
inline jule::Ptr<_1aba9e1c8_Fn> _1ab0656b2_FindMethod(_1ab08a583_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab08a396_FieldIns> _1ab04762d_FindField(_1ab08a583_StructIns*, jule::Str);
inline jule::Ptr<_1abc73ee6_Var> _1ab05364a_FindStatic(_1ab08a583_StructIns*, jule::Str);
struct _1ab08a583_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1ab08a1a9_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1abce62aa_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1ab08a396_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1abc73ee6_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1aba9e1c8_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1abaa4ce4_ReferenceStack> _field_Refers;
	_1ab06685b_Operators _field_Operators;
	

	_1ab08a583_StructIns(void) = default;


};
inline jule::Ptr<_1abbde989_ObjectDeadCode> static__1abc21834_new(jule::Ptr<_1ac317732_IR>&);
inline jule::Bool _1bca36649_isLive(jule::Ptr<_1abbde989_ObjectDeadCode>, jule::Ptr<_1abab10ca_Trait>&);
inline jule::Bool _1bca3b682_isLive(jule::Ptr<_1abbde989_ObjectDeadCode>, jule::Ptr<_1abaa1d79_FnIns>&);
inline jule::Bool _1bca440c4_isLive(jule::Ptr<_1abbde989_ObjectDeadCode>, jule::Ptr<_1ab08a583_StructIns>&);
inline jule::Bool _1bca49c01_isLive(jule::Ptr<_1abbde989_ObjectDeadCode>, jule::Ptr<_1abc73ee6_Var>&);
inline void _1bca369ac_pushLive(jule::Ptr<_1abbde989_ObjectDeadCode>, jule::Ptr<_1abab10ca_Trait>);
inline void _1bca3c045_pushLive(jule::Ptr<_1abbde989_ObjectDeadCode>, jule::Ptr<_1abaa1d79_FnIns>);
inline void _1bca4339d_pushLive(jule::Ptr<_1abbde989_ObjectDeadCode>, jule::Ptr<_1ab08a583_StructIns>);
inline void _1bca4a064_pushLive(jule::Ptr<_1abbde989_ObjectDeadCode>, jule::Ptr<_1abc73ee6_Var>);
inline void _1abc2213c_setReferencesAsLive(jule::Ptr<_1abbde989_ObjectDeadCode>, jule::Ptr<_1abaa4ce4_ReferenceStack>&);
inline void _1abc223b2_inits(jule::Ptr<_1abbde989_ObjectDeadCode>, jule::Ptr<_1abc50d08_Package>&);
inline void _1abc22637_collectLivePackage(jule::Ptr<_1abbde989_ObjectDeadCode>, jule::Ptr<_1abc50d08_Package>&);
inline void _1abc22813_collectLive(jule::Ptr<_1abbde989_ObjectDeadCode>);
inline void _1abc22a88_removeDeadGlobals(jule::Ptr<_1abbde989_ObjectDeadCode>, jule::Slice<jule::Ptr<_1abc73ee6_Var>>&);
inline void _1abc22d0d_removeDeadFns(jule::Ptr<_1abbde989_ObjectDeadCode>, jule::Slice<jule::Ptr<_1aba9e1c8_Fn>>&);
inline void _1abc23083_removeDeadStructs(jule::Ptr<_1abbde989_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ab08a1a9_Struct>>&);
inline void _1abc23308_removeDeadTraits(jule::Ptr<_1abbde989_ObjectDeadCode>, jule::Slice<jule::Ptr<_1abab10ca_Trait>>&);
inline void _1abc2357d_removeDeadsFile(jule::Ptr<_1abbde989_ObjectDeadCode>, jule::Ptr<_1abcb6c2b_SymbolTable>&);
inline void _1abc23803_removeDeadsPackage(jule::Ptr<_1abbde989_ObjectDeadCode>, jule::Ptr<_1abc50d08_Package>&);
inline void _1abc239ce_removeDeads(jule::Ptr<_1abbde989_ObjectDeadCode>);
inline void _1abc23baa_elimanate(jule::Ptr<_1abbde989_ObjectDeadCode>);
struct _1abbde989_ObjectDeadCode {
	_1abbde5c1_liveTable _field_live;
	jule::Ptr<_1ac317732_IR> _field_ir;
	

	_1abbde989_ObjectDeadCode(void) = default;


};
inline jule::Ptr<_1ace15c9c_ObjectCoder> static__1acd774e4_New(jule::Ptr<_1ac317732_IR>&, _1acda29e7_SerializationInfo);
inline void _1acd978cc_write(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Str);
inline void _1acddb910_addIndent(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1acddbe2c_doneIndent(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1acde0480_indent(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline jule::I64 _1acde6464_findAnyType(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::I64 _1acd9beca_pushAnyType(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1abce79d7_TypeKind>&);
inline void _1acd9b20a_pushResultIns(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1abaa1d79_FnIns>&);
inline void _1acddddc9_pushResult(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1aba9e1c8_Fn>&);
inline jule::I64 _1acd77c64_findTypeOffset(_1ace15c9c_ObjectCoder*, jule::Ptr<_1abab10ca_Trait>, jule::Ptr<_1abce79d7_TypeKind>);
inline void _1ace16396_locInfo(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1a97237bc_Token>&);
inline void _1ace164c8_head(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace1660a_links(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace1673c_prepareStructure(_1ace15c9c_ObjectCoder*, jule::Ptr<_1ab08a1a9_Struct>&);
inline void _1ace1686e_prepareStructures(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace169a1_iterPackages(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Fn<void(jule::Ptr<_1abc50d08_Package>&)>);
inline void _1ace16ad3_buildTraitMap(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace16c15_traitDecls(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace16d47_structurePlainDecl(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1ab08a1a9_Struct>&);
inline void _1ace16e79_structurePlainDecls(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace170ab_fieldDecl(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1ab08a396_FieldIns>&);
inline void _1ace171dd_structureDestructor(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1ab08a583_StructIns>&);
inline void _1ace17320_structureDeriveDefsDecls(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1ab08a583_StructIns>&);
inline void _1ace17452_structureOperatorEq(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Str&, jule::Ptr<_1ab08a583_StructIns>&);
inline void _1ace17584_structureOperatorNotEq(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Str&, jule::Ptr<_1ab08a583_StructIns>&);
inline void _1ace176b6_structureOperator(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Str&, jule::Ptr<_1abaa1d79_FnIns>&, jule::Str);
inline void _1ace177e8_structureOperators(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1ab08a583_StructIns>&);
inline void _1ace1792a_structureInsDecl(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1ab08a583_StructIns>&);
inline void _1ace17a5c_structureDecl(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1ab08a1a9_Struct>&);
inline void _1ace17b8e_structureDecls(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace17cc1_paramsDecls(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Slice<jule::Ptr<_1abaa0eaa_ParamIns>>&);
inline void _1ace17e03_funcHead(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1abaa1d79_FnIns>&, jule::Bool);
inline void _1ace18035_funcDecl(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1aba9e1c8_Fn>&, jule::Bool);
inline void _1ace18167_funcDecls(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace18299_traitDataTypes(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace183cb_paramIns(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1abaa0eaa_ParamIns>&);
inline void _1ace1850d_paramsIns(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Slice<jule::Ptr<_1abaa0eaa_ParamIns>>&);
inline void _1ace18640_varInitExpr(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1abc73ee6_Var>&, jule::Fn<void(void)>);
inline void _1ace18772_var(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1abc73ee6_Var>);
inline void _1ace188a4_func(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1aba9e1c8_Fn>&);
inline void _1ace189d6_traitWrappers(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace18b18_traitDatas(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace18c4a_globals(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace18d7c_decls(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace18eae_structureMethods(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1ab08a583_StructIns>&);
inline void _1ace190e1_structureDeriveDefs(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1ab08a583_StructIns>&);
inline void _1ace19223_structureOstream(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1ab08a583_StructIns>&);
inline void _1ace193dd_structureIns(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1ab08a583_StructIns>&);
inline void _1ace19663_structure(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1ab08a1a9_Struct>&);
inline void _1ace1983e_structures(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace19a1a_funcs(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace19c90_pushInit(jule::Ptr<_1ace15c9c_ObjectCoder>, jule::Ptr<_1abc50d08_Package>&);
inline void _1ace19e6b_initCaller(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace1a147_end(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace1a323_serializeHead(jule::Ptr<_1ace15c9c_ObjectCoder>);
inline void _1ace1a4ee_Serialize(jule::Ptr<_1ace15c9c_ObjectCoder>);
struct _1ace15c9c_ObjectCoder {
	jule::Str _field_Obj;
	jule::Slice<jule::Str> _field_resultDecls;
	jule::Str _field_anyObj;
	jule::Ptr<_1ac317732_IR> _field_ir;
	_1acda29e7_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1acd7800b_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1abce79d7_TypeKind>> _field_anyTypeMap;
	jule::Ptr<_1acd5c0bc_exprCoder> _field_ec;
	jule::Ptr<_1acd54427_scopeCoder> _field_sc;
	jule::Ptr<_1ace1c29d_typeCoder> _field_tc;
	jule::Ptr<_1acd6b230_deriveCoder> _field_dc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	

	_1ace15c9c_ObjectCoder(void) = default;


};
inline __jule_tuple_x_1ac317732_IR__jule_tuple_s_1a7995777_Log static__1ac479b80_Build(jule::Str, jule::I64);
inline void _1ac4e2984_appendStructs(_1ac317732_IR*, jule::Ptr<_1abc50d08_Package>&, jule::Slice<jule::Ptr<_1ab08a1a9_Struct>>&);
inline jule::Slice<jule::Ptr<_1ab08a1a9_Struct>> _1ac4ea77d_GetAllStructures(_1ac317732_IR*);
inline void _1ac504a62_appendGlobals(_1ac317732_IR*, jule::Ptr<_1abc50d08_Package>&, jule::Slice<jule::Ptr<_1abc73ee6_Var>>&);
inline jule::Slice<jule::Ptr<_1abc73ee6_Var>> _1ac31e78e_GetAllGlobals(_1ac317732_IR*);
inline void _1ac426ac7_Order(_1ac317732_IR*);
struct _1ac317732_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1abc50d08_Package> _field_Main;
	jule::Slice<jule::Ptr<_1abc4cd9e_ImportInfo>> _field_Used;
	_1ac2e83e4_OrderedDefines _field_Ordered;
	

	_1ac317732_IR(void) = default;


};
inline __jule_tuple_i64__jule_tuple_bool _1bc1374ba_parseInteger(_1ace5367a_argParser*, jule::Str&, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1bc1405b1_parseInteger(_1ace5367a_argParser*, jule::Str&, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1ace53e72_getData(_1ace5367a_argParser*);
inline jule::VoidExceptional _1ace541b4_processFlag(_1ace5367a_argParser*, jule::Trait<_1ace4d2bd_CommonFlag>&);
inline jule::VoidExceptional _1ace54439_singleDash(_1ace5367a_argParser*, jule::Str&);
inline jule::VoidExceptional _1ace546ae_doubleDash(_1ace5367a_argParser*, jule::Str&);
inline jule::VoidExceptional _1ace5488a_tryArg(_1ace5367a_argParser*);
inline jule::VoidExceptional _1ace54a66_parse(_1ace5367a_argParser*);
struct _1ace5367a_argParser {
	_1ace50ea2_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	

	_1ace5367a_argParser(void) = default;


};
inline void _1d9644ec7_Free(void*);
inline jule::Str _1d9659706_BytePtrToStr(jule::U8*);
inline jule::I64 _1d7c8c6a9_GetLastErrno(void);
inline jule::I64 _1d96779bb_Stat(jule::U8*, struct stat*);
inline jule::I64 _1d9677da6_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _1d96781e7_Getcwd(jule::U8*, jule::U64);
inline DIR* _1d96786c0_Opendir(jule::U8*);
inline struct dirent* _1d9678967_Readdir(DIR*);
inline jule::I64 _1d9678c0e_Closedir(DIR*);
inline jule::I64 _1d967958e_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _1d9679836_Rmdir(jule::U8*);
inline jule::I64 _1d9679acd_Unlink(jule::U8*);
inline jule::I64 _1d969a13c_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _1d969a527_Read(jule::I64, void*, jule::U64);
inline jule::I64 _1d969a89b_Close(jule::I64);
inline jule::I64 _1d969ac86_Write(jule::I64, void*, jule::U64);
inline void _1d969ae95_Exit(jule::I64);
inline jule::I64 _1d973de28_getLastOsError(void);
inline jule::Slice<jule::Str> _1d973e90c_Args(void);
inline jule::Exceptional<jule::Str> _1d973ed80_WorkingDir(void);
inline jule::Exceptional<jule::Str> _1d9740c82_getwd(void);
inline jule::Bool _1a7783521_IsLetter(jule::I32);
inline jule::Bool _1a77eaee5_is16(jule::Slice<_1a77e9433_Range16>, jule::U16);
inline jule::Bool _1a77eb336_is32(jule::Slice<_1a77e98a6_Range32>, jule::U32);
inline jule::Bool _1a77ebac8_isExcludingLatin(jule::Ptr<_1a77e9d29_RangeTable>, jule::I32);
inline jule::Bool _1a77ebd70_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _1a78cd88b_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _1a78cdbaa_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _1a78cde52_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _1a78cec00_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1a78d0041_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _1a78d0580_RuneCountStr(jule::Str);
inline jule::Bool _1a78d0827_RuneStart(jule::U8);
inline jule::Slice<jule::U8> _1a7901914_Stobs(jule::Str&);
inline void _1a7907002_PushToStrBuffer(jule::Str&, jule::Slice<jule::U8>);
inline jule::I64 _1a79074ec_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _1a7907772_FindLastByteStr(jule::Str&, jule::U8);
inline jule::Str _1a78d5002_Repeat(jule::Str, jule::I64);
inline jule::Bool _1a78d83ac_hasPrefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _1a78d463e_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1a79078d7_hasSuffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _1a7907b90_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _1a790807a_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1a79088b6_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1a7908c6d_FindLast(jule::Str, jule::Str);
inline jule::I64 _1a7910291_findRune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _1a7910acc_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _1a79118e1_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1a791211c_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1a791245d_Contains(jule::Str, jule::Str);
inline jule::Bool _1a7912e31_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _1a7913272_Count(jule::Str, jule::Str);
inline jule::Str _1a7913706_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _1a7910769_trimLeft(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1a79147b2_TrimLeft(jule::Str, jule::Str);
inline void _1a7914a6a_trimRight(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1a79151ec_Trim(jule::Str, jule::Str);
inline jule::Str _1a791553d_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _1a79168c4_Clean(jule::Str);
inline jule::Str _1a7916e57_FromSlash(jule::Str);
inline jule::Str _1a7917276_Join(jule::Slice<jule::Str>);
inline jule::Str _1a791751d_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1a79177b5_Abs(jule::Str);
inline jule::Str _1a7917a5c_Base(jule::Str);
inline jule::Str _1a7917dd1_Dir(jule::Str);
inline jule::Str _1a7918178_VolumeName(jule::Str);
inline jule::Bool _1a7918ed1_IsPathSep(jule::U8);
inline jule::Bool _1a79192bc_IsAbs(jule::Str);
inline jule::I64 _1a7919564_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1a7919883_abs(jule::Str);
inline jule::Str _1a7919b2a_join(jule::Slice<jule::Str>);
inline jule::I64 _1d7caad8c_getLastFsError(void);
inline jule::I64 _1a79e0184_getLastProcessError(void);
inline jule::Slice<char*> _1a79e3352_strSliceToCstrSlice(jule::Slice<jule::Str>);
inline jule::I64 _1a79e37a3_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _1a79e3b8d_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _1a79e47a4_Exit(jule::I64);
inline jule::Str _1a79e49a2_Executable(void);
inline jule::Bool _1a7988616_IsStdHeaderPath(jule::Str);
inline jule::Bool _1a79888be_IsValidHeaderExt(jule::Str);
inline jule::Bool _1a7988b66_IsValidCppExt(jule::Str);
inline jule::Str _1a7995bb7_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1a7995ea3_argToStr(jule::Any);
inline jule::I64 _1a799624a_findNextFmt(jule::Str);
inline jule::Str _1a79965d0_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a7997658_IsTopDirective(jule::Str);
inline jule::Bool _1a7998a88_IsWindows(jule::Str);
inline jule::Bool _1a7998d41_IsDarwin(jule::Str);
inline jule::Bool _1a79990d8_IsLinux(jule::Str);
inline jule::Bool _1a7999407_IsI386(jule::Str);
inline jule::Bool _1a799969e_IsAmd64(jule::Str);
inline jule::Bool _1a7999946_IsArm64(jule::Str);
inline jule::Bool _1a7999bdd_IsUnix(jule::Str);
inline jule::Bool _1a799a062_Is32Bit(jule::Str);
inline jule::Bool _1a799a309_Is64Bit(jule::Str);
inline void _1a79ced99_init(void);
inline jule::Bool _1a9723ec6_IsUnaryOp(jule::Str);
inline jule::Bool _1a97242b2_IsBinOp(jule::Str);
inline jule::Bool _1a9724878_IsStr(jule::Str);
inline jule::Bool _1a9724b20_IsRawStr(jule::Str);
inline jule::Bool _1a9724db7_IsRune(jule::Str);
inline jule::Bool _1a97254d3_IsBool(jule::Str);
inline jule::Bool _1a972577a_IsFloat(jule::Str);
inline jule::Bool _1a9725a22_IsNum(jule::Str);
inline jule::Bool _1a9726061_IsIgnoreIdent(jule::Str);
inline jule::Bool _1a9726308_IsAnonIdent(jule::Str);
inline jule::Bool _1a9726847_IsSpace(jule::I32);
inline jule::Bool _1a9726c98_IsLetter(jule::I32);
inline jule::Bool _1a97272d7_IsDecimal(jule::U8);
inline jule::Bool _1a972757e_IsBinary(jule::U8);
inline jule::Bool _1a9727826_IsOctal(jule::U8);
inline jule::Bool _1a9727abd_IsHex(jule::U8);
inline jule::Bool _1a9727d65_IsAssign(jule::U64);
inline jule::Bool _1a972810c_IsPostfixOp(jule::Str);
inline jule::Bool _1a97283a4_IsAssignOp(jule::Str);
inline jule::Ptr<_1a9728b57_File> _1a972a186_NewFileSet(jule::Str);
inline _1a7995777_Log _1a972b929_makeErr(jule::I64, jule::I64, jule::Ptr<_1a9728b57_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a972bcae_bytesHasPrefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _1a972c100_floatFmtE(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a972c485_floatFmtP(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a972c7c6_floatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a972cb17_floatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a972ce58_floatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a972d3a9_floatNum(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a972d651_commonNum(jule::Slice<jule::U8>&);
inline jule::Str _1a972d8e8_binaryNum(jule::Slice<jule::U8>&);
inline jule::Bool _1a972dc39_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1a972e07a_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1a972e3bb_isFloatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1a972e70c_isFloatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1a972ea4d_isFloatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a972ee9e_octalNum(jule::Slice<jule::U8>&);
inline jule::Str _1a9730246_hexNum(jule::Slice<jule::U8>&);
inline jule::Str _1a9730587_hexEscape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a973082e_bigUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _1a9730ae8_littleUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _1a9730ca2_hexByteEscape(jule::Slice<jule::U8>&);
inline jule::Str _1a9731038_byteEscape(jule::Slice<jule::U8>&);
inline jule::Slice<_1a7995777_Log> _1a9735a32_Lex(jule::Ptr<_1a9728b57_File>, jule::I64);
inline jule::I64 _1aba3e366_LeadingZeros64(jule::U64);
inline jule::I64 _1aba4029b_TrailingZeros(jule::U64);
inline jule::I64 _1aba40b92_TrailingZeros32(jule::U32);
inline jule::I64 _1aba40e39_TrailingZeros64(jule::U64);
inline jule::I64 _1aba46549_Len32(jule::U32);
inline jule::I64 _1aba467e1_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1aba474a1_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1aba48b34_Mul64(jule::U64, jule::U64);
inline jule::U32 _1abae025d_F32Bits(jule::F32);
inline jule::F32 _1abae0527_F32FromBits(jule::U32);
inline jule::U64 _1abae07be_F64Bits(jule::F64);
inline jule::F64 _1abae0add_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _1abae30c9_Frexp(jule::F64);
inline jule::F64 _1aba4c8d5_NaN(void);
inline jule::Bool _1aba4ca17_IsNaN(jule::F64);
inline jule::F64 _1aba4cb49_Inf(jule::I64);
inline jule::Bool _1aba4cc7b_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _1aba4cdad_normalize(jule::F64);
inline jule::F64 _1aba4dc7c_Log(jule::F64);
inline jule::F64 _1aba4e398_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1aba53248_Modf(jule::F64);
inline jule::F64 _1aba53688_Log2(jule::F64);
inline jule::Str _1ab5444dc_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1ab53bb55_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1ab56d2c4_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1ab93ae00_floatInfo&);
inline jule::Slice<jule::U8> _1ab5d1e5e_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1ab5c106e_decimalSlice, jule::I64, jule::U8);
inline void _1ab68d1a2_roundShortest(_1aba7e32e_decimal&, jule::U64, jule::I64, _1ab93ae00_floatInfo&);
inline jule::Slice<jule::U8> _1ab8b7e7b_fmtE(jule::Slice<jule::U8>, jule::Bool, _1ab5c106e_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1ab906261_fmtF(jule::Slice<jule::U8>, jule::Bool, _1ab5c106e_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1ab906591_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1ab93ae00_floatInfo&);
inline jule::Slice<jule::U8> _1ab954479_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1ab93ae00_floatInfo&);
inline jule::I64 _1ab527ed7_min(jule::I64, jule::I64);
inline jule::I64 _1ab603722_max(jule::I64, jule::I64);
inline jule::U8 _1ab58661c_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__1ab512e39_ConvError _1ab64e130_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1ab887b1b_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1ab598ac4_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _1ab5d06dd_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1ab51539d_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1aba7aa01_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1aba7ab33_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1aba7ac65_readFloat(jule::Str);
inline __jule_tuple_f64__jule_tuple_bool _1aba7b6a0_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1aba7b7d2_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__1ab512e39_ConvError _1aba7b914_atofHex(jule::Str, _1ab93ae00_floatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1ab512e39_ConvError _1aba7bb56_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ab512e39_ConvError _1aba7bc88_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ab512e39_ConvError _1aba7bdba_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1aba7beec_ParseFloat(jule::Str, jule::I64);
inline void _1aba7c41a_ryuFtoaFixed32(_1ab5c106e_decimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _1aba7c54c_ryuFtoaFixed64(_1ab5c106e_decimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _1aba7c89e_formatDecimal(_1ab5c106e_decimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1aba7c9d1_ryuFtoaShortest(_1ab5c106e_decimalSlice&, jule::U64, jule::I64, _1ab93ae00_floatInfo&);
inline jule::I64 _1aba7cb13_mulByLog2Log10(jule::I64);
inline jule::I64 _1aba7cc45_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1aba7cd77_computeBounds(jule::U64, jule::I64, _1ab93ae00_floatInfo&);
inline void _1aba7d0b9_ryuDigits(_1ab5c106e_decimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1aba7d1eb_ryuDigits32(_1ab5c106e_decimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1aba7d32d_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1aba7d460_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1aba7d592_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _1aba7d6c4_divmod1e9(jule::U64);
inline void _1aba7ed8a_trim(_1aba7e32e_decimal&);
inline void _1aba7eebc_rightShift(_1aba7e32e_decimal&, jule::U64);
inline jule::Bool _1aba800ee_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1aba80231_leftShift(_1aba7e32e_decimal&, jule::U64);
inline jule::Bool _1aba80363_shouldRoundUp(_1aba7e32e_decimal&, jule::I64);
inline jule::Str _1aba81221_FmtUint(jule::U64, jule::I64);
inline jule::Str _1aba81353_FmtInt(jule::I64, jule::I64);
inline jule::Str _1aba81485_Itoa(jule::I64);
inline jule::Str _1aba815b7_small(jule::I64);
inline jule::Bool _1aba816e9_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _1aba8182b_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1ab4bb8c6_RealKindOf(jule::Str);
inline jule::I64 _1ab4c5d53_BitsizeOf(jule::Str);
inline jule::Str _1ab4e834d_IntFromBits(jule::I64);
inline jule::Str _1ab4209c3_UintFromBits(jule::I64);
inline jule::Str _1ab4e87b0_FloatFromBits(jule::I64);
inline jule::Bool _1ab4e6615_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1ab40757b_BitsizeOfFloat(jule::F64);
inline jule::I64 _1ab49b477_BitsizeOfInt(jule::I64);
inline jule::I64 _1ab444dc1_BitsizeOfUint(jule::U64);
inline void _1ab445003_UpdateTarget(void);
inline void _1ab4a71db_init(void);
inline jule::F64 _1aba8409d_Min(jule::Str);
inline jule::F64 _1aba841d0_Max(jule::Str);
inline jule::Bool _1aba844dd_IsI8Compatible(jule::Str);
inline jule::Bool _1aba84620_IsI16Compatible(jule::Str);
inline jule::Bool _1aba84752_IsI32Compatible(jule::Str);
inline jule::Bool _1aba84884_IsI64Compatible(jule::Str);
inline jule::Bool _1aba849b6_IsU8Compatible(jule::Str);
inline jule::Bool _1aba84ae8_IsU16Compatible(jule::Str);
inline jule::Bool _1aba84c2a_IsU32Compatible(jule::Str);
inline jule::Bool _1aba84d5c_IsU64Compatible(jule::Str);
inline jule::Bool _1aba84e8e_IsF32Compatible(jule::Str);
inline jule::Bool _1aba850c1_IsF64Compatible(jule::Str);
inline jule::Bool _1aba85203_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1aba85335_IsI16Greater(jule::Str);
inline jule::Bool _1aba85467_IsI32Greater(jule::Str);
inline jule::Bool _1aba85599_IsI64Greater(jule::Str);
inline jule::Bool _1aba856cb_IsU16Greater(jule::Str);
inline jule::Bool _1aba85a3e_IsU32Greater(jule::Str);
inline jule::Bool _1aba85b71_IsU64Greater(jule::Str);
inline jule::Bool _1aba85ca3_IsF32Greater(jule::Str);
inline jule::Bool _1aba85dd5_IsF64Greater(jule::Str);
inline jule::Bool _1aba86017_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1aba86457_IsSigInt(jule::Str);
inline jule::Bool _1aba86589_IsUnsigInt(jule::Str);
inline jule::Bool _1aba866bb_IsInt(jule::Str);
inline jule::Bool _1aba867ed_IsFloat(jule::Str);
inline jule::Bool _1aba86930_IsNum(jule::Str);
inline jule::Bool _1aba86a62_IsSigNum(jule::Str);
inline void _1aba8d32c_lshiftUnsig(_1aba86b94_Const&, _1aba86b94_Const&);
inline void _1aba8d629_rshiftUnsig(_1aba86b94_Const&, _1aba86b94_Const&);
inline jule::Bool _1abc8c53c_IsAscii(jule::I32);
inline jule::I32 _1abc8c6b3_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1abca46ec_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1abca49e9_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _1abca4c91_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1abca509e_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _1abca53e0_strEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _1abd9b6a1_findFormatPrefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _1abda7107_getFormatRange(jule::I64&, jule::Slice<jule::U8>&);
inline void _1abda73b0_FmtByDefault(jule::Str&, jule::Any&);
inline void _1abda7789_applyFmtByDefault(jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline void _1abda7b85_applyFmt(jule::Slice<jule::U8>&, jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Str _1abda7e93_Format(jule::Str&, jule::Slice<jule::Any>);
inline jule::Str _1abda87ac_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1abaa3e8b_parameterUsesGenerics(jule::Ptr<_1abaa0eaa_ParamIns>&, jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>>&);
inline jule::Ptr<_1abcebdb5_TypeSymbol> _1abaa64aa_buildType(jule::Ptr<_1ab06d9b7_TypeDecl>);
inline jule::Ptr<_1abcbcacd_Value> _1abaa6796_buildExpr(jule::Ptr<_1ab072ed8_Expr>);
inline jule::Ptr<_1abce6ce4_TypeAlias> _1abaa6a3d_buildTypeAlias(jule::Ptr<_1ab084c86_TypeAliasDecl>);
inline jule::Ptr<_1ab05e216_Field> _1abaa6d5c_buildField(jule::Ptr<_1ab08842c_FieldDecl>);
inline jule::Slice<jule::Ptr<_1ab05e216_Field>> _1abaa7104_buildFields(jule::Slice<jule::Ptr<_1ab08842c_FieldDecl>>&);
inline jule::Ptr<_1ab08a1a9_Struct> _1abaa739b_buildStruct(jule::Ptr<_1ab088bd0_StructDecl>);
inline jule::Ptr<_1aba9c88b_Param> _1abaa7643_buildParam(jule::Ptr<_1ab07e126_ParamDecl>);
inline jule::Slice<jule::Ptr<_1aba9c88b_Param>> _1abaa79b7_buildParams(jule::Slice<jule::Ptr<_1ab07e126_ParamDecl>>&);
inline jule::Ptr<_1aba9c1b5_RetType> _1abaa7c5e_buildRetType(jule::Ptr<_1ab071aca_RetTypeDecl>);
inline jule::Ptr<_1aba9e1c8_Fn> _1abaa8006_buildFn(jule::Ptr<_1ab080446_FnDecl>);
inline jule::Slice<jule::Ptr<_1aba9e1c8_Fn>> _1abaa829d_buildMethods(jule::Slice<jule::Ptr<_1ab080446_FnDecl>>&);
inline jule::Ptr<_1abab10ca_Trait> _1abaa8545_buildTrait(jule::Ptr<_1ab0892da_TraitDecl>);
inline jule::Ptr<_1abab272a_EnumItem> _1abaa87dc_buildEnumItem(jule::Ptr<_1ab0865e5_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1abab272a_EnumItem>> _1abaa8a84_buildEnumItems(jule::Slice<jule::Ptr<_1ab0865e5_EnumItemDecl>>&);
inline jule::Ptr<_1abab3220_Enum> _1abaa8d2b_buildEnum(jule::Ptr<_1ab08711d_EnumDecl>);
inline jule::Ptr<_1abab4254_TypeEnumItem> _1abaa927c_buildTypeEnumItem(jule::Ptr<_1ab087b24_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1abab4254_TypeEnumItem>> _1abaa9524_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ab087b24_TypeEnumItemDecl>>&);
inline jule::Ptr<_1abab481a_TypeEnum> _1abaa97bb_buildTypeEnum(jule::Ptr<_1ab08822e_TypeEnumDecl>);
inline jule::Ptr<_1abc73ee6_Var> _1abaa9a63_buildVar(jule::Ptr<_1ab081425_VarDecl>);
inline jule::Slice<jule::Ptr<_1abc73ee6_Var>> _1abaa9d0a_buildVars(jule::Slice<jule::Ptr<_1ab081425_VarDecl>>);
inline jule::Ptr<_1abab8c81_Impl> _1abaaa0a2_buildImpl(jule::Ptr<_1ab0898e5_Impl>);
inline jule::Bool _1abab8126_matchConstraint(jule::Str&, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abab8412_isBuiltinConstraint(jule::Str&);
inline jule::Ptr<_1abac584d_scopeChecker> _1ababad1b_newScopeCheckerBase(jule::Ptr<_1abc55eea_Sema>&, jule::Ptr<_1abaa1d79_FnIns>);
inline jule::Ptr<_1abac584d_scopeChecker> _1ababb1a1_newScopeChecker(jule::Ptr<_1abc55eea_Sema>&, jule::Ptr<_1abaa1d79_FnIns>);
inline jule::Ptr<_1abac45b6_scopeLabel> _1ababb4e2_findLabelParent(jule::Str, jule::Ptr<_1abac584d_scopeChecker>);
inline jule::Bool _1ababb877_modelIsGotoScope(jule::Any, jule::Ptr<_1ababdcdb_Scope>&);
inline jule::Bool _1ababbbb8_stmtIsGotoScope(jule::Any&, jule::Ptr<_1ababdcdb_Scope>&);
inline jule::I64 _1ababc009_countMatchType(jule::Ptr<_1abac2a37_Match>&, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Slice<jule::Ptr<_1abcbba55_Data>> _1ababc2a1_getDatasFromTupleData(jule::Ptr<_1abcbba55_Data>&);
inline jule::Bool _1ababcadc_checkMut(jule::Ptr<_1abc55eea_Sema>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>, jule::Ptr<_1a97237bc_Token>);
inline jule::Bool _1ababd071_checkAssign(jule::Ptr<_1abc55eea_Sema>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>, jule::Ptr<_1a97237bc_Token>);
inline jule::Bool _1ababd318_isValidAstStForNextSt(jule::Any&);
inline jule::Bool _1ababd5b0_isValidStForNextSt(jule::Any&);
inline jule::Bool _1ababd857_stmtIsDef(jule::Any&);
inline jule::Ptr<_1abc73ee6_Var> _1abad9c08_findVarInPackage(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1abce6ce4_TypeAlias> _1abada137_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1ab08a1a9_Struct> _1abc4add0_findStructInPackage(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1aba9e1c8_Fn> _1abc4b342_findFnInPackage(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1abab10ca_Trait> _1abc4b650_findTraitInPackage(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1abab3220_Enum> _1abc4b991_findEnumInPackage(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1abab481a_TypeEnum> _1abc4bcd2_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>&, jule::Str);
inline jule::Any _1abc4c2cc_defByIdentPackage(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>&, jule::Str&, jule::Bool);
inline jule::Bool _1abc533d2_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1abc541b3_isValidModelForRef(jule::Any&);
inline _1a7995777_Log _1abc545d1_compilerErr(jule::Ptr<_1a97237bc_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1abc54922_impIsLookupable(jule::Ptr<_1abc4cd9e_ImportInfo>&, jule::Str);
inline void _1abc54c1e_appendRetVars(jule::Slice<jule::Ptr<_1abc73ee6_Var>>&, jule::Ptr<_1abaa1d79_FnIns>&);
inline void _1abc54ec7_appendParamVars(jule::Slice<jule::Ptr<_1abc73ee6_Var>>&, jule::Ptr<_1abaa1d79_FnIns>&);
inline void _1abc552a2_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>&, jule::Ptr<_1abaa1d79_FnIns>&);
inline jule::Ptr<_1abcb6c2b_SymbolTable> _1abc55604_findFile(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>&, jule::Ptr<_1a9728b57_File>&);
inline void _1abc55a66_pushSugggestion(_1a7995777_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1abc8c95a_traitHasReferenceReceiver(jule::Ptr<_1abab10ca_Trait>&);
inline jule::Bool _1abc8ca8c_floatAssignable(jule::Str, jule::Ptr<_1abcbba55_Data>&);
inline jule::Bool _1abca4466_sigAssignable(jule::Str, jule::Ptr<_1abcbba55_Data>&);
inline jule::Bool _1abca4598_unsigAssignable(jule::Str, jule::Ptr<_1abcbba55_Data>&);
inline jule::Bool _1abca5643_intAssignable(jule::Str, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abce79d7_TypeKind> _1abcb5ca2_lenKind(void);
inline jule::Ptr<_1ab03a720_Directive> _1abce2185_findDirective(jule::Slice<jule::Ptr<_1ab03a720_Directive>>&, jule::Str);
inline jule::Any _1abce251a_findBuiltinsImport(jule::Str, jule::Ptr<_1abc4cd9e_ImportInfo>);
inline void _1abce2729_fitBitsize(jule::Ptr<_1abcbba55_Data>&);
inline void _1abce2a26_makeStructLitAlloc(jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1aba91a4a_StructLitExprModel>&);
inline jule::Ptr<_1abc73ee6_Var> _1abce2d67_buildErrorVar(jule::Ptr<_1ababdcdb_Scope>&, jule::Ptr<_1ab076eba_FnCallExpr>&);
inline jule::Any _1abce31a8_findBuiltinsSema(jule::Str, jule::Ptr<_1abc55eea_Sema>);
inline jule::Bool _1abce3450_isOkForShifting(jule::Ptr<_1abcbba55_Data>&);
inline jule::Bool _1abce3807_isInstancedStruct(jule::Ptr<_1ab08a583_StructIns>);
inline jule::Bool _1abce3b6a_isPtrArithmeticCompatible(jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&);
inline void _1abce3dac_applyCastKindModel(jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abce79d7_TypeKind>&);
inline void _1abce4165_applyCastKind(jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Ptr<_1abcbba55_Data> _1abce4363_buildVoidData(void);
inline jule::Str _1abce462c_checkDataForIntegerIndexing(jule::Ptr<_1abcbba55_Data>&);
inline void _1abce48e6_applyCastModelByEnum(jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abab3220_Enum>);
inline void _1abce4b9e_castConstByType(jule::Str&, jule::Ptr<_1abcbba55_Data>&);
inline void _1abce51aa_updateModelToGenericIns(jule::Any&, jule::Ptr<_1abaa1d79_FnIns>&);
inline jule::Bool _1abce53ec_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1ab06e6cc_SubIdentTypeDecl>&);
inline jule::Bool _1abd0e6e1_kindUsesGenerics(jule::Ptr<_1abce79d7_TypeKind>&, jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>>&);
inline jule::Bool _1abd0ea76_hasDirective(jule::Slice<jule::Ptr<_1ab03a720_Directive>>&, jule::Str);
inline jule::Bool _1abd0ed1d_canGetPtr(jule::Ptr<_1abcbba55_Data>&);
inline jule::Bool _1abd1013c_isValidForSptrType(jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abd103d4_isValidForRef(jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Bool _1abd1069d_isBuiltinStrConvertable(jule::Ptr<_1abce79d7_TypeKind>&);
inline jule::Str _1abd10923_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1abcec734_Prim> _1abd10cca_buildPrimType(jule::Str);
inline jule::Ptr<_1ab08a1a9_Struct> _1abd11072_getStructFromKind(jule::Ptr<_1abce79d7_TypeKind>);
inline jule::Bool _1abd11319_isPrim(jule::Str);
inline void _1abd115c2_applyImplicitCast(jule::Ptr<_1abce79d7_TypeKind>&, jule::Ptr<_1abcbba55_Data>&);
inline __jule_tuple_x_1abcb6c2b_SymbolTable__jule_tuple_s_1a7995777_Log _1abd1463b_buildSymbols(jule::Ptr<_1ab039532_Ast>&, jule::Trait<_1abad9873_Importer>&, jule::Ptr<_1abaaa602_symbolBuilder>);
inline __jule_tuple_x_1abc50d08_Package__jule_tuple_s_1a7995777_Log _1abd14a6a_analyzePackage(jule::Slice<jule::Ptr<_1ab039532_Ast>>&, jule::Trait<_1abad9873_Importer>&, jule::I64&);
inline __jule_tuple_x_1abc50d08_Package__jule_tuple_s_1a7995777_Log _1abd14e55_AnalyzePackage(jule::Slice<jule::Ptr<_1ab039532_Ast>>, jule::Trait<_1abad9873_Importer>, jule::I64);
inline jule::Ptr<_1abaa1d79_FnIns> _1abd2101b_findBuiltinFn(jule::Str);
inline jule::Ptr<_1abce6ce4_TypeAlias> _1abd22b55_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1abd2752d_findBuiltinDef(jule::Str);
inline jule::Any _1abd266d6_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1abd26818_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1abd1d799_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1abd1d8cb_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1abcbba55_Data> _1abda88de_builtinCallerCommonPlain(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abda8b97_builtinCallerCommon(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abda9082_builtinCallerCommonMut(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abda93c3_builtinCallerError(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&);
inline jule::Ptr<_1abcbba55_Data> _1abda97ad_builtinCallerOut(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abda9b98_builtinCallerOutln(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdaa083_builtinCallerNew(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdaa46d_builtinCallerPanic(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdaaa89_builtinCallerMake(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdaae74_builtinCallerAppend(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdab408_callerCopySlice(jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdab88c_callerCopyStr(jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdabc77_builtinCallerCopy(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdac0b8_callerLenSlice(jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdac409_callerLenMap(jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdac74a_callerLenArr(jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdaca8b_callerLenStr(jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdace76_builtinCallerLen(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdad2b7_callerCapSlice(jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdad608_callerCapStr(jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdad9e3_builtinCallerCap(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdade77_callerDeleteMap(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdae362_builtinCallerDelete(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdae74c_builtinCallerClone(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdaed13_builtinCallerAssert(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdb0176_builtinCallerStdMemSizeOf(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdb0594_builtinCallerStdMemAlignOf(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdb09b2_builtinCallerStdMemFree(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdb0de1_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdb130e_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdb174e_builtinCallerStdDebugOut(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Ptr<_1abcbba55_Data> _1abdb1b39_builtinCallerStdDebugOutln(jule::Ptr<_1abcbd5c3_Eval>&, jule::Ptr<_1ab076eba_FnCallExpr>&, jule::Ptr<_1abcbba55_Data>&);
inline jule::Bool _1ab7922a6_FindModuleFile(jule::Slice<jule::Ptr<_1d95ba601_DirEntry>>&);
inline jule::Str _1ab79244e_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1a7995777_Log> _1ab7926e6_CheckModuleFile(jule::Str);
inline jule::Ptr<_1ac4c8ad0_FileInfo> _1ac52063d_ParseFile(jule::Ptr<_1a9728b57_File>);
inline __jule_tuple_x_1ab039532_Ast__jule_tuple_s_1a7995777_Log _1ac520bc1_parseFileset(jule::Ptr<_1a9728b57_File>);
inline jule::Ptr<_1ab07d950_ScopeTree> _1ac52162d_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1ac5218d6_isSt(jule::Ptr<_1a97237bc_Token>, jule::Ptr<_1a97237bc_Token>);
inline jule::Bool _1ac521c27_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::I64&);
inline __jule_tuple_int__jule_tuple_bool _1ac5220ac_nextStPos(jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::I64);
inline __jule_tuple_sx_1a97237bc_Token__jule_tuple_bool _1ac5223ed_skipSt(jule::I64&, jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Slice<jule::Ptr<_1ac5226ea_stmt>> _1ac522a91_splitStmts(jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Bool _1ac53927d_isTypeOp(jule::Str&);
inline jule::Bool _1ac539569_isTypeRange(jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Slice<jule::Ptr<_1a97237bc_Token>> _1ac539811_getBlockExpr(jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline __jule_tuple_sx_1a97237bc_Token__jule_tuple_sx_1a97237bc_Token _1ac539b96_splitDelim(jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::U64);
inline jule::I64 _1ac539e3d_findLowestPrecOp(jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Ptr<_1ab074b99_IdentExpr> _1ac53a1d5_buildIdentExpr(jule::Ptr<_1a97237bc_Token>&);
inline __jule_tuple_sx_1a97237bc_Token__jule_tuple_int _1ac53a47c_getRangeExprTokens(jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Bool _1ac53b1d6_checkAssignTokens(jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline _1a7995777_Log _1ac53c407_makeErr(jule::I64, jule::I64, jule::Ptr<_1a9728b57_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1a97237bc_Token>> _1ac53c8d0_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline __jule_tuple_sx_1a97237bc_Token__jule_tuple_sx_1a97237bc_Token _1ac53cb77_rangeLast(jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline __jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log _1ac53d062_partsKind(jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::Str, jule::Bool);
inline __jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log _1ac53d44c_parts(jule::Slice<jule::Ptr<_1a97237bc_Token>>&, jule::U64, jule::Bool);
inline jule::Str _1ac53d6e4_getCloseKindOfBrace(jule::Str);
inline _1a7995777_Log _1ac53dace_compilerErr(jule::Ptr<_1a97237bc_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1ac53e00d_pushSuggestion(_1a7995777_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1ac53e2a5_tokstoa(jule::Slice<jule::Ptr<_1a97237bc_Token>>&);
inline jule::Bool _1ac54e31a_isPub(jule::Str&);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac54ebde_buildVoidType(void);
inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac54eded_buildPrimType(jule::Ptr<_1a97237bc_Token>);
inline __jule_tuple_bool__jule_tuple_bool _1ab77eb01_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1ab77ed43_checkArch(jule::Str);
inline jule::Bool _1ab7800da_isPassFileAnnotation(jule::Str);
inline void _1ab7812c8_setOsVars(jule::Slice<jule::Str>&);
inline void _1ab78152b_setArchVars(jule::Slice<jule::Str>&);
inline void _1ab7817d4_initVars(jule::Slice<jule::Str>&, _1ab780eba_CompileInfo&);
inline jule::Slice<jule::U8> _1ac31c281_readBuff(jule::Str);
inline _1a7995777_Log _1ac3244ec_flatCompilerErr(jule::Str);
inline void _1ac2e9060_pushPasses(jule::Ptr<_1abc50d08_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1ac344e24_getAllUniquePasses(jule::Ptr<_1abc50d08_Package>&, jule::Slice<jule::Ptr<_1abc4cd9e_ImportInfo>>);
inline _1ab780eba_CompileInfo _1ac366b6b_buildCompileInfo(void);
inline void _1abc23e74_EliminateDefines(jule::Ptr<_1ac317732_IR>&);
inline jule::Ptr<_1ab03a720_Directive> _1abc24309_findDirective(jule::Slice<jule::Ptr<_1ab03a720_Directive>>&, jule::Str);
inline jule::Bool _1abc2464a_hasDirective(jule::Slice<jule::Ptr<_1ab03a720_Directive>>&, jule::Str);
inline void _1abc28297_eliminateDeadCodeOfScope(jule::Ptr<_1ababdcdb_Scope>);
inline void _1abc2852d_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1aba9e1c8_Fn>>&);
inline void _1abc28770_eliminateFunctionsScopePackage(jule::Ptr<_1abc50d08_Package>&);
inline void _1abc28a17_eliminateScopePackage(jule::Ptr<_1abc50d08_Package>&);
inline void _1abc28c26_EliminateScopes(jule::Ptr<_1ac317732_IR>&);
inline jule::Bool _1a9cae3da_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1a9cca26e_isConstantValidConditionalCase(jule::Ptr<_1ababe1d7_If>&);
inline jule::Bool _1a9ce2cae_isUnreachableExpr(jule::Any&);
inline jule::Bool _1a9ce4ba1_isConstantValidMatchCase(jule::Ptr<_1abac3582_Case>&);
inline jule::Bool _1a9cee12d_isUnreachableConditionalCase(jule::Ptr<_1ababe1d7_If>&);
inline jule::Bool _1a9d064ba_isUnreachableMatchCase(jule::Ptr<_1abac3582_Case>&);
inline __jule_tuple_bool__jule_tuple_u64 _1a9e6ab29_checkForBitShiftOpt(jule::Ptr<_1aba90928_OperandExprModel>&, jule::Ptr<_1aba90928_OperandExprModel>&);
inline void _1a9e6dd08_PushOptLevel(jule::I64);
inline void _1abbe89c6_detectEnabled(void);
inline void _1ac700554_Throw(jule::Str);
inline jule::U64 _1ace10e1d_unix(void);
inline jule::U64 _1ace1122b_unixYearToSeconds(jule::U64, jule::Bool&);
inline jule::U64 _1ace115b1_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1acd5997c_isCopyOptimizable(jule::Ptr<_1abcbba55_Data>&);
inline jule::Bool _1acd59d12_isIterCopyOptimizable(jule::Ptr<_1abcbba55_Data>&, jule::Ptr<_1abc73ee6_Var>&);
inline jule::Str _1acd68ccc_decomposeCommonEsq(jule::U8);
inline jule::Str _1acd690b8_sbtoa(jule::U8);
inline jule::Str _1acd69360_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1acd6967e_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1acd6998c_ftoa(jule::F64, jule::I64);
inline jule::Str _1acd69c34_itoa(jule::I64);
inline jule::Str _1acd69ecb_utoa(jule::U64);
inline jule::Bool _1acd6a383_isForwarded(jule::Ptr<_1ababdcdb_Scope>&);
inline jule::Bool _1acd6a64c_isBuiltinCallHasDebuginf(jule::Ptr<_1aba92c5a_FnCallExprModel>&);
inline jule::Bool _1acd6a87d_isExprComesFromBind(jule::Ptr<_1abcbba55_Data>&);
inline jule::Bool _1acd6ab25_isAny(jule::Ptr<_1abce79d7_TypeKind>&);
inline void _1ace1a862_iterFiles(jule::Ptr<_1abc50d08_Package>&, jule::Fn<void(jule::Ptr<_1abcb6c2b_SymbolTable>&)>);
inline jule::Str _1ace1ab4d_concatAllParts(jule::Slice<jule::Ptr<_1a97237bc_Token>>);
inline jule::Ptr<_1ab03a720_Directive> _1ace28a7e_findDirective(jule::Slice<jule::Ptr<_1ab03a720_Directive>>&, jule::Str);
inline jule::Bool _1ace28e14_hasDirective(jule::Slice<jule::Ptr<_1ab03a720_Directive>>&, jule::Str);
inline jule::Bool _1ace291ab_shouldInitialized(jule::Ptr<_1abce79d7_TypeKind>&);
inline void _1a79221b5_printErrorMessage(jule::Str);
inline void _1a796e630_help(jule::Slice<jule::Str>&);
inline void _1a7977bcc_version(jule::Slice<jule::Str>&);
inline void _1a796b84c_toolDistos(void);
inline void _1a796b97e_toolDistarch(void);
inline void _1a7964746_tool(jule::Slice<jule::Str>&);
inline void _1a7964878_julenv(jule::Slice<jule::Str>&);
inline void _1a79796a1_mod(jule::Slice<jule::Str>&);
inline jule::Bool _1a798547b_processCommand(jule::Slice<jule::Str>&);
inline void _1a79855ad_showInfo(void);
void entry_point(void);
inline void _1ac960d03_init(void);
inline jule::Ptr<_1d7cc668d_File> _1acbb904a_openOutput(jule::Str&);
inline void _1ace38880_clearObjects(void);
inline void _1acd22acc_compileIr(jule::Str, jule::Str);
inline jule::Bool _1acc9b968_isCppSourceFile(jule::Str);
inline void _1ac7b7ad3_pushCompCmdClang(jule::Str&);
inline void _1ace340ea_pushCompCmdGcc(jule::Str&);
inline __jule_tuple_str__jule_tuple_str _1ac939bab_genCompileCmd(jule::Str, jule::Ptr<_1ac317732_IR>&);
inline jule::Str _1ac98583e_getCompilePath(void);
inline void _1acbbedec_applyTargetIndependentOptimizations(jule::Ptr<_1ac317732_IR>&);
inline void _1acd381a8_checkCompilerFlag(void);
inline void _1ace43b10_checkTargetArch(jule::Str);
inline void _1ace47c02_checkTargetOs(jule::Str);
inline void _1acd364e7_checkTargetFlag(jule::Str&);
inline void _1ace2ee1a_checkOptFlag(jule::Str&);
inline void _1ace54c86_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1ace54db8_checkFlags(jule::Slice<jule::Str>&);
inline void _1ace54eea_setupSemaFlags(jule::I64&);
inline jule::Ptr<_1ac317732_IR> _1ace5512c_buildIr(jule::Slice<jule::Str>&);
inline void _1ace5525e_compileCommand(jule::Slice<jule::Str>&);


struct _1abad9873_ImporterMptrData {
	void(*_1abad8784_SetModPath)(jule::Trait<_1abad9873_Importer>, jule::Str);
	jule::Str(*_1abad89d7_GetModPath)(jule::Trait<_1abad9873_Importer>);
	jule::Str(*_1abad8ce5_ModById)(jule::Trait<_1abad9873_Importer>, jule::I64);
	jule::Ptr<_1abc4cd9e_ImportInfo>(*_1abad9103_GetImport)(jule::Trait<_1abad9873_Importer>, jule::Str);
	__jule_tuple_sx_1ab039532_Ast__jule_tuple_s_1a7995777_Log(*_1abad94aa_ImportPackage)(jule::Trait<_1abad9873_Importer>, jule::Str, jule::Bool);
	void(*_1abad9730_Imported)(jule::Trait<_1abad9873_Importer>, jule::Ptr<_1abc4cd9e_ImportInfo>);
};

struct _1abce75a8_KindMptrData {
	jule::Str(*_1abce7157_Str)(jule::Trait<_1abce75a8_Kind>);
	jule::Bool(*_1abce7465_Equal)(jule::Trait<_1abce75a8_Kind>, jule::Ptr<_1abce79d7_TypeKind>);
};

struct _1abd13959_LookupMptrData {
	jule::Ptr<_1abc4cd9e_ImportInfo>(*_1abd11b11_FindPackage)(jule::Trait<_1abd13959_Lookup>, jule::Str);
	jule::Ptr<_1abc4cd9e_ImportInfo>(*_1abd11e1e_SelectPackage)(jule::Trait<_1abd13959_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)>);
	jule::Ptr<_1abc73ee6_Var>(*_1abd122c6_FindVar)(jule::Trait<_1abd13959_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1abce6ce4_TypeAlias>(*_1abd1267d_FindTypeAlias)(jule::Trait<_1abd13959_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ab08a1a9_Struct>(*_1abd12a35_FindStruct)(jule::Trait<_1abd13959_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1aba9e1c8_Fn>(*_1abd12ddc_FindFn)(jule::Trait<_1abd13959_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1abab10ca_Trait>(*_1abd131ea_FindTrait)(jule::Trait<_1abd13959_Lookup>, jule::Str);
	jule::Ptr<_1abab3220_Enum>(*_1abd13508_FindEnum)(jule::Trait<_1abd13959_Lookup>, jule::Str);
	jule::Ptr<_1abab481a_TypeEnum>(*_1abd13816_FindTypeEnum)(jule::Trait<_1abd13959_Lookup>, jule::Str);
};

struct _1ace4d2bd_CommonFlagMptrData {
	jule::Str(*_1ace4e621_Name)(jule::Trait<_1ace4d2bd_CommonFlag>);
	jule::I32(*_1ace4e753_Short)(jule::Trait<_1ace4d2bd_CommonFlag>);
	jule::Str(*_1ace4e885_What)(jule::Trait<_1ace4d2bd_CommonFlag>);
	void(*_1ace4e9b7_Reset)(jule::Trait<_1ace4d2bd_CommonFlag>);
};



inline void _1abad8784_SetModPath_0(jule::Trait<_1abad9873_Importer> _self_, jule::Str _1729_path) {
	_1ac3a7ae1_SetModPath(_self_.safe_ptr<_1ac44b657_JuleImporter>(), _1729_path);
}
inline jule::Str _1abad89d7_GetModPath_0(jule::Trait<_1abad9873_Importer> _self_) {
	return _1ac3ca273_GetModPath(_self_.safe_ptr<_1ac44b657_JuleImporter>());
}
inline jule::Str _1abad8ce5_ModById_0(jule::Trait<_1abad9873_Importer> _self_, jule::I64 _2522_id) {
	return _1ac3d9cdd_ModById(_self_.safe_ptr<_1ac44b657_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abad9103_GetImport_0(jule::Trait<_1abad9873_Importer> _self_, jule::Str _3128_path) {
	return _1ac428007_GetImport(_self_.safe_ptr<_1ac44b657_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1ab039532_Ast__jule_tuple_s_1a7995777_Log _1abad94aa_ImportPackage_0(jule::Trait<_1abad9873_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1ac441be1_ImportPackage(_self_.safe_ptr<_1ac44b657_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1abad9730_Imported_0(jule::Trait<_1abad9873_Importer> _self_, jule::Ptr<_1abc4cd9e_ImportInfo> _4131__0) {
	_1ac46ae29_Imported(_self_.safe_ptr<_1ac44b657_JuleImporter>(), _4131__0);
}
inline jule::Str _1abce7157_Str_0(jule::Trait<_1abce75a8_Kind> _self_) {
	return _1ab060dd8_Str(_self_.safe_ptr<_1ab08a583_StructIns>());
}
inline jule::Bool _1abce7465_Equal_0(jule::Trait<_1abce75a8_Kind> _self_, jule::Ptr<_1abce79d7_TypeKind> _5621_other) {
	return _1ab06203d_Equal(_self_.data.as<_1ab08a583_StructIns>(), _5621_other);
}
inline jule::Str _1abce7157_Str_1(jule::Trait<_1abce75a8_Kind> _self_) {
	return _1abaa21a9_Str(_self_.safe_ptr<_1abaa1d79_FnIns>());
}
inline jule::Bool _1abce7465_Equal_1(jule::Trait<_1abce75a8_Kind> _self_, jule::Ptr<_1abce79d7_TypeKind> _5621_other) {
	return _1abaa24b7_Equal(_self_.data.as<_1abaa1d79_FnIns>(), _5621_other);
}
inline jule::Str _1abce7157_Str_2(jule::Trait<_1abce75a8_Kind> _self_) {
	return _1abab14c6_Str(_self_.safe_ptr<_1abab10ca_Trait>());
}
inline jule::Bool _1abce7465_Equal_2(jule::Trait<_1abce75a8_Kind> _self_, jule::Ptr<_1abce79d7_TypeKind> _5621_other) {
	return _1abab17d4_Equal(_self_.data.as<_1abab10ca_Trait>(), _5621_other);
}
inline jule::Str _1abce7157_Str_3(jule::Trait<_1abce75a8_Kind> _self_) {
	return _1abab3583_Str(_self_.safe_ptr<_1abab3220_Enum>());
}
inline jule::Bool _1abce7465_Equal_3(jule::Trait<_1abce75a8_Kind> _self_, jule::Ptr<_1abce79d7_TypeKind> _5621_other) {
	return _1abab3891_Equal(_self_.data.as<_1abab3220_Enum>(), _5621_other);
}
inline jule::Str _1abce7157_Str_4(jule::Trait<_1abce75a8_Kind> _self_) {
	return _1abab4b4a_Str(_self_.safe_ptr<_1abab481a_TypeEnum>());
}
inline jule::Bool _1abce7465_Equal_4(jule::Trait<_1abce75a8_Kind> _self_, jule::Ptr<_1abce79d7_TypeKind> _5621_other) {
	return _1abab4e58_Equal(_self_.data.as<_1abab481a_TypeEnum>(), _5621_other);
}
inline jule::Str _1abce7157_Str_5(jule::Trait<_1abce75a8_Kind> _self_) {
	return _1abce7dd3_Str(_self_.safe_ptr<_1abce79d7_TypeKind>());
}
inline jule::Bool _1abce7465_Equal_5(jule::Trait<_1abce75a8_Kind> _self_, jule::Ptr<_1abce79d7_TypeKind> _5621_other) {
	return _1abce81e1_Equal(_self_.data.as<_1abce79d7_TypeKind>(), _5621_other);
}
inline jule::Str _1abce7157_Str_6(jule::Trait<_1abce75a8_Kind> _self_) {
	return _1abceca97_Str(_self_.safe_ptr<_1abcec734_Prim>());
}
inline jule::Bool _1abce7465_Equal_6(jule::Trait<_1abce75a8_Kind> _self_, jule::Ptr<_1abce79d7_TypeKind> _5621_other) {
	return _1abcecda5_Equal(_self_.data.as<_1abcec734_Prim>(), _5621_other);
}
inline jule::Str _1abce7157_Str_7(jule::Trait<_1abce75a8_Kind> _self_) {
	return _1abd0132b_Str(_self_.safe_ptr<_1abd00eb8_Sptr>());
}
inline jule::Bool _1abce7465_Equal_7(jule::Trait<_1abce75a8_Kind> _self_, jule::Ptr<_1abce79d7_TypeKind> _5621_other) {
	return _1abd01639_Equal(_self_.data.as<_1abd00eb8_Sptr>(), _5621_other);
}
inline jule::Str _1abce7157_Str_8(jule::Trait<_1abce75a8_Kind> _self_) {
	return _1abd01e31_Str(_self_.safe_ptr<_1abd01925_Slc>());
}
inline jule::Bool _1abce7465_Equal_8(jule::Trait<_1abce75a8_Kind> _self_, jule::Ptr<_1abce79d7_TypeKind> _5621_other) {
	return _1abd0223e_Equal(_self_.data.as<_1abd01925_Slc>(), _5621_other);
}
inline jule::Str _1abce7157_Str_9(jule::Trait<_1abce75a8_Kind> _self_) {
	return _1abd02816_Str(_self_.safe_ptr<_1abd024a3_Tuple>());
}
inline jule::Bool _1abce7465_Equal_9(jule::Trait<_1abce75a8_Kind> _self_, jule::Ptr<_1abce79d7_TypeKind> _5621_other) {
	return _1abd02b24_Equal(_self_.data.as<_1abd024a3_Tuple>(), _5621_other);
}
inline jule::Str _1abce7157_Str_10(jule::Trait<_1abce75a8_Kind> _self_) {
	return _1abd0333e_Str(_self_.safe_ptr<_1abd02ecb_Map>());
}
inline jule::Bool _1abce7465_Equal_10(jule::Trait<_1abce75a8_Kind> _self_, jule::Ptr<_1abce79d7_TypeKind> _5621_other) {
	return _1abd0364c_Equal(_self_.data.as<_1abd02ecb_Map>(), _5621_other);
}
inline jule::Str _1abce7157_Str_11(jule::Trait<_1abce75a8_Kind> _self_) {
	return _1abd03e33_Str(_self_.safe_ptr<_1abd03ac0_Arr>());
}
inline jule::Bool _1abce7465_Equal_11(jule::Trait<_1abce75a8_Kind> _self_, jule::Ptr<_1abce79d7_TypeKind> _5621_other) {
	return _1abd04241_Equal(_self_.data.as<_1abd03ac0_Arr>(), _5621_other);
}
inline jule::Str _1abce7157_Str_12(jule::Trait<_1abce75a8_Kind> _self_) {
	return _1abd04890_Str(_self_.safe_ptr<_1abd0452c_Ptr>());
}
inline jule::Bool _1abce7465_Equal_12(jule::Trait<_1abce75a8_Kind> _self_, jule::Ptr<_1abce79d7_TypeKind> _5621_other) {
	return _1abd04b9d_Equal(_self_.data.as<_1abd0452c_Ptr>(), _5621_other);
}
inline jule::Str _1abce7157_Str_13(jule::Trait<_1abce75a8_Kind> _self_) {
	return _1ace1bad8_Str(_self_.safe_ptr<_1ace1b7ec_customType>());
}
inline jule::Bool _1abce7465_Equal_13(jule::Trait<_1abce75a8_Kind> _self_, jule::Ptr<_1abce79d7_TypeKind> _5621_other) {
	return _1ace1bde6_Equal(_self_.data.as<_1ace1b7ec_customType>(), _5621_other);
}
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abd11b11_FindPackage_0(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _930_ident) {
	return _1abac5cd2_FindPackage(_self_.safe_ptr<_1abac584d_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abd11e1e_SelectPackage_0(jule::Trait<_1abd13959_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)> _1332_selector) {
	return _1abac60e0_SelectPackage(_self_.safe_ptr<_1abac584d_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_1abc73ee6_Var> _1abd122c6_FindVar_0(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1abac6497_FindVar(_self_.safe_ptr<_1abac584d_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1abce6ce4_TypeAlias> _1abd1267d_FindTypeAlias_0(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1abac684e_FindTypeAlias(_self_.safe_ptr<_1abac584d_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1ab08a1a9_Struct> _1abd12a35_FindStruct_0(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1abac6c06_FindStruct(_self_.safe_ptr<_1abac584d_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1aba9e1c8_Fn> _1abd12ddc_FindFn_0(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1abac70ad_FindFn(_self_.safe_ptr<_1abac584d_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1abab10ca_Trait> _1abd131ea_FindTrait_0(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _3328_ident) {
	return _1abac73bb_FindTrait(_self_.safe_ptr<_1abac584d_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_1abab3220_Enum> _1abd13508_FindEnum_0(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _3727_ident) {
	return _1abac76c9_FindEnum(_self_.safe_ptr<_1abac584d_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_1abab481a_TypeEnum> _1abd13816_FindTypeEnum_0(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _4131_ident) {
	return _1abac79d7_FindTypeEnum(_self_.safe_ptr<_1abac584d_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abd11b11_FindPackage_1(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _930_ident) {
	return _1abc4d3bb_FindPackage(_self_.safe_ptr<_1abc4cd9e_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abd11e1e_SelectPackage_1(jule::Trait<_1abd13959_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)> _1332_selector) {
	return _1abc4d6c9_SelectPackage(_self_.safe_ptr<_1abc4cd9e_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_1abc73ee6_Var> _1abd122c6_FindVar_1(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1abc4da81_FindVar(_self_.safe_ptr<_1abc4cd9e_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1abce6ce4_TypeAlias> _1abd1267d_FindTypeAlias_1(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1abc4de38_FindTypeAlias(_self_.safe_ptr<_1abc4cd9e_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1ab08a1a9_Struct> _1abd12a35_FindStruct_1(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1abc4e2e0_FindStruct(_self_.safe_ptr<_1abc4cd9e_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1aba9e1c8_Fn> _1abd12ddc_FindFn_1(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1abc4e697_FindFn(_self_.safe_ptr<_1abc4cd9e_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1abab10ca_Trait> _1abd131ea_FindTrait_1(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _3328_ident) {
	return _1abc4e9a5_FindTrait(_self_.safe_ptr<_1abc4cd9e_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_1abab3220_Enum> _1abd13508_FindEnum_1(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _3727_ident) {
	return _1abc4ecb3_FindEnum(_self_.safe_ptr<_1abc4cd9e_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_1abab481a_TypeEnum> _1abd13816_FindTypeEnum_1(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _4131_ident) {
	return _1abc500c1_FindTypeEnum(_self_.safe_ptr<_1abc4cd9e_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abd11b11_FindPackage_2(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _930_ident) {
	return _1abc512d1_FindPackage(_self_.safe_ptr<_1abc50d08_Package>(), _930_ident);
}
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abd11e1e_SelectPackage_2(jule::Trait<_1abd13959_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)> _1332_selector) {
	return _1abc515de_SelectPackage(_self_.safe_ptr<_1abc50d08_Package>(), _1332_selector);
}
inline jule::Ptr<_1abc73ee6_Var> _1abd122c6_FindVar_2(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1abc51996_FindVar(_self_.safe_ptr<_1abc50d08_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1abce6ce4_TypeAlias> _1abd1267d_FindTypeAlias_2(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1abc51d4d_FindTypeAlias(_self_.safe_ptr<_1abc50d08_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1ab08a1a9_Struct> _1abd12a35_FindStruct_2(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1abc52205_FindStruct(_self_.safe_ptr<_1abc50d08_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1aba9e1c8_Fn> _1abd12ddc_FindFn_2(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1abc525ac_FindFn(_self_.safe_ptr<_1abc50d08_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1abab10ca_Trait> _1abd131ea_FindTrait_2(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _3328_ident) {
	return _1abc528ba_FindTrait(_self_.safe_ptr<_1abc50d08_Package>(), _3328_ident);
}
inline jule::Ptr<_1abab3220_Enum> _1abd13508_FindEnum_2(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _3727_ident) {
	return _1abc52bc8_FindEnum(_self_.safe_ptr<_1abc50d08_Package>(), _3727_ident);
}
inline jule::Ptr<_1abab481a_TypeEnum> _1abd13816_FindTypeEnum_2(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _4131_ident) {
	return _1abc52ed6_FindTypeEnum(_self_.safe_ptr<_1abc50d08_Package>(), _4131_ident);
}
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abd11b11_FindPackage_3(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _930_ident) {
	return _1abc56517_FindPackage(_self_.safe_ptr<_1abc55eea_Sema>(), _930_ident);
}
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abd11e1e_SelectPackage_3(jule::Trait<_1abd13959_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)> _1332_selector) {
	return _1abc56825_SelectPackage(_self_.safe_ptr<_1abc55eea_Sema>(), _1332_selector);
}
inline jule::Ptr<_1abc73ee6_Var> _1abd122c6_FindVar_3(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1abc56bcc_FindVar(_self_.safe_ptr<_1abc55eea_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1abce6ce4_TypeAlias> _1abd1267d_FindTypeAlias_3(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1abc57084_FindTypeAlias(_self_.safe_ptr<_1abc55eea_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1ab08a1a9_Struct> _1abd12a35_FindStruct_3(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1abc5743b_FindStruct(_self_.safe_ptr<_1abc55eea_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1aba9e1c8_Fn> _1abd12ddc_FindFn_3(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1abc577e3_FindFn(_self_.safe_ptr<_1abc55eea_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1abab10ca_Trait> _1abd131ea_FindTrait_3(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _3328_ident) {
	return _1abc57b01_FindTrait(_self_.safe_ptr<_1abc55eea_Sema>(), _3328_ident);
}
inline jule::Ptr<_1abab3220_Enum> _1abd13508_FindEnum_3(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _3727_ident) {
	return _1abc57e0e_FindEnum(_self_.safe_ptr<_1abc55eea_Sema>(), _3727_ident);
}
inline jule::Ptr<_1abab481a_TypeEnum> _1abd13816_FindTypeEnum_3(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _4131_ident) {
	return _1abc5821c_FindTypeEnum(_self_.safe_ptr<_1abc55eea_Sema>(), _4131_ident);
}
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abd11b11_FindPackage_4(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _930_ident) {
	return _1abcb7248_FindPackage(_self_.safe_ptr<_1abcb6c2b_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abd11e1e_SelectPackage_4(jule::Trait<_1abd13959_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)> _1332_selector) {
	return _1abcb7556_SelectPackage(_self_.safe_ptr<_1abcb6c2b_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_1abc73ee6_Var> _1abd122c6_FindVar_4(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1abcb790d_FindVar(_self_.safe_ptr<_1abcb6c2b_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1abce6ce4_TypeAlias> _1abd1267d_FindTypeAlias_4(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1abcb7cb5_FindTypeAlias(_self_.safe_ptr<_1abcb6c2b_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1ab08a1a9_Struct> _1abd12a35_FindStruct_4(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1abcb816c_FindStruct(_self_.safe_ptr<_1abcb6c2b_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1aba9e1c8_Fn> _1abd12ddc_FindFn_4(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1abcb8524_FindFn(_self_.safe_ptr<_1abcb6c2b_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1abab10ca_Trait> _1abd131ea_FindTrait_4(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _3328_ident) {
	return _1abcb8832_FindTrait(_self_.safe_ptr<_1abcb6c2b_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_1abab3220_Enum> _1abd13508_FindEnum_4(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _3727_ident) {
	return _1abcb8b40_FindEnum(_self_.safe_ptr<_1abcb6c2b_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_1abab481a_TypeEnum> _1abd13816_FindTypeEnum_4(jule::Trait<_1abd13959_Lookup> _self_, jule::Str _4131_ident) {
	return _1abcb8e4d_FindTypeEnum(_self_.safe_ptr<_1abcb6c2b_SymbolTable>(), _4131_ident);
}
inline jule::Str _1ace4e621_Name_0(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	return _1bc114bb2_Name(_self_.safe_ptr<_1bc11484e_Flag>());
}
inline jule::I32 _1ace4e753_Short_0(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	return _1bc11507a_Short(_self_.safe_ptr<_1bc11484e_Flag>());
}
inline jule::Str _1ace4e885_What_0(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	return _1bc114ce4_What(_self_.safe_ptr<_1bc11484e_Flag>());
}
inline void _1ace4e9b7_Reset_0(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	_1bc114e37_Reset(_self_.safe_ptr<_1bc11484e_Flag>());
}
inline jule::Str _1ace4e621_Name_1(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	return _1bc118116_Name(_self_.safe_ptr<_1bc118589_Flag>());
}
inline jule::I32 _1ace4e753_Short_1(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	return _1bc118ad9_Short(_self_.safe_ptr<_1bc118589_Flag>());
}
inline jule::Str _1ace4e885_What_1(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	return _1bc118875_What(_self_.safe_ptr<_1bc118589_Flag>());
}
inline void _1ace4e9b7_Reset_1(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	_1bc1189a7_Reset(_self_.safe_ptr<_1bc118589_Flag>());
}
inline jule::Str _1ace4e621_Name_2(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	return _1bc11b933_Name(_self_.safe_ptr<_1bc11bda6_Flag>());
}
inline jule::I32 _1ace4e753_Short_2(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	return _1bc11c406_Short(_self_.safe_ptr<_1bc11bda6_Flag>());
}
inline jule::Str _1ace4e885_What_2(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	return _1bc11c192_What(_self_.safe_ptr<_1bc11bda6_Flag>());
}
inline void _1ace4e9b7_Reset_2(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	_1bc11c2c4_Reset(_self_.safe_ptr<_1bc11bda6_Flag>());
}
inline jule::Str _1ace4e621_Name_3(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	return _1bc120294_Name(_self_.safe_ptr<_1bc120717_Flag>());
}
inline jule::I32 _1ace4e753_Short_3(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	return _1bc120c67_Short(_self_.safe_ptr<_1bc120717_Flag>());
}
inline jule::Str _1ace4e885_What_3(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	return _1bc120a03_What(_self_.safe_ptr<_1bc120717_Flag>());
}
inline void _1ace4e9b7_Reset_3(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	_1bc120b35_Reset(_self_.safe_ptr<_1bc120717_Flag>());
}
inline jule::Str _1ace4e621_Name_4(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	return _1bc123ab1_Name(_self_.safe_ptr<_1bc124034_Flag>());
}
inline jule::I32 _1ace4e753_Short_4(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	return _1bc124584_Short(_self_.safe_ptr<_1bc124034_Flag>());
}
inline jule::Str _1ace4e885_What_4(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	return _1bc124320_What(_self_.safe_ptr<_1bc124034_Flag>());
}
inline void _1ace4e9b7_Reset_4(jule::Trait<_1ace4d2bd_CommonFlag> _self_) {
	_1bc124452_Reset(_self_.safe_ptr<_1bc124034_Flag>());
}


static _1abad9873_ImporterMptrData _1abad9873_Importer_mptr_data[] = {
	{
		._1abad8784_SetModPath=_1abad8784_SetModPath_0,
		._1abad89d7_GetModPath=_1abad89d7_GetModPath_0,
		._1abad8ce5_ModById=_1abad8ce5_ModById_0,
		._1abad9103_GetImport=_1abad9103_GetImport_0,
		._1abad94aa_ImportPackage=_1abad94aa_ImportPackage_0,
		._1abad9730_Imported=_1abad9730_Imported_0,
	},
};
static _1abce75a8_KindMptrData _1abce75a8_Kind_mptr_data[] = {
	{
		._1abce7157_Str=_1abce7157_Str_0,
		._1abce7465_Equal=_1abce7465_Equal_0,
	},
	{
		._1abce7157_Str=_1abce7157_Str_1,
		._1abce7465_Equal=_1abce7465_Equal_1,
	},
	{
		._1abce7157_Str=_1abce7157_Str_2,
		._1abce7465_Equal=_1abce7465_Equal_2,
	},
	{
		._1abce7157_Str=_1abce7157_Str_3,
		._1abce7465_Equal=_1abce7465_Equal_3,
	},
	{
		._1abce7157_Str=_1abce7157_Str_4,
		._1abce7465_Equal=_1abce7465_Equal_4,
	},
	{
		._1abce7157_Str=_1abce7157_Str_5,
		._1abce7465_Equal=_1abce7465_Equal_5,
	},
	{
		._1abce7157_Str=_1abce7157_Str_6,
		._1abce7465_Equal=_1abce7465_Equal_6,
	},
	{
		._1abce7157_Str=_1abce7157_Str_7,
		._1abce7465_Equal=_1abce7465_Equal_7,
	},
	{
		._1abce7157_Str=_1abce7157_Str_8,
		._1abce7465_Equal=_1abce7465_Equal_8,
	},
	{
		._1abce7157_Str=_1abce7157_Str_9,
		._1abce7465_Equal=_1abce7465_Equal_9,
	},
	{
		._1abce7157_Str=_1abce7157_Str_10,
		._1abce7465_Equal=_1abce7465_Equal_10,
	},
	{
		._1abce7157_Str=_1abce7157_Str_11,
		._1abce7465_Equal=_1abce7465_Equal_11,
	},
	{
		._1abce7157_Str=_1abce7157_Str_12,
		._1abce7465_Equal=_1abce7465_Equal_12,
	},
	{
		._1abce7157_Str=_1abce7157_Str_13,
		._1abce7465_Equal=_1abce7465_Equal_13,
	},
};
static _1abd13959_LookupMptrData _1abd13959_Lookup_mptr_data[] = {
	{
		._1abd11b11_FindPackage=_1abd11b11_FindPackage_0,
		._1abd11e1e_SelectPackage=_1abd11e1e_SelectPackage_0,
		._1abd122c6_FindVar=_1abd122c6_FindVar_0,
		._1abd1267d_FindTypeAlias=_1abd1267d_FindTypeAlias_0,
		._1abd12a35_FindStruct=_1abd12a35_FindStruct_0,
		._1abd12ddc_FindFn=_1abd12ddc_FindFn_0,
		._1abd131ea_FindTrait=_1abd131ea_FindTrait_0,
		._1abd13508_FindEnum=_1abd13508_FindEnum_0,
		._1abd13816_FindTypeEnum=_1abd13816_FindTypeEnum_0,
	},
	{
		._1abd11b11_FindPackage=_1abd11b11_FindPackage_1,
		._1abd11e1e_SelectPackage=_1abd11e1e_SelectPackage_1,
		._1abd122c6_FindVar=_1abd122c6_FindVar_1,
		._1abd1267d_FindTypeAlias=_1abd1267d_FindTypeAlias_1,
		._1abd12a35_FindStruct=_1abd12a35_FindStruct_1,
		._1abd12ddc_FindFn=_1abd12ddc_FindFn_1,
		._1abd131ea_FindTrait=_1abd131ea_FindTrait_1,
		._1abd13508_FindEnum=_1abd13508_FindEnum_1,
		._1abd13816_FindTypeEnum=_1abd13816_FindTypeEnum_1,
	},
	{
		._1abd11b11_FindPackage=_1abd11b11_FindPackage_2,
		._1abd11e1e_SelectPackage=_1abd11e1e_SelectPackage_2,
		._1abd122c6_FindVar=_1abd122c6_FindVar_2,
		._1abd1267d_FindTypeAlias=_1abd1267d_FindTypeAlias_2,
		._1abd12a35_FindStruct=_1abd12a35_FindStruct_2,
		._1abd12ddc_FindFn=_1abd12ddc_FindFn_2,
		._1abd131ea_FindTrait=_1abd131ea_FindTrait_2,
		._1abd13508_FindEnum=_1abd13508_FindEnum_2,
		._1abd13816_FindTypeEnum=_1abd13816_FindTypeEnum_2,
	},
	{
		._1abd11b11_FindPackage=_1abd11b11_FindPackage_3,
		._1abd11e1e_SelectPackage=_1abd11e1e_SelectPackage_3,
		._1abd122c6_FindVar=_1abd122c6_FindVar_3,
		._1abd1267d_FindTypeAlias=_1abd1267d_FindTypeAlias_3,
		._1abd12a35_FindStruct=_1abd12a35_FindStruct_3,
		._1abd12ddc_FindFn=_1abd12ddc_FindFn_3,
		._1abd131ea_FindTrait=_1abd131ea_FindTrait_3,
		._1abd13508_FindEnum=_1abd13508_FindEnum_3,
		._1abd13816_FindTypeEnum=_1abd13816_FindTypeEnum_3,
	},
	{
		._1abd11b11_FindPackage=_1abd11b11_FindPackage_4,
		._1abd11e1e_SelectPackage=_1abd11e1e_SelectPackage_4,
		._1abd122c6_FindVar=_1abd122c6_FindVar_4,
		._1abd1267d_FindTypeAlias=_1abd1267d_FindTypeAlias_4,
		._1abd12a35_FindStruct=_1abd12a35_FindStruct_4,
		._1abd12ddc_FindFn=_1abd12ddc_FindFn_4,
		._1abd131ea_FindTrait=_1abd131ea_FindTrait_4,
		._1abd13508_FindEnum=_1abd13508_FindEnum_4,
		._1abd13816_FindTypeEnum=_1abd13816_FindTypeEnum_4,
	},
};
static _1ace4d2bd_CommonFlagMptrData _1ace4d2bd_CommonFlag_mptr_data[] = {
	{
		._1ace4e621_Name=_1ace4e621_Name_0,
		._1ace4e753_Short=_1ace4e753_Short_0,
		._1ace4e885_What=_1ace4e885_What_0,
		._1ace4e9b7_Reset=_1ace4e9b7_Reset_0,
	},
	{
		._1ace4e621_Name=_1ace4e621_Name_1,
		._1ace4e753_Short=_1ace4e753_Short_1,
		._1ace4e885_What=_1ace4e885_What_1,
		._1ace4e9b7_Reset=_1ace4e9b7_Reset_1,
	},
	{
		._1ace4e621_Name=_1ace4e621_Name_2,
		._1ace4e753_Short=_1ace4e753_Short_2,
		._1ace4e885_What=_1ace4e885_What_2,
		._1ace4e9b7_Reset=_1ace4e9b7_Reset_2,
	},
	{
		._1ace4e621_Name=_1ace4e621_Name_3,
		._1ace4e753_Short=_1ace4e753_Short_3,
		._1ace4e885_What=_1ace4e885_What_3,
		._1ace4e9b7_Reset=_1ace4e9b7_Reset_3,
	},
	{
		._1ace4e621_Name=_1ace4e621_Name_4,
		._1ace4e753_Short=_1ace4e753_Short_4,
		._1ace4e885_What=_1ace4e885_What_4,
		._1ace4e9b7_Reset=_1ace4e9b7_Reset_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Any>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Any*>(alloc) == *static_cast<jule::Any*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Any*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::Any &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I32*>(alloc) == *static_cast<jule::I32*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U64*>(alloc) == *static_cast<jule::U64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Bool*>(alloc) == *static_cast<jule::Bool*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type7_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type7_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=__jule_any_type7_eq, .to_str=__jule_any_type7_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type7 && __jule_any_type7_eq(any.data.alloc, (void*)&other); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type8_eq(void *alloc, void *other) noexcept { return *static_cast<jule::F64*>(alloc) == *static_cast<jule::F64*>(other); }
jule::Str __jule_any_type8_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=__jule_any_type8_eq, .to_str=__jule_any_type8_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type8 && __jule_any_type8_eq(any.data.alloc, (void*)&other); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abaa1d79_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1abaa1d79_FnIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abc73ee6_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1abc73ee6_Var> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab08a583_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1ab08a583_StructIns> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abab10ca_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1abab10ca_Trait> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0898e5_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1ab0898e5_Impl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab084c86_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1ab084c86_TypeAliasDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab088bd0_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1ab088bd0_StructDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab080446_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1ab080446_FnDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0892da_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1ab0892da_TraitDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab081425_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1ab081425_VarDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab08711d_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1ab08711d_EnumDecl> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab08822e_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1ab08822e_TypeEnumDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab06e07d_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1ab06e07d_IdentTypeDecl> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abac152a_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1abac152a_Label> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ababdcdb_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1ababdcdb_Scope> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba9a290_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1aba9a290_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abcbba55_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1abcbba55_Data> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba9b33a_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1aba9b33a_BackendEmitExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba98c50_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1aba98c50_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba97633_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1aba97633_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba96e29_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1aba96e29_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba97314_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1aba97314_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba97e08_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1aba97e08_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba983ae_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1aba983ae_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba99da5_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1aba99da5_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba99a42_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1aba99a42_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba9b626_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1aba9b626_FreeExprModel> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba92c5a_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1aba92c5a_FnCallExprModel> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ababe847_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1ababe847_Conditional> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ababeb33_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1ababeb33_InfIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab082712_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1ab082712_WhileKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abac00a6_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1abac00a6_WhileIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0830a3_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1ab0830a3_RangeKind> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abac098b_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1abac098b_RangeIter> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abac0d87_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1abac0d87_ContSt> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abac1816_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1abac1816_GotoSt> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abac1bbd_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1abac1bbd_Postfix> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abac2141_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1abac2141_Assign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba93585_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1aba93585_IndexingExprModel> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abac24e8_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1abac24e8_MultiAssign> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba86b94_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1aba86b94_Const> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abac2a37_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1abac2a37_Match> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abac3b37_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1abac3b37_FallSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abac123e_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1abac123e_BreakSt> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abac3eab_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1abac3eab_RetSt> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07d950_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1ab07d950_ScopeTree> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab072ed8_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1ab072ed8_Expr> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0845b0_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1ab0845b0_Conditional> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab081e3c_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1ab081e3c_Iter> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab083812_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1ab083812_ContSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07b167_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1ab07b167_LabelSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07b51e_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1ab07b51e_GotoSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07c454_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1ab07c454_AssignSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0858d0_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1ab0858d0_MatchCase> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07b80a_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1ab07b80a_FallSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab08345a_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1ab08345a_BreakSt> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0817cc_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1ab0817cc_RetSt> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab073879_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1ab073879_UseExpr> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba9e1c8_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1aba9e1c8_Fn> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab08a1a9_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1ab08a1a9_Struct> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abce6ce4_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1abce6ce4_TypeAlias> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abab3220_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1abab3220_Enum> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abab481a_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1abab481a_TypeEnum> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba94ce5_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1aba94ce5_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba95697_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1aba95697_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba961e2_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1aba961e2_CommonIdentExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba96753_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1aba96753_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba91297_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1aba91297_UnaryExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type77_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type77_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=__jule_any_type77_eq, .to_str=__jule_any_type77_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type77 && __jule_any_type77_eq(any.data.alloc, (void*)&other); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab070ec5_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1ab070ec5_ArrTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07026b_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1ab07026b_SlcTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab070843_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1ab070843_PtrTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab06ed70_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1ab06ed70_SptrTypeDecl> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab071723_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1ab071723_MapTypeDecl> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab070557_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1ab070557_TupleTypeDecl> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07575a_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1ab07575a_VariadicExpr> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba93112_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1aba93112_SliceExprModel> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab077949_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1ab077949_FieldExprPair> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab078de0_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1ab078de0_KeyValPair> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab074b99_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1ab074b99_IdentExpr> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab073b65_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1ab073b65_TupleExpr> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba96a50_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1aba96a50_TupleExprModel> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba9ab64_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1aba9ab64_RuneExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abce79d7_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1abce79d7_TypeKind> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba95e06_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1aba95e06_ArrayExprModel> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07643c_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1ab07643c_SubIdentExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab06e6cc_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1ab06e6cc_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0753a3_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1ab0753a3_UnaryExpr> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab06d9b7_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1ab06d9b7_TypeDecl> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab075eb9_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1ab075eb9_NsSelectionExpr> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab06ea84_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1ab06ea84_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba947a6_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1aba947a6_SlicingExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type101_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type101_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=__jule_any_type101_eq, .to_str=__jule_any_type101_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type101 && __jule_any_type101_eq(any.data.alloc, (void*)&other); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba923a8_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1aba923a8_CastingExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0795c7_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1ab0795c7_SliceExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba91a4a_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1aba91a4a_StructLitExprModel> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba95a3d_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1aba95a3d_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba94267_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1aba94267_MapExprModel> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba9393c_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1aba9393c_AnonFnExprModel> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0732c4_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1ab0732c4_RangeExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07401c_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1ab07401c_LitExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab074726_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1ab074726_UnsafeExpr> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab079e46_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1ab079e46_IndexingExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07a551_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1ab07a551_SlicingExpr> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab075b12_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1ab075b12_CastExpr> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab078197_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1ab078197_StructLit> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab076eba_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1ab076eba_FnCallExpr> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab07861a_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1ab07861a_BraceLit> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab0768b0_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1ab0768b0_BinopExpr> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type118_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type118_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=__jule_any_type118_eq, .to_str=__jule_any_type118_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type118 && __jule_any_type118_eq(any.data.alloc, (void*)&other); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba90de0_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1aba90de0_BinopExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba91d58_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1aba91d58_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba97a1d_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1aba97a1d_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba98865_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1aba98865_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba9906e_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1aba9906e_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba9938d_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1aba9938d_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba9a58c_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1aba9a58c_SizeofExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba9a878_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1aba9a878_AlignofExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba9ae72_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1aba9ae72_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a9cd418a_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1a9cd418a_MutSlicingExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a9e8e1e1_StrInsertBeginExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1a9e8e1e1_StrInsertBeginExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a9791384_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1a9791384_PushToSliceExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a9750e7b_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1a9750e7b_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a97dda1e_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1a97dda1e_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type132 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U8*>(alloc) == *static_cast<jule::U8*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *static_cast<jule::F32*>(alloc) == *static_cast<jule::F32*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
void __jule_any_type137_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I8*>(alloc) == *static_cast<jule::I8*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_any_type137_dealloc, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
void __jule_any_type138_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I16*>(alloc) == *static_cast<jule::I16*>(other); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_any_type138_dealloc, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
void __jule_any_type139_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U16*>(alloc) == *static_cast<jule::U16*>(other); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_any_type139_dealloc, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
void __jule_any_type140_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U32*>(alloc) == *static_cast<jule::U32*>(other); }
jule::Str __jule_any_type140_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_any_type140_dealloc, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type140_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type140 && __jule_any_type140_eq(any.data.alloc, (void*)&other); }
jule::Str _1acad222c_OutDir = jule::Str("dist", 4);
jule::Str _1acbb8500_OutName = jule::Str("ir.cpp", 6);
jule::Str _1ace33072_Out = jule::Str();
jule::Str _1d7c08328_Compiler = jule::Str();
jule::Str _1d7c095c1_CompilerPath = jule::Str();
jule::Str _1d7c097e1_CppStd = jule::Str("cpp17", 5);
jule::Bool _1d7c09a11_Shadowing = false;
jule::Bool _1d7c09c64_Transpilation = false;
jule::Bool _1d7c0a02d_Test = false;
jule::Bool _1d7c0a2e7_RC = true;
jule::Bool _1d7c0a6c1_Safety = true;
jule::Bool _1d7c0a98a_Production = false;
jule::Ptr<_1a77e9d29_RangeTable> _1a7785567__L = jule::new_ptr<_1a77e9d29_RangeTable>(_1a77e9d29_RangeTable{._field_R16=jule::Slice<_1a77e9433_Range16>::make({_1a77e9433_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1a77e9433_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1a77e9433_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1a77e9433_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1a77e9433_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1a77e9433_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1a77e9433_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1a77e9433_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1a77e9433_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1a77e9433_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1a77e9433_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1a77e9433_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1a77e9433_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1a77e9433_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1a77e9433_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1a77e9433_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1a77e9433_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1a77e9433_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1a77e9433_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1a77e9433_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1a77e9433_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1a77e9433_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1a77e9433_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1a77e9433_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1a77e9433_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1a77e9433_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1a77e9433_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1a77e9433_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1a77e9433_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1a77e9433_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1a77e9433_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1a77e9433_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1a77e9433_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1a77e9433_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1a77e9433_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1a77e9433_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1a77e9433_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1a77e9433_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1a77e9433_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1a77e9433_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1a77e9433_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1a77e9433_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1a77e9433_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1a77e9433_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1a77e9433_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1a77e9433_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1a77e9433_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1a77e9433_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1a77e9433_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1a77e9433_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1a77e9433_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1a77e9433_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1a77e9433_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1a77e9433_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1a77e9433_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1a77e9433_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1a77e9433_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1a77e9433_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1a77e9433_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1a77e9433_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1a77e98a6_Range32>::make({_1a77e98a6_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1a77e98a6_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1a77e98a6_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1a77e98a6_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1a77e98a6_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1a77e98a6_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1a77e98a6_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1a77e98a6_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1a77e98a6_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1a77e98a6_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1a77e98a6_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1a77e98a6_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1a77e98a6_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1a77e98a6_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1a77e98a6_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1a77e98a6_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1a77e98a6_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1a77e98a6_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1a77e98a6_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1a77e98a6_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1a77e98a6_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1a77e98a6_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1a77e98a6_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1a77e98a6_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1a77e98a6_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1a77e98a6_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1a77e98a6_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1a77e98a6_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1a77e98a6_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1a77e98a6_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1a77e98a6_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1a77e98a6_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1a77e98a6_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1a77e98a6_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1a77e98a6_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1a77e98a6_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1a77e98a6_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1a77e98a6_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1a77e98a6_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1a77e98a6_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1a77e98a6_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1a77e98a6_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1a77e98a6_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1a77e9d29_RangeTable> _1a7786557__LU = jule::new_ptr<_1a77e9d29_RangeTable>(_1a77e9d29_RangeTable{._field_R16=jule::Slice<_1a77e9433_Range16>::make({_1a77e9433_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1a77e9433_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1a77e9433_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1a77e9433_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1a77e9433_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1a77e9433_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1a77e9433_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1a77e9433_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1a77e9433_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1a77e9433_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1a77e9433_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1a77e9433_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1a77e9433_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1a77e9433_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1a77e9433_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1a77e9433_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1a77e9433_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1a77e98a6_Range32>::make({_1a77e98a6_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1a77e98a6_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1a77e98a6_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1a77e98a6_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1a77e98a6_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1a77e98a6_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1a77e98a6_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::Str,4> _1a791ada1_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _1a7986834_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _1a7986a54_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _1a79cdccc_PathStdlib = jule::Str();
jule::Str _1a79ce65c_PathExec = jule::Str();
jule::Str _1a79d087d_PathWd = jule::Str();
jule::Str _1a79de1e9_PathApi = jule::Str();
jule::Array<jule::I32,5> _1a96779da_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _1a9677c0a_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _1a967803a_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _1a971ccc2_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _1a971d0be_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_1a972abae_kindPair,47> _1a972b0dd_keywords = jule::Array<_1a972abae_kindPair,47>({_1a972abae_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1a972abae_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a972abae_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a972abae_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a972abae_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1a972abae_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a972abae_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a972abae_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a972abae_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a972abae_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a972abae_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1a972abae_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a972abae_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_1a972abae_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1a972abae_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a972abae_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a972abae_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_1a972abae_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1a972abae_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_1a972abae_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_1a972abae_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_1a972abae_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_1a972abae_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_1a972abae_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_1a972abae_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_1a972abae_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_1a972abae_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_1a972abae_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_1a972abae_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_1a972abae_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(21LLU)},_1a972abae_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(23LLU)},_1a972abae_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(24LLU)},_1a972abae_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(25LLU)},_1a972abae_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(26LLU)},_1a972abae_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(27LLU)},_1a972abae_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(28LLU)},_1a972abae_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(29LLU)},_1a972abae_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1a972abae_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(31LLU)},_1a972abae_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(32LLU)},_1a972abae_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(33LLU)},_1a972abae_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1a972abae_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(35LLU)},_1a972abae_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1a972abae_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(37LLU)},_1a972abae_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(39LLU)},_1a972abae_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_1a972abae_kindPair,39> _1a972b42e_basicOps = jule::Array<_1a972abae_kindPair,39>({_1a972abae_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1a972abae_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_1a972abae_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1a972abae_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1a972abae_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_1a972abae_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a972abae_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(38LLU)}});
jule::Array<jule::U8,32> _1aba3e971__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1aba40037__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1ab93ae00_floatInfo _1ab5265bd_f32info = _1ab93ae00_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1ab93ae00_floatInfo _1ab526a30_f64info = _1ab93ae00_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1ab83c7d5_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1ab9a9853_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1ab9ae748_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1aba7b46e_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1aba7c7a0_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1aba7de22_leftCheat> _1aba7e230_leftCheats = jule::Slice<_1aba7de22_leftCheat>::make({_1aba7de22_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1aba7de22_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1aba7de22_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1aba7de22_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1aba7de22_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1aba7de22_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1aba7de22_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1aba7de22_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1aba7de22_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1aba7de22_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1aba7de22_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1aba7de22_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1aba7de22_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1aba7de22_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1aba7de22_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1aba7de22_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1aba7de22_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1aba7de22_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1aba7de22_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1aba7de22_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1aba7de22_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1aba7de22_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1aba7de22_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1aba7de22_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1aba7de22_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1aba7de22_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1aba7de22_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1aba7de22_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1aba7de22_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1aba7de22_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1aba7de22_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1aba7de22_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1aba7de22_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1aba7de22_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1aba7de22_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1aba7de22_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1aba7de22_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1aba7de22_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1aba7de22_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1aba7de22_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1aba7de22_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1aba7de22_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1aba7de22_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1aba7de22_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1aba7de22_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1aba7de22_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1aba7de22_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1aba7de22_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1aba7de22_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1aba7de22_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1aba7de22_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1aba7de22_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1aba7de22_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1aba7de22_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1aba7de22_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1aba7de22_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1aba7de22_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1aba7de22_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1aba7de22_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1aba7de22_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1aba7de22_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1ab4a8011_BitSize = 0LL;
jule::Str _1aa0b16ed_SysInt = jule::Str();
jule::Str _1ab4a7d68_SysUint = jule::Str();
jule::Slice<jule::Str> _1abab6586_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _1a976ca14_Copy = false;
jule::Bool _1a9790bad_Deadcode = false;
jule::Bool _1a97c6100_Append = false;
jule::Bool _1a9873a4e_Math = false;
jule::Bool _1a98a5454_Access = false;
jule::Bool _1a98cd9aa_Inline = false;
jule::Bool _1a98ce33a_Ptr = false;
jule::Bool _1a98ce5d2_Cond = false;
jule::Bool _1abb87e1b_exprEnabled = false;
jule::Bool _1abb89428_scopeEnabled = false;
jule::Array<jule::U64,12> _1ace0cd71_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1acd5404d_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_1a77e9d29_RangeTable> _1a7793c5c_Upper = _1a7786557__LU;
jule::Array<jule::U8,256> _1a77e3790__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _1a78cc769_first = jule::Array<jule::U8,256>({});
jule::Array<_1a78cccec_acceptRange,16> _1a78cd10a_acceptRanges = jule::Array<_1a78cccec_acceptRange,16>({_1a78cccec_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1a78cccec_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1a78cccec_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1a78cccec_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1a78cccec_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _1a797745c_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _1a79ce162_Os = jule::Str("darwin", 6);
jule::Str _1a79a67dd_Arch = jule::Str("amd64", 5);
jule::Ptr<_1a77e9d29_RangeTable> _1a778c706_Letter = _1a7785567__L;





std::ostream &operator<<(std::ostream &_Stream, _1a77e9433_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a77e98a6_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a77e9d29_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a78cccec_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1a7916088_index(_1a7915b15_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];;
	};
	return (*_self_)._field_path[_5424_i];;
}



inline void _1a791630d_append(_1a7915b15_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len(), (*_self_)._field_path.len(), 0);
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _1a7916572_string(_1a7915b15_lazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_volAndPath.slice(0LL,((*_self_)._field_volLen + (*_self_)._field_w));;
	};
	return ((*_self_)._field_volAndPath.slice(0LL,(*_self_)._field_volLen) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7915b15_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d95ba601_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1d95ba601_DirEntry>>> static__1a791a17a_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_1d95ba601_DirEntry>> __jule_func_result;
	DIR* _1617_dir = _1d96786c0_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1d95ba601_DirEntry>>>(jule::Any(_1d7caad8c_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _1d9678967_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1ad7d02c0;
			};
			jule::Str _2517_name = _1d9659706_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_1d96aa317_Status> _2621_stat = ({
				auto except = static__1d7ca5c11_Of(_1a7917276_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_1d95ba601_DirEntry>>>(jule::Any(except.error, &__jule_any_type1));
				} jule::Ptr<_1d96aa317_Status>(nullptr);});
			});;
			__jule_func_result = jule::alloc_for_append(__jule_func_result,1);__jule_func_result.__push(jule::new_ptr<_1d95ba601_DirEntry>(_1d95ba601_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat}));;
		}
	_iter_next_1ad7d02c0:;
	}
	_iter_end_1ad7d02c0:;;
	_1d9678c0e_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1d95ba601_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__1a791a389_Create(jule::Str _3922_path) {
	if ((_1d967958e_Mkdir((&(_3922_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_1d7caad8c_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1a791a598_Remove(jule::Str _5122_path) {
	if ((_1d9679836_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_1d7caad8c_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1d9600aba_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1d7cc668d_File>> static__1d7cc75d4_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _1913_handle = _1d9677da6_Open((&(_1820_path[0LL])),static_cast<jule::I64>(_1831_flag),_1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1d7cc668d_File>>(jule::Any(_1d7caad8c_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_1d7cc668d_File>>(jule::Any(), static__1d7cc687a_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));;
}



inline jule::VoidExceptional static__1d7cc8937_Remove(jule::Str _3022_path) {
	if ((_1d9679acd_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_1d7caad8c_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1d7c8eed6_Write(_1d7cc668d_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_1d969ac86_Write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4424_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_1d7caad8c_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _1d7ca4e0d_Read(_1d7cc668d_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_1d969a527_Read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6427_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_1d7caad8c_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_1d7cc668d_File> static__1d7cc687a_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_1d7cc668d_File>(_1d7cc668d_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_1d7cc668d_File>> static__1d7ca6393_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_1d7cc668d_File>>(jule::Any(), ({
		auto except = static__1d7cc75d4_Open(_5522_path,static_cast<jule::I64>(1538LL),438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_1d7cc668d_File>>(jule::Any(except.error, &__jule_any_type1));
		} jule::Ptr<_1d7cc668d_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1d95bb404_Read(jule::Str _6720_path) {
	jule::Ptr<_1d96aa317_Status> _6813_s = ({
		auto except = static__1d7ca5c11_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(except.error, &__jule_any_type1));
		} jule::Ptr<_1d96aa317_Status>(nullptr);});
	});;
	if ((!(_1d9601725_IsReg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_6813_s.get()._field_Size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_1d7cc668d_File> _7817_f = ({
		auto except = static__1d7cc75d4_Open(_6720_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(except.error, &__jule_any_type1));
		} jule::Ptr<_1d7cc668d_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _1d7cc742a_Close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_Size), static_cast<jule::I64>(_6813_s.get()._field_Size), 0);;
	jule::I64 _8213_n = ({
		auto except = _1d7ca4e0d_Read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(except.error, &__jule_any_type1));
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8117_buff.slice(0LL,_8213_n));;
}



inline jule::VoidExceptional static__1d95bb9ba_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_1d7cc668d_File> _9217_f = ({
		auto except = static__1d7cc75d4_Open(_9121_path,static_cast<jule::I64>(1537LL),_9146_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(jule::Any(except.error, &__jule_any_type1));
		} jule::Ptr<_1d7cc668d_File>(nullptr);});
	});;
	({
		auto except = _1d7c8eed6_Write(_9217_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(jule::Any(except.error, &__jule_any_type1));
		}
	});
	({
		auto except = _1d7cc742a_Close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(jule::Any(except.error, &__jule_any_type1));
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1d7ca54c4_Seek(_1d7cc668d_File* _self_, jule::I64 _10523_offset, jule::I64 _10536_origin) {
	jule::I64 _10613_pos = _1d969a13c_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10523_offset,static_cast<jule::I64>(_10536_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_1d7caad8c_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _10613_pos);;
}



inline jule::VoidExceptional _1d7cc742a_Close(_1d7cc668d_File* _self_) {
	if ((_1d969a89b_Close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_1d7caad8c_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1d7cc668d_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1d96aa317_Status>> static__1d7ca5c11_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_1d96aa317_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _1d96779bb_Stat((&(_1118_path[0LL])),(&(_1517_handle)));;
	if ((_1613_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_1d96aa317_Status>>(jule::Any(), jule::new_ptr<_1d96aa317_Status>(_1d96aa317_Status{._field_Mode=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_mode)), ._field_Size=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_size))}));;
	};
	return jule::Exceptional<jule::Ptr<_1d96aa317_Status>>(jule::Any(_1d7caad8c_getLastFsError(), &__jule_any_type0));
}



inline jule::Bool _1d95bace9_IsDir(_1d96aa317_Status* _self_) {
	return (((*_self_)._field_Mode & 16384LLU) == 16384LLU);;
}



inline jule::Bool _1d9601725_IsReg(_1d96aa317_Status* _self_) {
	return (((*_self_)._field_Mode & 32768LLU) == 32768LLU);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d96aa317_Status _Src) {
	_Stream << "Status{";
	_Stream << "Mode:" << _Src._field_Mode << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a79e0915_Cmd> static__1a79e0d44_New(jule::Str _2019_path) {
	return jule::new_ptr<_1a79e0915_Cmd>(_1a79e0915_Cmd{._field_path=_2019_path, });;
}



inline jule::Exceptional<jule::I64> _1a79e10a8_Spawn(_1a79e0915_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _1a79e3e79_spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(jule::Any(except.error, &__jule_any_type1));
		} 0;});
	})));;
}



inline jule::Exceptional<jule::I64> _1a79e3e79_spawn(_1a79e0915_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type2));
	};
	jule::I64 _4913_pid = fork();;
	{
		auto &_match_expr{ _4913_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1ad803799:;
			{
				return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(12LL), &__jule_any_type2));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1ad8042e4:;
			{
				jule::I64 _5421_status = 0LL;;
				if (((*_self_)._field_Env == nullptr)) {
					_5421_status=static_cast<jule::I64>(_1a79e37a3_execvp((*_self_)._field_path,(*_self_)._field_Args));
				} else {
					_5421_status=static_cast<jule::I64>(_1a79e3b8d_execve((*_self_)._field_path,(*_self_)._field_Args,(*_self_)._field_Env));
				};
				if ((_5421_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				};
				_1a79e47a4_Exit(255LL);
			}
		}
		_match_end_1ad80424a:;
	};
	jule::I64 _6513_status = 0LL;;
	if ((waitpid(_4913_pid,((signed*)((&(_6513_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_1a79e0184_getLastProcessError(), &__jule_any_type2));
	};
	if (WIFSIGNALED(_6513_status)) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(12LL), &__jule_any_type2));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(WEXITSTATUS(_6513_status)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a79e0915_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7995777_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1a9723b74_Prec(_1a97237bc_Token* _self_) {
	if (((*_self_)._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1ac61e011:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1ac61e077:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1ac61dcbe:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1ac61dd35:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1ac61dd9b:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1ac61d719:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ac61d6b4:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a97237bc_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a9729064_IsOk(_1a9728b57_File* _self_) {
	({
		auto except = static__1d7ca5c11_Of((*_self_)._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} jule::Ptr<_1d96aa317_Status>(nullptr);});
	});
	return true;;
}



inline void _1a97292d9_Fill(_1a9728b57_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*_self_)._field_Data=_2327_data;
}



inline jule::Str _1a972954d_Dir(_1a9728b57_File* _self_) {
	return _1a7917dd1_Dir((*_self_)._field_Path);;
}



inline jule::Str _1a97297b2_Name(_1a9728b57_File* _self_) {
	return _1a7917a5c_Base((*_self_)._field_Path);;
}



inline jule::Uintptr _1a9729a26_Addr(_1a9728b57_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));;
}



inline jule::Str _1a9729d34_GetRow(_1a9728b57_File* _self_, jule::I64 _4421_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_Data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_Data[_4717_i] != '\n')) {
				goto _iter_next_1ac623ab5;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*_self_)._field_Data.slice(_4617_lineStart,_4717_i));;
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1ac623ab5:;
	}
	_iter_end_1ac623ab5:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9728b57_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a972abae_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1a9731cb4_pushErr(_1a9731720_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a972b929_makeErr((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45826_fmt,_45839_args));;
}



inline void _1a97320d3_pushErrTok(_1a9731720_lex* _self_, jule::Ptr<_1a97237bc_Token>& _46330_token, jule::Str _46345_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a972b929_makeErr(_46330_token.get()._field_Row,_46330_token.get()._field_Column,(*_self_)._field_file,_46345_fmt,jule::Slice<jule::Any>()));;
}



inline void _1a97322ae_lex(_1a9731720_lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_1a97342b1_newLine(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_1a97237bc_Token> _47321_token = _1a9735636_token(&(*_self_));;
			if ((_47321_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1ac657533:;
	}
	_iter_end_1ac657533:;;
}



inline jule::Str _1a97325bc_id(_1a9731720_lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _48614_r = 0;;
	jule::I64 _48621_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a78cd88b_DecodeRune(_48222_ln);
		_48614_r = __jule_assign_result.__jule_result_arg0;
		_48621_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_48614_r != '_') && (!(_1a9726c98_IsLetter(_48614_r))))) {
		return jule::Str();;
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr = 0;;
			jule::I64 _49222_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a78cd88b_DecodeRune(_48222_ln.slice(_48621_i));
				_49218_pr = __jule_assign_result.__jule_result_arg0;
				_49222_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_49218_pr != '_') && (!(_1a97272d7_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_1a9726c98_IsLetter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));;
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1ac65a723:;
	}
	_iter_end_1ac65a723:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);;
}



inline jule::Slice<jule::U8> _1a9732831_resume(_1a9731720_lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_Data[_50717_i]);;
			if (_1a9726847_IsSpace(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1ac6601ea:;
						{
							_1a97342b1_newLine(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1ac65eeca:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1ac65a68a:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1ac65eace:;
				};
				goto _iter_next_1ac65d380;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_1ac65de85;
					};
				}
			_iter_next_1ac65de85:;
			}
			_iter_end_1ac65de85:;;
			return (*_self_)._field_file.get()._field_Data.slice(_50717_i,_52421_j);;
		}
	_iter_next_1ac65d380:;
	}
	_iter_end_1ac65d380:;;
	return nullptr;;
}



inline void _1a9732aa6_lexLineComment(_1a9731720_lex* _self_, jule::Ptr<_1a97237bc_Token>& _53538_token) {
	jule::I64 _53613_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53917_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_1ac6629d3;
			};
		}
	_iter_next_1ac6629d3:;
	}
	_iter_end_1ac6629d3:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53538_token.get()._field_Id=static_cast<jule::U64>(18LLU);
		_53538_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_53613_start,(*_self_)._field_pos));
	};
}



inline void _1a9732d2b_lexRangeComment(_1a9731720_lex* _self_, jule::Ptr<_1a97237bc_Token>& _55039_token) {
	jule::I64 _55113_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55417_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_1ac665d27;
			};
			if ((_55417_r == '\n')) {
				_1a97342b1_newLine(&(*_self_));
				goto _iter_next_1ac665d27;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*_self_)._field_file.get()._field_Data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55039_token.get()._field_Id=static_cast<jule::U64>(18LLU);
					_55039_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_55113_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1ac665d27:;
	}
	_iter_end_1ac665d27:;;
	_1a9731cb4_pushErr(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1a9733139_num(_1a9731720_lex* _self_, jule::Slice<jule::U8>& _57823_txt) {
	jule::Str __jule_func_result;
	if ((_57823_txt[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1a9730246_hexNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1a972ee9e_octalNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1a972d8e8_binaryNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1a972d651_commonNum(_57823_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1a9733447_escapeSeq(_1a9731720_lex* _self_, jule::Slice<jule::U8>& _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if ((_60029_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60029_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1ac670cee:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60029_txt.slice(0LL,2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ac670c33:;
			{
				_60117_seq=_1a973082e_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1ac670969:;
			{
				_60117_seq=_1a9730ae8_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ac6709d0:;
			{
				_60117_seq=_1a9730ca2_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_1ac67020a:;
			{
				_60117_seq=_1a9731038_byteEscape(_60029_txt);
			}
		}
		_match_end_1ac670848:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*_self_)._field_pos)++;
		_1a9731cb4_pushErr(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*_self_)._field_pos+=_60117_seq.len();
	return _60117_seq;;
}



inline jule::Str _1a97337ee_getRune(_1a9731720_lex* _self_, jule::Slice<jule::U8>& _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && (_63027_txt[0LL] == '\\'))) {
		return _1a9733447_escapeSeq(&(*_self_), _63027_txt);;
	};
	jule::I32 _63414_r = 0;;
	jule::I64 _63417_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a78cd88b_DecodeRune(_63027_txt);
		_63414_r = __jule_assign_result.__jule_result_arg0;
		_63417_n = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_)._field_pos+=_63417_n;
	return static_cast<jule::Str>(_63414_r);;
}



inline jule::Str _1a9733b0c_lexRune(_1a9731720_lex* _self_, jule::Slice<jule::U8>& _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64217_n = 0LL;;
	jule::I64 _64317_i = 1LL;;
	for (; (_64317_i < _63927_txt.len()); (_64317_i)++) {
		{
			if ((_63927_txt[_64317_i] == '\r')) {
				goto _iter_next_1ac676d16;
			};
			if ((_63927_txt[_64317_i] == '\n')) {
				_1a9731cb4_pushErr(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_1a97342b1_newLine(&(*_self_));
				return jule::Str();;
			};
			jule::Slice<jule::U8> _65517_part = _63927_txt.slice(_64317_i);;
			jule::Str _65617_r = _1a97337ee_getRune(&(*_self_), _65517_part,false);;
			_64017_run+=_65617_r;
			(*_self_)._field_column+=_1a78d0580_RuneCountStr(_65617_r);
			if ((_65617_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1ac676d16;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_1ac676d16:;
	}
	_iter_end_1ac676d16:;;
	if ((_64217_n == 0LL)) {
		_1a9731cb4_pushErr(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_1a9731cb4_pushErr(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64017_run;;
}



inline jule::Str _1a9733d71_lexStr(_1a9731720_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	_67917_s+=static_cast<jule::Str>(_68013_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_1ac67d911;
			};
			if ((_68717_ch == '\n')) {
				_1a97342b1_newLine(&(*_self_));
				if ((!(_68213_raw))) {
					_1a9731cb4_pushErr(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _69921_part = (*_self_)._field_file.get()._field_Data.slice((*_self_)._field_pos);;
			jule::Str _70017_r = _1a97337ee_getRune(&(*_self_), _69921_part,_68213_raw);;
			_67917_s+=_70017_r;
			(*_self_)._field_column+=_1a78d0580_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_1ac67d911;
			};
		}
	_iter_next_1ac67d911:;
	}
	_iter_end_1ac67d911:;;
	return _67917_s;;
}



inline jule::Bool _1a97340d5_isFirstTokenOfLine(_1a9731720_lex* _self_) {
	return ((*_self_)._field_column == 1LL);;
}



inline void _1a97342b1_newLine(_1a9731720_lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _1a97347ab_isOp(_1a9731720_lex* _self_, jule::Slice<jule::U8>& _72024_txt, jule::Str _72037_kind, jule::U64 _72048_id, jule::Ptr<_1a97237bc_Token>& _72066_t) {
	if ((!(_1a972bcae_bytesHasPrefix(_72024_txt,_72037_kind)))) {
		return false;;
	};
	_72066_t.get()._field_Kind=_72037_kind;
	_72066_t.get()._field_Id=_72048_id;
	(*_self_)._field_pos+=_72037_kind.len();
	return true;;
}



inline jule::Bool _1a9734b63_lexBasicOps(_1a9731720_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_1a97237bc_Token>& _73048_tok) {
	{
		auto &expr = _1a972b42e_basicOps;
		auto it = expr.begin();
		_iter_begin_1ac684ae3:;
		if (it != expr.end()) {
			_1a972abae_kindPair &_73116_pair = *it;
			{
				if (_1a97347ab_isOp(&(*_self_), _73030_txt,_73116_pair._field_kind,_73116_pair._field_id,_73048_tok)) {
					return true;;
				};
			}
			_iter_next_1ac684ae3:;
			++it;
			goto _iter_begin_1ac684ae3;
		}
		_iter_end_1ac684ae3:;
	};
	return false;;
}



inline jule::Bool _1a973501a_lexId(_1a9731720_lex* _self_, jule::Slice<jule::U8>& _74025_txt, jule::Ptr<_1a97237bc_Token>& _74043_t) {
	jule::Str _74113_lex = _1a97325bc_id(&(*_self_), _74025_txt);;
	if (_74113_lex.empty()) {
		return false;;
	};
	_74043_t.get()._field_Kind=_74113_lex;
	_74043_t.get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;;
}



inline jule::Bool _1a97353c2_lexNum(_1a9731720_lex* _self_, jule::Slice<jule::U8>& _75026_txt, jule::Ptr<_1a97237bc_Token>& _75044_t) {
	jule::Str _75113_lex = _1a9733139_num(&(*_self_), _75026_txt);;
	if (_75113_lex.empty()) {
		return false;;
	};
	_75044_t.get()._field_Kind=_75113_lex;
	_75044_t.get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;;
}



inline jule::Ptr<_1a97237bc_Token> _1a9735636_token(_1a9731720_lex* _self_) {
	jule::Ptr<_1a97237bc_Token> _76217_t = jule::new_ptr<_1a97237bc_Token>(_1a97237bc_Token{._field_File=(*_self_)._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _1a9732831_resume(&(*_self_));;
	if ((_76713_txt == nullptr)) {
		return _76217_t;;
	};
	_76217_t.get()._field_Column=(*_self_)._field_column;
	_76217_t.get()._field_Row=(*_self_)._field_row;
	{
		
		if (_1a97353c2_lexNum(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1ac68aa0b:;
			{
				goto _match_end_1ac68a0b0;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_1ac68ac2b:;
			{
				_76217_t.get()._field_Kind=_1a9733b0c_lexRune(&(*_self_), _76713_txt);
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_1ac68b3e1:;
			{
				_76217_t.get()._field_Kind=_1a9733d71_lexStr(&(*_self_));
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (_1a972bcae_bytesHasPrefix(_76713_txt,jule::Str("//", 2))) {
			_case_begin_1ac68b743:;
			{
				_1a9732aa6_lexLineComment(&(*_self_), _76217_t);
				return _76217_t;;
			}
		}
		else if (_1a972bcae_bytesHasPrefix(_76713_txt,jule::Str("/*", 2))) {
			_case_begin_1ac68b7a9:;
			{
				_1a9732d2b_lexRangeComment(&(*_self_), _76217_t);
				return _76217_t;;
			}
		}
		else if (_1a97347ab_isOp(&(*_self_), _76713_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1a97347ab_isOp(&(*_self_), _76713_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1a97347ab_isOp(&(*_self_), _76713_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1a97347ab_isOp(&(*_self_), _76713_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1a97347ab_isOp(&(*_self_), _76713_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1a97347ab_isOp(&(*_self_), _76713_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1a9734b63_lexBasicOps(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1ac68b820:;
			{
				goto _match_end_1ac68a0b0;
			}
		}
		else if (_1a973501a_lexId(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1ac68a19d:;
			{
				{
					auto &expr = _1a972b0dd_keywords;
					auto it = expr.begin();
					_iter_begin_1ac691eb8:;
					if (it != expr.end()) {
						_1a972abae_kindPair &_80520_pair = *it;
						{
							if ((_80520_pair._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=_80520_pair._field_id;
								goto _iter_end_1ac691eb8;
							};
						}
						_iter_next_1ac691eb8:;
						++it;
						goto _iter_begin_1ac691eb8;
					}
					_iter_end_1ac691eb8:;
				};
			}
		}
		else {
			_case_begin_1ac68a137:;
			{
				jule::I32 _81218_r = 0;;
				jule::I64 _81221_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a78cd88b_DecodeRune(_76713_txt);
					_81218_r = __jule_assign_result.__jule_result_arg0;
					_81221_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1a9731cb4_pushErr(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81218_r, &__jule_any_type3)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81221_sz;
				return _76217_t;;
			}
		}
		_match_end_1ac68a0b0:;
	};
	(*_self_)._field_column+=_1a78d0580_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9731720_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab039532_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab03a324_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab03a720_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab06d9b7_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab06e3e1_IsPrim(_1ab06e07d_IdentTypeDecl* _self_) {
	return ((*_self_)._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab06e07d_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab06e6cc_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab06ea84_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab06ed70_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab07026b_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab070557_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab070b95_IsUnsafe(_1ab070843_PtrTypeDecl* _self_) {
	return ((*_self_)._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab070843_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab07139e_AutoSized(_1ab070ec5_ArrTypeDecl* _self_) {
	return ((*_self_)._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab070ec5_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab071723_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab071aca_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab072ed8_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0732c4_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab073879_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab073b65_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab07436e_IsNil(_1ab07401c_LitExpr* _self_) {
	return ((*_self_)._field_Value == jule::Str("nil", 3));;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab07401c_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab074726_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab074eeb_IsSelf(_1ab074b99_IdentExpr* _self_) {
	return ((*_self_)._field_Ident == jule::Str("self", 4));;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab074b99_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0753a3_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab07575a_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab075b12_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab075eb9_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab07643c_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0768b0_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab07732d_Unhandled(_1ab076eba_FnCallExpr* _self_) {
	return ((*_self_)._field_Exception == nullptr);;
}



inline jule::Bool _1ab077592_Ignored(_1ab076eba_FnCallExpr* _self_) {
	return (((*_self_)._field_Exception != nullptr) && (*_self_)._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab076eba_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab077c9b_IsTargeted(_1ab077949_FieldExprPair* _self_) {
	return ((*_self_)._field_Field != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab077949_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab078197_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab07896c_IsEmpty(_1ab07861a_BraceLit* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab07861a_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab078de0_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab079907_IsEmpty(_1ab0795c7_SliceExpr* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0795c7_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab079e46_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab07a551_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab07a83c_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab07acb0_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab07b167_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab07b51e_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab07b80a_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab07be15_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab07c454_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab07d345_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab07d950_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab07e489_IsSelf(_1ab07e126_ParamDecl* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));;
}



inline jule::Bool _1ab07e6ed_IsRef(_1ab07e126_ParamDecl* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab07e126_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab080798_IsAnon(_1ab080446_FnDecl* _self_) {
	return ((*_self_)._field_Ident == jule::Str("<anonymous>", 11));;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab080446_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab081425_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0817cc_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab08228e_IsInf(_1ab081e3c_Iter* _self_) {
	return ((*_self_)._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab081e3c_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab082a64_IsWhileNext(_1ab082712_WhileKind* _self_) {
	return ((*_self_)._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab082712_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0830a3_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab08345a_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab083812_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab083c85_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab08413c_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0845b0_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab084c86_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab085209_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0858d0_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab086172_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab086947_AutoExpr(_1ab0865e5_EnumItemDecl* _self_) {
	return ((*_self_)._field_Expr == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0865e5_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab0876a1_DefaultTyped(_1ab08711d_EnumDecl* _self_) {
	return ((*_self_)._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab08711d_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab087b24_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab08822e_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab08842c_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab088bd0_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0892da_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab089c58_IsTraitImpl(_1ab0898e5_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);;
}



inline jule::Bool _1ab089ebc_IsStructImpl(_1ab0898e5_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0898e5_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab93ae00_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab5c106e_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba7de22_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aba7aeb8_set(_1aba7e32e_decimal* _self_, jule::Str _23322_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1adb72156:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1adb721cd:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1adb71ee1:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1adb74345:;
					{
						goto _iter_next_1adb73b19;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1adb743bc:;
					{
						if (_25117_sawdot) {
							return __jule_func_result;;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1adb73b19;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1adb74444:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1adb73b19;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1adb73b19;
					}
				}
				_match_end_1adb74224:;
			};
			goto _iter_end_1adb73b19;
		}
	_iter_next_1adb73b19:;
	}
	_iter_end_1adb73b19:;;
	if ((!(_25217_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1ab58661c_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1adb7bb33;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1adb7bb33:;
		}
		_iter_end_1adb7bb33:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1aba7b0ea_floatBits(_1aba7e32e_decimal* _self_, _1ab93ae00_floatInfo& _32729_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1ab9a9853_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1ab9a9853_powtab[(*_self_)._field_dp];
			};
			_1aba7e64d_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1adb83552:;
	}
	_iter_end_1adb83552:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1ab9a9853_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1ab9a9853_powtab[(-((*_self_)._field_dp))];
			};
			_1aba7e64d_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1adb83cd3:;
	}
	_iter_end_1adb83cd3:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32729_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32729_flt._field_bias + 1LL) - _32817_exp);;
		_1aba7e64d_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1aba7e64d_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32729_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1aba7eb26_roundedInteger(&(*_self_)));
	if ((_32917_mant == (2LLU << _32729_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32729_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32729_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32729_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32729_flt._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32729_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32729_flt._field_bias) & static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) << _32729_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32729_flt._field_mantbits) << _32729_flt._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _41717_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1aba7e51b_assign(_1aba7e32e_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1adb91c69:;
	}
	_iter_end_1adb91c69:;;
	(*_self_)._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_33117_buf[_33417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1adb926d7:;
	}
	_iter_end_1adb926d7:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1aba7ed8a_trim((*_self_));
}



inline void _1aba7e64d_shift(_1aba7e32e_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1adb9482c:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1adb948a4:;
			{
				while ((_35528_k > 60LL)) {
					{
						_1aba80231_leftShift((*_self_),60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1adb9561e:;
				}
				_iter_end_1adb9561e:;;
				_1aba80231_leftShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1adb9492b:;
			{
				while ((_35528_k < -60LL)) {
					{
						_1aba7eebc_rightShift((*_self_),60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1adb95586:;
				}
				_iter_end_1adb95586:;;
				_1aba7eebc_rightShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_1adb9470b:;
	};
}



inline void _1aba7e780_roundDown(_1aba7e32e_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_37528_nd;
	_1aba7ed8a_trim((*_self_));
}



inline void _1aba7e8b2_roundUp(_1aba7e32e_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*_self_)._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*_self_)._field_d[_39017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1adb9928d:;
	}
	_iter_end_1adb9928d:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1aba7e9e4_round(_1aba7e32e_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1aba80363_shouldRoundUp((*_self_),_41124_nd)) {
		_1aba7e8b2_roundUp(&(*_self_), _41124_nd);
	} else {
		_1aba7e780_roundDown(&(*_self_), _41124_nd);
	};
}



inline jule::U64 _1aba7eb26_roundedInteger(_1aba7e32e_decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*_self_)._field_dp) && (_42817_i < (*_self_)._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_42817_i] - '0'))));
		}
	_iter_next_1adb90b7a:;
	}
	_iter_end_1adb90b7a:;;
	for (; (_42817_i < (*_self_)._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1adb9dbbb:;
	}
	_iter_end_1adb9dbbb:;;
	if (_1aba80363_shouldRoundUp((*_self_),(*_self_)._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba7e32e_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aba86b94_Const> static__1aba86d81_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1aba86b94_Const>(_1aba86b94_Const{._field_data=jule::Any(_1622_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1aba86b94_Const> static__1aba86eb3_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1aba86b94_Const>(_1aba86b94_Const{._field_data=jule::Any(_1922_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1aba86b94_Const> static__1aba870e5_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1aba86b94_Const>(_1aba86b94_Const{._field_data=jule::Any(_2223_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1aba86b94_Const> static__1aba87227_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1aba86b94_Const>(_1aba86b94_Const{._field_data=jule::Any(_2522_x, &__jule_any_type7)});;
}



inline jule::Ptr<_1aba86b94_Const> static__1aba87359_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1aba86b94_Const>(_1aba86b94_Const{._field_data=jule::Any(_2822_x, &__jule_any_type8)});;
}



inline jule::Ptr<_1aba86b94_Const> static__1aba8748b_NewNil(void) {
	return jule::new_ptr<_1aba86b94_Const>(_1aba86b94_Const{._field_data=nullptr});;
}



inline jule::I64 _1aba87887_ReadI64(_1aba86b94_Const* _self_) {
	if ((!(_1aba88a75_IsI64(&(*_self_))))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*_self_)._field_data.cast<jule::I64>(&__jule_any_type4));;
}



inline jule::U64 _1aba879b9_ReadU64(_1aba86b94_Const* _self_) {
	if ((!(_1aba88ba7_IsU64(&(*_self_))))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*_self_)._field_data.cast<jule::U64>(&__jule_any_type5));;
}



inline jule::Bool _1aba87aeb_ReadBool(_1aba86b94_Const* _self_) {
	if ((!(_1aba88cd9_IsBool(&(*_self_))))) {
		return false;;
	};
	return (*_self_)._field_data.cast<jule::Bool>(&__jule_any_type6);;
}



inline jule::Str _1aba87c2d_ReadStr(_1aba86b94_Const* _self_) {
	if ((!(_1aba88ed7_IsStr(&(*_self_))))) {
		return jule::Str();;
	};
	return (*_self_)._field_data.cast<jule::Str>(&__jule_any_type7);;
}



inline jule::F64 _1aba87d60_ReadF64(_1aba86b94_Const* _self_) {
	if ((!(_1aba8924b_IsF64(&(*_self_))))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*_self_)._field_data.cast<jule::F64>(&__jule_any_type8));;
}



inline jule::I64 _1aba87e92_AsI64(_1aba86b94_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bb5c8d03:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.cast<jule::I64>(&__jule_any_type4));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bb5c8d69:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.cast<jule::U64>(&__jule_any_type5)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bb5c875e:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.cast<jule::F64>(&__jule_any_type8)));;
			}
		}
		else {
			_case_begin_1bb5c7d9b:;
			{
				return 0LL;;
			}
		}
		_match_end_1bb5c86e8:;
	};
}



inline jule::U64 _1aba880c4_AsU64(_1aba86b94_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bb5ca772:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.cast<jule::U64>(&__jule_any_type5));;
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bb5ca7d8:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.cast<jule::I64>(&__jule_any_type4)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bb5ca2aa:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.cast<jule::F64>(&__jule_any_type8)));;
			}
		}
		else {
			_case_begin_1bb5c8de1:;
			{
				return 0LLU;;
			}
		}
		_match_end_1bb5ca211:;
	};
}



inline jule::F64 _1aba88206_AsF64(_1aba86b94_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bb5cc1e1:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.cast<jule::F64>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bb5cc257:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.cast<jule::I64>(&__jule_any_type4)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bb5cbc29:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.cast<jule::U64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1bb5ca860:;
			{
				return 0LL;;
			}
		}
		_match_end_1bb5cbb80:;
	};
}



inline void _1aba88338_SetI64(_1aba86b94_Const* _self_, jule::I64 _13825_x) {
	(*_self_)._field_data=jule::Any(_13825_x, &__jule_any_type4);
}



inline void _1aba8846a_SetU64(_1aba86b94_Const* _self_, jule::U64 _14125_x) {
	(*_self_)._field_data=jule::Any(_14125_x, &__jule_any_type5);
}



inline void _1aba8859c_SetBool(_1aba86b94_Const* _self_, jule::Bool _14426_x) {
	(*_self_)._field_data=jule::Any(_14426_x, &__jule_any_type6);
}



inline void _1aba886ce_SetStr(_1aba86b94_Const* _self_, jule::Str _14725_x) {
	(*_self_)._field_data=jule::Any(_14725_x, &__jule_any_type7);
}



inline void _1aba88811_SetF64(_1aba86b94_Const* _self_, jule::F64 _15025_x) {
	(*_self_)._field_data=jule::Any(_15025_x, &__jule_any_type8);
}



inline void _1aba88943_SetNil(_1aba86b94_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1aba88a75_IsI64(_1aba86b94_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bb5d0bb7:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb5d0e3c:;
			{
				return false;;
			}
		}
		_match_end_1bb5d0dd7:;
	};
}



inline jule::Bool _1aba88ba7_IsU64(_1aba86b94_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bb5d17de:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb5d115c:;
			{
				return false;;
			}
		}
		_match_end_1bb5d1008:;
	};
}



inline jule::Bool _1aba88cd9_IsBool(_1aba86b94_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bb5d1a75:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb5d225c:;
			{
				return false;;
			}
		}
		_match_end_1bb5d2207:;
	};
}



inline jule::Bool _1aba88ed7_IsStr(_1aba86b94_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bb5d2c85:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb5d2669:;
			{
				return false;;
			}
		}
		_match_end_1bb5d2515:;
	};
}



inline jule::Bool _1aba8924b_IsF64(_1aba86b94_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bb5d301b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb5d3703:;
			{
				return false;;
			}
		}
		_match_end_1bb5d369d:;
	};
}



inline jule::Bool _1aba894b0_IsNil(_1aba86b94_Const* _self_) {
	return ((*_self_)._field_data == nullptr);;
}



inline jule::Bool _1aba897bd_AreSameTypes(_1aba86b94_Const* _self_, _1aba86b94_Const _21327_x) {
	{
		
		if ((_1aba88a75_IsI64(&(*_self_)) == _1aba88a75_IsI64(&_21327_x))) {
			_case_begin_1bb5d52b5:;
			{
				return true;;
			}
		}
		else if ((_1aba88ba7_IsU64(&(*_self_)) == _1aba88ba7_IsU64(&_21327_x))) {
			_case_begin_1bb5d4abc:;
			{
				return true;;
			}
		}
		else if ((_1aba8924b_IsF64(&(*_self_)) == _1aba8924b_IsF64(&_21327_x))) {
			_case_begin_1bb5d4b44:;
			{
				return true;;
			}
		}
		else if ((_1aba88cd9_IsBool(&(*_self_)) == _1aba88cd9_IsBool(&_21327_x))) {
			_case_begin_1bb5d4bbb:;
			{
				return true;;
			}
		}
		else if ((_1aba88ed7_IsStr(&(*_self_)) == _1aba88ed7_IsStr(&_21327_x))) {
			_case_begin_1bb5d4c43:;
			{
				return true;;
			}
		}
		else if ((_1aba894b0_IsNil(&(*_self_)) == _1aba894b0_IsNil(&_21327_x))) {
			_case_begin_1bb5d4e96:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb5d4a45:;
			{
				return false;;
			}
		}
		_match_end_1bb5d4979:;
	};
}



inline jule::Bool _1aba89acb_And(_1aba86b94_Const* _self_, _1aba86b94_Const _23818_x) {
	{
		
		if ((_1aba88cd9_IsBool(&(*_self_)) && _1aba88cd9_IsBool(&_23818_x))) {
			_case_begin_1bb5d8593:;
			{
				return (_1aba87aeb_ReadBool(&(*_self_)) && _1aba87aeb_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1bb5d7d9a:;
			{
				return false;;
			}
		}
		_match_end_1bb5d796b:;
	};
}



inline jule::Bool _1aba89dd9_Or(_1aba86b94_Const* _self_, _1aba86b94_Const _24917_x) {
	{
		
		if ((_1aba88cd9_IsBool(&(*_self_)) && _1aba88cd9_IsBool(&_24917_x))) {
			_case_begin_1bb5d994b:;
			{
				return (_1aba87aeb_ReadBool(&(*_self_)) || _1aba87aeb_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1bb5d9286:;
			{
				return false;;
			}
		}
		_match_end_1bb5d88d4:;
	};
}



inline jule::Bool _1aba8a1e7_Eq(_1aba86b94_Const* _self_, _1aba86b94_Const _26017_x) {
	{
		
		if (_1aba894b0_IsNil(&(*_self_))) {
			_case_begin_1bb5dad6a:;
			{
				return _1aba894b0_IsNil(&_26017_x);;
			}
		}
		else if (_1aba88cd9_IsBool(&(*_self_))) {
			_case_begin_1bb5da6b6:;
			{
				return (_1aba88cd9_IsBool(&_26017_x) && (_1aba87aeb_ReadBool(&(*_self_)) == _1aba87aeb_ReadBool(&_26017_x)));;
			}
		}
		else if (_1aba88ed7_IsStr(&(*_self_))) {
			_case_begin_1bb5da72c:;
			{
				return (_1aba88ed7_IsStr(&_26017_x) && (_1aba87c2d_ReadStr(&(*_self_)) == _1aba87c2d_ReadStr(&_26017_x)));;
			}
		}
		else if (_1aba88a75_IsI64(&(*_self_))) {
			_case_begin_1bb5da7a4:;
			{
				return (_1aba87887_ReadI64(&(*_self_)) == _1aba87e92_AsI64(&_26017_x));;
			}
		}
		else if (_1aba88ba7_IsU64(&(*_self_))) {
			_case_begin_1bb5da82b:;
			{
				return (_1aba879b9_ReadU64(&(*_self_)) == _1aba880c4_AsU64(&_26017_x));;
			}
		}
		else if (_1aba8924b_IsF64(&(*_self_))) {
			_case_begin_1bb5daa6d:;
			{
				return (_1aba87d60_ReadF64(&(*_self_)) == _1aba88206_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1bb5da650:;
			{
				return false;;
			}
		}
		_match_end_1bb5d9c9d:;
	};
}



inline jule::Bool _1aba8a505_Lt(_1aba86b94_Const* _self_, _1aba86b94_Const _28717_x) {
	{
		
		if (_1aba88ed7_IsStr(&(*_self_))) {
			_case_begin_1bb5decb4:;
			{
				return (_1aba88ed7_IsStr(&_28717_x) && (_1aba87c2d_ReadStr(&(*_self_)) < _1aba87c2d_ReadStr(&_28717_x)));;
			}
		}
		else if (_1aba88a75_IsI64(&(*_self_))) {
			_case_begin_1bb5de676:;
			{
				return (_1aba87887_ReadI64(&(*_self_)) < _1aba87e92_AsI64(&_28717_x));;
			}
		}
		else if (_1aba88ba7_IsU64(&(*_self_))) {
			_case_begin_1bb5de6dc:;
			{
				return (_1aba879b9_ReadU64(&(*_self_)) < _1aba880c4_AsU64(&_28717_x));;
			}
		}
		else if (_1aba8924b_IsF64(&(*_self_))) {
			_case_begin_1bb5de753:;
			{
				return (_1aba87d60_ReadF64(&(*_self_)) < _1aba88206_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1bb5db178:;
			{
				return false;;
			}
		}
		_match_end_1bb5db0ac:;
	};
}



inline jule::Bool _1aba8a813_LtEq(_1aba86b94_Const* _self_, _1aba86b94_Const _31019_x) {
	{
		
		if (_1aba88ed7_IsStr(&(*_self_))) {
			_case_begin_1bb5e2ba7:;
			{
				return (_1aba88ed7_IsStr(&_31019_x) && (_1aba87c2d_ReadStr(&(*_self_)) <= _1aba87c2d_ReadStr(&_31019_x)));;
			}
		}
		else if (_1aba88a75_IsI64(&(*_self_))) {
			_case_begin_1bb5e2569:;
			{
				return (_1aba87887_ReadI64(&(*_self_)) <= _1aba87e92_AsI64(&_31019_x));;
			}
		}
		else if (_1aba88ba7_IsU64(&(*_self_))) {
			_case_begin_1bb5e25d0:;
			{
				return (_1aba879b9_ReadU64(&(*_self_)) <= _1aba880c4_AsU64(&_31019_x));;
			}
		}
		else if (_1aba8924b_IsF64(&(*_self_))) {
			_case_begin_1bb5e2646:;
			{
				return (_1aba87d60_ReadF64(&(*_self_)) <= _1aba88206_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1bb5e00c2:;
			{
				return false;;
			}
		}
		_match_end_1bb5e0006:;
	};
}



inline jule::Bool _1aba8ab21_Gt(_1aba86b94_Const* _self_, _1aba86b94_Const _33317_x) {
	{
		
		if (_1aba88ed7_IsStr(&(*_self_))) {
			_case_begin_1bb5e5a9a:;
			{
				return (_1aba88ed7_IsStr(&_33317_x) && (_1aba87c2d_ReadStr(&(*_self_)) > _1aba87c2d_ReadStr(&_33317_x)));;
			}
		}
		else if (_1aba88a75_IsI64(&(*_self_))) {
			_case_begin_1bb5e545c:;
			{
				return (_1aba87887_ReadI64(&(*_self_)) > _1aba87e92_AsI64(&_33317_x));;
			}
		}
		else if (_1aba88ba7_IsU64(&(*_self_))) {
			_case_begin_1bb5e54c3:;
			{
				return (_1aba879b9_ReadU64(&(*_self_)) > _1aba880c4_AsU64(&_33317_x));;
			}
		}
		else if (_1aba8924b_IsF64(&(*_self_))) {
			_case_begin_1bb5e5539:;
			{
				return (_1aba87d60_ReadF64(&(*_self_)) > _1aba88206_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1bb5e2eb5:;
			{
				return false;;
			}
		}
		_match_end_1bb5e2de9:;
	};
}



inline jule::Bool _1aba8ae2e_GtEq(_1aba86b94_Const* _self_, _1aba86b94_Const _35619_x) {
	{
		
		if (_1aba88ed7_IsStr(&(*_self_))) {
			_case_begin_1bb5e898d:;
			{
				return (_1aba88ed7_IsStr(&_35619_x) && (_1aba87c2d_ReadStr(&(*_self_)) >= _1aba87c2d_ReadStr(&_35619_x)));;
			}
		}
		else if (_1aba88a75_IsI64(&(*_self_))) {
			_case_begin_1bb5e8350:;
			{
				return (_1aba87887_ReadI64(&(*_self_)) >= _1aba87e92_AsI64(&_35619_x));;
			}
		}
		else if (_1aba88ba7_IsU64(&(*_self_))) {
			_case_begin_1bb5e83b6:;
			{
				return (_1aba879b9_ReadU64(&(*_self_)) >= _1aba880c4_AsU64(&_35619_x));;
			}
		}
		else if (_1aba8924b_IsF64(&(*_self_))) {
			_case_begin_1bb5e842c:;
			{
				return (_1aba87d60_ReadF64(&(*_self_)) >= _1aba88206_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1bb5e5da8:;
			{
				return false;;
			}
		}
		_match_end_1bb5e5cdc:;
	};
}



inline jule::Bool _1aba8b23c_Add(_1aba86b94_Const* _self_, _1aba86b94_Const _37722_x) {
	{
		
		if (_1aba88ed7_IsStr(&(*_self_))) {
			_case_begin_1bb5eb881:;
			{
				if ((!(_1aba88ed7_IsStr(&_37722_x)))) {
					return false;;
				};
				_1aba886ce_SetStr(&(*_self_), (_1aba87c2d_ReadStr(&(*_self_)) + _1aba87c2d_ReadStr(&_37722_x)));
			}
		}
		else if (_1aba8924b_IsF64(&(*_self_))) {
			_case_begin_1bb5eb243:;
			{
				_1aba88811_SetF64(&(*_self_), static_cast<jule::F64>((_1aba87d60_ReadF64(&(*_self_)) + _1aba88206_AsF64(&_37722_x))));
			}
		}
		else if (_1aba88a75_IsI64(&(*_self_))) {
			_case_begin_1bb5eb2a9:;
			{
				if (_1aba8924b_IsF64(&_37722_x)) {
					_1aba88811_SetF64(&(*_self_), static_cast<jule::F64>((_1aba88206_AsF64(&(*_self_)) + _1aba87d60_ReadF64(&_37722_x))));
				} else {
					_1aba88338_SetI64(&(*_self_), static_cast<jule::I64>((_1aba87887_ReadI64(&(*_self_)) + _1aba87e92_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1aba88ba7_IsU64(&(*_self_))) {
			_case_begin_1bb5eb320:;
			{
				if (_1aba8924b_IsF64(&_37722_x)) {
					_1aba88811_SetF64(&(*_self_), static_cast<jule::F64>((_1aba88206_AsF64(&(*_self_)) + _1aba87d60_ReadF64(&_37722_x))));
				} else {
					_1aba8846a_SetU64(&(*_self_), static_cast<jule::U64>((_1aba879b9_ReadU64(&(*_self_)) + _1aba880c4_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1bb5e8c9b:;
			{
				return false;;
			}
		}
		_match_end_1bb5e8bd0:;
	};
	return true;;
}



inline jule::Bool _1aba8b54a_Sub(_1aba86b94_Const* _self_, _1aba86b94_Const _40622_x) {
	{
		
		if (_1aba8924b_IsF64(&(*_self_))) {
			_case_begin_1bb601e80:;
			{
				_1aba88811_SetF64(&(*_self_), static_cast<jule::F64>((_1aba87d60_ReadF64(&(*_self_)) - _1aba88206_AsF64(&_40622_x))));
			}
		}
		else if (_1aba88a75_IsI64(&(*_self_))) {
			_case_begin_1bb6017a9:;
			{
				if (_1aba8924b_IsF64(&_40622_x)) {
					_1aba88811_SetF64(&(*_self_), static_cast<jule::F64>((_1aba88206_AsF64(&(*_self_)) - _1aba87d60_ReadF64(&_40622_x))));
				} else {
					_1aba88338_SetI64(&(*_self_), static_cast<jule::I64>((_1aba87887_ReadI64(&(*_self_)) - _1aba87e92_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1aba88ba7_IsU64(&(*_self_))) {
			_case_begin_1bb601820:;
			{
				if (_1aba8924b_IsF64(&_40622_x)) {
					_1aba88811_SetF64(&(*_self_), static_cast<jule::F64>((_1aba88206_AsF64(&(*_self_)) - _1aba87d60_ReadF64(&_40622_x))));
				} else {
					_1aba8846a_SetU64(&(*_self_), static_cast<jule::U64>((_1aba879b9_ReadU64(&(*_self_)) - _1aba880c4_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1bb601743:;
			{
				return false;;
			}
		}
		_match_end_1bb600e3a:;
	};
	return true;;
}



inline jule::Bool _1aba8b858_Mul(_1aba86b94_Const* _self_, _1aba86b94_Const _43022_x) {
	{
		
		if (_1aba8924b_IsF64(&(*_self_))) {
			_case_begin_1bb60657d:;
			{
				_1aba88811_SetF64(&(*_self_), static_cast<jule::F64>((_1aba87d60_ReadF64(&(*_self_)) * _1aba88206_AsF64(&_43022_x))));
			}
		}
		else if (_1aba88a75_IsI64(&(*_self_))) {
			_case_begin_1bb605da7:;
			{
				if (_1aba8924b_IsF64(&_43022_x)) {
					_1aba88811_SetF64(&(*_self_), static_cast<jule::F64>((_1aba88206_AsF64(&(*_self_)) * _1aba87d60_ReadF64(&_43022_x))));
				} else {
					_1aba88338_SetI64(&(*_self_), static_cast<jule::I64>((_1aba87887_ReadI64(&(*_self_)) * _1aba87e92_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1aba88ba7_IsU64(&(*_self_))) {
			_case_begin_1bb605e1d:;
			{
				if (_1aba8924b_IsF64(&_43022_x)) {
					_1aba88811_SetF64(&(*_self_), static_cast<jule::F64>((_1aba88206_AsF64(&(*_self_)) * _1aba87d60_ReadF64(&_43022_x))));
				} else {
					_1aba8846a_SetU64(&(*_self_), static_cast<jule::U64>((_1aba879b9_ReadU64(&(*_self_)) * _1aba880c4_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1bb605d41:;
			{
				return false;;
			}
		}
		_match_end_1bb6053e5:;
	};
	return true;;
}



inline jule::Bool _1aba8bb66_Div(_1aba86b94_Const* _self_, _1aba86b94_Const _45822_x) {
	{
		
		if (_1aba8924b_IsF64(&(*_self_))) {
			_case_begin_1bb60ab7b:;
			{
				jule::F64 _46117_l = _1aba88206_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_1aba88811_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1aba87d60_ReadF64(&(*_self_)),_46117_l)));
			}
		}
		else if (_1aba88a75_IsI64(&(*_self_))) {
			_case_begin_1bb60a4a5:;
			{
				jule::F64 _46717_l = _1aba88206_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_1aba88811_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1aba88206_AsF64(&(*_self_)),_46717_l)));
			}
		}
		else if (_1aba88ba7_IsU64(&(*_self_))) {
			_case_begin_1bb60a51b:;
			{
				jule::F64 _47317_l = _1aba88206_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_1aba88811_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1aba88206_AsF64(&(*_self_)),_47317_l)));
			}
		}
		else {
			_case_begin_1bb60a43e:;
			{
				return false;;
			}
		}
		_match_end_1bb6099e3:;
	};
	return true;;
}



inline jule::Bool _1aba8be74_Mod(_1aba86b94_Const* _self_, _1aba86b94_Const _48722_x) {
	{
		
		if (_1aba88a75_IsI64(&(*_self_))) {
			_case_begin_1bb6101d0:;
			{
				jule::I64 _49017_l = _1aba87e92_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_1aba88338_SetI64(&(*_self_), static_cast<jule::I64>(jule::mod(_1aba87887_ReadI64(&(*_self_)),_49017_l)));
			}
		}
		else if (_1aba88ba7_IsU64(&(*_self_))) {
			_case_begin_1bb60ea1a:;
			{
				jule::U64 _49617_l = _1aba880c4_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_1aba8846a_SetU64(&(*_self_), static_cast<jule::U64>(jule::mod(_1aba879b9_ReadU64(&(*_self_)),_49617_l)));
			}
		}
		else {
			_case_begin_1bb60e9a4:;
			{
				return false;;
			}
		}
		_match_end_1bb60e90a:;
	};
	return true;;
}



inline jule::Bool _1aba8c282_BitwiseAnd(_1aba86b94_Const* _self_, _1aba86b94_Const _50929_x) {
	{
		
		if (_1aba88a75_IsI64(&(*_self_))) {
			_case_begin_1bb61338c:;
			{
				_1aba88338_SetI64(&(*_self_), static_cast<jule::I64>((_1aba87887_ReadI64(&(*_self_)) & _1aba87e92_AsI64(&_50929_x))));
			}
		}
		else if (_1aba88ba7_IsU64(&(*_self_))) {
			_case_begin_1bb612bc7:;
			{
				_1aba8846a_SetU64(&(*_self_), static_cast<jule::U64>((_1aba879b9_ReadU64(&(*_self_)) & _1aba880c4_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1bb612b61:;
			{
				return false;;
			}
		}
		_match_end_1bb612ab7:;
	};
	return true;;
}



inline jule::Bool _1aba8c590_BitwiseOr(_1aba86b94_Const* _self_, _1aba86b94_Const _52328_x) {
	{
		
		if (_1aba88a75_IsI64(&(*_self_))) {
			_case_begin_1bb61549e:;
			{
				_1aba88338_SetI64(&(*_self_), static_cast<jule::I64>((_1aba87887_ReadI64(&(*_self_)) | _1aba87e92_AsI64(&_52328_x))));
			}
		}
		else if (_1aba88ba7_IsU64(&(*_self_))) {
			_case_begin_1bb614cd9:;
			{
				_1aba8846a_SetU64(&(*_self_), static_cast<jule::U64>((_1aba879b9_ReadU64(&(*_self_)) | _1aba880c4_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1bb614c73:;
			{
				return false;;
			}
		}
		_match_end_1bb614ba7:;
	};
	return true;;
}



inline jule::Bool _1aba8c89d_Xor(_1aba86b94_Const* _self_, _1aba86b94_Const _53722_x) {
	{
		
		if (_1aba88a75_IsI64(&(*_self_))) {
			_case_begin_1bb6175b1:;
			{
				_1aba88338_SetI64(&(*_self_), static_cast<jule::I64>((_1aba87887_ReadI64(&(*_self_)) ^ _1aba87e92_AsI64(&_53722_x))));
			}
		}
		else if (_1aba88ba7_IsU64(&(*_self_))) {
			_case_begin_1bb616deb:;
			{
				_1aba8846a_SetU64(&(*_self_), static_cast<jule::U64>((_1aba879b9_ReadU64(&(*_self_)) ^ _1aba880c4_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1bb616d85:;
			{
				return false;;
			}
		}
		_match_end_1bb616cb9:;
	};
	return true;;
}



inline jule::Bool _1aba8cbab_Lshift(_1aba86b94_Const* _self_, _1aba86b94_Const _55125_x) {
	{
		
		if (_1aba88a75_IsI64(&(*_self_))) {
			_case_begin_1bb6196c3:;
			{
				jule::I64 _55417_l = _1aba87e92_AsI64(&(*_self_));;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _1aba880c4_AsU64(&_55125_x);;
					_1aba88338_SetI64(&(*_self_), static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_1aba8d32c_lshiftUnsig((*_self_),_55125_x);
				};
			}
		}
		else if (_1aba88ba7_IsU64(&(*_self_))) {
			_case_begin_1bb61900d:;
			{
				_1aba8d32c_lshiftUnsig((*_self_),_55125_x);
			}
		}
		else {
			_case_begin_1bb618e97:;
			{
				return false;;
			}
		}
		_match_end_1bb618dcb:;
	};
	return true;;
}



inline jule::Bool _1aba8ceb9_Rshift(_1aba86b94_Const* _self_, _1aba86b94_Const _57125_x) {
	{
		
		if (_1aba88a75_IsI64(&(*_self_))) {
			_case_begin_1bb61c088:;
			{
				jule::I64 _57417_l = _1aba87e92_AsI64(&(*_self_));;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _1aba880c4_AsU64(&_57125_x);;
					_1aba88338_SetI64(&(*_self_), static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_1aba8d629_rshiftUnsig((*_self_),_57125_x);
				};
			}
		}
		else if (_1aba88ba7_IsU64(&(*_self_))) {
			_case_begin_1bb61b8c3:;
			{
				_1aba8d629_rshiftUnsig((*_self_),_57125_x);
			}
		}
		else {
			_case_begin_1bb61b85c:;
			{
				return false;;
			}
		}
		_match_end_1bb61b791:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba86b94_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab08a396_FieldIns> _1ab04695c_instance(jule::Ptr<_1ab05e216_Field> _self_) {
	return jule::new_ptr<_1ab08a396_FieldIns>(_1ab08a396_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab05e216_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab06685b_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab08a583_StructIns> _1ab04a730_instance(jule::Ptr<_1ab08a1a9_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_1ab08a583_StructIns> _9917_ins = jule::new_ptr<_1ab08a583_StructIns>(_1ab08a583_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1ab08a396_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1abc73ee6_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__1abaa507a_new(), });;
	{
		auto &expr = _self_.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_1bb881c6a:;
		if (it != expr.end()) {
			jule::Ptr<_1abc73ee6_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_1abc73ee6_Var>((*(_10621_s))));;
			}
			_iter_next_1bb881c6a:;
			++it;
			goto _iter_begin_1bb881c6a;
		}
		_iter_end_1bb881c6a:;
	};
	{
		auto &expr = _self_.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1bb882d8c:;
		if (it != expr.end()) {
			jule::Ptr<_1ab05e216_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_1ab04695c_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1abce9159_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1bb882d8c:;
			++it;
			goto _iter_begin_1bb882d8c;
		}
		_iter_end_1bb882d8c:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1aba9e1c8_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto &expr = _self_.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1bb885840:;
			if (it != expr.end()) {
				jule::Ptr<_1aba9e1c8_Fn> _12125_f = *it;
				{
					jule::Ptr<_1aba9e1c8_Fn> _12225_fins = jule::new_ptr<_1aba9e1c8_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_1bb885840:;
				++it;
				goto _iter_begin_1bb885840;
			}
			_iter_end_1bb885840:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_1ab08a583_StructIns> _1ab04b489_appendInstance(_1ab08a1a9_Struct* _self_, jule::Ptr<_1ab08a583_StructIns>& _13338_ins) {
	if ((((*_self_)._field_Generics.len() == 0LL) && ((*_self_)._field_Instances.len() == 1LL))) {
		return (*_self_)._field_Instances[0LL];;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bb887a95:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a583_StructIns> _13921_ains = *it;
			{
				if (_1ab064392_Same(_13921_ains.ptr(), _13338_ins)) {
					return _13921_ains;;
				};
			}
			_iter_next_1bb887a95:;
			++it;
			goto _iter_begin_1bb887a95;
		}
		_iter_end_1bb887a95:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_13338_ins);;
	return nullptr;;
}



inline jule::Ptr<_1aba9e1c8_Fn> _1ab04e5e1_FindMethod(_1ab08a1a9_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bb889080:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_1bb889080:;
			++it;
			goto _iter_begin_1bb889080;
		}
		_iter_end_1bb889080:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abc73ee6_Var> _1ab04da41_FindStatic(_1ab08a1a9_Struct* _self_, jule::Str _16229_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_1bb88a229:;
		if (it != expr.end()) {
			jule::Ptr<_1abc73ee6_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_1bb88a229:;
			++it;
			goto _iter_begin_1bb88a229;
		}
		_iter_end_1bb88a229:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab05e216_Field> _1ab050e1c_FindField(_1ab08a1a9_Struct* _self_, jule::Str _17328_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1bb88a69c:;
		if (it != expr.end()) {
			jule::Ptr<_1ab05e216_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_1bb88a69c:;
			++it;
			goto _iter_begin_1bb88a69c;
		}
		_iter_end_1bb88a69c:;
	};
	return nullptr;;
}



inline jule::Bool _1ab050218_IsImplements(_1ab08a1a9_Struct* _self_, jule::Ptr<_1abab10ca_Trait> _18327_t) {
	{
		auto &expr = (*_self_)._field_Implements;
		auto it = expr.begin();
		_iter_begin_1bb88b5c1:;
		if (it != expr.end()) {
			jule::Ptr<_1abab10ca_Trait> &_18416_it = *it;
			{
				if ((_18327_t == _18416_it)) {
					return true;;
				};
			}
			_iter_next_1bb88b5c1:;
			++it;
			goto _iter_begin_1bb88b5c1;
		}
		_iter_end_1bb88b5c1:;
	};
	return false;;
}



inline jule::Bool _1ab0541d9_IsDerives(_1ab08a1a9_Struct* _self_, jule::Str _19324_ident) {
	{
		auto &expr = (*_self_)._field_Directives;
		auto it = expr.begin();
		_iter_begin_1bb88c54a:;
		if (it != expr.end()) {
			jule::Ptr<_1ab03a720_Directive> &_19416_d = *it;
			{
				if ((_19416_d.get()._field_Tag.get()._field_Kind == jule::Str("derive", 6))) {
					if (((_19416_d.get()._field_Args.len() == 1LL) && (_19416_d.get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_1bb88c54a:;
			++it;
			goto _iter_begin_1bb88c54a;
		}
		_iter_end_1bb88c54a:;
	};
	return false;;
}



inline jule::Bool _1ab05489e_IsUses(_1ab08a1a9_Struct* _self_, jule::Ptr<_1ab08a1a9_Struct> _20521_s) {
	{
		auto &expr = (*_self_)._field_Uses;
		auto it = expr.begin();
		_iter_begin_1bb88ec67:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a1a9_Struct> &_20616_u = *it;
			{
				while ((_20521_s == _20616_u)) {
					{
						return true;;
					}
				_iter_next_1bb8904c6:;
				}
				_iter_end_1bb8904c6:;;
			}
			_iter_next_1bb88ec67:;
			++it;
			goto _iter_begin_1bb88ec67;
		}
		_iter_end_1bb88ec67:;
	};
	return false;;
}



inline jule::Bool _1ab059d6b_HasRefAccessible(_1ab08a1a9_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bb890691:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> &_21616_m = *it;
			{
				if (((_21616_m.get()._field_Params.len() > 0LL) && _1aba9d22c_IsRef(_21616_m.get()._field_Params[0LL].ptr()))) {
					return true;;
				};
			}
			_iter_next_1bb890691:;
			++it;
			goto _iter_begin_1bb890691;
		}
		_iter_end_1bb890691:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab08a1a9_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab08a396_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba90928_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba90de0_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba91297_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba91693_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba91a4a_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba91d58_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba923a8_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba92c5a_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba93112_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba93585_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba9393c_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba93ce4_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba94267_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba947a6_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba94ce5_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba95697_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba95a3d_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba95e06_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba961e2_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba96753_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba96a50_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba96e29_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba97314_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba97633_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba97a1d_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba97e08_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba983ae_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba98865_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba98c50_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba9906e_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba9938d_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba99a42_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba99da5_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba9a290_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba9a58c_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba9a878_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba9ab64_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba9ae72_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba9b33a_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba9b626_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba9c1b5_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abaa0eaa_ParamIns> _1aba9cc54_instance(jule::Ptr<_1aba9c88b_Param> _self_) {
	return jule::new_ptr<_1abaa0eaa_ParamIns>(_1abaa0eaa_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1aba9ceb8_IsSelf(_1aba9c88b_Param* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));;
}



inline jule::Bool _1aba9d22c_IsRef(_1aba9c88b_Param* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba9c88b_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aba9e63a_IsVoid(_1aba9e1c8_Fn* _self_) {
	return ((*_self_)._field_Result == nullptr);;
}



inline jule::Bool _1aba9e89e_IsMethod(_1aba9e1c8_Fn* _self_) {
	return ((*_self_)._field_Owner != nullptr);;
}



inline jule::Bool _1aba9eb13_IsEntryPoint(_1aba9e1c8_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("main", 4));;
}



inline jule::Bool _1aba9ed77_IsInit(_1aba9e1c8_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("init", 4));;
}



inline jule::Bool _1abaa00db_IsAnon(_1aba9e1c8_Fn* _self_) {
	return _1a9726308_IsAnonIdent((*_self_)._field_Ident);;
}



inline jule::Bool _1abaa0350_AnyVar(_1aba9e1c8_Fn* _self_) {
	return (((*_self_)._field_Result != nullptr) && ((*_self_)._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1abaa1d79_FnIns> _1abaa05b4_instanceForce(jule::Ptr<_1aba9e1c8_Fn> _self_) {
	jule::Ptr<_1abaa1d79_FnIns> _10017_ins = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1ababdcdb_Scope>(), ._field_Refers=static__1abaa507a_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1abaa0eaa_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto &expr = _self_.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1bb8a463e:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9c88b_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_1aba9cc54_instance(_10721_p));;
			}
			_iter_next_1bb8a463e:;
			++it;
			goto _iter_begin_1bb8a463e;
		}
		_iter_end_1bb8a463e:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_1abaa1d79_FnIns> _1abaa0828_instance(jule::Ptr<_1aba9e1c8_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _1abaa05b4_instanceForce(_self_);;
}



inline jule::Ptr<_1abaa1d79_FnIns> _1abaa0b03_appendInstance(_1aba9e1c8_Fn* _self_, jule::Ptr<_1abaa1d79_FnIns>& _12838_ins) {
	if (((*_self_)._field_Generics.len() == 0LL)) {
		if (((*_self_)._field_Instances.len() == 1LL)) {
			return (*_self_)._field_Instances[0LL];;
		};
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;;
	};
	if (((*_self_)._field_Instances.len() == 0LL)) {
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bb8a90e4:;
		if (it != expr.end()) {
			jule::Ptr<_1abaa1d79_FnIns> _14421_ains = *it;
			{
				if (_1abaa3782_Same(_14421_ains.ptr(), _12838_ins)) {
					return _14421_ains;;
				};
			}
			_iter_next_1bb8a90e4:;
			++it;
			goto _iter_begin_1bb8a90e4;
		}
		_iter_end_1bb8a90e4:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aba9e1c8_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1abaa1384_Str(_1abaa0eaa_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_Decl.get()._field_Reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1aba9ceb8_IsSelf((*_self_)._field_Decl.ptr())) {
		if (_1aba9d22c_IsRef((*_self_)._field_Decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;;
	};
	if ((*_self_)._field_Decl.get()._field_Variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_Kind != nullptr)) {
		_16617_s+=_1abce7dd3_Str((*_self_)._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abaa0eaa_ParamIns _Src) {
	_Stream << _1abaa1384_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abaa21a9_Str(_1abaa1d79_FnIns* _self_) {
	;
	return _1abaa3a90_GetKindStr(&(*_self_), false);;
}



inline jule::Bool _1abaa24b7_Equal(jule::Ptr<_1abaa1d79_FnIns> _self_, jule::Ptr<_1abce79d7_TypeKind> _21721_other) {
	jule::Ptr<_1abaa1d79_FnIns> _21813_f = _1abceb05c_Fn(_21721_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _1abaa2929_EqualFn(_self_, _21813_f);;
}



inline jule::Bool _1abaa2929_EqualFn(jule::Ptr<_1abaa1d79_FnIns> _self_, jule::Ptr<_1abaa1d79_FnIns>& _22824_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != _22824_f.get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != _22824_f.get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_1aba9e63a_IsVoid(_self_.get()._field_Decl.ptr()) != _1aba9e63a_IsVoid(_22824_f.get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1abaa0eaa_ParamIns>,jule::Ptr<_1abaa0eaa_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1abaa0eaa_ParamIns>,jule::Ptr<_1abaa0eaa_ParamIns>)>([=](jule::Ptr<_1abaa0eaa_ParamIns> _23830_p1, jule::Ptr<_1abaa0eaa_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_1aba9ceb8_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1aba9ceb8_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1aba9d22c_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1aba9d22c_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _1abce81e1_Equal(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if ((_22824_f.get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i],_22824_f.get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_1bb8b6e15:;
	}
	_iter_end_1bb8b6e15:;;
	if ((!(_1aba9e63a_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1abce81e1_Equal(_self_.get()._field_Result, _22824_f.get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1abaa2c37_equalTrait(jule::Ptr<_1abaa1d79_FnIns> _self_, jule::Ptr<_1abaa1d79_FnIns>& _28727_other) {
	if ((!(_1abaa2929_EqualFn(_self_, _28727_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != _28727_other.get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1abce79d7_TypeKind>> _1abaa2e9b_Types(_1abaa1d79_FnIns* _self_) {
	{
		
		if (((*_self_)._field_Result == nullptr)) {
			_case_begin_1bb8ba446:;
			{
				return nullptr;;
			}
		}
		else if ((_1abceba0d_Tup((*_self_)._field_Result.ptr()) == nullptr)) {
			_case_begin_1bb8ba4ac:;
			{
				return jule::Slice<jule::Ptr<_1abce79d7_TypeKind>>::make({(*_self_)._field_Result});;
			}
		}
		else {
			_case_begin_1bb8ba3d0:;
			{
				return _1abceba0d_Tup((*_self_)._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_1bb8ba314:;
	};
}



inline jule::Bool _1abaa3210_IsBuiltin(_1abaa1d79_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);;
}



inline jule::Bool _1abaa3474_IsAnon(_1abaa1d79_FnIns* _self_) {
	return ((*_self_)._field_Anon || (((*_self_)._field_Decl != nullptr) && _1abaa00db_IsAnon((*_self_)._field_Decl.ptr())));;
}



inline jule::Bool _1abaa3782_Same(_1abaa1d79_FnIns* _self_, jule::Ptr<_1abaa1d79_FnIns> _32419_f) {
	if ((((*_self_)._field_Decl != _32419_f.get()._field_Decl) || (_32419_f.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1bb8bdd1d:;
		if (it != expr.end()) {
			jule::I64 _32913_i = it - expr.begin();
			jule::Ptr<_1abce62aa_InsGeneric> &_32916_g = *it;
			{
				if ((!(_1abce81e1_Equal(_32916_g.get()._field_Kind, _32419_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1bb8bdd1d:;
			++it;
			_32913_i++;
			goto _iter_begin_1bb8bdd1d;
		}
		_iter_end_1bb8bdd1d:;
	};
	return true;;
}



inline jule::Str _1abaa3a90_GetKindStr(_1abaa1d79_FnIns* _self_, jule::Bool _34025_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Unsafety) {
		_34117_s+=jule::Str("unsafe ", 7);
	};
	_34117_s+=jule::Str("fn", 2);
	if ((_34025_ident && ((*_self_)._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*_self_)._field_Decl.get()._field_Ident);
	};
	_34117_s+=jule::Str("(", 1);
	jule::I64 _35413_n = (*_self_)._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_Params;
			auto it = expr.begin();
			_iter_begin_1bb8c2b57:;
			if (it != expr.end()) {
				jule::Ptr<_1abaa0eaa_ParamIns> &_35620_p = *it;
				{
					_34117_s+=_1abaa1384_Str(_35620_p.ptr());
					_34117_s+=jule::Str(",", 1);
				}
				_iter_next_1bb8c2b57:;
				++it;
				goto _iter_begin_1bb8c2b57;
			}
			_iter_end_1bb8c2b57:;
		};
		(_34117_s).mut_slice(0LL,(_34117_s.len() - 1LL));;
	};
	_34117_s+=jule::Str(")", 1);
	if ((*_self_)._field_Decl.get()._field_Exceptional) {
		_34117_s+=jule::Str("!", 1);
	};
	if ((!(_1aba9e63a_IsVoid((*_self_)._field_Decl.ptr())))) {
		_34117_s+=jule::Str(":", 1);
		_34117_s+=_1abce7dd3_Str((*_self_)._field_Result.ptr());
	};
	return _34117_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abaa1d79_FnIns _Src) {
	_Stream << _1abaa21a9_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1abaa4ce4_ReferenceStack> static__1abaa507a_new(void) {
	return jule::new_ptr<_1abaa4ce4_ReferenceStack>(_1abaa4ce4_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1abaa5410_Len(_1abaa4ce4_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());;
}



inline jule::Any _1abaa571d_At(_1abaa4ce4_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*_self_)._field_buffer[_6821_i];;
}



inline void _1abaa5993_Push(_1abaa4ce4_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(_7327_ref);;
}



inline jule::Bool _1bc0dee34_Exist(_1abaa4ce4_ReferenceStack* _self_, jule::Ptr<_1abaa1d79_FnIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1bc0e1254:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((__jule_any_type9_compare(_7916_ref, _7823_t))) {
					return true;;
				};
			}
			_iter_next_1bc0e1254:;
			++it;
			goto _iter_begin_1bc0e1254;
		}
		_iter_end_1bc0e1254:;
	};
	return false;;
}

inline jule::Bool _1bc104157_Exist(_1abaa4ce4_ReferenceStack* _self_, jule::Ptr<_1abc73ee6_Var> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1bc105433:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((__jule_any_type10_compare(_7916_ref, _7823_t))) {
					return true;;
				};
			}
			_iter_next_1bc105433:;
			++it;
			goto _iter_begin_1bc105433;
		}
		_iter_end_1bc105433:;
	};
	return false;;
}

inline jule::Bool _1bc1d5403_Exist(_1abaa4ce4_ReferenceStack* _self_, jule::Ptr<_1ab08a583_StructIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1bc1d6767:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((__jule_any_type11_compare(_7916_ref, _7823_t))) {
					return true;;
				};
			}
			_iter_next_1bc1d6767:;
			++it;
			goto _iter_begin_1bc1d6767;
		}
		_iter_end_1bc1d6767:;
	};
	return false;;
}

inline jule::Bool _1bc45ea67_Exist(_1abaa4ce4_ReferenceStack* _self_, jule::Ptr<_1abab10ca_Trait> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1bc460cbb:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((__jule_any_type12_compare(_7916_ref, _7823_t))) {
					return true;;
				};
			}
			_iter_next_1bc460cbb:;
			++it;
			goto _iter_begin_1bc460cbb;
		}
		_iter_end_1bc460cbb:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abaa4ce4_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abaa6158_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abaaa602_symbolBuilder> _1abaaaaa8_getRoot(jule::Ptr<_1abaaa602_symbolBuilder> _self_) {
	jule::Ptr<_1abaaa602_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1bb8da6ca:;
	}
	_iter_end_1bb8da6ca:;;
	return _31617_root;;
}



inline void _1abaaae71_pushErr(_1abaaa602_symbolBuilder* _self_, jule::Ptr<_1a97237bc_Token>& _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1abc545d1_compilerErr(_32327_token,true,_32342_fmt,_32355_args));;
}



inline void _1abaab339_pushErrText(_1abaaa602_symbolBuilder* _self_, jule::Ptr<_1a97237bc_Token>& _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1abc545d1_compilerErr(_32731_token,false,_32746_fmt,_32759_args));;
}



inline void _1abaab658_pushSuggestion(_1abaaa602_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_1abc55a66_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33233_fmt,_33246_args);
	};
}



inline jule::Bool _1abaaba10_checkCppUseDeclPath(_1abaaa602_symbolBuilder* _self_, jule::Ptr<_1ab086172_UseDecl>& _33639_decl, jule::Str _33655_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _33713_ext = _1a791751d_Ext(_33655_path);;
	if (((!(_1a79888be_IsValidHeaderExt(_33713_ext))) && (!(_1a7988b66_IsValidCppExt(_33713_ext))))) {
		_1abaaae71_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext, &__jule_any_type7)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d96aa317_Status> _34413_info = ({
		auto except = static__1d7ca5c11_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_1abaaae71_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath, &__jule_any_type7)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_1d96aa317_Status>(nullptr);});
	});;
	if (_1d95bace9_IsDir(_34413_info.ptr())) {
		_1abaaae71_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath, &__jule_any_type7)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abaabcda_buildCppHeaderImport(_1abaaa602_symbolBuilder* _self_, jule::Ptr<_1ab086172_UseDecl>& _35644_decl) {
	jule::Str _35717_path = _35644_decl.get()._field_LinkPath;;
	if ((!(_1a7988616_IsStdHeaderPath(_35644_decl.get()._field_LinkPath)))) {
		_35717_path=_1a7917276_Join(jule::Slice<jule::Str>::make({_1a972954d_Dir(_35644_decl.get()._field_Token.get()._field_File.ptr()),_35644_decl.get()._field_LinkPath}));
		jule::Bool _36121_ok = _1abaaba10_checkCppUseDeclPath(&(*_self_), _35644_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a79177b5_Abs(_35717_path);
			_35717_path = __jule_assign_result.__jule_result_arg0;
			_36121_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_36121_ok))) {
			_1abaaae71_pushErr(&(*_self_), _35644_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35644_decl.get()._field_LinkPath, &__jule_any_type7)}));
		};
	};
	return jule::new_ptr<_1abc4cd9e_ImportInfo>(_1abc4cd9e_ImportInfo{._field_Token=_35644_decl.get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=_35644_decl.get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abaac0e8_buildStdImport(_1abaaa602_symbolBuilder* _self_, jule::Ptr<_1ab086172_UseDecl>& _38438_decl) {
	jule::Str _38517_path = _38438_decl.get()._field_LinkPath.slice(5LL);;
	_38517_path=_1a7913706_Replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38517_path=_1a7917276_Join(jule::Slice<jule::Str>::make({_1a79cdccc_PathStdlib,_38517_path}));
	jule::Bool _38820_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a79177b5_Abs(_38517_path);
		_38517_path = __jule_assign_result.__jule_result_arg0;
		_38820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_38820_ok))) {
		_1abaaae71_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath, &__jule_any_type7)}));
		return nullptr;;
	};
	jule::Ptr<_1d96aa317_Status> _39513_info = ({
		auto except = static__1d7ca5c11_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_1abaaae71_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath, &__jule_any_type7)}));
			return nullptr;;
		} jule::Ptr<_1d96aa317_Status>(nullptr);});
	});;
	if ((!(_1d95bace9_IsDir(_39513_info.ptr())))) {
		_1abaaae71_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath, &__jule_any_type7)}));
		return nullptr;;
	};
	jule::I64 _40513_i = (_1a7908c6d_FindLast(_38438_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38438_decl.get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_1abc4cd9e_ImportInfo>(_1abc4cd9e_ImportInfo{._field_Token=_38438_decl.get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=_38438_decl.get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=_38438_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=_38438_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1abc50d08_Package>(_1abc50d08_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abaac406_buildIdentImport(jule::Ptr<_1abaaa602_symbolBuilder> _self_, jule::Ptr<_1ab086172_UseDecl>& _42341_decl) {
	jule::Str _42413_modPath = _1abad9873_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abad89d7_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_1abaaae71_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1abaab658_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _43117_path = _42341_decl.get()._field_LinkPath;;
	_43117_path=_1a7913706_Replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_43117_path=_1a7917276_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a79177b5_Abs(_43117_path);
		_43117_path = __jule_assign_result.__jule_result_arg0;
		_43520_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_43520_ok))) {
		_1abaaae71_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath, &__jule_any_type7)}));
		return nullptr;;
	};
	jule::Ptr<_1d96aa317_Status> _44213_info = ({
		auto except = static__1d7ca5c11_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_1abaaae71_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath, &__jule_any_type7)}));
			return nullptr;;
		} jule::Ptr<_1d96aa317_Status>(nullptr);});
	});;
	if ((!(_1d95bace9_IsDir(_44213_info.ptr())))) {
		_1abaaae71_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath, &__jule_any_type7)}));
		return nullptr;;
	};
	jule::I64 _45213_i = (_1a7908c6d_FindLast(_42341_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42341_decl.get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_1abc4cd9e_ImportInfo>(_1abc4cd9e_ImportInfo{._field_Token=_42341_decl.get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=_42341_decl.get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=_42341_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=_42341_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1abc50d08_Package>(_1abc50d08_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abaac714_buildImport(jule::Ptr<_1abaaa602_symbolBuilder> _self_, jule::Ptr<_1ab086172_UseDecl>& _47036_decl) {
	{
		
		if (_47036_decl.get()._field_CppLinked) {
			_case_begin_1bb903171:;
			{
				return _1abaabcda_buildCppHeaderImport(_self_.ptr(), _47036_decl);;
			}
		}
		else if (_47036_decl.get()._field_Std) {
			_case_begin_1bb9033c4:;
			{
				return _1abaac0e8_buildStdImport(_self_.ptr(), _47036_decl);;
			}
		}
		else {
			_case_begin_1bb902978:;
			{
				return _1abaac406_buildIdentImport(_self_, _47036_decl);;
			}
		}
		_match_end_1bb9028ac:;
	};
}



inline jule::Bool _1abaaca22_checkDuplicateUseDecl(_1abaaa602_symbolBuilder* _self_, jule::Ptr<_1abc4cd9e_ImportInfo>& _48141_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abc4cd9e_ImportInfo> _48313_lpkg = _1abcb7556_SelectPackage((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)>([=](jule::Ptr<_1abc4cd9e_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return (_48141_pkg.get()._field_Path == _48348_spkg.get()._field_Path);;
	}));;
	if ((_48313_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1abaaae71_pushErr(&(*_self_), _48141_pkg.get()._field_Token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48141_pkg.get()._field_LinkPath, &__jule_any_type7)}));
	_1abaab658_pushSuggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1abaacd41_implImportSelections(_1abaaa602_symbolBuilder* _self_, jule::Ptr<_1abc4cd9e_ImportInfo>& _49544_imp, jule::Ptr<_1ab086172_UseDecl>& _49567_decl) {
	_49544_imp.get()._field_Selected=_49567_decl.get()._field_Selected;
	{
		auto &expr = _49544_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1bb906d67:;
		if (it != expr.end()) {
			jule::Ptr<_1a97237bc_Token> _49716_item = *it;
			{
				{
					auto &expr = _49544_imp.get()._field_Selected;
					auto it = expr.begin();
					_iter_begin_1bb9075a4:;
					if (it != expr.end()) {
						jule::Ptr<_1a97237bc_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1bb9075a4;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_1abaaae71_pushErr(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind, &__jule_any_type7)}));
								_1abaab658_pushSuggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_1bb9075a4;
							};
						}
						_iter_next_1bb9075a4:;
						++it;
						goto _iter_begin_1bb9075a4;
					}
					_iter_end_1bb9075a4:;
				};
			}
			_iter_next_1bb906d67:;
			++it;
			goto _iter_begin_1bb906d67;
		}
		_iter_end_1bb906d67:;
	};
}



inline jule::Str _1abaad14e_getAsLinkPath(jule::Ptr<_1abaaa602_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_1a78d463e_HasPrefix(_51037_path,_1a79cdccc_PathStdlib)) {
		(_51037_path).mut_slice(_1a79cdccc_PathStdlib.len());;
		return (jule::Str("std", 3) + _1a7913706_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));;
	};
	jule::Str _51614_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a79177b5_Abs(_1abad9873_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abad89d7_GetModPath(_self_.get()._field_importer));
		_51614_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 47LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _1a7913706_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);;
}



inline void _1abaad517_pushCycleError(jule::Ptr<_1abaaa602_symbolBuilder> _self_, jule::Ptr<_1abaaa602_symbolBuilder>& _52435_sb, jule::Str _52455_path, jule::Str& _52471_message) {
	;
	jule::Str _52613_refersTo = _1a7995bb7_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_1abaad14e_getAsLinkPath(_self_, _1a972954d_Dir(_52435_sb.get()._field_table.get()._field_File.ptr())), &__jule_any_type7),jule::Any(_1abaad14e_getAsLinkPath(_self_, _52455_path), &__jule_any_type7)}));;
	(_52471_message).buffer.insert(0, (((_1a78d5002_Repeat(jule::Str(" ", 1),4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _1abaad8d0_pushCrossCycleError(jule::Ptr<_1abaaa602_symbolBuilder> _self_, jule::Ptr<_1abaaa602_symbolBuilder>& _53340_target, jule::Ptr<_1abc4cd9e_ImportInfo>& _53365_imp, jule::Ptr<_1a97237bc_Token>& _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_1abaad517_pushCycleError(_self_, _self_,_53365_imp.get()._field_Path,_53417_message);
	jule::Ptr<_1abaaa602_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_1abaaa602_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_1abaad517_pushCycleError(_self_, _53917_old.get()._field_owner,_1a972954d_Dir(_53917_old.get()._field_table.get()._field_File.ptr()),_53417_message);
			if ((_53817_owner.get()._field_owner == _53340_target)) {
				_1abaad517_pushCycleError(_self_, _53340_target,_1a972954d_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()),_53417_message);
				goto _iter_end_1bb91005c;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_1bb91005c:;
	}
	_iter_end_1bb91005c:;;
	_1abaaae71_pushErr(_self_.ptr(), _53384_errorToken,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53417_message, &__jule_any_type7)}));
}



inline jule::Bool _1abaadc87_checkImportCycles(jule::Ptr<_1abaaa602_symbolBuilder> _self_, jule::Ptr<_1abc4cd9e_ImportInfo> _55637_imp, jule::Ptr<_1ab086172_UseDecl>& _55656_decl) {
	if ((_55637_imp.get()._field_Path == _1a972954d_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1abaaae71_pushErr(_self_.ptr(), _55656_decl.get()._field_Token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_1abaad14e_getAsLinkPath(_self_, _55637_imp.get()._field_Path), &__jule_any_type7)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_1a972954d_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1abaad8d0_pushCrossCycleError(_self_, _self_.get()._field_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;;
	};
	jule::Ptr<_1abaaa602_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_1a972954d_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1abaad8d0_pushCrossCycleError(_self_, _57117_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _1abaae172_checkPackageAccessibility(_1abaaa602_symbolBuilder* _self_, jule::Ptr<_1ab086172_UseDecl>& _59245_decl, jule::Str& _59262_mod, jule::Str& _59273_path) {
	if (((_1abad9873_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1abad89d7_GetModPath((*_self_)._field_importer) != _59262_mod) && _1a791245d_Contains(_59273_path,jule::Str("internal", 8)))) {
		_1abaaae71_pushErr(&(*_self_), _59245_decl.get()._field_Token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1abaae53a_importPackage(jule::Ptr<_1abaaa602_symbolBuilder> _self_, jule::Ptr<_1abc4cd9e_ImportInfo>& _59838_imp, jule::Ptr<_1ab086172_UseDecl>& _59861_decl) {
	jule::Bool __jule_func_result = false;
	if (_59838_imp.get()._field_CppLinked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1abc4cd9e_ImportInfo> _60317_port = _1abad9873_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abad9103_GetImport(_self_.get()._field_importer, _59838_imp.get()._field_Path);;
	if ((_60317_port != nullptr)) {
		_59838_imp.get()._field_Package=_60317_port.get()._field_Package;
		_59838_imp.get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _1abad9873_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abad89d7_GetModPath(_self_.get()._field_importer);;
		_1abad9873_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abad8784_SetModPath(_self_.get()._field_importer, _1abad9873_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abad8ce5_ModById(_self_.get()._field_importer, _59838_imp.get()._field_ModId));
		_1abaae172_checkPackageAccessibility(_self_.ptr(), _59861_decl,_60817_oldMod,_60317_port.get()._field_Path);
		_1abad9873_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abad8784_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_1abaadc87_checkImportCycles(_self_, _59838_imp,_59861_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _61717_oldMod = _1abad9873_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abad89d7_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1abad9873_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abad8784_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if (_59838_imp.get()._field_Std) {
			_1abad9873_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abad8784_SetModPath(_self_.get()._field_importer, _1a79cdccc_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1ab039532_Ast>> _62222_asts;;
		jule::Slice<_1a7995777_Log> _62232_errors;;
		({
			__jule_tuple_sx_1ab039532_Ast__jule_tuple_s_1a7995777_Log __jule_assign_result = _1abad9873_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abad94aa_ImportPackage(_self_.get()._field_importer, _59838_imp.get()._field_Path,(!(_59838_imp.get()._field_Std)));
			_62222_asts = __jule_assign_result.__jule_result_arg0;
			_62232_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1abaae172_checkPackageAccessibility(_self_.ptr(), _59861_decl,_61717_oldMod,_59838_imp.get()._field_Path);
		{
			auto &expr = _62222_asts;
			auto it = expr.begin();
			_iter_begin_1bb91eac7:;
			if (it != expr.end()) {
				jule::Ptr<_1ab039532_Ast> _63025_ast = *it;
				{
					jule::Ptr<_1abcb6c2b_SymbolTable> _63125_table = nullptr;;
					({
						__jule_tuple_x_1abcb6c2b_SymbolTable__jule_tuple_s_1a7995777_Log __jule_assign_result = _1abd1463b_buildSymbols(_63025_ast,_self_.get()._field_importer,_self_);
						_63125_table = __jule_assign_result.__jule_result_arg0;
						_62232_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					_59838_imp.get()._field_Package.get()._field_Files = jule::alloc_for_append(_59838_imp.get()._field_Package.get()._field_Files,1);_59838_imp.get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_1bb91eac7:;
				++it;
				goto _iter_begin_1bb91eac7;
			}
			_iter_end_1bb91eac7:;
		};
	};
	_1abaacd41_implImportSelections(_self_.ptr(), _59838_imp,_59861_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abaae848_importUseDecl(jule::Ptr<_1abaaa602_symbolBuilder> _self_, jule::Ptr<_1ab086172_UseDecl>& _64538_decl) {
	jule::Ptr<_1abc4cd9e_ImportInfo> _64617_imp = _1abaac714_buildImport(_self_, _64538_decl);;
	if ((_64617_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _65217_ok = _1abaaca22_checkDuplicateUseDecl(_self_.ptr(), _64617_imp);;
	if ((!(_65217_ok))) {
		return nullptr;;
	};
	_65217_ok=_1abaae53a_importPackage(_self_, _64617_imp,_64538_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_64617_imp);;
	if (_65217_ok) {
		_1abad9873_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1abad9730_Imported(_self_.get()._field_importer, _64617_imp);
		return _64617_imp;;
	};
	return nullptr;;
}



inline void _1abaaea24_importUseDecls(jule::Ptr<_1abaaa602_symbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_UseDecls;
		auto it = expr.begin();
		_iter_begin_1bb9240a4:;
		if (it != expr.end()) {
			jule::Ptr<_1ab086172_UseDecl> _66721_decl = *it;
			{
				_1abaae848_importUseDecl(_self_, _66721_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1bb9240a4;
				};
			}
			_iter_next_1bb9240a4:;
			++it;
			goto _iter_begin_1bb9240a4;
		}
		_iter_end_1bb9240a4:;
	};
}



inline void _1abaaec99_appendNode(_1abaaa602_symbolBuilder* _self_, _1ab03a324_Node& _67634_node) {
	{
		auto &_match_expr{ _67634_node._field_Data };
		
		if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bb92479c:;
			{
				(*_self_)._field_table.get()._field_Impls = jule::alloc_for_append((*_self_)._field_table.get()._field_Impls,1);(*_self_)._field_table.get()._field_Impls.__push(_1abaaa0a2_buildImpl(_67634_node._field_Data.cast_ptr<_1ab0898e5_Impl>(&__jule_any_type13)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bb92569e:;
			{
				jule::Ptr<_1abce6ce4_TypeAlias> _68121_ta = _1abaa6a3d_buildTypeAlias(_67634_node._field_Data.cast_ptr<_1ab084c86_TypeAliasDecl>(&__jule_any_type14));;
				(*_self_)._field_table.get()._field_TypeAliases = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeAliases,1);(*_self_)._field_table.get()._field_TypeAliases.__push(_68121_ta);;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1bb925715:;
			{
				jule::Ptr<_1ab08a1a9_Struct> _68421_srct = _1abaa739b_buildStruct(_67634_node._field_Data.cast_ptr<_1ab088bd0_StructDecl>(&__jule_any_type15));;
				(*_self_)._field_table.get()._field_Structs = jule::alloc_for_append((*_self_)._field_table.get()._field_Structs,1);(*_self_)._field_table.get()._field_Structs.__push(_68421_srct);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bb92577b:;
			{
				jule::Ptr<_1aba9e1c8_Fn> _68721_f = _1abaa8006_buildFn(_67634_node._field_Data.cast_ptr<_1ab080446_FnDecl>(&__jule_any_type16));;
				(*_self_)._field_table.get()._field_Funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_Funcs,1);(*_self_)._field_table.get()._field_Funcs.__push(_68721_f);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bb925eeb:;
			{
				jule::Ptr<_1abab10ca_Trait> _69021_t = _1abaa8545_buildTrait(_67634_node._field_Data.cast_ptr<_1ab0892da_TraitDecl>(&__jule_any_type17));;
				(*_self_)._field_table.get()._field_Traits = jule::alloc_for_append((*_self_)._field_table.get()._field_Traits,1);(*_self_)._field_table.get()._field_Traits.__push(_69021_t);;
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1bb926062:;
			{
				jule::Ptr<_1abc73ee6_Var> _69321_v = _1abaa9a63_buildVar(_67634_node._field_Data.cast_ptr<_1ab081425_VarDecl>(&__jule_any_type18));;
				(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_69321_v);;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bb9260c8:;
			{
				jule::Ptr<_1abab3220_Enum> _69621_e = _1abaa8d2b_buildEnum(_67634_node._field_Data.cast_ptr<_1ab08711d_EnumDecl>(&__jule_any_type19));;
				(*_self_)._field_table.get()._field_Enums = jule::alloc_for_append((*_self_)._field_table.get()._field_Enums,1);(*_self_)._field_table.get()._field_Enums.__push(_69621_e);;
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1bb92613e:;
			{
				jule::Ptr<_1abab481a_TypeEnum> _69921_e = _1abaa97bb_buildTypeEnum(_67634_node._field_Data.cast_ptr<_1ab08822e_TypeEnumDecl>(&__jule_any_type20));;
				(*_self_)._field_table.get()._field_TypeEnums = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeEnums,1);(*_self_)._field_table.get()._field_TypeEnums.__push(_69921_e);;
			}
		}
		else {
			_case_begin_1bb92558e:;
			{
				_1abaaae71_pushErr(&(*_self_), _67634_node._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1bb925539:;
	};
}



inline void _1abaaee75_appendNodes(_1abaaa602_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_Nodes;
		auto it = expr.begin();
		_iter_begin_1bb92e6db:;
		if (it != expr.end()) {
			_1ab03a324_Node _70721_node = *it;
			{
				_1abaaec99_appendNode(&(*_self_), _70721_node);
			}
			_iter_next_1bb92e6db:;
			++it;
			goto _iter_begin_1bb92e6db;
		}
		_iter_end_1bb92e6db:;
	};
}



inline void _1abab01ea_pushDirectivePass(_1abaaa602_symbolBuilder* _self_, jule::Ptr<_1ab03a720_Directive>& _71241_d) {
	if ((_71241_d.get()._field_Args.len() == 0LL)) {
		_1abaaae71_pushErr(&(*_self_), _71241_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71241_d.get()._field_Args.len() > 1LL)) {
		jule::Ptr<_1a97237bc_Token> _71717_arg = _71241_d.get()._field_Args[1LL];;
		_1abaaae71_pushErr(&(*_self_), _71717_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a97237bc_Token> _72113_arg = _71241_d.get()._field_Args[0LL];;
	if ((_72113_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1abaaae71_pushErr(&(*_self_), _72113_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72113_arg.get()._field_Kind[0LL] != '\"')) {
		_1abaaae71_pushErr(&(*_self_), _72113_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_Passes = jule::alloc_for_append((*_self_)._field_table.get()._field_Passes,1);(*_self_)._field_table.get()._field_Passes.__push(_1abaa6158_Pass{._field_Token=_71241_d.get()._field_Tag, ._field_Text=_72113_arg.get()._field_Kind.slice(1LL,(_72113_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _1abab03c6_appendTopDirectives(_1abaaa602_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1bb9347ce:;
		if (it != expr.end()) {
			jule::Ptr<_1ab03a720_Directive> _73921_d = *it;
			{
				{
					auto &_match_expr{ _73921_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1bb93548e:;
						{
							_1abab01ea_pushDirectivePass(&(*_self_), _73921_d);
						}
					}
					_match_end_1bb935406:;
				};
			}
			_iter_next_1bb9347ce:;
			++it;
			goto _iter_begin_1bb9347ce;
		}
		_iter_end_1bb9347ce:;
	};
}



inline void _1abab05a2_build(jule::Ptr<_1abaaa602_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1abcb6c2b_SymbolTable>(_1abcb6c2b_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1abab03c6_appendTopDirectives(_self_.ptr());
	_1abaaea24_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1abaaee75_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1abaaa602_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1abab14c6_Str(_1abab10ca_Trait* _self_) {
	return (*_self_)._field_Ident;;
}



inline jule::Bool _1abab17d4_Equal(jule::Ptr<_1abab10ca_Trait> _self_, jule::Ptr<_1abce79d7_TypeKind> _2521_other) {
	jule::Ptr<_1abab10ca_Trait> _2613_trt = _1abceb535_Trait(_2521_other.ptr());;
	return (_self_ == _2613_trt);;
}



inline jule::Bool _1abab1b47_IsBuiltin(_1abab10ca_Trait* _self_) {
	return ((*_self_)._field_Token == nullptr);;
}



inline jule::Ptr<_1aba9e1c8_Fn> _1abab1e55_FindMethod(_1abab10ca_Trait* _self_, jule::Str _3929_ident) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bb9392a6:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;;
				};
			}
			_iter_next_1bb9392a6:;
			++it;
			goto _iter_begin_1bb9392a6;
		}
		_iter_end_1bb9392a6:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abab10ca_Trait _Src) {
	_Stream << _1abab14c6_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1abab2b15_AutoExpr(_1abab272a_EnumItem* _self_) {
	return ((*_self_)._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abab272a_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1abab3583_Str(_1abab3220_Enum* _self_) {
	return (*_self_)._field_Ident;;
}



inline jule::Bool _1abab3891_Equal(jule::Ptr<_1abab3220_Enum> _self_, jule::Ptr<_1abce79d7_TypeKind> _3821_other) {
	jule::Ptr<_1abab3220_Enum> _3913_enm = _1abcea5ab_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_1abab272a_EnumItem> _1abab3cd1_FindItem(_1abab3220_Enum* _self_, jule::Str _4727_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1bb93b95c:;
		if (it != expr.end()) {
			jule::Ptr<_1abab272a_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1bb93b95c:;
			++it;
			goto _iter_begin_1bb93b95c;
		}
		_iter_end_1bb93b95c:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abab3220_Enum _Src) {
	_Stream << _1abab3583_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abab4254_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1abab4b4a_Str(_1abab481a_TypeEnum* _self_) {
	return (*_self_)._field_Ident;;
}



inline jule::Bool _1abab4e58_Equal(jule::Ptr<_1abab481a_TypeEnum> _self_, jule::Ptr<_1abce79d7_TypeKind> _8021_other) {
	jule::Ptr<_1abab481a_TypeEnum> _8113_tenm = _1abcea820_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_1abab4254_TypeEnumItem> _1abab5354_FindItem(_1abab481a_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1bb93da6e:;
		if (it != expr.end()) {
			jule::Ptr<_1abab4254_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1bb93da6e:;
			++it;
			goto _iter_begin_1bb93da6e;
		}
		_iter_end_1bb93da6e:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abab481a_TypeEnum _Src) {
	_Stream << _1abab4b4a_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1abc55eea_Sema>&,jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>&)> _1abab7279_readyFn(jule::Ptr<_1abab6d4a_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1abc55eea_Sema>&,jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>&)>([=](jule::Ptr<_1abc55eea_Sema>& _6321_sema, jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>& _6339_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_genericsD;
			auto it = expr.begin();
			_iter_begin_1bb94aecc:;
			if (it != expr.end()) {
				jule::I64 _6418_i = it - expr.begin();
				jule::Ptr<_1ab07acb0_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1abce62aa_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1bb94aecc;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1abce79d7_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto &expr = _6425_g.get()._field_Constraint.get()._field_Mask;
						auto it = expr.begin();
						_iter_begin_1bb94d782:;
						if (it != expr.end()) {
							jule::Ptr<_1ab06d9b7_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = _6321_sema.get()._field_errors.len();;
								jule::Ptr<_1abce79d7_TypeKind> _7229_kind = _1abc5d2ee_buildTypeWithRefers(_6321_sema, _7029_mask,jule::Trait<_1abd13959_Lookup>(_6321_sema, 3),_6339_generics,nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type21) {
											_case_begin_1bb9502de:;
											{
												jule::Ptr<_1ab06e07d_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_1ab06e07d_IdentTypeDecl>(&__jule_any_type21);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1abab8412_isBuiltinConstraint(_7637_itd.get()._field_Ident))) {
													_7229_kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													_6321_sema.get()._field_errors=_6321_sema.get()._field_errors.slice(0LL,_7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1bb950256:;
									};
									return false;;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1bb94d782:;
							++it;
							goto _iter_begin_1bb94d782;
						}
						_iter_end_1bb94d782:;
					};
				}
				_iter_next_1bb94aecc:;
				++it;
				_6418_i++;
				goto _iter_begin_1bb94aecc;
			}
			_iter_end_1bb94aecc:;
		};
		return true;;
	});;
}



inline jule::Bool _1abab74dd_readyFi(jule::Ptr<_1abab6d4a_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1abc628ca_fnEnvironment(_self_.get()._field_s, _self_.get()._field_fi,_1abab7279_readyFn(_self_)));;
}



inline jule::Bool _1abab7752_readySi(jule::Ptr<_1abab6d4a_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1abab7279_readyFn(_self_)(_self_.get()._field_s,_self_.get()._field_genericsA));;
}



inline jule::Bool _1abab79b6_ready(jule::Ptr<_1abab6d4a_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1abab74dd_readyFi(_self_);;
	};
	return _1abab7752_readySi(_self_);;
}



inline jule::Bool _1abab7c2a_check(jule::Ptr<_1abab6d4a_constraintChecker> _self_) {
	if ((!(_1abab79b6_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1bb9571d6:;
		if (it != expr.end()) {
			jule::I64 _11914_i = it - expr.begin();
			jule::Ptr<_1abce62aa_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1bb9571d6;
				};
				{
					auto &expr = _11921_g.get()._field_Constraint;
					auto it = expr.begin();
					_iter_begin_1bb9581d7:;
					if (it != expr.end()) {
						jule::Ptr<_1abce79d7_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1abcec734_Prim> _12425_prim = _1abce9d6e_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1abced328_IsConstraint(_12425_prim.ptr()))) {
								if (_1abab8126_matchConstraint(_12425_prim.get()._field_Kind,_11921_g.get()._field_Kind)) {
									goto _iter_next_1bb9571d6;
								};
								goto _iter_next_1bb9581d7;
							};
							if (_1abce81e1_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1bb9571d6;
							};
						}
						_iter_next_1bb9581d7:;
						++it;
						goto _iter_begin_1bb9581d7;
					}
					_iter_end_1bb9581d7:;
				};
				_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type7)}));
				return false;;
			}
			_iter_next_1bb9571d6:;
			++it;
			_11914_i++;
			goto _iter_begin_1bb9571d6;
		}
		_iter_end_1bb9571d6:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abab6d4a_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abab917c_IsTraitImpl(_1abab8c81_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);;
}



inline jule::Bool _1abab93e1_IsStructImpl(_1abab8c81_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abab8c81_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ababdcdb_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ababe1d7_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ababe4c3_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ababe847_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ababeb33_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abac044c_IsWhileNext(_1abac00a6_WhileIter* _self_) {
	return ((*_self_)._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abac00a6_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abac098b_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abac0d87_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abac123e_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abac152a_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abac1816_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abac1bbd_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abac2141_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abac24e8_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abac3043_IsGenericTypeMatch(_1abac2a37_Match* _self_) {
	return (((*_self_)._field_TypeMatch && ((*_self_)._field_Expr != nullptr)) && (*_self_)._field_Expr.get()._field_Kind.get()._field_Generic);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abac2a37_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abac384b_isDefault(_1abac3582_Case* _self_) {
	return ((*_self_)._field_Exprs == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abac3582_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abac3b37_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abac3eab_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abac45b6_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abac4a39_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abac5cd2_FindPackage(_1abac584d_scopeChecker* _self_, jule::Str _45430_ident) {
	return _1abc56517_FindPackage((*_self_)._field_s.ptr(), _45430_ident);;
}



inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abac60e0_SelectPackage(_1abac584d_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)> _46432_selector) {
	return _1abc56825_SelectPackage((*_self_)._field_s.ptr(), _46432_selector);;
}



inline jule::Ptr<_1abc73ee6_Var> _1abac6497_FindVar(_1abac584d_scopeChecker* _self_, jule::Str _47526_ident, jule::Bool _47538_cpp_linked) {
	;
	jule::Ptr<_1abc73ee6_Var> _47817_v = _1abcb94c0_findVar((*_self_)._field_table.ptr(), _47526_ident,_47538_cpp_linked,true);;
	if ((_47817_v != nullptr)) {
		return _47817_v;;
	};
	jule::Ptr<_1abac584d_scopeChecker> _48317_parent = (*_self_)._field_parent;;
	while ((_48317_parent != nullptr)) {
		{
			_47817_v=_1abcb94c0_findVar(_48317_parent.get()._field_table.ptr(), _47526_ident,_47538_cpp_linked,true);
			if ((_47817_v != nullptr)) {
				return _47817_v;;
			};
			_48317_parent=_48317_parent.get()._field_parent;
		}
	_iter_next_1bb982310:;
	}
	_iter_end_1bb982310:;;
	return _1abc56bcc_FindVar((*_self_)._field_s.ptr(), _47526_ident,_47538_cpp_linked);;
}



inline jule::Ptr<_1abce6ce4_TypeAlias> _1abac684e_FindTypeAlias(_1abac584d_scopeChecker* _self_, jule::Str _50232_ident, jule::Bool _50244_cppLinked) {
	;
	jule::Ptr<_1abce6ce4_TypeAlias> _50517_ta = _1abcb9921_findTypeAlias((*_self_)._field_table.ptr(), _50232_ident,_50244_cppLinked,true);;
	if ((_50517_ta != nullptr)) {
		return _50517_ta;;
	};
	jule::Ptr<_1abac584d_scopeChecker> _51017_parent = (*_self_)._field_parent;;
	while ((_51017_parent != nullptr)) {
		{
			_50517_ta=_1abcb9921_findTypeAlias(_51017_parent.get()._field_table.ptr(), _50232_ident,_50244_cppLinked,true);
			if ((_50517_ta != nullptr)) {
				return _50517_ta;;
			};
			_51017_parent=_51017_parent.get()._field_parent;
		}
	_iter_next_1bb985005:;
	}
	_iter_end_1bb985005:;;
	return _1abc57084_FindTypeAlias((*_self_)._field_s.ptr(), _50232_ident,_50244_cppLinked);;
}



inline jule::Ptr<_1ab08a1a9_Struct> _1abac6c06_FindStruct(_1abac584d_scopeChecker* _self_, jule::Str _52729_ident, jule::Bool _52741_cppLinked) {
	return _1abc5743b_FindStruct((*_self_)._field_s.ptr(), _52729_ident,_52741_cppLinked);;
}



inline jule::Ptr<_1aba9e1c8_Fn> _1abac70ad_FindFn(_1abac584d_scopeChecker* _self_, jule::Str _53625_ident, jule::Bool _53637_cppLinked) {
	return _1abc577e3_FindFn((*_self_)._field_s.ptr(), _53625_ident,_53637_cppLinked);;
}



inline jule::Ptr<_1abab10ca_Trait> _1abac73bb_FindTrait(_1abac584d_scopeChecker* _self_, jule::Str _54528_ident) {
	return _1abc57b01_FindTrait((*_self_)._field_s.ptr(), _54528_ident);;
}



inline jule::Ptr<_1abab3220_Enum> _1abac76c9_FindEnum(_1abac584d_scopeChecker* _self_, jule::Str _55427_ident) {
	return _1abc57e0e_FindEnum((*_self_)._field_s.ptr(), _55427_ident);;
}



inline jule::Ptr<_1abab481a_TypeEnum> _1abac79d7_FindTypeEnum(_1abac584d_scopeChecker* _self_, jule::Str _56331_ident) {
	return _1abc5821c_FindTypeEnum((*_self_)._field_s.ptr(), _56331_ident);;
}



inline jule::Bool _1abac7d17_isUnsafe(jule::Ptr<_1abac584d_scopeChecker> _self_) {
	jule::Ptr<_1abac584d_scopeChecker> _57117_scope = _self_;;
	_julec_label_iter:;
	if (_57117_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_57117_scope.get()._field_parent != nullptr)) {
		_57117_scope=_57117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1abac807b_isRoot(_1abac584d_scopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));;
}



inline void _1abac8257_stop(_1abac584d_scopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1abac84bb_stopped(_1abac584d_scopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);;
}



inline jule::Bool _1abac8730_isDeferred(jule::Ptr<_1abac584d_scopeChecker> _self_) {
	jule::Ptr<_1abac584d_scopeChecker> _60417_scope = _self_;;
	_julec_label_iter:;
	if (_60417_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_60417_scope.get()._field_parent != nullptr)) {
		_60417_scope=_60417_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1abac584d_scopeChecker> _1abac8994_getRoot(jule::Ptr<_1abac584d_scopeChecker> _self_) {
	jule::Ptr<_1abac584d_scopeChecker> _62217_root = _self_;;
	while (((_62217_root.get()._field_parent != nullptr) && (_62217_root.get()._field_owner == nullptr))) {
		{
			_62217_root=_62217_root.get()._field_parent;
		}
	_iter_next_1bb98e65d:;
	}
	_iter_end_1bb98e65d:;;
	return _62217_root;;
}



inline jule::Ptr<_1abac584d_scopeChecker> _1abac8c08_getHardRoot(jule::Ptr<_1abac584d_scopeChecker> _self_) {
	jule::Ptr<_1abac584d_scopeChecker> _63217_root = _self_;;
	while ((_63217_root.get()._field_parent != nullptr)) {
		{
			_63217_root=_63217_root.get()._field_parent;
		}
	_iter_next_1bb9908b2:;
	}
	_iter_end_1bb9908b2:;;
	return _63217_root;;
}



inline jule::Ptr<_1abac152a_Label> _1abac9016_findLabel(_1abac584d_scopeChecker* _self_, jule::Str _64228_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1bb99141d:;
		if (it != expr.end()) {
			jule::Any _64321_st = *it;
			{
				{
					auto &_match_expr{ _64321_st };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1bb996cb4:;
						{
							jule::Ptr<_1abac152a_Label> _64625_label = _64321_st.cast_ptr<_1abac152a_Label>(&__jule_any_type22);;
							if ((_64625_label.get()._field_Ident == _64228_ident)) {
								return _64625_label;;
							};
						}
					}
					_match_end_1bb996c1a:;
				};
			}
			_iter_next_1bb99141d:;
			++it;
			goto _iter_begin_1bb99141d;
		}
		_iter_end_1bb99141d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abac45b6_scopeLabel> _1abac9324_findLabelScope(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Str _65834_ident) {
	jule::Ptr<_1abac45b6_scopeLabel> _65917_label = _1abac9632_findLabelAll(_self_.ptr(), _65834_ident);;
	if (((_65917_label != nullptr) && (_65917_label.get()._field_scope == _self_))) {
		return _65917_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1abac45b6_scopeLabel> _1abac9632_findLabelAll(_1abac584d_scopeChecker* _self_, jule::Str _67031_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1bb99902a:;
		if (it != expr.end()) {
			jule::Ptr<_1abac45b6_scopeLabel> _67121_lbl = *it;
			{
				if ((_67121_lbl.get()._field_label.get()._field_Ident == _67031_ident)) {
					return _67121_lbl;;
				};
			}
			_iter_next_1bb99902a:;
			++it;
			goto _iter_begin_1bb99902a;
		}
		_iter_end_1bb99902a:;
	};
	return nullptr;;
}



inline jule::Bool _1abac99d9_isDuplicatedIdent(_1abac584d_scopeChecker* _self_, jule::Uintptr _68236_itself, jule::Str _68253_ident) {
	jule::Ptr<_1abc73ee6_Var> _68313_v = _1abac6497_FindVar(&(*_self_), _68253_ident,false);;
	if (((_68313_v != nullptr) && (static_cast<jule::Uintptr>(_68313_v) != _68236_itself))) {
		if ((_68313_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_v.get()._field_Scope == (*_self_)._field_scope) || (!(_1abc5856e_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1abce6ce4_TypeAlias> _69113_ta = _1abac684e_FindTypeAlias(&(*_self_), _68253_ident,false);;
	if (((_69113_ta != nullptr) && (static_cast<jule::Uintptr>(_69113_ta) != _68236_itself))) {
		if ((_69113_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_69113_ta.get()._field_Scope == (*_self_)._field_tree) || (!(_1abc5856e_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1abac9c5e_checkVarDecl(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab081425_VarDecl> _70236_decl) {
	jule::Ptr<_1abc73ee6_Var> _70317_v = _1abaa9a63_buildVar(_70236_decl);;
	_70317_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70317_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_70317_v, &__jule_any_type10));;
	});;
	if (_1abac99d9_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70317_v)),_70317_v.get()._field_Ident)) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _70317_v.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70317_v.get()._field_Ident, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1abac8257_stop(_self_.ptr());
		return;;
	};
	_1abc6834d_checkVarDecl(_self_.get()._field_s, _70317_v,jule::Trait<_1abd13959_Lookup>(_self_, 0));
	if (((!(_1abc74623_IsTypeInferred(_70317_v.ptr()))) && ((_70317_v.get()._field_Kind == nullptr) || (_70317_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1abc6b98e_checkTypeVar(_self_.get()._field_s, _70317_v,jule::Trait<_1abd13959_Lookup>(_self_, 0));
}



inline void _1abac9ed4_checkTypeAliasDecl(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab084c86_TypeAliasDecl> _72642_decl) {
	jule::Ptr<_1abce6ce4_TypeAlias> _72717_ta = _1abaa6a3d_buildTypeAlias(_72642_decl);;
	if (_1abac99d9_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72717_ta)),_72717_ta.get()._field_Ident)) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _72717_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72717_ta.get()._field_Ident, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1abac8257_stop(_self_.ptr());
		return;;
	};
	_1abc64190_checkTypeAliasDecl(_self_.get()._field_s, _72717_ta,jule::Trait<_1abd13959_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72717_ta);;
	if ((_72717_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1abac8257_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1ababdcdb_Scope> _1abaca248_getChild(_1abac584d_scopeChecker* _self_) {
	return jule::new_ptr<_1ababdcdb_Scope>(_1ababdcdb_Scope{._field_Parent=(*_self_)._field_scope, });;
}



inline void _1abaca611_checkChildSsc(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab07d950_ScopeTree>& _75038_tree, jule::Ptr<_1ababdcdb_Scope>& _75061_s, jule::Ptr<_1abac584d_scopeChecker>& _75077_ssc) {
	_75077_ssc.get()._field_parent=_self_;
	_1abad564e_check(_75077_ssc, _75038_tree,_75061_s);
}



inline jule::Ptr<_1ababdcdb_Scope> _1abaca9b8_checkChildSc(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab07d950_ScopeTree>& _75537_tree, jule::Ptr<_1abac584d_scopeChecker>& _75560_ssc) {
	jule::Ptr<_1ababdcdb_Scope> _75617_s = _1abaca248_getChild(_self_.ptr());;
	_1abaca611_checkChildSsc(_self_, _75537_tree,_75617_s,_75560_ssc);
	return _75617_s;;
}



inline jule::Ptr<_1ababdcdb_Scope> _1abacacc6_checkChild(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab07d950_ScopeTree>& _76135_tree) {
	jule::Ptr<_1abac584d_scopeChecker> _76217_ssc = _1abad58b3_newChildChecker(_self_);;
	return _1abaca9b8_checkChildSc(_self_, _76135_tree,_76217_ssc);;
}



inline void _1abacb04b_checkAnonScope(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab07d950_ScopeTree> _76638_tree) {
	jule::Ptr<_1ababdcdb_Scope> _76717_s = _1abacacc6_checkChild(_self_, _76638_tree);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_76717_s, &__jule_any_type23));;
}



inline void _1abacb36a_processErrorCall(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1aba9a290_BuiltinErrorCallExprModel>& _77141_m, jule::Ptr<_1a97237bc_Token> _77172_err) {
	if (_1abac8730_isDeferred(_self_)) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _77172_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abac584d_scopeChecker> _77617_root = _1abac8994_getRoot(_self_);;
	if ((!(_77617_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _77172_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1abc58ecb_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77141_m.get()._field_Func=_77617_root.get()._field_owner;
}



inline void _1abacb5e0_checkExpr(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab072ed8_Expr> _78433_expr) {
	jule::Ptr<_1abcbd5c3_Eval> _78517_eval = _1abc60598_eval(_self_.get()._field_s, jule::Trait<_1abd13959_Lookup>(_self_, 0));;
	_78517_eval.get()._field_ignored=true;
	jule::Ptr<_1abcbba55_Data> _78717_d = _1abcd8ee5_evalExpr(_78517_eval, _78433_expr);;
	if ((_78717_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78717_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bb9b01a6:;
			{
				jule::Ptr<_1aba9a290_BuiltinErrorCallExprModel> _79421_m = _78717_d.get()._field_Model.cast_ptr<_1aba9a290_BuiltinErrorCallExprModel>(&__jule_any_type24);;
				_1abacb36a_processErrorCall(_self_, _79421_m,_78433_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type25));;
			}
		}
		else if (_match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35 || _match_expr.type == &__jule_any_type36) {
			_case_begin_1bb9b03d7:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type25));;
			}
		}
		else {
			_case_begin_1bb9b0371:;
			{
				_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _78433_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1bb9b031b:;
	};
}



inline jule::Ptr<_1ababe1d7_If> _1abacb8ed_checkIf(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab083c85_If> _81431_i) {
	jule::Ptr<_1ababdcdb_Scope> _81517_s = _1abacacc6_checkChild(_self_, _81431_i.get()._field_Scope);;
	jule::Ptr<_1abcbba55_Data> _81717_d = _1abcd8ee5_evalExpr(_1abc60598_eval(_self_.get()._field_s, jule::Trait<_1abd13959_Lookup>(_self_, 0)), _81431_i.get()._field_Expr);;
	if ((_81717_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abcec734_Prim> _82217_prim = _1abce9d6e_Prim(_81717_d.get()._field_Kind.ptr());;
	if (((_82217_prim == nullptr) || (!(_1abd00704_IsBool(_82217_prim.ptr()))))) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _81431_i.get()._field_Expr.get()._field_Token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ababe1d7_If>(_1ababe1d7_If{._field_Expr=_81717_d.get()._field_Model, ._field_Scope=_81517_s});;
}



inline jule::Ptr<_1ababe4c3_Else> _1abacbc0b_checkElse(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab08413c_Else> _83433_e) {
	return jule::new_ptr<_1ababe4c3_Else>(_1ababe4c3_Else{._field_Scope=_1abacacc6_checkChild(_self_, _83433_e.get()._field_Scope)});;
}



inline void _1abacbe81_checkConditional(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab0845b0_Conditional> _84040_conditional) {
	jule::Ptr<_1ababe847_Conditional> _84117_c = jule::new_ptr<_1ababe847_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_84117_c, &__jule_any_type37));;
	_84117_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1ababe1d7_If>>::alloc(0LL, (_84040_conditional.get()._field_Tail.len() + 1LL));
	_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_1abacb8ed_checkIf(_self_, _84040_conditional.get()._field_Head));;
	{
		auto &expr = _84040_conditional.get()._field_Tail;
		auto it = expr.begin();
		_iter_begin_1bb9b8522:;
		if (it != expr.end()) {
			jule::Ptr<_1ab083c85_If> _84721_elif = *it;
			{
				_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_1abacb8ed_checkIf(_self_, _84721_elif));;
			}
			_iter_next_1bb9b8522:;
			++it;
			goto _iter_begin_1bb9b8522;
		}
		_iter_end_1bb9b8522:;
	};
	if ((_84040_conditional.get()._field_Default != nullptr)) {
		_84117_c.get()._field_Default=_1abacbc0b_checkElse(_self_, _84040_conditional.get()._field_Default);
	};
}



inline void _1abacc3e3_checkIterScopeSsc(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Uintptr _85637_it, jule::Ptr<_1ab07d950_ScopeTree> _85654_tree, jule::Ptr<_1ababdcdb_Scope>& _85677_s, jule::Ptr<_1abac584d_scopeChecker> _85692_ssc) {
	_85692_ssc.get()._field_it=_85637_it;
	_1abaca611_checkChildSsc(_self_, _85654_tree,_85677_s,_85692_ssc);
}



inline jule::Ptr<_1ababdcdb_Scope> _1abacc844_checkIterScopeSc(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Uintptr _86136_it, jule::Ptr<_1ab07d950_ScopeTree> _86153_tree, jule::Ptr<_1abac584d_scopeChecker> _86175_ssc) {
	jule::Ptr<_1ababdcdb_Scope> _86217_scope = _1abaca248_getChild(_self_.ptr());;
	_1abacc3e3_checkIterScopeSsc(_self_, _86136_it,_86153_tree,_86217_scope,_86175_ssc);
	return _86217_scope;;
}



inline jule::Ptr<_1ababdcdb_Scope> _1abaccbeb_checkIterScope(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Uintptr _86734_it, jule::Ptr<_1ab07d950_ScopeTree>& _86752_tree) {
	jule::Ptr<_1abac584d_scopeChecker> _86817_ssc = _1abad58b3_newChildChecker(_self_);;
	return _1abacc844_checkIterScopeSc(_self_, _86734_it,_86752_tree,_86817_ssc);;
}



inline void _1abacce71_checkInfIter(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab081e3c_Iter>& _87237_it) {
	jule::Ptr<_1ababeb33_InfIter> _87317_kind = jule::new_ptr<_1ababeb33_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_87317_kind, &__jule_any_type38));;
	_87317_kind.get()._field_Scope=_1abaccbeb_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87317_kind)),_87237_it.get()._field_Scope);
}



inline void _1abacd1e6_checkWhileIter(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab081e3c_Iter>& _87839_it) {
	jule::Ptr<_1ab082712_WhileKind> _87917_wh = _87839_it.get()._field_Kind.cast_ptr<_1ab082712_WhileKind>(&__jule_any_type39);;
	if (((_87917_wh.get()._field_Expr == nullptr) && (_87917_wh.get()._field_Next == nullptr))) {
		_1abacce71_checkInfIter(_self_, _87839_it);
		return;;
	};
	jule::Ptr<_1abac00a6_WhileIter> _88517_kind = jule::new_ptr<_1abac00a6_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_88517_kind, &__jule_any_type40));;
	_88517_kind.get()._field_Scope=_1abaccbeb_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_88517_kind)),_87839_it.get()._field_Scope);
	if ((_87917_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1abcbba55_Data> _89021_d = _1abcd8ee5_evalExpr(_1abc60598_eval(_self_.get()._field_s, jule::Trait<_1abd13959_Lookup>(_self_, 0)), _87917_wh.get()._field_Expr);;
		if ((_89021_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1abcec734_Prim> _89517_prim = _1abce9d6e_Prim(_89021_d.get()._field_Kind.ptr());;
		if ((_89517_prim == nullptr)) {
			_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _87839_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1abd00704_IsBool(_89517_prim.ptr())))) {
			_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _87839_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_88517_kind.get()._field_Expr=_89021_d.get()._field_Model;
	};
	if (_1ab082a64_IsWhileNext(_87917_wh.ptr())) {
		if ((!(_1ababd318_isValidAstStForNextSt(_87917_wh.get()._field_Next)))) {
			_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _91517_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1abad43ea_checkNode(_self_, _87917_wh.get()._field_Next);
		if ((_91517_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91825_st = _self_.get()._field_scope.get()._field_Stmts[_91517_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL,_91517_n);
			if ((!(_1ababd5b0_isValidStForNextSt(_91825_st)))) {
				_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_88517_kind.get()._field_Next=_91825_st;
		};
	};
}



inline void _1abacd46b_checkRangeIter(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab081e3c_Iter>& _92839_it) {
	jule::Ptr<_1ab0830a3_RangeKind> _92917_rang = _92839_it.get()._field_Kind.cast_ptr<_1ab0830a3_RangeKind>(&__jule_any_type41);;
	jule::Ptr<_1abcbba55_Data> _93117_d = _1abcd8ee5_evalExpr(_1abc60598_eval(_self_.get()._field_s, jule::Trait<_1abd13959_Lookup>(_self_, 0)), _92917_rang.get()._field_Expr);;
	if ((_93117_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1abac098b_RangeIter> _93617_kind = jule::new_ptr<_1abac098b_RangeIter>(_1abac098b_RangeIter{._field_Expr=_93117_d, });;
	_1abcb2cd2_rangeChecker _94017_rc = _1abcb2cd2_rangeChecker{._field_sc=_self_, ._field_rang=_92917_rang, ._field_Kind=_93617_kind, ._field_d=_93117_d};;
	jule::Bool _94613_ok = _1abcb4696_check(&_94017_rc);;
	if ((!(_94613_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_93617_kind, &__jule_any_type42));;
	jule::Ptr<_1abac584d_scopeChecker> _95317_ssc = _1abad58b3_newChildChecker(_self_);;
	jule::Ptr<_1ababdcdb_Scope> _95417_scope = _1abaca248_getChild(_self_.ptr());;
	if ((_93617_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1abc5856e_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1abac99d9_isDuplicatedIdent(_self_.ptr(), 0LLU,_93617_kind.get()._field_KeyA.get()._field_Ident))) {
			_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyA.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type7)}));
			_1abc58ecb_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyA.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyA);;
	};
	if ((_93617_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1abc5856e_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1abac99d9_isDuplicatedIdent(_self_.ptr(), 0LLU,_93617_kind.get()._field_KeyB.get()._field_Ident))) {
			_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyB.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type7)}));
			_1abc58ecb_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyB.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyB);;
	};
	_1abacc3e3_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_93617_kind)),_92839_it.get()._field_Scope,_95417_scope,_95317_ssc);
	_93617_kind.get()._field_Scope=_95417_scope;
}



inline void _1abacd6e1_checkIter(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab081e3c_Iter> _97833_it) {
	if (_1ab08228e_IsInf(_97833_it.ptr())) {
		_1abacce71_checkInfIter(_self_, _97833_it);
		return;;
	};
	{
		auto &_match_expr{ _97833_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1bb9d5e46:;
			{
				_1abacd1e6_checkWhileIter(_self_, _97833_it);
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bb9d5396:;
			{
				_1abacd46b_checkRangeIter(_self_, _97833_it);
			}
		}
		else {
			_case_begin_1bb9d5231:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1bb9d51ba:;
	};
}



inline jule::Bool _1abacd9ee_checkValidContLabel(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Uintptr _99439_it) {
	jule::Ptr<_1abac584d_scopeChecker> _99517_scope = _self_;;
	_julec_label_iter:;
	if ((_99517_scope.get()._field_it == _99439_it)) {
		return true;;
	};
	if ((_99517_scope.get()._field_parent != nullptr)) {
		_99517_scope=_99517_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1abacdd0c_checkValidBreakLabel(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Uintptr _101040_ptr) {
	jule::Ptr<_1abac584d_scopeChecker> _101117_scope = _self_;;
	_julec_label_iter:;
	if ((_101117_scope.get()._field_it == _101040_ptr)) {
		return true;;
	};
	if ((_101117_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _101917_mtch = static_cast<jule::Uintptr>(((_1abac3582_Case*)(_101117_scope.get()._field_cse))->_field_Owner);;
		if ((_101917_mtch == _101040_ptr)) {
			return true;;
		};
	};
	if ((_101117_scope.get()._field_parent != nullptr)) {
		_101117_scope=_101117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1abac0d87_ContSt> _1abace11a_checkContValidScope(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab083812_ContSt> _103339_c) {
	if (_1abac8730_isDeferred(_self_)) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_103339_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1abac0d87_ContSt>();;
	};
	jule::Ptr<_1abac584d_scopeChecker> _104317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_104317_scope.get()._field_it == 0LLU) && (_104317_scope.get()._field_parent != nullptr)) && (_104317_scope.get()._field_owner == nullptr))) {
			_case_begin_1bb9dd27d:;
			{
				_104317_scope=_104317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_104317_scope.get()._field_it != 0LLU)) {
			_case_begin_1bb9dd305:;
			{
				return jule::new_ptr<_1abac0d87_ContSt>(_1abac0d87_ContSt{._field_It=_104317_scope.get()._field_it});;
			}
		}
		_match_end_1bb9dd1c3:;
	};
	_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1abace390_checkCont(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab083812_ContSt> _105729_c) {
	jule::Ptr<_1abac0d87_ContSt> _105817_cont = _1abace11a_checkContValidScope(_self_, _105729_c);;
	if ((_105817_cont == nullptr)) {
		return;;
	};
	if ((_105729_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1abac45b6_scopeLabel> _106421_label = _1ababb4e2_findLabelParent(_105729_c.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
		if ((_106421_label == nullptr)) {
			_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
			return;;
		};
		_106421_label.get()._field_used=true;
		if (((_106421_label.get()._field_pos + 1LL) >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
			return;;
		};
		jule::I64 _107717_i = (_106421_label.get()._field_pos + 1LL);;
		if ((_107717_i >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _108125_st = _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_107717_i];;
			{
				auto &_match_expr{ _108125_st };
				
				if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1bb9e5197:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1ababeb33_InfIter>(&__jule_any_type38)));
					}
				}
				else if (_match_expr.type == &__jule_any_type42) {
					_case_begin_1bb9e6b27:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1abac098b_RangeIter>(&__jule_any_type42)));
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1bb9e6b8d:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1abac00a6_WhileIter>(&__jule_any_type40)));
					}
				}
				else {
					_case_begin_1bb9e69a1:;
					{
						_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
					}
				}
				_match_end_1bb9e693a:;
			};
		};
	};
	if ((_105817_cont.get()._field_It != 0LLU)) {
		if ((!(_1abacd9ee_checkValidContLabel(_self_, _105817_cont.get()._field_It)))) {
			_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_105817_cont, &__jule_any_type43));;
}



inline void _1abace615_checkLabel(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab07b167_LabelSt> _110434_l) {
	if ((_1abac9016_findLabel(_self_.ptr(), _110434_l.get()._field_Ident) != nullptr)) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _110434_l.get()._field_Token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_110434_l.get()._field_Ident, &__jule_any_type7)}));
		return;;
	};
	jule::Ptr<_1abac152a_Label> _111017_label = jule::new_ptr<_1abac152a_Label>(_1abac152a_Label{._field_Ident=_110434_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_111017_label, &__jule_any_type22));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1abac45b6_scopeLabel>>::make({jule::new_ptr<_1abac45b6_scopeLabel>(_1abac45b6_scopeLabel{._field_token=_110434_l.get()._field_Token, ._field_label=_111017_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1abace88a_pushGoto(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab07b51e_GotoSt> _112332_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1abac1816_GotoSt>(_1abac1816_GotoSt{._field_Ident=_112332_gt.get()._field_Label.get()._field_Kind}), &__jule_any_type44));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1abac4a39_scopeGoto>>::make({jule::new_ptr<_1abac4a39_scopeGoto>(_1abac4a39_scopeGoto{._field_gt=_112332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _1abaceb10_checkPostfix(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab07c454_AssignSt> _113536_a) {
	if ((_113536_a.get()._field_Left.len() > 1LL)) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab072ed8_Expr> _114117_expr = _113536_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1abcbba55_Data> _114217_d = _1abcd8ee5_evalExpr(_1abc60598_eval(_self_.get()._field_s, jule::Trait<_1abd13959_Lookup>(_self_, 0)), _114117_expr);;
	if ((_114217_d == nullptr)) {
		return;;
	};
	_1ababd071_checkAssign(_self_.get()._field_s,_114217_d,nullptr,_113536_a.get()._field_Setter);
	if ((_1abcea347_Ptr(_114217_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1abd0452c_Ptr> _115021_ptr = _1abcea347_Ptr(_114217_d.get()._field_Kind.ptr());;
		if (_1abd05000_IsUnsafe(_115021_ptr.ptr())) {
			_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
			return;;
		};
	} else {
		if (((_1abce9d6e_Prim(_114217_d.get()._field_Kind.ptr()) == nullptr) || (!(_1aba86930_IsNum(_1abce9d6e_Prim(_114217_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1abac1bbd_Postfix>(_1abac1bbd_Postfix{._field_Expr=_114217_d.get()._field_Model, ._field_Op=_113536_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type45));;
}



inline jule::Bool _1abacee1d_isNewAssignIdent(_1abac584d_scopeChecker* _self_, jule::Str _116835_ident) {
	if ((_1a9726061_IsIgnoreIdent(_116835_ident) || _116835_ident.empty())) {
		return false;;
	};
	return (_1abcb9cc8_defByIdent((*_self_)._field_table.ptr(), _116835_ident,false) == nullptr);;
}



inline jule::Bool _1abad036e_checkStructureAssignOp(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab08a583_StructIns>& _117547_s, jule::Ptr<_1ab07c454_AssignSt>& _117567_a, jule::Ptr<_1abcbba55_Data>& _117586_r) {
	jule::Ptr<_1abaa1d79_FnIns> _117817_overload = nullptr;;
	{
		auto &_match_expr{ _117567_a.get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1bba08e8b:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1bba0a388:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1bba0a3ee:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1bba0a465:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1bba09442:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1bba094a8:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1bba0951e:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1bba09585:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1bba0a652:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1bba0a6b8:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1bba093cb:;
			{
				_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _117567_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117567_a.get()._field_Setter.get()._field_Kind, &__jule_any_type7),jule::Any(_1ab060dd8_Str(_117547_s.ptr()), &__jule_any_type7)}));
				return false;;
			}
		}
		_match_end_1bba08cc1:;
	};
	if ((_117817_overload == nullptr)) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _117567_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117567_a.get()._field_Setter.get()._field_Kind, &__jule_any_type7),jule::Any(_1ab060dd8_Str(_117547_s.ptr()), &__jule_any_type7)}));
		return false;;
	};
	jule::Ptr<_1abaa0eaa_ParamIns> _121017_p = _117817_overload.get()._field_Params[1LL];;
	return _1abc60a93_checkAssignType(_self_.get()._field_s, _121017_p.get()._field_Decl.get()._field_Reference,_121017_p.get()._field_Kind,_117586_r,_117567_a.get()._field_Setter);;
}



inline void _1abad05e4_checkSingleAssign(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab07c454_AssignSt>& _121442_a) {
	jule::Ptr<_1abcbba55_Data> _121517_l = nullptr;;
	if ((!(_1a9726061_IsIgnoreIdent(_121442_a.get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1ab072ed8_Expr> _121821_expr = _121442_a.get()._field_Left[0LL].get()._field_Expr;;
		_121517_l=_1abcd8ee5_evalExpr(_1abc60598_eval(_self_.get()._field_s, jule::Trait<_1abd13959_Lookup>(_self_, 0)), _121821_expr);
		if ((_121517_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1abcbd5c3_Eval> _122517_eval = nullptr;;
	if ((_121517_l != nullptr)) {
		_122517_eval=_1abc6028a_evalp(_self_.get()._field_s, jule::Trait<_1abd13959_Lookup>(_self_, 0),_121517_l.get()._field_Kind);
	} else {
		_122517_eval=_1abc60598_eval(_self_.get()._field_s, jule::Trait<_1abd13959_Lookup>(_self_, 0));
	};
	_122517_eval.get()._field_unsafety=_1abac7d17_isUnsafe(_self_);
	jule::Ptr<_1abcbba55_Data> _123217_r = _1abcd8ee5_evalExpr(_122517_eval, _121442_a.get()._field_Right);;
	if ((_123217_r == nullptr)) {
		return;;
	};
	if ((_121517_l == nullptr)) {
		if (_1abce8b81_Void(_123217_r.get()._field_Kind.ptr())) {
			_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _121442_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_123217_r, &__jule_any_type25));;
		return;;
	};
	if ((!(_1ababd071_checkAssign(_self_.get()._field_s,_121517_l,_123217_r,_121442_a.get()._field_Setter)))) {
		return;;
	};
	if ((_1abceba0d_Tup(_123217_r.get()._field_Kind.ptr()) != nullptr)) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _121442_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aba90928_OperandExprModel> _125417_lm = jule::new_ptr<_1aba90928_OperandExprModel>(_1aba90928_OperandExprModel{._field_Kind=_121517_l.get()._field_Kind, ._field_Model=_121517_l.get()._field_Model});;
	jule::Ptr<_1aba90928_OperandExprModel> _125817_rm = jule::new_ptr<_1aba90928_OperandExprModel>(_1aba90928_OperandExprModel{._field_Kind=_123217_r.get()._field_Kind, ._field_Model=_123217_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1abac2141_Assign>(_1abac2141_Assign{._field_L=_125417_lm, ._field_R=_125817_rm, ._field_Op=_121442_a.get()._field_Setter}), &__jule_any_type46));;
	if ((_121442_a.get()._field_Setter.get()._field_Kind != jule::Str("=", 1))) {
		jule::Ptr<_1ab08a583_StructIns> _126521_strct = _1abceb2c1_Struct(_121517_l.get()._field_Kind.ptr());;
		if ((_126521_strct != nullptr)) {
			_1abad036e_checkStructureAssignOp(_self_, _126521_strct,_121442_a,_123217_r);
			return;;
		};
		_121442_a.get()._field_Setter.get()._field_Kind=_121442_a.get()._field_Setter.get()._field_Kind.slice(0LL,(_121442_a.get()._field_Setter.get()._field_Kind.len() - 1LL));
		_1abcdb206_binaryEval _127221_solver = static__1abcdbb1e_new(_122517_eval,_121442_a.get()._field_Setter);;
		_123217_r=_1abce197b_solveExplicit(&_127221_solver, _121517_l,_123217_r);
		if ((_123217_r == nullptr)) {
			return;;
		};
		_121442_a.get()._field_Setter.get()._field_Kind+=jule::Str("=", 1);
		return;;
	};
	_1abca7447_assignTypeChecker _128117_checker = _1abca7447_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_121517_l.get()._field_Kind, ._field_d=_123217_r, ._field_errorToken=_121442_a.get()._field_Setter};;
	if (_1abca85be_check(&_128117_checker)) {
		_125817_rm.get()._field_Model=_123217_r.get()._field_Model;
		_125417_lm.get()._field_Model=_121517_l.get()._field_Model;
	};
}



inline void _1abad0b22_processEndPartOfMultiAssign(_1abac584d_scopeChecker* _self_, jule::Ptr<_1abac24e8_MultiAssign>& _129351_st, jule::Ptr<_1ab07c454_AssignSt>& _129414_a, jule::Ptr<_1ab07be15_AssignLeft>& _129433_lexpr, jule::Ptr<_1abcbba55_Data>& _129458_l, jule::Ptr<_1abcbba55_Data>& _129473_r) {
	if (_1a9726061_IsIgnoreIdent(_129433_lexpr.get()._field_Ident)) {
		if (_1abce8b81_Void(_129473_r.get()._field_Kind.ptr())) {
			_1abc58bac_pushErr((*_self_)._field_s.ptr(), _129414_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_129351_st.get()._field_L = jule::alloc_for_append(_129351_st.get()._field_L,1);_129351_st.get()._field_L.__push(nullptr);;
		return;;
	};
	if ((_129414_a.get()._field_Declarative && _1abacee1d_isNewAssignIdent(&(*_self_), _129433_lexpr.get()._field_Ident))) {
		if (_1abac99d9_isDuplicatedIdent(&(*_self_), 0LLU,_129433_lexpr.get()._field_Ident)) {
			_1abc58bac_pushErr((*_self_)._field_s.ptr(), _129433_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129433_lexpr.get()._field_Ident, &__jule_any_type7)}));
			_1abc58ecb_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1abac8257_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1abc73ee6_Var> _131221_v = jule::new_ptr<_1abc73ee6_Var>(_1abc73ee6_Var{._field_Scope=(*_self_)._field_scope, ._field_Token=_129433_lexpr.get()._field_Token, ._field_Ident=_129433_lexpr.get()._field_Ident, ._field_Mutable=_129433_lexpr.get()._field_Mutable, ._field_Reference=_129433_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_1abcbcacd_Value>(_1abcbcacd_Value{._field_Expr=_129414_a.get()._field_Right, ._field_Data=_129473_r}), });;
		_1abc6b670_checkVar((*_self_)._field_s, _131221_v);
		_131221_v.get()._field_Value=nullptr;
		_129351_st.get()._field_L = jule::alloc_for_append(_129351_st.get()._field_L,1);_129351_st.get()._field_L.__push(jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=_131221_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_131221_v.get()._field_Mutable, ._field_Reference=_131221_v.get()._field_Reference, ._field_Lvalue=(!(_131221_v.get()._field_Constant)), ._field_Model=jule::Any(_131221_v, &__jule_any_type10), }));;
		(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_131221_v);;
		(*_self_)._field_scope.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_Stmts,1);(*_self_)._field_scope.get()._field_Stmts.__push(jule::Any(_131221_v, &__jule_any_type10));;
		return;;
	};
	if ((_129433_lexpr.get()._field_Mutable || _129433_lexpr.get()._field_Reference)) {
		_1abc58bac_pushErr((*_self_)._field_s.ptr(), _129433_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129433_lexpr.get()._field_Ident, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1ababd071_checkAssign((*_self_)._field_s,_129458_l,_129473_r,_129414_a.get()._field_Setter)))) {
		return;;
	};
	;
	_1abc639a8_checkValidityForInitExpr((*_self_)._field_s, _129458_l.get()._field_Mutable,false,_129458_l.get()._field_Kind,_129473_r,_129414_a.get()._field_Setter);
	_1abca7447_assignTypeChecker _135517_checker = _1abca7447_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_129458_l.get()._field_Kind, ._field_d=_129473_r, ._field_errorToken=_129414_a.get()._field_Setter};;
	_1abca85be_check(&_135517_checker);
	_129351_st.get()._field_L = jule::alloc_for_append(_129351_st.get()._field_L,1);_129351_st.get()._field_L.__push(_129458_l);;
}



inline void _1abad0da8_checkMultiAssign(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab07c454_AssignSt>& _136541_a) {
	jule::Ptr<_1abcbba55_Data> _136617_rd = _1abcd8ee5_evalExpr(_1abc60598_eval(_self_.get()._field_s, jule::Trait<_1abd13959_Lookup>(_self_, 0)), _136541_a.get()._field_Right);;
	if ((_136617_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1abcbba55_Data>> _137017_right = _1ababc2a1_getDatasFromTupleData(_136617_rd);;
	if ((_137017_right.len() == 1LL)) {
		{
			auto &_match_expr{ _137017_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1bba2ad15:;
				{
					jule::Ptr<_1aba93585_IndexingExprModel> _137425_iem = _137017_right[0LL].get()._field_Model.cast_ptr<_1aba93585_IndexingExprModel>(&__jule_any_type47);;
					if ((_1abceb799_Map(_137425_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_137017_right=jule::Slice<jule::Ptr<_1abcbba55_Data>>::make({jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=_1abceb799_Map(_137425_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), })});
					};
				}
			}
			_match_end_1bba2acb0:;
		};
	};
	{
		
		if ((_136541_a.get()._field_Left.len() > _137017_right.len())) {
			_case_begin_1bba2b145:;
			{
				_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _136541_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_136541_a.get()._field_Left.len() < _137017_right.len())) {
			_case_begin_1bba2b1ab:;
			{
				_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _136541_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1bba2a50c:;
	};
	jule::Ptr<_1abac24e8_MultiAssign> _139317_st = jule::new_ptr<_1abac24e8_MultiAssign>(_1abac24e8_MultiAssign{._field_R=_136617_rd.get()._field_Model});;
	{
		auto &expr = _136541_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_1bba30468:;
		if (it != expr.end()) {
			jule::I64 _139613_i = it - expr.begin();
			{
				jule::Ptr<_1ab07be15_AssignLeft> _139721_lexpr = _136541_a.get()._field_Left[_139613_i];;
				jule::Ptr<_1abcbba55_Data> _139821_l = nullptr;;
				if (((!(_1a9726061_IsIgnoreIdent(_139721_lexpr.get()._field_Ident))) && ((!(_136541_a.get()._field_Declarative)) || (!(_1abacee1d_isNewAssignIdent(_self_.ptr(), _139721_lexpr.get()._field_Ident)))))) {
					_139821_l=_1abcd8ee5_evalExpr(_1abc60598_eval(_self_.get()._field_s, jule::Trait<_1abd13959_Lookup>(_self_, 0)), _139721_lexpr.get()._field_Expr);
					if ((_139821_l == nullptr)) {
						goto _iter_next_1bba30468;
					};
				};
				jule::Ptr<_1abcbba55_Data> _140621_r = _137017_right[_139613_i];;
				_1abad0b22_processEndPartOfMultiAssign(_self_.ptr(), _139317_st,_136541_a,_139721_lexpr,_139821_l,_140621_r);
			}
			_iter_next_1bba30468:;
			++it;
			_139613_i++;
			goto _iter_begin_1bba30468;
		}
		_iter_end_1bba30468:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_139317_st, &__jule_any_type48));;
}



inline void _1abad112d_checkAssignSt(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab07c454_AssignSt> _141237_a) {
	{
		
		if (_1a972810c_IsPostfixOp(_141237_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1bba345e3:;
			{
				_1abaceb10_checkPostfix(_self_, _141237_a);
			}
		}
		else if (((_141237_a.get()._field_Left.len() == 1LL) && (!(_141237_a.get()._field_Declarative)))) {
			_case_begin_1bba34a33:;
			{
				_1abad05e4_checkSingleAssign(_self_, _141237_a);
			}
		}
		else {
			_case_begin_1bba33c96:;
			{
				_1abad0da8_checkMultiAssign(_self_, _141237_a);
			}
		}
		_match_end_1bba33bca:;
	};
}



inline jule::Ptr<_1ababdcdb_Scope> _1abad14d5_checkCaseScope(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1abac3582_Case>& _142335_c, jule::Ptr<_1ab07d950_ScopeTree>& _142350_tree) {
	jule::Ptr<_1abac584d_scopeChecker> _142417_ssc = _1abad58b3_newChildChecker(_self_);;
	_142417_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_142335_c));
	return _1abaca9b8_checkChildSc(_self_, _142350_tree,_142417_ssc);;
}



inline jule::Ptr<_1abac3582_Case> _1abad19d0_checkCase(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1abac2a37_Match> _142933_m, jule::I64 _142944_i, jule::Ptr<_1ab085209_Case> _142956_c, jule::Ptr<_1abcbba55_Data> _142975_expr) {
	jule::Ptr<_1abac3582_Case> _143017_case = _142933_m.get()._field_Cases[_142944_i];;
	_143017_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1abcbba55_Data>>::alloc(0LL, _142956_c.get()._field_Exprs.len());
	jule::Bool _143217_genericMatched = false;;
	jule::Ptr<_1abcbd5c3_Eval> _143317_eval = _1abc60598_eval(_self_.get()._field_s, jule::Trait<_1abd13959_Lookup>(_self_, 0));;
	{
		auto &expr = _142956_c.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1bba394a5:;
		if (it != expr.end()) {
			jule::Ptr<_1ab072ed8_Expr> _143421_e = *it;
			{
				jule::Ptr<_1abcbba55_Data> _143521_d = _1abcd88c9_evalExprKind(_143317_eval, _143421_e.get()._field_Kind);;
				if ((_143521_d == nullptr)) {
					goto _iter_next_1bba394a5;
				};
				if (_142933_m.get()._field_TypeMatch) {
					_143017_case.get()._field_Exprs = jule::alloc_for_append(_143017_case.get()._field_Exprs,1);_143017_case.get()._field_Exprs.__push(_143521_d);;
					if ((_1ababc009_countMatchType(_142933_m,_143521_d.get()._field_Kind) > 1LL)) {
						_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _143421_e.get()._field_Token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_143521_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
					};
					if (_142975_expr.get()._field_Kind.get()._field_Generic) {
						_143217_genericMatched=(_143217_genericMatched || _1abce81e1_Equal(_142975_expr.get()._field_Kind, _143521_d.get()._field_Kind));
					} else {
						if ((_1abcea820_TypeEnum(_142975_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1abc60ee4_checkTypeCompatibility(_self_.get()._field_s, _142975_expr.get()._field_Kind,_143521_d.get()._field_Kind,_143421_e.get()._field_Token);
						} else {
							jule::Ptr<_1abab10ca_Trait> _145029_trt = _1abceb535_Trait(_142975_expr.get()._field_Kind.ptr());;
							if ((_145029_trt != nullptr)) {
								_1abc60ee4_checkTypeCompatibility(_self_.get()._field_s, _142975_expr.get()._field_Kind,_143521_d.get()._field_Kind,_143421_e.get()._field_Token);
							};
						};
					};
					goto _iter_next_1bba394a5;
				};
				if (_143521_d.get()._field_Decl) {
					_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _143421_e.get()._field_Token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1abc58ecb_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1bba394a5;
				};
				_143017_case.get()._field_Exprs = jule::alloc_for_append(_143017_case.get()._field_Exprs,1);_143017_case.get()._field_Exprs.__push(_143521_d);;
				_1abca7447_assignTypeChecker _146821_checker = _1abca7447_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_142975_expr.get()._field_Kind, ._field_d=_143521_d, ._field_errorToken=_143421_e.get()._field_Token};;
				_1abca85be_check(&_146821_checker);
			}
			_iter_next_1bba394a5:;
			++it;
			goto _iter_begin_1bba394a5;
		}
		_iter_end_1bba394a5:;
	};
	if ((((!(_142933_m.get()._field_TypeMatch)) || (!(_142975_expr.get()._field_Kind.get()._field_Generic))) || _143217_genericMatched)) {
		_143017_case.get()._field_Scope=_1abad14d5_checkCaseScope(_self_, _143017_case,_142956_c.get()._field_Scope);
	};
	return _143017_case;;
}



inline void _1abad1d98_checkCases(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab0858d0_MatchCase>& _148235_m, jule::Ptr<_1abac2a37_Match> _148254_rm, jule::Ptr<_1abcbba55_Data> _148270_expr) {
	_148254_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1abac3582_Case>>::alloc(0LL, _148235_m.get()._field_Cases.len());
	{
		auto &expr = _148235_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1bba4337c:;
		if (it != expr.end()) {
			jule::I64 _148413_i = it - expr.begin();
			{
				jule::Ptr<_1abac3582_Case> _148521_case = jule::new_ptr<_1abac3582_Case>(_1abac3582_Case{._field_Owner=_148254_rm, });;
				if ((_148413_i > 0LL)) {
					_148254_rm.get()._field_Cases[(_148413_i - 1LL)].get()._field_Next=_148521_case;
				};
				_148254_rm.get()._field_Cases = jule::alloc_for_append(_148254_rm.get()._field_Cases,1);_148254_rm.get()._field_Cases.__push(_148521_case);;
			}
			_iter_next_1bba4337c:;
			++it;
			_148413_i++;
			goto _iter_begin_1bba4337c;
		}
		_iter_end_1bba4337c:;
	};
	if (((_148254_rm.get()._field_Default != nullptr) && (_148235_m.get()._field_Cases.len() > 0LL))) {
		_148254_rm.get()._field_Cases[(_148254_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_148254_rm.get()._field_Default;
	};
	{
		auto &expr = _148235_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1bba4600b:;
		if (it != expr.end()) {
			jule::I64 _149814_i = it - expr.begin();
			jule::Ptr<_1ab085209_Case> _149821_c = *it;
			{
				_1abad19d0_checkCase(_self_, _148254_rm,_149814_i,_149821_c,_148270_expr);
			}
			_iter_next_1bba4600b:;
			++it;
			_149814_i++;
			goto _iter_begin_1bba4600b;
		}
		_iter_end_1bba4600b:;
	};
}



inline jule::Ptr<_1abac3582_Case> _1abad2250_checkDefault(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1abac2a37_Match> _150336_m, jule::Ptr<_1ab08413c_Else> _150351_d) {
	jule::Ptr<_1abac3582_Case> _150417_def = jule::new_ptr<_1abac3582_Case>(_1abac3582_Case{._field_Owner=_150336_m, });;
	_150417_def.get()._field_Scope=_1abad14d5_checkCaseScope(_self_, _150417_def,_150351_d.get()._field_Scope);
	return _150417_def;;
}



inline void _1abad24c5_checkComptimePanic(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ababdcdb_Scope>& _151139_s) {
	if ((_151139_s.get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _151613_stmt = _151139_s.get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _151613_stmt };
		
		if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bba49251:;
			{
				jule::Ptr<_1abcbba55_Data> _151917_d = _151613_stmt.cast_ptr<_1abcbba55_Data>(&__jule_any_type25);;
				{
					auto &_match_expr{ _151917_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type31) {
						_case_begin_1bba4a043:;
						{
							jule::Ptr<_1aba97e08_BuiltinPanicCallExprModel> _152221_m = _151917_d.get()._field_Model.cast_ptr<_1aba97e08_BuiltinPanicCallExprModel>(&__jule_any_type31);;
							{
								auto &_match_expr{ _152221_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type49) {
									_case_begin_1bba4aede:;
									{
										jule::Ptr<_1aba86b94_Const> _152525_c = _152221_m.get()._field_Expr.cast_ptr<_1aba86b94_Const>(&__jule_any_type49);;
										if (_1aba88ed7_IsStr(_152525_c.ptr())) {
											jule::Ptr<_1abac584d_scopeChecker> _152733_root = _1abac8c08_getHardRoot(_self_);;
											_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _152733_root.get()._field_calledFrom,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_1aba87c2d_ReadStr(_152525_c.ptr()), &__jule_any_type7)}));
										};
									}
								}
								_match_end_1bba4acd0:;
							};
						}
					}
					_match_end_1bba49b36:;
				};
			}
		}
		_match_end_1bba491eb:;
	};
}



inline void _1abad27e4_pushTypeMatch(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1abac2a37_Match> _153537_tm, jule::Ptr<_1ab0858d0_MatchCase>& _153554_m) {
	if (_153537_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto &expr = _153537_tm.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1bba4a472:;
			if (it != expr.end()) {
				jule::Ptr<_1abac3582_Case> _153925_c = *it;
				{
					if ((_153925_c.get()._field_Scope != nullptr)) {
						_1abad24c5_checkComptimePanic(_self_, _153925_c.get()._field_Scope);
						_153537_tm.get()._field_Default=_153925_c;
						_153537_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1bba4a472:;
				++it;
				goto _iter_begin_1bba4a472;
			}
			_iter_end_1bba4a472:;
		};
		if ((_153554_m.get()._field_Default != nullptr)) {
			_153537_tm.get()._field_Cases=nullptr;
			_153537_tm.get()._field_Default=_1abad2250_checkDefault(_self_, _153537_tm,_153554_m.get()._field_Default);
			if ((_153537_tm.get()._field_Default != nullptr)) {
				_1abad24c5_checkComptimePanic(_self_, _153537_tm.get()._field_Default.get()._field_Scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_153537_tm, &__jule_any_type50));;
}



inline void _1abad2a69_checkTypeMatch(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab0858d0_MatchCase>& _155939_m) {
	jule::Ptr<_1abcbba55_Data> _156017_d = _1abcd8bd7_eval(_1abc60598_eval(_self_.get()._field_s, jule::Trait<_1abd13959_Lookup>(_self_, 0)), _155939_m.get()._field_Expr);;
	if ((_156017_d == nullptr)) {
		return;;
	};
	if (((!(_156017_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1abce9d6e_Prim(_156017_d.get()._field_Kind.ptr()) != nullptr) && _1abd00bcc_IsAny(_1abce9d6e_Prim(_156017_d.get()._field_Kind.ptr()).ptr())) || (_1abceb535_Trait(_156017_d.get()._field_Kind.ptr()) != nullptr)) || (_1abcea820_TypeEnum(_156017_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _155939_m.get()._field_Expr.get()._field_Token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1abac2a37_Match> _157117_tm = jule::new_ptr<_1abac2a37_Match>(_1abac2a37_Match{._field_Expr=_156017_d, ._field_TypeMatch=true, });;
	if (((!(_157117_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && (_155939_m.get()._field_Default != nullptr))) {
		_157117_tm.get()._field_Default=_1abad2250_checkDefault(_self_, _157117_tm,_155939_m.get()._field_Default);
	};
	_1abad1d98_checkCases(_self_, _155939_m,_157117_tm,_156017_d);
	_1abad27e4_pushTypeMatch(_self_, _157117_tm,_155939_m);
}



inline void _1abad2cde_checkCommonMatch(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab0858d0_MatchCase>& _158441_m) {
	jule::Ptr<_1abcbba55_Data> _158517_d = nullptr;;
	if ((_158441_m.get()._field_Expr == nullptr)) {
		_158517_d=jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__1aba870e5_NewBool(true)});
		_158517_d.get()._field_Model=jule::Any(_158517_d.get()._field_Constant, &__jule_any_type49);
	} else {
		_158517_d=_1abcd8ee5_evalExpr(_1abc60598_eval(_self_.get()._field_s, jule::Trait<_1abd13959_Lookup>(_self_, 0)), _158441_m.get()._field_Expr);
		if ((_158517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1abac2a37_Match> _159917_mc = jule::new_ptr<_1abac2a37_Match>(_1abac2a37_Match{._field_Expr=_158517_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_159917_mc, &__jule_any_type50));;
	if ((_158441_m.get()._field_Default != nullptr)) {
		_159917_mc.get()._field_Default=_1abad2250_checkDefault(_self_, _159917_mc,_158441_m.get()._field_Default);
	};
	_1abad1d98_checkCases(_self_, _158441_m,_159917_mc,_158517_d);
}



inline void _1abad3064_checkMatch(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab0858d0_MatchCase> _161134_m) {
	if (_161134_m.get()._field_TypeMatch) {
		_1abad2a69_checkTypeMatch(_self_, _161134_m);
		return;;
	};
	_1abad2cde_checkCommonMatch(_self_, _161134_m);
}



inline void _1abad32d9_checkFall(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab07b80a_FallSt> _161929_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1abac8730_isDeferred(_self_))) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _161929_f.get()._field_Token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1abac3582_Case* _162717_case = ((_1abac3582_Case*)(_self_.get()._field_cse));;
	if ((_162717_case->_field_Next == nullptr)) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _161929_f.get()._field_Token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1abc58ecb_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1abac3b37_FallSt>(_1abac3b37_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_162717_case->_field_Next))}), &__jule_any_type51));;
}



inline jule::Ptr<_1abac123e_BreakSt> _1abad35e7_checkBreakWithLabel(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab08345a_BreakSt> _163939_b) {
	jule::Ptr<_1abac123e_BreakSt> _164017_brk = _1abad3905_checkPlainBreak(_self_, _163939_b);;
	if ((_164017_brk == nullptr)) {
		return nullptr;;
	};
	_164017_brk.get()._field_It=0LLU;
	_164017_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1abac45b6_scopeLabel> _165017_label = _1ababb4e2_findLabelParent(_163939_b.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
	if ((_165017_label == nullptr)) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
		return nullptr;;
	};
	_165017_label.get()._field_used=true;
	if (((_165017_label.get()._field_pos + 1LL) >= _165017_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
		return nullptr;;
	};
	jule::I64 _166313_i = (_165017_label.get()._field_pos + 1LL);;
	if ((_166313_i >= _165017_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
	} else {
		jule::Any _166721_st = _165017_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_166313_i];;
		{
			auto &_match_expr{ _166721_st };
			
			if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1bba65bc9:;
				{
					_164017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.cast_ptr<_1ababeb33_InfIter>(&__jule_any_type38)));
				}
			}
			else if (_match_expr.type == &__jule_any_type42) {
				_case_begin_1bba67901:;
				{
					_164017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.cast_ptr<_1abac098b_RangeIter>(&__jule_any_type42)));
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1bba67967:;
				{
					_164017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.cast_ptr<_1abac00a6_WhileIter>(&__jule_any_type40)));
				}
			}
			else if (_match_expr.type == &__jule_any_type50) {
				_case_begin_1bba679cd:;
				{
					_164017_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.cast_ptr<_1abac2a37_Match>(&__jule_any_type50)));
				}
			}
			else {
				_case_begin_1bba6777a:;
				{
					_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
				}
			}
			_match_end_1bba67714:;
		};
	};
	if ((_164017_brk.get()._field_It != 0LLU)) {
		if ((!(_1abacdd0c_checkValidBreakLabel(_self_, _164017_brk.get()._field_It)))) {
			_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
		};
	};
	if ((_164017_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1abacdd0c_checkValidBreakLabel(_self_, _164017_brk.get()._field_Mtch)))) {
			_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
		};
	};
	return _164017_brk;;
}



inline jule::Ptr<_1abac123e_BreakSt> _1abad3905_checkPlainBreak(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab08345a_BreakSt> _169735_b) {
	if (_1abac8730_isDeferred(_self_)) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _169735_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abac584d_scopeChecker> _170317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_170317_scope.get()._field_it == 0LLU) && (_170317_scope.get()._field_cse == 0LLU)) && (_170317_scope.get()._field_parent != nullptr)) && (_170317_scope.get()._field_owner == nullptr))) {
			_case_begin_1bba6dbd2:;
			{
				_170317_scope=_170317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_170317_scope.get()._field_it != 0LLU)) {
			_case_begin_1bba6dc59:;
			{
				return jule::new_ptr<_1abac123e_BreakSt>(_1abac123e_BreakSt{._field_It=_170317_scope.get()._field_it, });;
			}
		}
		else if ((_170317_scope.get()._field_cse != 0LLU)) {
			_case_begin_1bba6dcd1:;
			{
				return jule::new_ptr<_1abac123e_BreakSt>(_1abac123e_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1abac3582_Case*)(_170317_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_1bba6db16:;
	};
	_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _169735_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1abad3b7a_checkBreak(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab08345a_BreakSt> _171930_b) {
	if ((_171930_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1abac123e_BreakSt> _172121_brk = _1abad35e7_checkBreakWithLabel(_self_, _171930_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172121_brk, &__jule_any_type52));;
		return;;
	};
	jule::Ptr<_1abac123e_BreakSt> _172617_brk = _1abad3905_checkPlainBreak(_self_, _171930_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172617_brk, &__jule_any_type52));;
}



inline void _1abad3e00_checkRet(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab0817cc_RetSt> _173032_r) {
	if (_1abac8730_isDeferred(_self_)) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _173032_r.get()._field_Token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abac3eab_RetSt> _173517_rt = jule::new_ptr<_1abac3eab_RetSt>(_1abac3eab_RetSt{._field_Func=_1abac8994_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_173517_rt, &__jule_any_type53));;
	jule::Ptr<_1abcb4d6c_retTypeChecker> _174017_rtc = jule::new_ptr<_1abcb4d6c_retTypeChecker>(_1abcb4d6c_retTypeChecker{._field_sc=_self_, ._field_f=_173517_rt.get()._field_Func, ._field_errorToken=_173032_r.get()._field_Token, });;
	jule::Bool _174513_ok = _1abcb5a71_check(_174017_rtc.ptr(), _173032_r.get()._field_Expr);;
	if ((!(_174513_ok))) {
		return;;
	};
	if ((_173032_r.get()._field_Expr != nullptr)) {
		_173517_rt.get()._field_Expr=_174017_rtc.get()._field_model;
	};
}



inline void _1abad4175_checkUseExpr(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab073879_UseExpr> _175532_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _175532_ue.get()._field_Token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1abac8730_isDeferred(_self_)) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _175532_ue.get()._field_Token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _175532_ue.get()._field_Token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1abad43ea_checkNode(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Any& _177134_node) {
	{
		auto &_match_expr{ _177134_node };
		
		if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1bba7ad43:;
			{
				_1abacb04b_checkAnonScope(_self_, _177134_node.cast_ptr<_1ab07d950_ScopeTree>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1bba7b23e:;
			{
				_1abac9c5e_checkVarDecl(_self_, _177134_node.cast_ptr<_1ab081425_VarDecl>(&__jule_any_type18));
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bba7b55d:;
			{
				_1abac9ed4_checkTypeAliasDecl(_self_, _177134_node.cast_ptr<_1ab084c86_TypeAliasDecl>(&__jule_any_type14));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1bba7b5c4:;
			{
				_1abacb5e0_checkExpr(_self_, _177134_node.cast_ptr<_1ab072ed8_Expr>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1bba7b77d:;
			{
				_1abacbe81_checkConditional(_self_, _177134_node.cast_ptr<_1ab0845b0_Conditional>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1bba7b7e4:;
			{
				_1abacd6e1_checkIter(_self_, _177134_node.cast_ptr<_1ab081e3c_Iter>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1bba7b85a:;
			{
				_1abace390_checkCont(_self_, _177134_node.cast_ptr<_1ab083812_ContSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1bba7b8c1:;
			{
				_1abace615_checkLabel(_self_, _177134_node.cast_ptr<_1ab07b167_LabelSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1bba7b937:;
			{
				_1abace88a_pushGoto(_self_, _177134_node.cast_ptr<_1ab07b51e_GotoSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1bba7b99d:;
			{
				_1abad112d_checkAssignSt(_self_, _177134_node.cast_ptr<_1ab07c454_AssignSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1bba7ba14:;
			{
				_1abad3064_checkMatch(_self_, _177134_node.cast_ptr<_1ab0858d0_MatchCase>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1bba7ba7a:;
			{
				_1abad32d9_checkFall(_self_, _177134_node.cast_ptr<_1ab07b80a_FallSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bba7bae1:;
			{
				_1abad3b7a_checkBreak(_self_, _177134_node.cast_ptr<_1ab08345a_BreakSt>(&__jule_any_type64));
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bba7bb57:;
			{
				_1abad3e00_checkRet(_self_, _177134_node.cast_ptr<_1ab0817cc_RetSt>(&__jule_any_type65));
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1bba7bbbd:;
			{
				_1abad4175_checkUseExpr(_self_, _177134_node.cast_ptr<_1ab073879_UseExpr>(&__jule_any_type66));
			}
		}
		else {
			_case_begin_1bba7aeb9:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1bba7addc:;
	};
}



inline void _1abad45c6_checkResult(jule::Ptr<_1abac584d_scopeChecker> _self_) {
	_1ab07d345_Stmt _180917_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _180917_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1bba851d2:;
			{
				jule::Ptr<_1ab073879_UseExpr> _181221_ue = _180917_stmt._field_Data.cast_ptr<_1ab073879_UseExpr>(&__jule_any_type66);;
				jule::Ptr<_1abcbba55_Data> _181321_d = _1abcd8ee5_evalExpr(_1abc60598_eval(_self_.get()._field_s, jule::Trait<_1abd13959_Lookup>(_self_, 0)), _181221_ue.get()._field_Expr);;
				if ((_181321_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_181321_d, &__jule_any_type25));;
				jule::Ptr<_1abcb4d6c_retTypeChecker> _181821_rtc = jule::new_ptr<_1abcb4d6c_retTypeChecker>(_1abcb4d6c_retTypeChecker{._field_sc=_self_, ._field_types=_1abaa2e9b_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_181221_ue.get()._field_Expr.get()._field_Token, });;
				_1abcb5a71_check(_181821_rtc.ptr(), _181221_ue.get()._field_Expr);
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1bba848b8:;
			{
				jule::Ptr<_1ab072ed8_Expr> _182521_expr = _180917_stmt._field_Data.cast_ptr<_1ab072ed8_Expr>(&__jule_any_type55);;
				jule::Ptr<_1abcbba55_Data> _182621_d = _1abcd8ee5_evalExpr(_1abc60598_eval(_self_.get()._field_s, jule::Trait<_1abd13959_Lookup>(_self_, 0)), _182521_expr);;
				if ((_182621_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _182621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1bba8925d:;
						{
							jule::Ptr<_1aba9a290_BuiltinErrorCallExprModel> _183225_m = _182621_d.get()._field_Model.cast_ptr<_1aba9a290_BuiltinErrorCallExprModel>(&__jule_any_type24);;
							_1abacb36a_processErrorCall(_self_, _183225_m,_182521_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_182621_d, &__jule_any_type25));;
						}
					}
					else {
						_case_begin_1bba89604:;
						{
							return;;
						}
					}
					_match_end_1bba8959e:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type60 || _match_expr.type == &__jule_any_type64 || _match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type65) {
			_case_begin_1bba8492e:;
			{
				_1abad43ea_checkNode(_self_, _180917_stmt._field_Data);
			}
		}
		else {
			_case_begin_1bba84852:;
			{
				_1abad43ea_checkNode(_self_, _180917_stmt._field_Data);
				return;;
			}
		}
		_match_end_1bba846ba:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1abad47a2_checkTree(jule::Ptr<_1abac584d_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _185417_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_185417_n)--;
	};
	for (; (_self_.get()._field_i < _185417_n); (_self_.get()._field_i)++) {
		{
			_1ab07d345_Stmt _186221_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1abad43ea_checkNode(_self_, _186221_stmt._field_Data);
			if (_1abac84bb_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1bba8bc55:;
	}
	_iter_end_1bba8bc55:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1abad45c6_checkResult(_self_);
	};
}



inline void _1abad4ac1_checkGoto(_1abac584d_scopeChecker* _self_, jule::Ptr<_1abac4a39_scopeGoto>& _187333_gt, jule::Ptr<_1abac45b6_scopeLabel>& _187354_label) {
	jule::Ptr<_1abac584d_scopeChecker> _187417_gtsc = _187333_gt.get()._field_scope;;
	while (((_187417_gtsc.get()._field_childIndex - 1LL) > _187354_label.get()._field_scope.get()._field_childIndex)) {
		{
			_187417_gtsc=_187417_gtsc.get()._field_parent;
		}
	_iter_next_1bba90ad3:;
	}
	_iter_end_1bba90ad3:;;
	jule::I64 _187917_n = 0LL;;
	if ((_187417_gtsc.get()._field_scope == _187354_label.get()._field_scope.get()._field_scope)) {
		if ((_187333_gt.get()._field_pos > _187354_label.get()._field_pos)) {
			return;;
		};
		_187917_n=_187333_gt.get()._field_pos;
	};
	jule::I64 _189217_i = (_187354_label.get()._field_pos - 1LL);;
	if ((_187917_n == 0LL)) {
		{
			auto &expr = _187354_label.get()._field_scope.get()._field_scope.get()._field_Stmts;
			auto it = expr.begin();
			_iter_begin_1bba931e0:;
			if (it != expr.end()) {
				jule::I64 _189517_j = it - expr.begin();
				jule::Any _189520_stmt = *it;
				{
					if (_1ababbbb8_stmtIsGotoScope(_189520_stmt,_187417_gtsc.get()._field_scope)) {
						_187917_n=_189517_j;
						goto _iter_end_1bba931e0;
					};
				}
				_iter_next_1bba931e0:;
				++it;
				_189517_j++;
				goto _iter_begin_1bba931e0;
			}
			_iter_end_1bba931e0:;
		};
	};
	for (; (_189217_i >= _187917_n); (_189217_i)--) {
		{
			jule::Any _190521_stmt = _187354_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_189217_i];;
			if (_1ababd857_stmtIsDef(_190521_stmt)) {
				_1abc58bac_pushErr((*_self_)._field_s.ptr(), _187333_gt.get()._field_gt.get()._field_Token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_187333_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
				return;;
			};
		}
	_iter_next_1bba940d1:;
	}
	_iter_end_1bba940d1:;;
}



inline void _1abad4c9c_checkGotos(_1abac584d_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1bba94532:;
		if (it != expr.end()) {
			jule::Ptr<_1abac4a39_scopeGoto> _191421_gt = *it;
			{
				jule::Ptr<_1abac45b6_scopeLabel> _191521_label = _1abac9632_findLabelAll(&(*_self_), _191421_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_191521_label == nullptr)) {
					_1abc58bac_pushErr((*_self_)._field_s.ptr(), _191421_gt.get()._field_gt.get()._field_Token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_191421_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
					goto _iter_next_1bba94532;
				};
				_191521_label.get()._field_used=true;
				_1abad4ac1_checkGoto(&(*_self_), _191421_gt,_191521_label);
			}
			_iter_next_1bba94532:;
			++it;
			goto _iter_begin_1bba94532;
		}
		_iter_end_1bba94532:;
	};
}



inline void _1abad4e78_checkLabels(_1abac584d_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1bba961c1:;
		if (it != expr.end()) {
			jule::Ptr<_1abac45b6_scopeLabel> _192716_l = *it;
			{
				if ((!(_192716_l.get()._field_used))) {
					_1abc58bac_pushErr((*_self_)._field_s.ptr(), _192716_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_192716_l.get()._field_label.get()._field_Ident, &__jule_any_type7)}));
				};
			}
			_iter_next_1bba961c1:;
			++it;
			goto _iter_begin_1bba961c1;
		}
		_iter_end_1bba961c1:;
	};
}



inline void _1abad5154_checkVars(_1abac584d_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1bba999bb:;
		if (it != expr.end()) {
			jule::Ptr<_1abc73ee6_Var> _193516_v = *it;
			{
				if (((((!(_193516_v.get()._field_Used)) && (!(_1a9726061_IsIgnoreIdent(_193516_v.get()._field_Ident)))) && (!(_1a9726308_IsAnonIdent(_193516_v.get()._field_Ident)))) && (_193516_v.get()._field_Ident != jule::Str("self", 4)))) {
					_1abc58bac_pushErr((*_self_)._field_s.ptr(), _193516_v.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_193516_v.get()._field_Ident, &__jule_any_type7)}));
				};
			}
			_iter_next_1bba999bb:;
			++it;
			goto _iter_begin_1bba999bb;
		}
		_iter_end_1bba999bb:;
	};
}



inline void _1abad5330_checkAliases(_1abac584d_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1bba9b946:;
		if (it != expr.end()) {
			jule::Ptr<_1abce6ce4_TypeAlias> _194316_a = *it;
			{
				if ((((!(_194316_a.get()._field_Used)) && (!(_1a9726061_IsIgnoreIdent(_194316_a.get()._field_Ident)))) && (!(_1a9726308_IsAnonIdent(_194316_a.get()._field_Ident))))) {
					_1abc58bac_pushErr((*_self_)._field_s.ptr(), _194316_a.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_194316_a.get()._field_Ident, &__jule_any_type7)}));
				};
			}
			_iter_next_1bba9b946:;
			++it;
			goto _iter_begin_1bba9b946;
		}
		_iter_end_1bba9b946:;
	};
}



inline void _1abad564e_check(jule::Ptr<_1abac584d_scopeChecker> _self_, jule::Ptr<_1ab07d950_ScopeTree>& _195130_tree, jule::Ptr<_1ababdcdb_Scope>& _195153_s) {
	_195153_s.get()._field_Deferred=_195130_tree.get()._field_Deferred;
	_195153_s.get()._field_Unsafety=_195130_tree.get()._field_Unsafety;
	jule::I64 _195513_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_195130_tree;
	_self_.get()._field_scope=_195153_s;
	_1abad47a2_checkTree(_self_);
	if ((_195513_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1abad5154_checkVars(_self_.ptr());
		_1abad5330_checkAliases(_self_.ptr());
		if (_1abac807b_isRoot(_self_.ptr())) {
			_1abad4c9c_checkGotos(_self_.ptr());
			_1abad4e78_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1abac584d_scopeChecker> _1abad58b3_newChildChecker(jule::Ptr<_1abac584d_scopeChecker> _self_) {
	jule::Ptr<_1abac584d_scopeChecker> _197517_base = _1ababad1b_newScopeCheckerBase(_self_.get()._field_s,nullptr);;
	_197517_base.get()._field_parent=_self_;
	_197517_base.get()._field_labels=_self_.get()._field_labels;
	_197517_base.get()._field_gotos=_self_.get()._field_gotos;
	_197517_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _197517_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abac584d_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1abad68a3_checkCdef(_1abad6463_directiveChecker* _self_, jule::Ptr<_1ab03a720_Directive>& _1629_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1bbaa2d04:;
			{
				if ((*_self_)._field_o.cast_ptr<_1aba9e1c8_Fn>(&__jule_any_type67).get()._field_CppLinked) {
					goto _match_end_1bbaa3046;
				};
				goto _case_begin_1bbaa309b;
			}
		}
		else {
			_case_begin_1bbaa309b:;
			{
				_1abc58bac_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1629_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
			}
		}
		_match_end_1bbaa3046:;
	};
	if ((_1629_d.get()._field_Args.len() > 0LL)) {
		_1abc58bac_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1abad6b28_checkTypedef(_1abad6463_directiveChecker* _self_, jule::Ptr<_1ab03a720_Directive>& _3232_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1bbaa55a9:;
			{
				if ((*_self_)._field_o.cast_ptr<_1ab08a1a9_Struct>(&__jule_any_type68).get()._field_CppLinked) {
					goto _match_end_1bbaa57da;
				};
				goto _case_begin_1bbaa5840;
			}
		}
		else {
			_case_begin_1bbaa5840:;
			{
				_1abc58bac_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3232_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
			}
		}
		_match_end_1bbaa57da:;
	};
	if ((_3232_d.get()._field_Args.len() > 0LL)) {
		_1abc58bac_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1abad6d9d_checkDerive(_1abad6463_directiveChecker* _self_, jule::Ptr<_1ab03a720_Directive>& _4831_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1bbaa7d81:;
			{
				if ((!((*_self_)._field_o.cast_ptr<_1ab08a1a9_Struct>(&__jule_any_type68).get()._field_CppLinked))) {
					goto _match_end_1bbaa80b2;
				};
				goto _case_begin_1bbaa8117;
			}
		}
		else {
			_case_begin_1bbaa8117:;
			{
				_1abc58bac_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1bbaa80b2:;
	};
	if ((_4831_d.get()._field_Args.len() == 0LL)) {
		_1abc58bac_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1abc58ecb_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4831_d.get()._field_Args.len() > 1LL)) {
		_1abc58bac_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4831_d.get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1bbaaba44:;
		}
		else {
			_case_begin_1bbaa8d0a:;
			{
				_1abc58bac_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4831_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type7)}));
			}
		}
		_match_end_1bbaab67b:;
	};
}



inline void _1abad7123_checkNamespace(_1abad6463_directiveChecker* _self_, jule::Ptr<_1ab03a720_Directive>& _7438_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1bbaab978:;
			{
				if ((!((*_self_)._field_o.cast_ptr<_1ab08a1a9_Struct>(&__jule_any_type68).get()._field_CppLinked))) {
					_1abc58bac_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1bbaad0b7:;
			{
				if ((!((*_self_)._field_o.cast_ptr<_1aba9e1c8_Fn>(&__jule_any_type67).get()._field_CppLinked))) {
					_1abc58bac_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bbaad12d:;
			{
				if ((!((*_self_)._field_o.cast_ptr<_1abc73ee6_Var>(&__jule_any_type10).get()._field_CppLinked))) {
					_1abc58bac_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
				};
			}
		}
		else {
			_case_begin_1bbaad00c:;
			{
				_1abc58bac_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
			}
		}
		_match_end_1bbaacea7:;
	};
	if ((_7438_d.get()._field_Args.len() == 0LL)) {
		_1abc58bac_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7438_d.get()._field_Args.len() > 1LL)) {
		_1abc58bac_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a97237bc_Token> _9913_arg = _7438_d.get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1abc58bac_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1abc58bac_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7438_d.get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL,(_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1bbab671e:;
			{
				if ((_1abce2185_findDirective((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1ab03a720_Directive> _11625_typedef = jule::new_ptr<_1ab03a720_Directive>(_1ab03a720_Directive{._field_Tag=_7438_d.get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1ab03a720_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1bbab4de3:;
	};
}



inline void _1abad7398_checkDeprecated(_1abad6463_directiveChecker* _self_, jule::Ptr<_1ab03a720_Directive>& _12539_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1bbab7016:;
			{
				if ((*_self_)._field_o.cast_ptr<_1ab08a1a9_Struct>(&__jule_any_type68).get()._field_CppLinked) {
					_1abc58bac_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1bbab89c9:;
			{
				if ((*_self_)._field_o.cast_ptr<_1aba9e1c8_Fn>(&__jule_any_type67).get()._field_CppLinked) {
					_1abc58bac_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bbab8a40:;
			{
				if ((*_self_)._field_o.cast_ptr<_1abc73ee6_Var>(&__jule_any_type10).get()._field_CppLinked) {
					_1abc58bac_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
				};
			}
		}
		else {
			_case_begin_1bbab83be:;
			{
				_1abc58bac_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
			}
		}
		_match_end_1bbab8215:;
	};
	if ((_12539_d.get()._field_Args.len() == 0LL)) {
		return;;
	};
	if ((_12539_d.get()._field_Args.len() > 1LL)) {
		_1abc58bac_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a97237bc_Token> _15013_arg = _12539_d.get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1abc58bac_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1abc58bac_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12539_d.get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL,(_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1abad761d_checkTest(_1abad6463_directiveChecker* _self_, jule::Ptr<_1ab03a720_Directive>& _16429_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1bbac132d:;
			{
				jule::Ptr<_1aba9e1c8_Fn> _16717_f = (*_self_)._field_o.cast_ptr<_1aba9e1c8_Fn>(&__jule_any_type67);;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_1aba9ed77_IsInit(_16717_f.ptr())))) && (!(_1aba9eb13_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1bbac1b47;
				};
				if (_1aba9e89e_IsMethod(_16717_f.ptr())) {
					_1abc58bac_pushErr((*_self_)._field_s.ptr(), _16717_f.get()._field_Token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1bbac1b47;
				};
				goto _case_begin_1bbac1c9b;
			}
		}
		else {
			_case_begin_1bbac1c9b:;
			{
				_1abc58bac_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16429_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
			}
		}
		_match_end_1bbac1b47:;
	};
	if ((_16429_d.get()._field_Args.len() > 0LL)) {
		_1abc58bac_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1abad7893_checkDirective(_1abad6463_directiveChecker* _self_, jule::Ptr<_1ab03a720_Directive>& _18538_d) {
	{
		auto &_match_expr{ _18538_d.get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1bbac5bc3:;
			{
				_1abad68a3_checkCdef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1bbac5c39:;
			{
				_1abad6b28_checkTypedef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1bbac5ca0:;
			{
				_1abad6d9d_checkDerive(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1bbac5d16:;
			{
				_1abad7123_checkNamespace(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1bbac6993:;
			{
				_1abad7398_checkDeprecated(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1bbac6a09:;
			{
				_1abad761d_checkTest(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1bbac6a70:;
			{
				_1abc58bac_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
			}
		}
		else {
			_case_begin_1bbac5b5c:;
			{
				_1abc58bac_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
			}
		}
		_match_end_1bbac5b07:;
	};
}



inline void _1abad7a6e_check(_1abad6463_directiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1bbac90c2:;
		if (it != expr.end()) {
			jule::Ptr<_1ab03a720_Directive> _20821_d = *it;
			{
				_1abad7893_checkDirective(&(*_self_), _20821_d);
			}
			_iter_next_1bbac90c2:;
			++it;
			goto _iter_begin_1bbac90c2;
		}
		_iter_end_1bbac90c2:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1abad6463_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abc4d3bb_FindPackage(_1abc4cd9e_ImportInfo* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abc4d6c9_SelectPackage(_1abc4cd9e_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1abc73ee6_Var> _1abc4da81_FindVar(_1abc4cd9e_ImportInfo* _self_, jule::Str _19226_ident, jule::Bool ) {
	if ((!(_1abc50467_isLookupable(&(*_self_), _19226_ident)))) {
		return nullptr;;
	};
	return _1abad9c08_findVarInPackage((*_self_)._field_Package.get()._field_Files,_19226_ident,false);;
}



inline jule::Ptr<_1abce6ce4_TypeAlias> _1abc4de38_FindTypeAlias(_1abc4cd9e_ImportInfo* _self_, jule::Str _20432_ident, jule::Bool ) {
	if ((!(_1abc50467_isLookupable(&(*_self_), _20432_ident)))) {
		return nullptr;;
	};
	return _1abada137_findTypeAliasInPackage((*_self_)._field_Package.get()._field_Files,_20432_ident,false);;
}



inline jule::Ptr<_1ab08a1a9_Struct> _1abc4e2e0_FindStruct(_1abc4cd9e_ImportInfo* _self_, jule::Str _21629_ident, jule::Bool ) {
	if ((!(_1abc50467_isLookupable(&(*_self_), _21629_ident)))) {
		return nullptr;;
	};
	return _1abc4add0_findStructInPackage((*_self_)._field_Package.get()._field_Files,_21629_ident,false);;
}



inline jule::Ptr<_1aba9e1c8_Fn> _1abc4e697_FindFn(_1abc4cd9e_ImportInfo* _self_, jule::Str _22825_ident, jule::Bool ) {
	if ((!(_1abc50467_isLookupable(&(*_self_), _22825_ident)))) {
		return nullptr;;
	};
	return _1abc4b342_findFnInPackage((*_self_)._field_Package.get()._field_Files,_22825_ident,false);;
}



inline jule::Ptr<_1abab10ca_Trait> _1abc4e9a5_FindTrait(_1abc4cd9e_ImportInfo* _self_, jule::Str _23928_ident) {
	if ((!(_1abc50467_isLookupable(&(*_self_), _23928_ident)))) {
		return nullptr;;
	};
	return _1abc4b650_findTraitInPackage((*_self_)._field_Package.get()._field_Files,_23928_ident);;
}



inline jule::Ptr<_1abab3220_Enum> _1abc4ecb3_FindEnum(_1abc4cd9e_ImportInfo* _self_, jule::Str _25027_ident) {
	if ((!(_1abc50467_isLookupable(&(*_self_), _25027_ident)))) {
		return nullptr;;
	};
	return _1abc4b991_findEnumInPackage((*_self_)._field_Package.get()._field_Files,_25027_ident);;
}



inline jule::Ptr<_1abab481a_TypeEnum> _1abc500c1_FindTypeEnum(_1abc4cd9e_ImportInfo* _self_, jule::Str _26131_ident) {
	if ((!(_1abc50467_isLookupable(&(*_self_), _26131_ident)))) {
		return nullptr;;
	};
	return _1abc4bcd2_findTypeEnumInPackage((*_self_)._field_Package.get()._field_Files,_26131_ident);;
}



inline jule::Bool _1abc50467_isLookupable(_1abc4cd9e_ImportInfo* _self_, jule::Str _27027_ident) {
	if ((*_self_)._field_CppLinked) {
		return false;;
	};
	if ((!((*_self_)._field_ImportAll))) {
		if ((((*_self_)._field_Alias.len() != 0LL) || _1abc50775_existIdent(&(*_self_), jule::Str("self", 4)))) {
			return true;;
		};
		if (((*_self_)._field_Selected.len() > 0LL)) {
			if ((!(_1abc50775_existIdent(&(*_self_), _27027_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1abc50775_existIdent(_1abc4cd9e_ImportInfo* _self_, jule::Str _29025_ident) {
	{
		auto &expr = (*_self_)._field_Selected;
		auto it = expr.begin();
		_iter_begin_1bbade6d1:;
		if (it != expr.end()) {
			jule::Ptr<_1a97237bc_Token> &_29116_sident = *it;
			{
				if ((_29116_sident.get()._field_Kind == _29025_ident)) {
					return true;;
				};
			}
			_iter_next_1bbade6d1:;
			++it;
			goto _iter_begin_1bbade6d1;
		}
		_iter_end_1bbade6d1:;
	};
	return false;;
}



inline jule::Bool _1abc50a0b_isAccessibleViaSelection(_1abc4cd9e_ImportInfo* _self_) {
	return (((*_self_)._field_ImportAll || ((*_self_)._field_Selected.len() == 0LL)) || _1abc50775_existIdent(&(*_self_), jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1abc4cd9e_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abc512d1_FindPackage(_1abc50d08_Package* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abc515de_SelectPackage(_1abc50d08_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1abc73ee6_Var> _1abc51996_FindVar(_1abc50d08_Package* _self_, jule::Str _32026_ident, jule::Bool _32038_cpp_linked) {
	return _1abad9c08_findVarInPackage((*_self_)._field_Files,_32026_ident,_32038_cpp_linked);;
}



inline jule::Ptr<_1abce6ce4_TypeAlias> _1abc51d4d_FindTypeAlias(_1abc50d08_Package* _self_, jule::Str _32632_ident, jule::Bool _32644_cpp_linked) {
	return _1abada137_findTypeAliasInPackage((*_self_)._field_Files,_32632_ident,_32644_cpp_linked);;
}



inline jule::Ptr<_1ab08a1a9_Struct> _1abc52205_FindStruct(_1abc50d08_Package* _self_, jule::Str _33229_ident, jule::Bool _33241_cpp_linked) {
	return _1abc4add0_findStructInPackage((*_self_)._field_Files,_33229_ident,_33241_cpp_linked);;
}



inline jule::Ptr<_1aba9e1c8_Fn> _1abc525ac_FindFn(_1abc50d08_Package* _self_, jule::Str _33825_ident, jule::Bool _33837_cpp_linked) {
	return _1abc4b342_findFnInPackage((*_self_)._field_Files,_33825_ident,_33837_cpp_linked);;
}



inline jule::Ptr<_1abab10ca_Trait> _1abc528ba_FindTrait(_1abc50d08_Package* _self_, jule::Str _34428_ident) {
	return _1abc4b650_findTraitInPackage((*_self_)._field_Files,_34428_ident);;
}



inline jule::Ptr<_1abab3220_Enum> _1abc52bc8_FindEnum(_1abc50d08_Package* _self_, jule::Str _35027_ident) {
	return _1abc4b991_findEnumInPackage((*_self_)._field_Files,_35027_ident);;
}



inline jule::Ptr<_1abab481a_TypeEnum> _1abc52ed6_FindTypeEnum(_1abc50d08_Package* _self_, jule::Str _35631_ident) {
	return _1abc4bcd2_findTypeEnumInPackage((*_self_)._field_Files,_35631_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abc50d08_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abc56517_FindPackage(_1abc55eea_Sema* _self_, jule::Str _22330_ident) {
	return _1abcb7248_FindPackage((*_self_)._field_file.ptr(), _22330_ident);;
}



inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abc56825_SelectPackage(_1abc55eea_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)> _23332_selector) {
	return _1abcb7556_SelectPackage((*_self_)._field_file.ptr(), _23332_selector);;
}



inline jule::Ptr<_1abc73ee6_Var> _1abc56bcc_FindVar(_1abc55eea_Sema* _self_, jule::Str _24326_ident, jule::Bool _24338_cpp_linked) {
	jule::Ptr<_1abc73ee6_Var> _24517_v = _1abad9c08_findVarInPackage((*_self_)._field_files,_24326_ident,_24338_cpp_linked);;
	if ((_24517_v != nullptr)) {
		return _24517_v;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bbb17b49:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _25121_imp = *it;
			{
				if ((!(_1abc54922_impIsLookupable(_25121_imp,_24326_ident)))) {
					goto _iter_next_1bbb17b49;
				};
				_24517_v=_1abc4da81_FindVar(_25121_imp.ptr(), _24326_ident,_24338_cpp_linked);
				if (((_24517_v != nullptr) && _1abc59383_isAccessibleDefine(&(*_self_), _24517_v.get()._field_Public,_24517_v.get()._field_Token))) {
					return _24517_v;;
				};
			}
			_iter_next_1bbb17b49:;
			++it;
			goto _iter_begin_1bbb17b49;
		}
		_iter_end_1bbb17b49:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abce6ce4_TypeAlias> _1abc57084_FindTypeAlias(_1abc55eea_Sema* _self_, jule::Str _27032_ident, jule::Bool _27044_cpp_linked) {
	jule::Ptr<_1abce6ce4_TypeAlias> _27217_ta = _1abada137_findTypeAliasInPackage((*_self_)._field_files,_27032_ident,_27044_cpp_linked);;
	if ((_27217_ta != nullptr)) {
		return _27217_ta;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bbb1a454:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _27821_imp = *it;
			{
				if ((!(_1abc54922_impIsLookupable(_27821_imp,_27032_ident)))) {
					goto _iter_next_1bbb1a454;
				};
				_27217_ta=_1abc4de38_FindTypeAlias(_27821_imp.ptr(), _27032_ident,_27044_cpp_linked);
				if (((_27217_ta != nullptr) && _1abc59383_isAccessibleDefine(&(*_self_), _27217_ta.get()._field_Public,_27217_ta.get()._field_Token))) {
					return _27217_ta;;
				};
			}
			_iter_next_1bbb1a454:;
			++it;
			goto _iter_begin_1bbb1a454;
		}
		_iter_end_1bbb1a454:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab08a1a9_Struct> _1abc5743b_FindStruct(_1abc55eea_Sema* _self_, jule::Str _29729_ident, jule::Bool _29741_cppLinked) {
	jule::Ptr<_1ab08a1a9_Struct> _29917_s = _1abc4add0_findStructInPackage((*_self_)._field_files,_29729_ident,_29741_cppLinked);;
	if ((_29917_s != nullptr)) {
		return _29917_s;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bbb1cc5e:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _30421_imp = *it;
			{
				if ((!(_1abc54922_impIsLookupable(_30421_imp,_29729_ident)))) {
					goto _iter_next_1bbb1cc5e;
				};
				_29917_s=_1abc4e2e0_FindStruct(_30421_imp.ptr(), _29729_ident,_29741_cppLinked);
				if (((_29917_s != nullptr) && _1abc59383_isAccessibleDefine(&(*_self_), _29917_s.get()._field_Public,_29917_s.get()._field_Token))) {
					return _29917_s;;
				};
			}
			_iter_next_1bbb1cc5e:;
			++it;
			goto _iter_begin_1bbb1cc5e;
		}
		_iter_end_1bbb1cc5e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aba9e1c8_Fn> _1abc577e3_FindFn(_1abc55eea_Sema* _self_, jule::Str _32225_ident, jule::Bool _32237_cpp_linked) {
	jule::Ptr<_1aba9e1c8_Fn> _32417_f = _1abc4b342_findFnInPackage((*_self_)._field_files,_32225_ident,_32237_cpp_linked);;
	if ((_32417_f != nullptr)) {
		return _32417_f;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bbb20569:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _33021_imp = *it;
			{
				if ((!(_1abc54922_impIsLookupable(_33021_imp,_32225_ident)))) {
					goto _iter_next_1bbb20569;
				};
				_32417_f=_1abc4e697_FindFn(_33021_imp.ptr(), _32225_ident,_32237_cpp_linked);
				if (((_32417_f != nullptr) && _1abc59383_isAccessibleDefine(&(*_self_), _32417_f.get()._field_Public,_32417_f.get()._field_Token))) {
					return _32417_f;;
				};
			}
			_iter_next_1bbb20569:;
			++it;
			goto _iter_begin_1bbb20569;
		}
		_iter_end_1bbb20569:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abab10ca_Trait> _1abc57b01_FindTrait(_1abc55eea_Sema* _self_, jule::Str _34928_ident) {
	jule::Ptr<_1abab10ca_Trait> _35117_t = _1abc4b650_findTraitInPackage((*_self_)._field_files,_34928_ident);;
	if ((_35117_t != nullptr)) {
		return _35117_t;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bbb22eb7:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _35721_imp = *it;
			{
				if ((!(_1abc54922_impIsLookupable(_35721_imp,_34928_ident)))) {
					goto _iter_next_1bbb22eb7;
				};
				_35117_t=_1abc4e9a5_FindTrait(_35721_imp.ptr(), _34928_ident);
				if (((_35117_t != nullptr) && _1abc59383_isAccessibleDefine(&(*_self_), _35117_t.get()._field_Public,_35117_t.get()._field_Token))) {
					return _35117_t;;
				};
			}
			_iter_next_1bbb22eb7:;
			++it;
			goto _iter_begin_1bbb22eb7;
		}
		_iter_end_1bbb22eb7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abab3220_Enum> _1abc57e0e_FindEnum(_1abc55eea_Sema* _self_, jule::Str _37627_ident) {
	jule::Ptr<_1abab3220_Enum> _37817_e = _1abc4b991_findEnumInPackage((*_self_)._field_files,_37627_ident);;
	if ((_37817_e != nullptr)) {
		return _37817_e;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bbb2556e:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _38421_imp = *it;
			{
				if ((!(_1abc54922_impIsLookupable(_38421_imp,_37627_ident)))) {
					goto _iter_next_1bbb2556e;
				};
				_37817_e=_1abc4ecb3_FindEnum(_38421_imp.ptr(), _37627_ident);
				if (((_37817_e != nullptr) && _1abc59383_isAccessibleDefine(&(*_self_), _37817_e.get()._field_Public,_37817_e.get()._field_Token))) {
					return _37817_e;;
				};
			}
			_iter_next_1bbb2556e:;
			++it;
			goto _iter_begin_1bbb2556e;
		}
		_iter_end_1bbb2556e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abab481a_TypeEnum> _1abc5821c_FindTypeEnum(_1abc55eea_Sema* _self_, jule::Str _40331_ident) {
	jule::Ptr<_1abab481a_TypeEnum> _40517_e = _1abc4bcd2_findTypeEnumInPackage((*_self_)._field_files,_40331_ident);;
	if ((_40517_e != nullptr)) {
		return _40517_e;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1ad80ea19:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _41121_imp = *it;
			{
				if ((!(_1abc54922_impIsLookupable(_41121_imp,_40331_ident)))) {
					goto _iter_next_1ad80ea19;
				};
				_40517_e=_1abc500c1_FindTypeEnum(_41121_imp.ptr(), _40331_ident);
				if (((_40517_e != nullptr) && _1abc59383_isAccessibleDefine(&(*_self_), _40517_e.get()._field_Public,_40517_e.get()._field_Token))) {
					return _40517_e;;
				};
			}
			_iter_next_1ad80ea19:;
			++it;
			goto _iter_begin_1ad80ea19;
		}
		_iter_end_1ad80ea19:;
	};
	return nullptr;;
}



inline jule::Bool _1abc5856e_isFlag(_1abc55eea_Sema* _self_, jule::I64 _42721_flags) {
	return (((*_self_)._field_flags & _42721_flags) == _42721_flags);;
}



inline void _1abc587e4_setCurrentFile(_1abc55eea_Sema* _self_, jule::Ptr<_1abcb6c2b_SymbolTable> _42937_f) {
	(*_self_)._field_file=_42937_f;
}



inline void _1abc58bac_pushErr(_1abc55eea_Sema* _self_, jule::Ptr<_1a97237bc_Token> _43126_token, jule::Str _43141_fmt, jule::Slice<jule::Any> _43154_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1abc545d1_compilerErr(_43126_token,true,_43141_fmt,_43154_args));;
}



inline void _1abc58ecb_pushSugggestion(_1abc55eea_Sema* _self_, jule::Str _43634_fmt, jule::Slice<jule::Any> _43647_args) {
	{
		_1abc55a66_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43634_fmt,_43647_args);
	};
}



inline jule::Bool _1abc59383_isAccessibleDefine(_1abc55eea_Sema* _self_, jule::Bool _44133_public, jule::Ptr<_1a97237bc_Token> _44147_token) {
	return ((_44133_public || (_44147_token.get()._field_File == nullptr)) || (_1a972954d_Dir((*_self_)._field_file.get()._field_File.ptr()) == _1a972954d_Dir(_44147_token.get()._field_File.ptr())));;
}



inline jule::Bool _1abc597d4_isDuplicatedIdent(_1abc55eea_Sema* _self_, jule::Uintptr _44832_itself, jule::Str _44849_ident, jule::Bool _44861_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1ad874144:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> &_44916_f = *it;
			{
				if (_1abcba229_isDuplicatedIdent(_44916_f.ptr(), _44832_itself,_44849_ident,_44861_cpp_linked)) {
					return true;;
				};
				{
					auto &expr = _44916_f.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1ad874ebe:;
					if (it != expr.end()) {
						jule::Ptr<_1abc4cd9e_ImportInfo> &_45420_imp = *it;
						{
							{
								auto &expr = _45420_imp.get()._field_Selected;
								auto it = expr.begin();
								_iter_begin_1ad875783:;
								if (it != expr.end()) {
									jule::Ptr<_1a97237bc_Token> &_45524_selected = *it;
									{
										if ((_45524_selected.get()._field_Kind == _44849_ident)) {
											return true;;
										};
									}
									_iter_next_1ad875783:;
									++it;
									goto _iter_begin_1ad875783;
								}
								_iter_end_1ad875783:;
							};
						}
						_iter_next_1ad874ebe:;
						++it;
						goto _iter_begin_1ad874ebe;
					}
					_iter_end_1ad874ebe:;
				};
			}
			_iter_next_1ad874144:;
			++it;
			goto _iter_begin_1ad874144;
		}
		_iter_end_1ad874144:;
	};
	return false;;
}



inline void _1abc59b03_checkDirectives(jule::Ptr<_1abc55eea_Sema> _self_, jule::Slice<jule::Ptr<_1ab03a720_Directive>>& _46540_d, jule::Any _46566_o) {
	_1abad6463_directiveChecker _46617_dc = _1abad6463_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1ab03a720_Directive>>>)((&(_46540_d)))), ._field_o=_46566_o};;
	_1abad7a6e_check(&_46617_dc);
}



inline jule::Bool _1abc5a054_checkGenericQuantity(_1abc55eea_Sema* _self_, jule::I64 _47439_required, jule::I64 _47454_given, jule::Ptr<_1a97237bc_Token> _47466_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_47439_required == 0LL) && (_47454_given > 0LL))) {
			_case_begin_1ad8784cd:;
			{
				_1abc58bac_pushErr(&(*_self_), _47466_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_47439_required > 0LL) && (_47454_given == 0LL))) {
			_case_begin_1ad877ce6:;
			{
				_1abc58bac_pushErr(&(*_self_), _47466_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required < _47454_given)) {
			_case_begin_1ad877d5c:;
			{
				_1abc58bac_pushErr(&(*_self_), _47466_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required > _47454_given)) {
			_case_begin_1ad877dd4:;
			{
				_1abc58bac_pushErr(&(*_self_), _47466_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ad877c80:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ad877bb4:;
	};
}



inline jule::Bool _1abc5a42d_isDuplicatedImportSelection(_1abc55eea_Sema* _self_, jule::Uintptr _49342_itself, jule::Str _49359_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1ad8797cb:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> &_49416_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49416_imp) == _49342_itself)) {
					goto _iter_end_1ad8797cb;
				};
				if (_1abc50775_existIdent(_49416_imp.ptr(), _49359_ident)) {
					return true;;
				};
			}
			_iter_next_1ad8797cb:;
			++it;
			goto _iter_begin_1ad8797cb;
		}
		_iter_end_1ad8797cb:;
	};
	return false;;
}



inline jule::Any _1abc5a7e6_getImportDef(_1abc55eea_Sema* _self_, jule::Str _50627_ident, jule::Ptr<_1abc4cd9e_ImportInfo>& _50644_imp) {
	if ((_1abd1d8cb_findPackageBuiltinDef(_50644_imp.get()._field_LinkPath,_50627_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type6);;
	};
	{
		auto &expr = _50644_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1ad87c89a:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _51021_f = *it;
			{
				;
				jule::Any _51321_def = _1abcb9cc8_defByIdent(_51021_f.ptr(), _50627_ident,false);;
				if ((_51321_def != nullptr)) {
					return _51321_def;;
				};
			}
			_iter_next_1ad87c89a:;
			++it;
			goto _iter_begin_1ad87c89a;
		}
		_iter_end_1ad87c89a:;
	};
	return nullptr;;
}



inline jule::Bool _1bbc63657_checkImportSelection(_1abc55eea_Sema* _self_, jule::Ptr<_1a97237bc_Token>& _52143_ident, jule::Ptr<_1abc73ee6_Var>& _52159_s) {
	if ((!(_1abc59383_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1abc58bac_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1abc4c2cc_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1abc58bac_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type7)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bbc6768e_checkImportSelection(_1abc55eea_Sema* _self_, jule::Ptr<_1a97237bc_Token>& _52143_ident, jule::Ptr<_1abce6ce4_TypeAlias>& _52159_s) {
	if ((!(_1abc59383_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1abc58bac_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1abc4c2cc_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1abc58bac_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type7)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bbc6b60a_checkImportSelection(_1abc55eea_Sema* _self_, jule::Ptr<_1a97237bc_Token>& _52143_ident, jule::Ptr<_1ab08a1a9_Struct>& _52159_s) {
	if ((!(_1abc59383_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1abc58bac_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1abc4c2cc_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1abc58bac_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type7)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bbc708c8_checkImportSelection(_1abc55eea_Sema* _self_, jule::Ptr<_1a97237bc_Token>& _52143_ident, jule::Ptr<_1abab10ca_Trait>& _52159_s) {
	if ((!(_1abc59383_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1abc58bac_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1abc4c2cc_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1abc58bac_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type7)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bbc74844_checkImportSelection(_1abc55eea_Sema* _self_, jule::Ptr<_1a97237bc_Token>& _52143_ident, jule::Ptr<_1abab3220_Enum>& _52159_s) {
	if ((!(_1abc59383_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1abc58bac_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1abc4c2cc_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1abc58bac_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type7)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bbc78804_checkImportSelection(_1abc55eea_Sema* _self_, jule::Ptr<_1a97237bc_Token>& _52143_ident, jule::Ptr<_1abab481a_TypeEnum>& _52159_s) {
	if ((!(_1abc59383_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1abc58bac_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1abc4c2cc_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1abc58bac_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type7)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bbc7c7b4_checkImportSelection(_1abc55eea_Sema* _self_, jule::Ptr<_1a97237bc_Token>& _52143_ident, jule::Ptr<_1aba9e1c8_Fn>& _52159_s) {
	if ((!(_1abc59383_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1abc58bac_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1abc4c2cc_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1abc58bac_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type7)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1abc5aecd_checkImportSelectedSelections(_1abc55eea_Sema* _self_, jule::Ptr<_1abc4cd9e_ImportInfo>& _53553_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _53553_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1bbc5de27:;
		if (it != expr.end()) {
			jule::Ptr<_1a97237bc_Token> _53716_ident = *it;
			{
				if ((_53716_ident.get()._field_Kind == jule::Str("self", 4))) {
					goto _iter_next_1bbc5de27;
				};
				if (_1abc5a42d_isDuplicatedImportSelection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_53553_imp)),_53716_ident.get()._field_Kind)) {
					_1abc58bac_pushErr(&(*_self_), _53716_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type7)}));
					_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1bbc5de27;
				};
				jule::Any _54921_def = _1abc5a7e6_getImportDef(&(*_self_), _53716_ident.get()._field_Kind,_53553_imp);;
				{
					auto &_match_expr{ _54921_def };
					
					if (_match_expr.type == &__jule_any_type6) {
						_case_begin_1bbc621e4:;
						{
							goto _iter_next_1bbc5de27;
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1bbc5e631:;
						{
							jule::Ptr<_1abc73ee6_Var> _55525_v = _54921_def.cast_ptr<_1abc73ee6_Var>(&__jule_any_type10);;
							__jule_func_result=(_1bbc63657_checkImportSelection(&(*_self_), _53716_ident,_55525_v) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_1bbc61765:;
						{
							jule::Ptr<_1abce6ce4_TypeAlias> _55825_ta = _54921_def.cast_ptr<_1abce6ce4_TypeAlias>(&__jule_any_type69);;
							__jule_func_result=(_1bbc6768e_checkImportSelection(&(*_self_), _53716_ident,_55825_ta) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1bbc617dc:;
						{
							jule::Ptr<_1ab08a1a9_Struct> _56125_s = _54921_def.cast_ptr<_1ab08a1a9_Struct>(&__jule_any_type68);;
							__jule_func_result=(_1bbc6b60a_checkImportSelection(&(*_self_), _53716_ident,_56125_s) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type12) {
						_case_begin_1bbc61864:;
						{
							jule::Ptr<_1abab10ca_Trait> _56425_t = _54921_def.cast_ptr<_1abab10ca_Trait>(&__jule_any_type12);;
							__jule_func_result=(_1bbc708c8_checkImportSelection(&(*_self_), _53716_ident,_56425_t) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type70) {
						_case_begin_1bbc618db:;
						{
							jule::Ptr<_1abab3220_Enum> _56725_e = _54921_def.cast_ptr<_1abab3220_Enum>(&__jule_any_type70);;
							__jule_func_result=(_1bbc74844_checkImportSelection(&(*_self_), _53716_ident,_56725_e) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type71) {
						_case_begin_1bbc62414:;
						{
							jule::Ptr<_1abab481a_TypeEnum> _57025_e = _54921_def.cast_ptr<_1abab481a_TypeEnum>(&__jule_any_type71);;
							__jule_func_result=(_1bbc78804_checkImportSelection(&(*_self_), _53716_ident,_57025_e) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1bbc6248b:;
						{
							jule::Ptr<_1aba9e1c8_Fn> _57325_f = _54921_def.cast_ptr<_1aba9e1c8_Fn>(&__jule_any_type67);;
							__jule_func_result=(_1bbc7c7b4_checkImportSelection(&(*_self_), _53716_ident,_57325_f) && __jule_func_result);
						}
					}
					else {
						_case_begin_1bbc61600:;
						{
							_1abc58bac_pushErr(&(*_self_), _53716_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type7)}));
							__jule_func_result=false;
							goto _iter_next_1bbc5de27;
						}
					}
					_match_end_1bbc6159a:;
				};
			}
			_iter_next_1bbc5de27:;
			++it;
			goto _iter_begin_1bbc5de27;
		}
		_iter_end_1bbc5de27:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bbc81c6e_checkImportsAllSelectionsFromCollection(_1abc55eea_Sema* _self_, jule::Slice<jule::Ptr<_1abc73ee6_Var>>& _58462_s, jule::Ptr<_1a97237bc_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1bbc83952:;
		if (it != expr.end()) {
			jule::Ptr<_1abc73ee6_Var> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1bbc63657_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1bbc83952:;
			++it;
			goto _iter_begin_1bbc83952;
		}
		_iter_end_1bbc83952:;
	};
	return _58517_ok;;
}

inline jule::Bool _1bbc85305_checkImportsAllSelectionsFromCollection(_1abc55eea_Sema* _self_, jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>& _58462_s, jule::Ptr<_1a97237bc_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1bbc866be:;
		if (it != expr.end()) {
			jule::Ptr<_1abce6ce4_TypeAlias> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1bbc6768e_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1bbc866be:;
			++it;
			goto _iter_begin_1bbc866be;
		}
		_iter_end_1bbc866be:;
	};
	return _58517_ok;;
}

inline jule::Bool _1bbc85910_checkImportsAllSelectionsFromCollection(_1abc55eea_Sema* _self_, jule::Slice<jule::Ptr<_1ab08a1a9_Struct>>& _58462_s, jule::Ptr<_1a97237bc_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1bbc8942a:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a1a9_Struct> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1bbc6b60a_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1bbc8942a:;
			++it;
			goto _iter_begin_1bbc8942a;
		}
		_iter_end_1bbc8942a:;
	};
	return _58517_ok;;
}

inline jule::Bool _1bbc8accd_checkImportsAllSelectionsFromCollection(_1abc55eea_Sema* _self_, jule::Slice<jule::Ptr<_1aba9e1c8_Fn>>& _58462_s, jule::Ptr<_1a97237bc_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1bbc8c1a8:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1bbc7c7b4_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1bbc8c1a8:;
			++it;
			goto _iter_begin_1bbc8c1a8;
		}
		_iter_end_1bbc8c1a8:;
	};
	return _58517_ok;;
}

inline jule::Bool _1bbc8b3e9_checkImportsAllSelectionsFromCollection(_1abc55eea_Sema* _self_, jule::Slice<jule::Ptr<_1abab10ca_Trait>>& _58462_s, jule::Ptr<_1a97237bc_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1bbc8edc0:;
		if (it != expr.end()) {
			jule::Ptr<_1abab10ca_Trait> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1bbc708c8_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1bbc8edc0:;
			++it;
			goto _iter_begin_1bbc8edc0;
		}
		_iter_end_1bbc8edc0:;
	};
	return _58517_ok;;
}

inline jule::Bool _1bbc8e111_checkImportsAllSelectionsFromCollection(_1abc55eea_Sema* _self_, jule::Slice<jule::Ptr<_1abab3220_Enum>>& _58462_s, jule::Ptr<_1a97237bc_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1bbc92ad7:;
		if (it != expr.end()) {
			jule::Ptr<_1abab3220_Enum> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1bbc74844_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1bbc92ad7:;
			++it;
			goto _iter_begin_1bbc92ad7;
		}
		_iter_end_1bbc92ad7:;
	};
	return _58517_ok;;
}

inline jule::Bool _1bbc91d28_checkImportsAllSelectionsFromCollection(_1abc55eea_Sema* _self_, jule::Slice<jule::Ptr<_1abab481a_TypeEnum>>& _58462_s, jule::Ptr<_1a97237bc_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1bbc95887:;
		if (it != expr.end()) {
			jule::Ptr<_1abab481a_TypeEnum> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1bbc78804_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1bbc95887:;
			++it;
			goto _iter_begin_1bbc95887;
		}
		_iter_end_1bbc95887:;
	};
	return _58517_ok;;
}



inline jule::Bool _1abc5b709_checkImportAllSelections(_1abc55eea_Sema* _self_, jule::Ptr<_1abc4cd9e_ImportInfo>& _59444_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _59444_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bbc62aa7:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> &_59616_file = *it;
			{
				__jule_func_result=(_1bbc81c6e_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Vars,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1bbc85305_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_TypeAliases,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1bbc85910_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Structs,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1bbc8accd_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Funcs,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1bbc8b3e9_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Traits,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1bbc8e111_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Enums,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1bbc91d28_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_TypeEnums,_59444_imp.get()._field_Token) && __jule_func_result);
			}
			_iter_next_1bbc62aa7:;
			++it;
			goto _iter_begin_1bbc62aa7;
		}
		_iter_end_1bbc62aa7:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1abc5ba28_checkImportSelections(_1abc55eea_Sema* _self_, jule::Ptr<_1abc4cd9e_ImportInfo>& _60845_imp) {
	jule::Bool __jule_func_result = false;
	if ((_60845_imp.get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _1abc5aecd_checkImportSelectedSelections(&(*_self_), _60845_imp);
		return __jule_func_result;;
	} else if (_60845_imp.get()._field_ImportAll) {
		__jule_func_result = _1abc5b709_checkImportAllSelections(&(*_self_), _60845_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abc5bd36_isUseAliasDuplication(_1abc55eea_Sema* _self_, jule::Ptr<_1abc4cd9e_ImportInfo>& _61741_imp) {
	if ((_61741_imp.get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bbc981a3:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _62221_imp2 = *it;
			{
				if ((_62221_imp2 == _61741_imp)) {
					goto _iter_end_1bbc981a3;
				};
				if ((_62221_imp2.get()._field_Alias == _61741_imp.get()._field_Alias)) {
					return true;;
				};
				if (((_62221_imp2.get()._field_Ident == _62221_imp2.get()._field_LinkPath) && (_62221_imp2.get()._field_Ident == _61741_imp.get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1bbc981a3:;
			++it;
			goto _iter_begin_1bbc981a3;
		}
		_iter_end_1bbc981a3:;
	};
	return false;;
}



inline jule::Bool _1abc5c144_checkImport(_1abc55eea_Sema* _self_, jule::Ptr<_1abc4cd9e_ImportInfo>& _63735_imp) {
	if ((_63735_imp.get()._field_CppLinked || (_63735_imp.get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_1abc5bd36_isUseAliasDuplication(&(*_self_), _63735_imp)) {
		_1abc58bac_pushErr(&(*_self_), _63735_imp.get()._field_Token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_63735_imp.get()._field_Alias, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_63735_imp.get()._field_Duplicate))) {
		jule::Ptr<_1abc55eea_Sema> _64821_sema = jule::new_ptr<_1abc55eea_Sema>(_1abc55eea_Sema{._field_flags=(*_self_)._field_flags});;
		_1abc70e49_check(_64821_sema, _63735_imp.get()._field_Package.get()._field_Files);
		if ((_64821_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_64821_sema.get()._field_errors);
			_64821_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _1abc5ba28_checkImportSelections(&(*_self_), _63735_imp);;
}



inline void _1abc5c320_checkImports(_1abc55eea_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1bbc9dcd0:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _66221_file = *it;
			{
				_1abc587e4_setCurrentFile(&(*_self_), _66221_file);
				{
					auto &expr = _66221_file.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1bbc9e93a:;
					if (it != expr.end()) {
						jule::Ptr<_1abc4cd9e_ImportInfo> _66425_imp = *it;
						{
							jule::Bool _66521_ok = _1abc5c144_checkImport(&(*_self_), _66425_imp);;
							if ((!(_66521_ok))) {
								return;;
							};
						}
						_iter_next_1bbc9e93a:;
						++it;
						goto _iter_begin_1bbc9e93a;
					}
					_iter_end_1bbc9e93a:;
				};
			}
			_iter_next_1bbc9dcd0:;
			++it;
			goto _iter_begin_1bbc9dcd0;
		}
		_iter_end_1bbc9dcd0:;
	};
}



inline void _1abc5c4eb_implFileImpls(jule::Ptr<_1abc55eea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Impls;
		auto it = expr.begin();
		_iter_begin_1bbc9e50b:;
		if (it != expr.end()) {
			jule::Ptr<_1abab8c81_Impl> _67521_imp = *it;
			{
				_1abc6802e_implImpl(_self_, _67521_imp);
			}
			_iter_next_1bbc9e50b:;
			++it;
			goto _iter_begin_1bbc9e50b;
		}
		_iter_end_1bbc9e50b:;
	};
}



inline void _1abc5c6c7_implImpls(jule::Ptr<_1abc55eea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bbca151e:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _68121_file = *it;
			{
				_1abc587e4_setCurrentFile(_self_.ptr(), _68121_file);
				_1abc5c4eb_implFileImpls(_self_);
			}
			_iter_next_1bbca151e:;
			++it;
			goto _iter_begin_1bbca151e;
		}
		_iter_end_1bbca151e:;
	};
}



inline void _1abc5c8a3_checkEnums(jule::Ptr<_1abc55eea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bbca2597:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _68821_file = *it;
			{
				_1abc587e4_setCurrentFile(_self_.ptr(), _68821_file);
				_1abc65658_checkEnumDecls(_self_);
			}
			_iter_next_1bbca2597:;
			++it;
			goto _iter_begin_1bbca2597;
		}
		_iter_end_1bbca2597:;
	};
}



inline _1abd06353_typeChecker _1abc5cd04_typeChecker(jule::Ptr<_1abc55eea_Sema> _self_, jule::Trait<_1abd13959_Lookup> _69435_l, jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>> _69450_generics, jule::Ptr<_1abd05473_referencer> _69513_referencer) {
	_1abd06353_typeChecker _69617_tc = _1abd06353_typeChecker{._field_s=_self_, ._field_rootLookup=_69435_l, ._field_lookup=_69435_l, ._field_referencer=_69513_referencer, ._field_useGenerics=_69450_generics, };;
	{
		auto &_match_expr{ _69435_l };
		
		if (_match_expr.type_is<jule::Ptr<_1abac584d_scopeChecker>>()) {
			_case_begin_1bbca4049:;
			{
				jule::Ptr<_1abac584d_scopeChecker> _70521_hard = _1abac8c08_getHardRoot(_69435_l.operator jule::Ptr<_1abac584d_scopeChecker>());;
				_69617_tc._field_refers=_70521_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1bbca3c5d:;
	};
	if (((_69513_referencer != nullptr) && (_69513_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _69513_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type69) {
				_case_begin_1bbca54ce:;
				{
					_69617_tc._field_ownerAlias=_69513_referencer.get()._field_owner.cast_ptr<_1abce6ce4_TypeAlias>(&__jule_any_type69);
				}
			}
			_match_end_1bbca5479:;
		};
	};
	return _69617_tc;;
}



inline jule::Ptr<_1abce79d7_TypeKind> _1abc5d2ee_buildTypeWithRefers(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab06d9b7_TypeDecl>& _72144_t, jule::Trait<_1abd13959_Lookup> _72167_l, jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>> _72213_generics, jule::Ptr<_1abd05473_referencer> _72241_referencer) {
	return ({ auto _wrap_copy = _1abc5cd04_typeChecker(_self_, _72167_l,_72213_generics,_72241_referencer); _1abd0d5be_checkDecl(&_wrap_copy, _72144_t); });;
}



inline jule::Bool _1abc5d7e9_checkTypeWithRefers(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abcebdb5_TypeSymbol>& _72844_t, jule::Trait<_1abd13959_Lookup> _72864_l, jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>> _72913_generics, jule::Ptr<_1abd05473_referencer> _72941_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1abcec26c_checked(_72844_t.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_72844_t.get()._field_Kind=_1abc5d2ee_buildTypeWithRefers(_self_, _72844_t.get()._field_Decl,_72864_l,_72913_generics,_72941_referencer);
	__jule_func_result = _1abcec26c_checked(_72844_t.ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1abab6d4a_constraintChecker> _1abc5da5d_constraintChecker(jule::Ptr<_1abc55eea_Sema> _self_) {
	return jule::new_ptr<_1abab6d4a_constraintChecker>(_1abab6d4a_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1abc5de15_checkType(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abcebdb5_TypeSymbol>& _74334_t, jule::Trait<_1abd13959_Lookup> _74354_l) {
	return _1abc5d7e9_checkTypeWithRefers(_self_, _74334_t,_74354_l,nullptr,nullptr);;
}



inline jule::Ptr<_1abce79d7_TypeKind> _1abc5e366_buildTypeWithGenerics(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab06d9b7_TypeDecl>& _74946_t, jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>> _75013_generics, jule::Ptr<_1abaa4ce4_ReferenceStack> _75041_refers) {
	jule::Ptr<_1abd06353_typeChecker> _75117_tc = jule::new_ptr<_1abd06353_typeChecker>(_1abd06353_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1abd13959_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1abd13959_Lookup>(_self_, 3), ._field_refers=_75041_refers, ._field_useGenerics=_75013_generics, });;
	return _1abd0d5be_checkDecl(_75117_tc.ptr(), _74946_t);;
}



inline jule::Ptr<_1abce79d7_TypeKind> _1abc5e674_buildType(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab06d9b7_TypeDecl>& _76234_t) {
	return _1abc5e366_buildTypeWithGenerics(_self_, _76234_t,nullptr,nullptr);;
}



inline jule::Ptr<_1abce79d7_TypeKind> _1abc5e982_selectType(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab06d9b7_TypeDecl>& _76735_t) {
	jule::Ptr<_1abd06353_typeChecker> _76817_tc = jule::new_ptr<_1abd06353_typeChecker>(_1abd06353_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1abd13959_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1abd13959_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1abd0d5be_checkDecl(_76817_tc.ptr(), _76735_t);;
}



inline jule::Ptr<_1abcbd5c3_Eval> _1abc5edd3_evalpd(jule::Ptr<_1abc55eea_Sema> _self_, jule::Trait<_1abd13959_Lookup> _77930_l, jule::Ptr<_1abce79d7_TypeKind> _77945_p, jule::Ptr<_1abc73ee6_Var> _77963_owner) {
	jule::Ptr<_1abcbd5c3_Eval> _78017_e = jule::new_ptr<_1abcbd5c3_Eval>(_1abcbd5c3_Eval{._field_s=_self_, ._field_lookup=_77930_l, ._field_owner=_77963_owner, });;
	{
		auto &_match_expr{ _77930_l };
		
		if (_match_expr.type_is<jule::Ptr<_1abac584d_scopeChecker>>()) {
			_case_begin_1bbcad75c:;
			{
				_78017_e.get()._field_unsafety=_1abac7d17_isUnsafe(_77930_l.operator jule::Ptr<_1abac584d_scopeChecker>());
			}
		}
		_match_end_1bbcad6e6:;
	};
	_78017_e.get()._field_prefix=_77945_p;
	return _78017_e;;
}



inline jule::Ptr<_1abcbd5c3_Eval> _1abc6028a_evalp(jule::Ptr<_1abc55eea_Sema> _self_, jule::Trait<_1abd13959_Lookup> _79429_l, jule::Ptr<_1abce79d7_TypeKind> _79444_p) {
	return _1abc5edd3_evalpd(_self_, _79429_l,_79444_p,nullptr);;
}



inline jule::Ptr<_1abcbd5c3_Eval> _1abc60598_eval(jule::Ptr<_1abc55eea_Sema> _self_, jule::Trait<_1abd13959_Lookup> _79928_l) {
	return _1abc6028a_evalp(_self_, _79928_l,nullptr);;
}



inline jule::Bool _1abc60a93_checkAssignType(jule::Ptr<_1abc55eea_Sema> _self_, jule::Bool _80335_destIsRef, jule::Ptr<_1abce79d7_TypeKind>& _80357_dest, jule::Ptr<_1abcbba55_Data>& _80414_d, jule::Ptr<_1a97237bc_Token> _80428_errorToken) {
	if (_80414_d.get()._field_Decl) {
		_1abc58bac_pushErr(_self_.ptr(), _80428_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;;
	};
	if (_80335_destIsRef) {
		if ((!(_1abce81e1_Equal(_80357_dest, _80414_d.get()._field_Kind)))) {
			_1abc58bac_pushErr(_self_.ptr(), _80428_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_80357_dest.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_80414_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
			return false;;
		};
	} else {
		jule::Ptr<_1abca7447_assignTypeChecker> _81521_atc = jule::new_ptr<_1abca7447_assignTypeChecker>(_1abca7447_assignTypeChecker{._field_s=_self_, ._field_dest=_80357_dest, ._field_d=_80414_d, ._field_errorToken=_80428_errorToken});;
		jule::Bool _82117_ok = _1abca85be_check(_81521_atc.ptr());;
		if ((!(_82117_ok))) {
			return false;;
		};
	};
	if (((!(_1abcbc418_IsConst(_80414_d.ptr()))) || (_1abce9d6e_Prim(_80357_dest.ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _83117_kind = _1abce9d6e_Prim(_80357_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1aba86457_IsSigInt(_83117_kind)) {
			_case_begin_1bbcb4de5:;
			{
				_1aba88338_SetI64(_80414_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1aba87e92_AsI64(_80414_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1aba86589_IsUnsigInt(_83117_kind)) {
			_case_begin_1bbcb4e6c:;
			{
				_1aba8846a_SetU64(_80414_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1aba880c4_AsU64(_80414_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1aba867ed_IsFloat(_83117_kind)) {
			_case_begin_1bbcb4ee4:;
			{
				_1aba88811_SetF64(_80414_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1aba88206_AsF64(_80414_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1bbcb4d29:;
	};
	return true;;
}



inline jule::Bool _1abc60ee4_checkTypeCompatibility(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abce79d7_TypeKind>& _84547_dest, jule::Ptr<_1abce79d7_TypeKind>& _84614_src, jule::Ptr<_1a97237bc_Token>& _84635_errorToken) {
	if ((_84614_src == nullptr)) {
		_1abc58bac_pushErr(_self_.ptr(), _84635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_84547_dest.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_84614_src.ptr()), &__jule_any_type7)}));
		return false;;
	};
	if ((_1abceba0d_Tup(_84614_src.ptr()) != nullptr)) {
		_1abc58bac_pushErr(_self_.ptr(), _84635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_84547_dest.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_84614_src.ptr()), &__jule_any_type7)}));
		return false;;
	};
	_1abca581e_typeCompatibilityChecker _86017_tcc = _1abca581e_typeCompatibilityChecker{._field_s=_self_, ._field_dest=_84547_dest, ._field_src=_84614_src, ._field_errorToken=_84635_errorToken};;
	if (_1abca6e08_check(&_86017_tcc)) {
		return true;;
	};
	_1abc58bac_pushErr(_self_.ptr(), _84635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_84547_dest.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_84614_src.ptr()), &__jule_any_type7)}));
	return false;;
}



inline jule::Ptr<_1abce79d7_TypeKind> _1abc61467_buildNonGenericTypeKind(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab06d9b7_TypeDecl>& _88148_ast, jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>>& _88214_generics, jule::Slice<jule::Ptr<_1abce79d7_TypeKind>>& _88250_ignored) {
	jule::Ptr<_1abd06353_typeChecker> _88317_tc = jule::new_ptr<_1abd06353_typeChecker>(_1abd06353_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1abd13959_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1abd13959_Lookup>(_self_, 3), ._field_ignoreGenerics=_88214_generics, ._field_ignoredGenerics=(&(_88250_ignored)), });;
	return _1abd0d5be_checkDecl(_88317_tc.ptr(), _88148_ast);;
}



inline jule::Bool _1abc61852_buildFnNonGenericTypeKinds(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abaa1d79_FnIns>& _89351_f, jule::Slice<jule::Ptr<_1abce79d7_TypeKind>>& _89367_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>> _89517_generics = nullptr;;
	if (_1aba9e89e_IsMethod(_89351_f.get()._field_Decl.ptr())) {
		_89517_generics=jule::append(_89351_f.get()._field_Decl.get()._field_Generics,_89351_f.get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_89517_generics=_89351_f.get()._field_Decl.get()._field_Generics;
	};
	{
		auto &expr = _89351_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1bbcbd6b2:;
		if (it != expr.end()) {
			jule::Ptr<_1abaa0eaa_ParamIns> _90221_p = *it;
			{
				if ((!(_1aba9ceb8_IsSelf(_90221_p.get()._field_Decl.ptr())))) {
					_90221_p.get()._field_Kind=_1abc61467_buildNonGenericTypeKind(_self_, _90221_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_89517_generics,_89367_ignored);
					__jule_func_result=(__jule_func_result && (_90221_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_1bbcbd6b2:;
			++it;
			goto _iter_begin_1bbcbd6b2;
		}
		_iter_end_1bbcbd6b2:;
	};
	if ((!(_1aba9e63a_IsVoid(_89351_f.get()._field_Decl.ptr())))) {
		_89351_f.get()._field_Result=_1abc61467_buildNonGenericTypeKind(_self_, _89351_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_89517_generics,_89367_ignored);
		__jule_func_result=(__jule_func_result && (_89351_f.get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1abaa1d79_FnIns> _1abc61b71_getTraitCheckFnKind(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1aba9e1c8_Fn>& _91544_f) {
	if ((_91544_f.get()._field_Instances.len() == 1LL)) {
		return _91544_f.get()._field_Instances[0LL];;
	};
	jule::Ptr<_1abaa1d79_FnIns> _91917_ins = _1abaa05b4_instanceForce(_91544_f);;
	jule::Ptr<_1abd06353_typeChecker> _92117_tc = jule::new_ptr<_1abd06353_typeChecker>(_1abd06353_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1abd13959_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1abd13959_Lookup>(_self_, 3), });;
	{
		auto &expr = _91917_ins.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1bbcc1ee0:;
		if (it != expr.end()) {
			jule::Ptr<_1abaa0eaa_ParamIns> _92621_p = *it;
			{
				if ((!(_1aba9ceb8_IsSelf(_92621_p.get()._field_Decl.ptr())))) {
					_92621_p.get()._field_Kind=_1abd0d5be_checkDecl(_92117_tc.ptr(), _92621_p.get()._field_Decl.get()._field_Kind.get()._field_Decl);
				};
			}
			_iter_next_1bbcc1ee0:;
			++it;
			goto _iter_begin_1bbcc1ee0;
		}
		_iter_end_1bbcc1ee0:;
	};
	if ((!(_1aba9e63a_IsVoid(_91544_f.ptr())))) {
		_91917_ins.get()._field_Result=_1abd0d5be_checkDecl(_92117_tc.ptr(), _91544_f.get()._field_Result.get()._field_Kind.get()._field_Decl);
	};
	return _91917_ins;;
}



inline jule::Bool _1abc620c2_checkConstraintsFn(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abaa1d79_FnIns>& _93843_f, jule::Ptr<_1a97237bc_Token>& _93859_et, jule::Ptr<_1abaa1d79_FnIns> _93875_exist) {
	jule::Ptr<_1abab6d4a_constraintChecker> _93917_cc = _1abc5da5d_constraintChecker(_self_);;
	_93917_cc.get()._field_et=_93859_et;
	_93917_cc.get()._field_fi=_93843_f;
	if ((_93875_exist != nullptr)) {
		{
			auto &expr = _93875_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1bbcc6b71:;
			if (it != expr.end()) {
				jule::I64 _94318_i = it - expr.begin();
				jule::Ptr<_1abce62aa_InsGeneric> _94325_g = *it;
				{
					_93843_f.get()._field_Generics[_94318_i].get()._field_Constraint=_94325_g.get()._field_Constraint;
				}
				_iter_next_1bbcc6b71:;
				++it;
				_94318_i++;
				goto _iter_begin_1bbcc6b71;
			}
			_iter_end_1bbcc6b71:;
		};
	} else {
		_93917_cc.get()._field_uniq=true;
	};
	return _1abab7c2a_check(_93917_cc);;
}



inline jule::Bool _1abc62523_checkConstraintsStruct(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab08a583_StructIns>& _95247_s, jule::Ptr<_1a97237bc_Token>& _95267_et, jule::Ptr<_1ab08a583_StructIns> _95283_exist) {
	jule::Ptr<_1abab6d4a_constraintChecker> _95317_cc = _1abc5da5d_constraintChecker(_self_);;
	_95317_cc.get()._field_et=_95267_et;
	_95317_cc.get()._field_si=_95247_s;
	if ((_95283_exist != nullptr)) {
		{
			auto &expr = _95283_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1bbcc9679:;
			if (it != expr.end()) {
				jule::I64 _95718_i = it - expr.begin();
				jule::Ptr<_1abce62aa_InsGeneric> _95725_g = *it;
				{
					_95247_s.get()._field_Generics[_95718_i].get()._field_Constraint=_95725_g.get()._field_Constraint;
				}
				_iter_next_1bbcc9679:;
				++it;
				_95718_i++;
				goto _iter_begin_1bbcc9679;
			}
			_iter_end_1bbcc9679:;
		};
	} else {
		_95317_cc.get()._field_uniq=true;
	};
	return _1abab7c2a_check(_95317_cc);;
}



inline jule::Bool _1abc628ca_fnEnvironment(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abaa1d79_FnIns>& _96938_f, jule::Fn<jule::Bool(jule::Ptr<_1abc55eea_Sema>&,jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>&)> _96949_algo) {
	jule::Ptr<_1abc55eea_Sema> _97017_sema = _96938_f.get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1abcb6c2b_SymbolTable> _97117_old = _96938_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1abc587e4_setCurrentFile(_96938_f.get()._field_Decl.get()._field_sema.ptr(), _97117_old);
	});;
	jule::Ptr<_1abcb6c2b_SymbolTable> _97317_file = _1abc55604_findFile(_96938_f.get()._field_Decl.get()._field_sema.get()._field_files,_96938_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_97317_file != nullptr)) {
		_1abc587e4_setCurrentFile(_96938_f.get()._field_Decl.get()._field_sema.ptr(), _97317_file);
	};
	jule::I64 _97817_size = _96938_f.get()._field_Generics.len();;
	if (((_96938_f.get()._field_Decl != nullptr) && (_96938_f.get()._field_Decl.get()._field_Owner != nullptr))) {
		_97817_size+=_96938_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>> _98317_generics = jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>::alloc(0LL, _97817_size);;
	_1abc552a2_appendGenericTypeAliases(_98317_generics,_96938_f);
	jule::Bool _98613_ok = _96949_algo(_97017_sema,_98317_generics);;
	if ((_97017_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_97017_sema.get()._field_errors);
		_97017_sema.get()._field_errors=nullptr;
	};
	return _98613_ok;;
}



inline void _1abc62b50_checkFnParamKind(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abaa0eaa_ParamIns>& _99641_p) {
	_99641_p.get()._field_Kind.get()._field_Variadic=_99641_p.get()._field_Decl.get()._field_Variadic;
	if ((_99641_p.get()._field_Decl.get()._field_Reference && (!(_1abd103d4_isValidForRef(_99641_p.get()._field_Kind))))) {
		_1abc58bac_pushErr(_self_.ptr(), _99641_p.get()._field_Decl.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_99641_p.get()._field_Kind.ptr()), &__jule_any_type7)}));
	};
}



inline jule::Bool _1abc62e5d_reloadFnInsTypes(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abaa1d79_FnIns> _100340_f) {
	if ((_1abaa3210_IsBuiltin(_100340_f.ptr()) || _1abaa3474_IsAnon(_100340_f.ptr()))) {
		return true;;
	};
	return _1abc628ca_fnEnvironment(_self_, _100340_f,jule::Fn<jule::Bool(jule::Ptr<_1abc55eea_Sema>&,jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>&)>([=](jule::Ptr<_1abc55eea_Sema>& _100743_sema, jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>& _100761_generics) mutable -> jule::Bool {
		jule::Bool _100821_ok = true;;
		{
			auto &expr = _100340_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1bbcd5883:;
			if (it != expr.end()) {
				jule::Ptr<_1abaa0eaa_ParamIns> _100925_p = *it;
				{
					if (_1aba9ceb8_IsSelf(_100925_p.get()._field_Decl.ptr())) {
						if (_1aba9d22c_IsRef(_100925_p.get()._field_Decl.ptr())) {
							_100925_p.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(jule::new_ptr<_1abd00eb8_Sptr>(_1abd00eb8_Sptr{._field_Elem=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_100340_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_100925_p.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_100340_f.get()._field_Owner, 0)});
						};
					} else {
						_100925_p.get()._field_Kind=_1abc5e366_buildTypeWithGenerics(_100743_sema, _100925_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_100761_generics,_100340_f.get()._field_Refers);
						if ((_100925_p.get()._field_Kind != nullptr)) {
							_1abc62b50_checkFnParamKind(_self_, _100925_p);
						} else {
							_100821_ok=false;
						};
					};
				}
				_iter_next_1bbcd5883:;
				++it;
				goto _iter_begin_1bbcd5883;
			}
			_iter_end_1bbcd5883:;
		};
		if ((!(_1aba9e63a_IsVoid(_100340_f.get()._field_Decl.ptr())))) {
			_100340_f.get()._field_Result=_1abc5e366_buildTypeWithGenerics(_100743_sema, _100340_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_100761_generics,_100340_f.get()._field_Refers);
			_100821_ok=((_100340_f.get()._field_Result != nullptr) && _100821_ok);
		};
		return _100821_ok;;
	}));;
}



inline jule::Bool _1abc633d1_checkRefValidityForInitExpr(jule::Ptr<_1abc55eea_Sema> _self_, jule::Bool _103947_leftMut, jule::Ptr<_1abcbba55_Data>& _103967_d, jule::Ptr<_1a97237bc_Token>& _103982_errorToken) {
	{
		auto &_match_expr{ _103967_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bbcdb191:;
			{
				goto _match_end_1bbcda4ae;
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1bbcdb207:;
			{
				jule::Ptr<_1aba94ce5_TraitSubIdentExprModel> _104421_model = _103967_d.get()._field_Model.cast_ptr<_1aba94ce5_TraitSubIdentExprModel>(&__jule_any_type72);;
				if ((!(_1abc541b3_isValidModelForRef(_104421_model.get()._field_Expr)))) {
					_1abc58bac_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_104421_model.get()._field_Method.get()._field_Ident, &__jule_any_type7)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bbcdaed7:;
			{
				jule::Ptr<_1aba95697_StructSubIdentExprModel> _105021_model = _103967_d.get()._field_Model.cast_ptr<_1aba95697_StructSubIdentExprModel>(&__jule_any_type73);;
				if ((!(_1abc541b3_isValidModelForRef(_105021_model.get()._field_Expr.get()._field_Model)))) {
					_1abc58bac_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_105021_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type7)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74 || _match_expr.type == &__jule_any_type75) {
			_case_begin_1bbcdb04d:;
			{
				_1abc58bac_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bbcdb0b4:;
			{
				jule::Ptr<_1aba91297_UnaryExprModel> _106021_unary = _103967_d.get()._field_Model.cast_ptr<_1aba91297_UnaryExprModel>(&__jule_any_type76);;
				if ((_106021_unary.get()._field_Op.get()._field_Kind == jule::Str("*", 1))) {
					if ((!(_1abc541b3_isValidModelForRef(_103967_d.get()._field_Model)))) {
						_1abc58bac_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type7)}));
						return false;;
					};
					goto _match_end_1bbcda4ae;
				};
				goto _case_begin_1bbcda668;
			}
		}
		else {
			_case_begin_1bbcda668:;
			{
				_1abc58bac_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1bbcda4ae:;
	};
	if ((_103947_leftMut && (!(_103967_d.get()._field_Mutable)))) {
		_1abc58bac_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1abc639a8_checkValidityForInitExpr(jule::Ptr<_1abc55eea_Sema> _self_, jule::Bool _108044_leftMut, jule::Bool _108059_leftRef, jule::Ptr<_1abce79d7_TypeKind>& _108110_leftKind, jule::Ptr<_1abcbba55_Data>& _108136_d, jule::Ptr<_1a97237bc_Token>& _108151_errorToken) {
	if (((_108044_leftMut && (!(_108136_d.get()._field_Mutable))) && _1abce9159_Mutable(_108136_d.get()._field_Kind.ptr()))) {
		_1abc58bac_pushErr(_self_.ptr(), _108151_errorToken,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_108136_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
		return false;;
	};
	if (_108059_leftRef) {
		if ((!(_1abc633d1_checkRefValidityForInitExpr(_self_, _108044_leftMut,_108136_d,_108151_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1abca7447_assignTypeChecker> _109117_atc = jule::new_ptr<_1abca7447_assignTypeChecker>(_1abca7447_assignTypeChecker{._field_s=_self_, ._field_d=_108136_d, ._field_errorToken=_108151_errorToken});;
	return _1abca7b1d_checkValidity(_109117_atc.ptr());;
}



inline jule::Bool _1abc63d71_checkTypeAliasDeclKind(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abce6ce4_TypeAlias>& _109947_ta, jule::Trait<_1abd13959_Lookup> _109967_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abcb6c2b_SymbolTable> _110017_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1abc587e4_setCurrentFile(_self_.ptr(), _110017_old);
	});;
	if ((_109947_ta.get()._field_Token != nullptr)) {
		jule::Ptr<_1abcb6c2b_SymbolTable> _110521_file = _1abc55604_findFile(_self_.get()._field_files,_109947_ta.get()._field_Token.get()._field_File);;
		if ((_110521_file != nullptr)) {
			_1abc587e4_setCurrentFile(_self_.ptr(), _110521_file);
		};
	};
	__jule_func_result=_1abc5d7e9_checkTypeWithRefers(_self_, _109947_ta.get()._field_Kind,_109967_l,nullptr,jule::new_ptr<_1abd05473_referencer>(_1abd05473_referencer{._field_ident=_109947_ta.get()._field_Ident, ._field_owner=jule::Any(_109947_ta, &__jule_any_type69), ._field_refs=(&(_109947_ta.get()._field_Refers))}));
	if (((__jule_func_result && (_1abceaa84_Arr(_109947_ta.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1abceaa84_Arr(_109947_ta.get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1abc58bac_pushErr(_self_.ptr(), _109947_ta.get()._field_Kind.get()._field_Decl.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1abc64190_checkTypeAliasDecl(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abce6ce4_TypeAlias>& _112243_ta, jule::Trait<_1abd13959_Lookup> _112263_l) {
	if (_1a9726061_IsIgnoreIdent(_112243_ta.get()._field_Ident)) {
		_1abc58bac_pushErr(_self_.ptr(), _112243_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1abc63d71_checkTypeAliasDeclKind(_self_, _112243_ta,_112263_l);
}



inline void _1abc64415_checkTypeAliasDeclDup(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abce6ce4_TypeAlias>& _113046_ta) {
	if (_1a9726061_IsIgnoreIdent(_113046_ta.get()._field_Ident)) {
		_1abc58bac_pushErr(_self_.ptr(), _113046_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1abc597d4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113046_ta)),_113046_ta.get()._field_Ident,_113046_ta.get()._field_CppLinked)) {
		_1abc58bac_pushErr(_self_.ptr(), _113046_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_113046_ta.get()._field_Ident, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1abc63d71_checkTypeAliasDeclKind(_self_, _113046_ta,jule::Trait<_1abd13959_Lookup>(_self_, 3));
}



inline jule::Bool _1abc64679_checkTypeAliasDecls(jule::Ptr<_1abc55eea_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1bbcece94:;
		if (it != expr.end()) {
			jule::Ptr<_1abce6ce4_TypeAlias> _114321_ta = *it;
			{
				_1abc64415_checkTypeAliasDeclDup(_self_, _114321_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bbcece94:;
			++it;
			goto _iter_begin_1bbcece94;
		}
		_iter_end_1bbcece94:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1bbd0e01b_checkEnumItemsDup(_1abc55eea_Sema* _self_, jule::Slice<jule::Ptr<_1abab272a_EnumItem>> _115439_items) {
	{
		auto &expr = _115439_items;
		auto it = expr.begin();
		_iter_begin_1bbd10270:;
		if (it != expr.end()) {
			jule::Ptr<_1abab272a_EnumItem> &_115516_item = *it;
			{
				if (_115516_item.get()._field_Ident.empty()) {
					goto _iter_next_1bbd10270;
				} else if (_1a9726061_IsIgnoreIdent(_115516_item.get()._field_Ident)) {
					_1abc58bac_pushErr(&(*_self_), _115516_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _115439_items;
						auto it = expr.begin();
						_iter_begin_1bbd1100c:;
						if (it != expr.end()) {
							jule::Ptr<_1abab272a_EnumItem> &_116124_citem = *it;
							{
								if ((_115516_item == _116124_citem)) {
									goto _iter_end_1bbd1100c;
								} else if ((_115516_item.get()._field_Ident == _116124_citem.get()._field_Ident)) {
									_1abc58bac_pushErr(&(*_self_), _115516_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_115516_item.get()._field_Ident, &__jule_any_type7)}));
									_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1bbd1100c;
								};
							}
							_iter_next_1bbd1100c:;
							++it;
							goto _iter_begin_1bbd1100c;
						}
						_iter_end_1bbd1100c:;
					};
				};
			}
			_iter_next_1bbd10270:;
			++it;
			goto _iter_begin_1bbd10270;
		}
		_iter_end_1bbd10270:;
	};
}

inline void _1bbd1960e_checkEnumItemsDup(_1abc55eea_Sema* _self_, jule::Slice<jule::Ptr<_1abab4254_TypeEnumItem>> _115439_items) {
	{
		auto &expr = _115439_items;
		auto it = expr.begin();
		_iter_begin_1bbd1a81e:;
		if (it != expr.end()) {
			jule::Ptr<_1abab4254_TypeEnumItem> &_115516_item = *it;
			{
				if (_115516_item.get()._field_Ident.empty()) {
					goto _iter_next_1bbd1a81e;
				} else if (_1a9726061_IsIgnoreIdent(_115516_item.get()._field_Ident)) {
					_1abc58bac_pushErr(&(*_self_), _115516_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _115439_items;
						auto it = expr.begin();
						_iter_begin_1bbd1b5ab:;
						if (it != expr.end()) {
							jule::Ptr<_1abab4254_TypeEnumItem> &_116124_citem = *it;
							{
								if ((_115516_item == _116124_citem)) {
									goto _iter_end_1bbd1b5ab;
								} else if ((_115516_item.get()._field_Ident == _116124_citem.get()._field_Ident)) {
									_1abc58bac_pushErr(&(*_self_), _115516_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_115516_item.get()._field_Ident, &__jule_any_type7)}));
									_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1bbd1b5ab;
								};
							}
							_iter_next_1bbd1b5ab:;
							++it;
							goto _iter_begin_1bbd1b5ab;
						}
						_iter_end_1bbd1b5ab:;
					};
				};
			}
			_iter_next_1bbd1a81e:;
			++it;
			goto _iter_begin_1bbd1a81e;
		}
		_iter_end_1bbd1a81e:;
	};
}



inline void _1abc64b74_checkEnumItemsStr(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abab3220_Enum>& _117442_e) {
	jule::Ptr<_1abcbd5c3_Eval> _117517_eval = _1abc60598_eval(_self_, jule::Trait<_1abd13959_Lookup>(_self_, 3));;
	{
		auto &expr = _117442_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1bbceea34:;
		if (it != expr.end()) {
			jule::Ptr<_1abab272a_EnumItem> _117621_item = *it;
			{
				if (_1abab2b15_AutoExpr(_117621_item.ptr())) {
					_117621_item.get()._field_Value=jule::new_ptr<_1abcbcacd_Value>(_1abcbcacd_Value{._field_Data=jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Constant=static__1aba87227_NewStr(_117621_item.get()._field_Ident)})});
					_117621_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_117621_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type49);
				} else {
					jule::Ptr<_1abcbba55_Data> _118525_d = _1abcd8ee5_evalExpr(_117517_eval, _117621_item.get()._field_Value.get()._field_Expr);;
					if ((_118525_d == nullptr)) {
						goto _iter_next_1bbceea34;
					};
					if ((!(_1abcbc418_IsConst(_118525_d.ptr())))) {
						_1abc58bac_pushErr(_self_.ptr(), _117621_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1abc60a93_checkAssignType(_self_, false,_117442_e.get()._field_Kind.get()._field_Kind,_118525_d,_117621_item.get()._field_Token);
					_117621_item.get()._field_Value.get()._field_Data=_118525_d;
				};
			}
			_iter_next_1bbceea34:;
			++it;
			goto _iter_begin_1bbceea34;
		}
		_iter_end_1bbceea34:;
	};
}



inline void _1abc64de9_checkEnumItemsInt(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abab3220_Enum>& _120042_e) {
	jule::Ptr<_1abcec734_Prim> _120113_prim = _1abce9d6e_Prim(_120042_e.get()._field_Kind.get()._field_Kind.ptr());;
	jule::U64 _120217_max = static_cast<jule::U64>(_1aba841d0_Max(_1abceca97_Str(_120113_prim.ptr())));;
	jule::Ptr<_1abcbd5c3_Eval> _120317_eval = _1abc60598_eval(_self_, jule::Trait<_1abd13959_Lookup>(_self_, 3));;
	{
		auto &expr = _120042_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1bbd03eab:;
		if (it != expr.end()) {
			jule::I64 _120414_i = it - expr.begin();
			jule::Ptr<_1abab272a_EnumItem> _120421_item = *it;
			{
				if ((_120217_max == 0LLU)) {
					_1abc58bac_pushErr(_self_.ptr(), _120421_item.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_120217_max)--;
				};
				if (_1abab2b15_AutoExpr(_120421_item.ptr())) {
					_120421_item.get()._field_Value=jule::new_ptr<_1abcbcacd_Value>(_1abcbcacd_Value{._field_Data=jule::new_ptr<_1abcbba55_Data>()});
					{
						
						if (_1aba86457_IsSigInt(_1abceca97_Str(_120113_prim.ptr()))) {
							_case_begin_1bbd072de:;
							{
								_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1aba86d81_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((_120217_max - (_120217_max - static_cast<jule::U64>(_120414_i))))));
							}
						}
						else {
							_case_begin_1bbd06e7b:;
							{
								_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1aba86eb3_NewU64(static_cast<jule::U64>((_120217_max - (_120217_max - static_cast<jule::U64>(_120414_i)))));
							}
						}
						_match_end_1bbd06e26:;
					};
					_120421_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type49);
				} else {
					jule::Ptr<_1abcbba55_Data> _122225_d = _1abcd8ee5_evalExpr(_120317_eval, _120421_item.get()._field_Value.get()._field_Expr);;
					if ((_122225_d == nullptr)) {
						goto _iter_next_1bbd03eab;
					};
					if ((!(_1abcbc418_IsConst(_122225_d.ptr())))) {
						_1abc58bac_pushErr(_self_.ptr(), _120421_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1abc60a93_checkAssignType(_self_, false,_120042_e.get()._field_Kind.get()._field_Kind,_122225_d,_120421_item.get()._field_Token);
					_120421_item.get()._field_Value.get()._field_Data=_122225_d;
				};
			}
			_iter_next_1bbd03eab:;
			++it;
			_120414_i++;
			goto _iter_begin_1bbd03eab;
		}
		_iter_end_1bbd03eab:;
	};
}



inline void _1abc6516e_checkEnumDecl(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abab3220_Enum>& _123538_e) {
	if (_1a9726061_IsIgnoreIdent(_123538_e.get()._field_Ident)) {
		_1abc58bac_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1abc597d4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_123538_e)),_123538_e.get()._field_Ident,false)) {
		_1abc58bac_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_123538_e.get()._field_Ident, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_123538_e.get()._field_Items.len() == 0LL)) {
		_1abc58bac_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_123538_e.get()._field_Ident, &__jule_any_type7)}));
	};
	_1bbd0e01b_checkEnumItemsDup(_self_.ptr(), _123538_e.get()._field_Items);
	if ((_123538_e.get()._field_Kind != nullptr)) {
		if ((!(_1abc5de15_checkType(_self_, _123538_e.get()._field_Kind,jule::Trait<_1abd13959_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_123538_e.get()._field_Kind=jule::new_ptr<_1abcebdb5_TypeSymbol>(_1abcebdb5_TypeSymbol{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1abcec734_Prim> _126217_t = _1abce9d6e_Prim(_123538_e.get()._field_Kind.get()._field_Kind.ptr());;
	if ((_126217_t == nullptr)) {
		_1abc58bac_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1abd00968_IsStr(_126217_t.ptr())) {
			_case_begin_1bbd1540c:;
			{
				_1abc64b74_checkEnumItemsStr(_self_, _123538_e);
			}
		}
		else if (_1aba866bb_IsInt(_1abceca97_Str(_126217_t.ptr()))) {
			_case_begin_1bbd15110:;
			{
				_1abc64de9_checkEnumItemsInt(_self_, _123538_e);
			}
		}
		else {
			_case_begin_1bbd14593:;
			{
				_1abc58bac_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1bbd1453d:;
	};
}



inline void _1abc653e4_checkTypeEnumDecl(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abab481a_TypeEnum>& _127942_e) {
	if (_1a9726061_IsIgnoreIdent(_127942_e.get()._field_Ident)) {
		_1abc58bac_pushErr(_self_.ptr(), _127942_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1abc597d4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_127942_e)),_127942_e.get()._field_Ident,false)) {
		_1abc58bac_pushErr(_self_.ptr(), _127942_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_127942_e.get()._field_Ident, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_127942_e.get()._field_Items.len() == 0LL)) {
		_1abc58bac_pushErr(_self_.ptr(), _127942_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_127942_e.get()._field_Ident, &__jule_any_type7)}));
		return;;
	};
	_1bbd1960e_checkEnumItemsDup(_self_.ptr(), _127942_e.get()._field_Items);
	{
		auto &expr = _127942_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1bbd1ca85:;
		if (it != expr.end()) {
			jule::Ptr<_1abab4254_TypeEnumItem> _129321_item = *it;
			{
				if ((_129321_item.get()._field_Kind == nullptr)) {
					_1abc58bac_pushErr(_self_.ptr(), _129321_item.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_1bbd1ca85;
				};
				jule::Bool _129817_ok = _1abc5de15_checkType(_self_, _129321_item.get()._field_Kind,jule::Trait<_1abd13959_Lookup>(_self_, 3));;
				if ((!(_129817_ok))) {
					goto _iter_next_1bbd1ca85;
				};
				jule::Ptr<_1abcec734_Prim> _130217_p = _1abce9d6e_Prim(_129321_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_130217_p != nullptr) && _1abd00bcc_IsAny(_130217_p.ptr()))) {
					_1abc58bac_pushErr(_self_.ptr(), _129321_item.get()._field_Token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1bbd1ca85:;
			++it;
			goto _iter_begin_1bbd1ca85;
		}
		_iter_end_1bbd1ca85:;
	};
	if ((_127942_e.get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1abab4254_TypeEnumItem> _130821_item = _127942_e.get()._field_Items[0LL];;
		_1abce79d7_TypeKind _130917_tk = _1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_127942_e, 4)};;
		if (((_130821_item.get()._field_Kind.get()._field_Kind != nullptr) && _1abce81e1_Equal(_130821_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1abce79d7_TypeKind>)((&(_130917_tk))))))) {
			_1abc58bac_pushErr(_self_.ptr(), _130821_item.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_1abab4b4a_Str(_127942_e.ptr()), &__jule_any_type7)}));
		};
	};
}



inline jule::Bool _1abc65658_checkEnumDecls(jule::Ptr<_1abc55eea_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Enums;
		auto it = expr.begin();
		_iter_begin_1bbd23a69:;
		if (it != expr.end()) {
			jule::Ptr<_1abab3220_Enum> _132021_e = *it;
			{
				_1abc6516e_checkEnumDecl(_self_, _132021_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bbd23a69:;
			++it;
			goto _iter_begin_1bbd23a69;
		}
		_iter_end_1bbd23a69:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abc658bc_checkTypeEnumDecls(jule::Ptr<_1abc55eea_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1bbd241b8:;
		if (it != expr.end()) {
			jule::Ptr<_1abab481a_TypeEnum> _133221_e = *it;
			{
				_1abc653e4_checkTypeEnumDecl(_self_, _133221_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bbd241b8:;
			++it;
			goto _iter_begin_1bbd241b8;
		}
		_iter_end_1bbd241b8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abc65bca_checkDeclGenerics(_1abc55eea_Sema* _self_, jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>>& _134237_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _134237_generics;
		auto it = expr.begin();
		_iter_begin_1bbd2660a:;
		if (it != expr.end()) {
			jule::I64 _134413_i = it - expr.begin();
			jule::Ptr<_1ab07acb0_GenericDecl> &_134416_g = *it;
			{
				if (_1a9726061_IsIgnoreIdent(_134416_g.get()._field_Ident)) {
					_1abc58bac_pushErr(&(*_self_), _134416_g.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1bbd2660a;
				};
				_julec_label_duplicationLookup:;
				{
					auto &expr = _134237_generics;
					auto it = expr.begin();
					_iter_begin_1bbd2762d:;
					if (it != expr.end()) {
						jule::I64 _135317_j = it - expr.begin();
						jule::Ptr<_1ab07acb0_GenericDecl> &_135320_ct = *it;
						{
							{
								
								if ((_135317_j >= _134413_i)) {
									_case_begin_1bbd28c8e:;
									{
										goto _iter_end_1bbd2762d;
									}
								}
								else if ((_134416_g.get()._field_Ident == _135320_ct.get()._field_Ident)) {
									_case_begin_1bbd28d16:;
									{
										_1abc58bac_pushErr(&(*_self_), _134416_g.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_134416_g.get()._field_Ident, &__jule_any_type7)}));
										_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1bbd2762d;
									}
								}
								_match_end_1bbd28b7e:;
							};
						}
						_iter_next_1bbd2762d:;
						++it;
						_135317_j++;
						goto _iter_begin_1bbd2762d;
					}
					_iter_end_1bbd2762d:;
				};
			}
			_iter_next_1bbd2660a:;
			++it;
			_134413_i++;
			goto _iter_begin_1bbd2660a;
		}
		_iter_end_1bbd2660a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1abc65ed8_checkFnDeclParamsDup(_1abc55eea_Sema* _self_, jule::Ptr<_1aba9e1c8_Fn>& _136940_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto &expr = _136940_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1bbd2b115:;
		if (it != expr.end()) {
			jule::I64 _137213_i = it - expr.begin();
			jule::Ptr<_1aba9c88b_Param> &_137216_p = *it;
			{
				{
					auto &expr = _136940_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1bbd2bca3:;
					if (it != expr.end()) {
						jule::Ptr<_1ab07acb0_GenericDecl> &_137420_g = *it;
						{
							if ((_137216_p.get()._field_Ident == _137420_g.get()._field_Ident)) {
								__jule_func_result=false;
								_1abc58bac_pushErr(&(*_self_), _137216_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_137216_p.get()._field_Ident, &__jule_any_type7)}));
								_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1bbd2b115;
							};
						}
						_iter_next_1bbd2bca3:;
						++it;
						goto _iter_begin_1bbd2bca3;
					}
					_iter_end_1bbd2bca3:;
				};
				_julec_label_paramsLookup:;
				{
					auto &expr = _136940_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1bbd2c215:;
					if (it != expr.end()) {
						jule::I64 _138417_j = it - expr.begin();
						jule::Ptr<_1aba9c88b_Param> &_138420_jp = *it;
						{
							{
								
								if ((_138417_j >= _137213_i)) {
									_case_begin_1bbd2e459:;
									{
										goto _iter_end_1bbd2c215;
									}
								}
								else if ((_1a9726308_IsAnonIdent(_137216_p.get()._field_Ident) || _1a9726308_IsAnonIdent(_138420_jp.get()._field_Ident))) {
									_case_begin_1bbd2e4d1:;
									{
										goto _iter_end_1bbd2c215;
									}
								}
								else if ((_137216_p.get()._field_Ident == _138420_jp.get()._field_Ident)) {
									_case_begin_1bbd2e558:;
									{
										__jule_func_result=false;
										_1abc58bac_pushErr(&(*_self_), _137216_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_137216_p.get()._field_Ident, &__jule_any_type7)}));
										_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1bbd2b115;
									}
								}
								_match_end_1bbd2e338:;
							};
						}
						_iter_next_1bbd2c215:;
						++it;
						_138417_j++;
						goto _iter_begin_1bbd2c215;
					}
					_iter_end_1bbd2c215:;
				};
			}
			_iter_next_1bbd2b115:;
			++it;
			_137213_i++;
			goto _iter_begin_1bbd2b115;
		}
		_iter_end_1bbd2b115:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1abc662e6_checkFnDeclResultDup(_1abc55eea_Sema* _self_, jule::Ptr<_1aba9e1c8_Fn>& _140340_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1aba9e63a_IsVoid(_140340_f.ptr())) {
		return __jule_func_result;;
	};
	{
		auto &expr = _140340_f.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1bbd32319:;
		if (it != expr.end()) {
			jule::I64 _141013_i = it - expr.begin();
			jule::Ptr<_1a97237bc_Token> &_141016_v = *it;
			{
				if ((_1a9726061_IsIgnoreIdent(_141016_v.get()._field_Kind) || _1a9726308_IsAnonIdent(_141016_v.get()._field_Kind))) {
					goto _iter_next_1bbd32319;
				};
				{
					auto &expr = _140340_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1bbd336a0:;
					if (it != expr.end()) {
						jule::Ptr<_1ab07acb0_GenericDecl> &_141520_g = *it;
						{
							if ((_141016_v.get()._field_Kind == _141520_g.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1bbd336a0:;
						++it;
						goto _iter_begin_1bbd336a0;
					}
					_iter_end_1bbd336a0:;
				};
				{
					auto &expr = _140340_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1bbd348d2:;
					if (it != expr.end()) {
						jule::Ptr<_1aba9c88b_Param> &_142120_p = *it;
						{
							if ((_141016_v.get()._field_Kind == _142120_p.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1bbd348d2:;
						++it;
						goto _iter_begin_1bbd348d2;
					}
					_iter_end_1bbd348d2:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _140340_f.get()._field_Result.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1bbd35ad1:;
					if (it != expr.end()) {
						jule::I64 _142917_j = it - expr.begin();
						jule::Ptr<_1a97237bc_Token> &_142920_jv = *it;
						{
							{
								
								if ((_142917_j >= _141013_i)) {
									_case_begin_1bbd3684b:;
									{
										goto _iter_end_1bbd35ad1;
									}
								}
								else if ((_142920_jv.get()._field_Kind == _141016_v.get()._field_Kind)) {
									_case_begin_1bbd368c3:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1bbd3673b:;
							};
						}
						_iter_next_1bbd35ad1:;
						++it;
						_142917_j++;
						goto _iter_begin_1bbd35ad1;
					}
					_iter_end_1bbd35ad1:;
				};
				goto _iter_next_1bbd32319;
				_julec_label_exist:;
				_1abc58bac_pushErr(&(*_self_), _141016_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_141016_v.get()._field_Kind, &__jule_any_type7)}));
				_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1bbd32319:;
			++it;
			_141013_i++;
			goto _iter_begin_1bbd32319;
		}
		_iter_end_1bbd32319:;
	};
	return __jule_func_result;;
}



inline void _1abc6656b_checkFnDeclPrototype(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1aba9e1c8_Fn>& _145045_f) {
	if ((_145045_f.get()._field_Exceptional && _145045_f.get()._field_CppLinked)) {
		_1abc58bac_pushErr(_self_.ptr(), _145045_f.get()._field_Token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_145045_f.get()._field_Exceptional) {
		if (_1aba9eb13_IsEntryPoint(_145045_f.ptr())) {
			_1abc58bac_pushErr(_self_.ptr(), _145045_f.get()._field_Token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1aba9ed77_IsInit(_145045_f.ptr())) {
			_1abc58bac_pushErr(_self_.ptr(), _145045_f.get()._field_Token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1abc65bca_checkDeclGenerics(_self_.ptr(), _145045_f.get()._field_Generics)))) {
			_case_begin_1bbd39a5d:;
		}
		else if ((!(_1abc65ed8_checkFnDeclParamsDup(_self_.ptr(), _145045_f)))) {
			_case_begin_1bbd39ad5:;
		}
		else if ((!(_1abc662e6_checkFnDeclResultDup(_self_.ptr(), _145045_f)))) {
			_case_begin_1bbd3ae16:;
		}
		_match_end_1bbd3992b:;
	};
}



inline void _1abc667e1_checkTraitDeclMethod(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1aba9e1c8_Fn>& _147145_f) {
	if (_1a9726061_IsIgnoreIdent(_147145_f.get()._field_Ident)) {
		_1abc58bac_pushErr(_self_.ptr(), _147145_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_147145_f.get()._field_sema=_self_;
	_1abc6656b_checkFnDeclPrototype(_self_, _147145_f);
	jule::Ptr<_1abaa1d79_FnIns> _147817_ins = _1abaa0828_instance(_147145_f);;
	_1abc62e5d_reloadFnInsTypes(_self_, _147817_ins);
	_147817_ins.get()._field_reloaded=true;
	_1abaa0b03_appendInstance(_147145_f.ptr(), _147817_ins);
}



inline void _1abc66a66_checkTraitDeclMethods(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abab10ca_Trait>& _148446_t) {
	{
		auto &expr = _148446_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bbd3e403:;
		if (it != expr.end()) {
			jule::I64 _148514_i = it - expr.begin();
			jule::Ptr<_1aba9e1c8_Fn> _148521_f = *it;
			{
				_1abc667e1_checkTraitDeclMethod(_self_, _148521_f);
				_148446_t.get()._field_Mutable=(_148446_t.get()._field_Mutable || _148521_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto &expr = _148446_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1bbd41438:;
					if (it != expr.end()) {
						jule::I64 _149617_j = it - expr.begin();
						jule::Ptr<_1aba9e1c8_Fn> _149620_jf = *it;
						{
							{
								
								if ((_149617_j >= _148514_i)) {
									_case_begin_1bbd421c5:;
									{
										goto _iter_end_1bbd41438;
									}
								}
								else if ((_148521_f.get()._field_Ident == _149620_jf.get()._field_Ident)) {
									_case_begin_1bbd4224c:;
									{
										_1abc58bac_pushErr(_self_.ptr(), _148521_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_148521_f.get()._field_Ident, &__jule_any_type7)}));
										_1abc58ecb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1bbd41438;
									}
								}
								_match_end_1bbd420b5:;
							};
						}
						_iter_next_1bbd41438:;
						++it;
						_149617_j++;
						goto _iter_begin_1bbd41438;
					}
					_iter_end_1bbd41438:;
				};
			}
			_iter_next_1bbd3e403:;
			++it;
			_148514_i++;
			goto _iter_begin_1bbd3e403;
		}
		_iter_end_1bbd3e403:;
	};
}



inline void _1abc66cdb_checkTraitDecl(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abab10ca_Trait>& _151539_t) {
	if (_1a9726061_IsIgnoreIdent(_151539_t.get()._field_Ident)) {
		_1abc58bac_pushErr(_self_.ptr(), _151539_t.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1abc597d4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_151539_t)),_151539_t.get()._field_Ident,false)) {
		_1abc58bac_pushErr(_self_.ptr(), _151539_t.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_151539_t.get()._field_Ident, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1abc66a66_checkTraitDeclMethods(_self_, _151539_t);
}



inline jule::Bool _1abc67050_checkTraitDecls(jule::Ptr<_1abc55eea_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1bbd46174:;
		if (it != expr.end()) {
			jule::Ptr<_1abab10ca_Trait> _152821_t = *it;
			{
				_1abc66cdb_checkTraitDecl(_self_, _152821_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bbd46174:;
			++it;
			goto _iter_begin_1bbd46174;
		}
		_iter_end_1bbd46174:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abc67407_checkTraitImplMethods(_1abc55eea_Sema* _self_, jule::Ptr<_1abab10ca_Trait>& _153845_base, jule::Ptr<_1abab8c81_Impl>& _153860_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _153860_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bbd47b6a:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> &_154016_f = *it;
			{
				if ((_1abab1e55_FindMethod(_153845_base.ptr(), _154016_f.get()._field_Ident) == nullptr)) {
					_1abc58bac_pushErr(&(*_self_), _154016_f.get()._field_Token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_153845_base.get()._field_Ident, &__jule_any_type7),jule::Any(_154016_f.get()._field_Ident, &__jule_any_type7)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1bbd47b6a:;
			++it;
			goto _iter_begin_1bbd47b6a;
		}
		_iter_end_1bbd47b6a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1abc677ae_implToStruct(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab08a1a9_Struct>& _154937_dest, jule::Ptr<_1abab8c81_Impl>& _154957_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _154957_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bbd49e36:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> _155321_f = *it;
			{
				if (((_1ab04e5e1_FindMethod(_154937_dest.ptr(), _155321_f.get()._field_Ident,_155321_f.get()._field_Statically) != nullptr) || (_1ab050e1c_FindField(_154937_dest.ptr(), _155321_f.get()._field_Ident) != nullptr))) {
					_1abc58bac_pushErr(_self_.ptr(), _155321_f.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154937_dest.get()._field_Ident, &__jule_any_type7),jule::Any(_155321_f.get()._field_Ident, &__jule_any_type7)}));
					__jule_func_result=false;
					goto _iter_next_1bbd49e36;
				};
				if (((_154937_dest.get()._field_Generics.len() > 0LL) && (_155321_f.get()._field_Generics.len() > 0LL))) {
					{
						auto &expr = _155321_f.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1bbd4c4ee:;
						if (it != expr.end()) {
							jule::Ptr<_1ab07acb0_GenericDecl> _156124_fg = *it;
							{
								{
									auto &expr = _154937_dest.get()._field_Generics;
									auto it = expr.begin();
									_iter_begin_1bbd4cce6:;
									if (it != expr.end()) {
										jule::Ptr<_1ab07acb0_GenericDecl> _156228_dg = *it;
										{
											if ((_156124_fg.get()._field_Ident == _156228_dg.get()._field_Ident)) {
												_1abc58bac_pushErr(_self_.ptr(), _156124_fg.get()._field_Token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1bbd4cce6:;
										++it;
										goto _iter_begin_1bbd4cce6;
									}
									_iter_end_1bbd4cce6:;
								};
							}
							_iter_next_1bbd4c4ee:;
							++it;
							goto _iter_begin_1bbd4c4ee;
						}
						_iter_end_1bbd4c4ee:;
					};
				};
				_1abc59b03_checkDirectives(_self_, _155321_f.get()._field_Directives,jule::Any(_155321_f, &__jule_any_type67));
				_155321_f.get()._field_sema=_self_;
				_155321_f.get()._field_Owner=_154937_dest;
				_154937_dest.get()._field_Methods = jule::alloc_for_append(_154937_dest.get()._field_Methods,1);_154937_dest.get()._field_Methods.__push(_155321_f);;
			}
			_iter_next_1bbd49e36:;
			++it;
			goto _iter_begin_1bbd49e36;
		}
		_iter_end_1bbd49e36:;
	};
	{
		auto &expr = _154957_ipl.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_1bbd50524:;
		if (it != expr.end()) {
			jule::Ptr<_1abc73ee6_Var> _157821_v = *it;
			{
				;
				if (((_1ab04e5e1_FindMethod(_154937_dest.ptr(), _157821_v.get()._field_Ident,true) != nullptr) || (_1ab04da41_FindStatic(_154937_dest.ptr(), _157821_v.get()._field_Ident) != nullptr))) {
					_1abc58bac_pushErr(_self_.ptr(), _157821_v.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154937_dest.get()._field_Ident, &__jule_any_type7),jule::Any(_157821_v.get()._field_Ident, &__jule_any_type7)}));
					__jule_func_result=false;
					goto _iter_next_1bbd50524;
				};
				_154937_dest.get()._field_Statics = jule::alloc_for_append(_154937_dest.get()._field_Statics,1);_154937_dest.get()._field_Statics.__push(_157821_v);;
			}
			_iter_next_1bbd50524:;
			++it;
			goto _iter_begin_1bbd50524;
		}
		_iter_end_1bbd50524:;
	};
	return __jule_func_result;;
}



inline void _1abc67a34_implTrait(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abab8c81_Impl>& _159134_decl) {
	jule::Ptr<_1abce79d7_TypeKind> _159217_base_t = _1abc5e982_selectType(_self_, _159134_decl.get()._field_Base);;
	if ((_159217_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1abab10ca_Trait> _159617_base = _1abceb535_Trait(_159217_base_t.ptr());;
	if ((_159617_base == nullptr)) {
		_1abc58bac_pushErr(_self_.ptr(), _159134_decl.get()._field_Base.get()._field_Token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_159217_base_t.ptr()), &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1abce79d7_TypeKind> _160317_destT = _1abc5e982_selectType(_self_, _159134_decl.get()._field_Dest);;
	if ((_160317_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab08a583_StructIns> _160717_destS = _1abceb2c1_Struct(_160317_destT.ptr());;
	if ((_160717_destS == nullptr)) {
		_1abc58bac_pushErr(_self_.ptr(), _159134_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_160317_destT.ptr()), &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab08a1a9_Struct> _161417_dest = _160717_destS.get()._field_Decl;;
	if ((_1a972954d_Dir(_161417_dest.get()._field_Token.get()._field_File.ptr()) != _1a972954d_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1abc58bac_pushErr(_self_.ptr(), _159134_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_159617_base.get()._field_Implemented = jule::alloc_for_append(_159617_base.get()._field_Implemented,1);_159617_base.get()._field_Implemented.__push(_161417_dest);;
	_161417_dest.get()._field_Implements = jule::alloc_for_append(_161417_dest.get()._field_Implements,1);_161417_dest.get()._field_Implements.__push(_159617_base);;
	if ((_159134_decl.get()._field_Statics.len() > 0LL)) {
		_1abc58bac_pushErr(_self_.ptr(), _159134_decl.get()._field_Statics[0LL].get()._field_Token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1abc67407_checkTraitImplMethods(_self_.ptr(), _159617_base,_159134_decl)))) {
			_case_begin_1bbd59a5b:;
			{
				return;;
			}
		}
		else if ((!(_1abc677ae_implToStruct(_self_, _161417_dest,_159134_decl)))) {
			_case_begin_1bbd59ad3:;
			{
				return;;
			}
		}
		_match_end_1bbd58ebc:;
	};
}



inline void _1abc67ca9_implStruct(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abab8c81_Impl>& _163635_decl) {
	jule::Ptr<_1abce79d7_TypeKind> _163717_destT = _1abc5e982_selectType(_self_, _163635_decl.get()._field_Dest);;
	if ((_163717_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab08a583_StructIns> _164117_destS = _1abceb2c1_Struct(_163717_destT.ptr());;
	if ((_164117_destS == nullptr)) {
		_1abc58bac_pushErr(_self_.ptr(), _163635_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_163717_destT.ptr()), &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab08a1a9_Struct> _164817_dest = _164117_destS.get()._field_Decl;;
	if ((_1a972954d_Dir(_164817_dest.get()._field_Token.get()._field_File.ptr()) != _1a972954d_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1abc58bac_pushErr(_self_.ptr(), _163635_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1abc677ae_implToStruct(_self_, _164817_dest,_163635_decl)))) {
			_case_begin_1bbd5e3ac:;
			{
				return;;
			}
		}
		_match_end_1bbd5bb07:;
	};
}



inline void _1abc6802e_implImpl(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abab8c81_Impl>& _166133_decl) {
	{
		
		if (_1abab917c_IsTraitImpl(_166133_decl.ptr())) {
			_case_begin_1bbd5eeb2:;
			{
				_1abc67a34_implTrait(_self_, _166133_decl);
			}
		}
		else if (_1abab93e1_IsStructImpl(_166133_decl.ptr())) {
			_case_begin_1bbd60039:;
			{
				_1abc67ca9_implStruct(_self_, _166133_decl);
			}
		}
		_match_end_1bbd5eda2:;
	};
}



inline void _1abc6834d_checkVarDecl(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abc73ee6_Var>& _167237_decl, jule::Trait<_1abd13959_Lookup> _167253_l) {
	if (_1a9726061_IsIgnoreIdent(_167237_decl.get()._field_Ident)) {
		_1abc58bac_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1abc74623_IsTypeInferred(_167237_decl.ptr())) {
		if ((!(_1abc743ae_IsInitialized(_167237_decl.ptr())))) {
			_1abc58bac_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1abc5de15_checkType(_self_, _167237_decl.get()._field_Kind,_167253_l);
	};
	if ((_167237_decl.get()._field_Constant && _167237_decl.get()._field_Reference)) {
		_1abc58bac_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1abc743ae_IsInitialized(_167237_decl.ptr())))) {
		if (_167237_decl.get()._field_Constant) {
			_1abc58bac_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_167237_decl.get()._field_Statically) {
			_1abc58bac_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_167237_decl.get()._field_Reference) {
			_1abc58bac_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1abc685c3_checkGlobalVarDecl(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abc73ee6_Var>& _170443_decl) {
	if (_1abc597d4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170443_decl)),_170443_decl.get()._field_Ident,_170443_decl.get()._field_CppLinked)) {
		_1abc58bac_pushErr(_self_.ptr(), _170443_decl.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_170443_decl.get()._field_Ident, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_170443_decl.get()._field_CppLinked && _170443_decl.get()._field_Constant)) {
		_1abc58bac_pushErr(_self_.ptr(), _170443_decl.get()._field_Token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_170443_decl.get()._field_CppLinked)) && (!(_170443_decl.get()._field_Constant))) && (!(_170443_decl.get()._field_Statically)))) {
		_1abc58bac_pushErr(_self_.ptr(), _170443_decl.get()._field_Token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1abc58ecb_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1abc59b03_checkDirectives(_self_, _170443_decl.get()._field_Directives,jule::Any(_170443_decl, &__jule_any_type10));
	_1abc6834d_checkVarDecl(_self_, _170443_decl,jule::Trait<_1abd13959_Lookup>(_self_, 3));
}



inline jule::Bool _1abc68837_checkGlobalDecls(jule::Ptr<_1abc55eea_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1bbd6986d:;
		if (it != expr.end()) {
			jule::Ptr<_1abc73ee6_Var> _172221_decl = *it;
			{
				_1abc685c3_checkGlobalVarDecl(_self_, _172221_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bbd6986d:;
			++it;
			goto _iter_begin_1bbd6986d;
		}
		_iter_end_1bbd6986d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abc68bde_checkStructTraitImpl(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab08a1a9_Struct>& _173245_strct, jule::Ptr<_1abab10ca_Trait>& _173266_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _173266_trt.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bbd6b111:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> _173321_tf = *it;
			{
				jule::Bool _173421_exist = false;;
				jule::Ptr<_1aba9e1c8_Fn> _173521_sf = _1ab04e5e1_FindMethod(_173245_strct.ptr(), _173321_tf.get()._field_Ident,_173321_tf.get()._field_Statically);;
				jule::Ptr<_1abaa1d79_FnIns> _173617_tfK = _1abc61b71_getTraitCheckFnKind(_self_, _173321_tf);;
				if ((_173521_sf != nullptr)) {
					jule::Ptr<_1abaa1d79_FnIns> _173825_sfK = _1abc61b71_getTraitCheckFnKind(_self_, _173521_sf);;
					_173421_exist=(((_173617_tfK.get()._field_Decl.get()._field_Public == _173825_sfK.get()._field_Decl.get()._field_Public) && (_173617_tfK.get()._field_Decl.get()._field_Ident == _173825_sfK.get()._field_Decl.get()._field_Ident)) && _1abaa2c37_equalTrait(_173617_tfK, _173825_sfK));
				};
				if (_173421_exist) {
					jule::Ptr<_1ab03a720_Directive> _174421_d = _1abce2185_findDirective(_173521_sf.get()._field_Directives,jule::Str("deprecated", 10));;
					if ((_174421_d != nullptr)) {
						_1abc58bac_pushErr(_self_.ptr(), _174421_d.get()._field_Tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					jule::Str _175125_s = _1abaa3a90_GetKindStr(_173617_tfK.ptr(), true);;
					if (_173321_tf.get()._field_Public) {
						(_175125_s).buffer.insert(0, (jule::Str()));;
					};
					_1abc58bac_pushErr(_self_.ptr(), _173245_strct.get()._field_Token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_173266_trt.get()._field_Ident, &__jule_any_type7),jule::Any(_175125_s, &__jule_any_type7)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1bbd6b111:;
			++it;
			goto _iter_begin_1bbd6b111;
		}
		_iter_end_1bbd6b111:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1abc68eec_checkStructImpls(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab08a1a9_Struct>& _176241_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _176241_s.get()._field_Implements;
		auto it = expr.begin();
		_iter_begin_1bbd72a0d:;
		if (it != expr.end()) {
			jule::Ptr<_1abab10ca_Trait> _176421_trt = *it;
			{
				__jule_func_result=(_1abc68bde_checkStructTraitImpl(_self_, _176241_s,_176421_trt) && __jule_func_result);
			}
			_iter_next_1bbd72a0d:;
			++it;
			goto _iter_begin_1bbd72a0d;
		}
		_iter_end_1bbd72a0d:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1abc6930a_checkStructFields(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab08a1a9_Struct>& _177042_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _177042_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1bbd73d94:;
		if (it != expr.end()) {
			jule::Ptr<_1ab05e216_Field> _177221_f = *it;
			{
				_177221_f.get()._field_Owner=_177042_st;
				{
					auto &expr = _177042_st.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1bbd74922:;
					if (it != expr.end()) {
						jule::Ptr<_1ab05e216_Field> _177420_cf = *it;
						{
							if ((_177221_f == _177420_cf)) {
								goto _iter_end_1bbd74922;
							} else if ((_177221_f.get()._field_Ident == _177420_cf.get()._field_Ident)) {
								_1abc58bac_pushErr(_self_.ptr(), _177221_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_177221_f.get()._field_Ident, &__jule_any_type7)}));
								_1abc58ecb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1bbd74922:;
						++it;
						goto _iter_begin_1bbd74922;
					}
					_iter_end_1bbd74922:;
				};
			}
			_iter_next_1bbd73d94:;
			++it;
			goto _iter_begin_1bbd73d94;
		}
		_iter_end_1bbd73d94:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1abc69580_checkStructDecl(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab08a1a9_Struct>& _178740_s) {
	if (_1a9726061_IsIgnoreIdent(_178740_s.get()._field_Ident)) {
		_1abc58bac_pushErr(_self_.ptr(), _178740_s.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1abc597d4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_178740_s)),_178740_s.get()._field_Ident,_178740_s.get()._field_CppLinked)) {
		_1abc58bac_pushErr(_self_.ptr(), _178740_s.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_178740_s.get()._field_Ident, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1abc59b03_checkDirectives(_self_, _178740_s.get()._field_Directives,jule::Any(_178740_s, &__jule_any_type68));
	{
		
		if ((!(_1abc65bca_checkDeclGenerics(_self_.ptr(), _178740_s.get()._field_Generics)))) {
			_case_begin_1bbd767e2:;
		}
		else if ((!(_1abc6930a_checkStructFields(_self_, _178740_s)))) {
			_case_begin_1bbd78728:;
		}
		else if ((!(_1abc68eec_checkStructImpls(_self_, _178740_s)))) {
			_case_begin_1bbd7878e:;
		}
		_match_end_1bbd78618:;
	};
}



inline jule::Bool _1abc697e4_checkStructDecls(jule::Ptr<_1abc55eea_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bbd79a15:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a1a9_Struct> _180621_s = *it;
			{
				_1abc69580_checkStructDecl(_self_, _180621_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bbd79a15:;
			++it;
			goto _iter_begin_1bbd79a15;
		}
		_iter_end_1bbd79a15:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1abc69a69_checkFnDecl(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1aba9e1c8_Fn>& _181636_f) {
	if (_1a9726061_IsIgnoreIdent(_181636_f.get()._field_Ident)) {
		_1abc58bac_pushErr(_self_.ptr(), _181636_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1abc59b03_checkDirectives(_self_, _181636_f.get()._field_Directives,jule::Any(_181636_f, &__jule_any_type67));
	_181636_f.get()._field_sema=_self_;
	_1abc6656b_checkFnDeclPrototype(_self_, _181636_f);
	if (_1abc597d4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_181636_f)),_181636_f.get()._field_Ident,_181636_f.get()._field_CppLinked)) {
		if ((_181636_f.get()._field_Ident == jule::Str("init", 4))) {
			jule::Ptr<_1aba9e1c8_Fn> _182821_init = _1abc577e3_FindFn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_182821_init != nullptr)) {
				return;;
			};
		};
		_1abc58bac_pushErr(_self_.ptr(), _181636_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_181636_f.get()._field_Ident, &__jule_any_type7)}));
		_1abc58ecb_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1abc69ccd_checkFnDecls(jule::Ptr<_1abc55eea_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1bbd7e960:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> _184021_f = *it;
			{
				_1abc69a69_checkFnDecl(_self_, _184021_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bbd7e960:;
			++it;
			goto _iter_begin_1bbd7e960;
		}
		_iter_end_1bbd7e960:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1abc6a196_pushCycleError(_1abc55eea_Sema* _self_, jule::Ptr<_1ab08a1a9_Struct>& _185030_st1, jule::Ptr<_1ab08a1a9_Struct>& _185045_st2, jule::Str& _185064_message) {
	;
	jule::Str _185213_refers_to = _1a7995bb7_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_185030_st1.get()._field_Ident, &__jule_any_type7),jule::Any(_185045_st2.get()._field_Ident, &__jule_any_type7)}));;
	(_185064_message).buffer.insert(0, (((_1a78d5002_Repeat(jule::Str(" ", 1),4LL) + _185213_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1abc6a5e7_checkCrossCycle(_1abc55eea_Sema* _self_, jule::Ptr<_1ab08a1a9_Struct>& _185631_st1, jule::Ptr<_1ab08a1a9_Struct>& _185646_st2, jule::Str& _185665_message) {
	{
		auto &expr = _185646_st2.get()._field_Uses;
		auto it = expr.begin();
		_iter_begin_1bbd82c0a:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a1a9_Struct> &_185716_u = *it;
			{
				if ((_185716_u == _185631_st1)) {
					_1abc6a196_pushCycleError(&(*_self_), _185646_st2,_185716_u,_185665_message);
					return false;;
				};
				if ((!(_1abc6a5e7_checkCrossCycle(&(*_self_), _185631_st1,_185716_u,_185665_message)))) {
					_1abc6a196_pushCycleError(&(*_self_), _185646_st2,_185716_u,_185665_message);
					return false;;
				};
			}
			_iter_next_1bbd82c0a:;
			++it;
			goto _iter_begin_1bbd82c0a;
		}
		_iter_end_1bbd82c0a:;
	};
	return true;;
}



inline jule::Bool _1abc6aa6a_checkStructDeriveIllegalCycles(_1abc55eea_Sema* _self_, jule::Str _187149_derive, jule::Ptr<_1ab08a1a9_Struct>& _187163_st1, jule::Ptr<_1abce79d7_TypeKind>& _187182_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab08a1a9_Struct> _187217_st2 = _1abd11072_getStructFromKind(_187182_k);;
	if ((_187217_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((_187163_st1 == _187217_st2)) {
		_1abc58bac_pushErr(&(*_self_), _187163_st1.get()._field_Token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_187149_derive, &__jule_any_type7),jule::Any(_187163_st1.get()._field_Ident, &__jule_any_type7)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _188417_message = jule::Str();;
	if ((!(_1abc6a5e7_checkCrossCycle(&(*_self_), _187163_st1,_187217_st2,_188417_message)))) {
		jule::Str _188621_errMsg = _188417_message;;
		_188417_message=jule::Str();
		_1abc6a196_pushCycleError(&(*_self_), _187163_st1,_187217_st2,_188417_message);
		_188621_errMsg+=_188417_message;
		_1abc58bac_pushErr(&(*_self_), _187163_st1.get()._field_Token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_187149_derive, &__jule_any_type7),jule::Any(_188621_errMsg, &__jule_any_type7)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abc6adab_checkStructInsDeriveClone(_1abc55eea_Sema* _self_, jule::Ptr<_1ab08a583_StructIns> _189648_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_1ab0541d9_IsDerives(_189648_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &expr = _189648_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1bbd8857e:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a396_FieldIns> _190021_f = *it;
			{
				if ((_190021_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1bbd8857e;
				};
				if ((!(_1abce9896_SupportsCloning(_190021_f.get()._field_Kind.ptr())))) {
					_1abc58bac_pushErr(&(*_self_), _189648_st.get()._field_Decl.get()._field_Token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_190021_f.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(jule::Str("Clone", 5), &__jule_any_type77)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1abc6aa6a_checkStructDeriveIllegalCycles(&(*_self_), jule::Str("Clone", 5),_189648_st.get()._field_Decl,_190021_f.get()._field_Kind)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bbd8857e:;
			++it;
			goto _iter_begin_1bbd8857e;
		}
		_iter_end_1bbd8857e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1abc6b098_checkPackageDecls(jule::Ptr<_1abc55eea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bbd883c5:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _191821_f = *it;
			{
				_1abc587e4_setCurrentFile(_self_.ptr(), _191821_f);
				if ((!(_1abc658bc_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_1abc64679_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bbd883c5:;
			++it;
			goto _iter_begin_1bbd883c5;
		}
		_iter_end_1bbd883c5:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bbd86a99:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _192821_f = *it;
			{
				_1abc587e4_setCurrentFile(_self_.ptr(), _192821_f);
				if ((!(_1abc67050_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bbd86a99:;
			++it;
			goto _iter_begin_1bbd86a99;
		}
		_iter_end_1bbd86a99:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bbd8c4c8:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _193521_f = *it;
			{
				_1abc587e4_setCurrentFile(_self_.ptr(), _193521_f);
				if ((!(_1abc68837_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bbd8c4c8:;
			++it;
			goto _iter_begin_1bbd8c4c8;
		}
		_iter_end_1bbd8c4c8:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bbd8c9c3:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _194221_f = *it;
			{
				_1abc587e4_setCurrentFile(_self_.ptr(), _194221_f);
				{
					
					if ((!(_1abc69ccd_checkFnDecls(_self_)))) {
						_case_begin_1bbd8ea6e:;
					}
					else if ((!(_1abc697e4_checkStructDecls(_self_)))) {
						_case_begin_1bbd8ead5:;
					}
					else {
						_case_begin_1bbd8ea08:;
						{
							goto _iter_next_1bbd8c9c3;
						}
					}
					_match_end_1bbd8e992:;
				};
				return;;
			}
			_iter_next_1bbd8c9c3:;
			++it;
			goto _iter_begin_1bbd8c9c3;
		}
		_iter_end_1bbd8c9c3:;
	};
}



inline void _1abc6b3d9_checkDataForTypeInference(_1abc55eea_Sema* _self_, jule::Ptr<_1abcbba55_Data>& _195445_d, jule::Ptr<_1a97237bc_Token>& _195456_err_token) {
	{
		
		if (_1abcbbe40_IsNil(_195445_d.ptr())) {
			_case_begin_1bbd90a2b:;
			{
				_1abc58bac_pushErr(&(*_self_), _195456_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1abcbc1a4_IsVoid(_195445_d.ptr())) {
			_case_begin_1bbd90aa3:;
			{
				_1abc58bac_pushErr(&(*_self_), _195456_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_195445_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1bbd90b2a:;
			{
				_1abc58bac_pushErr(&(*_self_), _195456_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1bbd9090a:;
	};
}



inline void _1abc6b670_checkVar(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abc73ee6_Var>& _196533_v) {
	if (_196533_v.get()._field_CppLinked) {
		return;;
	};
	if (_1abc74623_IsTypeInferred(_196533_v.ptr())) {
		_196533_v.get()._field_Kind=jule::new_ptr<_1abcebdb5_TypeSymbol>(_1abcebdb5_TypeSymbol{._field_Kind=_196533_v.get()._field_Value.get()._field_Data.get()._field_Kind});
		_1abc6b3d9_checkDataForTypeInference(_self_.ptr(), _196533_v.get()._field_Value.get()._field_Data,_196533_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		_1abc639a8_checkValidityForInitExpr(_self_, _196533_v.get()._field_Mutable,_196533_v.get()._field_Reference,_196533_v.get()._field_Kind.get()._field_Kind,_196533_v.get()._field_Value.get()._field_Data,_196533_v.get()._field_Value.get()._field_Expr.get()._field_Token);
	} else {
		jule::Ptr<_1abd03ac0_Arr> _198221_arr = _1abceaa84_Arr(_196533_v.get()._field_Kind.get()._field_Kind.ptr());;
		if ((_198221_arr != nullptr)) {
			if (_198221_arr.get()._field_Auto) {
				jule::Ptr<_1abd03ac0_Arr> _198525_dataArr = _1abceaa84_Arr(_196533_v.get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_198525_dataArr != nullptr)) {
					_198221_arr.get()._field_N=_198525_dataArr.get()._field_N;
				};
			};
		};
		if (_1abc60a93_checkAssignType(_self_, _196533_v.get()._field_Reference,_196533_v.get()._field_Kind.get()._field_Kind,_196533_v.get()._field_Value.get()._field_Data,_196533_v.get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1abc639a8_checkValidityForInitExpr(_self_, _196533_v.get()._field_Mutable,_196533_v.get()._field_Reference,_196533_v.get()._field_Kind.get()._field_Kind,_196533_v.get()._field_Value.get()._field_Data,_196533_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		};
	};
	if ((_196533_v.get()._field_Reference && (!(_1abd103d4_isValidForRef(_196533_v.get()._field_Kind.get()._field_Kind))))) {
		_1abc58bac_pushErr(_self_.ptr(), _196533_v.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_196533_v.get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type7)}));
	};
	if (_196533_v.get()._field_Constant) {
		if ((!(_1abcbc418_IsConst(_196533_v.get()._field_Value.get()._field_Data.ptr())))) {
			_1abc58bac_pushErr(_self_.ptr(), _196533_v.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_196533_v.get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1abceba0d_Tup(_196533_v.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		_196533_v.get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1abc6b98e_checkTypeVar(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abc73ee6_Var>& _202037_decl, jule::Trait<_1abd13959_Lookup> _202053_l) {
	if ((_202037_decl.get()._field_CppLinked || (!(_1abc743ae_IsInitialized(_202037_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1abcbd5c3_Eval> _202517_eval = nullptr;;
	if ((_202037_decl.get()._field_Kind != nullptr)) {
		_202517_eval=_1abc5edd3_evalpd(_self_, _202053_l,_202037_decl.get()._field_Kind.get()._field_Kind,_202037_decl);
	} else {
		_202517_eval=_1abc5edd3_evalpd(_self_, _202053_l,nullptr,_202037_decl);
	};
	_202517_eval.get()._field_immutable=(!(_202037_decl.get()._field_Mutable));
	_202037_decl.get()._field_Value.get()._field_Data=_1abcd8ee5_evalExpr(_202517_eval, _202037_decl.get()._field_Value.get()._field_Expr);
	if ((_202037_decl.get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1abc6b670_checkVar(_self_, _202037_decl);
}



inline void _1abc6bb6a_checkGlobalTypes(jule::Ptr<_1abc55eea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1bbd9ecb0:;
		if (it != expr.end()) {
			jule::Ptr<_1abc73ee6_Var> _204121_decl = *it;
			{
				if (((_1abc743ae_IsInitialized(_204121_decl.ptr()) && (_204121_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1abc74623_IsTypeInferred(_204121_decl.ptr()) && (_204121_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1abc6b98e_checkTypeVar(_self_, _204121_decl,jule::Trait<_1abd13959_Lookup>(_self_, 3));
				};
			}
			_iter_next_1bbd9ecb0:;
			++it;
			goto _iter_begin_1bbd9ecb0;
		}
		_iter_end_1bbd9ecb0:;
	};
}



inline jule::Ptr<_1abaa1d79_FnIns> _1abc6c022_readyToCheckFn(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab08a583_StructIns>& _205239_s, jule::Ptr<_1aba9e1c8_Fn>& _205259_f) {
	jule::Ptr<_1abaa1d79_FnIns> _205317_ins = _1abaa0828_instance(_205259_f);;
	if ((_205259_f.get()._field_Instances.len() != 0LL)) {
		return _205317_ins;;
	};
	_205317_ins.get()._field_Owner=_205239_s;
	_1abaa0b03_appendInstance(_205259_f.ptr(), _205317_ins);
	_205317_ins.get()._field_reloaded=true;
	if (_1abc62e5d_reloadFnInsTypes(_self_, _205317_ins)) {
		return _205317_ins;;
	};
	return nullptr;;
}



inline void _1abc6c341_checkTypeMethod(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab08a583_StructIns>& _206640_s, jule::Ptr<_1aba9e1c8_Fn>& _206660_f) {
	if ((_206660_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1abaa1d79_FnIns> _207117_ins = _206660_f.get()._field_Instances[0LL];;
	if ((_207117_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1abc6ea19_checkFnIns(_self_, _207117_ins);
}



inline jule::Ptr<_1abaa1d79_FnIns> _1abc6c792_checkStructInsOp(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab08a583_StructIns>& _207941_s, jule::Ptr<_1aba9e1c8_Fn>& _207961_f, jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)> _207969_p) {
	if ((((_207961_f == nullptr) || (_207961_f.get()._field_Generics.len() > 0LL)) || (!(_207969_p(_207961_f))))) {
		return nullptr;;
	};
	return _207961_f.get()._field_Instances[0LL];;
}



inline jule::Bool _1abc6cb49_checkStructEnv(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab08a583_StructIns>& _208939_s, jule::Ptr<_1a97237bc_Token> _208958_errorToken) {
	jule::Bool __jule_func_result = false;
	_1abd06353_typeChecker _209017_tc = _1abd06353_typeChecker{._field_s=_208939_s.get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_1abd13959_Lookup>(_208939_s.get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_1abd13959_Lookup>(_208939_s.get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1abd05473_referencer>(_1abd05473_referencer{._field_ident=_208939_s.get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any(_208939_s.get()._field_Decl, &__jule_any_type68), }), ._field_refers=_208939_s.get()._field_Refers, };;
	if ((_208939_s.get()._field_Generics.len() > 0LL)) {
		_209017_tc._field_useGenerics=jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>::alloc(0LL, _208939_s.get()._field_Generics.len());
		{
			auto &expr = _208939_s.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1bbda9380:;
			if (it != expr.end()) {
				jule::I64 _210318_i = it - expr.begin();
				jule::Ptr<_1abce62aa_InsGeneric> _210325_g = *it;
				{
					jule::Ptr<_1ab07acb0_GenericDecl> _210425_decl = _208939_s.get()._field_Decl.get()._field_Generics[_210318_i];;
					_209017_tc._field_useGenerics = jule::alloc_for_append(_209017_tc._field_useGenerics,1);_209017_tc._field_useGenerics.__push(jule::new_ptr<_1abce6ce4_TypeAlias>(_1abce6ce4_TypeAlias{._field_Token=_210425_decl.get()._field_Token, ._field_Ident=_210425_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1abcebdb5_TypeSymbol>(_1abcebdb5_TypeSymbol{._field_Kind=_210325_g.get()._field_Kind}), }));;
				}
				_iter_next_1bbda9380:;
				++it;
				_210318_i++;
				goto _iter_begin_1bbda9380;
			}
			_iter_end_1bbda9380:;
		};
	};
	jule::Ptr<_1abcb6c2b_SymbolTable> _211317_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1abc587e4_setCurrentFile(_self_.ptr(), _211317_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != _208939_s.get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1abcb6c2b_SymbolTable> _211721_file = _1abc55604_findFile(_self_.get()._field_files,_208939_s.get()._field_Decl.get()._field_Token.get()._field_File);;
		if ((_211721_file != nullptr)) {
			_1abc587e4_setCurrentFile(_self_.ptr(), _211721_file);
		};
	};
	if ((_208939_s.get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1abab6d4a_constraintChecker> _212421_cc = _1abc5da5d_constraintChecker(_self_);;
		_212421_cc.get()._field_et=_208958_errorToken;
		_212421_cc.get()._field_si=_208939_s;
		_212421_cc.get()._field_genericsA=_209017_tc._field_useGenerics;
		_212421_cc.get()._field_uniq=true;
		if ((!(_1abab7c2a_check(_212421_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if ((_208939_s.get()._field_Statics.len() > 0LL)) {
		jule::I64 _213721_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_209017_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto &expr = _208939_s.get()._field_Statics;
			auto it = expr.begin();
			_iter_begin_1bbdb1255:;
			if (it != expr.end()) {
				jule::Ptr<_1abc73ee6_Var> _213925_v = *it;
				{
					_1abc6834d_checkVarDecl(_self_, _213925_v,jule::Trait<_1abd13959_Lookup>(_self_, 3));
					_1abc6b98e_checkTypeVar(_self_, _213925_v,jule::Trait<_1abd13959_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _213721_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1bbdb1255:;
				++it;
				goto _iter_begin_1bbdb1255;
			}
			_iter_end_1bbdb1255:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_209017_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1abcbd5c3_Eval> _215017_eval = _1abc60598_eval(_self_, jule::Trait<_1abd13959_Lookup>(_self_, 3));;
	_208939_s.get()._field_Comparable=true;
	{
		auto &expr = _208939_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1bbdb900a:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a396_FieldIns> _215221_f = *it;
			{
				jule::Ptr<_1abce79d7_TypeKind> _215321_kind = _1abd0d5be_checkDecl(&_209017_tc, _215221_f.get()._field_Decl.get()._field_Kind.get()._field_Decl);;
				__jule_func_result=((_215321_kind != nullptr) && __jule_func_result);
				if ((_215321_kind == nullptr)) {
					if (((_self_ != _208939_s.get()._field_Decl.get()._field_sema) && (_208939_s.get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_208939_s.get()._field_Decl.get()._field_sema.get()._field_errors);
						_208939_s.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1bbdb900a;
				};
				_215221_f.get()._field_Kind=_215321_kind;
				_208939_s.get()._field_Mutable=(_208939_s.get()._field_Mutable || ((!(_215221_f.get()._field_Decl.get()._field_Mutable)) && _1abce9159_Mutable(_215221_f.get()._field_Kind.ptr())));
				_208939_s.get()._field_Comparable=(_208939_s.get()._field_Comparable && _1abce8de5_Comparable(_215221_f.get()._field_Kind.ptr()));
				_1abc6adab_checkStructInsDeriveClone(_self_.ptr(), _208939_s);
				if ((_215221_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1bbdb900a;
				};
				_215017_eval.get()._field_prefix=_215221_f.get()._field_Kind;
				_215017_eval.get()._field_field=_215221_f;
				_215221_f.get()._field_Default=_1abcd8ee5_evalExpr(_215017_eval, _215221_f.get()._field_Decl.get()._field_Default);
				if ((_215221_f.get()._field_Default == nullptr)) {
					goto _iter_next_1bbdb900a;
				};
				;
				_1abc60a93_checkAssignType(_self_, false,_215221_f.get()._field_Kind,_215221_f.get()._field_Default,_215221_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1bbdb900a:;
			++it;
			goto _iter_begin_1bbdb900a;
		}
		_iter_end_1bbdb900a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1abc6d001_precheckStructIns(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab08a583_StructIns>& _218742_s, jule::Ptr<_1a97237bc_Token> _218761_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1abc6cb49_checkStructEnv(_self_, _218742_s,_218761_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &expr = _218742_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bbdc1243:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> _219221_f = *it;
			{
				if ((_219221_f.get()._field_Generics.len() == 0LL)) {
					if ((_1abc6c022_readyToCheckFn(_self_, _218742_s,_219221_f) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1bbdc1243:;
			++it;
			goto _iter_begin_1bbdc1243;
		}
		_iter_end_1bbdc1243:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1abc6d276_checkStructIns(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab08a583_StructIns>& _220239_s) {
	{
		auto &expr = _220239_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bbdc2ad5:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> _220321_f = *it;
			{
				_1abc6c341_checkTypeMethod(_self_, _220239_s,_220321_f);
			}
			_iter_next_1bbdc2ad5:;
			++it;
			goto _iter_begin_1bbdc2ad5;
		}
		_iter_end_1bbdc2ad5:;
	};
}



inline void _1abc6d4eb_checkTypeStruct(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab08a1a9_Struct>& _220840_s) {
	if (_220840_s.get()._field_CppLinked) {
		return;;
	};
	if ((_220840_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _220840_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bbdc4334:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a583_StructIns> _222121_ins = *it;
			{
				_1abc6d276_checkStructIns(_self_, _222121_ins);
			}
			_iter_next_1bbdc4334:;
			++it;
			goto _iter_begin_1bbdc4334;
		}
		_iter_end_1bbdc4334:;
	};
}



inline void _1abc6d6c7_checkStructTypes(jule::Ptr<_1abc55eea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bbdc4a4e:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a1a9_Struct> _222721_s = *it;
			{
				_1abc6d4eb_checkTypeStruct(_self_, _222721_s);
			}
			_iter_next_1bbdc4a4e:;
			++it;
			goto _iter_begin_1bbdc4a4e;
		}
		_iter_end_1bbdc4a4e:;
	};
}



inline void _1abc6d96e_checkStructInsOperators(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab08a583_StructIns> _223247_s) {
	{
		auto &expr = _223247_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bbdc5dd5:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> _223321_m = *it;
			{
				{
					auto &_match_expr{ _223321_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1bbdc6b50:;
						{
							_223247_s.get()._field_Operators._field_Eq=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _223665_f) mutable -> jule::Bool {
								return static__1abc75c95_Eq(_223665_f);;
							}));
							_223247_s.get()._field_Comparable=(_223247_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1bbdc6bb6:;
						{
							_223247_s.get()._field_Operators._field_Gt=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _223965_f) mutable -> jule::Bool {
								return static__1abc7603c_Gt(_223965_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1bbdc6c3d:;
						{
							_223247_s.get()._field_Operators._field_GtEq=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _224167_f) mutable -> jule::Bool {
								return static__1abc762d4_GtEq(_224167_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1bbdc6cb5:;
						{
							_223247_s.get()._field_Operators._field_Lt=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _224365_f) mutable -> jule::Bool {
								return static__1abc7657b_Lt(_224365_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1bbdc6d3c:;
						{
							_223247_s.get()._field_Operators._field_LtEq=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _224567_f) mutable -> jule::Bool {
								return static__1abc76823_LtEq(_224567_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1bbdc6db4:;
						{
							_223247_s.get()._field_Operators._field_Shl=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _224766_f) mutable -> jule::Bool {
								return static__1abc76e0b_Shl(_224766_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1bbdc6e3b:;
						{
							_223247_s.get()._field_Operators._field_Shr=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _224966_f) mutable -> jule::Bool {
								return static__1abc771a3_Shr(_224966_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1bbdc6eb3:;
						{
							_223247_s.get()._field_Operators._field_Add=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _225166_f) mutable -> jule::Bool {
								return static__1abc7744a_Add(_225166_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1bbdc703a:;
						{
							_223247_s.get()._field_Operators._field_Sub=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _225366_f) mutable -> jule::Bool {
								return static__1abc776e2_Sub(_225366_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1bbdc70b2:;
						{
							_223247_s.get()._field_Operators._field_Div=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _225566_f) mutable -> jule::Bool {
								return static__1abc77989_Div(_225566_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1bbdc7139:;
						{
							_223247_s.get()._field_Operators._field_Mul=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _225766_f) mutable -> jule::Bool {
								return static__1abc77c31_Mul(_225766_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1bbdc71b1:;
						{
							_223247_s.get()._field_Operators._field_Mod=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _225966_f) mutable -> jule::Bool {
								return static__1abc77ec8_Mod(_225966_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1bbdc7238:;
						{
							_223247_s.get()._field_Operators._field_BitAnd=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _226169_f) mutable -> jule::Bool {
								return static__1abc78270_BitAnd(_226169_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1bbdc72b0:;
						{
							_223247_s.get()._field_Operators._field_BitOr=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _226368_f) mutable -> jule::Bool {
								return static__1abc78517_BitOr(_226368_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1bbdc7337:;
						{
							_223247_s.get()._field_Operators._field_BitXor=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _226569_f) mutable -> jule::Bool {
								return static__1abc787ae_BitXor(_226569_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1bbdc73ae:;
						{
							_223247_s.get()._field_Operators._field_Neg=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _226766_f) mutable -> jule::Bool {
								return static__1abc78d97_Neg(_226766_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1bbdc7436:;
						{
							_223247_s.get()._field_Operators._field_Pos=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _226966_f) mutable -> jule::Bool {
								return static__1abc7913e_Pos(_226966_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1bbdc74ad:;
						{
							_223247_s.get()._field_Operators._field_BitNot=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _227169_f) mutable -> jule::Bool {
								return static__1abc793d6_BitNot(_227169_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1bbdc7535:;
						{
							_223247_s.get()._field_Operators._field_AddAssign=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _227372_f) mutable -> jule::Bool {
								return static__1abc799be_AddAssign(_227372_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1bbdc75ac:;
						{
							_223247_s.get()._field_Operators._field_SubAssign=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _227572_f) mutable -> jule::Bool {
								return static__1abc79c66_SubAssign(_227572_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1bbdc7634:;
						{
							_223247_s.get()._field_Operators._field_DivAssign=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _227772_f) mutable -> jule::Bool {
								return static__1abc7a00d_DivAssign(_227772_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1bbdc76ab:;
						{
							_223247_s.get()._field_Operators._field_MulAssign=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _227972_f) mutable -> jule::Bool {
								return static__1abc7a2a5_MulAssign(_227972_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1bbdc7733:;
						{
							_223247_s.get()._field_Operators._field_ModAssign=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _228172_f) mutable -> jule::Bool {
								return static__1abc7a54c_ModAssign(_228172_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1bbdc77aa:;
						{
							_223247_s.get()._field_Operators._field_ShlAssign=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _228372_f) mutable -> jule::Bool {
								return static__1abc7a7e4_ShlAssign(_228372_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1bbdc7832:;
						{
							_223247_s.get()._field_Operators._field_ShrAssign=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _228572_f) mutable -> jule::Bool {
								return static__1abc7aa8b_ShrAssign(_228572_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1bbdc78a9:;
						{
							_223247_s.get()._field_Operators._field_BitOrAssign=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _228774_f) mutable -> jule::Bool {
								return static__1abc7ad33_BitOrAssign(_228774_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1bbdc7931:;
						{
							_223247_s.get()._field_Operators._field_BitAndAssign=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _228975_f) mutable -> jule::Bool {
								return static__1abc7b0ca_BitAndAssign(_228975_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1bbdc79a8:;
						{
							_223247_s.get()._field_Operators._field_BitXorAssign=_1abc6c792_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1aba9e1c8_Fn>)>([=](jule::Ptr<_1aba9e1c8_Fn> _229175_f) mutable -> jule::Bool {
								return static__1abc7b372_BitXorAssign(_229175_f);;
							}));
						}
					}
					_match_end_1bbdc6732:;
				};
			}
			_iter_next_1bbdc5dd5:;
			++it;
			goto _iter_begin_1bbdc5dd5;
		}
		_iter_end_1bbdc5dd5:;
	};
}



inline void _1abc6dc05_precheckStructType(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1ab08a1a9_Struct>& _229643_s) {
	if (_229643_s.get()._field_CppLinked) {
		return;;
	};
	if ((_229643_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_229643_s.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ab08a583_StructIns> _230721_ins = _1ab04a730_instance(_229643_s);;
		_230721_ins.get()._field_Checked=true;
		_1ab04b489_appendInstance(_229643_s.ptr(), _230721_ins);
		_1abc6d001_precheckStructIns(_self_, _230721_ins,nullptr);
	};
	_1abc6d96e_checkStructInsOperators(_self_, _229643_s.get()._field_Instances[0LL]);
}



inline void _1abc6ddd1_precheckStructTypes(jule::Ptr<_1abc55eea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bbe01a37:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a1a9_Struct> _231721_s = *it;
			{
				_1abc6dc05_precheckStructType(_self_, _231721_s);
			}
			_iter_next_1bbe01a37:;
			++it;
			goto _iter_begin_1bbe01a37;
		}
		_iter_end_1bbe01a37:;
	};
}



inline void _1abc6e156_checkRets(_1abc55eea_Sema* _self_, jule::Ptr<_1abaa1d79_FnIns>& _232233_f) {
	if (_1aba9e63a_IsVoid(_232233_f.get()._field_Decl.ptr())) {
		return;;
	};
	_1abc71301_missingRetChecker _232613_mrc = static__1abc716b9_new();;
	jule::Bool _232713_ok = _1abc726cb_check(&_232613_mrc, _232233_f.get()._field_Scope);;
	if ((!(_232713_ok))) {
		_1abc58bac_pushErr(&(*_self_), _232233_f.get()._field_Decl.get()._field_Token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1abc6e475_checkFnInsSc(_1abc55eea_Sema* _self_, jule::Ptr<_1abaa1d79_FnIns>& _233336_f, jule::Ptr<_1abac584d_scopeChecker>& _233352_sc) {
	_1abc54c1e_appendRetVars(_233352_sc.get()._field_table.get()._field_Vars,_233336_f);
	_1abc54ec7_appendParamVars(_233352_sc.get()._field_table.get()._field_Vars,_233336_f);
	_1abc552a2_appendGenericTypeAliases(_233352_sc.get()._field_table.get()._field_TypeAliases,_233336_f);
	_1abad564e_check(_233352_sc, _233336_f.get()._field_Decl.get()._field_Scope,_233336_f.get()._field_Scope);
	if ((!(_1abac84bb_stopped(_233352_sc.ptr())))) {
		_1abc6e156_checkRets(&(*_self_), _233336_f);
	};
}



inline void _1abc6e794_checkFnInsCaller(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abaa1d79_FnIns>& _234641_f, jule::Ptr<_1a97237bc_Token> _234656_caller) {
	if (_234641_f.get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_1abcb6c2b_SymbolTable> _235117_old = _234641_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1abc587e4_setCurrentFile(_234641_f.get()._field_Decl.get()._field_sema.ptr(), _235117_old);
	});;
	jule::Ptr<_1abcb6c2b_SymbolTable> _235317_file = _1abc55604_findFile(_234641_f.get()._field_Decl.get()._field_sema.get()._field_files,_234641_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_235317_file != nullptr)) {
		_1abc587e4_setCurrentFile(_234641_f.get()._field_Decl.get()._field_sema.ptr(), _235317_file);
	};
	jule::Ptr<_1abac584d_scopeChecker> _235817_sc = _1ababb1a1_newScopeChecker(_234641_f.get()._field_Decl.get()._field_sema,_234641_f);;
	_235817_sc.get()._field_calledFrom=_234656_caller;
	_1abc6e475_checkFnInsSc(_self_.ptr(), _234641_f,_235817_sc);
	if ((_234641_f.get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_234641_f.get()._field_Decl.get()._field_sema.get()._field_errors);
		_234641_f.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1abc6ea19_checkFnIns(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1abaa1d79_FnIns>& _236835_f) {
	_1abc6e794_checkFnInsCaller(_self_, _236835_f,nullptr);
}



inline void _1abc6ec8e_checkTypeFn(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1aba9e1c8_Fn>& _237236_f) {
	if (_237236_f.get()._field_CppLinked) {
		return;;
	};
	if ((_237236_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _237236_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bbe0c2b2:;
		if (it != expr.end()) {
			jule::Ptr<_1abaa1d79_FnIns> _238221_ins = *it;
			{
				_1abc6ea19_checkFnIns(_self_, _238221_ins);
			}
			_iter_next_1bbe0c2b2:;
			++it;
			goto _iter_begin_1bbe0c2b2;
		}
		_iter_end_1bbe0c2b2:;
	};
}



inline void _1abc70014_checkTestFn(_1abc55eea_Sema* _self_, jule::Ptr<_1abaa1d79_FnIns>& _238735_f) {
	if (_238735_f.get()._field_Decl.get()._field_Public) {
		_1abc58bac_pushErr(&(*_self_), _238735_f.get()._field_Decl.get()._field_Token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_238735_f.get()._field_Params.len() != 1LL) || (_238735_f.get()._field_Result != nullptr))) {
		_1abc58bac_pushErr(&(*_self_), _238735_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1abd00eb8_Sptr> _240017_sptr = _1abcea0d3_Sptr(_238735_f.get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_240017_sptr == nullptr)) {
		_1abc58bac_pushErr(&(*_self_), _238735_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab08a583_StructIns> _240713_s = _1abceb2c1_Struct(_240017_sptr.get()._field_Elem.ptr());;
	if (((_240713_s == nullptr) || (!(_1abc533d2_isStdPackage(_240713_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("testing", 7)))))) {
		_1abc58bac_pushErr(&(*_self_), _238735_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1abc58ecb_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1abc70289_precheckTypeFn(jule::Ptr<_1abc55eea_Sema> _self_, jule::Ptr<_1aba9e1c8_Fn>& _241539_f) {
	if (_241539_f.get()._field_CppLinked) {
		return;;
	};
	if ((_241539_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_241539_f.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1abaa1d79_FnIns> _242621_ins = _1abaa05b4_instanceForce(_241539_f);;
		_241539_f.get()._field_Instances = jule::alloc_for_append(_241539_f.get()._field_Instances,1);_241539_f.get()._field_Instances.__push(_242621_ins);;
		_1abc62e5d_reloadFnInsTypes(_self_, _242621_ins);
		_242621_ins.get()._field_reloaded=true;
		if (_1abd0ea76_hasDirective(_241539_f.get()._field_Directives,jule::Str("test", 4))) {
			_1abc70014_checkTestFn(_self_.ptr(), _242621_ins);
		};
	};
}



inline void _1abc70465_precheckFnTypes(jule::Ptr<_1abc55eea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1bbe1684e:;
		if (it != expr.end()) {
			jule::Ptr<_1abab10ca_Trait> _243921_decl = *it;
			{
				{
					auto &expr = _243921_decl.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1bbe171ce:;
					if (it != expr.end()) {
						jule::Ptr<_1aba9e1c8_Fn> _244025_m = *it;
						{
							_1abc70289_precheckTypeFn(_self_, _244025_m);
						}
						_iter_next_1bbe171ce:;
						++it;
						goto _iter_begin_1bbe171ce;
					}
					_iter_end_1bbe171ce:;
				};
			}
			_iter_next_1bbe1684e:;
			++it;
			goto _iter_begin_1bbe1684e;
		}
		_iter_end_1bbe1684e:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1bbe16d9e:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> _244421_decl = *it;
			{
				_1abc70289_precheckTypeFn(_self_, _244421_decl);
			}
			_iter_next_1bbe16d9e:;
			++it;
			goto _iter_begin_1bbe16d9e;
		}
		_iter_end_1bbe16d9e:;
	};
}



inline void _1abc70641_checkFnTypes(jule::Ptr<_1abc55eea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1bbe1870d:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> _245121_decl = *it;
			{
				_1abc6ec8e_checkTypeFn(_self_, _245121_decl);
			}
			_iter_next_1bbe1870d:;
			++it;
			goto _iter_begin_1bbe1870d;
		}
		_iter_end_1bbe1870d:;
	};
}



inline void _1abc7081c_checkPackageTypes(jule::Ptr<_1abc55eea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bbe1928b:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _245921_f = *it;
			{
				_1abc587e4_setCurrentFile(_self_.ptr(), _245921_f);
				_1abc6bb6a_checkGlobalTypes(_self_);
				_1abc70465_precheckFnTypes(_self_);
				_1abc6ddd1_precheckStructTypes(_self_);
			}
			_iter_next_1bbe1928b:;
			++it;
			goto _iter_begin_1bbe1928b;
		}
		_iter_end_1bbe1928b:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bbe1aa95:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _247021_f = *it;
			{
				_1abc587e4_setCurrentFile(_self_.ptr(), _247021_f);
				_1abc70641_checkFnTypes(_self_);
				_1abc6d6c7_checkStructTypes(_self_);
			}
			_iter_next_1bbe1aa95:;
			++it;
			goto _iter_begin_1bbe1aa95;
		}
		_iter_end_1bbe1aa95:;
	};
}



inline void _1abc709e8_setFileSemaFields(jule::Ptr<_1abc55eea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1bbe1bdd7:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> _247821_f = *it;
			{
				_247821_f.get()._field_sema=_self_;
			}
			_iter_next_1bbe1bdd7:;
			++it;
			goto _iter_begin_1bbe1bdd7;
		}
		_iter_end_1bbe1bdd7:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bbe1c1d4:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a1a9_Struct> _248121_st = *it;
			{
				_248121_st.get()._field_sema=_self_;
			}
			_iter_next_1bbe1c1d4:;
			++it;
			goto _iter_begin_1bbe1c1d4;
		}
		_iter_end_1bbe1c1d4:;
	};
}



inline void _1abc70bc4_setSemaFields(jule::Ptr<_1abc55eea_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bbe1cc2e:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _248721_file = *it;
			{
				_1abc587e4_setCurrentFile(_self_.ptr(), _248721_file);
				_1abc709e8_setFileSemaFields(_self_);
			}
			_iter_next_1bbe1cc2e:;
			++it;
			goto _iter_begin_1bbe1cc2e;
		}
		_iter_end_1bbe1cc2e:;
	};
}



inline void _1abc70e49_check(jule::Ptr<_1abc55eea_Sema> _self_, jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>& _249330_files) {
	_self_.get()._field_files=_249330_files;
	_1abc5c320_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1abc70bc4_setSemaFields(_self_);
	_1abc5c8a3_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1abc5c6c7_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1abc6b098_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1abc7081c_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1abc55eea_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1abc71301_missingRetChecker static__1abc716b9_new(void) {
	return _1abc71301_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1abc71994_checkConditional(_1abc71301_missingRetChecker* _self_, jule::Ptr<_1ababe847_Conditional> _253635_c) {
	{
		auto &expr = _253635_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1bbe220c9:;
		if (it != expr.end()) {
			jule::Ptr<_1ababe1d7_If> _253721_elif = *it;
			{
				if ((_253721_elif == nullptr)) {
					return false;;
				};
				if ((!(_1abc723bd_checkScope(&(*_self_), _253721_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1bbe220c9:;
			++it;
			goto _iter_begin_1bbe220c9;
		}
		_iter_end_1bbe220c9:;
	};
	return ((_253635_c.get()._field_Default != nullptr) && _1abc723bd_checkScope(&(*_self_), _253635_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1abc71ca2_checkMatch(_1abc71301_missingRetChecker* _self_, jule::Ptr<_1abac2a37_Match> _254829_m) {
	{
		auto &expr = _254829_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1bbe243c8:;
		if (it != expr.end()) {
			jule::Ptr<_1abac3582_Case> _254921_c = *it;
			{
				if ((_254921_c == nullptr)) {
					return false;;
				};
				jule::I64 _255317_n = (*_self_)._field_breaked.len();;
				jule::Bool _255417_ok = _1abc723bd_checkScope(&(*_self_), _254921_c.get()._field_Scope);;
				{
					
					if ((_255317_n != (*_self_)._field_breaked.len())) {
						_case_begin_1bbe26056:;
						{
							return false;;
						}
					}
					else if ((!(_255417_ok))) {
						_case_begin_1bbe260cd:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;;
							};
							goto _case_begin_1bbe26155;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1bbe26155:;
						{
							(*_self_)._field_falled=false;
							if ((_254921_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1bbe243c8;
						}
					}
					_match_end_1bbe25ece:;
				};
			}
			_iter_next_1bbe243c8:;
			++it;
			goto _iter_begin_1bbe243c8;
		}
		_iter_end_1bbe243c8:;
	};
	return ((_254829_m.get()._field_Default != nullptr) && _1abc723bd_checkScope(&(*_self_), _254829_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1abc720b0_checkInfIter(_1abc71301_missingRetChecker* _self_, jule::Ptr<_1ababeb33_InfIter> _257431_it) {
	jule::I64 _257513_n = (*_self_)._field_breaked.len();;
	if (_1abc723bd_checkScope(&(*_self_), _257431_it.get()._field_Scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_257513_n);
		return true;;
	};
	if ((_257513_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _258117_itaddr = static_cast<jule::Uintptr>(_257431_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_257513_n);
			auto it = expr.begin();
			_iter_begin_1ad90b75e:;
			if (it != expr.end()) {
				jule::Uintptr _258220_addr = *it;
				{
					if ((_258117_itaddr == _258220_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_257513_n);
						return false;;
					};
				}
				_iter_next_1ad90b75e:;
				++it;
				goto _iter_begin_1ad90b75e;
			}
			_iter_end_1ad90b75e:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_257513_n);
	};
	return true;;
}



inline jule::Bool _1abc723bd_checkScope(_1abc71301_missingRetChecker* _self_, jule::Ptr<_1ababdcdb_Scope> _259329_s) {
	if ((_259329_s == nullptr)) {
		return false;;
	};
	{
		auto &expr = _259329_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1ad961220:;
		if (it != expr.end()) {
			jule::Any _259721_st = *it;
			{
				{
					auto &_match_expr{ _259721_st };
					
					if (_match_expr.type == &__jule_any_type51) {
						_case_begin_1ad961a17:;
						{
							(*_self_)._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type52) {
						_case_begin_1ad961a7d:;
						{
							jule::Uintptr _260321_addr = _259721_st.cast_ptr<_1abac123e_BreakSt>(&__jule_any_type52).get()._field_It;;
							if ((_260321_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_260321_addr);;
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type43) {
						_case_begin_1ad961b05:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type38) {
						_case_begin_1ad961b6b:;
						{
							if (_1abc720b0_checkInfIter(&(*_self_), _259721_st.cast_ptr<_1ababeb33_InfIter>(&__jule_any_type38))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type53) {
						_case_begin_1ad961bd2:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1ad961c48:;
						{
							if (_1abc723bd_checkScope(&(*_self_), _259721_st.cast_ptr<_1ababdcdb_Scope>(&__jule_any_type23))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type25) {
						_case_begin_1ad961cae:;
						{
							{
								auto &_match_expr{ _259721_st.cast_ptr<_1abcbba55_Data>(&__jule_any_type25).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type24) {
									_case_begin_1ad9656a8:;
									{
										return true;;
									}
								}
								_match_end_1ad965400:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1ad961d25:;
						{
							if (_1abc71994_checkConditional(&(*_self_), _259721_st.cast_ptr<_1ababe847_Conditional>(&__jule_any_type37))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1ad961d8b:;
						{
							if (_1abc71ca2_checkMatch(&(*_self_), _259721_st.cast_ptr<_1abac2a37_Match>(&__jule_any_type50))) {
								return true;;
							};
						}
					}
					_match_end_1ad961907:;
				};
			}
			_iter_next_1ad961220:;
			++it;
			goto _iter_begin_1ad961220;
		}
		_iter_end_1ad961220:;
	};
	return false;;
}



inline jule::Bool _1abc726cb_check(_1abc71301_missingRetChecker* _self_, jule::Ptr<_1ababdcdb_Scope> _263924_s) {
	return _1abc723bd_checkScope(&(*_self_), _263924_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abc71301_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abc72eb2_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abc743ae_IsInitialized(_1abc73ee6_Var* _self_) {
	return ((*_self_)._field_Value != nullptr);;
}



inline jule::Bool _1abc74623_IsTypeInferred(_1abc73ee6_Var* _self_) {
	return (((*_self_)._field_Kind == nullptr) || ((*_self_)._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _1abc74887_untypedConstant(_1abc73ee6_Var* _self_) {
	return (_1abc74623_IsTypeInferred(&(*_self_)) && (*_self_)._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abc73ee6_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1abc75415_Dispose(jule::Ptr<_1aba9e1c8_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && (_1023_f.get()._field_Ident == jule::Str("Dispose", 7))) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1aba9e63a_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1aba9d22c_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1abc756ac_Str(jule::Ptr<_1aba9e1c8_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (_2419_f.get()._field_Ident != jule::Str("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1aba9e63a_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1aba9d22c_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1abaa1d79_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1abcec734_Prim> _3913_prim = _1abce9d6e_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _1abd00968_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__1abc759ed_logical(jule::Ptr<_1aba9e1c8_Fn>& _4624_f, jule::Str _4632_ident) {
	if ((((((((((((((_4624_f == nullptr) || (_4624_f.get()._field_Ident != _4632_ident)) || (_4624_f.get()._field_Owner == nullptr)) || (_4624_f.get()._field_Instances.len() == 0LL)) || _4624_f.get()._field_Statically) || _4624_f.get()._field_Unsafety) || _1aba9e63a_IsVoid(_4624_f.ptr())) || (_4624_f.get()._field_Generics.len() != 0LL)) || (_4624_f.get()._field_Params.len() != 2LL)) || _4624_f.get()._field_Params[0LL].get()._field_Mutable) || _1aba9d22c_IsRef(_4624_f.get()._field_Params[0LL].ptr())) || _4624_f.get()._field_Params[1LL].get()._field_Mutable) || _4624_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1abaa1d79_FnIns> _6317_ins = _4624_f.get()._field_Instances[0LL];;
	jule::Ptr<_1abcec734_Prim> _6413_prim = _1abce9d6e_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1abd00704_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _1abceb2c1_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__1abc75c95_Eq(jule::Ptr<_1aba9e1c8_Fn> _7218_f) {
	return static__1abc759ed_logical(_7218_f,jule::Str("Eq", 2));;
}



inline jule::Bool static__1abc7603c_Gt(jule::Ptr<_1aba9e1c8_Fn> _7718_f) {
	return static__1abc759ed_logical(_7718_f,jule::Str("Gt", 2));;
}



inline jule::Bool static__1abc762d4_GtEq(jule::Ptr<_1aba9e1c8_Fn> _8220_f) {
	return static__1abc759ed_logical(_8220_f,jule::Str("GtEq", 4));;
}



inline jule::Bool static__1abc7657b_Lt(jule::Ptr<_1aba9e1c8_Fn> _8718_f) {
	return static__1abc759ed_logical(_8718_f,jule::Str("Lt", 2));;
}



inline jule::Bool static__1abc76823_LtEq(jule::Ptr<_1aba9e1c8_Fn> _9220_f) {
	return static__1abc759ed_logical(_9220_f,jule::Str("LtEq", 4));;
}



inline jule::Bool static__1abc76b64_result(jule::Ptr<_1aba9e1c8_Fn>& _9623_f, jule::Str _9631_ident) {
	if ((((((((((((((_9623_f == nullptr) || (_9623_f.get()._field_Ident != _9631_ident)) || (_9623_f.get()._field_Owner == nullptr)) || (_9623_f.get()._field_Instances.len() == 0LL)) || _9623_f.get()._field_Statically) || _9623_f.get()._field_Unsafety) || _1aba9e63a_IsVoid(_9623_f.ptr())) || (_9623_f.get()._field_Generics.len() != 0LL)) || (_9623_f.get()._field_Params.len() != 2LL)) || _9623_f.get()._field_Params[0LL].get()._field_Mutable) || _1aba9d22c_IsRef(_9623_f.get()._field_Params[0LL].ptr())) || _9623_f.get()._field_Params[1LL].get()._field_Mutable) || _9623_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1abaa1d79_FnIns> _11317_ins = _9623_f.get()._field_Instances[0LL];;
	return (_1abceb2c1_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__1abc76e0b_Shl(jule::Ptr<_1aba9e1c8_Fn> _11819_f) {
	return static__1abc76b64_result(_11819_f,jule::Str("Shl", 3));;
}



inline jule::Bool static__1abc771a3_Shr(jule::Ptr<_1aba9e1c8_Fn> _12319_f) {
	return static__1abc76b64_result(_12319_f,jule::Str("Shr", 3));;
}



inline jule::Bool static__1abc7744a_Add(jule::Ptr<_1aba9e1c8_Fn> _12819_f) {
	return static__1abc76b64_result(_12819_f,jule::Str("Add", 3));;
}



inline jule::Bool static__1abc776e2_Sub(jule::Ptr<_1aba9e1c8_Fn> _13319_f) {
	return static__1abc76b64_result(_13319_f,jule::Str("Sub", 3));;
}



inline jule::Bool static__1abc77989_Div(jule::Ptr<_1aba9e1c8_Fn> _13819_f) {
	return static__1abc76b64_result(_13819_f,jule::Str("Div", 3));;
}



inline jule::Bool static__1abc77c31_Mul(jule::Ptr<_1aba9e1c8_Fn> _14319_f) {
	return static__1abc76b64_result(_14319_f,jule::Str("Mul", 3));;
}



inline jule::Bool static__1abc77ec8_Mod(jule::Ptr<_1aba9e1c8_Fn> _14819_f) {
	return static__1abc76b64_result(_14819_f,jule::Str("Mod", 3));;
}



inline jule::Bool static__1abc78270_BitAnd(jule::Ptr<_1aba9e1c8_Fn> _15322_f) {
	return static__1abc76b64_result(_15322_f,jule::Str("BitAnd", 6));;
}



inline jule::Bool static__1abc78517_BitOr(jule::Ptr<_1aba9e1c8_Fn> _15821_f) {
	return static__1abc76b64_result(_15821_f,jule::Str("BitOr", 5));;
}



inline jule::Bool static__1abc787ae_BitXor(jule::Ptr<_1aba9e1c8_Fn> _16322_f) {
	return static__1abc76b64_result(_16322_f,jule::Str("BitXor", 6));;
}



inline jule::Bool static__1abc78b00_unary(jule::Ptr<_1aba9e1c8_Fn>& _16722_f, jule::Str _16730_ident) {
	if ((((((((((((_16722_f == nullptr) || (_16722_f.get()._field_Ident != _16730_ident)) || (_16722_f.get()._field_Owner == nullptr)) || (_16722_f.get()._field_Instances.len() == 0LL)) || _16722_f.get()._field_Statically) || _16722_f.get()._field_Unsafety) || _1aba9e63a_IsVoid(_16722_f.ptr())) || (_16722_f.get()._field_Generics.len() != 0LL)) || (_16722_f.get()._field_Params.len() != 1LL)) || _16722_f.get()._field_Params[0LL].get()._field_Mutable) || _1aba9d22c_IsRef(_16722_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1abaa1d79_FnIns> _18217_ins = _16722_f.get()._field_Instances[0LL];;
	return (_1abceb2c1_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__1abc78d97_Neg(jule::Ptr<_1aba9e1c8_Fn> _18719_f) {
	return static__1abc78b00_unary(_18719_f,jule::Str("Neg", 3));;
}



inline jule::Bool static__1abc7913e_Pos(jule::Ptr<_1aba9e1c8_Fn> _19219_f) {
	return static__1abc78b00_unary(_19219_f,jule::Str("Pos", 3));;
}



inline jule::Bool static__1abc793d6_BitNot(jule::Ptr<_1aba9e1c8_Fn> _19722_f) {
	return static__1abc78b00_unary(_19722_f,jule::Str("BitNot", 6));;
}



inline jule::Bool static__1abc79727_assign(jule::Ptr<_1aba9e1c8_Fn>& _20123_f, jule::Str _20131_ident) {
	if ((((((((((((((_20123_f == nullptr) || (_20123_f.get()._field_Ident != _20131_ident)) || (_20123_f.get()._field_Owner == nullptr)) || (_20123_f.get()._field_Instances.len() == 0LL)) || _20123_f.get()._field_Statically) || _20123_f.get()._field_Unsafety) || (!(_1aba9e63a_IsVoid(_20123_f.ptr())))) || (_20123_f.get()._field_Generics.len() != 0LL)) || (_20123_f.get()._field_Params.len() != 2LL)) || (!(_20123_f.get()._field_Params[0LL].get()._field_Mutable))) || _1aba9d22c_IsRef(_20123_f.get()._field_Params[0LL].ptr())) || _20123_f.get()._field_Params[1LL].get()._field_Mutable) || _20123_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1abc799be_AddAssign(jule::Ptr<_1aba9e1c8_Fn> _22125_f) {
	return static__1abc79727_assign(_22125_f,jule::Str("AddAssign", 9));;
}



inline jule::Bool static__1abc79c66_SubAssign(jule::Ptr<_1aba9e1c8_Fn> _22625_f) {
	return static__1abc79727_assign(_22625_f,jule::Str("SubAssign", 9));;
}



inline jule::Bool static__1abc7a00d_DivAssign(jule::Ptr<_1aba9e1c8_Fn> _23125_f) {
	return static__1abc79727_assign(_23125_f,jule::Str("DivAssign", 9));;
}



inline jule::Bool static__1abc7a2a5_MulAssign(jule::Ptr<_1aba9e1c8_Fn> _23625_f) {
	return static__1abc79727_assign(_23625_f,jule::Str("MulAssign", 9));;
}



inline jule::Bool static__1abc7a54c_ModAssign(jule::Ptr<_1aba9e1c8_Fn> _24125_f) {
	return static__1abc79727_assign(_24125_f,jule::Str("ModAssign", 9));;
}



inline jule::Bool static__1abc7a7e4_ShlAssign(jule::Ptr<_1aba9e1c8_Fn> _24625_f) {
	return static__1abc79727_assign(_24625_f,jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__1abc7aa8b_ShrAssign(jule::Ptr<_1aba9e1c8_Fn> _25125_f) {
	return static__1abc79727_assign(_25125_f,jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__1abc7ad33_BitOrAssign(jule::Ptr<_1aba9e1c8_Fn> _25627_f) {
	return static__1abc79727_assign(_25627_f,jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__1abc7b0ca_BitAndAssign(jule::Ptr<_1aba9e1c8_Fn> _26128_f) {
	return static__1abc79727_assign(_26128_f,jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__1abc7b372_BitXorAssign(jule::Ptr<_1aba9e1c8_Fn> _26628_f) {
	return static__1abc79727_assign(_26628_f,jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _1abc74c94_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1abca5d3b_pushErr(_1abca581e_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1abc58bac_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_11726_fmt,_11739_args);
}



inline jule::Bool _1abca60a0_checkTrait(_1abca581e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1abce891c_IsNil((*_self_)._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1abab10ca_Trait> _12513_trt = _1abceb535_Trait((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1abcea0d3_Sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1ad99e3e5:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_1abcea0d3_Sptr((*_self_)._field_src.ptr()).get()._field_Elem;
				if ((_1abceb2c1_Struct((*_self_)._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1ad99dc63;
			}
		}
		else if ((_1abceb2c1_Struct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1ad99dc63:;
			{
				jule::Ptr<_1ab08a583_StructIns> _13617_s = _1abceb2c1_Struct((*_self_)._field_src.ptr());;
				if ((!(_1ab050218_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _1abc8c95a_traitHasReferenceReceiver(_12513_trt))) {
					_1abca5d3b_pushErr(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1abceb535_Trait((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1ad99dcc9:;
			{
				__jule_func_result = (_12513_trt == _1abceb535_Trait((*_self_)._field_src.ptr()));
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ad99dbec:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ad99db86:;
	};
}



inline jule::Bool _1abca6314_checkPtr(_1abca581e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1abce891c_IsNil((*_self_)._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1abd0452c_Ptr> _15617_dest = _1abcea347_Ptr((*_self_)._field_dest.ptr());;
	if (_1abd05000_IsUnsafe(_15617_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1abce81e1_Equal((*_self_)._field_dest, (*_self_)._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1abca6578_checkPrim(_1abca581e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*_self_)._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1abcec734_Prim> _16517_prim = _1abce9d6e_Prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _1abd00bcc_IsAny(_16517_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1abce81e1_Equal((*_self_)._field_dest, (*_self_)._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1abca6930_typeEnum(_1abca581e_typeCompatibilityChecker* _self_, jule::Ptr<_1abab481a_TypeEnum>& _17328_e, jule::Ptr<_1abce79d7_TypeKind>& _17347_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _17328_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1ada9a579:;
		if (it != expr.end()) {
			jule::Ptr<_1abab4254_TypeEnumItem> _17421_item = *it;
			{
				if (_1abce81e1_Equal(_17421_item.get()._field_Kind.get()._field_Kind, _17347_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1abab481a_TypeEnum> _17821_ke = _1abcea820_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1ada9a579;
				};
				if (_1abca6930_typeEnum(&(*_self_), _17821_ke,_17347_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1ada9a579:;
			++it;
			goto _iter_begin_1ada9a579;
		}
		_iter_end_1ada9a579:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abca6b94_checkTypeEnum(_1abca581e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1abce81e1_Equal((*_self_)._field_dest, (*_self_)._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1abab481a_TypeEnum> _19317_e = _1abcea820_TypeEnum((*_self_)._field_dest.ptr());;
	__jule_func_result = _1abca6930_typeEnum(&(*_self_), _19317_e,(*_self_)._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1abca6e08_check(_1abca581e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1abcea347_Ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1abca6314_checkPtr(&(*_self_));
		return __jule_func_result;;
	};
	if (_1abce93bd_NilCompatible((*_self_)._field_dest.ptr())) {
		if (_1abce891c_IsNil((*_self_)._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1abce9d6e_Prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1adaa06b1:;
			{
				__jule_func_result = _1abca6578_checkPrim(&(*_self_));
				return __jule_func_result;;
			}
		}
		else if ((_1abcea820_TypeEnum((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1adaa0507:;
			{
				__jule_func_result = _1abca6b94_checkTypeEnum(&(*_self_));
				return __jule_func_result;;
			}
		}
		else if ((_1abceb535_Trait((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1ada9ebdd:;
			{
				__jule_func_result = _1abca60a0_checkTrait(&(*_self_));
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ada9e715:;
			{
				__jule_func_result = _1abce81e1_Equal((*_self_)._field_dest, (*_self_)._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1ada9e605:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1abca581e_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1abca78a9_pushErr(_1abca7447_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_1abc58bac_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_22926_fmt,_22939_args);
}



inline jule::Bool _1abca7b1d_checkValidity(_1abca7447_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_1abceb05c_Fn((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1adaa351b:;
			{
				jule::Ptr<_1abaa1d79_FnIns> _23717_f = _1abceb05c_Fn((*_self_)._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1abaa3210_IsBuiltin(_23717_f.ptr())) {
						_case_begin_1adaa4b05:;
						{
							_1abca78a9_pushErr(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_1adaa4b7c:;
						{
							_1abca78a9_pushErr(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _1aba9e89e_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_1adaa4c04:;
						{
							_1abca78a9_pushErr(&(*_self_), jule::Str("non-static methods cannot use as anonymous function", 51),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1adaa4c7b:;
						{
							_1abca78a9_pushErr(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_1abc58ecb_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1adaa4a28:;
				};
			}
		}
		else if ((_1abceba0d_Tup((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1adaa3593:;
			{
				_1abca78a9_pushErr(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1adaa3461:;
	};
	return _23417_valid;;
}



inline jule::Bool _1abca7d82_checkConst(_1abca7447_assignTypeChecker* _self_) {
	if (((((!(_1abcbc418_IsConst((*_self_)._field_d.ptr()))) || (_1abce9d6e_Prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1abce9d6e_Prim((*_self_)._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1aba86930_IsNum(_1abce9d6e_Prim((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type49_compare((*_self_)._field_d.get()._field_Model, (*_self_)._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _27413_kind = _1abce9d6e_Prim((*_self_)._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1aba867ed_IsFloat(_27413_kind)) {
			_case_begin_1adaac48c:;
			{
				if ((!(_1abc8ca8c_floatAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1abca78a9_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;;
				};
				(*_self_)._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else if (_1aba866bb_IsInt(_27413_kind)) {
			_case_begin_1adaabd1b:;
			{
				if ((!(_1abca5643_intAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1abca78a9_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;;
				};
				(*_self_)._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else {
			_case_begin_1adaabca5:;
			{
				return false;;
			}
		}
		_match_end_1adaabc3e:;
	};
	return true;;
}



inline jule::Bool _1abca80e6_isPrim(_1abca7447_assignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_Variadic || (*_self_)._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_1abce86a8_CppLinked((*_self_)._field_dest.ptr()) || _1abce86a8_CppLinked((*_self_)._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1abce9d6e_Prim((*_self_)._field_dest.ptr()) != nullptr) && (_1abce9d6e_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1abca835a_checkCompatibility(_1abca7447_assignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1adab16a0:;
			{
				return false;;
			}
		}
		else if ((!(_1abca7b1d_checkValidity(&(*_self_))))) {
			_case_begin_1adab1727:;
			{
				return false;;
			}
		}
		else if (_1abca7d82_checkConst(&(*_self_))) {
			_case_begin_1adab179e:;
			{
				return true;;
			}
		}
		else if ((_1abcea5ab_Enum((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1adab1826:;
			{
				jule::Ptr<_1abce79d7_TypeKind> _31821_dkind = (*_self_)._field_dest;;
				if ((_1abcea5ab_Enum((*_self_)._field_dest.ptr()) != nullptr)) {
					_31821_dkind=_1abcea5ab_Enum((*_self_)._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1abce9d6e_Prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1adab155c;
				};
				if (_1aba85203_TypesAreCompatible(_1abce9d6e_Prim(_1abcea5ab_Enum((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind,_1abce9d6e_Prim(_31821_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1abca80e6_isPrim(&(*_self_))) {
			_case_begin_1adab189d:;
			{
				jule::Ptr<_1abcec734_Prim> _32817_dest = _1abce9d6e_Prim((*_self_)._field_dest.ptr());;
				if (_1abd00bcc_IsAny(_32817_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1abcec734_Prim> _33221_src = _1abce9d6e_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1aba85203_TypesAreCompatible(_32817_dest.get()._field_Kind,_33221_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1adab155c:;
	};
	return _1abc60ee4_checkTypeCompatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_Kind,(*_self_)._field_errorToken);;
}



inline jule::Bool _1abca85be_check(_1abca7447_assignTypeChecker* _self_) {
	jule::Bool _34113_ok = _1abca835a_checkCompatibility(&(*_self_));;
	if ((_34113_ok && (!((*_self_)._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_1abd115c2_applyImplicitCast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _34113_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abca7447_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1adac990a_annotateConstraintElem(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _36149_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1adacb049:;
			{
				jule::Ptr<_1abce79d7_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1adacbd80:;
						{
							_36421_elem=_1abceaa84_Arr(_36149_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1adacb8eb:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.cast_ptr<_1ab070ec5_ArrTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _1abcaa57c_annotateConstraint(&(*_self_), _36421_elem);;
			}
		}
		_match_end_1adacaeb1:;
	};
	return false;;
}

inline jule::Bool _1adac9102_annotateConstraintElem(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _36149_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1adace624:;
			{
				jule::Ptr<_1abce79d7_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1adad04e3:;
						{
							_36421_elem=_1abceace8_Slc(_36149_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1adaceec6:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.cast_ptr<_1ab07026b_SlcTypeDecl>(&__jule_any_type79).get()._field_Elem;
				return _1abcaa57c_annotateConstraint(&(*_self_), _36421_elem);;
			}
		}
		_match_end_1adace58b:;
	};
	return false;;
}

inline jule::Bool _1adacdbb7_annotateConstraintElem(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _36149_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1adad2cba:;
			{
				jule::Ptr<_1abce79d7_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1adad3c00:;
						{
							_36421_elem=_1abcea347_Ptr(_36149_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1adad366c:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.cast_ptr<_1ab070843_PtrTypeDecl>(&__jule_any_type80).get()._field_Elem;
				return _1abcaa57c_annotateConstraint(&(*_self_), _36421_elem);;
			}
		}
		_match_end_1adad2c32:;
	};
	return false;;
}

inline jule::Bool _1adad18bd_annotateConstraintElem(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _36149_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1adad6010:;
			{
				jule::Ptr<_1abce79d7_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1adad6ebc:;
						{
							_36421_elem=_1abcea0d3_Sptr(_36149_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1adad68b2:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.cast_ptr<_1ab06ed70_SptrTypeDecl>(&__jule_any_type81).get()._field_Elem;
				return _1abcaa57c_annotateConstraint(&(*_self_), _36421_elem);;
			}
		}
		_match_end_1adad5e77:;
	};
	return false;;
}



inline jule::Bool _1abca9812_annotateConstraintMap(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _38145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1adab9411:;
			{
				jule::Ptr<_1abd02ecb_Map> _38421_m = _1abceb799_Map(_38145_k.ptr());;
				jule::Ptr<_1ab071723_MapTypeDecl> _38521_m2 = (*_self_)._field_c.get()._field_Kind.cast_ptr<_1ab071723_MapTypeDecl>(&__jule_any_type82);;
				(*_self_)._field_c=_38521_m2.get()._field_Key;
				if ((!(_1abcaa57c_annotateConstraint(&(*_self_), _38421_m.get()._field_Key)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*_self_)._field_c=_38521_m2.get()._field_Val;
				__jule_func_result = _1abcaa57c_annotateConstraint(&(*_self_), _38421_m.get()._field_Val);
				return __jule_func_result;;
			}
		}
		_match_end_1adab93ab:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abca9b20_annotateConstraintTup(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _39645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1adabbbc7:;
			{
				jule::Ptr<_1ab070557_TupleTypeDecl> _39921_tup = (*_self_)._field_c.get()._field_Kind.cast_ptr<_1ab070557_TupleTypeDecl>(&__jule_any_type83);;
				jule::Ptr<_1abd024a3_Tuple> _40021_tup2 = _1abceba0d_Tup(_39645_k.ptr());;
				{
					auto &expr = _40021_tup2.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1adabd15c:;
					if (it != expr.end()) {
						jule::Ptr<_1abce79d7_TypeKind> _40125_t2 = *it;
						{
							{
								auto &expr = _39921_tup.get()._field_Types;
								auto it = expr.begin();
								_iter_begin_1adabd8aa:;
								if (it != expr.end()) {
									jule::Ptr<_1ab06d9b7_TypeDecl> _40229_t = *it;
									{
										(*_self_)._field_c=_40229_t;
										if (_1abcaa57c_annotateConstraint(&(*_self_), _40125_t2)) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1adabd8aa:;
									++it;
									goto _iter_begin_1adabd8aa;
								}
								_iter_end_1adabd8aa:;
							};
						}
						_iter_next_1adabd15c:;
						++it;
						goto _iter_begin_1adabd15c;
					}
					_iter_end_1adabd15c:;
				};
			}
		}
		_match_end_1adabbb0b:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abca9e2d_annotateConstraintFn(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _41344_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1adabd635:;
			{
				jule::Ptr<_1ab080446_FnDecl> _41621_pf = (*_self_)._field_c.get()._field_Kind.cast_ptr<_1ab080446_FnDecl>(&__jule_any_type16);;
				jule::Ptr<_1abaa1d79_FnIns> _41721_f = _1abceb05c_Fn(_41344_k.ptr());;
				{
					auto &expr = _41721_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1adac0b10:;
					if (it != expr.end()) {
						jule::I64 _41818_i = it - expr.begin();
						jule::Ptr<_1abaa0eaa_ParamIns> _41825_fp = *it;
						{
							(*_self_)._field_c=_41621_pf.get()._field_Params[_41818_i].get()._field_Kind;
							if (_1abcaa57c_annotateConstraint(&(*_self_), _41825_fp.get()._field_Kind)) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1adac0b10:;
						++it;
						_41818_i++;
						goto _iter_begin_1adac0b10;
					}
					_iter_end_1adac0b10:;
				};
				if ((_41621_pf.get()._field_Result != nullptr)) {
					(*_self_)._field_c=_41621_pf.get()._field_Result.get()._field_Kind;
					if (_1abcaa57c_annotateConstraint(&(*_self_), _41721_f.get()._field_Result)) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1adabe856:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abcaa25d_annotateConstraintIdent(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _43447_k) {
	jule::Ptr<_1ab06e07d_IdentTypeDecl> _43517_ident = (*_self_)._field_c.get()._field_Kind.cast_ptr<_1ab06e07d_IdentTypeDecl>(&__jule_any_type21);;
	jule::Ptr<_1ab08a583_StructIns> _43617_s = _1abceb2c1_Struct(_43447_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1adac3a25:;
		if (it != expr.end()) {
			jule::I64 _43713_i = it - expr.begin();
			jule::Ptr<_1ab07acb0_GenericDecl> _43716_g = *it;
			{
				if ((_43716_g.get()._field_Ident == _43517_ident.get()._field_Ident)) {
					jule::Ptr<_1abce62aa_InsGeneric> _43925_fg = (*_self_)._field_f.get()._field_Generics[_43713_i];;
					if ((_43925_fg != nullptr)) {
						return false;;
					};
					_1abcaa89b_pushGeneric(&(*_self_), _43447_k,_43713_i);
					return true;;
				};
				if ((_43617_s == nullptr)) {
					goto _iter_next_1adac3a25;
				};
				jule::Ptr<_1ab06d9b7_TypeDecl> _44921_c = (*_self_)._field_c;;
				{
					auto &expr = _43517_ident.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1adac5cd0:;
					if (it != expr.end()) {
						jule::Ptr<_1ab06d9b7_TypeDecl> _45025_ig = *it;
						{
							(*_self_)._field_c=_45025_ig;
							{
								auto &expr = _43617_s.get()._field_Generics;
								auto it = expr.begin();
								_iter_begin_1adac7078:;
								if (it != expr.end()) {
									jule::Ptr<_1abce62aa_InsGeneric> _45229_sg = *it;
									{
										if (_1abcaa57c_annotateConstraint(&(*_self_), _45229_sg.get()._field_Kind)) {
											return true;;
										};
									}
									_iter_next_1adac7078:;
									++it;
									goto _iter_begin_1adac7078;
								}
								_iter_end_1adac7078:;
							};
						}
						_iter_next_1adac5cd0:;
						++it;
						goto _iter_begin_1adac5cd0;
					}
					_iter_end_1adac5cd0:;
				};
				(*_self_)._field_c=_44921_c;
			}
			_iter_next_1adac3a25:;
			++it;
			_43713_i++;
			goto _iter_begin_1adac3a25;
		}
		_iter_end_1adac3a25:;
	};
	return false;;
}



inline jule::Bool _1abcaa57c_annotateConstraint(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _46342_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1adac7463:;
			{
				return _1abcaa25d_annotateConstraintIdent(&(*_self_), _46342_k);;
			}
		}
		_match_end_1adac740d:;
	};
	{
		
		if ((_1abceaa84_Arr(_46342_k.ptr()) != nullptr)) {
			_case_begin_1adac84ca:;
			{
				return _1adac990a_annotateConstraintElem(&(*_self_), _46342_k);;
			}
		}
		else if ((_1abceace8_Slc(_46342_k.ptr()) != nullptr)) {
			_case_begin_1adac89a3:;
			{
				return _1adac9102_annotateConstraintElem(&(*_self_), _46342_k);;
			}
		}
		else if ((_1abcea347_Ptr(_46342_k.ptr()) != nullptr)) {
			_case_begin_1adac8a19:;
			{
				return _1adacdbb7_annotateConstraintElem(&(*_self_), _46342_k);;
			}
		}
		else if ((_1abcea0d3_Sptr(_46342_k.ptr()) != nullptr)) {
			_case_begin_1adac8ae6:;
			{
				return _1adad18bd_annotateConstraintElem(&(*_self_), _46342_k);;
			}
		}
		else if ((_1abceb799_Map(_46342_k.ptr()) != nullptr)) {
			_case_begin_1adac8b5c:;
			{
				return _1abca9812_annotateConstraintMap(&(*_self_), _46342_k);;
			}
		}
		else if ((_1abceb05c_Fn(_46342_k.ptr()) != nullptr)) {
			_case_begin_1adac809b:;
			{
				return _1abca9e2d_annotateConstraintFn(&(*_self_), _46342_k);;
			}
		}
		else if ((_1abceba0d_Tup(_46342_k.ptr()) != nullptr)) {
			_case_begin_1adac8112:;
			{
				return _1abca9b20_annotateConstraintTup(&(*_self_), _46342_k);;
			}
		}
		else {
			_case_begin_1adac88b5:;
			{
				return false;;
			}
		}
		_match_end_1adac8860:;
	};
}



inline void _1abcaa89b_pushGeneric(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _48835_k, jule::I64 _48849_i) {
	(*_self_)._field_f.get()._field_Generics[_48849_i]=jule::new_ptr<_1abce62aa_InsGeneric>(_1abce62aa_InsGeneric{._field_Kind=_48835_k, });
	jule::Ptr<_1ab07acb0_GenericDecl> _49017_gd = (*_self_)._field_f.get()._field_Decl.get()._field_Generics[_48849_i];;
	{
		auto &expr = (*_self_)._field_ignored;
		auto it = expr.begin();
		_iter_begin_1adad99d6:;
		if (it != expr.end()) {
			jule::Ptr<_1abce79d7_TypeKind> _49121_ignored = *it;
			{
				if ((_49017_gd.get()._field_Ident == _1abce7dd3_Str(_49121_ignored.ptr()))) {
					_49121_ignored.get()._field_Kind=_48835_k.get()._field_Kind;
				};
			}
			_iter_next_1adad99d6:;
			++it;
			goto _iter_begin_1adad99d6;
		}
		_iter_end_1adad99d6:;
	};
	if (((_49017_gd.get()._field_Constraint == nullptr) || (_49017_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_49017_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1abcaa57c_annotateConstraint(&(*_self_), _48835_k);
}



inline jule::Bool _1abcaaba9_annotatePrim(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _50343_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1abcac9d0_annotateAny(&(*_self_), _50343_k);
	return __jule_func_result;;
}



inline jule::Bool _1abcaaeb7_annotateArr(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _50742_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abd03ac0_Arr> _50817_parr = _1abceaa84_Arr((*((*_self_)._field_k)).ptr());;
	if ((_50817_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1abd03ac0_Arr> _51217_arr = _1abceaa84_Arr(_50742_k.ptr());;
	(*_self_)._field_k=(&(_50817_parr.get()._field_Elem));
	__jule_func_result = _1abcaccdd_annotateKind(&(*_self_), _51217_arr.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _1abcab2c5_annotateSlc(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _51742_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abd01925_Slc> _51817_pslc = _1abceace8_Slc((*((*_self_)._field_k)).ptr());;
	if ((_51817_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1abd01925_Slc> _52217_slc = _1abceace8_Slc(_51742_k.ptr());;
	(*_self_)._field_k=(&(_51817_pslc.get()._field_Elem));
	__jule_func_result = _1abcaccdd_annotateKind(&(*_self_), _52217_slc.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _1abcab67c_checkMapKey(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>* _52741_k, jule::Ptr<_1abce79d7_TypeKind>& _52761_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abce79d7_TypeKind>* _52817_old = (*_self_)._field_k;;
	(*_self_)._field_k=_52741_k;
	__jule_func_result=_1abcaccdd_annotateKind(&(*_self_), _52761_ck);
	(*_self_)._field_k=_52817_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1abcab98a_annotateMap(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _53542_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abd02ecb_Map> _53617_pmap = _1abceb799_Map((*((*_self_)._field_k)).ptr());;
	if ((_53617_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1abd02ecb_Map> _54017_m = _1abceb799_Map(_53542_k.ptr());;
	__jule_func_result = (_1abcab67c_checkMapKey(&(*_self_), (&(_53617_pmap.get()._field_Key)),_54017_m.get()._field_Key) && _1abcab67c_checkMapKey(&(*_self_), (&(_53617_pmap.get()._field_Val)),_54017_m.get()._field_Val));
	return __jule_func_result;;
}



inline jule::Bool _1abcabc98_annotateFn(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _54541_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abaa1d79_FnIns> _54617_pf = _1abceb05c_Fn((*((*_self_)._field_k)).ptr());;
	if ((_54617_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1abaa1d79_FnIns> _55017_f = _1abceb05c_Fn(_54541_k.ptr());;
	{
		
		if ((_54617_pf.get()._field_Params.len() != _55017_f.get()._field_Params.len())) {
			_case_begin_1adae5ddd:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1aba9e63a_IsVoid(_54617_pf.get()._field_Decl.ptr()) != _1aba9e63a_IsVoid(_55017_f.get()._field_Decl.ptr()))) {
			_case_begin_1adae5e65:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1adae5d55:;
	};
	__jule_func_result=true;
	jule::Ptr<_1abce79d7_TypeKind>* _55917_old = (*_self_)._field_k;;
	{
		auto &expr = _55017_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1adae775d:;
		if (it != expr.end()) {
			jule::I64 _56014_i = it - expr.begin();
			jule::Ptr<_1abaa0eaa_ParamIns> _56021_fp = *it;
			{
				(*_self_)._field_k=(&(_54617_pf.get()._field_Params[_56014_i].get()._field_Kind));
				__jule_func_result=(_1abcaccdd_annotateKind(&(*_self_), _56021_fp.get()._field_Kind) && __jule_func_result);
			}
			_iter_next_1adae775d:;
			++it;
			_56014_i++;
			goto _iter_begin_1adae775d;
		}
		_iter_end_1adae775d:;
	};
	if ((!(_1aba9e63a_IsVoid(_54617_pf.get()._field_Decl.ptr())))) {
		(*_self_)._field_k=(&(_54617_pf.get()._field_Result));
		__jule_func_result=(_1abcaccdd_annotateKind(&(*_self_), _55017_f.get()._field_Result) && __jule_func_result);
	};
	(*_self_)._field_k=_55917_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1abcac0a6_annotatePtr(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _57442_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abd0452c_Ptr> _57517_pptr = _1abcea347_Ptr((*((*_self_)._field_k)).ptr());;
	if ((_57517_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1abd0452c_Ptr> _57917_ptr = _1abcea347_Ptr(_57442_k.ptr());;
	(*_self_)._field_k=(&(_57517_pptr.get()._field_Elem));
	__jule_func_result = _1abcaccdd_annotateKind(&(*_self_), _57917_ptr.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _1abcac3b4_annotateSptr(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _58443_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abd00eb8_Sptr> _58517_ssptr = _1abcea0d3_Sptr((*((*_self_)._field_k)).ptr());;
	if ((_58517_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1abd00eb8_Sptr> _58917_sptr = _1abcea0d3_Sptr(_58443_k.ptr());;
	(*_self_)._field_k=(&(_58517_ssptr.get()._field_Elem));
	__jule_func_result = _1abcaccdd_annotateKind(&(*_self_), _58917_sptr.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _1abcac6c2_annotateStruct(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _59445_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab08a583_StructIns> _59517_s = _1abceb2c1_Struct((*((*_self_)._field_k)).ptr());;
	if ((_59517_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab08a583_StructIns> _59917_s2 = _1abceb2c1_Struct(_59445_k.ptr());;
	if ((_59517_s.get()._field_Generics.len() != _59917_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &expr = _59517_s.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1adb00898:;
		if (it != expr.end()) {
			jule::I64 _60314_i = it - expr.begin();
			jule::Ptr<_1abce62aa_InsGeneric> _60321_g = *it;
			{
				jule::Ptr<_1abce62aa_InsGeneric> _60421_g2 = _59917_s2.get()._field_Generics[_60314_i];;
				if (_1abce81e1_Equal(_60321_g.get()._field_Kind, _60421_g2.get()._field_Kind)) {
					goto _iter_next_1adb00898;
				};
				(*_self_)._field_k=(&(_60321_g.get()._field_Kind));
				if ((!(_1abcaccdd_annotateKind(&(*_self_), _60421_g2.get()._field_Kind)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1adb00898:;
			++it;
			_60314_i++;
			goto _iter_begin_1adb00898;
		}
		_iter_end_1adb00898:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abcac9d0_annotateAny(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _61642_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _61713_kind = _1abce7dd3_Str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1adb03307:;
		if (it != expr.end()) {
			jule::I64 _61813_i = it - expr.begin();
			jule::Ptr<_1ab07acb0_GenericDecl> _61816_g = *it;
			{
				if ((_61713_kind != _61816_g.get()._field_Ident)) {
					goto _iter_next_1adb03307;
				};
				jule::Ptr<_1abce62aa_InsGeneric> _62217_t = (*_self_)._field_f.get()._field_Generics[_61813_i];;
				{
					
					if ((_62217_t == nullptr) || (_62217_t.get()._field_Kind == nullptr)) {
						_case_begin_1adb04e96:;
						{
							_1abcaa89b_pushGeneric(&(*_self_), _61642_k,_61813_i);
						}
					}
					else if ((!(_1abce81e1_Equal(_62217_t.get()._field_Kind, _61642_k)))) {
						_case_begin_1adb0501d:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1adb04d42:;
				};
				(*((*_self_)._field_k)).get()._field_Kind=_61642_k.get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1adb03307:;
			++it;
			_61813_i++;
			goto _iter_begin_1adb03307;
		}
		_iter_end_1adb03307:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abcaccdd_annotateKind(_1abca8e2c_dynamicTypeAnnotation* _self_, jule::Ptr<_1abce79d7_TypeKind>& _63743_k) {
	jule::Bool __jule_func_result = false;
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1abcac9d0_annotateAny(&(*_self_), _63743_k)) {
			_case_begin_1adb0755e:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1abce9d6e_Prim(_63743_k.ptr()) != nullptr)) {
			_case_begin_1adb075c5:;
			{
				__jule_func_result = _1abcaaba9_annotatePrim(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1abceaa84_Arr(_63743_k.ptr()) != nullptr)) {
			_case_begin_1adb0763b:;
			{
				__jule_func_result = _1abcaaeb7_annotateArr(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1abceace8_Slc(_63743_k.ptr()) != nullptr)) {
			_case_begin_1adb076a2:;
			{
				__jule_func_result = _1abcab2c5_annotateSlc(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1abceb799_Map(_63743_k.ptr()) != nullptr)) {
			_case_begin_1adb07927:;
			{
				__jule_func_result = _1abcab98a_annotateMap(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1abceb05c_Fn(_63743_k.ptr()) != nullptr)) {
			_case_begin_1adb0798d:;
			{
				__jule_func_result = _1abcabc98_annotateFn(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1abcea347_Ptr(_63743_k.ptr()) != nullptr)) {
			_case_begin_1adb07a04:;
			{
				__jule_func_result = _1abcac0a6_annotatePtr(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1abcea0d3_Sptr(_63743_k.ptr()) != nullptr)) {
			_case_begin_1adb07a6a:;
			{
				__jule_func_result = _1abcac3b4_annotateSptr(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1abceb2c1_Struct(_63743_k.ptr()) != nullptr)) {
			_case_begin_1adb07cbd:;
			{
				__jule_func_result = _1abcac6c2_annotateStruct(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1adb074e8:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1adb07493:;
	};
}



inline jule::Bool _1abcad052_annotate(_1abca8e2c_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_Kind));
	__jule_func_result = _1abcaccdd_annotateKind(&(*_self_), (*_self_)._field_a.get()._field_Kind);
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abca8e2c_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1abcadd44_pushErrToken(_1abcad7e4_fnCallArgChecker* _self_, jule::Ptr<_1a97237bc_Token> _68231_token, jule::Str _68246_fmt, jule::Slice<jule::Any> _68259_args) {
	_1abc58bac_pushErr((*_self_)._field_e.get()._field_s.ptr(), _68231_token,_68246_fmt,_68259_args);
}



inline void _1abcae163_pushErr(_1abcad7e4_fnCallArgChecker* _self_, jule::Str _68626_fmt, jule::Slice<jule::Any> _68639_args) {
	_1abcadd44_pushErrToken(&(*_self_), (*_self_)._field_errorToken,_68626_fmt,_68639_args);
}



inline jule::Slice<jule::Ptr<_1abaa0eaa_ParamIns>> _1abcae3c7_getParams(_1abcad7e4_fnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_Params.len() > 0LL) && ((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1aba9ceb8_IsSelf((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*_self_)._field_f.get()._field_Params.slice(1LL);;
	};
	return (*_self_)._field_f.get()._field_Params;;
}



inline jule::Bool _1abcae6d5_checkCounts(_1abcad7e4_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1abaa0eaa_ParamIns>>& _69931_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _70017_n = _69931_params.len();;
	if (((_70017_n > 0LL) && _1aba9ceb8_IsSelf(_69931_params[0LL].get()._field_Decl.ptr()))) {
		(_70017_n)--;
	};
	jule::I64 _70517_diff = (_70017_n - (*_self_)._field_args.len());;
	{
		
		if ((_70517_diff == 0LL)) {
			_case_begin_1adb138ab:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70017_n > 0LL) && _69931_params[(_70017_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1adb13933:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70517_diff < 0LL) || (_70517_diff > _69931_params.len()))) {
			_case_begin_1adb139aa:;
			{
				_1abcae163_pushErr(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1adb13834:;
	};
	jule::Str _71617_idents = jule::Str();;
	for (; (_70517_diff > 0LL); (_70517_diff)--) {
		{
			_71617_idents+=(jule::Str(", ", 2) + _69931_params[(_70017_n - _70517_diff)].get()._field_Decl.get()._field_Ident);
		}
	_iter_next_1adb1545c:;
	}
	_iter_end_1adb1545c:;;
	(_71617_idents).mut_slice(2LL);;
	_1abcae163_pushErr(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_71617_idents, &__jule_any_type7)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abcaeb36_checkArg(_1abcad7e4_fnCallArgChecker* _self_, jule::Ptr<_1abaa0eaa_ParamIns>& _72632_p, jule::Ptr<_1abcbba55_Data>& _72651_arg, jule::Ptr<_1a97237bc_Token>& _72668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*_self_)._field_dynamicAnnotation && _1abaa3e8b_parameterUsesGenerics(_72632_p,(*_self_)._field_f.get()._field_Decl.get()._field_Generics))) {
		__jule_func_result=(!(_72632_p.get()._field_Decl.get()._field_Variadic));
		if (__jule_func_result) {
			_1abca8e2c_dynamicTypeAnnotation _73025_dta = _1abca8e2c_dynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_72632_p, ._field_a=_72651_arg, ._field_errorToken=_72668_errorToken, ._field_ignored=(*_self_)._field_ignored};;
			__jule_func_result=_1abcad052_annotate(&_73025_dta);
		};
		if ((!(__jule_func_result))) {
			_1abcadd44_pushErrToken(&(*_self_), _72668_errorToken,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1abc639a8_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, _72632_p.get()._field_Decl.get()._field_Mutable,_72632_p.get()._field_Decl.get()._field_Reference,_72632_p.get()._field_Kind,_72651_arg,_72668_errorToken)) {
		_1abc60a93_checkAssignType((*_self_)._field_e.get()._field_s, _72632_p.get()._field_Decl.get()._field_Reference,_72632_p.get()._field_Kind,_72651_arg,_72668_errorToken);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abcaeedd_push(_1abcad7e4_fnCallArgChecker* _self_, jule::Ptr<_1abaa0eaa_ParamIns>& _75428_p, jule::Ptr<_1ab072ed8_Expr> _75446_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abce79d7_TypeKind> _75517_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _75613_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1abcbba55_Data> _75717_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_75428_p.get()._field_Decl.get()._field_Mutable));
	if (((!((*_self_)._field_dynamicAnnotation)) && (!(_75428_p.get()._field_Decl.get()._field_Variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_75428_p.get()._field_Kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_75717_d=_1abcd88c9_evalExprKind((*_self_)._field_e, _75446_arg.get()._field_Kind);
	(*_self_)._field_e.get()._field_prefix=_75517_old;
	(*_self_)._field_e.get()._field_immutable=_75613_old_immut;
	if ((_75717_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1abcaeb36_checkArg(&(*_self_), _75428_p,_75717_d,_75446_arg.get()._field_Token);
	(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_75717_d.get()._field_Model);;
	return __jule_func_result;;
}



inline jule::Bool _1abcb0395_pushVariadic(_1abcad7e4_fnCallArgChecker* _self_, jule::Ptr<_1abaa0eaa_ParamIns>& _77936_p, jule::I64 _77954_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _78117_variadiced = false;;
	jule::Bool _78213_more = ((_77954_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1aba93112_SliceExprModel> _78317_model = jule::new_ptr<_1aba93112_SliceExprModel>(_1aba93112_SliceExprModel{._field_ElemKind=_77936_p.get()._field_Kind, });;
	jule::Ptr<_1abce79d7_TypeKind> _78717_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _79213_variadic = _77936_p.get()._field_Kind.get()._field_Variadic;;
	_77936_p.get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		_77936_p.get()._field_Kind.get()._field_Variadic=_79213_variadic;
	});;
	for (; (_77954_i < (*_self_)._field_args.len()); (_77954_i)++) {
		{
			jule::Ptr<_1ab072ed8_Expr> _79921_arg = (*_self_)._field_args[_77954_i];;
			{
				auto &_match_expr{ _79921_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type84) {
					_case_begin_1adb23d2d:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(jule::new_ptr<_1abd01925_Slc>(_1abd01925_Slc{._field_Elem=_77936_p.get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_1adb2467a:;
					{
						(*_self_)._field_e.get()._field_prefix=_77936_p.get()._field_Kind;
					}
				}
				_match_end_1adb244e3:;
			};
			jule::Ptr<_1abcbba55_Data> _81221_d = _1abcd8bd7_eval((*_self_)._field_e, _79921_arg);;
			if ((_81221_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1adb232a0;
			};
			if (_81221_d.get()._field_Kind.get()._field_Variadic) {
				_78117_variadiced=true;
				_77936_p.get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1abcaeb36_checkArg(&(*_self_), _77936_p,_81221_d,_79921_arg.get()._field_Token));
				{
					auto &_match_expr{ _81221_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1adb2687a:;
						{
							_78317_model=_81221_d.get()._field_Model.cast_ptr<_1aba93112_SliceExprModel>(&__jule_any_type85);
							_78317_model.get()._field_ElemKind=_77936_p.get()._field_Kind;
						}
					}
					else {
						_case_begin_1adb2765b:;
						{
							_78317_model=nullptr;
							(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_81221_d.get()._field_Model);;
						}
					}
					_match_end_1adb2775a:;
				};
				(_77954_i)++;
				goto _iter_end_1adb232a0;
			};
			__jule_func_result=(__jule_func_result && _1abcaeb36_checkArg(&(*_self_), _77936_p,_81221_d,_79921_arg.get()._field_Token));
			_78317_model.get()._field_Elems = jule::alloc_for_append(_78317_model.get()._field_Elems,1);_78317_model.get()._field_Elems.__push(_81221_d.get()._field_Model);;
		}
	_iter_next_1adb232a0:;
	}
	_iter_end_1adb232a0:;;
	(*_self_)._field_e.get()._field_prefix=_78717_old;
	if ((_78117_variadiced && _78213_more)) {
		_1abcadd44_pushErrToken(&(*_self_), (*_self_)._field_args[_77954_i].get()._field_Token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_78317_model != nullptr)) {
		(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(jule::Any(_78317_model, &__jule_any_type85));;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1abcb06a3_checkArgs(_1abcad7e4_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1abaa0eaa_ParamIns>>& _85533_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _85613_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I64 _86017_i = 0LL;;
	if (((_85533_params.len() > 0LL) && _1aba9ceb8_IsSelf(_85533_params[0LL].get()._field_Decl.ptr()))) {
		(_86017_i)++;
	};
	_julec_label_iter:;
	while ((_86017_i < _85533_params.len())) {
		{
			jule::Ptr<_1abaa0eaa_ParamIns> _86721_p = _85533_params[_86017_i];;
			{
				
				if (_86721_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1adb2e432:;
					{
						__jule_func_result=(_1abcb0395_pushVariadic(&(*_self_), _86721_p,_86017_i) && __jule_func_result);
						goto _iter_end_1adb2c265;
					}
				}
				else if (((*_self_)._field_args.len() <= _86017_i)) {
					_case_begin_1adb2dbd4:;
					{
						__jule_func_result=false;
						goto _iter_end_1adb2c265;
					}
				}
				else {
					_case_begin_1adb2d83d:;
					{
						__jule_func_result=(_1abcaeedd_push(&(*_self_), _86721_p,(*_self_)._field_args[_86017_i]) && __jule_func_result);
					}
				}
				_match_end_1adb2d7c7:;
			};
			(_86017_i)++;
		}
	_iter_next_1adb2c265:;
	}
	_iter_end_1adb2c265:;;
	(*_self_)._field_e.get()._field_arg=_85613_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1abcb0939_checkDynamicTypeAnnotation(_1abcad7e4_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = (*_self_)._field_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1adb30be7:;
		if (it != expr.end()) {
			jule::Ptr<_1abce62aa_InsGeneric> _88716_g = *it;
			{
				if ((_88716_g == nullptr)) {
					_1abcae163_pushErr(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1adb30be7:;
			++it;
			goto _iter_begin_1adb30be7;
		}
		_iter_end_1adb30be7:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abcb0bae_check(_1abcad7e4_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1abaa0eaa_ParamIns>> _89717_params = _1abcae3c7_getParams(&(*_self_));;
	__jule_func_result=_1abcae6d5_checkCounts(&(*_self_), _89717_params);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1abcb06a3_checkArgs(&(*_self_), _89717_params);
	if ((__jule_func_result && (*_self_)._field_dynamicAnnotation)) {
		__jule_func_result=_1abcb0939_checkDynamicTypeAnnotation(&(*_self_));
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcad7e4_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1abcb1709_pushErr(_1abcb11ed_structLitChecker* _self_, jule::Ptr<_1a97237bc_Token> _91826_token, jule::Str _91841_fmt, jule::Slice<jule::Any> _91854_args) {
	_1abcbdace_pushErr((*_self_)._field_e.ptr(), _91826_token,_91841_fmt,_91854_args);
}



inline void _1abcb1a28_pushSugggestion(_1abcb11ed_structLitChecker* _self_, jule::Str _92334_fmt, jule::Slice<jule::Any> _92347_args) {
	_1abcbdded_pushSugggestion((*_self_)._field_e.ptr(), _92334_fmt,_92347_args);
}



inline void _1abcb1de1_pushMatch(_1abcb11ed_structLitChecker* _self_, jule::Ptr<_1ab08a396_FieldIns>& _92733_f, jule::Ptr<_1abcbba55_Data>& _92752_d, jule::Ptr<_1a97237bc_Token>& _92767_errorToken) {
	;
	if (_1abc639a8_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_92733_f.get()._field_Kind,_92752_d,_92767_errorToken)) {
		_1abc60a93_checkAssignType((*_self_)._field_e.get()._field_s, false,_92733_f.get()._field_Kind,_92752_d,_92767_errorToken);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1aba91693_StructArgExprModel>(_1aba91693_StructArgExprModel{._field_Field=_92733_f, ._field_Expr=_92752_d.get()._field_Model}));;
}



inline void _1abcb2210_checkPair(_1abcb11ed_structLitChecker* _self_, jule::Ptr<_1ab077949_FieldExprPair>& _94033_pair, jule::Slice<jule::Ptr<_1ab072ed8_Expr>>& _94060_exprs) {
	jule::Ptr<_1ab08a396_FieldIns> _94217_f = _1ab04762d_FindField((*_self_)._field_s.ptr(), _94033_pair.get()._field_Field.get()._field_Kind);;
	if ((_94217_f == nullptr)) {
		_1abcb1709_pushErr(&(*_self_), _94033_pair.get()._field_Field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_94033_pair.get()._field_Field.get()._field_Kind, &__jule_any_type7)}));
		return;;
	};
	if ((!(_1abc59383_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _94217_f.get()._field_Decl.get()._field_Public,_94217_f.get()._field_Decl.get()._field_Token)))) {
		_1abcb1709_pushErr(&(*_self_), _94033_pair.get()._field_Field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_94033_pair.get()._field_Field.get()._field_Kind, &__jule_any_type7)}));
		_1abcb1a28_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _94060_exprs;
		auto it = expr.begin();
		_iter_begin_1adb3a73a:;
		if (it != expr.end()) {
			jule::Ptr<_1ab072ed8_Expr> _95421_expr = *it;
			{
				{
					auto &_match_expr{ _95421_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type86) {
						_case_begin_1adb3b098:;
						{
							jule::Ptr<_1ab077949_FieldExprPair> _95725_dpair = _95421_expr.get()._field_Kind.cast_ptr<_1ab077949_FieldExprPair>(&__jule_any_type86);;
							{
								
								if ((_94033_pair == _95725_dpair)) {
									_case_begin_1adb3c055:;
									{
										goto _iter_end_1adb3a73a;
									}
								}
								else if ((_94033_pair.get()._field_Field.get()._field_Kind == _95725_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1adb3c0cc:;
									{
										_1abcb1709_pushErr(&(*_self_), _94033_pair.get()._field_Field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_94033_pair.get()._field_Field.get()._field_Kind, &__jule_any_type7)}));
										goto _iter_end_1adb3a73a;
									}
								}
								_match_end_1adb3be9a:;
							};
						}
					}
					_match_end_1adb3adcd:;
				};
			}
			_iter_next_1adb3a73a:;
			++it;
			goto _iter_begin_1adb3a73a;
		}
		_iter_end_1adb3a73a:;
	};
	jule::Ptr<_1abce79d7_TypeKind> _96817_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_96817_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_94217_f.get()._field_Kind;
	jule::Ptr<_1abcbba55_Data> _97217_d = _1abcd88c9_evalExprKind((*_self_)._field_e, _94033_pair.get()._field_Expr.get()._field_Kind);;
	if ((_97217_d == nullptr)) {
		return;;
	};
	_1abcb1de1_pushMatch(&(*_self_), _94217_f,_97217_d,_94033_pair.get()._field_Field);
}



inline jule::Bool _1abcb251d_readyExprs(_1abcb11ed_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ab072ed8_Expr>>& _97934_exprs) {
	jule::Bool _98017_ok = true;;
	{
		auto &expr = _97934_exprs;
		auto it = expr.begin();
		_iter_begin_1adb40960:;
		if (it != expr.end()) {
			jule::I64 _98114_i = it - expr.begin();
			jule::Ptr<_1ab072ed8_Expr> _98121_expr = *it;
			{
				{
					auto &_match_expr{ _98121_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type87) {
						_case_begin_1adb4171e:;
						{
							jule::Ptr<_1ab078de0_KeyValPair> _98425_pair = _98121_expr.get()._field_Kind.cast_ptr<_1ab078de0_KeyValPair>(&__jule_any_type87);;
							{
								auto &_match_expr{ _98425_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type88) {
									_case_begin_1adb42016:;
									{
										goto _match_end_1adb4249a;
									}
								}
								else {
									_case_begin_1adb42720:;
									{
										_1abcb1709_pushErr(&(*_self_), _98425_pair.get()._field_Colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_98017_ok=false;
										goto _iter_next_1adb40960;
									}
								}
								_match_end_1adb4249a:;
							};
							_97934_exprs[_98114_i].get()._field_Kind=jule::Any(jule::new_ptr<_1ab077949_FieldExprPair>(_1ab077949_FieldExprPair{._field_Field=_98425_pair.get()._field_Key.get()._field_Token, ._field_Expr=_98425_pair.get()._field_Val}), &__jule_any_type86);
						}
					}
					_match_end_1adb414ee:;
				};
			}
			_iter_next_1adb40960:;
			++it;
			_98114_i++;
			goto _iter_begin_1adb40960;
		}
		_iter_end_1adb40960:;
	};
	return _98017_ok;;
}



inline void _1abcb2793_check(_1abcb11ed_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ab072ed8_Expr>>& _100329_exprs) {
	if ((_100329_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1abcb251d_readyExprs(&(*_self_), _100329_exprs)))) {
		return;;
	};
	jule::Bool _101017_paired = false;;
	{
		auto &expr = _100329_exprs;
		auto it = expr.begin();
		_iter_begin_1adb41444:;
		if (it != expr.end()) {
			jule::I64 _101114_i = it - expr.begin();
			jule::Ptr<_1ab072ed8_Expr> _101121_expr = *it;
			{
				{
					auto &_match_expr{ _101121_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type86) {
						_case_begin_1bc029148:;
						{
							jule::Ptr<_1ab077949_FieldExprPair> _101425_pair = _101121_expr.get()._field_Kind.cast_ptr<_1ab077949_FieldExprPair>(&__jule_any_type86);;
							if (((_101114_i > 0LL) && (!(_101017_paired)))) {
								_1abcb1709_pushErr(&(*_self_), _101425_pair.get()._field_Field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_101017_paired=true;
							_1abcb2210_checkPair(&(*_self_), _101425_pair,_100329_exprs);
						}
					}
					else {
						_case_begin_1bc024a28:;
						{
							if (_101017_paired) {
								_1abcb1709_pushErr(&(*_self_), _101121_expr.get()._field_Token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_101114_i >= (*_self_)._field_s.get()._field_Fields.len())) {
								_1abcb1709_pushErr(&(*_self_), _101121_expr.get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1adb41444;
							};
							jule::Ptr<_1ab08a396_FieldIns> _102925_field = (*_self_)._field_s.get()._field_Fields[_101114_i];;
							if ((!(_1abc59383_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _102925_field.get()._field_Decl.get()._field_Public,_102925_field.get()._field_Decl.get()._field_Token)))) {
								_1abcb1709_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_1abcb1a28_pushSugggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1abce79d7_TypeKind> _103725_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_103725_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102925_field.get()._field_Kind;
							jule::Ptr<_1abcbba55_Data> _104125_d = _1abcd88c9_evalExprKind((*_self_)._field_e, _101121_expr.get()._field_Kind);;
							if ((_104125_d == nullptr)) {
								goto _iter_next_1adb41444;
							};
							_1abcb1de1_pushMatch(&(*_self_), _102925_field,_104125_d,_101121_expr.get()._field_Token);
						}
					}
					_match_end_1bc024891:;
				};
			}
			_iter_next_1adb41444:;
			++it;
			_101114_i++;
			goto _iter_begin_1adb41444;
		}
		_iter_end_1adb41444:;
	};
	if ((!(_101017_paired))) {
		jule::I64 _105217_n = (*_self_)._field_s.get()._field_Fields.len();;
		jule::I64 _105321_diff = (_105217_n - _100329_exprs.len());;
		{
			
			if ((_105321_diff <= 0LL)) {
				_case_begin_1bc02c305:;
				{
					return;;
				}
			}
			_match_end_1bc02c1d4:;
		};
		jule::Str _105921_idents = jule::Str();;
		for (; (_105321_diff > 0LL); (_105321_diff)--) {
			{
				_105921_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_Fields[(_105217_n - _105321_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1bc02cbeb:;
		}
		_iter_end_1bc02cbeb:;;
		(_105921_idents).mut_slice(2LL);;
		_1abcb1709_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105921_idents, &__jule_any_type7)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1abcb11ed_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abc73ee6_Var> _1abcb3277_buildVar(_1abcb2cd2_rangeChecker* _self_, jule::Ptr<_1ab081425_VarDecl>& _107828_decl) {
	jule::Ptr<_1abc73ee6_Var> _107917_v = _1abaa9a63_buildVar(_107828_decl);;
	return _107917_v;;
}



inline void _1abcb3453_setSizeKey(_1abcb2cd2_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _1a9726061_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyA=_1abcb3277_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1abcebdb5_TypeSymbol>(_1abcebdb5_TypeSymbol{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bc03188c:;
			{
				(*_self_)._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1abc72eb2_IterRelation>(_1abc72eb2_IterRelation{._field_Range=(*_self_)._field_d.get()._field_Model.cast_ptr<_1abc73ee6_Var>(&__jule_any_type10)});
			}
		}
		_match_end_1bc031837:;
	};
}



inline void _1abcb381b_checkRangeExprValidity(_1abcb2cd2_rangeChecker* _self_, jule::Ptr<_1abcbba55_Data>& _110946_d, jule::Ptr<_1abc73ee6_Var>& _110957_key, jule::Ptr<_1abce79d7_TypeKind>& _110973_k) {
	jule::Bool _111017__mut = _110957_key.get()._field_Mutable;;
	if ((_111017__mut && (!(_1abce9159_Mutable(_110973_k.ptr()))))) {
		_111017__mut=false;
	};
	_1abc639a8_checkValidityForInitExpr((*_self_)._field_sc.get()._field_s, _111017__mut,_110957_key.get()._field_Reference,_110957_key.get()._field_Kind.get()._field_Kind,_110946_d,(*_self_)._field_rang.get()._field_InToken);
}



inline void _1abcb39e7_checkSlice(_1abcb2cd2_rangeChecker* _self_) {
	_1abcb3453_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1a9726061_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1abd01925_Slc> _112817_slc = _1abceace8_Slc((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1abcb3277_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1abcebdb5_TypeSymbol>(_1abcebdb5_TypeSymbol{._field_Kind=_112817_slc.get()._field_Elem});
	_1abcb381b_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_112817_slc.get()._field_Elem);
}



inline void _1abcb3bc3_checkArray(_1abcb2cd2_rangeChecker* _self_) {
	_1abcb3453_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1a9726061_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1abd03ac0_Arr> _114117_arr = _1abceaa84_Arr((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1abcb3277_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1abcebdb5_TypeSymbol>(_1abcebdb5_TypeSymbol{._field_Kind=_114117_arr.get()._field_Elem});
	_1abcb381b_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_114117_arr.get()._field_Elem);
}



inline void _1abcb3d9e_checkMapKeyA(_1abcb2cd2_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _1a9726061_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1abd02ecb_Map> _115317_m = _1abceb799_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyA=_1abcb3277_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1abcebdb5_TypeSymbol>(_1abcebdb5_TypeSymbol{._field_Kind=_115317_m.get()._field_Key});
	jule::Ptr<_1abcbba55_Data> _115717_d = jule::new_ptr<_1abcbba55_Data>((*((*_self_)._field_d)));;
	_115717_d.get()._field_Kind=_115317_m.get()._field_Key;
	_1abcb381b_checkRangeExprValidity(&(*_self_), _115717_d,(*_self_)._field_Kind.get()._field_KeyA,_115317_m.get()._field_Key);
}



inline void _1abcb407a_checkMapKeyB(_1abcb2cd2_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1a9726061_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1abd02ecb_Map> _116817_m = _1abceb799_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1abcb3277_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1abcebdb5_TypeSymbol>(_1abcebdb5_TypeSymbol{._field_Kind=_116817_m.get()._field_Val});
	jule::Ptr<_1abcbba55_Data> _117217_d = jule::new_ptr<_1abcbba55_Data>((*((*_self_)._field_d)));;
	_117217_d.get()._field_Kind=_116817_m.get()._field_Val;
	_1abcb381b_checkRangeExprValidity(&(*_self_), _117217_d,(*_self_)._field_Kind.get()._field_KeyB,_116817_m.get()._field_Val);
}



inline void _1abcb4256_checkMap(_1abcb2cd2_rangeChecker* _self_) {
	_1abcb3d9e_checkMapKeyA(&(*_self_));
	_1abcb407a_checkMapKeyB(&(*_self_));
}



inline void _1abcb4432_checkStr(_1abcb2cd2_rangeChecker* _self_) {
	_1abcb3453_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1a9726061_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyB=_1abcb3277_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1abcebdb5_TypeSymbol>(_1abcebdb5_TypeSymbol{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1abcb4696_check(_1abcb2cd2_rangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1bc044e99:;
		}
		else if ((_1abceace8_Slc((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc04488e:;
			{
				_1abcb39e7_checkSlice(&(*_self_));
				return true;;
			}
		}
		else if ((_1abceaa84_Arr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc044905:;
			{
				_1abcb3bc3_checkArray(&(*_self_));
				return true;;
			}
		}
		else if ((_1abceb799_Map((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc04496b:;
			{
				_1abcb4256_checkMap(&(*_self_));
				return true;;
			}
		}
		else {
			_case_begin_1bc044828:;
			{
				jule::Ptr<_1abcec734_Prim> _121017_prim = _1abce9d6e_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (((_121017_prim != nullptr) && _1abd00968_IsStr(_121017_prim.ptr()))) {
					_1abcb4432_checkStr(&(*_self_));
					return true;;
				};
			}
		}
		_match_end_1bc04475c:;
	};
	_1abc58bac_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_InToken,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcb2cd2_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1abcb5312_prepareTypes(_1abcb4d6c_retTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1abaa2e9b_Types((*_self_)._field_f.ptr());
	};
}



inline void _1abcb5587_prepareExprs(_1abcb4d6c_retTypeChecker* _self_, jule::Ptr<_1ab072ed8_Expr>& _123836_e) {
	if ((_123836_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123836_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bc04a1d0:;
			{
				(*_self_)._field_exprs=_123836_e.get()._field_Kind.cast_ptr<_1ab073b65_TupleExpr>(&__jule_any_type89).get()._field_Expr;
			}
		}
		else {
			_case_begin_1bc04a3cd:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123836_e);;
			}
		}
		_match_end_1bc04a026:;
	};
}



inline void _1abcb5763_checkExprs(_1abcb4d6c_retTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1abcbba55_Data>> _125417_datas = jule::Slice<jule::Ptr<_1abcbba55_Data>>::alloc(0LL, (*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1bc04c347:;
		if (it != expr.end()) {
			jule::I64 _125514_i = it - expr.begin();
			jule::Ptr<_1ab072ed8_Expr> _125521_expr = *it;
			{
				if ((_125514_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1bc04c347;
				};
				jule::Ptr<_1abce79d7_TypeKind> _126021_t = (*_self_)._field_types[_125514_i];;
				jule::Ptr<_1abcbba55_Data> _126221_d = _1abcd8ee5_evalExpr(_1abc6028a_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1abd13959_Lookup>((*_self_)._field_sc, 0),_126021_t), _125521_expr);;
				if ((_126221_d == nullptr)) {
					goto _iter_next_1bc04c347;
				};
				_125417_datas = jule::alloc_for_append(_125417_datas,1);_125417_datas.__push(_126221_d);;
				if (((!(_126221_d.get()._field_Mutable)) && _1abce9159_Mutable(_126221_d.get()._field_Kind.ptr()))) {
					_1abc58bac_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1abca7447_assignTypeChecker _127421_ac = _1abca7447_assignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_126021_t, ._field_d=_126221_d, ._field_errorToken=(*_self_)._field_errorToken};;
				_1abca85be_check(&_127421_ac);
			}
			_iter_next_1bc04c347:;
			++it;
			_125514_i++;
			goto _iter_begin_1bc04c347;
		}
		_iter_end_1bc04c347:;
	};
	if ((_125417_datas.len() > 1LL)) {
		(*_self_)._field_model=jule::Any(jule::new_ptr<_1aba96a50_TupleExprModel>(_1aba96a50_TupleExprModel{._field_Datas=_125417_datas}), &__jule_any_type90);
	} else if ((_125417_datas.len() == 1LL)) {
		(*_self_)._field_model=_125417_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1abcb5a71_check(_1abcb4d6c_retTypeChecker* _self_, jule::Ptr<_1ab072ed8_Expr>& _129329_e) {
	_1abcb5312_prepareTypes(&(*_self_));
	_1abcb5587_prepareExprs(&(*_self_), _129329_e);
	jule::I64 _129713_n = (*_self_)._field_exprs.len();;
	if (((_129713_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1abaa0350_AnyVar((*_self_)._field_f.get()._field_Decl.ptr())))) {
			_1abc58bac_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_129713_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1aba9e63a_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		_1abc58bac_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;;
	};
	if ((_129713_n > (*_self_)._field_types.len())) {
		_1abc58bac_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_129713_n < (*_self_)._field_types.len())) {
		_1abc58bac_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1abcb5763_checkExprs(&(*_self_));
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcb4d6c_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abcb7248_FindPackage(_1abcb6c2b_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bc05851d:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;;
				};
			}
			_iter_next_1bc05851d:;
			++it;
			goto _iter_begin_1bc05851d;
		}
		_iter_end_1bc05851d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abc4cd9e_ImportInfo> _1abcb7556_SelectPackage(_1abcb6c2b_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bc0596b7:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;;
				};
			}
			_iter_next_1bc0596b7:;
			++it;
			goto _iter_begin_1bc0596b7;
		}
		_iter_end_1bc0596b7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abc73ee6_Var> _1abcb790d_FindVar(_1abcb6c2b_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _1abcb94c0_findVar(&(*_self_), _5226_ident,_5238_cppLinked,false);;
}



inline jule::Ptr<_1abce6ce4_TypeAlias> _1abcb7cb5_FindTypeAlias(_1abcb6c2b_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _1abcb9921_findTypeAlias(&(*_self_), _5832_ident,_5844_cppLinked,false);;
}



inline jule::Ptr<_1ab08a1a9_Struct> _1abcb816c_FindStruct(_1abcb6c2b_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bc05bd29:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a1a9_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;;
				};
			}
			_iter_next_1bc05bd29:;
			++it;
			goto _iter_begin_1bc05bd29;
		}
		_iter_end_1bc05bd29:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aba9e1c8_Fn> _1abcb8524_FindFn(_1abcb6c2b_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1bc05d259:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;;
				};
			}
			_iter_next_1bc05d259:;
			++it;
			goto _iter_begin_1bc05d259;
		}
		_iter_end_1bc05d259:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abab10ca_Trait> _1abcb8832_FindTrait(_1abcb6c2b_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1bc05e48b:;
		if (it != expr.end()) {
			jule::Ptr<_1abab10ca_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;;
				};
			}
			_iter_next_1bc05e48b:;
			++it;
			goto _iter_begin_1bc05e48b;
		}
		_iter_end_1bc05e48b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abab3220_Enum> _1abcb8b40_FindEnum(_1abcb6c2b_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1bc05e90e:;
		if (it != expr.end()) {
			jule::Ptr<_1abab3220_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1bc05e90e:;
			++it;
			goto _iter_begin_1bc05e90e;
		}
		_iter_end_1bc05e90e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abab481a_TypeEnum> _1abcb8e4d_FindTypeEnum(_1abcb6c2b_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1bc060833:;
		if (it != expr.end()) {
			jule::Ptr<_1abab481a_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;;
				};
			}
			_iter_next_1bc060833:;
			++it;
			goto _iter_begin_1bc060833;
		}
		_iter_end_1bc060833:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abc73ee6_Var> _1abcb94c0_findVar(_1abcb6c2b_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*_self_)._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_1abc73ee6_Var> _12325_v = (*_self_)._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;;
				};
			}
		_iter_next_1bc06325e:;
		}
		_iter_end_1bc06325e:;;
	} else {
		{
			auto &expr = (*_self_)._field_Vars;
			auto it = expr.begin();
			_iter_begin_1bc062813:;
			if (it != expr.end()) {
				jule::Ptr<_1abc73ee6_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;;
					};
				}
				_iter_next_1bc062813:;
				++it;
				goto _iter_begin_1bc062813;
			}
			_iter_end_1bc062813:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1abce6ce4_TypeAlias> _1abcb9921_findTypeAlias(_1abcb6c2b_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*_self_)._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_1abce6ce4_TypeAlias> _14225_ta = (*_self_)._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;;
				};
			}
		_iter_next_1bc06640a:;
		}
		_iter_end_1bc06640a:;;
	} else {
		{
			auto &expr = (*_self_)._field_TypeAliases;
			auto it = expr.begin();
			_iter_begin_1bc0659ae:;
			if (it != expr.end()) {
				jule::Ptr<_1abce6ce4_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;;
					};
				}
				_iter_next_1bc0659ae:;
				++it;
				goto _iter_begin_1bc0659ae;
			}
			_iter_end_1bc0659ae:;
		};
	};
	return nullptr;;
}



inline jule::Any _1abcb9cc8_defByIdent(_1abcb6c2b_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1bc068709:;
		if (it != expr.end()) {
			jule::Ptr<_1abc73ee6_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v, &__jule_any_type10);;
				};
			}
			_iter_next_1bc068709:;
			++it;
			goto _iter_begin_1bc068709;
		}
		_iter_end_1bc068709:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1bc0691aa:;
		if (it != expr.end()) {
			jule::Ptr<_1abce6ce4_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta, &__jule_any_type69);;
				};
			}
			_iter_next_1bc0691aa:;
			++it;
			goto _iter_begin_1bc0691aa;
		}
		_iter_end_1bc0691aa:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bc06994c:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a1a9_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s, &__jule_any_type68);;
				};
			}
			_iter_next_1bc06994c:;
			++it;
			goto _iter_begin_1bc06994c;
		}
		_iter_end_1bc06994c:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1bc06ac28:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f, &__jule_any_type67);;
				};
			}
			_iter_next_1bc06ac28:;
			++it;
			goto _iter_begin_1bc06ac28;
		}
		_iter_end_1bc06ac28:;
	};
	if (_15941_cppLinked) {
		return nullptr;;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1bc06be05:;
		if (it != expr.end()) {
			jule::Ptr<_1abab10ca_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t, &__jule_any_type12);;
				};
			}
			_iter_next_1bc06be05:;
			++it;
			goto _iter_begin_1bc06be05;
		}
		_iter_end_1bc06be05:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1bc06cbe7:;
		if (it != expr.end()) {
			jule::Ptr<_1abab3220_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e, &__jule_any_type70);;
				};
			}
			_iter_next_1bc06cbe7:;
			++it;
			goto _iter_begin_1bc06cbe7;
		}
		_iter_end_1bc06cbe7:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1bc06d962:;
		if (it != expr.end()) {
			jule::Ptr<_1abab481a_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te, &__jule_any_type71);;
				};
			}
			_iter_next_1bc06d962:;
			++it;
			goto _iter_begin_1bc06d962;
		}
		_iter_end_1bc06d962:;
	};
	return nullptr;;
}



inline jule::Bool _1abcba229_isDuplicatedIdent(_1abcb6c2b_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1bc06e721:;
		if (it != expr.end()) {
			jule::Ptr<_1abc73ee6_Var> &_21316_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21316_v) != _21232_itself) && (_21316_v.get()._field_Ident == _21249_ident)) && (_21316_v.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1bc06e721:;
			++it;
			goto _iter_begin_1bc06e721;
		}
		_iter_end_1bc06e721:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1bc070ac9:;
		if (it != expr.end()) {
			jule::Ptr<_1abce6ce4_TypeAlias> &_21916_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21916_ta) != _21232_itself) && (_21916_ta.get()._field_Ident == _21249_ident)) && (_21916_ta.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1bc070ac9:;
			++it;
			goto _iter_begin_1bc070ac9;
		}
		_iter_end_1bc070ac9:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bc070722:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a1a9_Struct> &_22516_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22516_s) != _21232_itself) && (_22516_s.get()._field_Ident == _21249_ident)) && (_22516_s.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1bc070722:;
			++it;
			goto _iter_begin_1bc070722;
		}
		_iter_end_1bc070722:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1bc072d1d:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> &_23116_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23116_f) != _21232_itself) && (_23116_f.get()._field_Ident == _21249_ident)) && (_23116_f.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1bc072d1d:;
			++it;
			goto _iter_begin_1bc072d1d;
		}
		_iter_end_1bc072d1d:;
	};
	if (_21261_cppLinked) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1bc074380:;
		if (it != expr.end()) {
			jule::Ptr<_1abab10ca_Trait> &_24116_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24116_t) != _21232_itself) && (_24116_t.get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1bc074380:;
			++it;
			goto _iter_begin_1bc074380;
		}
		_iter_end_1bc074380:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1bc074803:;
		if (it != expr.end()) {
			jule::Ptr<_1abab3220_Enum> &_24716_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24716_e) != _21232_itself) && (_24716_e.get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1bc074803:;
			++it;
			goto _iter_begin_1bc074803;
		}
		_iter_end_1bc074803:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1bc075b89:;
		if (it != expr.end()) {
			jule::Ptr<_1abab481a_TypeEnum> &_25316_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25316_te) != _21232_itself) && (_25316_te.get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1bc075b89:;
			++it;
			goto _iter_begin_1bc075b89;
		}
		_iter_end_1bc075b89:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcb6c2b_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abcbbe40_IsNil(_1abcbba55_Data* _self_) {
	return _1abce891c_IsNil((*_self_)._field_Kind.ptr());;
}



inline jule::Bool _1abcbc1a4_IsVoid(_1abcbba55_Data* _self_) {
	return _1abce8b81_Void((*_self_)._field_Kind.ptr());;
}



inline jule::Bool _1abcbc418_IsConst(_1abcbba55_Data* _self_) {
	return ((*_self_)._field_Constant != nullptr);;
}



inline jule::Bool _1abcbc726_GoodOperand(_1abcbba55_Data* _self_, jule::Ptr<_1abcbba55_Data>& _10031_other) {
	if ((_1abcea820_TypeEnum(_10031_other.get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1abce9d6e_Prim(_10031_other.get()._field_Kind.ptr()) == nullptr) || (!(_1abd00bcc_IsAny(_1abce9d6e_Prim(_10031_other.get()._field_Kind.ptr()).ptr())))) && (_1abceb535_Trait(_10031_other.get()._field_Kind.ptr()) == nullptr)) && (!(_1abce891c_IsNil((*_self_)._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcbba55_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcbcacd_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1abcbdace_pushErr(_1abcbd5c3_Eval* _self_, jule::Ptr<_1a97237bc_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_1abc58bac_pushErr((*_self_)._field_s.ptr(), _13126_token,_13141_fmt,_13154_args);
}



inline void _1abcbdded_pushSugggestion(_1abcbd5c3_Eval* _self_, jule::Str _13634_fmt, jule::Slice<jule::Any> _13647_args) {
	_1abc58ecb_pushSugggestion((*_self_)._field_s.ptr(), _13634_fmt,_13647_args);
}



inline void _1abcbe0c9_allowBuiltin(_1abcbd5c3_Eval* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1abcbe2a5_disallowBuiltin(_1abcbd5c3_Eval* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Bool _1abcbe519_isUnsafe(_1abcbd5c3_Eval* _self_) {
	return (*_self_)._field_unsafety;;
}



inline jule::Bool _1abcbe77d_isGlobal(_1abcbd5c3_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1abc55eea_Sema>>()) {
			_case_begin_1bc0a578a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bc0a5cb8:;
			{
				return false;;
			}
		}
		_match_end_1bc0a5c63:;
	};
}



inline jule::Bool _1abcbea58_applyNumericPrefix(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data>& _16342_d) {
	if (((((_16342_d == nullptr) || (!(_1abcbc418_IsConst(_16342_d.ptr())))) || (_1abce9d6e_Prim(_16342_d.get()._field_Kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1abcec734_Prim> _17013_prim = _1abce9d6e_Prim((*_self_)._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1aba867ed_IsFloat(_1abceca97_Str(_17013_prim.ptr()))) {
			_case_begin_1bc0a868e:;
			{
				_16342_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>((*((*_self_)._field_prefix)));
				_1aba88811_SetF64(_16342_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1aba88206_AsF64(_16342_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1aba86457_IsSigInt(_1abceca97_Str(_17013_prim.ptr()))) {
			_case_begin_1bc0a8705:;
			{
				if ((!(_1abca4466_sigAssignable(_1abceca97_Str(_17013_prim.ptr()),_16342_d)))) {
					return false;;
				};
				_16342_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>((*((*_self_)._field_prefix)));
				_1aba88338_SetI64(_16342_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1aba87e92_AsI64(_16342_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1aba86589_IsUnsigInt(_1abceca97_Str(_17013_prim.ptr()))) {
			_case_begin_1bc0a876b:;
			{
				if ((!(_1abca4598_unsigAssignable(_1abceca97_Str(_17013_prim.ptr()),_16342_d)))) {
					return false;;
				};
				_16342_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>((*((*_self_)._field_prefix)));
				_1aba8846a_SetU64(_16342_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1aba880c4_AsU64(_16342_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1bc0a8491:;
	};
	return true;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcbecbc_litNil(_1abcbd5c3_Eval* _self_) {
	jule::Ptr<_1aba86b94_Const> _19917_constant = static__1aba8748b_NewNil();;
	return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=jule::Any(_19917_constant, &__jule_any_type49), ._field_Constant=_19917_constant});;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc00ca_litStr(_1abcbd5c3_Eval* _self_, jule::Ptr<_1ab07401c_LitExpr>& _20822_l) {
	jule::Str _20917_s = _20822_l.get()._field_Value.slice(1LL,(_20822_l.get()._field_Value.len() - 1LL));;
	if (_1a9724b20_IsRawStr(_20822_l.get()._field_Value)) {
		_20917_s=_1abca46ec_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20917_s));
	} else {
		_20917_s=_1abca49e9_ToStr(static_cast<jule::Slice<jule::U8>>(_20917_s));
	};
	jule::Ptr<_1aba86b94_Const> _21517_constant = static__1aba87227_NewStr(_20917_s);;
	return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_21517_constant, &__jule_any_type49), ._field_Constant=_21517_constant});;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc03d8_litBool(_1abcbd5c3_Eval* _self_, jule::Ptr<_1ab07401c_LitExpr>& _22723_l) {
	jule::Ptr<_1aba86b94_Const> _22817_constant = static__1aba870e5_NewBool((_22723_l.get()._field_Value == jule::Str("true", 4)));;
	return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_22817_constant, &__jule_any_type49), ._field_Constant=_22817_constant});;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc06e6_litRune(_1abcbd5c3_Eval* _self_, jule::Ptr<_1ab07401c_LitExpr>& _23923_l) {
	;
	;
	jule::Str _24413_lt = _23923_l.get()._field_Value.slice(1LL,(_23923_l.get()._field_Value.len() - 1LL));;
	jule::I32 _24513_r = _1abc8c6b3_ToRune(static_cast<jule::Slice<jule::U8>>(_24413_lt));;
	jule::Ptr<_1abcbba55_Data> _24617_data = jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Constant=static__1aba86d81_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24513_r)))});;
	jule::Bool _25013_isAscii = _1abc8c53c_IsAscii(_24513_r);;
	if (_25013_isAscii) {
		_24617_data.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_24617_data.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_24617_data.get()._field_Mutable=true;
	_24617_data.get()._field_Model=jule::Any(jule::new_ptr<_1aba9ab64_RuneExprModel>(_1aba9ab64_RuneExprModel{._field_Code=_24513_r}), &__jule_any_type91);
	_24617_data.get()._field_IsRune=true;
	_24617_data.get()._field_untyped=true;
	return _24617_data;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc0a04_litFloat(_1abcbd5c3_Eval* _self_, jule::Ptr<_1ab07401c_LitExpr>& _26824_l) {
	;
	jule::F64 _27013_f = ({
		auto except = _1aba7beec_ParseFloat(_26824_l.get()._field_Value,64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1aba86b94_Const> _27117_constant = static__1aba87359_NewF64(_27013_f);;
	return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_untyped=true, ._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_27117_constant, &__jule_any_type49), ._field_Constant=_27117_constant});;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc0d12_litInt(_1abcbd5c3_Eval* _self_, jule::Ptr<_1ab07401c_LitExpr>& _28326_l) {
	;
	jule::Str _28617_lit = _28326_l.get()._field_Value;;
	jule::I64 _28717_base = 0LL;;
	{
		
		if (_1a78d463e_HasPrefix(_28617_lit,jule::Str("0x", 2))) {
			_case_begin_1bc0b977c:;
			{
				(_28617_lit).mut_slice(2LL);;
				_28717_base=16LLU;
			}
		}
		else if (_1a78d463e_HasPrefix(_28617_lit,jule::Str("0b", 2))) {
			_case_begin_1bc0b97e3:;
			{
				(_28617_lit).mut_slice(2LL);;
				_28717_base=2LLU;
			}
		}
		else if (_1a78d463e_HasPrefix(_28617_lit,jule::Str("0o", 2))) {
			_case_begin_1bc0b9491:;
			{
				(_28617_lit).mut_slice(2LL);;
				_28717_base=8LLU;
			}
		}
		else if (((_28617_lit[0LL] == '0') && (_28617_lit.len() > 1LL))) {
			_case_begin_1bc0b9507:;
			{
				(_28617_lit).mut_slice(1LL);;
				_28717_base=8LLU;
			}
		}
		else {
			_case_begin_1bc0b942a:;
			{
				_28717_base=10LLU;
			}
		}
		_match_end_1bc0b93b4:;
	};
	jule::Ptr<_1abcbba55_Data> _30717_d = jule::new_ptr<_1abcbba55_Data>();;
	jule::Bool _30917_ok = true;;
	jule::I64 _31013_sig = ({
		auto except = _1ab598ac4_ParseInt(_28617_lit,_28717_base,64LL);
		(except.ok()) ? (except.result) : ({
			_30917_ok=false;

			0LL;
		});
	});;
	if (_30917_ok) {
		_30717_d.get()._field_Constant=static__1aba86d81_NewI64(_31013_sig);
		_30717_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _32017_unsig = ({
			auto except = _1ab887b1b_ParseUint(_28617_lit,_28717_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1abcbdace_pushErr(&(*_self_), _28326_l.get()._field_Token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1abcbdded_pushSugggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_30717_d.get()._field_Constant=static__1aba86eb3_NewU64(_32017_unsig);
		_30717_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_30717_d.get()._field_Model=jule::Any(_30717_d.get()._field_Constant, &__jule_any_type49);
	if ((!(_1abcbea58_applyNumericPrefix(&(*_self_), _30717_d)))) {
		_1abce2729_fitBitsize(_30717_d);
	};
	_30717_d.get()._field_Mutable=true;
	_30717_d.get()._field_untyped=true;
	return _30717_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc1120_litNum(_1abcbd5c3_Eval* _self_, jule::Ptr<_1ab07401c_LitExpr>& _34326_l) {
	{
		
		if (_1a972577a_IsFloat(_34326_l.get()._field_Value)) {
			_case_begin_1bc0c29a5:;
			{
				return _1abcc0a04_litFloat(&(*_self_), _34326_l);;
			}
		}
		else {
			_case_begin_1bc0c22ac:;
			{
				return _1abcc0d12_litInt(&(*_self_), _34326_l);;
			}
		}
		_match_end_1bc0c21e1:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcc142d_evalLit(_1abcbd5c3_Eval* _self_, jule::Ptr<_1ab07401c_LitExpr> _35226_lit) {
	{
		
		if (_1ab07436e_IsNil(_35226_lit.ptr())) {
			_case_begin_1bc0c3ae9:;
			{
				return _1abcbecbc_litNil(&(*_self_));;
			}
		}
		else if (_1a9724878_IsStr(_35226_lit.get()._field_Value)) {
			_case_begin_1bc0c3500:;
			{
				return _1abcc00ca_litStr(&(*_self_), _35226_lit);;
			}
		}
		else if (_1a97254d3_IsBool(_35226_lit.get()._field_Value)) {
			_case_begin_1bc0c3577:;
			{
				return _1abcc03d8_litBool(&(*_self_), _35226_lit);;
			}
		}
		else if (_1a9724db7_IsRune(_35226_lit.get()._field_Value)) {
			_case_begin_1bc0c35ee:;
			{
				return _1abcc06e6_litRune(&(*_self_), _35226_lit);;
			}
		}
		else if (_1a9725a22_IsNum(_35226_lit.get()._field_Value)) {
			_case_begin_1bc0c3830:;
			{
				return _1abcc1120_litNum(&(*_self_), _35226_lit);;
			}
		}
		else {
			_case_begin_1bc0c3038:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc0c2e6c:;
	};
}



inline jule::Any _1abcc173b_findBuiltins(_1abcbd5c3_Eval* _self_, jule::Str _36931_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1abc4cd9e_ImportInfo>>()) {
			_case_begin_1bc0c5b1d:;
			{
				jule::Any _37221_def = _1abce251a_findBuiltinsImport(_36931_ident,(*_self_)._field_lookup.operator jule::Ptr<_1abc4cd9e_ImportInfo>());;
				if ((_37221_def != nullptr)) {
					return _37221_def;;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abc55eea_Sema>>()) {
			_case_begin_1bc0c606e:;
			{
				jule::Any _37721_def = _1abce31a8_findBuiltinsSema(_36931_ident,(*_self_)._field_lookup.operator jule::Ptr<_1abc55eea_Sema>());;
				if ((_37721_def != nullptr)) {
					return _37721_def;;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abac584d_scopeChecker>>()) {
			_case_begin_1bc0c60d5:;
			{
				jule::Any _38221_def = _1abce31a8_findBuiltinsSema(_36931_ident,(*_self_)._field_lookup.operator jule::Ptr<_1abac584d_scopeChecker>().get()._field_s);;
				if ((_38221_def != nullptr)) {
					return _38221_def;;
				};
			}
		}
		_match_end_1bc0c5ab8:;
	};
	if ((*_self_)._field_disBuiltin) {
		return nullptr;;
	};
	return _1abd2752d_findBuiltinDef(_36931_ident);;
}



inline jule::Any _1abcc1ae3_getDef(_1abcbd5c3_Eval* _self_, jule::Str _39325_ident, jule::Bool _39337_cppLinked) {
	jule::Ptr<_1abc73ee6_Var> _39817_v = _1abd13959_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1abd122c6_FindVar((*_self_)._field_lookup, _39325_ident,_39337_cppLinked);;
	if ((_39817_v != nullptr)) {
		return jule::Any(_39817_v, &__jule_any_type10);;
	};
	jule::Ptr<_1abce6ce4_TypeAlias> _40317_ta = _1abd13959_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1abd1267d_FindTypeAlias((*_self_)._field_lookup, _39325_ident,_39337_cppLinked);;
	if ((_40317_ta != nullptr)) {
		return jule::Any(_40317_ta, &__jule_any_type69);;
	};
	if ((!(_39337_cppLinked))) {
		jule::Ptr<_1abab3220_Enum> _40921_enm = _1abd13959_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1abd13508_FindEnum((*_self_)._field_lookup, _39325_ident);;
		if ((_40921_enm != nullptr)) {
			return jule::Any(_40921_enm, &__jule_any_type70);;
		};
		jule::Ptr<_1abab481a_TypeEnum> _41421_tenm = _1abd13959_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1abd13816_FindTypeEnum((*_self_)._field_lookup, _39325_ident);;
		if ((_41421_tenm != nullptr)) {
			return jule::Any(_41421_tenm, &__jule_any_type71);;
		};
	};
	jule::Ptr<_1aba9e1c8_Fn> _42017_f = _1abd13959_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1abd12ddc_FindFn((*_self_)._field_lookup, _39325_ident,_39337_cppLinked);;
	if ((_42017_f != nullptr)) {
		return jule::Any(_42017_f, &__jule_any_type67);;
	};
	jule::Ptr<_1ab08a1a9_Struct> _42517_s = _1abd13959_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1abd12a35_FindStruct((*_self_)._field_lookup, _39325_ident,_39337_cppLinked);;
	if ((_42517_s != nullptr)) {
		return jule::Any(_42517_s, &__jule_any_type68);;
	};
	return _1abcc173b_findBuiltins(&(*_self_), _39325_ident);;
}



inline void _1bc0dc6e5_pushReference(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abaa1d79_FnIns>& _43340_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1abac584d_scopeChecker>>()) {
			_case_begin_1bc0e2035:;
			{
				jule::Ptr<_1abac584d_scopeChecker> _43621_sc = _1abac8c08_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1abac584d_scopeChecker>());;
				if ((!(_1bc0dee34_Exist(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), _43340_ref)))) {
					_1abaa5993_Push(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1bc0ddb14:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1bc0dee34_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43340_ref))))) {
					_1abaa5993_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type9));
				};
			}
		}
		_match_end_1bc0ddaae:;
	};
}

inline void _1bc1019a1_pushReference(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abc73ee6_Var>& _43340_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1abac584d_scopeChecker>>()) {
			_case_begin_1bc1060b0:;
			{
				jule::Ptr<_1abac584d_scopeChecker> _43621_sc = _1abac8c08_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1abac584d_scopeChecker>());;
				if ((!(_1bc104157_Exist(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), _43340_ref)))) {
					_1abaa5993_Push(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type10));
				};
			}
		}
		else {
			_case_begin_1bc102d37:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1bc104157_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43340_ref))))) {
					_1abaa5993_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type10));
				};
			}
		}
		_match_end_1bc102cd2:;
	};
}

inline void _1bc1d2b70_pushReference(_1abcbd5c3_Eval* _self_, jule::Ptr<_1ab08a583_StructIns>& _43340_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1abac584d_scopeChecker>>()) {
			_case_begin_1bc1d3d4c:;
			{
				jule::Ptr<_1abac584d_scopeChecker> _43621_sc = _1abac8c08_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1abac584d_scopeChecker>());;
				if ((!(_1bc1d5403_Exist(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), _43340_ref)))) {
					_1abaa5993_Push(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type11));
				};
			}
		}
		else {
			_case_begin_1bc1d40d3:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1bc1d5403_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43340_ref))))) {
					_1abaa5993_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type11));
				};
			}
		}
		_match_end_1bc1d407d:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcc2176__evalEnum(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abab3220_Enum> _44728_enm) {
	return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_44728_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc252d_evalEnum(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abab3220_Enum> _45631_enm, jule::Ptr<_1a97237bc_Token> _45643_errorToken) {
	if ((!(_1abc59383_isAccessibleDefine((*_self_)._field_s.ptr(), _45631_enm.get()._field_Public,_45631_enm.get()._field_Token)))) {
		_1abcbdace_pushErr(&(*_self_), _45643_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_45631_enm.get()._field_Ident, &__jule_any_type7)}));
		_1abcbdded_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1abcc2176__evalEnum(&(*_self_), _45631_enm);;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc283b__evalTypeEnum(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abab481a_TypeEnum> _46532_enm) {
	return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_46532_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc2be3_evalTypeEnum(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abab481a_TypeEnum> _47435_enm, jule::Ptr<_1a97237bc_Token> _47451_errorToken) {
	if ((!(_1abc59383_isAccessibleDefine((*_self_)._field_s.ptr(), _47435_enm.get()._field_Public,_47435_enm.get()._field_Token)))) {
		_1abcbdace_pushErr(&(*_self_), _47451_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_47435_enm.get()._field_Ident, &__jule_any_type7)}));
		_1abcbdded_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1abcc283b__evalTypeEnum(&(*_self_), _47435_enm);;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc3001__evalStruct(_1abcbd5c3_Eval* _self_, jule::Ptr<_1ab08a583_StructIns> _48330_s) {
	jule::Ptr<_1abcbba55_Data> _48417_d = jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_48330_s, 0)}), ._field_Model=jule::Any(_48330_s, &__jule_any_type11), ._field_Decl=true, });;
	if (((_48330_s.get()._field_Decl != nullptr) && _48330_s.get()._field_Decl.get()._field_CppLinked)) {
		_48417_d.get()._field_Kind.get()._field_CppIdent=_48330_s.get()._field_Decl.get()._field_Ident;
	};
	return _48417_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc33a8_evalStruct(_1abcbd5c3_Eval* _self_, jule::Ptr<_1ab08a583_StructIns> _49733_s, jule::Ptr<_1a97237bc_Token> _49748_errorToken) {
	if ((!(_1abc59383_isAccessibleDefine((*_self_)._field_s.ptr(), _49733_s.get()._field_Decl.get()._field_Public,_49733_s.get()._field_Decl.get()._field_Token)))) {
		_1abcbdace_pushErr(&(*_self_), _49748_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_49733_s.get()._field_Decl.get()._field_Ident, &__jule_any_type7)}));
		_1abcbdded_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1abcc39d5_checkDeprecated(&(*_self_), _49733_s.get()._field_Decl.get()._field_Directives,_49748_errorToken);
	return _1abcc3001__evalStruct(&(*_self_), _49733_s);;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc36b6_evalFnIns(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abaa1d79_FnIns> _50728_f) {
	return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_50728_f, 1)}), ._field_Model=jule::Any(_50728_f, &__jule_any_type9), });;
}



inline void _1abcc39d5_checkDeprecated(_1abcbd5c3_Eval* _self_, jule::Slice<jule::Ptr<_1ab03a720_Directive>>& _51639_directives, jule::Ptr<_1a97237bc_Token> _51670_tok) {
	if (_1abcbe519_isUnsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_1ab03a720_Directive> _52113_d = _1abce2185_findDirective(_51639_directives,jule::Str("deprecated", 10));;
	if ((_52113_d != nullptr)) {
		if ((_52113_d.get()._field_Args.len() == 0LL)) {
			_1abcbdace_pushErr(&(*_self_), _51670_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type7)}));
		} else {
			_1abcbdace_pushErr(&(*_self_), _51670_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_52113_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type7)}));
		};
		_1abcbdded_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcc3d8c_evalFn(_1abcbd5c3_Eval* _self_, jule::Ptr<_1aba9e1c8_Fn> _53229_f, jule::Ptr<_1a97237bc_Token> _53237_errorToken) {
	if ((!(_1abc59383_isAccessibleDefine((*_self_)._field_s.ptr(), _53229_f.get()._field_Public,_53229_f.get()._field_Token)))) {
		_1abcbdace_pushErr(&(*_self_), _53237_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_53229_f.get()._field_Ident, &__jule_any_type7)}));
		_1abcbdded_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1abcc39d5_checkDeprecated(&(*_self_), _53229_f.get()._field_Directives,_53237_errorToken);
	jule::Ptr<_1abaa1d79_FnIns> _54117_ins = _1abaa0828_instance(_53229_f);;
	_1bc0dc6e5_pushReference(&(*_self_), _54117_ins);
	return _1abcc36b6_evalFnIns(&(*_self_), _54117_ins);;
}



inline void _1abcc4255_pushIllegalCycleError(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abc73ee6_Var>& _54641_v1, jule::Ptr<_1abc73ee6_Var>& _54652_v2, jule::Str& _54667_message) {
	;
	jule::Str _54813_refers_to = _1a7995bb7_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_54641_v1.get()._field_Ident, &__jule_any_type7),jule::Any(_54652_v2.get()._field_Ident, &__jule_any_type7)}));;
	(_54667_message).buffer.insert(0, (((_1a78d5002_Repeat(jule::Str(" ", 1),4LL) + _54813_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1abcc460c_checkCrossCycle(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abc73ee6_Var>& _55235_v, jule::Str& _55249_message) {
	{
		auto &expr = _55235_v.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_1bc0e5126:;
		if (it != expr.end()) {
			jule::Ptr<_1abc73ee6_Var> &_55316_d = *it;
			{
				if ((_55316_d == (*_self_)._field_owner)) {
					_1abcc4255_pushIllegalCycleError(&(*_self_), _55235_v,_55316_d,_55249_message);
					return false;;
				};
				if ((!(_1abcc460c_checkCrossCycle(&(*_self_), _55316_d,_55249_message)))) {
					_1abcc4255_pushIllegalCycleError(&(*_self_), _55235_v,_55316_d,_55249_message);
					return false;;
				};
			}
			_iter_next_1bc0e5126:;
			++it;
			goto _iter_begin_1bc0e5126;
		}
		_iter_end_1bc0e5126:;
	};
	return true;;
}



inline jule::Bool _1abcc49b4_checkIllegalCycles(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abc73ee6_Var>& _57142_v, jule::Ptr<_1a97237bc_Token> _57151_decl_token) {
	jule::Bool __jule_func_result = false;
	if (((*_self_)._field_owner == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*_self_)._field_owner == _57142_v)) {
		_1abcbdace_pushErr(&(*_self_), (*_self_)._field_owner.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_Ident, &__jule_any_type7)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _58317_message = jule::Str();;
	if ((!(_1abcc460c_checkCrossCycle(&(*_self_), _57142_v,_58317_message)))) {
		jule::Str _58621_errMsg = _58317_message;;
		_58317_message=jule::Str();
		_1abcc4255_pushIllegalCycleError(&(*_self_), (*_self_)._field_owner,_57142_v,_58317_message);
		_58621_errMsg+=_58317_message;
		_1abcbdace_pushErr(&(*_self_), _57151_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_58621_errMsg, &__jule_any_type7)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*_self_)._field_owner.get()._field_Depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_Depends,1);(*_self_)._field_owner.get()._field_Depends.__push(_57142_v);;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc4d6b_evalVar(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abc73ee6_Var> _59830_v, jule::Ptr<_1a97237bc_Token> _59839_errorToken) {
	if ((!(_1abc59383_isAccessibleDefine((*_self_)._field_s.ptr(), _59830_v.get()._field_Public,_59830_v.get()._field_Token)))) {
		_1abcbdace_pushErr(&(*_self_), _59839_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_59830_v.get()._field_Ident, &__jule_any_type7)}));
		_1abcbdded_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1abcc39d5_checkDeprecated(&(*_self_), _59830_v.get()._field_Directives,_59839_errorToken);
	_59830_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1abc55eea_Sema>>()) {
			_case_begin_1bc0ec68e:;
			{
				jule::Bool _61217_ok = _1abcc49b4_checkIllegalCycles(&(*_self_), _59830_v,_59839_errorToken);;
				if ((!(_61217_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abac584d_scopeChecker>>()) {
			_case_begin_1bc0ec738:;
			{
				if (((!(_59830_v.get()._field_Reference)) || _1abcbe519_isUnsafe(&(*_self_)))) {
					goto _match_end_1bc0ec639;
				};
				jule::Ptr<_1abac584d_scopeChecker> _62021_s = (*_self_)._field_lookup.operator jule::Ptr<_1abac584d_scopeChecker>();;
				while (((_62021_s.get()._field_owner == nullptr) && (_62021_s.get()._field_parent != nullptr))) {
					{
						_62021_s=_62021_s.get()._field_parent;
					}
				_iter_next_1bc0ee8a0:;
				}
				_iter_end_1bc0ee8a0:;;
				if ((((_62021_s.get()._field_owner != nullptr) && _62021_s.get()._field_owner.get()._field_Anon) && (_59830_v.get()._field_Scope != _62021_s.get()._field_owner.get()._field_Scope))) {
					_1abcbdace_pushErr(&(*_self_), _59839_errorToken,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_59830_v.get()._field_Ident, &__jule_any_type7)}));
				};
			}
		}
		_match_end_1bc0ec639:;
	};
	if ((_59830_v.get()._field_Scope == nullptr)) {
		_1bc1019a1_pushReference(&(*_self_), _59830_v);
	};
	if (((!(_59830_v.get()._field_CppLinked)) && ((_59830_v.get()._field_Value == nullptr) || (_59830_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_59830_v.get()._field_Constant) {
			_1abc6b98e_checkTypeVar((*_self_)._field_s, _59830_v,jule::Trait<_1abd13959_Lookup>((*_self_)._field_s, 3));
			if ((_59830_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;;
			};
		};
	};
	if (((_59830_v.get()._field_Kind == nullptr) || (_59830_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_59830_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1abc6b98e_checkTypeVar((*_self_)._field_s, _59830_v,(*_self_)._field_lookup);
		if (((_59830_v.get()._field_Kind == nullptr) || (_59830_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_1abcbba55_Data> _66317_d = jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=_59830_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_59830_v.get()._field_Mutable, ._field_Reference=_59830_v.get()._field_Reference, ._field_Lvalue=(!(_59830_v.get()._field_Constant)), ._field_Model=jule::Any(_59830_v, &__jule_any_type10), });;
	if ((((!(_59830_v.get()._field_CppLinked)) && _1abc743ae_IsInitialized(_59830_v.ptr())) && (_59830_v.get()._field_Value.get()._field_Data != nullptr))) {
		_66317_d.get()._field_IsRune=_59830_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_59830_v.get()._field_Constant && (_59830_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_66317_d.get()._field_Constant=jule::new_ptr<_1aba86b94_Const>((*(_59830_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_66317_d.get()._field_Model=jule::Any(_66317_d.get()._field_Constant, &__jule_any_type49);
		if (_1abc74887_untypedConstant(_59830_v.ptr())) {
			_1abcbea58_applyNumericPrefix(&(*_self_), _66317_d);
			_66317_d.get()._field_untyped=true;
		};
	};
	return _66317_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc5223_evalTypeAlias(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abce6ce4_TypeAlias> _68736_ta, jule::Ptr<_1a97237bc_Token> _68752_errorToken) {
	if ((!(_1abc59383_isAccessibleDefine((*_self_)._field_s.ptr(), _68736_ta.get()._field_Public,_68736_ta.get()._field_Token)))) {
		_1abcbdace_pushErr(&(*_self_), _68752_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_68736_ta.get()._field_Ident, &__jule_any_type7)}));
		_1abcbdded_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_68736_ta.get()._field_Used=true;
	jule::Trait<_1abce75a8_Kind> _69617_kind = _68736_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1abcbba55_Data> _69717_d = nullptr;;
	{
		auto &_match_expr{ _69617_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ab08a583_StructIns>>()) {
			_case_begin_1ad9aa676:;
			{
				_69717_d=_1abcc3001__evalStruct(&(*_self_), _69617_kind.operator jule::Ptr<_1ab08a583_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abab3220_Enum>>()) {
			_case_begin_1ad9aadb3:;
			{
				_69717_d=_1abcc2176__evalEnum(&(*_self_), _69617_kind.operator jule::Ptr<_1abab3220_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abab481a_TypeEnum>>()) {
			_case_begin_1ad9a992d:;
			{
				_69717_d=_1abcc283b__evalTypeEnum(&(*_self_), _69617_kind.operator jule::Ptr<_1abab481a_TypeEnum>());
			}
		}
		else {
			_case_begin_1ad9a980c:;
			{
				_69717_d=jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=_68736_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_68736_ta.get()._field_CppLinked) {
					_69717_d.get()._field_Kind.get()._field_CppIdent=_68736_ta.get()._field_Ident;
				} else {
					_69717_d.get()._field_Kind.get()._field_CppIdent=_68736_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_69717_d.get()._field_Model=jule::Any(_69717_d.get()._field_Kind, &__jule_any_type92);
			}
		}
		_match_end_1ad9a97a7:;
	};
	_69717_d.get()._field_Kind.get()._field_Generic=_68736_ta.get()._field_Generic;
	return _69717_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc55ca_evalDef(_1abcbd5c3_Eval* _self_, jule::Any _72330_def, jule::Ptr<_1a97237bc_Token> _72340_ident) {
	{
		auto &_match_expr{ _72330_def };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ad9ad8ee:;
			{
				return _1abcc4d6b_evalVar(&(*_self_), _72330_def.cast_ptr<_1abc73ee6_Var>(&__jule_any_type10),_72340_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ad9ad965:;
			{
				return _1abcc252d_evalEnum(&(*_self_), _72330_def.cast_ptr<_1abab3220_Enum>(&__jule_any_type70),_72340_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ad9ad9cb:;
			{
				return _1abcc2be3_evalTypeEnum(&(*_self_), _72330_def.cast_ptr<_1abab481a_TypeEnum>(&__jule_any_type71),_72340_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ad9ada53:;
			{
				return _1abcc33a8_evalStruct(&(*_self_), _1ab04a730_instance(_72330_def.cast_ptr<_1ab08a1a9_Struct>(&__jule_any_type68)),_72340_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ad9adab9:;
			{
				jule::Ptr<_1aba9e1c8_Fn> _73421_f = _72330_def.cast_ptr<_1aba9e1c8_Fn>(&__jule_any_type67);;
				if ((_73421_f.get()._field_Ident != jule::Str("init", 4))) {
					return _1abcc3d8c_evalFn(&(*_self_), _73421_f,_72340_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ad9adb41:;
			{
				return _1abcc36b6_evalFnIns(&(*_self_), _72330_def.cast_ptr<_1abaa1d79_FnIns>(&__jule_any_type9));;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ad9adbb8:;
			{
				return _1abcc5223_evalTypeAlias(&(*_self_), _72330_def.cast_ptr<_1abce6ce4_TypeAlias>(&__jule_any_type69),_72340_ident);;
			}
		}
		_match_end_1ad9ad811:;
	};
	_1abcbdace_pushErr(&(*_self_), _72340_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_72340_ident.get()._field_Kind, &__jule_any_type7)}));
	return nullptr;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc58d8_evalIdent(_1abcbd5c3_Eval* _self_, jule::Ptr<_1ab074b99_IdentExpr> _74728_ident) {
	jule::Any _74817_def = _1abcc1ae3_getDef(&(*_self_), _74728_ident.get()._field_Ident,_74728_ident.get()._field_CppLinked);;
	return _1abcc55ca_evalDef(&(*_self_), _74817_def,_74728_ident.get()._field_Token);;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc5be6_evalUnary(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab0753a3_UnaryExpr> _75233_u) {
	_1abcd9468_unaryEval _75317_unary = static__1abcd991e_new(_self_);;
	return _1abcdabb7_eval(&_75317_unary, _75233_u);;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc6004_evalVariadic(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab07575a_VariadicExpr> _75736_v) {
	if ((_75736_v.get()._field_Expr == nullptr)) {
		_1abcbdace_pushErr(_self_.ptr(), _75736_v.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abce79d7_TypeKind> _76317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_76317_prefix;
	});;
	jule::Ptr<_1abcbba55_Data> _76717_d = _1abcd88c9_evalExprKind(_self_, _75736_v.get()._field_Expr.get()._field_Kind);;
	if ((_76717_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1abce9b0a_Variadicable(_76717_d.get()._field_Kind.ptr())))) {
		_1abcbdace_pushErr(_self_.ptr(), _75736_v.get()._field_Token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_76717_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
		return nullptr;;
	};
	jule::Ptr<_1abd01925_Slc> _77713_slc = _1abceace8_Slc(_76717_d.get()._field_Kind.ptr());;
	_76717_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_CppIdent=_77713_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_77713_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_77713_slc.get()._field_Elem.get()._field_Kind});
	return _76717_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc6312_evalUnsafe(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab074726_UnsafeExpr> _78734_u) {
	jule::Bool _78813_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1abcbba55_Data> _79017_d = _1abcd88c9_evalExprKind(_self_, _78734_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_78813_unsafety;
	return _79017_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc6620_evalArr(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab0795c7_SliceExpr> _79531_s) {
	jule::Ptr<_1abd03ac0_Arr> _79717_pt = _1abceaa84_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1abd03ac0_Arr> _79917_arr = jule::new_ptr<_1abd03ac0_Arr>(_1abd03ac0_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_79717_pt.get()._field_Elem});;
	jule::Bool _80517_filled = false;;
	if ((_79531_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _79531_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type84) {
				_case_begin_1ad9bccb5:;
				{
					if ((_79531_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_1ab07575a_VariadicExpr>(&__jule_any_type84).get()._field_Expr != nullptr)) {
						goto _match_end_1ad9bcc60;
					};
					if (_79717_pt.get()._field_Auto) {
						_1abcbdace_pushErr(_self_.ptr(), _79531_s.get()._field_Token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;;
					};
					_80517_filled=true;
					_79531_s.get()._field_Exprs=_79531_s.get()._field_Exprs.slice(0LL,1LL);
				}
			}
			_match_end_1ad9bcc60:;
		};
	};
	_79917_arr.get()._field_N=static_cast<jule::I64>(_79531_s.get()._field_Exprs.len());
	if ((!(_79717_pt.get()._field_Auto))) {
		if ((_79917_arr.get()._field_N > _79717_pt.get()._field_N)) {
			_1abcbdace_pushErr(_self_.ptr(), _79531_s.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_79917_arr.get()._field_N < _79717_pt.get()._field_N)) {
			_79917_arr.get()._field_N=_79717_pt.get()._field_N;
		};
	};
	jule::Ptr<_1aba95e06_ArrayExprModel> _83417_model = jule::new_ptr<_1aba95e06_ArrayExprModel>(_1aba95e06_ArrayExprModel{._field_Kind=_79917_arr, });;
	if (_80517_filled) {
		_83417_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_83417_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _79531_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1abce79d7_TypeKind> _84317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_79917_arr.get()._field_Elem;
	{
		auto &expr = _79531_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1ad9c2b66:;
		if (it != expr.end()) {
			jule::Ptr<_1ab072ed8_Expr> _84521_elem = *it;
			{
				jule::Ptr<_1abcbba55_Data> _84621_d = _1abcd88c9_evalExprKind(_self_, _84521_elem.get()._field_Kind);;
				if ((_84621_d == nullptr)) {
					goto _iter_next_1ad9c2b66;
				};
				_1abc60a93_checkAssignType(_self_.get()._field_s, false,_79917_arr.get()._field_Elem,_84621_d,_79531_s.get()._field_Token);
				_83417_model.get()._field_Elems = jule::alloc_for_append(_83417_model.get()._field_Elems,1);_83417_model.get()._field_Elems.__push(_84621_d.get()._field_Model);;
			}
			_iter_next_1ad9c2b66:;
			++it;
			goto _iter_begin_1ad9c2b66;
		}
		_iter_end_1ad9c2b66:;
	};
	_self_.get()._field_prefix=_84317_prefix;
	if (_80517_filled) {
		_83417_model.get()._field_Elems = jule::alloc_for_append(_83417_model.get()._field_Elems,1);_83417_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_79917_arr, 11)}), ._field_Mutable=true, ._field_Model=jule::Any(_83417_model, &__jule_any_type93), });;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc6a71_evalExpSlc(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab0795c7_SliceExpr> _87034_s, jule::Ptr<_1abce79d7_TypeKind> _87053_t, jule::Any _87071_first) {
	jule::Ptr<_1abd01925_Slc> _87117_slc = jule::new_ptr<_1abd01925_Slc>(_1abd01925_Slc{._field_Elem=_87053_t});;
	jule::Ptr<_1aba93112_SliceExprModel> _87517_model = jule::new_ptr<_1aba93112_SliceExprModel>(_1aba93112_SliceExprModel{._field_ElemKind=_87053_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _87034_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_87071_first != nullptr)) {
		_87517_model.get()._field_Elems = jule::alloc_for_append(_87517_model.get()._field_Elems,1);_87517_model.get()._field_Elems.__push(_87071_first);;
		_87034_s.get()._field_Exprs=_87034_s.get()._field_Exprs.slice(1LL);
	};
	jule::Ptr<_1abce79d7_TypeKind> _88417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_87117_slc.get()._field_Elem;
	{
		auto &expr = _87034_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1ad9c82dc:;
		if (it != expr.end()) {
			jule::Ptr<_1ab072ed8_Expr> _88621_elem = *it;
			{
				jule::Ptr<_1abcbba55_Data> _88721_d = _1abcd88c9_evalExprKind(_self_, _88621_elem.get()._field_Kind);;
				if ((_88721_d == nullptr)) {
					goto _iter_next_1ad9c82dc;
				};
				_1abc60a93_checkAssignType(_self_.get()._field_s, false,_87117_slc.get()._field_Elem,_88721_d,_87034_s.get()._field_Token);
				_87517_model.get()._field_Elems = jule::alloc_for_append(_87517_model.get()._field_Elems,1);_87517_model.get()._field_Elems.__push(_88721_d.get()._field_Model);;
			}
			_iter_next_1ad9c82dc:;
			++it;
			goto _iter_begin_1ad9c82dc;
		}
		_iter_end_1ad9c82dc:;
	};
	_self_.get()._field_prefix=_88417_prefix;
	return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_87117_slc, 8)}), ._field_Mutable=true, ._field_Model=jule::Any(_87517_model, &__jule_any_type85), });;
}



inline jule::Ptr<_1abcbba55_Data> _1abcc6d7e_evalSliceExpr(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab0795c7_SliceExpr> _90537_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1abceaa84_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1ad9cb28a:;
				{
					return _1abcc6620_evalArr(_self_, _90537_s);;
				}
			}
			else if ((_1abceace8_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1ad9cb312:;
				{
					jule::Ptr<_1abd01925_Slc> _91125_pt = _1abceace8_Slc(_self_.get()._field_prefix.ptr());;
					return _1abcc6a71_evalExpSlc(_self_, _90537_s,_91125_pt.get()._field_Elem,nullptr);;
				}
			}
			_match_end_1ad9cb17a:;
		};
	};
	jule::Ptr<_1abce79d7_TypeKind> _91617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_90537_s.get()._field_Exprs.len() == 0LL)) {
		_1abcbdace_pushErr(_self_.ptr(), _90537_s.get()._field_Token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abcbba55_Data> _92417_first_elem = _1abcd88c9_evalExprKind(_self_, _90537_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_92417_first_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abcbba55_Data> _92917_d = _1abcc6a71_evalExpSlc(_self_, _90537_s,_92417_first_elem.get()._field_Kind,_92417_first_elem.get()._field_Model);;
	_self_.get()._field_prefix=_91617_prefix;
	return _92917_d;;
}



inline void _1abcc71c0_checkIntegerIndexingByData(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data>& _93550_d, jule::Ptr<_1a97237bc_Token> _93560_token) {
	jule::Str _93613_err_key = _1abce462c_checkDataForIntegerIndexing(_93550_d);;
	{
		auto &_match_expr{ _93613_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1ad9d138e:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1ad9d1878:;
			{
				_1abcbdace_pushErr(&(*_self_), _93560_token,_93613_err_key,jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_93550_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
			}
		}
		else {
			_case_begin_1ad9d1713:;
			{
				_1abcbdace_pushErr(&(*_self_), _93560_token,_93613_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad9d1636:;
	};
}



inline void _1abcc7599_indexingPtr(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data>& _94735_d, jule::Ptr<_1abcbba55_Data>& _94750_index, jule::Ptr<_1ab079e46_IndexingExpr>& _94765_i) {
	_1abcc71c0_checkIntegerIndexingByData(&(*_self_), _94750_index,_94765_i.get()._field_Token);
	jule::Ptr<_1abd0452c_Ptr> _95017_ptr = _1abcea347_Ptr(_94735_d.get()._field_Kind.ptr());;
	{
		
		if (_1abd05000_IsUnsafe(_95017_ptr.ptr())) {
			_case_begin_1ad9d4095:;
			{
				_1abcbdace_pushErr(&(*_self_), _94765_i.get()._field_Token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1abcbe519_isUnsafe(&(*_self_))))) {
			_case_begin_1ad9d410b:;
			{
				_1abcbdace_pushErr(&(*_self_), _94765_i.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad9d3e74:;
	};
	_94735_d.get()._field_Kind=_95017_ptr.get()._field_Elem;
}



inline void _1abcc7962_indexingArr(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data>& _96235_d, jule::Ptr<_1abcbba55_Data>& _96250_index, jule::Ptr<_1ab079e46_IndexingExpr>& _96265_i) {
	jule::Ptr<_1abd03ac0_Arr> _96317_arr = _1abceaa84_Arr(_96235_d.get()._field_Kind.ptr());;
	_96235_d.get()._field_Kind=_96317_arr.get()._field_Elem;
	_1abcc71c0_checkIntegerIndexingByData(&(*_self_), _96250_index,_96265_i.get()._field_Token);
	if ((_1abcbc418_IsConst(_96250_index.ptr()) && (_1aba88206_AsF64(_96250_index.get()._field_Constant.ptr()) >= static_cast<jule::F64>(_96317_arr.get()._field_N)))) {
		_1abcbdace_pushErr(&(*_self_), _96265_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1abcc7d2a_indexingSlc(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data>& _97135_d, jule::Ptr<_1abcbba55_Data>& _97150_index, jule::Ptr<_1ab079e46_IndexingExpr>& _97165_i) {
	jule::Ptr<_1abd01925_Slc> _97217_slc = _1abceace8_Slc(_97135_d.get()._field_Kind.ptr());;
	_97135_d.get()._field_Kind=_97217_slc.get()._field_Elem;
	_1abcc71c0_checkIntegerIndexingByData(&(*_self_), _97150_index,_97165_i.get()._field_Token);
	if ((!(_1abcbc418_IsConst(_97150_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _97135_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ad9d99c4:;
			{
				jule::Ptr<_1aba93112_SliceExprModel> _98221_m = _97135_d.get()._field_Model.cast_ptr<_1aba93112_SliceExprModel>(&__jule_any_type85);;
				jule::F64 _98317_indx = _1aba88206_AsF64(_97150_index.get()._field_Constant.ptr());;
				if ((_98317_indx >= static_cast<jule::F64>(_98221_m.get()._field_Elems.len()))) {
					_1abcbdace_pushErr(&(*_self_), _97165_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_97135_d.get()._field_Model=_98221_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_98317_indx))];
					_97135_d.get()._field_Decl=true;
				};
			}
		}
		_match_end_1ad9d992a:;
	};
}



inline void _1abcc81e3_indexingMap(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data>& _99335_d, jule::Ptr<_1abcbba55_Data>& _99350_index, jule::Ptr<_1ab079e46_IndexingExpr>& _99369_i) {
	if ((_99350_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1abd02ecb_Map> _99717_m = _1abceb799_Map(_99335_d.get()._field_Kind.ptr());;
	_1abca7447_assignTypeChecker _99817_atc = _1abca7447_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_99717_m.get()._field_Key, ._field_d=_99350_index, ._field_errorToken=_99369_i.get()._field_Token};;
	_1abca85be_check(&_99817_atc);
	_99335_d.get()._field_Kind=_99717_m.get()._field_Val;
}



inline void _1abcc85ab_indexingStr(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data>& _100835_d, jule::Ptr<_1abcbba55_Data>& _100850_index, jule::Ptr<_1ab079e46_IndexingExpr>& _100865_i) {
	;
	_100835_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("u8", 2)), 6)});
	if ((_100850_index == nullptr)) {
		return;;
	};
	_1abcc71c0_checkIntegerIndexingByData(&(*_self_), _100850_index,_100865_i.get()._field_Token);
	if ((!(_1abcbc418_IsConst(_100850_index.ptr())))) {
		_100835_d.get()._field_Constant=nullptr;
		return;;
	};
	if (_1abcbc418_IsConst(_100835_d.ptr())) {
		jule::Ptr<_1a97237bc_Token> _102417_errorToken = _100865_i.get()._field_Token;;
		jule::I64 _102517_j = _1aba87e92_AsI64(_100850_index.get()._field_Constant.ptr());;
		jule::Str _102617_s = _1aba87c2d_ReadStr(_100835_d.get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_102517_j) >= _102617_s.len())) {
			_1abcbdace_pushErr(&(*_self_), _102417_errorToken,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1aba8846a_SetU64(_100835_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_102617_s[_102517_j])));
		};
	};
}



inline void _1abcc8974_toIndexing(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data>& _103534_d, jule::Ptr<_1abcbba55_Data>& _103549_index, jule::Ptr<_1ab079e46_IndexingExpr>& _103568_i) {
	{
		
		if ((_1abcea347_Ptr(_103534_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc189e46:;
			{
				_1abcc7599_indexingPtr(&(*_self_), _103534_d,_103549_index,_103568_i);
				return;;
			}
		}
		else if ((_1abceaa84_Arr(_103534_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc189ebd:;
			{
				_1abcc7962_indexingArr(&(*_self_), _103534_d,_103549_index,_103568_i);
				return;;
			}
		}
		else if ((_1abceace8_Slc(_103534_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc18a045:;
			{
				_1abcc7d2a_indexingSlc(&(*_self_), _103534_d,_103549_index,_103568_i);
				return;;
			}
		}
		else if ((_1abceb799_Map(_103534_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc18a0bc:;
			{
				_1abcc81e3_indexingMap(&(*_self_), _103534_d,_103549_index,_103568_i);
				return;;
			}
		}
		else if ((_1abce9d6e_Prim(_103534_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc18a144:;
			{
				jule::Ptr<_1abcec734_Prim> _105017_prim = _1abce9d6e_Prim(_103534_d.get()._field_Kind.ptr());;
				{
					
					if (_1abd00968_IsStr(_105017_prim.ptr())) {
						_case_begin_1bc18e19d:;
						{
							_1abcc85ab_indexingStr(&(*_self_), _103534_d,_103549_index,_103568_i);
							return;;
						}
					}
					_match_end_1bc18e104:;
				};
			}
		}
		_match_end_1bc189d03:;
	};
	_1abcbdace_pushErr(&(*_self_), _103568_i.get()._field_Token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_103534_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
}



inline jule::Bool _1abcc8de7_pushGenericsFromExprSubIdent(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab07643c_SubIdentExpr>& _106053_sexpr, jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>>& _106114_generics, jule::Ptr<_1ab072ed8_Expr>& _106142_expr) {
	jule::Ptr<_1ab06e6cc_SubIdentTypeDecl> _106217_t = jule::new_ptr<_1ab06e6cc_SubIdentTypeDecl>();;
	if ((!(_1abce53ec_pushSubIdentFromExpr(jule::Any(_106053_sexpr, &__jule_any_type94),_106217_t)))) {
		_1abcbdace_pushErr(_self_.ptr(), _106142_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;;
	};
	_106114_generics = jule::alloc_for_append(_106114_generics,1);_106114_generics.__push(jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Kind=jule::Any(_106217_t, &__jule_any_type95)}));;
	return true;;
}



inline jule::Bool _1abcc92b0_pushGenericsFromData(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>>& _107145_generics, jule::Ptr<_1ab072ed8_Expr>& _107173_expr) {
	{
		auto &_match_expr{ _107173_expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bc1930a3:;
			{
				jule::Ptr<_1ab0753a3_UnaryExpr> _107421_u = _107173_expr.get()._field_Kind.cast_ptr<_1ab0753a3_UnaryExpr>(&__jule_any_type96);;
				{
					auto &_match_expr{ _107421_u.get()._field_Op.get()._field_Kind };
					
					if (_match_expr == jule::Str("*", 1)) {
						_case_begin_1bc194acc:;
						{
							jule::Ptr<_1ab070843_PtrTypeDecl> _107725_kind = jule::new_ptr<_1ab070843_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>> _107825__generics = jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>>::alloc(0LL, 1LL);;
							_1abcc92b0_pushGenericsFromData(_self_, _107825__generics,_107421_u.get()._field_Expr);
							_107725_kind.get()._field_Elem=_107825__generics[0LL];
							_107145_generics = jule::alloc_for_append(_107145_generics,1);_107145_generics.__push(jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Token=_107173_expr.get()._field_Token, ._field_Kind=jule::Any(_107725_kind, &__jule_any_type80)}));;
						}
					}
					else if (_match_expr == jule::Str("&", 1)) {
						_case_begin_1bc194b43:;
						{
							jule::Ptr<_1ab06ed70_SptrTypeDecl> _108625_kind = jule::new_ptr<_1ab06ed70_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>> _108725__generics = jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>>::alloc(0LL, 1LL);;
							_1abcc92b0_pushGenericsFromData(_self_, _108725__generics,_107421_u.get()._field_Expr);
							_108625_kind.get()._field_Elem=_108725__generics[0LL];
							_107145_generics = jule::alloc_for_append(_107145_generics,1);_107145_generics.__push(jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Token=_107173_expr.get()._field_Token, ._field_Kind=jule::Any(_108625_kind, &__jule_any_type81)}));;
						}
					}
					else {
						_case_begin_1bc193eb6:;
						{
							_1abcbdace_pushErr(_self_.ptr(), _107421_u.get()._field_Op,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1bc193c41:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bc193119:;
			{
				_107145_generics = jule::alloc_for_append(_107145_generics,1);_107145_generics.__push(_107173_expr.get()._field_Kind.cast_ptr<_1ab06d9b7_TypeDecl>(&__jule_any_type97));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bc192e0a:;
			{
				jule::Ptr<_1ab07643c_SubIdentExpr> _110121_sexpr = _107173_expr.get()._field_Kind.cast_ptr<_1ab07643c_SubIdentExpr>(&__jule_any_type94);;
				return _1abcc8de7_pushGenericsFromExprSubIdent(_self_, _110121_sexpr,_107145_generics,_107173_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1bc192e71:;
			{
				jule::Ptr<_1ab074b99_IdentExpr> _110421_ident = _107173_expr.get()._field_Kind.cast_ptr<_1ab074b99_IdentExpr>(&__jule_any_type88);;
				_107145_generics = jule::alloc_for_append(_107145_generics,1);_107145_generics.__push(jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1ab06e07d_IdentTypeDecl>(_1ab06e07d_IdentTypeDecl{._field_Token=_110421_ident.get()._field_Token, ._field_Ident=_110421_ident.get()._field_Ident, ._field_CppLinked=_110421_ident.get()._field_CppLinked, }), &__jule_any_type21)}));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bc192547:;
			{
				{
					auto &expr = _107173_expr.get()._field_Kind.cast_ptr<_1ab073b65_TupleExpr>(&__jule_any_type89).get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_1bc199c36:;
					if (it != expr.end()) {
						jule::Ptr<_1ab072ed8_Expr> _111325_texpr = *it;
						{
							if ((!(_1abcc92b0_pushGenericsFromData(_self_, _107145_generics,_111325_texpr)))) {
								return false;;
							};
						}
						_iter_next_1bc199c36:;
						++it;
						goto _iter_begin_1bc199c36;
					}
					_iter_end_1bc199c36:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bc1925ad:;
			{
				jule::Ptr<_1ab075eb9_NsSelectionExpr> _111921_ns = _107173_expr.get()._field_Kind.cast_ptr<_1ab075eb9_NsSelectionExpr>(&__jule_any_type98);;
				jule::Ptr<_1ab06e07d_IdentTypeDecl> _112021_decl = jule::new_ptr<_1ab06e07d_IdentTypeDecl>(_1ab06e07d_IdentTypeDecl{._field_Token=_111921_ns.get()._field_Ident, ._field_Ident=_111921_ns.get()._field_Ident.get()._field_Kind, });;
				_107145_generics = jule::alloc_for_append(_107145_generics,1);_107145_generics.__push(jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Token=_112021_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1ab06ea84_NamespaceTypeDecl>(_1ab06ea84_NamespaceTypeDecl{._field_Idents=_111921_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Token=_112021_decl.get()._field_Token, ._field_Kind=jule::Any(_112021_decl, &__jule_any_type21)})}), &__jule_any_type99)}));;
			}
		}
		else {
			_case_begin_1bc1924d1:;
			{
				_1abcbdace_pushErr(_self_.ptr(), _107173_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1bc19247b:;
	};
	return true;;
}



inline void _1abcc9601_evalIdentDeclFromIndexing(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1abcbba55_Data>& _114150_d, jule::Ptr<_1ab079e46_IndexingExpr>& _114165_i) {
	jule::Ptr<_1ab08a583_StructIns> _114217_s = _1abceb2c1_Struct(_114150_d.get()._field_Kind.ptr());;
	if ((_114217_s == nullptr)) {
		_1abcbdace_pushErr(_self_.ptr(), _114165_i.get()._field_Expr.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_114150_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
		_114150_d=nullptr;
		return;;
	};
	jule::Ptr<_1ab06e07d_IdentTypeDecl> _114917_decl = nullptr;;
	{
		auto &_match_expr{ _114165_i.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1bc1a02d0:;
			{
				jule::Ptr<_1ab074b99_IdentExpr> _115221_expr = _114165_i.get()._field_Expr.get()._field_Kind.cast_ptr<_1ab074b99_IdentExpr>(&__jule_any_type88);;
				_114917_decl=jule::new_ptr<_1ab06e07d_IdentTypeDecl>(_1ab06e07d_IdentTypeDecl{._field_Token=_115221_expr.get()._field_Token, ._field_Ident=_115221_expr.get()._field_Ident, ._field_CppLinked=_115221_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bc1a139c:;
			{
				jule::Ptr<_1ab075eb9_NsSelectionExpr> _115921_expr = _114165_i.get()._field_Expr.get()._field_Kind.cast_ptr<_1ab075eb9_NsSelectionExpr>(&__jule_any_type98);;
				_114917_decl=jule::new_ptr<_1ab06e07d_IdentTypeDecl>(_1ab06e07d_IdentTypeDecl{._field_Token=_115921_expr.get()._field_Ident, ._field_Ident=_115921_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1bc1a06dc:;
			{
				_1abcbdace_pushErr(_self_.ptr(), _114165_i.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_114150_d=nullptr;
				return;;
			}
		}
		_match_end_1bc1a0687:;
	};
	if ((!(_1abcc92b0_pushGenericsFromData(_self_, _114917_decl.get()._field_Generics,_114165_i.get()._field_Index)))) {
		_114150_d=nullptr;
		return;;
	};
	_114217_s=({ auto _wrap_copy = _1abcd085a_typeChecker(_self_.ptr()); _1abd0a1d1_fromStruct(&_wrap_copy, _114917_decl,_114217_s.get()._field_Decl); });
	if ((_114217_s == nullptr)) {
		_114150_d=nullptr;
		return;;
	};
	_114150_d.get()._field_Kind.get()._field_Kind=jule::Trait<_1abce75a8_Kind>(_114217_s, 0);
}



inline jule::Bool _1abcc9a63_checkGenericFn(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1abaa1d79_FnIns>& _118439_f, jule::Ptr<_1a97237bc_Token>& _118455_et, jule::Any& _118472_model) {
	jule::Bool _118513_ok = _1abc62e5d_reloadFnInsTypes(_self_.get()._field_s, _118439_f);;
	_118439_f.get()._field_reloaded=true;
	if ((!(_118513_ok))) {
		return false;;
	};
	jule::Ptr<_1abaa1d79_FnIns> _119017_existInstance = _1abaa0b03_appendInstance(_118439_f.get()._field_Decl.ptr(), _118439_f);;
	if ((!(_1abc620c2_checkConstraintsFn(_self_.get()._field_s, _118439_f,_118455_et,_119017_existInstance)))) {
		return false;;
	};
	if ((_119017_existInstance != nullptr)) {
		_118439_f=_119017_existInstance;
		_1abce51aa_updateModelToGenericIns(_118472_model,_119017_existInstance);
	} else {
		_1abc6e794_checkFnInsCaller(_self_.get()._field_s, _118439_f,_118455_et);
	};
	return true;;
}



inline void _1abcc9da4_evalFnGenericFromIndexing(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1abcbba55_Data>& _120950_d, jule::Ptr<_1ab079e46_IndexingExpr>& _120965_i) {
	jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>> _121017_generics = jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1abcc92b0_pushGenericsFromData(_self_, _121017_generics,_120965_i.get()._field_Index)))) {
		_120950_d=nullptr;
		return;;
	};
	jule::Ptr<_1abaa1d79_FnIns> _121617_f = _1abceb05c_Fn(_120950_d.get()._field_Kind.ptr());;
	jule::I64 _121717_genericsLen = 0LL;;
	if ((_121617_f.get()._field_Decl != nullptr)) {
		_121717_genericsLen=static_cast<jule::I64>(_121617_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1abc5a054_checkGenericQuantity(_self_.get()._field_s.ptr(), _121717_genericsLen,static_cast<jule::I64>(_121017_generics.len()),_120965_i.get()._field_Expr.get()._field_Token)))) {
		_120950_d=nullptr;
		return;;
	};
	_121617_f.get()._field_Generics=jule::Slice<jule::Ptr<_1abce62aa_InsGeneric>>::alloc(0LL, _121617_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto &expr = _121017_generics;
		auto it = expr.begin();
		_iter_begin_1bc1aa7c4:;
		if (it != expr.end()) {
			jule::Ptr<_1ab06d9b7_TypeDecl> _122821_g = *it;
			{
				jule::Ptr<_1abcbba55_Data> _122921_k = _1abcd0b68_evalType(_self_.ptr(), _122821_g);;
				if ((_122921_k == nullptr)) {
					_120950_d=nullptr;
					return;;
				};
				_121617_f.get()._field_Generics = jule::alloc_for_append(_121617_f.get()._field_Generics,1);_121617_f.get()._field_Generics.__push(jule::new_ptr<_1abce62aa_InsGeneric>(_1abce62aa_InsGeneric{._field_Kind=_122921_k.get()._field_Kind, }));;
			}
			_iter_next_1bc1aa7c4:;
			++it;
			goto _iter_begin_1bc1aa7c4;
		}
		_iter_end_1bc1aa7c4:;
	};
	if (_1abaa3210_IsBuiltin(_121617_f.ptr())) {
		return;;
	};
	if (_1abcc9a63_checkGenericFn(_self_, _121617_f,_120965_i.get()._field_Expr.get()._field_Token,_120950_d.get()._field_Model)) {
		_120950_d.get()._field_Kind.get()._field_Kind=jule::Trait<_1abce75a8_Kind>(_121617_f, 1);
	} else {
		_120950_d=nullptr;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcca1c3_evalIndexing(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab079e46_IndexingExpr> _124836_i) {
	jule::Ptr<_1abce79d7_TypeKind> _124917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_124917_prefix;
	});;
	jule::Ptr<_1abcbba55_Data> _125317_d = _1abcd88c9_evalExprKind(_self_, _124836_i.get()._field_Expr.get()._field_Kind);;
	if ((_125317_d == nullptr)) {
		return nullptr;;
	};
	if (_125317_d.get()._field_Decl) {
		_1abcc9601_evalIdentDeclFromIndexing(_self_, _125317_d,_124836_i);
		return _125317_d;;
	};
	if ((_1abceb05c_Fn(_125317_d.get()._field_Kind.ptr()) != nullptr)) {
		_1abcc9da4_evalFnGenericFromIndexing(_self_, _125317_d,_124836_i);
		return _125317_d;;
	};
	_1abcbba55_Data _126917_old_d = (*(_125317_d));;
	jule::Ptr<_1abcbba55_Data> _127117_index = _1abcd88c9_evalExprKind(_self_, _124836_i.get()._field_Index.get()._field_Kind);;
	if ((_127117_index == nullptr)) {
		return nullptr;;
	};
	_125317_d.get()._field_Decl=false;
	_1abcc8974_toIndexing(_self_.ptr(), _125317_d,_127117_index,_124836_i);
	if (_1abcbc418_IsConst(_125317_d.ptr())) {
		_125317_d.get()._field_Decl=false;
		_125317_d.get()._field_Model=jule::Any(_125317_d.get()._field_Constant, &__jule_any_type49);
	} else if (_125317_d.get()._field_Decl) {
		_125317_d.get()._field_Decl=false;
	} else {
		_125317_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba93585_IndexingExprModel>(_1aba93585_IndexingExprModel{._field_Token=_124836_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1abcbba55_Data>(_126917_old_d), ._field_Index=_127117_index}), &__jule_any_type47);
	};
	return _125317_d;;
}



inline __jule_tuple_x_1abcbba55_Data__jule_tuple_x_1abcbba55_Data _1abcca4d1_evalSlicingExprs(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab07a551_SlicingExpr>& _130241_s) {
	__jule_tuple_x_1abcbba55_Data__jule_tuple_x_1abcbba55_Data __jule_func_result;
	jule::Ptr<_1abce79d7_TypeKind> _130317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_130317_prefix;
	});;
	jule::Ptr<_1abcbba55_Data> _130717_l = nullptr;;
	jule::Ptr<_1abcbba55_Data> _130817_r = nullptr;;
	if ((_130241_s.get()._field_Start != nullptr)) {
		_130717_l=_1abcd88c9_evalExprKind(_self_, _130241_s.get()._field_Start.get()._field_Kind);
		if ((_130717_l != nullptr)) {
			_1abcc71c0_checkIntegerIndexingByData(_self_.ptr(), _130717_l,_130241_s.get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_130717_l=jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__1aba86d81_NewI64(0LL)});
		_130717_l.get()._field_Model=jule::Any(_130717_l.get()._field_Constant, &__jule_any_type49);
	};
	if ((_130241_s.get()._field_To != nullptr)) {
		_130817_r=_1abcd88c9_evalExprKind(_self_, _130241_s.get()._field_To.get()._field_Kind);
		if ((_130817_r != nullptr)) {
			_1abcc71c0_checkIntegerIndexingByData(_self_.ptr(), _130817_r,_130241_s.get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _130717_l;
	__jule_func_result.__jule_result_arg1 = _130817_r;
	return __jule_func_result;;
}



inline void _1abcca756_slicingArr(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data>& _133730_d) {
	jule::Ptr<_1abce79d7_TypeKind> _133817_elemType = _1abceaa84_Arr(_133730_d.get()._field_Kind.ptr()).get()._field_Elem;;
	_133730_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(jule::new_ptr<_1abd01925_Slc>(_1abd01925_Slc{._field_Elem=_133817_elemType}), 8)});
	_133730_d.get()._field_Lvalue=false;
	_133730_d.get()._field_Mutable=(_133730_d.get()._field_Mutable || (!(_1abce9159_Mutable(_133817_elemType.ptr()))));
}



inline void _1abccab1e_slicingStr(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data>& _135230_d, jule::Ptr<_1abcbba55_Data>& _135241_l, jule::Ptr<_1abcbba55_Data>& _135252_r) {
	_135230_d.get()._field_Lvalue=false;
	_135230_d.get()._field_Mutable=true;
	if ((!(_1abcbc418_IsConst(_135230_d.ptr())))) {
		return;;
	};
	if (((_135241_l == nullptr) || (_135252_r == nullptr))) {
		_135230_d.get()._field_Constant=nullptr;
		return;;
	};
	if ((_1abcbc418_IsConst(_135241_l.ptr()) && _1abcbc418_IsConst(_135252_r.ptr()))) {
		jule::I64 _136517_left = _1aba87e92_AsI64(_135241_l.get()._field_Constant.ptr());;
		if ((_136517_left < 0LL)) {
			return;;
		};
		jule::Str _137017_s = _1aba87c2d_ReadStr(_135230_d.get()._field_Constant.ptr());;
		jule::I64 _137121_right = 0LL;;
		if ((_135252_r == nullptr)) {
			_137121_right=static_cast<jule::I64>(static_cast<jule::I64>(_137017_s.len()));
		} else {
			_137121_right=static_cast<jule::I64>(_1aba87e92_AsI64(_135252_r.get()._field_Constant.ptr()));
		};
		if ((_136517_left > _137121_right)) {
			return;;
		};
		_1aba886ce_SetStr(_135230_d.get()._field_Constant.ptr(), _137017_s.slice(_136517_left,_137121_right));
		_135230_d.get()._field_Decl=true;
	} else {
		_135230_d.get()._field_Constant=nullptr;
	};
}



inline void _1abccb081_checkSlicing(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data>& _138836_d, jule::Ptr<_1abcbba55_Data>& _138847_l, jule::Ptr<_1abcbba55_Data>& _138858_r, jule::Ptr<_1ab07a551_SlicingExpr>& _138869_s) {
	{
		
		if ((_1abceaa84_Arr(_138836_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc1c290c:;
			{
				_1abcca756_slicingArr(&(*_self_), _138836_d);
				return;;
			}
		}
		else if ((_1abceace8_Slc(_138836_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc1c2984:;
			{
				return;;
			}
		}
		else if ((_1abce9d6e_Prim(_138836_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc1c2a0b:;
			{
				jule::Ptr<_1abcec734_Prim> _139617_prim = _1abce9d6e_Prim(_138836_d.get()._field_Kind.ptr());;
				{
					
					if (_1abd00968_IsStr(_139617_prim.ptr())) {
						_case_begin_1bc1c4e92:;
						{
							_1abccab1e_slicingStr(&(*_self_), _138836_d,_138847_l,_138858_r);
							return;;
						}
					}
					_match_end_1bc1c4de8:;
				};
			}
		}
		_match_end_1bc1c27db:;
	};
	_1abcbdace_pushErr(&(*_self_), _138869_s.get()._field_Token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_138836_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
}



inline jule::Ptr<_1abcbba55_Data> _1abccb38e_evalSlicing(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab07a551_SlicingExpr> _140735_s) {
	jule::Ptr<_1abcbba55_Data> _140817_d = _1abcd88c9_evalExprKind(_self_, _140735_s.get()._field_Expr.get()._field_Kind);;
	if ((_140817_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abcbba55_Data> _141318_l;;
	jule::Ptr<_1abcbba55_Data> _141325_r;;
	({
		__jule_tuple_x_1abcbba55_Data__jule_tuple_x_1abcbba55_Data __jule_assign_result = _1abcca4d1_evalSlicingExprs(_self_, _140735_s);
		_141318_l = __jule_assign_result.__jule_result_arg0;
		_141325_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_141318_l == nullptr)) {
		return _140817_d;;
	};
	_140817_d.get()._field_Decl=false;
	_1abccb081_checkSlicing(_self_.ptr(), _140817_d,_141318_l,_141325_r,_140735_s);
	if (_1abcbc418_IsConst(_140817_d.ptr())) {
		_140817_d.get()._field_Decl=false;
		_140817_d.get()._field_Model=jule::Any(_140817_d.get()._field_Constant, &__jule_any_type49);
	} else if (_140817_d.get()._field_Decl) {
		_140817_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1aba947a6_SlicingExprModel> _143121_model = jule::new_ptr<_1aba947a6_SlicingExprModel>(_1aba947a6_SlicingExprModel{._field_Token=_140735_s.get()._field_Token, ._field_Expr=_140817_d.get()._field_Model, ._field_Left=_141318_l.get()._field_Model, });;
		if ((_141325_r != nullptr)) {
			_143121_model.get()._field_Right=_141325_r.get()._field_Model;
		};
		_140817_d.get()._field_Model=jule::Any(_143121_model, &__jule_any_type100);
	};
	return _140817_d;;
}



inline void _1abccb757_castPtr(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abce79d7_TypeKind> _144430_t, jule::Ptr<_1abcbba55_Data> _144448_d, jule::Ptr<_1a97237bc_Token> _144458_errorToken) {
	_144448_d.get()._field_Constant=nullptr;
	jule::Ptr<_1abd00eb8_Sptr> _144613_sptr = _1abcea0d3_Sptr(_144448_d.get()._field_Kind.ptr());;
	if ((_144613_sptr != nullptr)) {
		if ((!(_1abce81e1_Equal(_1abcea347_Ptr(_144430_t.ptr()).get()._field_Elem, _144613_sptr.get()._field_Elem)))) {
			_1abcbdace_pushErr(&(*_self_), _144458_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_144448_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_144430_t.ptr()), &__jule_any_type7)}));
		};
		return;;
	};
	if ((!(_1abcbe519_isUnsafe(&(*_self_))))) {
		_1abcbdace_pushErr(&(*_self_), _144458_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1abcec734_Prim> _145913_prim = _1abce9d6e_Prim(_144448_d.get()._field_Kind.ptr());;
	if (((_1abcea347_Ptr(_144448_d.get()._field_Kind.ptr()) == nullptr) && ((_145913_prim == nullptr) || (!(_1aba866bb_IsInt(_1abceca97_Str(_145913_prim.ptr()))))))) {
		_1abcbdace_pushErr(&(*_self_), _144458_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_144448_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_144430_t.ptr()), &__jule_any_type7)}));
	};
}



inline void _1abccbb20_castStruct(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abce79d7_TypeKind> _146533_t, jule::Ptr<_1abcbba55_Data> _146551_d, jule::Ptr<_1a97237bc_Token> _146561_errorToken) {
	_146551_d.get()._field_Constant=nullptr;
	jule::Ptr<_1abab10ca_Trait> _146717_tr = _1abceb535_Trait(_146551_d.get()._field_Kind.ptr());;
	if ((_146717_tr == nullptr)) {
		_1abcbdace_pushErr(&(*_self_), _146561_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_146551_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_146533_t.ptr()), &__jule_any_type7)}));
		return;;
	};
	jule::Ptr<_1ab08a583_StructIns> _147317_s = _1abceb2c1_Struct(_146533_t.ptr());;
	_1bc1d2b70_pushReference(&(*_self_), _147317_s);
	if ((!(_1ab050218_IsImplements(_147317_s.get()._field_Decl.ptr(), _146717_tr)))) {
		_1abcbdace_pushErr(&(*_self_), _146561_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_146551_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_146533_t.ptr()), &__jule_any_type7)}));
	};
}



inline void _1abccbed8_castRef(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abce79d7_TypeKind> _148130_t, jule::Ptr<_1abcbba55_Data> _148148_d, jule::Ptr<_1a97237bc_Token> _148158_errorToken) {
	_148148_d.get()._field_Constant=nullptr;
	jule::Ptr<_1abd00eb8_Sptr> _148317_sptr = _1abcea0d3_Sptr(_148130_t.ptr());;
	jule::Ptr<_1abd0452c_Ptr> _148517_ptr = _1abcea347_Ptr(_148148_d.get()._field_Kind.ptr());;
	if (((_148517_ptr != nullptr) && _1abce81e1_Equal(_148317_sptr.get()._field_Elem, _148517_ptr.get()._field_Elem))) {
		if ((!(_1abcbe519_isUnsafe(&(*_self_))))) {
			_1abcbdace_pushErr(&(*_self_), _148158_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1abceb2c1_Struct(_148317_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1abccbb20_castStruct(&(*_self_), _148317_sptr.get()._field_Elem,_148148_d,_148158_errorToken);
		return;;
	};
	_1abcbdace_pushErr(&(*_self_), _148158_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_148148_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_148130_t.ptr()), &__jule_any_type7)}));
}



inline void _1abccc3a1_castSlc(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abce79d7_TypeKind> _150330_t, jule::Ptr<_1abcbba55_Data> _150348_d, jule::Ptr<_1a97237bc_Token> _150358_errorToken) {
	_150348_d.get()._field_Constant=nullptr;
	if ((_1abcea5ab_Enum(_150348_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1abce9d6e_Prim(_1abcea5ab_Enum(_150348_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1abd00968_IsStr(_1abce9d6e_Prim(_1abcea5ab_Enum(_150348_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1abcbdace_pushErr(&(*_self_), _150358_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_150348_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_150330_t.ptr()), &__jule_any_type7)}));
			return;;
		};
	} else if (((_1abce9d6e_Prim(_150348_d.get()._field_Kind.ptr()) == nullptr) || (!(_1abd00968_IsStr(_1abce9d6e_Prim(_150348_d.get()._field_Kind.ptr()).ptr()))))) {
		_1abcbdace_pushErr(&(*_self_), _150358_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_150348_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_150330_t.ptr()), &__jule_any_type7)}));
		return;;
	};
	_150330_t=_1abceace8_Slc(_150330_t.ptr()).get()._field_Elem;
	jule::Ptr<_1abcec734_Prim> _151613_prim = _1abce9d6e_Prim(_150330_t.ptr());;
	if (((_151613_prim == nullptr) || ((!(_1abcee03d_IsU8(_151613_prim.ptr()))) && (!(_1abceda65_IsI32(_151613_prim.ptr())))))) {
		_1abcbdace_pushErr(&(*_self_), _150358_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_150348_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_150330_t.ptr()), &__jule_any_type7)}));
	};
}



inline void _1abccc6c0_castStr(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data> _152230_d, jule::Ptr<_1a97237bc_Token> _152240_errorToken) {
	_152230_d.get()._field_Constant=nullptr;
	if ((_1abcea5ab_Enum(_152230_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1abab3220_Enum> _152521_e = _1abcea5ab_Enum(_152230_d.get()._field_Kind.ptr());;
		if (((_1abce9d6e_Prim(_152521_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1abd00968_IsStr(_1abce9d6e_Prim(_152521_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1abce9d6e_Prim(_152230_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1abcec734_Prim> _153217_prim = _1abce9d6e_Prim(_152230_d.get()._field_Kind.ptr());;
		if (((!(_1abcee03d_IsU8(_153217_prim.ptr()))) && (!(_1abceda65_IsI32(_153217_prim.ptr()))))) {
			_1abcbdace_pushErr(&(*_self_), _152240_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type101),jule::Any(_1abce7dd3_Str(_152230_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
		};
		return;;
	};
	if ((_1abceace8_Slc(_152230_d.get()._field_Kind.ptr()) == nullptr)) {
		_1abcbdace_pushErr(&(*_self_), _152240_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type101),jule::Any(_1abce7dd3_Str(_152230_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
		return;;
	};
	jule::Ptr<_1abce79d7_TypeKind> _154417_t = _1abceace8_Slc(_152230_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_1abcec734_Prim> _154513_prim = _1abce9d6e_Prim(_154417_t.ptr());;
	if (((_154513_prim == nullptr) || ((!(_1abcee03d_IsU8(_154513_prim.ptr()))) && (!(_1abceda65_IsI32(_154513_prim.ptr())))))) {
		_1abcbdace_pushErr(&(*_self_), _152240_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type101),jule::Any(_1abce7dd3_Str(_152230_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
	};
}



inline void _1abccca88_castInt(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abce79d7_TypeKind> _155130_t, jule::Ptr<_1abcbba55_Data> _155148_d, jule::Ptr<_1a97237bc_Token> _155158_errorToken) {
	if (_1abcbc418_IsConst(_155148_d.ptr())) {
		jule::Ptr<_1abcec734_Prim> _155317_prim = _1abce9d6e_Prim(_155130_t.ptr());;
		{
			
			if (_1aba86457_IsSigInt(_155317_prim.get()._field_Kind)) {
				_case_begin_1bc1ecccd:;
				{
					_1aba88338_SetI64(_155148_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1aba87e92_AsI64(_155148_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1aba86589_IsUnsigInt(_155317_prim.get()._field_Kind)) {
				_case_begin_1bc1ecd55:;
				{
					_1aba8846a_SetU64(_155148_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1aba880c4_AsU64(_155148_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1bc1ecc23:;
		};
	} else {
		_155148_d.get()._field_Constant=nullptr;
	};
	if ((_1abcea5ab_Enum(_155148_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1abab3220_Enum> _156517_e = _1abcea5ab_Enum(_155148_d.get()._field_Kind.ptr());;
		if (_1aba86930_IsNum(_1abce7dd3_Str(_156517_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1abcea0d3_Sptr(_155148_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1abcec734_Prim> _157217_prim = _1abce9d6e_Prim(_155130_t.ptr());;
		if ((!(_1abd00490_IsUintptr(_157217_prim.ptr())))) {
			_1abcbdace_pushErr(&(*_self_), _155158_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_155148_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_155130_t.ptr()), &__jule_any_type7)}));
		};
		return;;
	};
	if ((_1abcea347_Ptr(_155148_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1abcec734_Prim> _157917_prim = _1abce9d6e_Prim(_155130_t.ptr());;
		if (_1abd00490_IsUintptr(_157917_prim.ptr())) {
		} else if ((!(_1abcbe519_isUnsafe(&(*_self_))))) {
			_1abcbdace_pushErr(&(*_self_), _155158_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1abcec734_Prim> _158813_prim = _1abce9d6e_Prim(_155148_d.get()._field_Kind.ptr());;
	if (((_158813_prim != nullptr) && _1aba86930_IsNum(_1abceca97_Str(_158813_prim.ptr())))) {
		return;;
	};
	_1abcbdace_pushErr(&(*_self_), _155158_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_155148_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_155130_t.ptr()), &__jule_any_type7)}));
}



inline void _1abccce51_castNum(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abce79d7_TypeKind> _159630_t, jule::Ptr<_1abcbba55_Data> _159648_d, jule::Ptr<_1a97237bc_Token> _159658_errorToken) {
	if (_1abcbc418_IsConst(_159648_d.ptr())) {
		jule::Ptr<_1abcec734_Prim> _159817_prim = _1abce9d6e_Prim(_159630_t.ptr());;
		{
			
			if (_1aba867ed_IsFloat(_159817_prim.get()._field_Kind)) {
				_case_begin_1bc206b3e:;
				{
					_1aba88811_SetF64(_159648_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1aba88206_AsF64(_159648_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1aba86457_IsSigInt(_159817_prim.get()._field_Kind)) {
				_case_begin_1bc206bb6:;
				{
					_1aba88338_SetI64(_159648_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1aba87e92_AsI64(_159648_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1aba86589_IsUnsigInt(_159817_prim.get()._field_Kind)) {
				_case_begin_1bc206c3d:;
				{
					_1aba8846a_SetU64(_159648_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1aba880c4_AsU64(_159648_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1bc206a73:;
		};
	} else {
		_159648_d.get()._field_Constant=nullptr;
	};
	if ((_1abcea5ab_Enum(_159648_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1abab3220_Enum> _161217_e = _1abcea5ab_Enum(_159648_d.get()._field_Kind.ptr());;
		if (_1aba86930_IsNum(_1abce7dd3_Str(_161217_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1abcec734_Prim> _161813_prim = _1abce9d6e_Prim(_159648_d.get()._field_Kind.ptr());;
	if (((_161813_prim != nullptr) && _1aba86930_IsNum(_1abceca97_Str(_161813_prim.ptr())))) {
		return;;
	};
	_1abcbdace_pushErr(&(*_self_), _159658_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_159648_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_159630_t.ptr()), &__jule_any_type7)}));
}



inline void _1abccd319_castPrim(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abce79d7_TypeKind> _162631_t, jule::Ptr<_1abcbba55_Data> _162649_d, jule::Ptr<_1a97237bc_Token> _162659_errorToken) {
	jule::Ptr<_1abcec734_Prim> _162713_prim = _1abce9d6e_Prim(_162631_t.ptr());;
	{
		
		if (_1abd00bcc_IsAny(_162713_prim.ptr())) {
			_case_begin_1bc20c8c0:;
			{
				_162649_d.get()._field_Constant=nullptr;
			}
		}
		else if (_1abd00968_IsStr(_162713_prim.ptr())) {
			_case_begin_1bc20ce42:;
			{
				_1abccc6c0_castStr(&(*_self_), _162649_d,_162659_errorToken);
			}
		}
		else if (_1aba866bb_IsInt(_1abceca97_Str(_162713_prim.ptr()))) {
			_case_begin_1bc20cea8:;
			{
				_1abccca88_castInt(&(*_self_), _162631_t,_162649_d,_162659_errorToken);
			}
		}
		else if (_1aba86930_IsNum(_1abceca97_Str(_162713_prim.ptr()))) {
			_case_begin_1bc20d01e:;
			{
				_1abccce51_castNum(&(*_self_), _162631_t,_162649_d,_162659_errorToken);
			}
		}
		else {
			_case_begin_1bc20cdcb:;
			{
				_1abcbdace_pushErr(&(*_self_), _162659_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_162631_t.ptr()), &__jule_any_type7)}));
			}
		}
		_match_end_1bc20cd65:;
	};
}



inline void _1abccd638_castConstant(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abce79d7_TypeKind>& _164336_t, jule::Ptr<_1abcbba55_Data>& _164355_d) {
	if (((_164355_d == nullptr) || (!(_1abcbc418_IsConst(_164355_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1abcec734_Prim> _164713_prim = _1abce9d6e_Prim(_164336_t.ptr());;
	_1abce4b9e_castConstByType(_164713_prim.get()._field_Kind,_164355_d);
	_164355_d.get()._field_Model=jule::Any(_164355_d.get()._field_Constant, &__jule_any_type49);
}



inline void _1abccda01_castTypeEnum(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abce79d7_TypeKind>& _165236_t, jule::Ptr<_1abcbba55_Data>& _165255_d, jule::Ptr<_1a97237bc_Token>& _165270_errorToken) {
	jule::I64 _165313_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_1abc60ee4_checkTypeCompatibility((*_self_)._field_s, _165255_d.get()._field_Kind,_165236_t,_165270_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_165313_n);
		_1abcbdace_pushErr(&(*_self_), _165270_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_165255_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_165236_t.ptr()), &__jule_any_type7)}));
	};
	_165255_d.get()._field_Constant=nullptr;
}



inline void _1abccddb9_castTypeEnumT(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abce79d7_TypeKind>& _166137_t, jule::Ptr<_1abcbba55_Data>& _166156_d, jule::Ptr<_1a97237bc_Token>& _166171_errorToken) {
	jule::I64 _166213_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_1abc60ee4_checkTypeCompatibility((*_self_)._field_s, _166137_t,_166156_d.get()._field_Kind,_166171_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_166213_n);
		_1abcbdace_pushErr(&(*_self_), _166171_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_166156_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_166137_t.ptr()), &__jule_any_type7)}));
	};
	_166156_d.get()._field_Constant=nullptr;
}



inline jule::Ptr<_1abcbba55_Data> _1abcce31a_evalCastByTypeNData(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abce79d7_TypeKind> _167042_t, jule::Ptr<_1abcbba55_Data> _167060_d, jule::Ptr<_1a97237bc_Token> _167074_errorToken) {
	if (((_167060_d != nullptr) && _167060_d.get()._field_Decl)) {
		_1abcbdace_pushErr(&(*_self_), _167074_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1abcbbe40_IsNil(_167060_d.ptr())) {
			_case_begin_1bc218bc8:;
			{
				if ((!(_1abce93bd_NilCompatible(_167042_t.ptr())))) {
					_1abcbdace_pushErr(&(*_self_), _167074_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_167042_t.ptr()), &__jule_any_type7)}));
				};
				_167060_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_1abce9d6e_Prim(_167060_d.get()._field_Kind.ptr()) != nullptr) && _1abd00bcc_IsAny(_1abce9d6e_Prim(_167060_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1bc218953:;
			{
				if ((_1abcea5ab_Enum(_167042_t.ptr()) != nullptr)) {
					_1abcbdace_pushErr(&(*_self_), _167074_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1abcbdded_pushSugggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_1abcea820_TypeEnum(_167042_t.ptr()) != nullptr)) {
					_1abcbdace_pushErr(&(*_self_), _167074_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
				_167060_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_1abcea820_TypeEnum(_167060_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc2189b9:;
			{
				_1abccda01_castTypeEnum(&(*_self_), _167042_t,_167060_d,_167074_errorToken);
			}
		}
		else if ((_1abcea820_TypeEnum(_167042_t.ptr()) != nullptr)) {
			_case_begin_1bc218a30:;
			{
				_1abccddb9_castTypeEnumT(&(*_self_), _167042_t,_167060_d,_167074_errorToken);
			}
		}
		else if ((_1abcea347_Ptr(_167042_t.ptr()) != nullptr)) {
			_case_begin_1bc2196ce:;
			{
				_1abccb757_castPtr(&(*_self_), _167042_t,_167060_d,_167074_errorToken);
			}
		}
		else if ((_1abcea0d3_Sptr(_167042_t.ptr()) != nullptr)) {
			_case_begin_1bc219745:;
			{
				_1abccbed8_castRef(&(*_self_), _167042_t,_167060_d,_167074_errorToken);
			}
		}
		else if ((_1abceace8_Slc(_167042_t.ptr()) != nullptr)) {
			_case_begin_1bc2197ab:;
			{
				_1abccc3a1_castSlc(&(*_self_), _167042_t,_167060_d,_167074_errorToken);
			}
		}
		else if ((_1abceb2c1_Struct(_167042_t.ptr()) != nullptr)) {
			_case_begin_1bc219822:;
			{
				_1abccbb20_castStruct(&(*_self_), _167042_t,_167060_d,_167074_errorToken);
			}
		}
		else if ((_1abce9d6e_Prim(_167042_t.ptr()) != nullptr)) {
			_case_begin_1bc219888:;
			{
				_1abccd319_castPrim(&(*_self_), _167042_t,_167060_d,_167074_errorToken);
				_1abccd638_castConstant(&(*_self_), _167042_t,_167060_d);
			}
		}
		else {
			_case_begin_1bc218832:;
			{
				_1abcbdace_pushErr(&(*_self_), _167074_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_167042_t.ptr()), &__jule_any_type7)}));
				_167060_d=nullptr;
			}
		}
		_match_end_1bc2187bb:;
	};
	if ((_167060_d == nullptr)) {
		return nullptr;;
	};
	_167060_d.get()._field_Mutable=(_167060_d.get()._field_Mutable || ((!(_1abce9159_Mutable(_167060_d.get()._field_Kind.ptr()))) && _1abce9159_Mutable(_167042_t.ptr())));
	_167060_d.get()._field_Lvalue=false;
	_167060_d.get()._field_Decl=false;
	if (((_1abcea5ab_Enum(_167060_d.get()._field_Kind.ptr()) == nullptr) || (!(_1abce81e1_Equal(_1abcea5ab_Enum(_167060_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _167042_t))))) {
		_1abce4165_applyCastKind(_167060_d,_167042_t);
		_167060_d.get()._field_Model.cast_ptr<_1aba923a8_CastingExprModel>(&__jule_any_type102).get()._field_Token=_167074_errorToken;
	} else {
		_167060_d.get()._field_Kind=_167042_t;
	};
	_167060_d.get()._field_untyped=false;
	if (_1abcbc418_IsConst(_167060_d.ptr())) {
		_167060_d.get()._field_Constant.get()._field_Kind=_1abce9d6e_Prim(_167042_t.ptr()).get()._field_Kind;
	};
	return _167060_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcce76b_evalCastT(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1abce79d7_TypeKind>& _173534_t, jule::Ptr<_1ab072ed8_Expr>& _173553_e, jule::Ptr<_1a97237bc_Token>& _173568_et) {
	jule::Ptr<_1abce79d7_TypeKind> _173617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_173617_prefix;
	});;
	if ((_1abceace8_Slc(_173534_t.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _173553_e.get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type103) {
				_case_begin_1bc2276cb:;
				{
					_self_.get()._field_prefix=_173534_t;
				}
			}
			_match_end_1bc227522:;
		};
	};
	jule::Ptr<_1abcbba55_Data> _174517_d = _1abcd88c9_evalExprKind(_self_, _173553_e.get()._field_Kind);;
	if (((_174517_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _174517_d;;
	};
	return _1abcce31a_evalCastByTypeNData(_self_.ptr(), _173534_t,_174517_d,_173568_et);;
}



inline jule::Ptr<_1abcbba55_Data> _1abccea79_evalCast(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab075b12_CastExpr> _175232_c) {
	jule::Ptr<_1abcebdb5_TypeSymbol> _175317_t = _1abaa64aa_buildType(_175232_c.get()._field_Kind);;
	jule::Bool _175413_ok = _1abc5de15_checkType(_self_.get()._field_s, _175317_t,_self_.get()._field_lookup);;
	if ((!(_175413_ok))) {
		return nullptr;;
	};
	return _1abcce76b_evalCastT(_self_, _175317_t.get()._field_Kind,_175232_c.get()._field_Expr,_175232_c.get()._field_Kind.get()._field_Token);;
}



inline jule::Ptr<_1abcbba55_Data> _1abcced87_evalNsSelection(_1abcbd5c3_Eval* _self_, jule::Ptr<_1ab075eb9_NsSelectionExpr> _176134_s) {
	jule::Str _176213_path = _1abd10923_buildLinkPathByTokens(_176134_s.get()._field_Ns);;
	jule::Ptr<_1abc4cd9e_ImportInfo> _176317_imp = _1abd13959_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1abd11e1e_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)>([=](jule::Ptr<_1abc4cd9e_ImportInfo> _176352_imp) mutable -> jule::Bool {
		if (((_176134_s.get()._field_Ns.len() == 1LL) && (_176352_imp.get()._field_Alias == _176213_path))) {
			return true;;
		};
		return ((_176352_imp.get()._field_LinkPath == _176213_path) && _1abc50a0b_isAccessibleViaSelection(_176352_imp.ptr()));;
	}));;
	if ((_176317_imp == nullptr)) {
		_1abcbdace_pushErr(&(*_self_), _176134_s.get()._field_Ns[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_176213_path, &__jule_any_type7)}));
		return nullptr;;
	};
	jule::Trait<_1abd13959_Lookup> _177517_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1abd13959_Lookup>(_176317_imp, 1);
	;
	_1abcbe2a5_disallowBuiltin(&(*_self_));
	jule::Any _178017_def = _1abcc1ae3_getDef(&(*_self_), _176134_s.get()._field_Ident.get()._field_Kind,false);;
	_1abcbe0c9_allowBuiltin(&(*_self_));
	(*_self_)._field_lookup=_177517_lookup;
	jule::Ptr<_1abcbba55_Data> _178317_d = _1abcc55ca_evalDef(&(*_self_), _178017_def,_176134_s.get()._field_Ident);;
	return _178317_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcd02d8_evalStructLitExplicit(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab08a583_StructIns> _178745_s, jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _178813_exprs, jule::Ptr<_1a97237bc_Token> _178833_errorToken) {
	jule::Bool _178913_ok = _1abc5a054_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_178745_s.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_178745_s.get()._field_Generics.len()),_178833_errorToken);;
	if ((!(_178913_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _178745_s.get()._field_Decl))) {
		_1abcbdace_pushErr(_self_.ptr(), _178833_errorToken,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_178745_s.get()._field_Decl.get()._field_Ident, &__jule_any_type7)}));
	};
	_1bc1d2b70_pushReference(_self_.ptr(), _178745_s);
	_1abcc39d5_checkDeprecated(_self_.ptr(), _178745_s.get()._field_Decl.get()._field_Directives,_178833_errorToken);
	_1abcb11ed_structLitChecker _180217_slc = _1abcb11ed_structLitChecker{._field_e=_self_, ._field_errorToken=_178833_errorToken, ._field_s=_178745_s, };;
	_1abcb2793_check(&_180217_slc, _178813_exprs);
	jule::Ptr<_1abcbba55_Data> _180917_d = jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_178745_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1aba91a4a_StructLitExprModel>(_1aba91a4a_StructLitExprModel{._field_Strct=_178745_s, ._field_Args=_180217_slc._field_args}), &__jule_any_type104), });;
	if (_178745_s.get()._field_Decl.get()._field_CppLinked) {
		_180917_d.get()._field_Kind.get()._field_CppIdent=_178745_s.get()._field_Decl.get()._field_Ident;
	};
	return _180917_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcd05e6_evalStructLit(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab078197_StructLit> _182537_lit) {
	jule::Ptr<_1abcebdb5_TypeSymbol> _182617_t = _1abaa64aa_buildType(_182537_lit.get()._field_Kind);;
	jule::Bool _182713_ok = _1abc5de15_checkType(_self_.get()._field_s, _182617_t,_self_.get()._field_lookup);;
	if ((!(_182713_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1ab08a583_StructIns> _183217_s = _1abceb2c1_Struct(_182617_t.get()._field_Kind.ptr());;
	if ((_183217_s == nullptr)) {
		if ((_1abcea0d3_Sptr(_182617_t.get()._field_Kind.ptr()) != nullptr)) {
			_183217_s=_1abceb2c1_Struct(_1abcea0d3_Sptr(_182617_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_183217_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1abcbdace_pushErr(_self_.ptr(), _182537_lit.get()._field_Kind.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_1abcbba55_Data> _184517_d = _1abcd02d8_evalStructLitExplicit(_self_, _183217_s,_182537_lit.get()._field_Exprs,_182537_lit.get()._field_Kind.get()._field_Token);;
	if ((_1abcea0d3_Sptr(_182617_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aba91a4a_StructLitExprModel> _184721_model = _184517_d.get()._field_Model.cast_ptr<_1aba91a4a_StructLitExprModel>(&__jule_any_type104);;
		_1abce2a26_makeStructLitAlloc(_184517_d,_184721_model);
	};
	return _184517_d;;
}



inline _1abd06353_typeChecker _1abcd085a_typeChecker(_1abcbd5c3_Eval* _self_) {
	return _1abc5cd04_typeChecker((*_self_)._field_s, (*_self_)._field_lookup,nullptr,nullptr);;
}



inline jule::Ptr<_1abcbba55_Data> _1abcd0b68_evalType(_1abcbd5c3_Eval* _self_, jule::Ptr<_1ab06d9b7_TypeDecl> _185731_t) {
	jule::Ptr<_1abcebdb5_TypeSymbol> _185817_tk = _1abaa64aa_buildType(_185731_t);;
	jule::Bool _185913_ok = _1abc5de15_checkType((*_self_)._field_s, _185817_tk,(*_self_)._field_lookup);;
	if ((!(_185913_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=_185817_tk.get()._field_Kind, ._field_Model=jule::Any(_185817_tk.get()._field_Kind, &__jule_any_type92), ._field_Decl=true, });;
}



inline void _1abcd0e87_callTypeFn(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab076eba_FnCallExpr>& _187035_fc, jule::Ptr<_1abcbba55_Data>& _187057_d) {
	if ((_187035_fc.get()._field_Args.len() < 1LL)) {
		_1abcbdace_pushErr(_self_.ptr(), _187035_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type7)}));
	} else if ((_187035_fc.get()._field_Args.len() > 1LL)) {
		_1abcbdace_pushErr(_self_.ptr(), _187035_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	} else if (_187035_fc.get()._field_IsCo) {
		_1abcbdace_pushErr(_self_.ptr(), _187035_fc.get()._field_Token,jule::Str("concurrent calls are not allowed for type-cast calls", 52),jule::Slice<jule::Any>());
		_187057_d=nullptr;
		return;;
	} else if ((_187035_fc.get()._field_Exception != nullptr)) {
		_1abcbdace_pushErr(_self_.ptr(), _187035_fc.get()._field_Token,jule::Str("exceptionals are not supported for type-cast call", 49),jule::Slice<jule::Any>());
		_187057_d=nullptr;
		return;;
	};
	if ((_187035_fc.get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1ab072ed8_Expr> _188621_arg = _187035_fc.get()._field_Args[0LL];;
		_187057_d=_1abcce76b_evalCastT(_self_, _187057_d.get()._field_Kind,_188621_arg,_188621_arg.get()._field_Token);
		return;;
	};
	if ((_187057_d != nullptr)) {
		_187057_d.get()._field_Decl=false;
	};
}



inline void _1abcd12a6_callBuiltinFn(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab076eba_FnCallExpr>& _189638_fc, jule::Ptr<_1abcbba55_Data>& _189660_d) {
	_189660_d=_1abceb05c_Fn(_189660_d.get()._field_Kind.ptr()).get()._field_caller(_self_,_189638_fc,_189660_d);
	if ((_189660_d == nullptr)) {
		return;;
	};
	_189660_d.get()._field_Mutable=true;
}



inline void _1abcd15e7_checkFnOfConcurrentCall(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abaa1d79_FnIns>& _190443_f, jule::Ptr<_1a97237bc_Token> _190454_errorToken) {
	if (_1abcbe519_isUnsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _190443_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1bc247740:;
		if (it != expr.end()) {
			jule::Ptr<_1abaa0eaa_ParamIns> &_190816_p = *it;
			{
				if (_1aba9ceb8_IsSelf(_190816_p.get()._field_Decl.ptr())) {
					if ((!(_1aba9d22c_IsRef(_190816_p.get()._field_Decl.ptr())))) {
						_1abcbdace_pushErr(&(*_self_), _190454_errorToken,jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97),jule::Slice<jule::Any>());
						_1abcbdded_pushSugggestion(&(*_self_), jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99),jule::Slice<jule::Any>());
					};
				};
				if (_190816_p.get()._field_Decl.get()._field_Reference) {
					_1abcbdace_pushErr(&(*_self_), _190454_errorToken,jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96),jule::Slice<jule::Any>());
					_1abcbdded_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1bc247740:;
			++it;
			goto _iter_begin_1bc247740;
		}
		_iter_end_1bc247740:;
	};
}



inline void _1abcd19e3_processExceptionalHandler(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abaa1d79_FnIns>& _192349_f, jule::Ptr<_1ab076eba_FnCallExpr>& _192365_fc, jule::Ptr<_1abcbba55_Data>& _192387_d) {
	jule::Bool _192413_resultNeeded = ((!(_1aba9e63a_IsVoid(_192349_f.get()._field_Decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1abac584d_scopeChecker> _192517_csc = nullptr;;
	jule::Ptr<_1ababdcdb_Scope> _192617_ch = nullptr;;
	jule::Ptr<_1aba92c5a_FnCallExprModel> _192817_model = _192387_d.get()._field_Model.cast_ptr<_1aba92c5a_FnCallExprModel>(&__jule_any_type36);;
	jule::Ptr<_1abac584d_scopeChecker> _193217_sc = (*_self_)._field_lookup.operator jule::Ptr<_1abac584d_scopeChecker>();;
	_192517_csc=_1abad58b3_newChildChecker(_193217_sc);
	if (_192413_resultNeeded) {
		_192517_csc.get()._field_result=_192349_f;
	};
	_192617_ch=_1abaca248_getChild(_193217_sc.ptr());
	_192365_fc.get()._field_Exception.get()._field_Parent=_193217_sc.get()._field_tree;
	_192517_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_192517_csc.get()._field_table.get()._field_Vars,1);_192517_csc.get()._field_table.get()._field_Vars.__push(_1abce2d67_buildErrorVar(_192617_ch,_192365_fc));;
	_1abaca611_checkChildSsc(_193217_sc, _192365_fc.get()._field_Exception,_192617_ch,_192517_csc);
	_192817_model.get()._field_Assigned=_192413_resultNeeded;
	_192817_model.get()._field_Except=_192617_ch;
	if ((_192413_resultNeeded && (_192517_csc.get()._field_result != nullptr))) {
		_1abcbdace_pushErr(&(*_self_), _192365_fc.get()._field_Token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1abcd1d23_callFn(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab076eba_FnCallExpr>& _195031_fc, jule::Ptr<_1abcbba55_Data>& _195053_d) {
	jule::Ptr<_1abaa1d79_FnIns> _195117_f = _1abceb05c_Fn(_195053_d.get()._field_Kind.ptr());;
	if (_1abaa3210_IsBuiltin(_195117_f.ptr())) {
		_1abcd12a6_callBuiltinFn(_self_, _195031_fc,_195053_d);
		return;;
	};
	if ((_1abcbe77d_isGlobal(_self_.ptr()) && _195117_f.get()._field_Decl.get()._field_Exceptional)) {
		_1abcbdace_pushErr(_self_.ptr(), _195031_fc.get()._field_Token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1abcbdded_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_195053_d=nullptr;
		return;;
	};
	if (((!(_1aba9e89e_IsMethod(_195117_f.get()._field_Decl.ptr()))) && _1abd0ea76_hasDirective(_195117_f.get()._field_Decl.get()._field_Directives,jule::Str("test", 4)))) {
		_1abcbdace_pushErr(_self_.ptr(), _195031_fc.get()._field_Token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_195053_d=nullptr;
		return;;
	};
	if (((((!(_195053_d.get()._field_Mutable)) && _1aba9e89e_IsMethod(_195117_f.get()._field_Decl.ptr())) && (!(_195117_f.get()._field_Decl.get()._field_Statically))) && _195117_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_1abcbdace_pushErr(_self_.ptr(), _195031_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1abcbe519_isUnsafe(_self_.ptr()))) && _195117_f.get()._field_Decl.get()._field_Unsafety)) {
		_1abcbdace_pushErr(_self_.ptr(), _195031_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _197517_dynamicAnnotation = (((_195117_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_195117_f.get()._field_Generics.len() == 0LL)) && (_195117_f.get()._field_Params.len() > 0LL));;
	if (_197517_dynamicAnnotation) {
		_195117_f.get()._field_Generics=jule::Slice<jule::Ptr<_1abce62aa_InsGeneric>>::alloc(_195117_f.get()._field_Decl.get()._field_Generics.len(), _195117_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_195117_f.get()._field_Generics.len() != _195117_f.get()._field_Decl.get()._field_Generics.len())) {
		_1abc5a054_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_195117_f.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_195117_f.get()._field_Generics.len()),_195031_fc.get()._field_Token);
		_195053_d=nullptr;
		return;;
	};
	jule::Ptr<_1abc55eea_Sema> _198417_old = _self_.get()._field_s;;
	if ((_195117_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_195117_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_198417_old != _self_.get()._field_s)) {
			_198417_old.get()._field_errors=jule::append(_198417_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_198417_old;
	});;
	_1abcad7e4_fnCallArgChecker _199717_fcac = _1abcad7e4_fnCallArgChecker{._field_e=_self_, ._field_args=_195031_fc.get()._field_Args, ._field_errorToken=_195031_fc.get()._field_Token, ._field_dynamicAnnotation=_197517_dynamicAnnotation, };;
	if ((!(_197517_dynamicAnnotation))) {
		if ((!(_195117_f.get()._field_reloaded))) {
			jule::Bool _200621_ok = _1abc62e5d_reloadFnInsTypes(_self_.get()._field_s, _195117_f);;
			_195117_f.get()._field_reloaded=true;
			if ((!(_200621_ok))) {
				_195053_d=nullptr;
				return;;
			};
		};
		jule::Ptr<_1abaa1d79_FnIns> _201321_existInstance = _1abaa0b03_appendInstance(_195117_f.get()._field_Decl.ptr(), _195117_f);;
		if ((_201321_existInstance != nullptr)) {
			_195117_f=_201321_existInstance;
		};
	} else if ((!(_1abc61852_buildFnNonGenericTypeKinds(_self_.get()._field_s, _195117_f,_199717_fcac._field_ignored)))) {
		_195053_d=nullptr;
		return;;
	};
	_199717_fcac._field_f=_195117_f;
	jule::Bool _202417_ok = false;;
	if ((_195117_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_1abc55eea_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1abc55eea_Sema> _1___jule_assign_arg = _198417_old;
			_198417_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_202417_ok=_1abcb0bae_check(&_199717_fcac);
		({
			jule::Ptr<_1abc55eea_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1abc55eea_Sema> _1___jule_assign_arg = _198417_old;
			_198417_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_202417_ok=_1abcb0bae_check(&_199717_fcac);
	};
	if (_197517_dynamicAnnotation) {
		if ((!(_202417_ok))) {
			_195053_d=nullptr;
			return;;
		};
		if ((!(_1abcc9a63_checkGenericFn(_self_, _195117_f,_195031_fc.get()._field_Token,_195053_d.get()._field_Model)))) {
			_195053_d=nullptr;
			return;;
		};
	};
	jule::Any _204417_callModel = _195053_d.get()._field_Model;;
	if (_1aba9e63a_IsVoid(_195117_f.get()._field_Decl.ptr())) {
		_195053_d=_1abce4363_buildVoidData();
	} else {
		_195053_d.get()._field_Kind=_195117_f.get()._field_Result;
		_195053_d.get()._field_Lvalue=false;
	};
	jule::Ptr<_1aba92c5a_FnCallExprModel> _205317_model = jule::new_ptr<_1aba92c5a_FnCallExprModel>(_1aba92c5a_FnCallExprModel{._field_Token=_195031_fc.get()._field_Token, ._field_Func=_195117_f, ._field_IsCo=_195031_fc.get()._field_IsCo, ._field_Expr=_204417_callModel, ._field_Args=_199717_fcac._field_argModels, });;
	_195053_d.get()._field_Model=jule::Any(_205317_model, &__jule_any_type36);
	_195053_d.get()._field_Mutable=true;
	if (_195117_f.get()._field_Decl.get()._field_Exceptional) {
		if (_195031_fc.get()._field_IsCo) {
			_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _195031_fc.get()._field_Token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
			_1abc58ecb_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
		};
		{
			
			if (_1ab07732d_Unhandled(_195031_fc.ptr())) {
				_case_begin_1bc2657b3:;
				{
					_1abcbdace_pushErr(_self_.ptr(), _195031_fc.get()._field_Token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1abcbdded_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1ab077592_Ignored(_195031_fc.ptr())) {
				_case_begin_1bc265708:;
				{
					goto _match_end_1bc264790;
				}
			}
			else {
				_case_begin_1bc264806:;
				{
					_1abcd19e3_processExceptionalHandler(_self_.ptr(), _195117_f,_195031_fc,_195053_d);
				}
			}
			_match_end_1bc264790:;
		};
	} else if ((!(_1ab07732d_Unhandled(_195031_fc.ptr())))) {
		_1abcbdace_pushErr(_self_.ptr(), _195031_fc.get()._field_Token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
	if (_195031_fc.get()._field_IsCo) {
		_1abcd15e7_checkFnOfConcurrentCall(_self_.ptr(), _205317_model.get()._field_Func,_195031_fc.get()._field_Token);
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd2131_evalFnCall(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab076eba_FnCallExpr> _208834_fc) {
	jule::Ptr<_1abce79d7_TypeKind> _208917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_208917_prefix;
	});;
	{
		auto &_match_expr{ _208834_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1bc26882c:;
			{
				if ((_208834_fc.get()._field_Expr.get()._field_Token.get()._field_Kind == jule::Str("error", 5))) {
					return _1abda93c3_builtinCallerError(_self_,_208834_fc);;
				};
			}
		}
		_match_end_1bc2687c7:;
	};
	jule::Ptr<_1abcbba55_Data> _210217_d = _1abcd88c9_evalExprKind(_self_, _208834_fc.get()._field_Expr.get()._field_Kind);;
	if ((_210217_d == nullptr)) {
		return nullptr;;
	};
	if (_210217_d.get()._field_Decl) {
		_1abcd0e87_callTypeFn(_self_, _208834_fc,_210217_d);
		return _210217_d;;
	};
	if ((_1abceb05c_Fn(_210217_d.get()._field_Kind.ptr()) == nullptr)) {
		_1abcbdace_pushErr(_self_.ptr(), _208834_fc.get()._field_Token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1abcd1d23_callFn(_self_, _208834_fc,_210217_d);
	return _210217_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcd24d8_evalEnumStatic(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abab3220_Enum> _212137_enm, jule::Ptr<_1a97237bc_Token> _212149_ident) {
	jule::Ptr<_1abcbba55_Data> _212217_d = jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_212137_enm, 3)}), });;
	jule::Ptr<_1abab272a_EnumItem> _212817_item = _1abab3cd1_FindItem(_212137_enm.ptr(), _212149_ident.get()._field_Kind);;
	if ((_212817_item == nullptr)) {
		_1abcbdace_pushErr(&(*_self_), _212149_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_212137_enm.get()._field_Ident, &__jule_any_type7),jule::Any(_212149_ident.get()._field_Kind, &__jule_any_type7)}));
	} else {
		_212217_d.get()._field_Constant=jule::new_ptr<_1aba86b94_Const>((*(_212817_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_212217_d.get()._field_Model=jule::Any(_212217_d.get()._field_Constant, &__jule_any_type49);
		_1abce48e6_applyCastModelByEnum(_212217_d,_212137_enm);
	};
	return _212217_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcd2890_evalTypeEnumStatic(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abab481a_TypeEnum> _214041_enm, jule::Ptr<_1a97237bc_Token> _214057_ident) {
	jule::Ptr<_1abab4254_TypeEnumItem> _214117_item = _1abab5354_FindItem(_214041_enm.ptr(), _214057_ident.get()._field_Kind);;
	if ((_214117_item == nullptr)) {
		_1abcbdace_pushErr(&(*_self_), _214057_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_214041_enm.get()._field_Ident, &__jule_any_type7),jule::Any(_214057_ident.get()._field_Kind, &__jule_any_type7)}));
		return nullptr;;
	};
	{
		
		if ((_1abcea5ab_Enum(_214117_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc27188a:;
			{
				return _1abcc2176__evalEnum(&(*_self_), _1abcea5ab_Enum(_214117_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1abcea820_TypeEnum(_214117_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc272050:;
			{
				return _1abcc283b__evalTypeEnum(&(*_self_), _1abcea820_TypeEnum(_214117_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1abceb2c1_Struct(_214117_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc2713b2:;
			{
				return _1abcc3001__evalStruct(&(*_self_), _1abceb2c1_Struct(_214117_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1bc27002b:;
			{
				jule::Ptr<_1abcbba55_Data> _215421_d = jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=_214117_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_215421_d.get()._field_Model=jule::Any(_215421_d.get()._field_Kind, &__jule_any_type92);
				return _215421_d;;
			}
		}
		_match_end_1bc27122a:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd2c47_evalStructStatic(_1abcbd5c3_Eval* _self_, jule::Ptr<_1ab08a583_StructIns> _216339_s, jule::Ptr<_1a97237bc_Token> _216354_ident) {
	jule::Ptr<_1abcbba55_Data> _216417_d = jule::new_ptr<_1abcbba55_Data>();;
	;
	jule::Ptr<_1aba9e1c8_Fn> _216817_method = _1ab0656b2_FindMethod(_216339_s.ptr(), _216354_ident.get()._field_Kind,true);;
	if ((_216817_method != nullptr)) {
		if ((!(_1abc59383_isAccessibleDefine((*_self_)._field_s.ptr(), _216817_method.get()._field_Public,_216817_method.get()._field_Token)))) {
			_1abcbdace_pushErr(&(*_self_), _216354_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_216354_ident.get()._field_Kind, &__jule_any_type7)}));
			_1abcbdded_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1abaa1d79_FnIns> _217521_ins = _1abaa0828_instance(_216817_method);;
		_217521_ins.get()._field_Owner=_216339_s;
		_1bc0dc6e5_pushReference(&(*_self_), _217521_ins);
		_216417_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba95a3d_StructStaticIdentExprModel>(_1aba95a3d_StructStaticIdentExprModel{._field_Structure=_216339_s, ._field_Expr=_216417_d.get()._field_Model, ._field_Method=_217521_ins}), &__jule_any_type105);
		_216417_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_217521_ins, 1)});
		return _216417_d;;
	};
	jule::Ptr<_1abc73ee6_Var> _218917_sttc = _1ab05364a_FindStatic(_216339_s.ptr(), _216354_ident.get()._field_Kind);;
	if ((_218917_sttc != nullptr)) {
		return _1abcc4d6b_evalVar(&(*_self_), _218917_sttc,_216354_ident);;
	};
	_1abcbdace_pushErr(&(*_self_), _216354_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_216339_s.get()._field_Decl.get()._field_Ident, &__jule_any_type7),jule::Any(_216354_ident.get()._field_Kind, &__jule_any_type7)}));
	return nullptr;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcd3198_evalTraitSubIdent(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data> _219840_d, jule::Ptr<_1abab10ca_Trait> _219854_trt, jule::Ptr<_1a97237bc_Token> _219871_ident) {
	jule::Ptr<_1aba9e1c8_Fn> _219917_f = _1abab1e55_FindMethod(_219854_trt.ptr(), _219871_ident.get()._field_Kind);;
	if ((_219917_f == nullptr)) {
		_1abcbdace_pushErr(&(*_self_), _219871_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_219854_trt.get()._field_Ident, &__jule_any_type7),jule::Any(_219871_ident.get()._field_Kind, &__jule_any_type7)}));
		return nullptr;;
	};
	return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abaa0828_instance(_219917_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1aba94ce5_TraitSubIdentExprModel>(_1aba94ce5_TraitSubIdentExprModel{._field_Token=_219871_ident, ._field_Expr=_219840_d.get()._field_Model, ._field_Method=_219917_f, ._field_Trt=_219854_trt}), &__jule_any_type72), });;
}



inline jule::Ptr<_1abcbba55_Data> _1abcd3693_evalStructSubIdent(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data> _221741_d, jule::Ptr<_1ab08a583_StructIns> _221755_s, jule::Ptr<_1ab07643c_SubIdentExpr> _221774_si, jule::Bool _221793_ref) {
	jule::Ptr<_1ab08a396_FieldIns> _221817_f = _1ab04762d_FindField(_221755_s.ptr(), _221774_si.get()._field_Ident.get()._field_Kind);;
	if ((_221817_f != nullptr)) {
		if ((!(_1abc59383_isAccessibleDefine((*_self_)._field_s.ptr(), _221817_f.get()._field_Decl.get()._field_Public,_221817_f.get()._field_Decl.get()._field_Token)))) {
			_1abcbdace_pushErr(&(*_self_), _221774_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_221817_f.get()._field_Decl.get()._field_Ident, &__jule_any_type7)}));
			_1abcbdded_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1aba95697_StructSubIdentExprModel> _222521_model = jule::new_ptr<_1aba95697_StructSubIdentExprModel>(_1aba95697_StructSubIdentExprModel{._field_Token=_221774_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_1abcbba55_Data>((*(_221741_d))), ._field_ExprKind=_221741_d.get()._field_Kind, ._field_Field=_221817_f, ._field_Owner=_221755_s});;
		_221741_d.get()._field_Model=jule::Any(_222521_model, &__jule_any_type73);
		_221741_d.get()._field_Kind=_221817_f.get()._field_Kind;
		_221741_d.get()._field_Lvalue=true;
		if ((_221817_f.get()._field_Decl.get()._field_Mutable && (!(_221741_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1abac584d_scopeChecker>>()) {
					_case_begin_1bc282cca:;
					{
						jule::Ptr<_1abac584d_scopeChecker> _224025_scope = _1abac8994_getRoot((*_self_)._field_lookup.operator jule::Ptr<_1abac584d_scopeChecker>());;
						_221741_d.get()._field_Mutable=((_224025_scope.get()._field_owner != nullptr) && (_224025_scope.get()._field_owner.get()._field_Owner == _221755_s));
					}
				}
				_match_end_1bc282c75:;
			};
		};
		return _221741_d;;
	};
	;
	jule::Ptr<_1aba9e1c8_Fn> _224917_m = _1ab0656b2_FindMethod(_221755_s.ptr(), _221774_si.get()._field_Ident.get()._field_Kind,false);;
	if ((_224917_m == nullptr)) {
		_1abcbdace_pushErr(&(*_self_), _221774_si.get()._field_Ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_221755_s.get()._field_Decl.get()._field_Ident, &__jule_any_type7),jule::Any(_221774_si.get()._field_Ident.get()._field_Kind, &__jule_any_type7)}));
		return nullptr;;
	};
	if ((!(_1abc59383_isAccessibleDefine((*_self_)._field_s.ptr(), _224917_m.get()._field_Public,_224917_m.get()._field_Token)))) {
		_1abcbdace_pushErr(&(*_self_), _221774_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_224917_m.get()._field_Ident, &__jule_any_type7)}));
		_1abcbdded_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1aba9d22c_IsRef(_224917_m.get()._field_Params[0LL].ptr()) && (!(_221793_ref)))) {
		_1abcbdace_pushErr(&(*_self_), _221774_si.get()._field_Ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1abcc39d5_checkDeprecated(&(*_self_), _224917_m.get()._field_Directives,_221774_si.get()._field_Ident);
	jule::Ptr<_1abaa1d79_FnIns> _226517_ins = _1abaa0828_instance(_224917_m);;
	_226517_ins.get()._field_Owner=_221755_s;
	_1bc0dc6e5_pushReference(&(*_self_), _226517_ins);
	jule::Ptr<_1abcbba55_Data> _226817_model = jule::new_ptr<_1abcbba55_Data>((*(_221741_d)));;
	_221741_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba95697_StructSubIdentExprModel>(_1aba95697_StructSubIdentExprModel{._field_Token=_221774_si.get()._field_Ident, ._field_Expr=_226817_model, ._field_ExprKind=_221741_d.get()._field_Kind, ._field_Method=_226517_ins, ._field_Owner=_221755_s}), &__jule_any_type73);
	_221741_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_226517_ins, 1)});
	return _221741_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcd3a4a_evalSliceSubIdent(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data> _228040_d, jule::Ptr<_1a97237bc_Token> _228054_ident) {
	{
		auto &_match_expr{ _228054_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1bc28b3ee:;
			{
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_Params=jule::Slice<jule::Ptr<_1abaa0eaa_ParamIns>>::make({jule::new_ptr<_1abaa0eaa_ParamIns>(_1abaa0eaa_ParamIns{._field_Decl=jule::new_ptr<_1aba9c88b_Param>(_1aba9c88b_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1abaa0eaa_ParamIns>(_1abaa0eaa_ParamIns{._field_Decl=jule::new_ptr<_1aba9c88b_Param>(_1aba9c88b_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abda9082_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_228040_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1aba96753_CommonSubIdentExprModel>(_1aba96753_CommonSubIdentExprModel{._field_ExprKind=_228040_d.get()._field_Kind, ._field_Expr=_228040_d.get()._field_Model, ._field_Token=_228054_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type75), });;
			}
		}
		else {
			_case_begin_1bc28b6c9:;
			{
				_1abcbdace_pushErr(&(*_self_), _228054_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_228040_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_228054_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc28b487:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd3e02_evalArraySubIdent(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data> _231740_d, jule::Ptr<_1a97237bc_Token> _231754_ident) {
	{
		auto &_match_expr{ _231754_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1bc28c994:;
			{
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_Params=jule::Slice<jule::Ptr<_1abaa0eaa_ParamIns>>::make({jule::new_ptr<_1abaa0eaa_ParamIns>(_1abaa0eaa_ParamIns{._field_Decl=jule::new_ptr<_1aba9c88b_Param>(_1aba9c88b_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1abaa0eaa_ParamIns>(_1abaa0eaa_ParamIns{._field_Decl=jule::new_ptr<_1aba9c88b_Param>(_1aba9c88b_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abda9082_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_231740_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1aba96753_CommonSubIdentExprModel>(_1aba96753_CommonSubIdentExprModel{._field_ExprKind=_231740_d.get()._field_Kind, ._field_Expr=_231740_d.get()._field_Model, ._field_Token=_231754_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type75), });;
			}
		}
		else {
			_case_begin_1bc28eb94:;
			{
				_1abcbdace_pushErr(&(*_self_), _231754_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_231740_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_231754_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc28eb0b:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd4210_evalIntTypeStatic(_1abcbd5c3_Eval* _self_, jule::Ptr<_1a97237bc_Token> _235436_ident) {
	;
	{
		auto &_match_expr{ _235436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc29412c:;
			{
				jule::Ptr<_1aba86b94_Const> _235821_c = static__1aba86d81_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1aba841d0_Max(jule::Str("int", 3)))));;
				_235821_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_235821_c, &__jule_any_type49), ._field_Constant=_235821_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1bc294193:;
			{
				jule::Ptr<_1aba86b94_Const> _236621_c = static__1aba86d81_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1aba8409d_Min(jule::Str("int", 3)))));;
				_236621_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_236621_c, &__jule_any_type49), ._field_Constant=_236621_c});;
			}
		}
		else {
			_case_begin_1bc2933b2:;
			{
				_1abcbdace_pushErr(&(*_self_), _235436_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type7),jule::Any(_235436_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc293208:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd451d_evalUintTypeStatic(_1abcbd5c3_Eval* _self_, jule::Ptr<_1a97237bc_Token> _237937_ident) {
	;
	{
		auto &_match_expr{ _237937_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc296daa:;
			{
				jule::Ptr<_1aba86b94_Const> _238321_c = static__1aba86eb3_NewU64(static_cast<jule::U64>(static_cast<jule::U64>(_1aba841d0_Max(jule::Str("uint", 4)))));;
				_238321_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=jule::Any(_238321_c, &__jule_any_type49), ._field_Constant=_238321_c});;
			}
		}
		else {
			_case_begin_1bc2970a8:;
			{
				_1abcbdace_pushErr(&(*_self_), _237937_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type7),jule::Any(_237937_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc297053:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd482b_evalI8TypeStatic(_1abcbd5c3_Eval* _self_, jule::Ptr<_1a97237bc_Token> _239635_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _239635_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc29ad8c:;
			{
				jule::Ptr<_1aba86b94_Const> _240221_c = static__1aba86d81_NewI64(127LL);;
				_240221_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_240221_c, &__jule_any_type49), ._field_Constant=_240221_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1bc29ae03:;
			{
				jule::Ptr<_1aba86b94_Const> _241021_c = static__1aba86d81_NewI64(-128LL);;
				_241021_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_241021_c, &__jule_any_type49), ._field_Constant=_241021_c});;
			}
		}
		else {
			_case_begin_1bc29a199:;
			{
				_1abcbdace_pushErr(&(*_self_), _239635_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type7),jule::Any(_239635_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc29a0ab:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd4b39_evalI16TypeStatic(_1abcbd5c3_Eval* _self_, jule::Ptr<_1a97237bc_Token> _242336_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _242336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc29ed3b:;
			{
				jule::Ptr<_1aba86b94_Const> _242921_c = static__1aba86d81_NewI64(32767LL);;
				_242921_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_242921_c, &__jule_any_type49), ._field_Constant=_242921_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1bc29eda2:;
			{
				jule::Ptr<_1aba86b94_Const> _243721_c = static__1aba86d81_NewI64(-32768LL);;
				_243721_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_243721_c, &__jule_any_type49), ._field_Constant=_243721_c});;
			}
		}
		else {
			_case_begin_1bc29e148:;
			{
				_1abcbdace_pushErr(&(*_self_), _242336_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type7),jule::Any(_242336_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc29e05a:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd4e47_evalI32TypeStatic(_1abcbd5c3_Eval* _self_, jule::Ptr<_1a97237bc_Token> _245036_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _245036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc2a3cda:;
			{
				jule::Ptr<_1aba86b94_Const> _245621_c = static__1aba86d81_NewI64(2147483647LL);;
				_245621_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_245621_c, &__jule_any_type49), ._field_Constant=_245621_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1bc2a3d51:;
			{
				jule::Ptr<_1aba86b94_Const> _246421_c = static__1aba86d81_NewI64(-2147483648LL);;
				_246421_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_246421_c, &__jule_any_type49), ._field_Constant=_246421_c});;
			}
		}
		else {
			_case_begin_1bc2a30e7:;
			{
				_1abcbdace_pushErr(&(*_self_), _245036_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type7),jule::Any(_245036_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc2a3009:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd5255_evalI64TypeStatic(_1abcbd5c3_Eval* _self_, jule::Ptr<_1a97237bc_Token> _247736_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _247736_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc2a7c89:;
			{
				jule::Ptr<_1aba86b94_Const> _248321_c = static__1aba86d81_NewI64(jule::MAX_I64);;
				_248321_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_248321_c, &__jule_any_type49), ._field_Constant=_248321_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1bc2a7d00:;
			{
				jule::Ptr<_1aba86b94_Const> _249121_c = static__1aba86d81_NewI64(jule::MIN_I64);;
				_249121_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_249121_c, &__jule_any_type49), ._field_Constant=_249121_c});;
			}
		}
		else {
			_case_begin_1bc2a7096:;
			{
				_1abcbdace_pushErr(&(*_self_), _247736_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type7),jule::Any(_247736_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc2a6ea8:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd5563_evalU8TypeStatic(_1abcbd5c3_Eval* _self_, jule::Ptr<_1a97237bc_Token> _250435_ident) {
	;
	;
	{
		auto &_match_expr{ _250435_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc2aae13:;
			{
				jule::Ptr<_1aba86b94_Const> _250921_c = static__1aba86eb3_NewU64(255LLU);;
				_250921_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=jule::Any(_250921_c, &__jule_any_type49), ._field_Constant=_250921_c});;
			}
		}
		else {
			_case_begin_1bc2aa781:;
			{
				_1abcbdace_pushErr(&(*_self_), _250435_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type7),jule::Any(_250435_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc2aa9d4:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd5871_evalU16TypeStatic(_1abcbd5c3_Eval* _self_, jule::Ptr<_1a97237bc_Token> _252236_ident) {
	;
	;
	{
		auto &_match_expr{ _252236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc2ad960:;
			{
				jule::Ptr<_1aba86b94_Const> _252721_c = static__1aba86eb3_NewU64(65535LLU);;
				_252721_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=jule::Any(_252721_c, &__jule_any_type49), ._field_Constant=_252721_c});;
			}
		}
		else {
			_case_begin_1bc2ad245:;
			{
				_1abcbdace_pushErr(&(*_self_), _252236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type7),jule::Any(_252236_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc2ad4a9:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd5b7e_evalU32TypeStatic(_1abcbd5c3_Eval* _self_, jule::Ptr<_1a97237bc_Token> _254036_ident) {
	;
	;
	{
		auto &_match_expr{ _254036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc2b1435:;
			{
				jule::Ptr<_1aba86b94_Const> _254521_c = static__1aba86eb3_NewU64(4294967295LLU);;
				_254521_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=jule::Any(_254521_c, &__jule_any_type49), ._field_Constant=_254521_c});;
			}
		}
		else {
			_case_begin_1bc2b0c1a:;
			{
				_1abcbdace_pushErr(&(*_self_), _254036_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type7),jule::Any(_254036_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc2b0e7e:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd5e8c_evalU64TypeStatic(_1abcbd5c3_Eval* _self_, jule::Ptr<_1a97237bc_Token> _255836_ident) {
	;
	;
	{
		auto &_match_expr{ _255836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc2b3e0a:;
			{
				jule::Ptr<_1aba86b94_Const> _256321_c = static__1aba86eb3_NewU64(jule::MAX_U64);;
				_256321_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=jule::Any(_256321_c, &__jule_any_type49), ._field_Constant=_256321_c});;
			}
		}
		else {
			_case_begin_1bc2b36e0:;
			{
				_1abcbdace_pushErr(&(*_self_), _255836_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type7),jule::Any(_255836_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc2b3954:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd629a_evalF32TypeStatic(_1abcbd5c3_Eval* _self_, jule::Ptr<_1a97237bc_Token> _257636_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _257636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc2b798b:;
			{
				jule::Ptr<_1aba86b94_Const> _258321_c = static__1aba87359_NewF64(340282346638528860000000000000000000000.0);;
				_258321_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_258321_c, &__jule_any_type49), ._field_Constant=_258321_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1bc2b7a02:;
			{
				jule::Ptr<_1aba86b94_Const> _259121_c = static__1aba87359_NewF64(-340282346638528860000000000000000000000.0);;
				_259121_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_259121_c, &__jule_any_type49), ._field_Constant=_259121_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1bc2b7837:;
			{
				jule::Ptr<_1aba86b94_Const> _259921_c = static__1aba87359_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_259921_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_259921_c, &__jule_any_type49), ._field_Constant=_259921_c});;
			}
		}
		else {
			_case_begin_1bc2b6bee:;
			{
				_1abcbdace_pushErr(&(*_self_), _257636_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type101),jule::Any(_257636_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc2b6b99:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd65a8_evalF64TypeStatic(_1abcbd5c3_Eval* _self_, jule::Ptr<_1a97237bc_Token> _261236_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc2bcd6a:;
			{
				jule::Ptr<_1aba86b94_Const> _261921_c = static__1aba87359_NewF64(jule::MAX_F64);;
				_261921_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_261921_c, &__jule_any_type49), ._field_Constant=_261921_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1bc2bcdd1:;
			{
				jule::Ptr<_1aba86b94_Const> _262721_c = static__1aba87359_NewF64(jule::MIN_F64);;
				_262721_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_262721_c, &__jule_any_type49), ._field_Constant=_262721_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1bc2bcc16:;
			{
				jule::Ptr<_1aba86b94_Const> _263521_c = static__1aba87359_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_263521_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_263521_c, &__jule_any_type49), ._field_Constant=_263521_c});;
			}
		}
		else {
			_case_begin_1bc2bc0cd:;
			{
				_1abcbdace_pushErr(&(*_self_), _261236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type101),jule::Any(_261236_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc2bc078:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd6960_evalPrimStatic(_1abcbd5c3_Eval* _self_, jule::Str _264833_kind, jule::Ptr<_1a97237bc_Token> _264844_ident) {
	{
		auto &_match_expr{ _264833_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1bc2c0cd5:;
			{
				return _1abcd4210_evalIntTypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1bc2c2259:;
			{
				return _1abcd451d_evalUintTypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1bc2c22c0:;
			{
				return _1abcd482b_evalI8TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1bc2c16cb:;
			{
				return _1abcd4b39_evalI16TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1bc2c1742:;
			{
				return _1abcd4e47_evalI32TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1bc2c17a8:;
			{
				return _1abcd5255_evalI64TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1bc2c181e:;
			{
				return _1abcd5563_evalU8TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1bc2c2336:;
			{
				return _1abcd5871_evalU16TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1bc2c239c:;
			{
				return _1abcd5b7e_evalU32TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1bc2c2413:;
			{
				return _1abcd5e8c_evalU64TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1bc2c2479:;
			{
				return _1abcd629a_evalF32TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1bc2c24e0:;
			{
				return _1abcd65a8_evalF64TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else {
			_case_begin_1bc2bc287:;
			{
				_1abcbdace_pushErr(&(*_self_), _264844_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_264833_kind, &__jule_any_type7),jule::Any(_264844_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc2bd046:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd6d17_evalTypeStatic(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data> _268037_d, jule::Ptr<_1ab07643c_SubIdentExpr> _268051_si) {
	{
		
		if ((_1abce9d6e_Prim(_268037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc2c767c:;
			{
				return _1abcd6960_evalPrimStatic(&(*_self_), _1abceca97_Str(_1abce9d6e_Prim(_268037_d.get()._field_Kind.ptr()).ptr()),_268051_si.get()._field_Ident);;
			}
		}
		else if ((_1abcea5ab_Enum(_268037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc2c76e3:;
			{
				return _1abcd24d8_evalEnumStatic(&(*_self_), _1abcea5ab_Enum(_268037_d.get()._field_Kind.ptr()),_268051_si.get()._field_Ident);;
			}
		}
		else if ((_1abcea820_TypeEnum(_268037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc2c74d4:;
			{
				return _1abcd2890_evalTypeEnumStatic(&(*_self_), _1abcea820_TypeEnum(_268037_d.get()._field_Kind.ptr()),_268051_si.get()._field_Ident);;
			}
		}
		else if ((_1abceb2c1_Struct(_268037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc2c754a:;
			{
				return _1abcd2c47_evalStructStatic(&(*_self_), _1abceb2c1_Struct(_268037_d.get()._field_Kind.ptr()),_268051_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1bc2c669d:;
			{
				_1abcbdace_pushErr(&(*_self_), _268051_si.get()._field_Ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_268037_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc2c6604:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd71be_evalObjSubIdent(_1abcbd5c3_Eval* _self_, jule::Ptr<_1abcbba55_Data> _269638_d, jule::Ptr<_1ab07643c_SubIdentExpr> _269652_si) {
	if (_1a9726061_IsIgnoreIdent(_269652_si.get()._field_Ident.get()._field_Kind)) {
		_1abcbdace_pushErr(&(*_self_), _269652_si.get()._field_Ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abce79d7_TypeKind> _270217_kind = _269638_d.get()._field_Kind;;
	{
		
		if ((_1abcea347_Ptr(_269638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc2cc3b8:;
			{
				jule::Ptr<_1abd0452c_Ptr> _270517_ptr = _1abcea347_Ptr(_269638_d.get()._field_Kind.ptr());;
				if (_1abd05000_IsUnsafe(_270517_ptr.ptr())) {
					goto _match_end_1bc2cc297;
				};
				if (((!(_269652_si.get()._field_IsSelf)) && (!(_1abcbe519_isUnsafe(&(*_self_)))))) {
					_1abcbdace_pushErr(&(*_self_), _269652_si.get()._field_Ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_270217_kind=_1abcea347_Ptr(_269638_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1abcea0d3_Sptr(_269638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc2cc42e:;
			{
				_270217_kind=_1abcea0d3_Sptr(_269638_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1bc2cc297:;
	};
	{
		
		if ((_1abceb535_Trait(_269638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc2ced7c:;
			{
				return _1abcd3198_evalTraitSubIdent(&(*_self_), _269638_d,_1abceb535_Trait(_269638_d.get()._field_Kind.ptr()),_269652_si.get()._field_Ident);;
			}
		}
		else if ((_1abceb2c1_Struct(_270217_kind.ptr()) != nullptr)) {
			_case_begin_1bc2cee04:;
			{
				jule::Ptr<_1ab08a583_StructIns> _272117_s = _1abceb2c1_Struct(_270217_kind.ptr());;
				if (_1abce3807_isInstancedStruct(_272117_s)) {
					jule::Bool _272325_usedReferenceElem = (_1abcea0d3_Sptr(_269638_d.get()._field_Kind.ptr()) != nullptr);;
					return _1abcd3693_evalStructSubIdent(&(*_self_), _269638_d,_1abceb2c1_Struct(_270217_kind.ptr()),_269652_si,_272325_usedReferenceElem);;
				};
			}
		}
		else if ((_1abceace8_Slc(_270217_kind.ptr()) != nullptr)) {
			_case_begin_1bc2cee7b:;
			{
				return _1abcd3a4a_evalSliceSubIdent(&(*_self_), _269638_d,_269652_si.get()._field_Ident);;
			}
		}
		else if ((_1abceaa84_Arr(_270217_kind.ptr()) != nullptr)) {
			_case_begin_1bc2d0003:;
			{
				return _1abcd3e02_evalArraySubIdent(&(*_self_), _269638_d,_269652_si.get()._field_Ident);;
			}
		}
		_match_end_1bc2ceca0:;
	};
	_1abcbdace_pushErr(&(*_self_), _269652_si.get()._field_Ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_269638_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
	return nullptr;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcd74cc_evalSubIdent(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab07643c_SubIdentExpr> _273536_si) {
	jule::Ptr<_1abce79d7_TypeKind> _273617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_273617_prefix;
	});;
	jule::Ptr<_1abcbba55_Data> _274017_d = _1abcd88c9_evalExprKind(_self_, _273536_si.get()._field_Expr.get()._field_Kind);;
	if ((_274017_d == nullptr)) {
		return nullptr;;
	};
	if (_274017_d.get()._field_Decl) {
		return _1abcd6d17_evalTypeStatic(_self_.ptr(), _274017_d,_273536_si);;
	};
	return _1abcd71be_evalObjSubIdent(_self_.ptr(), _274017_d,_273536_si);;
}



inline jule::Ptr<_1abcbba55_Data> _1abcd77da_evalTuple(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab073b65_TupleExpr> _275233_tup) {
	jule::Ptr<_1abd024a3_Tuple> _275317_tupT = jule::new_ptr<_1abd024a3_Tuple>();;
	_275317_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1abce79d7_TypeKind>>::alloc(0LL, _275233_tup.get()._field_Expr.len());
	jule::Ptr<_1aba96a50_TupleExprModel> _275617_model = jule::new_ptr<_1aba96a50_TupleExprModel>(_1aba96a50_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1abcbba55_Data>>::alloc(0LL, _275233_tup.get()._field_Expr.len())});;
	jule::Bool _276017_ok = true;;
	{
		auto &expr = _275233_tup.get()._field_Expr;
		auto it = expr.begin();
		_iter_begin_1bc2ddd8b:;
		if (it != expr.end()) {
			jule::Ptr<_1ab072ed8_Expr> _276121_expr = *it;
			{
				jule::Ptr<_1abcbba55_Data> _276221_d = _1abcd88c9_evalExprKind(_self_, _276121_expr.get()._field_Kind);;
				if ((_276221_d == nullptr)) {
					_276017_ok=false;
					goto _iter_next_1bc2ddd8b;
				};
				_275317_tupT.get()._field_Types = jule::alloc_for_append(_275317_tupT.get()._field_Types,1);_275317_tupT.get()._field_Types.__push(_276221_d.get()._field_Kind);;
				_275617_model.get()._field_Datas = jule::alloc_for_append(_275617_model.get()._field_Datas,1);_275617_model.get()._field_Datas.__push(_276221_d);;
			}
			_iter_next_1bc2ddd8b:;
			++it;
			goto _iter_begin_1bc2ddd8b;
		}
		_iter_end_1bc2ddd8b:;
	};
	if ((!(_276017_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_275317_tupT, 9)}), ._field_Model=jule::Any(_275617_model, &__jule_any_type90), });;
}



inline jule::Ptr<_1abcbba55_Data> _1abcd7b92_evalMap(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1abd02ecb_Map> _278131_m, jule::Ptr<_1ab07861a_BraceLit> _278144_lit) {
	jule::Ptr<_1aba94267_MapExprModel> _278217_model = jule::new_ptr<_1aba94267_MapExprModel>(_1aba94267_MapExprModel{._field_KeyKind=_278131_m.get()._field_Key, ._field_ValKind=_278131_m.get()._field_Val, });;
	{
		auto &expr = _278144_lit.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1bc2e1ee3:;
		if (it != expr.end()) {
			jule::Ptr<_1ab072ed8_Expr> _278721_expr = *it;
			{
				{
					auto &_match_expr{ _278721_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type87) {
						_case_begin_1bc2e270d:;
						{
							goto _match_end_1bc2e27b8;
						}
					}
					else {
						_case_begin_1bc2e2950:;
						{
							_1abcbdace_pushErr(_self_.ptr(), _278144_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1bc2e27b8:;
				};
				jule::Ptr<_1ab078de0_KeyValPair> _279721_pair = _278721_expr.get()._field_Kind.cast_ptr<_1ab078de0_KeyValPair>(&__jule_any_type87);;
				jule::Ptr<_1abcbba55_Data> _279921_key = _1abcd88c9_evalExprKind(_self_, _279721_pair.get()._field_Key.get()._field_Kind);;
				if ((_279921_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1abcbba55_Data> _280421_val = _1abcd88c9_evalExprKind(_self_, _279721_pair.get()._field_Val.get()._field_Kind);;
				if ((_280421_val == nullptr)) {
					return nullptr;;
				};
				_1abc60a93_checkAssignType(_self_.get()._field_s, false,_278131_m.get()._field_Key,_279921_key,_279721_pair.get()._field_Colon);
				_1abc60a93_checkAssignType(_self_.get()._field_s, false,_278131_m.get()._field_Val,_280421_val,_279721_pair.get()._field_Colon);
				_278217_model.get()._field_Entries = jule::alloc_for_append(_278217_model.get()._field_Entries,1);_278217_model.get()._field_Entries.__push(jule::new_ptr<_1aba93ce4_KeyValPairExprModel>(_1aba93ce4_KeyValPairExprModel{._field_Key=_279921_key.get()._field_Model, ._field_Val=_280421_val.get()._field_Model}));;
			}
			_iter_next_1bc2e1ee3:;
			++it;
			goto _iter_begin_1bc2e1ee3;
		}
		_iter_end_1bc2e1ee3:;
	};
	return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_278131_m, 10)}), ._field_Mutable=true, ._field_Model=jule::Any(_278217_model, &__jule_any_type106), });;
}



inline jule::Ptr<_1abcbba55_Data> _1abcd7ea0_evalBraceLit(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab07861a_BraceLit> _282536_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1bc2e7c52:;
			{
				_1abcbdace_pushErr(_self_.ptr(), _282536_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1abceb799_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1bc2e7cb8:;
			{
				return _1abcd7b92_evalMap(_self_, _1abceb799_Map(_self_.get()._field_prefix.ptr()),_282536_lit);;
			}
		}
		else if ((_1abceb2c1_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1bc2e7acb:;
			{
				return _1abcd02d8_evalStructLitExplicit(_self_, _1abceb2c1_Struct(_self_.get()._field_prefix.ptr()),_282536_lit.get()._field_Exprs,_282536_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_1bc2e70a3:;
			{
				_1abcbdace_pushErr(_self_.ptr(), _282536_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc2e6ed7:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd82ad_evalAnonFn(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab080446_FnDecl> _284034_decl) {
	_1abd06353_typeChecker _284117_tc = _1abd06353_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1abaa1d79_FnIns> _284617_ins = _1abd0cb95_buildFn(&_284117_tc, _284034_decl);;
	if ((_284617_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1abac584d_scopeChecker>>()) {
			_case_begin_1bc2ec240:;
			{
				jule::Ptr<_1abac584d_scopeChecker> _285221_sc = _self_.get()._field_lookup.operator jule::Ptr<_1abac584d_scopeChecker>();;
				jule::Ptr<_1abac584d_scopeChecker> _285321_scc = _1abad58b3_newChildChecker(_285221_sc);;
				_285321_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1abac45b6_scopeLabel>>>(nullptr);
				_285321_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1abac4a39_scopeGoto>>>(nullptr);
				_285321_scc.get()._field_owner=nullptr;
				_285321_scc.get()._field_childIndex=0LL;
				_285321_scc.get()._field_it=0LLU;
				_285321_scc.get()._field_cse=0LLU;
				_285321_scc.get()._field_owner=_284617_ins;
				_1abc6e475_checkFnInsSc(_self_.get()._field_s.ptr(), _284617_ins,_285321_scc);
			}
		}
		else {
			_case_begin_1bc2eb838:;
			{
				_1abc6ea19_checkFnIns(_self_.get()._field_s, _284617_ins);
			}
		}
		_match_end_1bc2eb7d3:;
	};
	return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_284617_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1aba9393c_AnonFnExprModel>(_1aba9393c_AnonFnExprModel{._field_Func=_284617_ins, ._field_Global=_1abcbe77d_isGlobal(_self_.ptr())}), &__jule_any_type107), });;
}



inline jule::Ptr<_1abcbba55_Data> _1abcd85bb_evalBinop(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab0768b0_BinopExpr> _287533_op) {
	_1abcdb206_binaryEval _287617_bs = static__1abcdb7cd_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1abcec734_Prim> _287917_prim = _1abce9d6e_Prim(_self_.get()._field_prefix.ptr());;
		if (((_287917_prim == nullptr) || (!(_1aba86930_IsNum(_1abceca97_Str(_287917_prim.ptr())))))) {
			jule::Ptr<_1abce79d7_TypeKind> _288125_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_288125_prefix;
			});;
			return _1abce1c89_eval(&_287617_bs, _287533_op);;
		};
	};
	return _1abce1c89_eval(&_287617_bs, _287533_op);;
}



inline jule::Ptr<_1abcbba55_Data> _1abcd88c9_evalExprKind(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Any _289036_kind) {
	{
		auto &_match_expr{ _289036_kind };
		
		if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1bc300e9c:;
			{
				jule::Ptr<_1ab0732c4_RangeExpr> _289321_e = _289036_kind.cast_ptr<_1ab0732c4_RangeExpr>(&__jule_any_type108);;
				return _1abcd88c9_evalExprKind(_self_, _289321_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1bc303d4b:;
			{
				return _1abcc142d_evalLit(_self_.ptr(), _289036_kind.cast_ptr<_1ab07401c_LitExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1bc303db2:;
			{
				return _1abcc58d8_evalIdent(_self_.ptr(), _289036_kind.cast_ptr<_1ab074b99_IdentExpr>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bc3038b7:;
			{
				return _1abcc5be6_evalUnary(_self_, _289036_kind.cast_ptr<_1ab0753a3_UnaryExpr>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1bc30392d:;
			{
				return _1abcc6004_evalVariadic(_self_, _289036_kind.cast_ptr<_1ab07575a_VariadicExpr>(&__jule_any_type84));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bc3039a5:;
			{
				return _1abcc6312_evalUnsafe(_self_, _289036_kind.cast_ptr<_1ab074726_UnsafeExpr>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1bc303a2c:;
			{
				return _1abcc6d7e_evalSliceExpr(_self_, _289036_kind.cast_ptr<_1ab0795c7_SliceExpr>(&__jule_any_type103));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1bc303e39:;
			{
				return _1abcca1c3_evalIndexing(_self_, _289036_kind.cast_ptr<_1ab079e46_IndexingExpr>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bc303eb1:;
			{
				return _1abccb38e_evalSlicing(_self_, _289036_kind.cast_ptr<_1ab07a551_SlicingExpr>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bc304038:;
			{
				return _1abccea79_evalCast(_self_, _289036_kind.cast_ptr<_1ab075b12_CastExpr>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bc3040b0:;
			{
				return _1abcced87_evalNsSelection(_self_.ptr(), _289036_kind.cast_ptr<_1ab075eb9_NsSelectionExpr>(&__jule_any_type98));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1bc304137:;
			{
				return _1abcd05e6_evalStructLit(_self_, _289036_kind.cast_ptr<_1ab078197_StructLit>(&__jule_any_type114));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bc3041ae:;
			{
				return _1abcd0b68_evalType(_self_.ptr(), _289036_kind.cast_ptr<_1ab06d9b7_TypeDecl>(&__jule_any_type97));;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1bc304236:;
			{
				return _1abcd2131_evalFnCall(_self_, _289036_kind.cast_ptr<_1ab076eba_FnCallExpr>(&__jule_any_type115));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bc3042ad:;
			{
				return _1abcd74cc_evalSubIdent(_self_, _289036_kind.cast_ptr<_1ab07643c_SubIdentExpr>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bc304335:;
			{
				return _1abcd77da_evalTuple(_self_, _289036_kind.cast_ptr<_1ab073b65_TupleExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1bc3043ac:;
			{
				return _1abcd7ea0_evalBraceLit(_self_, _289036_kind.cast_ptr<_1ab07861a_BraceLit>(&__jule_any_type116));;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bc304434:;
			{
				return _1abcd82ad_evalAnonFn(_self_, _289036_kind.cast_ptr<_1ab080446_FnDecl>(&__jule_any_type16));;
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1bc3044ab:;
			{
				return _1abcd85bb_evalBinop(_self_, _289036_kind.cast_ptr<_1ab0768b0_BinopExpr>(&__jule_any_type117));;
			}
		}
		else {
			_case_begin_1bc3037b8:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc303763:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcd8bd7_eval(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab072ed8_Expr> _293828_expr) {
	jule::Ptr<_1abcbba55_Data> _293917_d = _1abcd88c9_evalExprKind(_self_, _293828_expr.get()._field_Kind);;
	if (((_293917_d == nullptr) || (_293917_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1abceb05c_Fn(_293917_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc30dcce:;
			{
				jule::Ptr<_1abaa1d79_FnIns> _294621_f = _1abceb05c_Fn(_293917_d.get()._field_Kind.ptr());;
				if (_1abaa3210_IsBuiltin(_294621_f.ptr())) {
					goto _match_end_1bc30db9c;
				};
				if ((_294621_f.get()._field_Generics.len() != _294621_f.get()._field_Decl.get()._field_Generics.len())) {
					_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _293828_expr.get()._field_Token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (((!(_294621_f.get()._field_Decl.get()._field_Statically)) && _1aba9e89e_IsMethod(_294621_f.get()._field_Decl.ptr()))) {
					_1abc58bac_pushErr(_self_.get()._field_s.ptr(), _293828_expr.get()._field_Token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1bc30db9c:;
	};
	return _293917_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcd8ee5_evalExpr(jule::Ptr<_1abcbd5c3_Eval> _self_, jule::Ptr<_1ab072ed8_Expr> _296432_expr) {
	jule::Ptr<_1abcbba55_Data> _296517_d = _1abcd8bd7_eval(_self_, _296432_expr);;
	{
		
		if ((_296517_d == nullptr)) {
			_case_begin_1bc312909:;
			{
				return nullptr;;
			}
		}
		else if (_296517_d.get()._field_Decl) {
			_case_begin_1bc312981:;
			{
				_1abcbdace_pushErr(_self_.ptr(), _296432_expr.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1bc31284e:;
			{
				return _296517_d;;
			}
		}
		_match_end_1bc3127e9:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1abcbd5c3_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1abcd9468_unaryEval static__1abcd991e_new(jule::Ptr<_1abcbd5c3_Eval> _298523_e) {
	return _1abcd9468_unaryEval{._field_e=_298523_e, };;
}



inline void _1abcd9aea_minus(_1abcd9468_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1bc314488:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1abce9d6e_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc314158:;
			{
				if ((!(_1aba86930_IsNum(_1abce7dd3_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1abceb2c1_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3141be:;
			{
				if ((_1abceb2c1_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bc3140e2:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bc313e16:;
	};
	if (_1abcbc418_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1aba8924b_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc317b62:;
				{
					_1aba88811_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1aba87d60_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1aba88a75_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc317bd9:;
				{
					_1aba88338_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1aba87887_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1aba88ba7_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc317c61:;
				{
					_1aba88338_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1aba87e92_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1bc317a74:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba91297_UnaryExprModel>(_1aba91297_UnaryExprModel{._field_Expr=jule::new_ptr<_1abcbba55_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type76);
}



inline void _1abcd9cc6_plus(_1abcd9468_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1bc31c42a:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1abce9d6e_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc31c0ea:;
			{
				if ((!(_1aba86930_IsNum(_1abce7dd3_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1abceb2c1_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc31c161:;
			{
				if ((_1abceb2c1_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bc31c084:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bc31beb8:;
	};
	if (_1abcbc418_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1aba8924b_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc320b04:;
				{
					_1aba88811_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1aba87d60_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1aba88a75_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc320b7b:;
				{
					_1aba88338_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1aba87887_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1aba88ba7_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc320c03:;
				{
					_1aba88338_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1aba87e92_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1bc320a16:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba91297_UnaryExprModel>(_1aba91297_UnaryExprModel{._field_Expr=jule::new_ptr<_1abcbba55_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type76);
}



inline void _1abcd9ea2_caret(_1abcd9468_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1bc32539a:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1abce9d6e_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc32506a:;
			{
				if ((!(_1aba866bb_IsInt(_1abce7dd3_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1abceb2c1_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3250d1:;
			{
				if ((_1abceb2c1_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bc325004:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bc324e38:;
	};
	if (_1abcbc418_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1aba88a75_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc328a63:;
				{
					_1aba88338_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1aba87887_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1aba88ba7_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc328ada:;
				{
					_1aba8846a_SetU64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1aba879b9_ReadU64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1bc328986:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba91297_UnaryExprModel>(_1aba91297_UnaryExprModel{._field_Expr=jule::new_ptr<_1abcbba55_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type76);
}



inline void _1abcda17d_excl(_1abcd9468_unaryEval* _self_) {
	jule::Ptr<_1abcec734_Prim> _310413_t = _1abce9d6e_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
	if (((_310413_t == nullptr) || (!(_1abd00704_IsBool(_310413_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1abcbc418_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1aba88cd9_IsBool((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc32d606:;
				{
					_1aba8859c_SetBool((*_self_)._field_d.get()._field_Constant.ptr(), (!(_1aba87aeb_ReadBool((*_self_)._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1bc32d507:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba91297_UnaryExprModel>(_1aba91297_UnaryExprModel{._field_Expr=jule::new_ptr<_1abcbba55_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type76);
}



inline void _1abcda359_star(_1abcd9468_unaryEval* _self_) {
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba91297_UnaryExprModel>(_1aba91297_UnaryExprModel{._field_Expr=jule::new_ptr<_1abcbba55_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type76);
	{
		
		if ((_1abcea347_Ptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc33164d:;
			{
				if ((!(_1abcbe519_isUnsafe((*_self_)._field_e.ptr())))) {
					_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1abd0452c_Ptr> _313621_t = _1abcea347_Ptr((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1abd05000_IsUnsafe(_313621_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_Kind=_313621_t.get()._field_Elem;
			}
		}
		else if ((_1abcea0d3_Sptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc33131d:;
			{
				(*_self_)._field_d.get()._field_Kind=_1abcea0d3_Sptr((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1bc3312a7:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bc331241:;
	};
	(*_self_)._field_d.get()._field_Constant=nullptr;
	(*_self_)._field_d.get()._field_Lvalue=true;
}



inline void _1abcda535_amper(_1abcd9468_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1bc3361d0:;
			{
				jule::Ptr<_1aba91a4a_StructLitExprModel> _315621_lit = (*_self_)._field_d.get()._field_Model.cast_ptr<_1aba91a4a_StructLitExprModel>(&__jule_any_type104);;
				_1abce2a26_makeStructLitAlloc((*_self_)._field_d,_315621_lit);
			}
		}
		else {
			_case_begin_1bc335aa3:;
			{
				{
					
					if (_1abd0ed1d_canGetPtr((*_self_)._field_d)) {
						_case_begin_1bc336730:;
						{
							(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(jule::new_ptr<_1abd0452c_Ptr>(_1abd0452c_Ptr{._field_Elem=(*_self_)._field_d.get()._field_Kind}), 12)});
							(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba91297_UnaryExprModel>(_1aba91297_UnaryExprModel{._field_Expr=jule::new_ptr<_1abcbba55_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type76);
						}
					}
					else {
						_case_begin_1bc336169:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1bc33609d:;
				};
			}
		}
		_match_end_1bc335a4d:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_Constant=nullptr;
		(*_self_)._field_d.get()._field_Lvalue=false;
	};
}



inline void _1abcda711_typeDecl(_1abcd9468_unaryEval* _self_) {
	_1abd06353_typeChecker _318017_tc = _1abd06353_typeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_rootLookup=(*_self_)._field_e.get()._field_lookup, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_errorToken=(*_self_)._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1bc3398ed:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd0b534_buildPtrFromType(&_318017_tc, (*_self_)._field_d.get()._field_Kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1bc33c15e:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd0ae18_buildSptrFromType(&_318017_tc, (*_self_)._field_d.get()._field_Kind), 7)});
			}
		}
		else {
			_case_begin_1bc33a943:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str((*_self_)._field_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bc33a8dd:;
	};
	(*_self_)._field_d.get()._field_Decl=true;
}



inline void _1abcda8dc_evalData(_1abcd9468_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1bc33e5c3:;
			{
				jule::Ptr<_1abce79d7_TypeKind> _320321_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1abcd88c9_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
				(*_self_)._field_e.get()._field_prefix=_320321_prefix;
			}
		}
		else {
			_case_begin_1bc33e183:;
			{
				(*_self_)._field_d=_1abcd88c9_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_1bc33e10b:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcdabb7_eval(_1abcd9468_unaryEval* _self_, jule::Ptr<_1ab0753a3_UnaryExpr> _321227_u) {
	(*_self_)._field_u=_321227_u;
	_1abcda8dc_evalData(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*_self_)._field_d.get()._field_Decl) {
		_1abcda711_typeDecl(&(*_self_));
		return (*_self_)._field_d;;
	};
	jule::Ptr<_1abce79d7_TypeKind> _322313_kind = (*_self_)._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1bc343990:;
			{
				_1abcd9aea_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1bc343473:;
			{
				_1abcd9cc6_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1bc3434d9:;
			{
				_1abcd9ea2_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1bc343550:;
			{
				_1abcda17d_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1bc3435b6:;
			{
				_1abcda359_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1bc343b38:;
			{
				_1abcda535_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1bc34340c:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1bc3433a7:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1bc3459b4:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str(_322313_kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		else if (_1abcbc418_IsConst((*_self_)._field_d.ptr())) {
			_case_begin_1bc343bb0:;
			{
				(*_self_)._field_d.get()._field_Model=jule::Any((*_self_)._field_d.get()._field_Constant, &__jule_any_type49);
			}
		}
		_match_end_1bc34595e:;
	};
	(*_self_)._field_d.get()._field_Mutable=true;
	return (*_self_)._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcd9468_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1abcdb206_binaryEval static__1abcdb7cd_newPlain(jule::Ptr<_1abcbd5c3_Eval> _326128_e) {
	return _1abcdb206_binaryEval{._field_e=_326128_e, };;
}



inline _1abcdb206_binaryEval static__1abcdbb1e_new(jule::Ptr<_1abcbd5c3_Eval> _326723_e, jule::Ptr<_1a97237bc_Token> _326737_op) {
	return _1abcdb206_binaryEval{._field_e=_326723_e, ._field_op=_326737_op};;
}



inline jule::Bool _1abcdbd83_checkTypeCompatibility(_1abcdb206_binaryEval* _self_) {
	return _1abc60ee4_checkTypeCompatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_Kind,(*_self_)._field_r.get()._field_Kind,(*_self_)._field_op);;
}



inline jule::Bool _1abcdc12a_checkStructCommonOperatorCompatibility(_1abcdb206_binaryEval* _self_) {
	jule::Ptr<_1abaa1d79_FnIns> _328117_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1bc349ea2:;
			{
				_328117_overload=_1abceb2c1_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1bc34b5d0:;
			{
				_328117_overload=_1abceb2c1_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1bc34a436:;
			{
				_328117_overload=_1abceb2c1_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1bc34a49c:;
			{
				_328117_overload=_1abceb2c1_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1bc34a513:;
			{
				_328117_overload=_1abceb2c1_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1bc34a579:;
			{
				_328117_overload=_1abceb2c1_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1bc34b811:;
			{
				_328117_overload=_1abceb2c1_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1bc34b877:;
			{
				_328117_overload=_1abceb2c1_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1bc34b8dd:;
			{
				_328117_overload=_1abceb2c1_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1bc34b954:;
			{
				_328117_overload=_1abceb2c1_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1bc34a3c0:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return false;;
			}
		}
		_match_end_1bc34a36a:;
	};
	if ((_328117_overload == nullptr)) {
		_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
		return false;;
	};
	jule::Ptr<_1abaa0eaa_ParamIns> _331317_p = _328117_overload.get()._field_Params[1LL];;
	return _1abc60a93_checkAssignType((*_self_)._field_e.get()._field_s, _331317_p.get()._field_Decl.get()._field_Reference,_331317_p.get()._field_Kind,(*_self_)._field_r,(*_self_)._field_op);;
}



inline jule::Ptr<_1abcbba55_Data> _1abcdc3c2_evalNil(_1abcdb206_binaryEval* _self_) {
	if ((!(_1abce93bd_NilCompatible((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type118),jule::Any(_1abce7dd3_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type7)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bc35486e:;
			{
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1bc355ad4:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(jule::Str("nil", 3), &__jule_any_type118)}));
				return nullptr;;
			}
		}
		_match_end_1bc355a7e:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcdc636_evalEnum(_1abcdb206_binaryEval* _self_) {
	jule::Ptr<_1abab3220_Enum> _333817_enm = _1abcea5ab_Enum((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bc357c5c:;
			{
				jule::Ptr<_1abce79d7_TypeKind> _334221_rkind = (*_self_)._field_r.get()._field_Kind;;
				if ((_1abcea5ab_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_334221_rkind=_1abcea5ab_Enum((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1abc60ee4_checkTypeCompatibility((*_self_)._field_e.get()._field_s, _333817_enm.get()._field_Kind.get()._field_Kind,_334221_rkind,(*_self_)._field_op)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1bc357c07:;
	};
	if (((_1abcea5ab_Enum((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr) || (_333817_enm != _1abcea5ab_Enum((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_333817_enm.get()._field_Ident, &__jule_any_type7),jule::Any(_1abce7dd3_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type7)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1bc3575a8:;
			{
				if ((!(_1aba86930_IsNum(_1abce7dd3_Str(_333817_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_333817_enm.get()._field_Ident, &__jule_any_type7)}));
					return nullptr;;
				};
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1bc35d26d:;
			{
				if (((_1abce9d6e_Prim(_333817_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1aba866bb_IsInt(_1abceca97_Str(_1abce9d6e_Prim(_333817_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_333817_enm.get()._field_Ident, &__jule_any_type7)}));
				};
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_1bc35c1b2:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_333817_enm.get()._field_Ident, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc35c0e6:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcdc89a_evalTypeEnum(_1abcdb206_binaryEval* _self_) {
	jule::Ptr<_1abab481a_TypeEnum> _338917_enm = _1abcea820_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr());;
	if ((!(_1abcdbd83_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bc36344e:;
			{
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1bc362ea9:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1abab4b4a_Str(_338917_enm.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc363086:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcdcb0e_evalSptr(_1abcdb206_binaryEval* _self_) {
	if ((!(_1abcdbd83_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bc365044:;
			{
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1bc365165:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc364692:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcdcd73_evalPtr(_1abcdb206_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1bc366e14:;
			{
				if ((!(_1abcdbd83_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1bc368146:;
			{
				if ((_1abcea347_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_1abcbba55_Data> ___jule_assign_arg = (*_self_)._field_r;
						jule::Ptr<_1abcbba55_Data> _1___jule_assign_arg = (*_self_)._field_l;
						(*_self_)._field_l = ___jule_assign_arg;
						(*_self_)._field_r = _1___jule_assign_arg;
					});
				};
				if (_1abd05000_IsUnsafe(_1abcea347_Ptr((*_self_)._field_l.get()._field_Kind.ptr()).ptr())) {
					_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				};
				if ((!(_1abce3b6a_isPtrArithmeticCompatible((*_self_)._field_l,(*_self_)._field_r)))) {
					_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type7)}));
					return nullptr;;
				};
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_1bc366892:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc365374:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcdd0d7_evalArr(_1abcdb206_binaryEval* _self_) {
	if ((!(_1abcdbd83_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bc36d25b:;
			{
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1bc36d3d2:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc36d37c:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcdd34b_evalSlc(_1abcdb206_binaryEval* _self_) {
	if ((!(_1abcdbd83_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bc37045b:;
			{
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1bc37057c:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc36eaa9:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcdd5b0_evalFn(_1abcdb206_binaryEval* _self_) {
	if ((!(_1abcdbd83_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bc37265b:;
			{
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1bc37277c:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc371ca9:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcdd824_evalStruct(_1abcdb206_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1bc374020:;
			{
				if ((_1abceb2c1_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
					return nullptr;;
				};
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1bc374086:;
			{
				if ((_1abceb2c1_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
					return nullptr;;
				};
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1bc374680:;
			{
				if ((_1abceb2c1_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
					return nullptr;;
				};
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1bc3746e6:;
			{
				if ((_1abceb2c1_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
					return nullptr;;
				};
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bc37475c:;
			{
				if ((!(_1abcdbd83_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1bc37298b:;
	};
	if ((!(_1abcdc12a_checkStructCommonOperatorCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	return (*_self_)._field_l;;
}



inline jule::Ptr<_1abcbba55_Data> _1abcdda88_evalTrait(_1abcdb206_binaryEval* _self_) {
	if ((!(_1abcdbd83_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bc37d986:;
			{
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1bc37daa7:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc37d4d0:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcddcec_evalAny(_1abcdb206_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bc380856:;
			{
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1bc3802d4:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(jule::Str("any", 3), &__jule_any_type101)}));
				return nullptr;;
			}
		}
		_match_end_1bc37dcb6:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcde061_evalBool(_1abcdb206_binaryEval* _self_) {
	if ((!(_1abcdbd83_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1bc380aba:;
			{
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_1bc38279d:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1abce7dd3_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc381cca:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abcde2c5_evalStr(_1abcdb206_binaryEval* _self_) {
	jule::Str _363117_rk = _1abce7dd3_Str((*_self_)._field_r.get()._field_Kind.ptr());;
	if ((_363117_rk != jule::Str("str", 3))) {
		_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type101),jule::Any(_363117_rk, &__jule_any_type7)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1bc385c46:;
			{
				return (*_self_)._field_l;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1bc386917:;
			{
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1bc3842c7:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(jule::Str("str", 3), &__jule_any_type101)}));
				return nullptr;;
			}
		}
		_match_end_1bc38587d:;
	};
}



inline void _1abcde4a1_setTypeToGreater(_1abcdb206_binaryEval* _self_) {
	jule::Ptr<_1abcec734_Prim> _365813_lp = _1abce9d6e_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_1abcec734_Prim> _365913_rp = _1abce9d6e_Prim((*_self_)._field_r.get()._field_Kind.ptr());;
	if (_1abcbc418_IsConst((*_self_)._field_l.ptr())) {
		if ((!(_1abcbc418_IsConst((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_365913_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1abcbc418_IsConst((*_self_)._field_r.ptr())) {
		(*_self_)._field_r.get()._field_Constant.get()._field_Kind=_365813_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*_self_)._field_l.get()._field_untyped && (!((*_self_)._field_r.get()._field_untyped)))) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
		if (_1abcbc418_IsConst((*_self_)._field_l.ptr())) {
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_365913_rp.get()._field_Kind;
		};
		(*_self_)._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*_self_)._field_l.get()._field_untyped)) && (*_self_)._field_r.get()._field_untyped)) {
		return;;
	};
	if (_1aba86017_IsGreater(_365913_rp.get()._field_Kind,_365813_lp.get()._field_Kind)) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
		if (_1abcbc418_IsConst((*_self_)._field_l.ptr())) {
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_365913_rp.get()._field_Kind;
		};
	};
}



inline void _1abcde6e3_checkModData(_1abcdb206_binaryEval* _self_, jule::Ptr<_1abcbba55_Data>& _369136_d) {
	if ((!(_1abcbc418_IsConst(_369136_d.ptr())))) {
		if (((_1abce9d6e_Prim(_369136_d.get()._field_Kind.ptr()) == nullptr) || (!(_1aba866bb_IsInt(_1abce9d6e_Prim(_369136_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1abca4466_sigAssignable(jule::Str("i64", 3),_369136_d)) {
			_case_begin_1bc391548:;
			{
				_1aba88338_SetI64(_369136_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1aba87e92_AsI64(_369136_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1abca4598_unsigAssignable(jule::Str("u64", 3),_369136_d)) {
			_case_begin_1bc391218:;
			{
				_1aba8846a_SetU64(_369136_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1aba880c4_AsU64(_369136_d.get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1bc3911a2:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc38ea85:;
	};
}



inline void _1abcde8be_mod(_1abcdb206_binaryEval* _self_) {
	_1abcde6e3_checkModData(&(*_self_), (*_self_)._field_l);
	_1abcde6e3_checkModData(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1abcdec76_numbersAreCompatibile(_1abcdb206_binaryEval* _self_, jule::Str& _371337_lk, jule::Str& _371347_rk) {
	if ((!(_1aba86930_IsNum(_371347_rk)))) {
		return false;;
	};
	if ((_1abcbc418_IsConst((*_self_)._field_l.ptr()) && (*_self_)._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((_371337_lk == jule::Str("f32", 3))) {
		if ((_1abcbc418_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;;
		};
		return (_371347_rk == jule::Str("f32", 3));;
	};
	if ((_371337_lk == jule::Str("f64", 3))) {
		if ((_1abcbc418_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;;
		};
		return (_371347_rk == jule::Str("f64", 3));;
	};
	if ((_1abcbc418_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
		return true;;
	};
	return (_371337_lk == _371347_rk);;
}



inline jule::Ptr<_1abcbba55_Data> _1abcdeeda_evalFloat(_1abcdb206_binaryEval* _self_) {
	jule::Str _373913_lk = _1abce9d6e_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _374013_rk = _1abce9d6e_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1abcdec76_numbersAreCompatibile(&(*_self_), _373913_lk,_374013_rk)))) {
		_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_373913_lk, &__jule_any_type7),jule::Any(_374013_rk, &__jule_any_type7)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1bc399809:;
			{
				if (((!(_1abcbc418_IsConst((*_self_)._field_l.ptr()))) || (!(_1abca5643_intAssignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_373913_lk, &__jule_any_type7),jule::Any(_374013_rk, &__jule_any_type7)}));
					return nullptr;;
				};
				if (((!(_1abcbc418_IsConst((*_self_)._field_r.ptr()))) || (!(_1abca5643_intAssignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_373913_lk, &__jule_any_type7),jule::Any(_374013_rk, &__jule_any_type7)}));
					return nullptr;;
				};
				_1aba88338_SetI64((*_self_)._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1aba87e92_AsI64((*_self_)._field_l.get()._field_Constant.ptr())));
				_1aba8846a_SetU64((*_self_)._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1aba880c4_AsU64((*_self_)._field_r.get()._field_Constant.ptr())));
				if ((!(_1abce3450_isOkForShifting((*_self_)._field_r)))) {
					_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*_self_)._field_l;;
			}
		}
		_match_end_1bc398b6b:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1bc39e501:;
			{
				_1abcde4a1_setTypeToGreater(&(*_self_));
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1bc39e776:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1bc398a06:;
			{
				_1abcde4a1_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1bc3a169b:;
			{
				if ((!(_1aba866bb_IsInt(_374013_rk)))) {
					_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_373913_lk, &__jule_any_type7),jule::Any(_374013_rk, &__jule_any_type7)}));
					return nullptr;;
				};
				_1abcde8be_mod(&(*_self_));
				_1abcde4a1_setTypeToGreater(&(*_self_));
				return (*_self_)._field_r;;
			}
		}
		else {
			_case_begin_1bc3a006d:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc3a0546:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abce024e_evalInt(_1abcdb206_binaryEval* _self_) {
	jule::Str _380513_lk = _1abce9d6e_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _380613_rk = _1abce9d6e_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1bc3a1b85:;
			{
				if (((!(_1aba866bb_IsInt(_380513_lk))) || (!(_1aba866bb_IsInt(_380613_rk))))) {
					_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380513_lk, &__jule_any_type7),jule::Any(_380613_rk, &__jule_any_type7)}));
					return nullptr;;
				};
				if ((!(_1abce3450_isOkForShifting((*_self_)._field_r)))) {
					_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*_self_)._field_l;;
			}
		}
		_match_end_1bc3a48e1:;
	};
	if ((!(_1abcdec76_numbersAreCompatibile(&(*_self_), _380513_lk,_380613_rk)))) {
		_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380513_lk, &__jule_any_type7),jule::Any(_380613_rk, &__jule_any_type7)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1bc3a788e:;
			{
				return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1bc3a50c8:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1bc3a4a01:;
			{
				_1abcde4a1_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1bc3a98a2:;
			{
				_1abcde8be_mod(&(*_self_));
				_1abcde4a1_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_1bc3a8681:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1bc3a798d:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abce04b3_evalPrim(_1abcdb206_binaryEval* _self_) {
	jule::Ptr<_1abcec734_Prim> _386413_prim = _1abce9d6e_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1abd00704_IsBool(_386413_prim.ptr())) {
			_case_begin_1bc3ab92b:;
			{
				return _1abcde061_evalBool(&(*_self_));;
			}
		}
		else if (_1abd00968_IsStr(_386413_prim.ptr())) {
			_case_begin_1bc3ab9a3:;
			{
				return _1abcde2c5_evalStr(&(*_self_));;
			}
		}
		_match_end_1bc3ab871:;
	};
	if ((_1abce9d6e_Prim((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1abceca97_Str(_386413_prim.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type7)}));
		return nullptr;;
	};
	{
		
		if (_1aba867ed_IsFloat(_386413_prim.get()._field_Kind)) {
			_case_begin_1bc3ae28b:;
			{
				return _1abcdeeda_evalFloat(&(*_self_));;
			}
		}
		else if (_1aba866bb_IsInt(_386413_prim.get()._field_Kind)) {
			_case_begin_1bc3adb5e:;
			{
				return _1abce024e_evalInt(&(*_self_));;
			}
		}
		else {
			_case_begin_1bc3adae8:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc3a8252:;
	};
}



inline void _1abce068e_checkSpecialCases(_1abcdb206_binaryEval* _self_) {
	if (((!(_1abce8de5_Comparable((*_self_)._field_l.get()._field_Kind.ptr()))) && (!(_1abce891c_IsNil((*_self_)._field_r.get()._field_Kind.ptr()))))) {
		_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is not comparable", 24),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
	} else if (((!(_1abce8de5_Comparable((*_self_)._field_r.get()._field_Kind.ptr()))) && (!(_1abce891c_IsNil((*_self_)._field_l.get()._field_Kind.ptr()))))) {
		_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is not comparable", 24),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type7)}));
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abce0903_evalOp(_1abcdb206_binaryEval* _self_) {
	_1abce068e_checkSpecialCases(&(*_self_));
	{
		
		if (_1abce8b81_Void((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1bc3b2c40:;
			{
				_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(jule::Str("void", 4), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		else if (((_1abce9d6e_Prim((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr) && _1abd00bcc_IsAny(_1abce9d6e_Prim((*_self_)._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1bc3b38cd:;
			{
				({
					jule::Ptr<_1abcbba55_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1abcbba55_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1bc3b3944;
			}
		}
		else if (((_1abce9d6e_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr) && _1abd00bcc_IsAny(_1abce9d6e_Prim((*_self_)._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1bc3b3944:;
			{
				return _1abcddcec_evalAny(&(*_self_));;
			}
		}
		else if ((_1abcea820_TypeEnum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3b3339:;
			{
				({
					jule::Ptr<_1abcbba55_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1abcbba55_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1bc3b33b1;
			}
		}
		else if ((_1abcea820_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3b33b1:;
			{
				return _1abcdc89a_evalTypeEnum(&(*_self_));;
			}
		}
		else if (_1abce891c_IsNil((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1bc3b3438:;
			{
				return _1abcdc3c2_evalNil(&(*_self_));;
			}
		}
		else if ((_1abcea5ab_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3b34b0:;
			{
				({
					jule::Ptr<_1abcbba55_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1abcbba55_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1bc3b39bb;
			}
		}
		else if ((_1abcea5ab_Enum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3b39bb:;
			{
				return _1abcdc636_evalEnum(&(*_self_));;
			}
		}
		else if ((_1abcea0d3_Sptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3b3a43:;
			{
				({
					jule::Ptr<_1abcbba55_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1abcbba55_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1bc3b3aba;
			}
		}
		else if ((_1abcea0d3_Sptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3b3aba:;
			{
				return _1abcdcb0e_evalSptr(&(*_self_));;
			}
		}
		else if ((_1abcea347_Ptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3b3b42:;
			{
				({
					jule::Ptr<_1abcbba55_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1abcbba55_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1bc3b3bb9;
			}
		}
		else if ((_1abcea347_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3b3bb9:;
			{
				return _1abcdcd73_evalPtr(&(*_self_));;
			}
		}
		else if ((_1abceaa84_Arr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3b3c41:;
			{
				return _1abcdd0d7_evalArr(&(*_self_));;
			}
		}
		else if ((_1abceace8_Slc((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3b3cb8:;
			{
				return _1abcdd34b_evalSlc(&(*_self_));;
			}
		}
		else if ((_1abceb05c_Fn((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3b3d40:;
			{
				return _1abcdd5b0_evalFn(&(*_self_));;
			}
		}
		else if ((_1abceb535_Trait((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3b3db7:;
			{
				({
					jule::Ptr<_1abcbba55_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1abcbba55_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1bc3b3e3e;
			}
		}
		else if ((_1abceb535_Trait((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3b3e3e:;
			{
				return _1abcdda88_evalTrait(&(*_self_));;
			}
		}
		else if ((_1abceb2c1_Struct((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3b3eb6:;
			{
				return _1abcdd824_evalStruct(&(*_self_));;
			}
		}
		else if ((_1abce9d6e_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3b403d:;
			{
				return _1abce04b3_evalPrim(&(*_self_));;
			}
		}
		else {
			_case_begin_1bc3b32b2:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc3b324b:;
	};
}



inline void _1abce0b78_evalConst(_1abcdb206_binaryEval* _self_, jule::Ptr<_1abcbba55_Data>& _394833_d) {
	{
		
		if ((_394833_d == nullptr)) {
			_case_begin_1bc3c39dc:;
			{
				return;;
			}
		}
		else if ((!(_1abcbc418_IsConst((*_self_)._field_l.ptr()))) || (!(_1abcbc418_IsConst((*_self_)._field_r.ptr())))) {
			_case_begin_1bc3c3a53:;
			{
				_394833_d.get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1bc3c336b:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1bc3c4933:;
			{
				_394833_d.get()._field_Constant=static__1aba870e5_NewBool(_1aba8a1e7_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1bc3c49aa:;
			{
				_394833_d.get()._field_Constant=static__1aba870e5_NewBool((!(_1aba8a1e7_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1bc3c5181:;
			{
				_394833_d.get()._field_Constant=static__1aba870e5_NewBool(_1aba89dd9_Or((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1bc3c51e7:;
			{
				_394833_d.get()._field_Constant=static__1aba870e5_NewBool(_1aba89acb_And((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1bc3c525d:;
			{
				_394833_d.get()._field_Constant=static__1aba870e5_NewBool(_1aba8ab21_Gt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1bc3c52c4:;
			{
				_394833_d.get()._field_Constant=static__1aba870e5_NewBool(_1aba8a505_Lt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1bc3c533a:;
			{
				_394833_d.get()._field_Constant=static__1aba870e5_NewBool(_1aba8ae2e_GtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1bc3c53b2:;
			{
				_394833_d.get()._field_Constant=static__1aba870e5_NewBool(_1aba8a813_LtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1bc3c5439:;
			{
				_1aba8b23c_Add((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1bc3c54b1:;
			{
				_1aba8b54a_Sub((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1bc3c5538:;
			{
				_1aba8b858_Mul((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1bc3c55b0:;
			{
				jule::Bool _398517_ok = _1aba8bb66_Div((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_398517_ok)) && (_1aba88206_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
				jule::Ptr<_1abcec734_Prim> _399021_prim = _1abce9d6e_Prim(_394833_d.get()._field_Kind.ptr());;
				{
					
					if (_1aba86457_IsSigInt(_399021_prim.get()._field_Kind)) {
						_case_begin_1bc3d2369:;
						{
							_1aba88338_SetI64(_394833_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1aba87e92_AsI64(_394833_d.get()._field_Constant.ptr())));
						}
					}
					else if (_1aba86589_IsUnsigInt(_399021_prim.get()._field_Kind)) {
						_case_begin_1bc3d23e1:;
						{
							_1aba8846a_SetU64(_394833_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1aba880c4_AsU64(_394833_d.get()._field_Constant.ptr())));
						}
					}
					_match_end_1bc3d22ae:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1bc3c5637:;
			{
				jule::Bool _399817_ok = _1aba8be74_Mod((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_399817_ok)) && (_1aba88206_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1bc3c56ae:;
			{
				_1aba8c590_BitwiseOr((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1bc3c5736:;
			{
				_1aba8c282_BitwiseAnd((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1bc3c57ad:;
			{
				_1aba8c89d_Xor((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1bc3c5835:;
			{
				_1aba8cbab_Lshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1bc3c58ac:;
			{
				_1aba8ceb9_Rshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		_match_end_1bc3c4adc:;
	};
	_394833_d.get()._field_Model=jule::Any(_394833_d.get()._field_Constant, &__jule_any_type49);
	_1abce48e6_applyCastModelByEnum(_394833_d,_1abcea5ab_Enum(_394833_d.get()._field_Kind.ptr()));
}



inline void _1abce0ded_checkData(_1abcdb206_binaryEval* _self_, jule::Ptr<_1abcbba55_Data>& _402333_d) {
	jule::Ptr<_1abaa1d79_FnIns> _402413_f = _1abceb05c_Fn(_402333_d.get()._field_Kind.ptr());;
	if ((((_402413_f != nullptr) && (_402413_f.get()._field_Decl != nullptr)) && _1aba9e89e_IsMethod(_402413_f.get()._field_Decl.ptr()))) {
		_1abcbdace_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1abce10c9_checkDatas(_1abcdb206_binaryEval* _self_) {
	_1abce0ded_checkData(&(*_self_), (*_self_)._field_l);
	_1abce0ded_checkData(&(*_self_), (*_self_)._field_r);
}



inline void _1abce134e_setModel(_1abcdb206_binaryEval* _self_, jule::Ptr<_1abcbba55_Data>& _403532_d) {
	if (_1abcbc418_IsConst(_403532_d.ptr())) {
		if ((_1abcbc418_IsConst((*_self_)._field_l.ptr()) && _1abcbc418_IsConst((*_self_)._field_r.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1abcbba55_Data> _404318_l;;
	jule::Ptr<_1abcbba55_Data> _404325_r;;
	({
		jule::Ptr<_1abcbba55_Data> ___jule_assign_arg = (*_self_)._field_l;
		jule::Ptr<_1abcbba55_Data> _1___jule_assign_arg = (*_self_)._field_r;
		_404318_l = ___jule_assign_arg;
		_404325_r = _1___jule_assign_arg;
	});
	if ((!(_1abcbc726_GoodOperand(_404318_l.ptr(), _404325_r)))) {
		({
			jule::Ptr<_1abcbba55_Data> ___jule_assign_arg = _404325_r;
			jule::Ptr<_1abcbba55_Data> _1___jule_assign_arg = _404318_l;
			_404318_l = ___jule_assign_arg;
			_404325_r = _1___jule_assign_arg;
		});
	};
	_403532_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba90de0_BinopExprModel>(_1aba90de0_BinopExprModel{._field_Left=jule::new_ptr<_1aba90928_OperandExprModel>(_1aba90928_OperandExprModel{._field_Kind=_404318_l.get()._field_Kind, ._field_Model=_404318_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1aba90928_OperandExprModel>(_1aba90928_OperandExprModel{._field_Kind=_404325_r.get()._field_Kind, ._field_Model=_404325_r.get()._field_Model}), ._field_Op=(*_self_)._field_op}), &__jule_any_type119);
}



inline void _1abce15c4_postEval(_1abcdb206_binaryEval* _self_, jule::Ptr<_1abcbba55_Data>& _406132_d) {
	_406132_d.get()._field_Lvalue=false;
	_1abce134e_setModel(&(*_self_), _406132_d);
}



inline jule::Ptr<_1abcbba55_Data> _1abce197b_solveExplicit(_1abcdb206_binaryEval* _self_, jule::Ptr<_1abcbba55_Data>& _406637_l, jule::Ptr<_1abcbba55_Data>& _406652_r) {
	({
		jule::Ptr<_1abcbba55_Data> ___jule_assign_arg = _406637_l;
		jule::Ptr<_1abcbba55_Data> _1___jule_assign_arg = _406652_r;
		(*_self_)._field_l = ___jule_assign_arg;
		(*_self_)._field_r = _1___jule_assign_arg;
	});
	_1abce10c9_checkDatas(&(*_self_));
	jule::Ptr<_1abcbba55_Data> _407117_d = _1abce0903_evalOp(&(*_self_));;
	({
		jule::Ptr<_1abcbba55_Data> ___jule_assign_arg = _406637_l;
		jule::Ptr<_1abcbba55_Data> _1___jule_assign_arg = _406652_r;
		(*_self_)._field_l = ___jule_assign_arg;
		(*_self_)._field_r = _1___jule_assign_arg;
	});
	_1abce0b78_evalConst(&(*_self_), _407117_d);
	if ((_407117_d != nullptr)) {
		_407117_d.get()._field_Mutable=true;
		_1abce15c4_postEval(&(*_self_), _407117_d);
	};
	return _407117_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abce1c89_eval(_1abcdb206_binaryEval* _self_, jule::Ptr<_1ab0768b0_BinopExpr>& _408628_op) {
	if ((_408628_op.get()._field_Op.get()._field_Kind == jule::Str("=", 1))) {
		_1abcbdace_pushErr((*_self_)._field_e.ptr(), _408628_op.get()._field_Op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1abcbdded_pushSugggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abcbba55_Data> _409317_l = _1abcd88c9_evalExprKind((*_self_)._field_e, _408628_op.get()._field_Left.get()._field_Kind);;
	if (((_409317_l == nullptr) || (_409317_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1abce79d7_TypeKind> _409817_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_409317_l.get()._field_Kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_409817_prefix;
	});;
	jule::Ptr<_1abcbba55_Data> _410117_r = _1abcd88c9_evalExprKind((*_self_)._field_e, _408628_op.get()._field_Right.get()._field_Kind);;
	if (((_410117_r == nullptr) || (_410117_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*_self_)._field_op=_408628_op.get()._field_Op;
	jule::Ptr<_1abcbba55_Data> _410817_d = _1abce197b_solveExplicit(&(*_self_), _409317_l,_410117_r);;
	if ((((_410817_d != nullptr) && _409317_l.get()._field_IsRune) && _410117_r.get()._field_IsRune)) {
		_410817_d.get()._field_IsRune=true;
	};
	return _410817_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcdb206_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abce62aa_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abce6ce4_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1abce7dd3_Str(_1abce79d7_TypeKind* _self_) {
	if (_1abce891c_IsNil(&(*_self_))) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_Variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_1abce86a8_CppLinked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_CppIdent;
	} else {
		_7417_kind+=_1abce75a8_Kind_mptr_data[((*_self_)._field_Kind).type_offset]._1abce7157_Str((*_self_)._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _1abce81e1_Equal(jule::Ptr<_1abce79d7_TypeKind> _self_, jule::Ptr<_1abce79d7_TypeKind> _9021_other) {
	if (_1abce891c_IsNil(_self_.ptr())) {
		return _1abce891c_IsNil(_9021_other.ptr());;
	};
	if (_1abce86a8_CppLinked(_self_.ptr())) {
		return (_1abce86a8_CppLinked(_9021_other.ptr()) && (_self_.get()._field_CppIdent == _9021_other.get()._field_CppIdent));;
	};
	return _1abce75a8_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1abce7465_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _1abce86a8_CppLinked(_1abce79d7_TypeKind* _self_) {
	return ((*_self_)._field_CppIdent.len() != 0LL);;
}



inline jule::Bool _1abce891c_IsNil(_1abce79d7_TypeKind* _self_) {
	return ((*_self_)._field_Kind == nullptr);;
}



inline jule::Bool _1abce8b81_Void(_1abce79d7_TypeKind* _self_) {
	jule::Ptr<_1abcec734_Prim> _11113_prim = _1abce9d6e_Prim(&(*_self_));;
	return ((_11113_prim != nullptr) && (_11113_prim.get()._field_Kind == jule::Str("void", 4)));;
}



inline jule::Bool _1abce8de5_Comparable(_1abce79d7_TypeKind* _self_) {
	if (_1abce86a8_CppLinked(&(*_self_))) {
		return false;;
	};
	{
		_1abce79d7_TypeKind* _12121__self = (&((*_self_)));;
		if ((_1abceb2c1_Struct(_12121__self) != nullptr)) {
			return _1abceb2c1_Struct(_12121__self).get()._field_Comparable;;
		};
		return (((_1abceb799_Map(_12121__self) == nullptr) && (_1abceace8_Slc(_12121__self) == nullptr)) && (_1abceb05c_Fn(_12121__self) == nullptr));;
	};
}



inline jule::Bool _1abce9159_Mutable(_1abce79d7_TypeKind* _self_) {
	{
		_1abce79d7_TypeKind* _13221__self = (&((*_self_)));;
		if ((_1abceb2c1_Struct(_13221__self) != nullptr)) {
			return _1abceb2c1_Struct(_13221__self).get()._field_Mutable;;
		};
		if ((_1abceb535_Trait(_13221__self) != nullptr)) {
			return _1abceb535_Trait(_13221__self).get()._field_Mutable;;
		};
		if ((_1abce9d6e_Prim(_13221__self) != nullptr)) {
			jule::Ptr<_1abcec734_Prim> _14021_p = _1abce9d6e_Prim(_13221__self);;
			return _1abd00bcc_IsAny(_14021_p.ptr());;
		};
		if ((_1abceaa84_Arr(_13221__self) != nullptr)) {
			return _1abce9159_Mutable(_1abceaa84_Arr(_13221__self).get()._field_Elem.ptr());;
		};
		return (((_1abceace8_Slc(_13221__self) != nullptr) || (_1abcea347_Ptr(_13221__self) != nullptr)) || (_1abcea0d3_Sptr(_13221__self) != nullptr));;
	};
}



inline jule::Bool _1abce93bd_NilCompatible(_1abce79d7_TypeKind* _self_) {
	{
		_1abce79d7_TypeKind* _15521__self = (&((*_self_)));;
		jule::Ptr<_1abcec734_Prim> _15717_prim = _1abce9d6e_Prim(_15521__self);;
		if (((_15717_prim != nullptr) && _1abd00bcc_IsAny(_15717_prim.ptr()))) {
			return true;;
		};
		return (((((((_1abce891c_IsNil(_15521__self) || (_1abceb05c_Fn(_15521__self) != nullptr)) || (_1abcea0d3_Sptr(_15521__self) != nullptr)) || (_1abcea347_Ptr(_15521__self) != nullptr)) || (_1abceb535_Trait(_15521__self) != nullptr)) || (_1abceace8_Slc(_15521__self) != nullptr)) || (_1abceb799_Map(_15521__self) != nullptr)) || (_1abcea820_TypeEnum(_15521__self) != nullptr));;
	};
}



inline jule::Bool _1abce9632_PerformsRC(_1abce79d7_TypeKind* _self_) {
	{
		_1abce79d7_TypeKind* _17621__self = (&((*_self_)));;
		jule::Ptr<_1abcec734_Prim> _17717_prim = _1abce9d6e_Prim(_17621__self);;
		if ((_17717_prim != nullptr)) {
			return _1abd00bcc_IsAny(_17717_prim.ptr());;
		};
		return (((_1abcea0d3_Sptr(_17621__self) != nullptr) || (_1abceace8_Slc(_17621__self) != nullptr)) || (_1abceb535_Trait(_17621__self) != nullptr));;
	};
}



inline jule::Bool _1abce9896_SupportsCloning(_1abce79d7_TypeKind* _self_) {
	{
		_1abce79d7_TypeKind* _18821__self = (&((*_self_)));;
		{
			
			if ((_1abce9d6e_Prim(_18821__self) != nullptr)) {
				_case_begin_1bc420c6a:;
				{
					return (!(_1abd00bcc_IsAny(_1abce9d6e_Prim(_18821__self).ptr())));;
				}
			}
			else if ((_1abcea5ab_Enum(_18821__self) != nullptr)) {
				_case_begin_1bc422ac4:;
				{
					return true;;
				}
			}
			else if ((_1abceb05c_Fn(_18821__self) != nullptr)) {
				_case_begin_1bc422b3a:;
				{
					return true;;
				}
			}
			else if ((_1abcea347_Ptr(_18821__self) != nullptr)) {
				_case_begin_1bc422ba1:;
				{
					return true;;
				}
			}
			else if ((_1abceace8_Slc(_18821__self) != nullptr)) {
				_case_begin_1bc4226ea:;
				{
					return _1abce9896_SupportsCloning(_1abceace8_Slc(_18821__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1abceb799_Map(_18821__self) != nullptr)) {
				_case_begin_1bc422761:;
				{
					jule::Ptr<_1abd02ecb_Map> _20121_m = _1abceb799_Map(_18821__self);;
					return (_1abce9896_SupportsCloning(_20121_m.get()._field_Key.ptr()) && _1abce9896_SupportsCloning(_20121_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_1abceaa84_Arr(_18821__self) != nullptr)) {
				_case_begin_1bc4227c7:;
				{
					return _1abce9896_SupportsCloning(_1abceaa84_Arr(_18821__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1abcea0d3_Sptr(_18821__self) != nullptr)) {
				_case_begin_1bc42283d:;
				{
					return _1abce9896_SupportsCloning(_1abcea0d3_Sptr(_18821__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1abceb2c1_Struct(_18821__self) != nullptr)) {
				_case_begin_1bc422dd2:;
				{
					jule::Ptr<_1ab08a583_StructIns> _20825_s = _1abceb2c1_Struct(_18821__self);;
					return (((_20825_s.get()._field_Decl != nullptr) && (!(_20825_s.get()._field_Decl.get()._field_CppLinked))) && _1ab0541d9_IsDerives(_20825_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_1bc422684:;
				{
					return false;;
				}
			}
			_match_end_1bc42261d:;
		};
	};
}



inline jule::Bool _1abce9b0a_Variadicable(_1abce79d7_TypeKind* _self_) {
	{
		_1abce79d7_TypeKind* _22121__self = (&((*_self_)));;
		return (_1abceace8_Slc(_22121__self) != nullptr);;
	};
}



inline jule::Ptr<_1abcec734_Prim> _1abce9d6e_Prim(_1abce79d7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1abcec734_Prim>>()) {
			_case_begin_1bc420a7d:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1abcec734_Prim>();;
			}
		}
		else {
			_case_begin_1bc421ead:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc421e58:;
	};
}



inline jule::Ptr<_1abd00eb8_Sptr> _1abcea0d3_Sptr(_1abce79d7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1abd00eb8_Sptr>>()) {
			_case_begin_1bc422035:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1abd00eb8_Sptr>();;
			}
		}
		else {
			_case_begin_1bc42aa44:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc42a9de:;
	};
}



inline jule::Ptr<_1abd0452c_Ptr> _1abcea347_Ptr(_1abce79d7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1abd0452c_Ptr>>()) {
			_case_begin_1bc42b02d:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1abd0452c_Ptr>();;
			}
		}
		else {
			_case_begin_1bc42b6d2:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc42b0c7:;
	};
}



inline jule::Ptr<_1abab3220_Enum> _1abcea5ab_Enum(_1abce79d7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1abab3220_Enum>>()) {
			_case_begin_1bc42b77b:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1abab3220_Enum>();;
			}
		}
		else {
			_case_begin_1bc42c44c:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc42c3e7:;
	};
}



inline jule::Ptr<_1abab481a_TypeEnum> _1abcea820_TypeEnum(_1abce79d7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1abab481a_TypeEnum>>()) {
			_case_begin_1bc42c9ad:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1abab481a_TypeEnum>();;
			}
		}
		else {
			_case_begin_1bc42d12e:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc42d0c9:;
	};
}



inline jule::Ptr<_1abd03ac0_Arr> _1abceaa84_Arr(_1abce79d7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1abd03ac0_Arr>>()) {
			_case_begin_1bc42d6a1:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1abd03ac0_Arr>();;
			}
		}
		else {
			_case_begin_1bc42dd22:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc42dcbc:;
	};
}



inline jule::Ptr<_1abd01925_Slc> _1abceace8_Slc(_1abce79d7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1abd01925_Slc>>()) {
			_case_begin_1bc42e394:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1abd01925_Slc>();;
			}
		}
		else {
			_case_begin_1bc42ea15:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc42e9b0:;
	};
}



inline jule::Ptr<_1abaa1d79_FnIns> _1abceb05c_Fn(_1abce79d7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1abaa1d79_FnIns>>()) {
			_case_begin_1bc430087:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1abaa1d79_FnIns>();;
			}
		}
		else {
			_case_begin_1bc430708:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc4306a3:;
	};
}



inline jule::Ptr<_1ab08a583_StructIns> _1abceb2c1_Struct(_1abce79d7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ab08a583_StructIns>>()) {
			_case_begin_1bc430c7a:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1ab08a583_StructIns>();;
			}
		}
		else {
			_case_begin_1bc4313eb:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc431396:;
	};
}



inline jule::Ptr<_1abab10ca_Trait> _1abceb535_Trait(_1abce79d7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1abab10ca_Trait>>()) {
			_case_begin_1bc43196d:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1abab10ca_Trait>();;
			}
		}
		else {
			_case_begin_1bc4320de:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc432089:;
	};
}



inline jule::Ptr<_1abd02ecb_Map> _1abceb799_Map(_1abce79d7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1abd02ecb_Map>>()) {
			_case_begin_1bc4325d9:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1abd02ecb_Map>();;
			}
		}
		else {
			_case_begin_1bc432c8d:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc432683:;
	};
}



inline jule::Ptr<_1abd024a3_Tuple> _1abceba0d_Tup(_1abce79d7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1abd024a3_Tuple>>()) {
			_case_begin_1bc432d48:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1abd024a3_Tuple>();;
			}
		}
		else {
			_case_begin_1bc433a08:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc4339a3:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1abce79d7_TypeKind _Src) {
	_Stream << _1abce7dd3_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1abcec26c_checked(_1abcebdb5_TypeSymbol* _self_) {
	return ((*_self_)._field_Kind != nullptr);;
}



inline void _1abcec448_removeKind(_1abcebdb5_TypeSymbol* _self_) {
	(*_self_)._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcebdb5_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1abceca97_Str(_1abcec734_Prim* _self_) {
	return (*_self_)._field_Kind;;
}



inline jule::Bool _1abcecda5_Equal(jule::Ptr<_1abcec734_Prim> _self_, jule::Ptr<_1abce79d7_TypeKind> _37421_other) {
	jule::Ptr<_1abcec734_Prim> _37513_prim = _1abce9d6e_Prim(_37421_other.ptr());;
	if ((_37513_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _37513_prim.get()._field_Kind);;
}



inline jule::Bool _1abced328_IsConstraint(_1abcec734_Prim* _self_) {
	return ((((!(_1abd00968_IsStr(&(*_self_)))) && (!(_1abd00bcc_IsAny(&(*_self_))))) && (!(_1abd00704_IsBool(&(*_self_))))) && (!(_1aba86930_IsNum((*_self_)._field_Kind))));;
}



inline jule::Bool _1abced58c_IsI8(_1abcec734_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i8", 2));;
}



inline jule::Bool _1abced801_IsI16(_1abcec734_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i16", 3));;
}



inline jule::Bool _1abceda65_IsI32(_1abcec734_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i32", 3));;
}



inline jule::Bool _1abcedcc9_IsI64(_1abcec734_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i64", 3));;
}



inline jule::Bool _1abcee03d_IsU8(_1abcec734_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u8", 2));;
}



inline jule::Bool _1abcee2a2_IsU16(_1abcec734_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u16", 3));;
}



inline jule::Bool _1abcee516_IsU32(_1abcec734_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u32", 3));;
}



inline jule::Bool _1abcee77a_IsU64(_1abcec734_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u64", 3));;
}



inline jule::Bool _1abcee9de_IsF32(_1abcec734_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f32", 3));;
}



inline jule::Bool _1abceec53_IsF64(_1abcec734_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f64", 3));;
}



inline jule::Bool _1abceeeb7_IsInt(_1abcec734_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("int", 3));;
}



inline jule::Bool _1abd0022b_IsUint(_1abcec734_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uint", 4));;
}



inline jule::Bool _1abd00490_IsUintptr(_1abcec734_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uintptr", 7));;
}



inline jule::Bool _1abd00704_IsBool(_1abcec734_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("bool", 4));;
}



inline jule::Bool _1abd00968_IsStr(_1abcec734_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("str", 3));;
}



inline jule::Bool _1abd00bcc_IsAny(_1abcec734_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("any", 3));;
}







std::ostream &operator<<(std::ostream &_Stream, _1abcec734_Prim _Src) {
	_Stream << _1abceca97_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd0132b_Str(_1abd00eb8_Sptr* _self_) {
	return (jule::Str("&", 1) + _1abce7dd3_Str((*_self_)._field_Elem.ptr()));;
}



inline jule::Bool _1abd01639_Equal(jule::Ptr<_1abd00eb8_Sptr> _self_, jule::Ptr<_1abce79d7_TypeKind> _45121_other) {
	jule::Ptr<_1abd00eb8_Sptr> _45213_sptr = _1abcea0d3_Sptr(_45121_other.ptr());;
	if ((_45213_sptr == nullptr)) {
		return false;;
	};
	return _1abce81e1_Equal(_self_.get()._field_Elem, _45213_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd00eb8_Sptr _Src) {
	_Stream << _1abd0132b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd01e31_Str(_1abd01925_Slc* _self_) {
	return (jule::Str("[]", 2) + _1abce7dd3_Str((*_self_)._field_Elem.ptr()));;
}



inline jule::Bool _1abd0223e_Equal(jule::Ptr<_1abd01925_Slc> _self_, jule::Ptr<_1abce79d7_TypeKind> _47021_other) {
	jule::Ptr<_1abd01925_Slc> _47113_slc = _1abceace8_Slc(_47021_other.ptr());;
	if ((_47113_slc == nullptr)) {
		return false;;
	};
	return _1abce81e1_Equal(_self_.get()._field_Elem, _47113_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd01925_Slc _Src) {
	_Stream << _1abd01e31_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd02816_Str(_1abd024a3_Tuple* _self_) {
	jule::Str _48717_s = jule::Str("(", 1);;
	_48717_s+=_1abce7dd3_Str((*_self_)._field_Types[0LL].ptr());
	{
		auto expr = (*_self_)._field_Types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1bc448017:;
		if (it != expr.end()) {
			jule::Ptr<_1abce79d7_TypeKind> &_48916_t = *it;
			{
				_48717_s+=jule::Str(",", 1);
				_48717_s+=_1abce7dd3_Str(_48916_t.ptr());
			}
			_iter_next_1bc448017:;
			++it;
			goto _iter_begin_1bc448017;
		}
		_iter_end_1bc448017:;
	};
	_48717_s+=jule::Str(")", 1);
	return _48717_s;;
}



inline jule::Bool _1abd02b24_Equal(jule::Ptr<_1abd024a3_Tuple> _self_, jule::Ptr<_1abce79d7_TypeKind> _49821_other) {
	jule::Ptr<_1abd024a3_Tuple> _49913_tup = _1abceba0d_Tup(_49821_other.ptr());;
	if ((_49913_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _49913_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I64 _50617_i = 0LL;;
	for (; (_50617_i < _self_.get()._field_Types.len()); (_50617_i)++) {
		{
			if ((!(_1abce81e1_Equal(_self_.get()._field_Types[_50617_i], _49913_tup.get()._field_Types[_50617_i])))) {
				return false;;
			};
		}
	_iter_next_1bc44aa86:;
	}
	_iter_end_1bc44aa86:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd024a3_Tuple _Src) {
	_Stream << _1abd02816_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd0333e_Str(_1abd02ecb_Map* _self_) {
	jule::Str _52617_s = jule::Str("[", 1);;
	_52617_s+=_1abce7dd3_Str((*_self_)._field_Key.ptr());
	_52617_s+=jule::Str(":", 1);
	_52617_s+=_1abce7dd3_Str((*_self_)._field_Val.ptr());
	_52617_s+=jule::Str("]", 1);
	return _52617_s;;
}



inline jule::Bool _1abd0364c_Equal(jule::Ptr<_1abd02ecb_Map> _self_, jule::Ptr<_1abce79d7_TypeKind> _53521_other) {
	jule::Ptr<_1abd02ecb_Map> _53613_m = _1abceb799_Map(_53521_other.ptr());;
	if ((_53613_m == nullptr)) {
		return false;;
	};
	return (_1abce81e1_Equal(_self_.get()._field_Key, _53613_m.get()._field_Key) && _1abce81e1_Equal(_self_.get()._field_Val, _53613_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd02ecb_Map _Src) {
	_Stream << _1abd0333e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd03e33_Str(_1abd03ac0_Arr* _self_) {
	jule::Str _55417_s = jule::Str("[", 1);;
	_55417_s+=_1aba81485_Itoa((*_self_)._field_N);
	_55417_s+=jule::Str("]", 1);
	_55417_s+=_1abce7dd3_Str((*_self_)._field_Elem.ptr());
	return _55417_s;;
}



inline jule::Bool _1abd04241_Equal(jule::Ptr<_1abd03ac0_Arr> _self_, jule::Ptr<_1abce79d7_TypeKind> _56221_other) {
	jule::Ptr<_1abd03ac0_Arr> _56313_arr = _1abceaa84_Arr(_56221_other.ptr());;
	if ((_56313_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _56313_arr.get()._field_N) && _1abce81e1_Equal(_self_.get()._field_Elem, _56313_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd03ac0_Arr _Src) {
	_Stream << _1abd03e33_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd04890_Str(_1abd0452c_Ptr* _self_) {
	if (_1abd05000_IsUnsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _1abce7dd3_Str((*_self_)._field_Elem.ptr()));;
}



inline jule::Bool _1abd04b9d_Equal(jule::Ptr<_1abd0452c_Ptr> _self_, jule::Ptr<_1abce79d7_TypeKind> _58621_other) {
	jule::Ptr<_1abd0452c_Ptr> _58713_ptr = _1abcea347_Ptr(_58621_other.ptr());;
	if ((_58713_ptr == nullptr)) {
		return false;;
	};
	return _1abce81e1_Equal(_self_.get()._field_Elem, _58713_ptr.get()._field_Elem);;
}



inline jule::Bool _1abd05000_IsUnsafe(_1abd0452c_Ptr* _self_) {
	return ((*_self_)._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd0452c_Ptr _Src) {
	_Stream << _1abd04890_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd05473_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1abd06a5c_pushErr(_1abd06353_typeChecker* _self_, jule::Ptr<_1a97237bc_Token> _67226_token, jule::Str _67241_fmt, jule::Slice<jule::Any> _67254_args) {
	_1abc58bac_pushErr((*_self_)._field_s.ptr(), _67226_token,_67241_fmt,_67254_args);
}



inline void _1abd06c38_allowBuiltin(_1abd06353_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1abd06e14_disallowBuiltin(_1abd06353_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Ptr<_1abcec734_Prim> _1abd07222_buildPrim(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab06e07d_IdentTypeDecl>& _68429_decl) {
	if ((!(_1abd11319_isPrim(_68429_decl.get()._field_Ident)))) {
		_1abd06a5c_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_68429_decl.get()._field_Generics.len() > 0LL)) {
		_1abd06a5c_pushErr(&(*_self_), _68429_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_68429_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	return _1abd10cca_buildPrimType(_68429_decl.get()._field_Ident);;
}



inline void _1bc459eb3_pushReference(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab08a583_StructIns>& _69840_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1bc1d5403_Exist((*_self_)._field_refers.ptr(), _69840_t)) {
		return;;
	};
	_1abaa5993_Push((*_self_)._field_refers.ptr(), jule::Any(_69840_t, &__jule_any_type11));
}

inline void _1bc45cda6_pushReference(_1abd06353_typeChecker* _self_, jule::Ptr<_1abab10ca_Trait>& _69840_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1bc45ea67_Exist((*_self_)._field_refers.ptr(), _69840_t)) {
		return;;
	};
	_1abaa5993_Push((*_self_)._field_refers.ptr(), jule::Any(_69840_t, &__jule_any_type12));
}



inline void _1abd0771c_pushReferenceByKind(_1abd06353_typeChecker* _self_, jule::Ptr<_1abce79d7_TypeKind>& _70843_k) {
	{
		
		if ((_1abceb2c1_Struct(_70843_k.ptr()) != nullptr)) {
			_case_begin_1bc458b60:;
			{
				jule::Ptr<_1ab08a583_StructIns> _71121_t = _1abceb2c1_Struct(_70843_k.ptr());;
				_1bc459eb3_pushReference(&(*_self_), _71121_t);
			}
		}
		else if ((_1abceb535_Trait(_70843_k.ptr()) != nullptr)) {
			_case_begin_1bc458bd7:;
			{
				jule::Ptr<_1abab10ca_Trait> _71421_t = _1abceb535_Trait(_70843_k.ptr());;
				_1bc45cda6_pushReference(&(*_self_), _71421_t);
			}
		}
		_match_end_1bc458a50:;
	};
}



inline void _1abd07ad5_pushCycleError(_1abd06353_typeChecker* _self_, jule::Any _71929_def1, jule::Any _71940_def2, jule::Str& _71956_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _72113_getIdent = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _72128_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _72128_def };
			
			if (_match_expr.type == &__jule_any_type69) {
				_case_begin_1bc4630dc:;
				{
					return _72128_def.cast_ptr<_1abce6ce4_TypeAlias>(&__jule_any_type69).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type68) {
				_case_begin_1bc463153:;
				{
					return _72128_def.cast_ptr<_1ab08a1a9_Struct>(&__jule_any_type68).get()._field_Ident;;
				}
			}
			else {
				_case_begin_1bc46299e:;
				{
					return jule::Str();;
				}
			}
			_match_end_1bc4628c2:;
		};
	});;
	jule::Str _73113_def1Ident = _72113_getIdent(_71929_def1);;
	jule::Str _73213_def2Ident = _72113_getIdent(_71940_def2);;
	jule::Str _73313_refersTo = _1a7995bb7_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_73113_def1Ident, &__jule_any_type7),jule::Any(_73213_def2Ident, &__jule_any_type7)}));;
	(_71956_message).buffer.insert(0, (((_1a78d5002_Repeat(jule::Str(" ", 1),4LL) + _73313_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1abd07e8c_checkCrossCycle(_1abd06353_typeChecker* _self_, jule::Any _73730_decl, jule::Str& _73746_message) {
	{
		auto &_match_expr{ _73730_decl };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1bc465276:;
			{
				jule::Ptr<_1abce6ce4_TypeAlias> _74017_ta = _73730_decl.cast_ptr<_1abce6ce4_TypeAlias>(&__jule_any_type69);;
				{
					auto &expr = _74017_ta.get()._field_Refers;
					auto it = expr.begin();
					_iter_begin_1bc465c38:;
					if (it != expr.end()) {
						jule::Any &_74120_d = *it;
						{
							{
								
								if ((_74120_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1bc46693c:;
									{
										_1abd07ad5_pushCycleError(&(*_self_), jule::Any(_74017_ta, &__jule_any_type69),_74120_d,_73746_message);
										return false;;
									}
								}
								else if ((!(_1abd07e8c_checkCrossCycle(&(*_self_), _74120_d,_73746_message)))) {
									_case_begin_1bc4669b4:;
									{
										_1abd07ad5_pushCycleError(&(*_self_), jule::Any(_74017_ta, &__jule_any_type69),_74120_d,_73746_message);
										return false;;
									}
								}
								_match_end_1bc46682c:;
							};
						}
						_iter_next_1bc465c38:;
						++it;
						goto _iter_begin_1bc465c38;
					}
					_iter_end_1bc465c38:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1bc4652dc:;
			{
				jule::Ptr<_1ab08a1a9_Struct> _75217_s = _73730_decl.cast_ptr<_1ab08a1a9_Struct>(&__jule_any_type68);;
				{
					auto &expr = _75217_s.get()._field_Depends;
					auto it = expr.begin();
					_iter_begin_1bc4673cc:;
					if (it != expr.end()) {
						jule::Ptr<_1ab08a1a9_Struct> &_75320_d = *it;
						{
							{
								
								if ((__jule_any_type68_compare((*_self_)._field_referencer.get()._field_owner, _75320_d))) {
									_case_begin_1bc468c80:;
									{
										_1abd07ad5_pushCycleError(&(*_self_), jule::Any(_75217_s, &__jule_any_type68),jule::Any(_75320_d, &__jule_any_type68),_73746_message);
										return false;;
									}
								}
								else if ((!(_1abd07e8c_checkCrossCycle(&(*_self_), jule::Any(_75320_d, &__jule_any_type68),_73746_message)))) {
									_case_begin_1bc468d07:;
									{
										_1abd07ad5_pushCycleError(&(*_self_), jule::Any(_75217_s, &__jule_any_type68),jule::Any(_75320_d, &__jule_any_type68),_73746_message);
										return false;;
									}
								}
								_match_end_1bc468b70:;
							};
						}
						_iter_next_1bc4673cc:;
						++it;
						goto _iter_begin_1bc4673cc;
					}
					_iter_end_1bc4673cc:;
				};
			}
		}
		_match_end_1bc465188:;
	};
	return true;;
}



inline jule::Bool _1abd08344_checkIllegalCycles(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab06e07d_IdentTypeDecl>& _77138_ident, jule::Any _77165_decl) {
	jule::Bool __jule_func_result = false;
	if (((*_self_)._field_referencer == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _77165_decl };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1bc46ac0a:;
			{
				if (((*_self_)._field_notPlain || _77165_decl.cast_ptr<_1ab08a1a9_Struct>(&__jule_any_type68).get()._field_CppLinked)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1bc46ac71:;
			{
				if (_77165_decl.cast_ptr<_1abce6ce4_TypeAlias>(&__jule_any_type69).get()._field_CppLinked) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1bc46882e:;
	};
	if ((_77165_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1abd06a5c_pushErr(&(*_self_), _77138_ident.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident, &__jule_any_type7)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _79417_message = jule::Str();;
	if ((!(_1abd07e8c_checkCrossCycle(&(*_self_), _77165_decl,_79417_message)))) {
		jule::Str _79721_errMsg = _79417_message;;
		_79417_message=jule::Str();
		_1abd07ad5_pushCycleError(&(*_self_), (*_self_)._field_referencer.get()._field_owner,_77165_decl,_79417_message);
		_79721_errMsg+=_79417_message;
		_1abd06a5c_pushErr(&(*_self_), _77138_ident.get()._field_Token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_79721_errMsg, &__jule_any_type7)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1bc46d38e:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({_77165_decl}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1bc46ec20:;
			{
				{
					auto &_match_expr{ _77165_decl };
					
					if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1bc470418:;
						{
							jule::Ptr<_1ab08a1a9_Struct> _81325_s = (*_self_)._field_referencer.get()._field_owner.cast_ptr<_1ab08a1a9_Struct>(&__jule_any_type68);;
							_81325_s.get()._field_Depends = jule::alloc_for_append(_81325_s.get()._field_Depends,1);_81325_s.get()._field_Depends.__push(_77165_decl.cast_ptr<_1ab08a1a9_Struct>(&__jule_any_type68));;
						}
					}
					_match_end_1bc47032a:;
				};
			}
		}
		_match_end_1bc46d306:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1abce75a8_Kind> _1abd086eb_fromTypeAlias(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab06e07d_IdentTypeDecl>& _82133_decl, jule::Ptr<_1abce6ce4_TypeAlias>& _82160_ta) {
	if ((!(_1abc59383_isAccessibleDefine((*_self_)._field_s.ptr(), _82160_ta.get()._field_Public,_82160_ta.get()._field_Token)))) {
		_1abd06a5c_pushErr(&(*_self_), _82133_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_82133_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	_82160_ta.get()._field_Used=true;
	if ((_82133_decl.get()._field_Generics.len() > 0LL)) {
		_1abd06a5c_pushErr(&(*_self_), _82133_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_82133_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_bannedGenerics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1bc4749d3:;
			if (it != expr.end()) {
				jule::Ptr<_1abce6ce4_TypeAlias> _83820_bg = *it;
				{
					if (((_83820_bg == _82160_ta) || ((_82160_ta.get()._field_Kind.get()._field_Kind != nullptr) && _1abce81e1_Equal(_82160_ta.get()._field_Kind.get()._field_Kind, _83820_bg.get()._field_Kind.get()._field_Kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1bc4749d3;
					};
				}
				_iter_next_1bc4749d3:;
				++it;
				goto _iter_begin_1bc4749d3;
			}
			_iter_end_1bc4749d3:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1bc476892:;
			if (it != expr.end()) {
				jule::Ptr<_1abce6ce4_TypeAlias> _84920_bg = *it;
				{
					if ((_84920_bg == _82160_ta)) {
						_1abd06a5c_pushErr(&(*_self_), _82133_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_82133_decl.get()._field_Ident, &__jule_any_type7)}));
						return nullptr;;
					};
					{
						auto &expr = _82160_ta.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1bc4774db:;
						if (it != expr.end()) {
							jule::Ptr<_1abce6ce4_TypeAlias> _85424_dg = *it;
							{
								if ((_84920_bg == _85424_dg)) {
									_1abd06a5c_pushErr(&(*_self_), _82133_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_82133_decl.get()._field_Ident, &__jule_any_type7)}));
									return nullptr;;
								};
							}
							_iter_next_1bc4774db:;
							++it;
							goto _iter_begin_1bc4774db;
						}
						_iter_end_1bc4774db:;
					};
				}
				_iter_next_1bc476892:;
				++it;
				goto _iter_begin_1bc476892;
			}
			_iter_end_1bc476892:;
		};
	};
	jule::Bool _86317_ok = _1abd08344_checkIllegalCycles(&(*_self_), _82133_decl,jule::Any(_82160_ta, &__jule_any_type69));;
	if ((!(_86317_ok))) {
		return nullptr;;
	};
	if ((_82160_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_86317_ok=_1abc63d71_checkTypeAliasDeclKind((*_self_)._field_s, _82160_ta,(*_self_)._field_lookup);
		if ((!(_86317_ok))) {
			return nullptr;;
		};
	};
	if ((_82160_ta.get()._field_Generic && ((*_self_)._field_ownerAlias != nullptr))) {
		(*_self_)._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*_self_)._field_ownerAlias.get()._field_Generics,1);(*_self_)._field_ownerAlias.get()._field_Generics.__push(_82160_ta);;
	};
	jule::Ptr<_1abce79d7_TypeKind> _88217_tk = jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Generic=_82160_ta.get()._field_Generic, ._field_Kind=_82160_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1abd0771c_pushReferenceByKind(&(*_self_), _88217_tk);
	if (_82160_ta.get()._field_CppLinked) {
		_88217_tk.get()._field_CppIdent=_82160_ta.get()._field_Ident;
	} else {
		_88217_tk.get()._field_CppIdent=_82160_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_1abce75a8_Kind>(_88217_tk, 5);;
}



inline jule::Ptr<_1abab3220_Enum> _1abd08aa3_fromEnum(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab06e07d_IdentTypeDecl>& _89528_decl, jule::Ptr<_1abab3220_Enum>& _89555_e) {
	if ((!(_1abc59383_isAccessibleDefine((*_self_)._field_s.ptr(), _89555_e.get()._field_Public,_89555_e.get()._field_Token)))) {
		_1abd06a5c_pushErr(&(*_self_), _89528_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_89528_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_89528_decl.get()._field_Generics.len() > 0LL)) {
		_1abd06a5c_pushErr(&(*_self_), _89528_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_89528_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	return _89555_e;;
}



inline jule::Ptr<_1abab481a_TypeEnum> _1abd08e5a_fromTypeEnum(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab06e07d_IdentTypeDecl>& _90732_decl, jule::Ptr<_1abab481a_TypeEnum>& _90759_e) {
	if ((!(_1abc59383_isAccessibleDefine((*_self_)._field_s.ptr(), _90759_e.get()._field_Public,_90759_e.get()._field_Token)))) {
		_1abd06a5c_pushErr(&(*_self_), _90732_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_90732_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_90732_decl.get()._field_Generics.len() > 0LL)) {
		_1abd06a5c_pushErr(&(*_self_), _90732_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_90732_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	return _90759_e;;
}



inline jule::Ptr<_1abab10ca_Trait> _1abd09312_fromTrait(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab06e07d_IdentTypeDecl>& _91929_decl, jule::Ptr<_1abab10ca_Trait>& _91956_t) {
	if ((!(_1abc59383_isAccessibleDefine((*_self_)._field_s.ptr(), _91956_t.get()._field_Public,_91956_t.get()._field_Token)))) {
		_1abd06a5c_pushErr(&(*_self_), _91929_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_91929_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_91929_decl.get()._field_Generics.len() > 0LL)) {
		_1abd06a5c_pushErr(&(*_self_), _91929_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_91929_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	_1bc45cda6_pushReference(&(*_self_), _91956_t);
	return _91956_t;;
}



inline jule::Bool _1abd096b9_checkStructIns(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab08a583_StructIns>& _93238_ins, jule::Ptr<_1a97237bc_Token>& _93260_errorToken) {
	jule::Bool __jule_func_result = false;
	if (_93238_ins.get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_93238_ins.get()._field_Checked=true;
	if ((((*_self_)._field_referencer != nullptr) && (__jule_any_type68_compare((*_self_)._field_referencer.get()._field_owner, _93238_ins.get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1abc6d001_precheckStructIns((*_self_)._field_s, _93238_ins,_93260_errorToken)))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((_93238_ins.get()._field_Generics.len() > 0LL)) {
		_1abc6d96e_checkStructInsOperators((*_self_)._field_s, _93238_ins);
		_1abc6d276_checkStructIns((*_self_)._field_s, _93238_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1abd09961_appendUsedStructReference(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab08a1a9_Struct>& _95349_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1bc488530:;
			{
				jule::Ptr<_1ab08a1a9_Struct> _95921_refS = (*_self_)._field_referencer.get()._field_owner.cast_ptr<_1ab08a1a9_Struct>(&__jule_any_type68);;
				if ((!(_1ab05489e_IsUses(_95921_refS.ptr(), _95349_s)))) {
					_95921_refS.get()._field_Uses = jule::alloc_for_append(_95921_refS.get()._field_Uses,1);_95921_refS.get()._field_Uses.__push(_95349_s);;
				};
			}
		}
		_match_end_1bc4884ca:;
	};
}



inline jule::Ptr<_1ab08a583_StructIns> _1abd09d29_buildStructInstance(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab06e07d_IdentTypeDecl>& _96643_decl, jule::Ptr<_1ab08a1a9_Struct>& _96670_s) {
	jule::Ptr<_1abd05473_referencer> _96817_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>> _97017_bannedGenerics = (*_self_)._field_bannedGenerics;;
	if (((*_self_)._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1abac584d_scopeChecker>>()) {
				_case_begin_1bc48b1d1:;
				{
					jule::Ptr<_1abac584d_scopeChecker> _97725_sc = (*_self_)._field_lookup.operator jule::Ptr<_1abac584d_scopeChecker>();;
					jule::Ptr<_1abac584d_scopeChecker> _97825_hard = _1abac8c08_getHardRoot(_97725_sc);;
					if (((_97825_hard.get()._field_owner.get()._field_Owner == nullptr) || (_97825_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != _96670_s))) {
						goto _match_end_1bc48b17b;
					};
					jule::I64 _98221_n = (_97825_hard.get()._field_owner.get()._field_Generics.len() + _97825_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*_self_)._field_bannedGenerics=_97825_hard.get()._field_table.get()._field_TypeAliases.slice(0LL,_98221_n);
				}
			}
			_match_end_1bc48b17b:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Trait<_1abd13959_Lookup> _99217_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=(*_self_)._field_rootLookup;
	jule::Ptr<_1ab08a583_StructIns> _99617_ins = _1ab04a730_instance(_96670_s);;
	_99617_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1abce62aa_InsGeneric>>::alloc(0LL, _96643_decl.get()._field_Generics.len());
	{
		auto &expr = _96643_decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1bc4905d1:;
		if (it != expr.end()) {
			jule::Ptr<_1ab06d9b7_TypeDecl> _99821_g = *it;
			{
				jule::Ptr<_1abce79d7_TypeKind> _99921_kind = _1abd0d2b1_build(&(*_self_), _99821_g.get()._field_Kind);;
				if ((_99921_kind == nullptr)) {
					return nullptr;;
				};
				_99617_ins.get()._field_Generics = jule::alloc_for_append(_99617_ins.get()._field_Generics,1);_99617_ins.get()._field_Generics.__push(jule::new_ptr<_1abce62aa_InsGeneric>(_1abce62aa_InsGeneric{._field_Kind=_99921_kind, }));;
			}
			_iter_next_1bc4905d1:;
			++it;
			goto _iter_begin_1bc4905d1;
		}
		_iter_end_1bc4905d1:;
	};
	(*_self_)._field_lookup=_99217_lookup;
	(*_self_)._field_bannedGenerics=_97017_bannedGenerics;
	(*_self_)._field_referencer=_96817_referencer;
	return _99617_ins;;
}



inline jule::Ptr<_1ab08a583_StructIns> _1abd0a1d1_fromStruct(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab06e07d_IdentTypeDecl>& _101434_decl, jule::Ptr<_1ab08a1a9_Struct>& _101461_s) {
	if ((!(_1abc59383_isAccessibleDefine((*_self_)._field_s.ptr(), _101461_s.get()._field_Public,_101461_s.get()._field_Token)))) {
		_1abd06a5c_pushErr(&(*_self_), _101434_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_101434_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	if ((*_self_)._field_selection) {
		if ((_101434_decl.get()._field_Generics.len() > 0LL)) {
			_1abd06a5c_pushErr(&(*_self_), _101434_decl.get()._field_Token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1ab08a583_StructIns>(_1ab08a583_StructIns{._field_Decl=_101461_s, });;
	};
	jule::Bool _103217_ok = ((*_self_)._field_notPlain || _1abd08344_checkIllegalCycles(&(*_self_), _101434_decl,jule::Any(_101461_s, &__jule_any_type68)));;
	if ((!(_103217_ok))) {
		return nullptr;;
	};
	_1abd09961_appendUsedStructReference(&(*_self_), _101461_s);
	jule::Ptr<_1ab08a583_StructIns> _103817_ins = _1abd09d29_buildStructInstance(&(*_self_), _101434_decl,_101461_s);;
	if ((_103817_ins == nullptr)) {
		return nullptr;;
	};
	_103217_ok=_1abc5a054_checkGenericQuantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_103817_ins.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_103817_ins.get()._field_Generics.len()),_101434_decl.get()._field_Token);
	if ((!(_103217_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1ab08a583_StructIns> _104817_existInstance = _1ab04b489_appendInstance(_101461_s.ptr(), _103817_ins);;
	if ((_104817_existInstance != nullptr)) {
		if ((!(_1abc62523_checkConstraintsStruct((*_self_)._field_s, _103817_ins,_101434_decl.get()._field_Token,_104817_existInstance)))) {
			return nullptr;;
		};
		_1bc459eb3_pushReference(&(*_self_), _104817_existInstance);
		return _104817_existInstance;;
	};
	if ((!(_1abd096b9_checkStructIns(&(*_self_), _103817_ins,_101434_decl.get()._field_Token)))) {
		return nullptr;;
	};
	_1bc459eb3_pushReference(&(*_self_), _103817_ins);
	return _103817_ins;;
}



inline jule::Trait<_1abce75a8_Kind> _1abd0a4de_getDef(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab06e07d_IdentTypeDecl>& _107230_decl) {
	{
		auto &expr = (*_self_)._field_ignoreGenerics;
		auto it = expr.begin();
		_iter_begin_1bc499d5a:;
		if (it != expr.end()) {
			jule::Ptr<_1ab07acb0_GenericDecl> _107316_g = *it;
			{
				if ((_107316_g.get()._field_Ident == _107230_decl.get()._field_Ident)) {
					return jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(_107316_g.get()._field_Ident), 6);;
				};
			}
			_iter_next_1bc499d5a:;
			++it;
			goto _iter_begin_1bc499d5a;
		}
		_iter_end_1bc499d5a:;
	};
	{
		auto &expr = (*_self_)._field_useGenerics;
		auto it = expr.begin();
		_iter_begin_1bc499ee2:;
		if (it != expr.end()) {
			jule::Ptr<_1abce6ce4_TypeAlias> _107921_g = *it;
			{
				if ((_107921_g.get()._field_Ident == _107230_decl.get()._field_Ident)) {
					if ((_107230_decl.get()._field_Generics.len() > 0LL)) {
						_1abd06a5c_pushErr(&(*_self_), _107230_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_107230_decl.get()._field_Ident, &__jule_any_type7)}));
						return nullptr;;
					};
					jule::Ptr<_1ab08a583_StructIns> _108525_st = _1abceb2c1_Struct(_107921_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_108525_st != nullptr)) {
						jule::Bool _108725_ok = _1abd08344_checkIllegalCycles(&(*_self_), _107230_decl,jule::Any(_108525_st.get()._field_Decl, &__jule_any_type68));;
						if ((!(_108725_ok))) {
							return nullptr;;
						};
					};
					return _107921_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_1bc499ee2:;
			++it;
			goto _iter_begin_1bc499ee2;
		}
		_iter_end_1bc499ee2:;
	};
	if ((!(_107230_decl.get()._field_CppLinked))) {
		jule::Ptr<_1abab3220_Enum> _109721_e = _1abd13959_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1abd13508_FindEnum((*_self_)._field_lookup, _107230_decl.get()._field_Ident);;
		if ((_109721_e != nullptr)) {
			return jule::Trait<_1abce75a8_Kind>(_1abd08aa3_fromEnum(&(*_self_), _107230_decl,_109721_e), 3);;
		};
		jule::Ptr<_1abab481a_TypeEnum> _110221_te = _1abd13959_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1abd13816_FindTypeEnum((*_self_)._field_lookup, _107230_decl.get()._field_Ident);;
		if ((_110221_te != nullptr)) {
			return jule::Trait<_1abce75a8_Kind>(_1abd08e5a_fromTypeEnum(&(*_self_), _107230_decl,_110221_te), 4);;
		};
		jule::Ptr<_1abab10ca_Trait> _110721_t = _1abd13959_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1abd131ea_FindTrait((*_self_)._field_lookup, _107230_decl.get()._field_Ident);;
		if ((_110721_t != nullptr)) {
			return jule::Trait<_1abce75a8_Kind>(_1abd09312_fromTrait(&(*_self_), _107230_decl,_110721_t), 2);;
		};
	} else if ((*_self_)._field_selection) {
		_1abd06a5c_pushErr(&(*_self_), _107230_decl.get()._field_Token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab08a1a9_Struct> _111617_s = _1abd13959_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1abd12a35_FindStruct((*_self_)._field_lookup, _107230_decl.get()._field_Ident,_107230_decl.get()._field_CppLinked);;
	if ((_111617_s != nullptr)) {
		return jule::Trait<_1abce75a8_Kind>(_1abd0a1d1_fromStruct(&(*_self_), _107230_decl,_111617_s), 0);;
	};
	jule::Ptr<_1abce6ce4_TypeAlias> _112117_ta = _1abd13959_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1abd1267d_FindTypeAlias((*_self_)._field_lookup, _107230_decl.get()._field_Ident,_107230_decl.get()._field_CppLinked);;
	if (((_112117_ta == nullptr) && (!((*_self_)._field_disBuiltin)))) {
		_112117_ta=_1abd22b55_findBuiltinTypeAlias(_107230_decl.get()._field_Ident);
	};
	if ((_112117_ta != nullptr)) {
		return _1abd086eb_fromTypeAlias(&(*_self_), _107230_decl,_112117_ta);;
	};
	_1abd06a5c_pushErr(&(*_self_), _107230_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_107230_decl.get()._field_Ident, &__jule_any_type7)}));
	return nullptr;;
}



inline jule::Trait<_1abce75a8_Kind> _1abd0a7ec_buildIdent(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab06e07d_IdentTypeDecl> _113333_decl) {
	{
		
		if (_1abd11319_isPrim(_113333_decl.get()._field_Ident)) {
			_case_begin_1bc4a5ea9:;
			{
				return jule::Trait<_1abce75a8_Kind>(_1abd07222_buildPrim(&(*_self_), _113333_decl), 6);;
			}
		}
		else {
			_case_begin_1bc4a57b1:;
			{
				return _1abd0a4de_getDef(&(*_self_), _113333_decl);;
			}
		}
		_match_end_1bc4a56e5:;
	};
}



inline jule::Trait<_1abce75a8_Kind> _1abd0ab0a_buildSubIdent(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab06e6cc_SubIdentTypeDecl> _114236_decl) {
	jule::Trait<_1abce75a8_Kind> _114317_ident = _1abd0a7ec_buildIdent(&(*_self_), _114236_decl.get()._field_Idents[0LL]);;
	if ((_114317_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _114317_ident };
		
		if (_match_expr.type_is<jule::Ptr<_1abab481a_TypeEnum>>()) {
			_case_begin_1bc4a77d5:;
			{
				goto _match_end_1bc4a76e7;
			}
		}
		else {
			_case_begin_1bc4a75b5:;
			{
				_1abd06a5c_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc4a76e7:;
	};
	jule::Ptr<_1abab481a_TypeEnum> _115417_t = _114317_ident.operator jule::Ptr<_1abab481a_TypeEnum>();;
	jule::Slice<jule::Ptr<_1ab06e07d_IdentTypeDecl>> _115517_idents = _114236_decl.get()._field_Idents.slice(1LL);;
	{
		auto &expr = _115517_idents;
		auto it = expr.begin();
		_iter_begin_1bc4a8bb0:;
		if (it != expr.end()) {
			jule::I64 _115613_i = it - expr.begin();
			jule::Ptr<_1ab06e07d_IdentTypeDecl> _115616_id = *it;
			{
				jule::Ptr<_1abab4254_TypeEnumItem> _115721_item = _1abab5354_FindItem(_115417_t.ptr(), _115616_id.get()._field_Ident);;
				if ((_115721_item == nullptr)) {
					_1abd06a5c_pushErr(&(*_self_), _115616_id.get()._field_Token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_115417_t.get()._field_Ident, &__jule_any_type7),jule::Any(_115616_id.get()._field_Ident, &__jule_any_type7)}));
					return nullptr;;
				};
				if (((_115517_idents.len() - _115613_i) == 1LL)) {
					_1abd0771c_pushReferenceByKind(&(*_self_), _115721_item.get()._field_Kind.get()._field_Kind);
					return jule::Trait<_1abce75a8_Kind>(_115721_item.get()._field_Kind.get()._field_Kind, 5);;
				};
				_115417_t=_1abcea820_TypeEnum(_115721_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_115417_t == nullptr)) {
					_1abd06a5c_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1bc4a8bb0:;
			++it;
			_115613_i++;
			goto _iter_begin_1bc4a8bb0;
		}
		_iter_end_1bc4a8bb0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd00eb8_Sptr> _1abd0ae18_buildSptrFromType(_1abd06353_typeChecker* _self_, jule::Ptr<_1abce79d7_TypeKind>& _117641_elem) {
	{
		
		if ((_117641_elem == nullptr)) {
			_case_begin_1bc4aca71:;
			{
				return nullptr;;
			}
		}
		else if ((_1abceb2c1_Struct(_117641_elem.ptr()) != nullptr)) {
			_case_begin_1bc4acae8:;
			{
				jule::Ptr<_1ab08a583_StructIns> _118217_s = _1abceb2c1_Struct(_117641_elem.ptr());;
				if (((_118217_s.get()._field_Decl != nullptr) && _118217_s.get()._field_Decl.get()._field_CppLinked)) {
					_1abd06a5c_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1abceaa84_Arr(_117641_elem.ptr()) != nullptr) && _1abceaa84_Arr(_117641_elem.ptr()).get()._field_Auto)) {
			_case_begin_1bc4acb70:;
			{
				_1abd06a5c_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc4ac1be:;
	};
	return jule::new_ptr<_1abd00eb8_Sptr>(_1abd00eb8_Sptr{._field_Elem=_117641_elem});;
}



inline jule::Ptr<_1abd00eb8_Sptr> _1abd0b226_buildSptr(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab06ed70_SptrTypeDecl> _119632_decl) {
	jule::Bool _119713_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_119713_notPlain;
	});;
	jule::Ptr<_1abce79d7_TypeKind> _120117_elem = _1abd0d5be_checkDecl(&(*_self_), _119632_decl.get()._field_Elem);;
	return _1abd0ae18_buildSptrFromType(&(*_self_), _120117_elem);;
}



inline jule::Ptr<_1abd0452c_Ptr> _1abd0b534_buildPtrFromType(_1abd06353_typeChecker* _self_, jule::Ptr<_1abce79d7_TypeKind>& _120540_elem) {
	{
		
		if ((_120540_elem == nullptr)) {
			_case_begin_1bc4b2977:;
			{
				return nullptr;;
			}
		}
		else if (((_1abceaa84_Arr(_120540_elem.ptr()) != nullptr) && _1abceaa84_Arr(_120540_elem.ptr()).get()._field_Auto)) {
			_case_begin_1bc4b29ee:;
			{
				_1abd06a5c_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1abd0452c_Ptr>();;
			}
		}
		_match_end_1bc4b2867:;
	};
	return jule::new_ptr<_1abd0452c_Ptr>(_1abd0452c_Ptr{._field_Elem=_120540_elem});;
}



inline jule::Ptr<_1abd0452c_Ptr> _1abd0b842_buildPtr(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab070843_PtrTypeDecl> _122031_decl) {
	jule::Bool _122113_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_122113_notPlain;
	});;
	jule::Ptr<_1abce79d7_TypeKind> _122517_elem = nullptr;;
	if ((!(_1ab070b95_IsUnsafe(_122031_decl.ptr())))) {
		_122517_elem=_1abd0d5be_checkDecl(&(*_self_), _122031_decl.get()._field_Elem);
		return _1abd0b534_buildPtrFromType(&(*_self_), _122517_elem);;
	};
	return jule::new_ptr<_1abd0452c_Ptr>(_1abd0452c_Ptr{._field_Elem=_122517_elem});;
}



inline jule::Ptr<_1abd01925_Slc> _1abd0bb50_buildSlc(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab07026b_SlcTypeDecl> _123731_decl) {
	jule::Bool _123813_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_123813_notPlain;
	});;
	jule::Ptr<_1abce79d7_TypeKind> _124217_elem = _1abd0d5be_checkDecl(&(*_self_), _123731_decl.get()._field_Elem);;
	{
		
		if ((_124217_elem == nullptr)) {
			_case_begin_1bc4b7a48:;
			{
				return nullptr;;
			}
		}
		else if (((_1abceaa84_Arr(_124217_elem.ptr()) != nullptr) && _1abceaa84_Arr(_124217_elem.ptr()).get()._field_Auto)) {
			_case_begin_1bc4b7ac0:;
			{
				_1abd06a5c_pushErr(&(*_self_), _123731_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc4b798d:;
	};
	return jule::new_ptr<_1abd01925_Slc>(_1abd01925_Slc{._field_Elem=_124217_elem});;
}



inline jule::Ptr<_1abd03ac0_Arr> _1abd0be5d_buildArr(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab070ec5_ArrTypeDecl> _125831_decl) {
	jule::Bool _125913_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_125913_notPlain;
	});;
	jule::I64 _126317_n = 0LL;;
	if ((!(_1ab07139e_AutoSized(_125831_decl.ptr())))) {
		jule::Ptr<_1abcbba55_Data> _126621_size = _1abcd8ee5_evalExpr(_1abc60598_eval((*_self_)._field_s, (*_self_)._field_lookup), _125831_decl.get()._field_Size);;
		if ((_126621_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1abcbc418_IsConst(_126621_size.ptr())))) {
			_1abd06a5c_pushErr(&(*_self_), _125831_decl.get()._field_Size.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1abce9d6e_Prim(_126621_size.get()._field_Kind.ptr()) == nullptr) || (!(_1aba866bb_IsInt(_1abce9d6e_Prim(_126621_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1abd06a5c_pushErr(&(*_self_), _125831_decl.get()._field_Size.get()._field_Token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_126317_n=static_cast<jule::I64>(static_cast<jule::I64>(_1aba87e92_AsI64(_126621_size.get()._field_Constant.ptr())));
		if ((_126317_n < 0LL)) {
			_1abd06a5c_pushErr(&(*_self_), _125831_decl.get()._field_Elem.get()._field_Token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1ab4a8011_BitSize != 64LL) && (static_cast<jule::F64>(_126317_n) > _1aba841d0_Max(jule::Str("int", 3))))) {
			_1abd06a5c_pushErr(&(*_self_), _125831_decl.get()._field_Size.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1abce79d7_TypeKind> _128917_elem = _1abd0d5be_checkDecl(&(*_self_), _125831_decl.get()._field_Elem);;
	{
		
		if ((_128917_elem == nullptr)) {
			_case_begin_1bc4c138c:;
			{
				return nullptr;;
			}
		}
		else if (((_1abceaa84_Arr(_128917_elem.ptr()) != nullptr) && _1abceaa84_Arr(_128917_elem.ptr()).get()._field_Auto)) {
			_case_begin_1bc4c1403:;
			{
				_1abd06a5c_pushErr(&(*_self_), _125831_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc4c118e:;
	};
	return jule::new_ptr<_1abd03ac0_Arr>(_1abd03ac0_Arr{._field_Auto=_1ab07139e_AutoSized(_125831_decl.ptr()), ._field_N=_126317_n, ._field_Elem=_128917_elem});;
}



inline jule::Ptr<_1abd02ecb_Map> _1abd0c26b_buildMap(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab071723_MapTypeDecl> _130731_decl) {
	jule::Bool _130813_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_130813_notPlain;
	});;
	jule::Ptr<_1abce79d7_TypeKind> _131217_key = _1abd0d5be_checkDecl(&(*_self_), _130731_decl.get()._field_Key);;
	if ((_131217_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abce79d7_TypeKind> _131717_val = _1abd0d5be_checkDecl(&(*_self_), _130731_decl.get()._field_Val);;
	if ((_131717_val == nullptr)) {
		return nullptr;;
	};
	if ((_1abcea5ab_Enum(_131717_val.ptr()) != nullptr)) {
		_1abd06a5c_pushErr(&(*_self_), _130731_decl.get()._field_Val.get()._field_Token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1abd02ecb_Map>(_1abd02ecb_Map{._field_Key=_131217_key, ._field_Val=_131717_val});;
}



inline jule::Ptr<_1abd024a3_Tuple> _1abd0c579_buildTuple(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab070557_TupleTypeDecl> _133133_decl) {
	jule::Slice<jule::Ptr<_1abce79d7_TypeKind>> _133217_types = jule::Slice<jule::Ptr<_1abce79d7_TypeKind>>::alloc(0LL, _133133_decl.get()._field_Types.len());;
	{
		auto &expr = _133133_decl.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1bc4c6a68:;
		if (it != expr.end()) {
			jule::Ptr<_1ab06d9b7_TypeDecl> _133321_t = *it;
			{
				jule::Ptr<_1abce79d7_TypeKind> _133421_kind = _1abd0d5be_checkDecl(&(*_self_), _133321_t);;
				if ((_133421_kind == nullptr)) {
					return nullptr;;
				};
				_133217_types = jule::alloc_for_append(_133217_types,1);_133217_types.__push(_133421_kind);;
			}
			_iter_next_1bc4c6a68:;
			++it;
			goto _iter_begin_1bc4c6a68;
		}
		_iter_end_1bc4c6a68:;
	};
	return jule::new_ptr<_1abd024a3_Tuple>(_1abd024a3_Tuple{._field_Types=_133217_types});;
}



inline jule::Bool _1abd0c887_checkFnTypes(_1abd06353_typeChecker* _self_, jule::Ptr<_1abaa1d79_FnIns>& _134436_f) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _134436_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1bc4c865d:;
		if (it != expr.end()) {
			jule::Ptr<_1abaa0eaa_ParamIns> _134521_p = *it;
			{
				_134521_p.get()._field_Kind=_1abd0d2b1_build(&(*_self_), _134521_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind);
				__jule_func_result=(_134521_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1abc62b50_checkFnParamKind((*_self_)._field_s, _134521_p);
			}
			_iter_next_1bc4c865d:;
			++it;
			goto _iter_begin_1bc4c865d;
		}
		_iter_end_1bc4c865d:;
	};
	if ((!(_1aba9e63a_IsVoid(_134436_f.get()._field_Decl.ptr())))) {
		_134436_f.get()._field_Result=_1abd0d2b1_build(&(*_self_), _134436_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind);
		__jule_func_result = (_134436_f.get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1abaa1d79_FnIns> _1abd0cb95_buildFn(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab080446_FnDecl> _136230_decl) {
	if ((_136230_decl.get()._field_Generics.len() > 0LL)) {
		_1abd06a5c_pushErr(&(*_self_), _136230_decl.get()._field_Token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aba9e1c8_Fn> _136817_f = _1abaa8006_buildFn(_136230_decl);;
	jule::I64 _137013_n = (*_self_)._field_s.get()._field_errors.len();;
	_1abc69a69_checkFnDecl((*_self_)._field_s, _136817_f);
	if ((_137013_n != (*_self_)._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1abaa1d79_FnIns> _137617_ins = _1abaa05b4_instanceForce(_136817_f);;
	_137617_ins.get()._field_Anon=true;
	jule::Bool _137913_ok = _1abd0c887_checkFnTypes(&(*_self_), _137617_ins);;
	if ((!(_137913_ok))) {
		return nullptr;;
	};
	return _137617_ins;;
}



inline jule::Trait<_1abce75a8_Kind> _1abd0cea3_buildByNamespace(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab06ea84_NamespaceTypeDecl> _138739_decl) {
	jule::Str _138813_path = _1abd10923_buildLinkPathByTokens(_138739_decl.get()._field_Idents);;
	jule::Ptr<_1abc4cd9e_ImportInfo> _138917_imp = _1abd13959_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1abd11e1e_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1abc4cd9e_ImportInfo>)>([=](jule::Ptr<_1abc4cd9e_ImportInfo> _138952_imp) mutable -> jule::Bool {
		if (((_138739_decl.get()._field_Idents.len() == 1LL) && (_138952_imp.get()._field_Alias == _138813_path))) {
			return true;;
		};
		return ((_138952_imp.get()._field_LinkPath == _138813_path) && _1abc50a0b_isAccessibleViaSelection(_138952_imp.ptr()));;
	}));;
	if (((_138917_imp == nullptr) || (!(_1abc50467_isLookupable(_138917_imp.ptr(), jule::Str("self", 4)))))) {
		_1abd06a5c_pushErr(&(*_self_), _138739_decl.get()._field_Idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_138813_path, &__jule_any_type7)}));
		return nullptr;;
	};
	_1abd06e14_disallowBuiltin(&(*_self_));
	jule::Trait<_1abd13959_Lookup> _140217_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1abd13959_Lookup>(_138917_imp, 1);
	jule::Ptr<_1abce79d7_TypeKind> _140417_kind = _1abd0d5be_checkDecl(&(*_self_), _138739_decl.get()._field_Kind);;
	(*_self_)._field_lookup=_140217_lookup;
	_1abd06c38_allowBuiltin(&(*_self_));
	return jule::Trait<_1abce75a8_Kind>(_140417_kind, 5);;
}



inline jule::Ptr<_1abce79d7_TypeKind> _1abd0d2b1_build(_1abd06353_typeChecker* _self_, jule::Any& _141029_declKind) {
	jule::Trait<_1abce75a8_Kind> _141117_kind = nullptr;;
	{
		auto &_match_expr{ _141029_declKind };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1bc4d569d:;
			{
				jule::Trait<_1abce75a8_Kind> _141421_t = _1abd0a7ec_buildIdent(&(*_self_), _141029_declKind.cast_ptr<_1ab06e07d_IdentTypeDecl>(&__jule_any_type21));;
				if ((_141421_t != nullptr)) {
					_141117_kind=_141421_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1bc4d64a1:;
			{
				jule::Trait<_1abce75a8_Kind> _141921_t = _1abd0ab0a_buildSubIdent(&(*_self_), _141029_declKind.cast_ptr<_1ab06e6cc_SubIdentTypeDecl>(&__jule_any_type95));;
				if ((_141921_t != nullptr)) {
					_141117_kind=_141921_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1bc4d6517:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1abd00eb8_Sptr> _142521_t = _1abd0b226_buildSptr(&(*_self_), _141029_declKind.cast_ptr<_1ab06ed70_SptrTypeDecl>(&__jule_any_type81));;
				if ((_142521_t != nullptr)) {
					_141117_kind=jule::Trait<_1abce75a8_Kind>(_142521_t, 7);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1bc4d5b76:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1abd0452c_Ptr> _143121_t = _1abd0b842_buildPtr(&(*_self_), _141029_declKind.cast_ptr<_1ab070843_PtrTypeDecl>(&__jule_any_type80));;
				if ((_143121_t != nullptr)) {
					_141117_kind=jule::Trait<_1abce75a8_Kind>(_143121_t, 12);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bc4d5bdc:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1abd01925_Slc> _143721_t = _1abd0bb50_buildSlc(&(*_self_), _141029_declKind.cast_ptr<_1ab07026b_SlcTypeDecl>(&__jule_any_type79));;
				if ((_143721_t != nullptr)) {
					_141117_kind=jule::Trait<_1abce75a8_Kind>(_143721_t, 8);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1bc4d5c53:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1abd03ac0_Arr> _144321_t = _1abd0be5d_buildArr(&(*_self_), _141029_declKind.cast_ptr<_1ab070ec5_ArrTypeDecl>(&__jule_any_type78));;
				if ((_144321_t != nullptr)) {
					_141117_kind=jule::Trait<_1abce75a8_Kind>(_144321_t, 11);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1bc4d5cb9:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1abd02ecb_Map> _144921_t = _1abd0c26b_buildMap(&(*_self_), _141029_declKind.cast_ptr<_1ab071723_MapTypeDecl>(&__jule_any_type82));;
				if ((_144921_t != nullptr)) {
					_141117_kind=jule::Trait<_1abce75a8_Kind>(_144921_t, 10);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1bc4d66c1:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1abd024a3_Tuple> _145521_t = _1abd0c579_buildTuple(&(*_self_), _141029_declKind.cast_ptr<_1ab070557_TupleTypeDecl>(&__jule_any_type83));;
				if ((_145521_t != nullptr)) {
					_141117_kind=jule::Trait<_1abce75a8_Kind>(_145521_t, 9);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bc4d6737:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1abaa1d79_FnIns> _146121_t = _1abd0cb95_buildFn(&(*_self_), _141029_declKind.cast_ptr<_1ab080446_FnDecl>(&__jule_any_type16));;
				if ((_146121_t != nullptr)) {
					_141117_kind=jule::Trait<_1abce75a8_Kind>(_146121_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bc4d679d:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1abce75a8_Kind> _146721_t = _1abd0cea3_buildByNamespace(&(*_self_), _141029_declKind.cast_ptr<_1ab06ea84_NamespaceTypeDecl>(&__jule_any_type99));;
				if ((_146721_t != nullptr)) {
					_141117_kind=_146721_t;
				};
			}
		}
		else {
			_case_begin_1bc4d5a22:;
			{
				_1abd06a5c_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc4d5934:;
	};
	if ((_141117_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _141117_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1abce79d7_TypeKind>>()) {
			_case_begin_1bc4e2985:;
			{
				return _141117_kind.operator jule::Ptr<_1abce79d7_TypeKind>();;
			}
		}
		else {
			_case_begin_1bc4e2a2e:;
			{
				jule::Ptr<_1abce79d7_TypeKind> _148221_tk = jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=_141117_kind});;
				{
					auto &_match_expr{ _141117_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1abcec734_Prim>>()) {
						_case_begin_1bc4e3469:;
						{
							if (((*_self_)._field_ignoredGenerics != nullptr)) {
								{
									(*((*_self_)._field_ignoredGenerics))=jule::append((*((*_self_)._field_ignoredGenerics)),jule::Slice<jule::Ptr<_1abce79d7_TypeKind>>::make({_148221_tk}));
								};
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ab08a583_StructIns>>()) {
						_case_begin_1bc4e34e1:;
						{
							jule::Ptr<_1ab08a583_StructIns> _148921_s = _141117_kind.operator jule::Ptr<_1ab08a583_StructIns>();;
							if (((_148921_s.get()._field_Decl != nullptr) && _148921_s.get()._field_Decl.get()._field_CppLinked)) {
								_148221_tk.get()._field_CppIdent=_148921_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_1bc4e3359:;
				};
				return _148221_tk;;
			}
		}
		_match_end_1bc4e2655:;
	};
}



inline jule::Ptr<_1abce79d7_TypeKind> _1abd0d5be_checkDecl(_1abd06353_typeChecker* _self_, jule::Ptr<_1ab06d9b7_TypeDecl>& _149833_decl) {
	jule::Ptr<_1a97237bc_Token> _150017_errorToken = (*_self_)._field_errorToken;;
	(*_self_)._field_errorToken=_149833_decl.get()._field_Token;
	jule::Ptr<_1abce79d7_TypeKind> _150317_kind = _1abd0d2b1_build(&(*_self_), _149833_decl.get()._field_Kind);;
	(*_self_)._field_errorToken=_150017_errorToken;
	return _150317_kind;;
}



inline void _1abd0d844_check(_1abd06353_typeChecker* _self_, jule::Ptr<_1abcebdb5_TypeSymbol>& _150929_t) {
	if ((_150929_t.get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1abce79d7_TypeKind> _151317_kind = _1abd0d5be_checkDecl(&(*_self_), _150929_t.get()._field_Decl);;
	if ((_151317_kind == nullptr)) {
		_1abcec448_removeKind(_150929_t.ptr());
		return;;
	};
	_150929_t.get()._field_Kind=_151317_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1abd06353_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1abd0dea4_prim(jule::Str& _152521_ident, jule::Ptr<_1abcec734_Prim> _152533_t) {
	return (_152533_t.get()._field_Kind == _152521_ident);;
}



inline jule::Bool static__1abd0e2e5_exist(jule::Str& _152922_ident, jule::Ptr<_1abce79d7_TypeKind>& _152939_k) {
	{
		
		if ((_1abce9d6e_Prim(_152939_k.ptr()) != nullptr)) {
			_case_begin_1bc4e93d7:;
			{
				return static__1abd0dea4_prim(_152922_ident,_1abce9d6e_Prim(_152939_k.ptr()));;
			}
		}
		else if ((_1abcea0d3_Sptr(_152939_k.ptr()) != nullptr)) {
			_case_begin_1bc4e944d:;
			{
				jule::Ptr<_1abd00eb8_Sptr> _153421_sptr = _1abcea0d3_Sptr(_152939_k.ptr());;
				return static__1abd0e2e5_exist(_152922_ident,_153421_sptr.get()._field_Elem);;
			}
		}
		else if ((_1abcea347_Ptr(_152939_k.ptr()) != nullptr)) {
			_case_begin_1bc4e94b4:;
			{
				jule::Ptr<_1abd0452c_Ptr> _153721_ptr = _1abcea347_Ptr(_152939_k.ptr());;
				return static__1abd0e2e5_exist(_152922_ident,_153721_ptr.get()._field_Elem);;
			}
		}
		else if ((_1abceace8_Slc(_152939_k.ptr()) != nullptr)) {
			_case_begin_1bc4e952a:;
			{
				jule::Ptr<_1abd01925_Slc> _154021_slc = _1abceace8_Slc(_152939_k.ptr());;
				return static__1abd0e2e5_exist(_152922_ident,_154021_slc.get()._field_Elem);;
			}
		}
		else if ((_1abceaa84_Arr(_152939_k.ptr()) != nullptr)) {
			_case_begin_1bc4e97b1:;
			{
				jule::Ptr<_1abd03ac0_Arr> _154321_arr = _1abceaa84_Arr(_152939_k.ptr());;
				return static__1abd0e2e5_exist(_152922_ident,_154321_arr.get()._field_Elem);;
			}
		}
		else if ((_1abceb799_Map(_152939_k.ptr()) != nullptr)) {
			_case_begin_1bc4e9827:;
			{
				jule::Ptr<_1abd02ecb_Map> _154621_m = _1abceb799_Map(_152939_k.ptr());;
				return (static__1abd0e2e5_exist(_152922_ident,_154621_m.get()._field_Key) || static__1abd0e2e5_exist(_152922_ident,_154621_m.get()._field_Val));;
			}
		}
		else if ((_1abceb2c1_Struct(_152939_k.ptr()) != nullptr)) {
			_case_begin_1bc4e988d:;
			{
				jule::Ptr<_1ab08a583_StructIns> _155021_s = _1abceb2c1_Struct(_152939_k.ptr());;
				{
					auto &expr = _155021_s.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1bc500a09:;
					if (it != expr.end()) {
						jule::Ptr<_1abce62aa_InsGeneric> _155125_g = *it;
						{
							if (static__1abd0e2e5_exist(_152922_ident,_155125_g.get()._field_Kind)) {
								return true;;
							};
						}
						_iter_next_1bc500a09:;
						++it;
						goto _iter_begin_1bc500a09;
					}
					_iter_end_1bc500a09:;
				};
				return false;;
			}
		}
		else if ((_1abceb05c_Fn(_152939_k.ptr()) != nullptr)) {
			_case_begin_1bc4e9904:;
			{
				jule::Ptr<_1abaa1d79_FnIns> _155821_f = _1abceb05c_Fn(_152939_k.ptr());;
				{
					auto &expr = _155821_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1bc502379:;
					if (it != expr.end()) {
						jule::Ptr<_1abaa0eaa_ParamIns> _155925_p = *it;
						{
							if (_1aba9ceb8_IsSelf(_155925_p.get()._field_Decl.ptr())) {
								goto _iter_next_1bc502379;
							};
							if (static__1abd0e2e5_exist(_152922_ident,_155925_p.get()._field_Kind)) {
								return true;;
							};
						}
						_iter_next_1bc502379:;
						++it;
						goto _iter_begin_1bc502379;
					}
					_iter_end_1bc502379:;
				};
				if ((_155821_f.get()._field_Result != nullptr)) {
					return static__1abd0e2e5_exist(_152922_ident,_155821_f.get()._field_Result);;
				};
				return false;;
			}
		}
		else if ((_1abceba0d_Tup(_152939_k.ptr()) != nullptr)) {
			_case_begin_1bc4e9b57:;
			{
				jule::Ptr<_1abd024a3_Tuple> _157221_tup = _1abceba0d_Tup(_152939_k.ptr());;
				{
					auto &expr = _157221_tup.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1bc504546:;
					if (it != expr.end()) {
						jule::Ptr<_1abce79d7_TypeKind> _157325_t = *it;
						{
							if (static__1abd0e2e5_exist(_152922_ident,_157325_t)) {
								return true;;
							};
						}
						_iter_next_1bc504546:;
						++it;
						goto _iter_begin_1bc504546;
					}
					_iter_end_1bc504546:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1bc4e9371:;
			{
				return false;;
			}
		}
		_match_end_1bc4e92a5:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1abd0da64_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac4c8ad0_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac5226ea_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1ac5236a7_stop(_1ac523025_scopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1ac52391b_stopped(_1ac523025_scopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);;
}



inline jule::Bool _1ac523b80_finished(_1ac523025_scopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());;
}



inline jule::Bool _1ac523de4_isLastSt(_1ac523025_scopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());;
}



inline void _1ac524213_pushErr(_1ac523025_scopeParser* _self_, jule::Ptr<_1a97237bc_Token> _19126_token, jule::Str _19141_fmt) {
	_1ac5400ca_pushErr((*_self_)._field_p.ptr(), _19126_token,_19141_fmt,jule::Slice<jule::Any>());
}



inline void _1ac524532_pushSuggestion(_1ac523025_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_1ac5403e9_pushSuggestion((*_self_)._field_p.ptr(), _19633_fmt,_19646_args);
}



inline void _1ac5247a7_insertAsNext(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _20036_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1ac5226ea_stmt>(_1ac5226ea_stmt{._field_tokens=_20036_tokens, });
}



inline jule::Ptr<_1ac5226ea_stmt> _1ac524a1b_next(_1ac523025_scopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];;
}



inline jule::Ptr<_1ab07d950_ScopeTree> _1ac524dc3_buildScope(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _21034_tokens, jule::Ptr<_1a97237bc_Token> _21056_end) {
	jule::Ptr<_1ab07d950_ScopeTree> _21117_s = _1ac52162d_newScope();;
	_21117_s.get()._field_Parent=(*_self_)._field_s;
	_21117_s.get()._field_End=_21056_end;
	_1ac523025_scopeParser _21417_ssp = _1ac523025_scopeParser{._field_p=(*_self_)._field_p, };;
	_1ac52daad_build(&_21417_ssp, _21034_tokens,_21117_s);
	return _21117_s;;
}



inline jule::Ptr<_1ab081425_VarDecl> _1ac5251d1_buildVarSt(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _22134_tokens) {
	jule::Ptr<_1ab081425_VarDecl> _22217_v = _1ac542b16_buildVar((*_self_)._field_p, _22134_tokens);;
	_22217_v.get()._field_Scope=(*_self_)._field_s;
	return _22217_v;;
}



inline jule::Ptr<_1ab0817cc_RetSt> _1ac5254de_buildRetSt(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _22733_tokens) {
	jule::Ptr<_1ab0817cc_RetSt> _22817_st = jule::new_ptr<_1ab0817cc_RetSt>(_1ab0817cc_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_1ac540707_buildExpr((*_self_)._field_p, _22733_tokens);
	};
	return _22817_st;;
}



inline jule::Ptr<_1ab081e3c_Iter> _1ac5257ec_buildWhileNextIter(_1ac523025_scopeParser* _self_, jule::Ptr<_1ac5226ea_stmt>& _23842_s) {
	jule::Ptr<_1ab081e3c_Iter> _23917_it = jule::new_ptr<_1ab081e3c_Iter>(_1ab081e3c_Iter{._field_Token=_23842_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _24217_tokens = _23842_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_1ab082712_WhileKind> _24317_kind = jule::new_ptr<_1ab082712_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_1ac540707_buildExpr((*_self_)._field_p, _24217_tokens);
	};
	if (_1ac523de4_isLastSt(&(*_self_))) {
		_1ac524213_pushErr(&(*_self_), _23917_it.get()._field_Token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24217_tokens=_1ac524a1b_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _25517_stTokens = _1ac539811_getBlockExpr(_24217_tokens);;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_1ac5226ea_stmt> _25721_stmt = jule::new_ptr<_1ac5226ea_stmt>(_1ac5226ea_stmt{._field_tokens=_25517_stTokens, ._field_terminated=_23842_s.get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_1ac52d78e_buildSt(&(*_self_), _25721_stmt);
	};
	jule::I64 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _26617_blockTokens = _1ac53c8d0_range(_26517_i,jule::Str("{", 1),jule::Str("}", 1),_24217_tokens);;
	if ((_26617_blockTokens == nullptr)) {
		_1ac5236a7_stop(&(*_self_));
		_1ac524213_pushErr(&(*_self_), _23917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1ac524532_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_1ac524213_pushErr(&(*_self_), _24217_tokens[_26517_i],jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_1ac524dc3_buildScope(&(*_self_), _26617_blockTokens,_24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=jule::Any(_24317_kind, &__jule_any_type39);
	return _23917_it;;
}



inline jule::Ptr<_1ab082712_WhileKind> _1ac525b0a_buildWhileIterKind(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _28342_tokens) {
	return jule::new_ptr<_1ab082712_WhileKind>(_1ab082712_WhileKind{._field_Expr=_1ac540707_buildExpr((*_self_)._field_p, _28342_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _1ac525e18_getRangeKindKeysTokens(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _29018_vars;;
	jule::Slice<_1a7995777_Log> _29024_errs;;
	({
		__jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log __jule_assign_result = _1ac53d44c_parts(_28946_toks,static_cast<jule::U64>(8LLU),true);
		_29018_vars = __jule_assign_result.__jule_result_arg0;
		_29024_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29024_errs);
	return _29018_vars;;
}



inline jule::Ptr<_1ab081425_VarDecl> _1ac526226_buildRangeKindKey(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _29541_tokens) {
	if ((_29541_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1ab081425_VarDecl> _29917_key = jule::new_ptr<_1ab081425_VarDecl>(_1ab081425_VarDecl{._field_Token=_29541_tokens[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_29917_key.get()._field_Mutable=true;
		if ((_29541_tokens.len() == 1LL)) {
			_1ac524213_pushErr(&(*_self_), _29917_key.get()._field_Token,jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=_29541_tokens[1LL];
	} else if ((_29541_tokens.len() > 1LL)) {
		_1ac524213_pushErr(&(*_self_), _29541_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ac524213_pushErr(&(*_self_), _29917_key.get()._field_Token,jule::Str("invalid syntax", 14));
		_1ac524532_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;;
}



inline jule::Slice<jule::Ptr<_1ab081425_VarDecl>> _1ac526534_buildRangeKindKeys(_1ac523025_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>>& _32042_parts) {
	jule::Slice<jule::Ptr<_1ab081425_VarDecl>> _32117_keys = nullptr;;
	{
		auto &expr = _32042_parts;
		auto it = expr.begin();
		_iter_begin_1bc67d35c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a97237bc_Token>> _32221_tokens = *it;
			{
				_32117_keys = jule::alloc_for_append(_32117_keys,1);_32117_keys.__push(_1ac526226_buildRangeKindKey(&(*_self_), _32221_tokens));;
			}
			_iter_next_1bc67d35c:;
			++it;
			goto _iter_begin_1bc67d35c;
		}
		_iter_end_1bc67d35c:;
	};
	return _32117_keys;;
}



inline void _1ac526875_setupRangeKindKeysPlain(_1ac523025_scopeParser* _self_, jule::Ptr<_1ab0830a3_RangeKind>& _32847_rng, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _32917_keyTokens = _1ac525e18_getRangeKindKeysTokens(&(*_self_), _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_1ac524213_pushErr(&(*_self_), _32847_rng.get()._field_InToken,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1ab081425_VarDecl>> _33617_keys = _1ac526534_buildRangeKindKeys(&(*_self_), _32917_keyTokens);;
	_32847_rng.get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		_32847_rng.get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _1ac526bc7_setupRangeKindKeysExplicit(_1ac523025_scopeParser* _self_, jule::Ptr<_1ab0830a3_RangeKind>& _34350_rng, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _34372_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _34517_rang = _1ac53c8d0_range(_34417_i,jule::Str("(", 1),jule::Str(")", 1),_34372_tokens);;
	if ((_34417_i < _34372_tokens.len())) {
		_1ac524213_pushErr(&(*_self_), _34350_rng.get()._field_InToken,jule::Str("invalid syntax", 14));
	};
	_1ac526875_setupRangeKindKeysPlain(&(*_self_), _34350_rng,_34517_rang);
}



inline void _1ac527007_setupRangeKindKeys(_1ac523025_scopeParser* _self_, jule::Ptr<_1ab0830a3_RangeKind>& _35242_rng, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _35264_tokens) {
	if ((_35264_tokens[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if ((_35264_tokens[0LL].get()._field_Kind != jule::Str("(", 1))) {
			_1ac524213_pushErr(&(*_self_), _35264_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1ac526bc7_setupRangeKindKeysExplicit(&(*_self_), _35242_rng,_35264_tokens);
		return;;
	};
	_1ac526875_setupRangeKindKeysPlain(&(*_self_), _35242_rng,_35264_tokens);
}



inline jule::Ptr<_1ab0830a3_RangeKind> _1ac527458_buildRangeIterKind(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _36442_var_tokens, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _36514_exprTokens, jule::Ptr<_1a97237bc_Token>& _36541_inToken) {
	jule::Ptr<_1ab0830a3_RangeKind> _36617_rng = jule::new_ptr<_1ab0830a3_RangeKind>(_1ab0830a3_RangeKind{._field_InToken=_36541_inToken, });;
	if ((_36514_exprTokens.len() == 0LL)) {
		_1ac524213_pushErr(&(*_self_), _36617_rng.get()._field_InToken,jule::Str("expression missing", 18));
		return _36617_rng;;
	};
	_36617_rng.get()._field_Expr=_1ac540707_buildExpr((*_self_)._field_p, _36514_exprTokens);
	if ((_36442_var_tokens.len() > 0LL)) {
		_1ac527007_setupRangeKindKeys(&(*_self_), _36617_rng,_36442_var_tokens);
	};
	return _36617_rng;;
}



inline jule::Any _1ac527810_buildCommonIterKind(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _38043_tokens, jule::Ptr<_1a97237bc_Token>& _38062_err_tok) {
	jule::I64 _38117_braceN = 0LL;;
	{
		auto &expr = _38043_tokens;
		auto it = expr.begin();
		_iter_begin_1bc688b70:;
		if (it != expr.end()) {
			jule::I64 _38214_i = it - expr.begin();
			jule::Ptr<_1a97237bc_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1bc68a26a:;
							{
								(_38117_braceN)++;
								goto _iter_next_1bc688b70;
							}
						}
						else {
							_case_begin_1bc689d5d:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_1bc689b4e:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_1bc688b70;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1bc68a314:;
						{
							jule::Slice<jule::Ptr<_1a97237bc_Token>> _39925_declTokens = _38043_tokens.slice(0LL,_38214_i);;
							jule::Slice<jule::Ptr<_1a97237bc_Token>> _40025_exprTokens = _38043_tokens.slice((_38214_i + 1LL));;
							return jule::Any(_1ac527458_buildRangeIterKind(&(*_self_), _39925_declTokens,_40025_exprTokens,_38221_tok), &__jule_any_type41);;
						}
					}
					_match_end_1bc68aac8:;
				};
			}
			_iter_next_1bc688b70:;
			++it;
			_38214_i++;
			goto _iter_begin_1bc688b70;
		}
		_iter_end_1bc688b70:;
	};
	return jule::Any(_1ac525b0a_buildWhileIterKind(&(*_self_), _38043_tokens), &__jule_any_type39);;
}



inline jule::Ptr<_1ab081e3c_Iter> _1ac527b1d_buildCommonIter(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _40738_tokens) {
	jule::Ptr<_1ab081e3c_Iter> _40817_it = jule::new_ptr<_1ab081e3c_Iter>(_1ab081e3c_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_1ac5236a7_stop(&(*_self_));
		_1ac524213_pushErr(&(*_self_), _40817_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1ac524532_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _41817_exprTokens = _1ac539811_getBlockExpr(_40738_tokens);;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_1ac527810_buildCommonIterKind(&(*_self_), _41817_exprTokens,_40817_it.get()._field_Token);
	};
	jule::I64 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _42317_scopeTokens = _1ac53c8d0_range(_42217_i,jule::Str("{", 1),jule::Str("}", 1),_40738_tokens);;
	if ((_42317_scopeTokens == nullptr)) {
		_1ac5236a7_stop(&(*_self_));
		_1ac524213_pushErr(&(*_self_), _40817_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1ac524532_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_1ac524213_pushErr(&(*_self_), _40738_tokens[_42217_i],jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_1ac524dc3_buildScope(&(*_self_), _42317_scopeTokens,_40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;;
}



inline jule::Ptr<_1ab081e3c_Iter> _1ac527e2b_buildIterSt(_1ac523025_scopeParser* _self_, jule::Ptr<_1ac5226ea_stmt>& _43735_st) {
	if (_43735_st.get()._field_terminated) {
		return _1ac5257ec_buildWhileNextIter(&(*_self_), _43735_st);;
	};
	return _1ac527b1d_buildCommonIter(&(*_self_), _43735_st.get()._field_tokens);;
}



inline jule::Ptr<_1ab08345a_BreakSt> _1ac528239_buildBreakSt(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _44436_tokens) {
	jule::Ptr<_1ab08345a_BreakSt> _44517_brk = jule::new_ptr<_1ab08345a_BreakSt>(_1ab08345a_BreakSt{._field_Token=_44436_tokens[0LL], });;
	if ((_44436_tokens.len() > 1LL)) {
		if ((_44436_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1ac524213_pushErr(&(*_self_), _44436_tokens[1LL],jule::Str("invalid syntax", 14));
			_1ac524532_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=_44436_tokens[1LL];
			if ((_44436_tokens.len() > 2LL)) {
				_1ac524213_pushErr(&(*_self_), _44436_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;;
}



inline jule::Ptr<_1ab083812_ContSt> _1ac528547_buildContSt(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _46235_tokens) {
	jule::Ptr<_1ab083812_ContSt> _46317_cont = jule::new_ptr<_1ab083812_ContSt>(_1ab083812_ContSt{._field_Token=_46235_tokens[0LL], });;
	if ((_46235_tokens.len() > 1LL)) {
		if ((_46235_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1ac524213_pushErr(&(*_self_), _46235_tokens[1LL],jule::Str("invalid syntax", 14));
			_1ac524532_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=_46235_tokens[1LL];
			if ((_46235_tokens.len() > 2LL)) {
				_1ac524213_pushErr(&(*_self_), _46235_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;;
}



inline jule::Ptr<_1ab083c85_If> _1ac528855_buildIf(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _48031_tokens) {
	jule::Ptr<_1ab083c85_If> _48117_model = jule::new_ptr<_1ab083c85_If>(_1ab083c85_If{._field_Token=_48031_tokens[0LL], });;
	_48031_tokens=_48031_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _48517_exprTokens = _1ac539811_getBlockExpr(_48031_tokens);;
	jule::I64 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_1ac524213_pushErr(&(*_self_), _48117_model.get()._field_Token,jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I64>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _49217_scopeTokens = _1ac53c8d0_range(_48617_i,jule::Str("{", 1),jule::Str("}", 1),_48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_1ac5236a7_stop(&(*_self_));
		_1ac524213_pushErr(&(*_self_), _48117_model.get()._field_Token,jule::Str("body is not exist", 17));
		_1ac524532_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a97237bc_Token> _49917_end = _48031_tokens[(_48617_i - 1LL)];;
	if ((_48617_i < _48031_tokens.len())) {
		if ((_48031_tokens[_48617_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			_48031_tokens=_48031_tokens.slice(_48617_i);
		} else {
			_1ac524213_pushErr(&(*_self_), _48031_tokens[_48617_i],jule::Str("invalid syntax", 14));
			_48031_tokens=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_1ac540707_buildExpr((*_self_)._field_p, _48517_exprTokens);
	_48117_model.get()._field_Scope=_1ac524dc3_buildScope(&(*_self_), _49217_scopeTokens,_49917_end);
	return _48117_model;;
}



inline jule::Ptr<_1ab08413c_Else> _1ac528b63_buildElse(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _51333_tokens) {
	jule::Ptr<_1ab08413c_Else> _51417_els = jule::new_ptr<_1ab08413c_Else>(_1ab08413c_Else{._field_Token=_51333_tokens[0LL], });;
	_51333_tokens=_51333_tokens.slice(1LL);
	jule::I64 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _51917_scopeTokens = _1ac53c8d0_range(_51817_i,jule::Str("{", 1),jule::Str("}", 1),_51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < _51333_tokens.len())) {
			_1ac524213_pushErr(&(*_self_), _51417_els.get()._field_Token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1ac5236a7_stop(&(*_self_));
			_1ac524213_pushErr(&(*_self_), _51417_els.get()._field_Token,jule::Str("body is not exist", 17));
			_1ac524532_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51817_i < _51333_tokens.len())) {
		_1ac524213_pushErr(&(*_self_), _51333_tokens[_51817_i],jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_1ac524dc3_buildScope(&(*_self_), _51917_scopeTokens,_51333_tokens[(_51817_i - 1LL)]);
	return _51417_els;;
}



inline jule::Ptr<_1ab0845b0_Conditional> _1ac528e71_buildIfElseChain(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _53739_tokens) {
	jule::Ptr<_1ab0845b0_Conditional> _53817_chain = jule::new_ptr<_1ab0845b0_Conditional>(_1ab0845b0_Conditional{._field_Head=_1ac528855_buildIf(&(*_self_), _53739_tokens), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1bc6a5a7c;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_1ab083c85_If> _55025_elif = _1ac528855_buildIf(&(*_self_), _53739_tokens);;
				_53817_chain.get()._field_Tail = jule::alloc_for_append(_53817_chain.get()._field_Tail,1);_53817_chain.get()._field_Tail.__push(_55025_elif);;
				goto _iter_next_1bc6a5a7c;
			};
			_53817_chain.get()._field_Default=_1ac528b63_buildElse(&(*_self_), _53739_tokens);
			goto _iter_end_1bc6a5a7c;
		}
	_iter_next_1bc6a5a7c:;
	}
	_iter_end_1bc6a5a7c:;;
	return _53817_chain;;
}



inline jule::Ptr<_1ab072ed8_Expr> _1ac52927e_buildCoCallSt(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _56036_tokens) {
	jule::Ptr<_1a97237bc_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_1ab072ed8_Expr> _56317_e = _1ac540707_buildExpr((*_self_)._field_p, _56036_tokens);;
	if ((_56317_e == nullptr)) {
		return _56317_e;;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1bc6a9d28:;
			{
				_56317_e.get()._field_Kind.cast_ptr<_1ab076eba_FnCallExpr>(&__jule_any_type115).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_1bc6aa09d:;
			{
				_1ac524213_pushErr(&(*_self_), _56113_token,jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_1bc6aa048:;
	};
	return _56317_e;;
}



inline jule::Ptr<_1ab07b51e_GotoSt> _1ac52958c_buildGotoSt(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _57635_tokens) {
	jule::Ptr<_1ab07b51e_GotoSt> _57717_gt = jule::new_ptr<_1ab07b51e_GotoSt>(_1ab07b51e_GotoSt{._field_Token=_57635_tokens[0LL], });;
	if ((_57635_tokens.len() == 1LL)) {
		_1ac524213_pushErr(&(*_self_), _57717_gt.get()._field_Token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if ((_57635_tokens.len() > 2LL)) {
		_1ac524213_pushErr(&(*_self_), _57635_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1a97237bc_Token> _58617_identToken = _57635_tokens[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ac524213_pushErr(&(*_self_), _58617_identToken,jule::Str("invalid syntax", 14));
		_1ac524532_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57717_gt;;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;;
}



inline jule::Ptr<_1ab07b80a_FallSt> _1ac52989a_buildFallSt(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _59635_tokens) {
	jule::Ptr<_1ab07b80a_FallSt> _59717_fll = jule::new_ptr<_1ab07b80a_FallSt>(_1ab07b80a_FallSt{._field_Token=_59635_tokens[0LL]});;
	if ((_59635_tokens.len() > 1LL)) {
		_1ac524213_pushErr(&(*_self_), _59635_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59717_fll;;
}



inline jule::Ptr<_1ab084c86_TypeAliasDecl> _1ac529ba8_buildTypeAliasSt(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _60640_tokens) {
	jule::Ptr<_1ab084c86_TypeAliasDecl> _60717_tad = _1ac541d02_buildTypeAliasDecl((*_self_)._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*_self_)._field_s;
	return _60717_tad;;
}



inline void _1ac52a11a_pushCaseExpr(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _61235_tokens, jule::Ptr<_1a97237bc_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_1ab072ed8_Expr>>& _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I64 _61921_i = 0LL;;
		jule::Ptr<_1ab06d9b7_TypeDecl> _62022_t;;
		jule::Bool _62025_ok = false;;
		({
			__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType((*_self_)._field_p, _61235_tokens,(&(_61921_i)),true);
			_62022_t = __jule_assign_result.__jule_result_arg0;
			_62025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62025_ok) {
			_61331_exprs = jule::alloc_for_append(_61331_exprs,1);_61331_exprs.__push(jule::new_ptr<_1ab072ed8_Expr>(_1ab072ed8_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=jule::Any(_62022_t, &__jule_any_type97)}));;
			if ((_61921_i < _61235_tokens.len())) {
				_1ac524213_pushErr(&(*_self_), _61235_tokens[_61921_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_61331_exprs = jule::alloc_for_append(_61331_exprs,1);_61331_exprs.__push(_1ac540707_buildExpr((*_self_)._field_p, _61235_tokens));;
}



inline jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _1ac52a56b_buildCaseExprs(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _63638_tokens, jule::Ptr<_1a97237bc_Token>& _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_1ab072ed8_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63917_braceN = 0LL;;
	jule::I64 _64017_j = 0LL;;
	{
		auto &expr = _63638_tokens;
		auto it = expr.begin();
		_iter_begin_1bc6b6241:;
		if (it != expr.end()) {
			jule::I64 _64114_i = it - expr.begin();
			jule::Ptr<_1a97237bc_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1bc6b8672:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_1bc6b8265:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_1bc6b8056:;
					};
					goto _iter_next_1bc6b6241;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_1bc6b6241;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64121_tok.get()._field_Kind == jule::Str("|", 1)))) {
						_case_begin_1bc6b8e69:;
						{
							jule::Slice<jule::Ptr<_1a97237bc_Token>> _65721_exprTokens = _63638_tokens.slice(_64017_j,_64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_1ac524213_pushErr(&(*_self_), _64121_tok,jule::Str("expression missing", 18));
							} else {
								_1ac52a11a_pushCaseExpr(&(*_self_), _63638_tokens.slice(_64017_j,_64114_i),_64121_tok,_63676_typeMatch,_63717_exprs);
							};
							_64017_j=static_cast<jule::I64>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1bc6b8ed0:;
						{
							_63661_colon=_64121_tok;
							_1ac52a11a_pushCaseExpr(&(*_self_), _63638_tokens.slice(_64017_j,_64114_i),_64121_tok,_63676_typeMatch,_63717_exprs);
							_63638_tokens=_63638_tokens.slice((_64114_i + 1LL));
							return _63717_exprs;;
						}
					}
					_match_end_1bc6b896e:;
				};
			}
			_iter_next_1bc6b6241:;
			++it;
			_64114_i++;
			goto _iter_begin_1bc6b6241;
		}
		_iter_end_1bc6b6241:;
	};
	_1ac524213_pushErr(&(*_self_), _63638_tokens[0LL],jule::Str("invalid syntax", 14));
	_63638_tokens=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1ab07d950_ScopeTree> _1ac52a879_buildCaseScope(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _67638_tokens) {
	jule::I64 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_1a97237bc_Token>> _68022_next;;
			({
				__jule_tuple_sx_1a97237bc_Token__jule_tuple_bool __jule_assign_result = _1ac5223ed_skipSt(_67921_i,_67638_tokens.slice(_67717_n));
				_68022_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_1bc6bc8da;
			};
			jule::Ptr<_1a97237bc_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_68417_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_1bc6bc8da;
			};
			jule::Slice<jule::Ptr<_1a97237bc_Token>> _68921_scopeTokens = _67638_tokens.slice(0LL,_67717_n);;
			jule::Ptr<_1ab07d950_ScopeTree> _69021_scope = _1ac524dc3_buildScope(&(*_self_), _68921_scopeTokens,_67638_tokens[_67717_n]);;
			_67638_tokens=_67638_tokens.slice(_67717_n);
			return _69021_scope;;
		}
	_iter_next_1bc6bc8da:;
	}
	_iter_end_1bc6bc8da:;;
	jule::Ptr<_1a97237bc_Token> _69417_end;;
	if ((_67638_tokens.len() > 0LL)) {
		_69417_end=_67638_tokens[(_67638_tokens.len() - 1LL)];
	};
	jule::Ptr<_1ab07d950_ScopeTree> _69817_scope = _1ac524dc3_buildScope(&(*_self_), _67638_tokens,_69417_end);;
	_67638_tokens=nullptr;
	return _69817_scope;;
}



inline __jule_tuple_x_1ab085209_Case__jule_tuple_bool _1ac52ac31_buildCase(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _70333_tokens, jule::Bool _70351_typeMatch) {
	__jule_tuple_x_1ab085209_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ab085209_Case> _70417_c = jule::new_ptr<_1ab085209_Case>(_1ab085209_Case{._field_Token=_70333_tokens[0LL], });;
	_70333_tokens=_70333_tokens.slice(1LL);
	jule::Ptr<_1a97237bc_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_1ac52a56b_buildCaseExprs(&(*_self_), _70333_tokens,_70817_colon,_70351_typeMatch);
	_70417_c.get()._field_Scope=_1ac52a879_buildCaseScope(&(*_self_), _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70417_c;
	__jule_func_result.__jule_result_arg1 = _71413_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1ab085209_Case__jule_tuple_x_1ab08413c_Else _1ac52b0d8_buildCases(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	__jule_tuple_sx_1ab085209_Case__jule_tuple_x_1ab08413c_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1ab085209_Case>> _71917_cases = nullptr;;
	jule::Ptr<_1ab08413c_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1a97237bc_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_72321_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_1ac524213_pushErr(&(*_self_), _72321_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1bc6c61da;
			};
			jule::Ptr<_1ab085209_Case> _72822_c;;
			jule::Bool _72825_isDefault = false;;
			({
				__jule_tuple_x_1ab085209_Case__jule_tuple_bool __jule_assign_result = _1ac52ac31_buildCase(&(*_self_), _71833_tokens,_71851_typeMatch);
				_72822_c = __jule_assign_result.__jule_result_arg0;
				_72825_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_1ab08413c_Else>(_1ab08413c_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_1ac524213_pushErr(&(*_self_), _72321_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				_71917_cases = jule::alloc_for_append(_71917_cases,1);_71917_cases.__push(_72822_c);;
			};
		}
	_iter_next_1bc6c61da:;
	}
	_iter_end_1bc6c61da:;;
	if (_72117_defNotLast) {
		_1ac524213_pushErr(&(*_self_), _72017_def.get()._field_Token,jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71917_cases;
	__jule_func_result.__jule_result_arg1 = _72017_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab0858d0_MatchCase> _1ac52b3e6_buildMatchCase(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _75237_tokens) {
	jule::Ptr<_1ab0858d0_MatchCase> _75317_m = jule::new_ptr<_1ab0858d0_MatchCase>(_1ab0858d0_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _76317_exprTokens = _1ac539811_getBlockExpr(_75237_tokens);;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_1ac540707_buildExpr((*_self_)._field_p, _76317_exprTokens);
	} else if (_75317_m.get()._field_TypeMatch) {
		_1ac524213_pushErr(&(*_self_), _75317_m.get()._field_Token,jule::Str("expression missing", 18));
	};
	jule::I64 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _77117_blockToks = _1ac53c8d0_range(_77017_i,jule::Str("{", 1),jule::Str("}", 1),_75237_tokens);;
	if ((_77117_blockToks == nullptr)) {
		_1ac5236a7_stop(&(*_self_));
		_1ac524213_pushErr(&(*_self_), _75317_m.get()._field_Token,jule::Str("body is not exist", 17));
		_1ac524532_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_77017_i < _75237_tokens.len())) {
		_1ac524213_pushErr(&(*_self_), _75237_tokens[_77017_i],jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	({
		__jule_tuple_sx_1ab085209_Case__jule_tuple_x_1ab08413c_Else __jule_assign_result = _1ac52b0d8_buildCases(&(*_self_), _77117_blockToks,_75317_m.get()._field_TypeMatch);
		_75317_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75317_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75317_m;;
}



inline jule::Ptr<_1ab07d950_ScopeTree> _1ac52b704_buildScopeSt(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_1a97237bc_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1ac524213_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_1ac524213_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1ac524213_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _81517_scopeTokens = _1ac53c8d0_range(_81417_i,jule::Str("{", 1),jule::Str("}", 1),_78535_tokens);;
	if ((_81517_scopeTokens == nullptr)) {
		_1ac524213_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81417_i < _78535_tokens.len())) {
		_1ac524213_pushErr(&(*_self_), _78535_tokens[_81417_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1ab07d950_ScopeTree> _82217_scope = _1ac524dc3_buildScope(&(*_self_), _81517_scopeTokens,_78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;;
}



inline jule::Ptr<_1ab07b167_LabelSt> _1ac52ba12_buildLabelSt(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _82836_tokens) {
	jule::Ptr<_1ab07b167_LabelSt> _82917_lbl = jule::new_ptr<_1ab07b167_LabelSt>(_1ab07b167_LabelSt{._field_Token=_82836_tokens[0LL], ._field_Ident=_82836_tokens[0LL].get()._field_Kind});;
	if ((_82836_tokens.len() > 2LL)) {
		_82836_tokens=_82836_tokens.slice(2LL);
		_1ac5247a7_insertAsNext(&(*_self_), _82836_tokens);
	};
	return _82917_lbl;;
}



inline __jule_tuple__1ab07d114_StmtData__jule_tuple_bool _1ac52bd20_buildIdSt(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _84333_tokens) {
	__jule_tuple__1ab07d114_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((_84333_tokens.len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a97237bc_Token> _84817_token = _84333_tokens[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1bc6dc3dd:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1ac52ba12_buildLabelSt(&(*_self_), _84333_tokens), &__jule_any_type59);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bc6dc388:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ac53ad40_assignInfo> _1ac52c12d_buildAssignInfo(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _85739_tokens) {
	jule::Ptr<_1ac53ad40_assignInfo> _85817_info = jule::new_ptr<_1ac53ad40_assignInfo>(_1ac53ad40_assignInfo{._field_ok=true});;
	jule::I64 _86117_braceN = 0LL;;
	{
		auto &expr = _85739_tokens;
		auto it = expr.begin();
		_iter_begin_1bc6ddb5e:;
		if (it != expr.end()) {
			jule::I64 _86214_i = it - expr.begin();
			jule::Ptr<_1a97237bc_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1bc6e027b:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_1bc6ded6e:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_1bc6deb60:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_1bc6e05ab:;
						{
							goto _iter_next_1bc6ddb5e;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1bc6e0622:;
						{
							goto _iter_next_1bc6ddb5e;
						}
					}
					else if ((!(_1a97283a4_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_1bc6e0688:;
						{
							goto _iter_next_1bc6ddb5e;
						}
					}
					_match_end_1bc6e0325:;
				};
				_85817_info.get()._field_l=_85739_tokens.slice(0LL,_86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= _85739_tokens.len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_1a972810c_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1bc6ddb5e;
				};
				_85817_info.get()._field_r=_85739_tokens.slice((_86214_i + 1LL));
				if (_1a972810c_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_1ac524213_pushErr(&(*_self_), _85817_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1bc6ddb5e;
			}
			_iter_next_1bc6ddb5e:;
			++it;
			_86214_i++;
			goto _iter_begin_1bc6ddb5e;
		}
		_iter_end_1bc6ddb5e:;
	};
	return _85817_info;;
}



inline jule::Ptr<_1ab07be15_AssignLeft> _1ac52c43b_buildAssignL(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _90536_tokens) {
	jule::Ptr<_1ab07be15_AssignLeft> _90617_l = jule::new_ptr<_1ab07be15_AssignLeft>(_1ab07be15_AssignLeft{._field_Token=_90536_tokens[0LL], });;
	if ((_90536_tokens[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_1ac540707_buildExpr((*_self_)._field_p, _90536_tokens);
	return _90617_l;;
}



inline jule::Slice<jule::Ptr<_1ab07be15_AssignLeft>> _1ac52c749_buildAssignLs(_1ac523025_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>>& _91637_parts) {
	jule::Slice<jule::Ptr<_1ab07be15_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto &expr = _91637_parts;
		auto it = expr.begin();
		_iter_begin_1bc6e732c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a97237bc_Token>> _91821_part = *it;
			{
				jule::Ptr<_1ab07be15_AssignLeft> _91921_l = _1ac52c43b_buildAssignL(&(*_self_), _91821_part);;
				_91717_lefts = jule::alloc_for_append(_91717_lefts,1);_91717_lefts.__push(_91921_l);;
			}
			_iter_next_1bc6e732c:;
			++it;
			goto _iter_begin_1bc6e732c;
		}
		_iter_end_1bc6e732c:;
	};
	return _91717_lefts;;
}



inline __jule_tuple_x_1ab07c454_AssignSt__jule_tuple_bool _1ac52ca57_buildPlainAssign(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _92640_tokens) {
	__jule_tuple_x_1ab07c454_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ac53ad40_assignInfo> _92717_info = _1ac52c12d_buildAssignInfo(&(*_self_), _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab07c454_AssignSt> _93217_assign = jule::new_ptr<_1ab07c454_AssignSt>(_1ab07c454_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _93618_parts;;
	jule::Slice<_1a7995777_Log> _93625_errs;;
	({
		__jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log __jule_assign_result = _1ac53d44c_parts(_92717_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
		_93618_parts = __jule_assign_result.__jule_result_arg0;
		_93625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93625_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_93625_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_93217_assign.get()._field_Left=_1ac52c749_buildAssignLs(&(*_self_), _93618_parts);
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_1ac540707_buildExpr((*_self_)._field_p, _92717_info.get()._field_r);
	};
	__jule_func_result.__jule_result_arg0 = _93217_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ab07c454_AssignSt__jule_tuple_bool _1ac52cd65_buildDeclAssign(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _95038_tokens) {
	__jule_tuple_x_1ab07c454_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_95038_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_1a97237bc_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_95617_token.get()._field_Kind != jule::Str("(", 1)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab07c454_AssignSt> _96117_assign = jule::new_ptr<_1ab07c454_AssignSt>(_1ab07c454_AssignSt{._field_Declarative=true, });;
	jule::I64 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _96617_rang = _1ac53c8d0_range(_96517_i,jule::Str("(", 1),jule::Str(")", 1),_95038_tokens);;
	if ((_96617_rang == nullptr)) {
		_1ac524213_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_1a97237bc_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_1ac540707_buildExpr((*_self_)._field_p, _97321_exprTokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _97818_parts;;
	jule::Slice<_1a7995777_Log> _97825_errs;;
	({
		__jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log __jule_assign_result = _1ac53d44c_parts(_96617_rang,static_cast<jule::U64>(8LLU),true);
		_97818_parts = __jule_assign_result.__jule_result_arg0;
		_97825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97825_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_97825_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &expr = _97818_parts;
		auto it = expr.begin();
		_iter_begin_1bc702bb7:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a97237bc_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1ac524213_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1bc702bb7;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_98421_part[0LL].get()._field_Kind == jule::Str("&", 1)))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1ac524213_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1bc702bb7;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (_98421_part[0LL].get()._field_Kind != jule::Str("(", 1)))) {
					_1ac524213_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1bc702bb7;
				};
				jule::Ptr<_1ab07be15_AssignLeft> _101421_l = _1ac52c43b_buildAssignL(&(*_self_), _98421_part);;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				_96117_assign.get()._field_Left = jule::alloc_for_append(_96117_assign.get()._field_Left,1);_96117_assign.get()._field_Left.__push(_101421_l);;
			}
			_iter_next_1bc702bb7:;
			++it;
			goto _iter_begin_1bc702bb7;
		}
		_iter_end_1bc702bb7:;
	};
	__jule_func_result.__jule_result_arg0 = _96117_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ab07c454_AssignSt__jule_tuple_bool _1ac52d173_buildAssignSt(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _102337_tokens) {
	__jule_tuple_x_1ab07c454_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1ac53b1d6_checkAssignTokens(_102337_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _102337_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1bc711775:;
			{
				({
					__jule_tuple_x_1ab07c454_AssignSt__jule_tuple_bool __jule_assign_result = _1ac52cd65_buildDeclAssign(&(*_self_), _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bc711368:;
			{
				({
					__jule_tuple_x_1ab07c454_AssignSt__jule_tuple_bool __jule_assign_result = _1ac52ca57_buildPlainAssign(&(*_self_), _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bc711313:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ab073879_UseExpr> _1ac52d481_buildUseExpr(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _103836_tokens) {
	if ((_103836_tokens.len() == 1LL)) {
		_1ac524213_pushErr(&(*_self_), _103836_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1ab073879_UseExpr> _104317_ue = jule::new_ptr<_1ab073879_UseExpr>(_1ab073879_UseExpr{._field_Token=_103836_tokens[0LL], });;
	_103836_tokens=_103836_tokens.slice(1LL);
	_104317_ue.get()._field_Expr=_1ac540707_buildExpr((*_self_)._field_p, _103836_tokens);
	return _104317_ue;;
}



inline jule::Any _1ac52d78e_buildSt(_1ac523025_scopeParser* _self_, jule::Ptr<_1ac5226ea_stmt>& _105131_st) {
	jule::Ptr<_1a97237bc_Token> _105217_token = _105131_st.get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _105422_s = jule::Any(nullptr);;
		jule::Bool _105425_ok = false;;
		({
			__jule_tuple__1ab07d114_StmtData__jule_tuple_bool __jule_assign_result = _1ac52bd20_buildIdSt(&(*_self_), _105131_st.get()._field_tokens);
			_105422_s = __jule_assign_result.__jule_result_arg0;
			_105425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_105425_ok) {
			return _105422_s;;
		};
	};
	jule::Ptr<_1ab07c454_AssignSt> _106018_s;;
	jule::Bool _106021_ok = false;;
	({
		__jule_tuple_x_1ab07c454_AssignSt__jule_tuple_bool __jule_assign_result = _1ac52d173_buildAssignSt(&(*_self_), _105131_st.get()._field_tokens);
		_106018_s = __jule_assign_result.__jule_result_arg0;
		_106021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106021_ok) {
		return jule::Any(_106018_s, &__jule_any_type61);;
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1bc7167e1:;
			{
				return jule::Any(_1ac52d481_buildUseExpr(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1bc716956:;
			{
				return jule::Any(_1ac5251d1_buildVarSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type18);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1bc7169bc:;
			{
				return jule::Any(_1ac5254de_buildRetSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type65);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1bc716a77:;
			{
				return jule::Any(_1ac527e2b_buildIterSt(&(*_self_), _105131_st), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1bc716add:;
			{
				return jule::Any(_1ac528239_buildBreakSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1bc716b54:;
			{
				return jule::Any(_1ac528547_buildContSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1bc716bba:;
			{
				return jule::Any(_1ac528e71_buildIfElseChain(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1bc716c31:;
			{
				return jule::Any(_1ac52927e_buildCoCallSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1bc716c97:;
			{
				return jule::Any(_1ac52958c_buildGotoSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1bc716d0d:;
			{
				return jule::Any(_1ac52989a_buildFallSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1bc716d74:;
			{
				return jule::Any(_1ac529ba8_buildTypeAliasSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1bc716dda:;
			{
				return jule::Any(_1ac52b3e6_buildMatchCase(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1bc716e62:;
			{
				return jule::Any(_1ac52b704_buildScopeSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bc716ed9:;
			{
				if ((_105217_token.get()._field_Kind == jule::Str("{", 1))) {
					return jule::Any(_1ac52b704_buildScopeSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type54);;
				};
			}
		}
		_match_end_1bc71669d:;
	};
	jule::Ptr<_1ab072ed8_Expr> _110117_expr = _1ac540707_buildExpr((*_self_)._field_p, _105131_st.get()._field_tokens);;
	if ((_110117_expr != nullptr)) {
		return jule::Any(_110117_expr, &__jule_any_type55);;
	};
	_1ac524213_pushErr(&(*_self_), _105217_token,jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1ac52daad_build(_1ac523025_scopeParser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _110929_tokens, jule::Ptr<_1ab07d950_ScopeTree>& _110952_s) {
	if ((_110952_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1ac522a91_splitStmts(_110929_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_110952_s;
	while (((!(_1ac523de4_isLastSt(&(*_self_)))) && (!(_1ac523b80_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1ac5226ea_stmt> _111721_st = _1ac524a1b_next(&(*_self_));;
			jule::Any _111821_data = _1ac52d78e_buildSt(&(*_self_), _111721_st);;
			if ((_111821_data != nullptr)) {
				(*_self_)._field_s.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_Stmts,1);(*_self_)._field_s.get()._field_Stmts.__push(_1ab07d345_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data});;
			};
			if (_1ac52391b_stopped(&(*_self_))) {
				goto _iter_end_1bc720113;
			};
		}
	_iter_next_1bc720113:;
	}
	_iter_end_1bc720113:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac523025_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1ac52ecce_pushErr(_1ac52e53c_exprBuilder* _self_, jule::Ptr<_1a97237bc_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_1ac5400ca_pushErr((*_self_)._field_p.ptr(), _4426_token,_4441_fmt,_4454_args);
}



inline void _1ac5300ed_pushSuggestion(_1ac52e53c_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_1ac5403e9_pushSuggestion((*_self_)._field_p.ptr(), _4933_fmt,_4946_args);
}



inline jule::Ptr<_1ab073b65_TupleExpr> _1ac53040b_buildTuple(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>>& _5334_parts) {
	jule::Ptr<_1ab073b65_TupleExpr> _5417_tuple = jule::new_ptr<_1ab073b65_TupleExpr>(_1ab073b65_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1ab072ed8_Expr>>::alloc(0LL, _5334_parts.len())});;
	{
		auto &expr = _5334_parts;
		auto it = expr.begin();
		_iter_begin_1bc7400ab:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a97237bc_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_1ac538e2b_buildFromTokens(&(*_self_), _5721_part));;
			}
			_iter_next_1bc7400ab:;
			++it;
			goto _iter_begin_1bc7400ab;
		}
		_iter_end_1bc7400ab:;
	};
	return _5417_tuple;;
}



inline jule::Ptr<_1ab07401c_LitExpr> _1ac530719_buildLit(_1ac52e53c_exprBuilder* _self_, jule::Ptr<_1a97237bc_Token> _6327_token) {
	return jule::new_ptr<_1ab07401c_LitExpr>(_1ab07401c_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});;
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac530a27_buildPrimitiveType(_1ac52e53c_exprBuilder* _self_, jule::Ptr<_1a97237bc_Token>& _7038_token) {
	return _1ac54eded_buildPrimType(_7038_token);;
}



inline jule::Any _1ac530d35_buildSingle(_1ac52e53c_exprBuilder* _self_, jule::Ptr<_1a97237bc_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1bc741a91:;
			{
				return jule::Any(_1ac530719_buildLit(&(*_self_), _7434_token), &__jule_any_type109);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bc741b18:;
			{
				if ((_7434_token.get()._field_Kind == jule::Str("...", 3))) {
					return jule::Any(jule::new_ptr<_1ab07575a_VariadicExpr>(_1ab07575a_VariadicExpr{._field_Token=_7434_token, }), &__jule_any_type84);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(27LLU) || _match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1bc741b90:;
			{
				return jule::Any(_1ac53a1d5_buildIdentExpr(_7434_token), &__jule_any_type88);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1bc741c17:;
			{
				return jule::Any(_1ac530a27_buildPrimitiveType(&(*_self_), _7434_token), &__jule_any_type97);;
			}
		}
		_match_end_1bc740ab2:;
	};
	_1ac52ecce_pushErr(&(*_self_), _7434_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ab074b99_IdentExpr> _1ac531143_buildCppLinkedIdent(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _9543_tokens) {
	if ((_9543_tokens[0LL].get()._field_Id != static_cast<jule::U64>(30LLU))) {
		return nullptr;;
	} else if ((_9543_tokens[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_1ac52ecce_pushErr(&(*_self_), _9543_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ac5300ed_pushSuggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a97237bc_Token> _10317_token = _9543_tokens[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ac52ecce_pushErr(&(*_self_), _9543_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ac5300ed_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab074b99_IdentExpr> _10917_expr = _1ac53a1d5_buildIdentExpr(_10317_token);;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;;
}



inline jule::Ptr<_1ab0753a3_UnaryExpr> _1ac531451_buildUnary(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _11433_tokens) {
	jule::Ptr<_1a97237bc_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_1ac52ecce_pushErr(&(*_self_), _11517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1a9723ec6_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_1ac52ecce_pushErr(&(*_self_), _11517_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind, &__jule_any_type7)}));
		return nullptr;;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_1ab0753a3_UnaryExpr>(_1ab0753a3_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_1ac538e2b_buildFromTokens(&(*_self_), _11433_tokens)});;
}



inline jule::Ptr<_1ab07643c_SubIdentExpr> _1ac53175e_buildObjSubIdent(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _13539_tokens) {
	jule::I64 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_1a97237bc_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL,_13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_1ac52ecce_pushErr(&(*_self_), _13717_identToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab07643c_SubIdentExpr>(_1ab07643c_SubIdentExpr{._field_Expr=_1ac538e2b_buildFromTokens(&(*_self_), _13539_tokens), ._field_Ident=_13717_identToken});;
}



inline jule::Ptr<_1ab075eb9_NsSelectionExpr> _1ac531a6c_buildNsSubIdent(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _15039_tokens) {
	jule::Ptr<_1ab075eb9_NsSelectionExpr> _15117_ns = jule::new_ptr<_1ab075eb9_NsSelectionExpr>();;
	{
		auto &expr = _15039_tokens;
		auto it = expr.begin();
		_iter_begin_1bc74cd77:;
		if (it != expr.end()) {
			jule::I64 _15214_i = it - expr.begin();
			jule::Ptr<_1a97237bc_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_1ac52ecce_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1ac5300ed_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1ac52ecce_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1ac5300ed_pushSuggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1bc74cd77:;
			++it;
			_15214_i++;
			goto _iter_begin_1bc74cd77;
		}
		_iter_end_1bc74cd77:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL,(_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;;
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac531d7a_buildType(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _16933_tokens) {
	jule::I64 _17017_i = 0LL;;
	jule::Ptr<_1ab06d9b7_TypeDecl> _17118_t;;
	jule::Bool _17121_ok = false;;
	({
		__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType((*_self_)._field_p, _16933_tokens,(&(_17017_i)),false);
		_17118_t = __jule_assign_result.__jule_result_arg0;
		_17121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17121_ok))) {
		_1ac52ecce_pushErr(&(*_self_), _16933_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17017_i < _16933_tokens.len())) {
		_1ac52ecce_pushErr(&(*_self_), _16933_tokens[_17017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _17118_t;;
}



inline jule::Any _1ac532188_buildSubIdent(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _18337_tokens) {
	jule::I64 _18413_i = (_18337_tokens.len() - 2LL);;
	jule::Ptr<_1a97237bc_Token> _18513_token = _18337_tokens[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1bc755027:;
			{
				return jule::Any(_1ac53175e_buildObjSubIdent(&(*_self_), _18337_tokens), &__jule_any_type94);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1bc755522:;
			{
				return jule::Any(_1ac531a6c_buildNsSubIdent(&(*_self_), _18337_tokens), &__jule_any_type98);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bc755588:;
			{
				if ((_18513_token.get()._field_Kind == jule::Str("]", 1))) {
					return jule::Any(_1ac531d7a_buildType(&(*_self_), _18337_tokens), &__jule_any_type97);;
				};
			}
		}
		_match_end_1bc7553bd:;
	};
	_1ac52ecce_pushErr(&(*_self_), _18513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ab07575a_VariadicExpr> _1ac532496_buildVariadic(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _20136_tokens) {
	jule::Ptr<_1a97237bc_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL,(_20136_tokens.len() - 1LL));
	return jule::new_ptr<_1ab07575a_VariadicExpr>(_1ab07575a_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_1ac538e2b_buildFromTokens(&(*_self_), _20136_tokens)});;
}



inline jule::Any _1ac5327a4_buildOpRight(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _21036_tokens) {
	jule::Ptr<_1a97237bc_Token> _21117_token = _21036_tokens[(_21036_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1bc7594e3:;
			{
				_21036_tokens=_21036_tokens.slice(0LL,(_21036_tokens.len() - 1LL));
				jule::Any _21521_d = _1ac538810_build(&(*_self_), _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type == &__jule_any_type115) {
						_case_begin_1bc75aabb:;
						{
							_21521_d.cast_ptr<_1ab076eba_FnCallExpr>(&__jule_any_type115).get()._field_Exception=jule::new_ptr<_1ab07d950_ScopeTree>(_1ab07d950_ScopeTree{._field_Deferred=true, });
							return _21521_d;;
						}
					}
					_match_end_1bc75abed:;
				};
			}
		}
		_match_end_1bc759328:;
	};
	_1ac52ecce_pushErr(&(*_self_), _21117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ab0732c4_RangeExpr> _1ac532ad4_buildBetweenParentheses(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_1ac52ecce_pushErr(&(*_self_), _23146_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1ac5300ed_pushSuggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_23146_tokens=_23146_tokens.slice(1LL,(_23146_tokens.len() - 1LL));
	return jule::new_ptr<_1ab0732c4_RangeExpr>(_1ab0732c4_RangeExpr{._field_Expr=_1ac538e2b_buildFromTokens(&(*_self_), _23146_tokens)});;
}



inline jule::Ptr<_1ab075b12_CastExpr> _1ac532e03_tryBuildCast(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _24336_tokens) {
	jule::I64 _24417_rangeN = 0LL;;
	{
		auto &expr = _24336_tokens;
		auto it = expr.begin();
		_iter_begin_1bc75de43:;
		if (it != expr.end()) {
			jule::I64 _24513_i = it - expr.begin();
			jule::Ptr<_1a97237bc_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1bc76051b:;
							{
								(_24417_rangeN)++;
								goto _iter_next_1bc75de43;
							}
						}
						else {
							_case_begin_1bc76010e:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_1bc75ee00:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_1bc75de43;
				} else if (((_24513_i + 1LL) == _24336_tokens.len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1a97237bc_Token>> _26421_typeTokens = _24336_tokens.slice(0LL,(_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_1a97237bc_Token>> _26521_exprTokens = _24336_tokens.slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1a97237bc_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_27217_tok.get()._field_Kind != jule::Str("(", 1)))) {
					return nullptr;;
				};
				jule::Ptr<_1ab075b12_CastExpr> _27721_cast = jule::new_ptr<_1ab075b12_CastExpr>(_1ab075b12_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_1ac52ecce_pushErr(&(*_self_), _26521_exprTokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1ac5300ed_pushSuggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_1ac52ecce_pushErr(&(*_self_), _26421_typeTokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1ac5300ed_pushSuggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL,(_26421_typeTokens.len() - 1LL));
					jule::I64 _29125_typeIndex = 0LL;;
					jule::Ptr<_1ab06d9b7_TypeDecl> _29226_t;;
					jule::Bool _29229_ok = false;;
					({
						__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType((*_self_)._field_p, _26421_typeTokens,(&(_29125_typeIndex)),true);
						_29226_t = __jule_assign_result.__jule_result_arg0;
						_29229_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_1ac52ecce_pushErr(&(*_self_), _26421_typeTokens[_29125_typeIndex],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I64 _30229_j = 0LL;;
						_1ac53c8d0_range(_30229_j,jule::Str("(", 1),jule::Str(")", 1),_26521_exprTokens);
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL,_30229_j);
						_27721_cast.get()._field_Expr=_1ac538e2b_buildFromTokens(&(*_self_), _26521_exprTokens);
					};
				};
				return _27721_cast;;
			}
			_iter_next_1bc75de43:;
			++it;
			_24513_i++;
			goto _iter_begin_1bc75de43;
		}
		_iter_end_1bc75de43:;
	};
	return nullptr;;
}



inline void _1ac5332bb_pushArg(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab072ed8_Expr>>& _31731_args, jule::Slice<jule::Ptr<_1a97237bc_Token>> _31750_tokens, jule::Ptr<_1a97237bc_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_1ac52ecce_pushErr(&(*_self_), _31768_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ac5300ed_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_31731_args = jule::alloc_for_append(_31731_args,1);_31731_args.__push(_1ac538e2b_buildFromTokens(&(*_self_), _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _1ac5335c9_buildArgs(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _33217_args = nullptr;;
	jule::I64 _33317_last = 0LL;;
	jule::I64 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL,(_32632_tokens.len() - 1LL));
	{
		auto &expr = _32632_tokens;
		auto it = expr.begin();
		_iter_begin_1bc76cb11:;
		if (it != expr.end()) {
			jule::I64 _33613_i = it - expr.begin();
			jule::Ptr<_1a97237bc_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1bc76e3a4:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_1bc76de97:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_1bc76dc88:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1bc76cb11;
				};
				_1ac5332bb_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last,_33613_i),_33616_token);
				_33317_last=static_cast<jule::I64>((_33613_i + 1LL));
			}
			_iter_next_1bc76cb11:;
			++it;
			_33613_i++;
			goto _iter_begin_1bc76cb11;
		}
		_iter_end_1bc76cb11:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_1ac5332bb_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[_33317_last]);
			};
		} else {
			_1ac5332bb_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;;
}



inline jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>> _1ac5338d7_buildCallGenerics(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;;
	};
	_36840_tokens=_36840_tokens.slice(1LL,(_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _37418_parts;;
	jule::Slice<_1a7995777_Log> _37425_errs;;
	({
		__jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log __jule_assign_result = _1ac53d44c_parts(_36840_tokens,static_cast<jule::U64>(8LLU),true);
		_37418_parts = __jule_assign_result.__jule_result_arg0;
		_37425_errs = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>>::alloc(0LL, _37418_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_37425_errs);
	{
		auto &expr = _37418_parts;
		auto it = expr.begin();
		_iter_begin_1bc7735d9:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a97237bc_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_1bc7735d9;
				};
				jule::I64 _38121_j = 0LL;;
				jule::Ptr<_1ab06d9b7_TypeDecl> _38222_generic;;
				({
					__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType((*_self_)._field_p, _37721_part,(&(_38121_j)),true);
					_38222_generic = __jule_assign_result.__jule_result_arg0;
				});
				if ((_38121_j < _37721_part.len())) {
					_1ac52ecce_pushErr(&(*_self_), _37721_part[_38121_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_1bc7735d9:;
			++it;
			goto _iter_begin_1bc7735d9;
		}
		_iter_end_1bc7735d9:;
	};
	return _37517_generics;;
}



inline jule::Ptr<_1ab076eba_FnCallExpr> _1ac533d38_buildFnCall(_1ac52e53c_exprBuilder* _self_, jule::Ptr<_1a97237bc_Token>& _39235_token, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _39255_expr, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _39276_args) {
	return jule::new_ptr<_1ab076eba_FnCallExpr>(_1ab076eba_FnCallExpr{._field_Token=_39235_token, ._field_Expr=_1ac538e2b_buildFromTokens(&(*_self_), _39255_expr), ._field_Args=_1ac5335c9_buildArgs(&(*_self_), _39276_args), });;
}



inline jule::Any _1ac534146_buildParenthesesRange(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _40045_tokens) {
	jule::Ptr<_1a97237bc_Token> _40117_token = _40045_tokens[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bc778237:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1bc778aa6:;
						{
							jule::Ptr<_1ab075b12_CastExpr> _40625_expr = _1ac532e03_tryBuildCast(&(*_self_), _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return jule::Any(_40625_expr, &__jule_any_type113);;
							};
						}
					}
					_match_end_1bc7788db:;
				};
			}
		}
		_match_end_1bc77806c:;
	};
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _41234_args_tokens;;
	({
		__jule_tuple_sx_1a97237bc_Token__jule_tuple_sx_1a97237bc_Token __jule_assign_result = _1ac53cb77_rangeLast(_40045_tokens);
		_41218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_41234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41218_exprTokens.len() == 0LL)) {
		return jule::Any(_1ac532ad4_buildBetweenParentheses(&(*_self_), _41234_args_tokens), &__jule_any_type108);;
	};
	return jule::Any(_1ac533d38_buildFnCall(&(*_self_), _40117_token,_41218_exprTokens,_41234_args_tokens), &__jule_any_type115);;
}



inline jule::Ptr<_1ab074726_UnsafeExpr> _1ac534454_buildUnsafeExpr(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _42138_tokens) {
	jule::Ptr<_1a97237bc_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I64 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _42517_rangeTokens = _1ac53c8d0_range(_42417_i,jule::Str("{", 1),jule::Str("}", 1),_42138_tokens);;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_1ac52ecce_pushErr(&(*_self_), _42138_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab074726_UnsafeExpr>(_1ab074726_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_1ac538e2b_buildFromTokens(&(*_self_), _42517_rangeTokens)});;
}



inline jule::Ptr<_1ab080446_FnDecl> _1ac534762_buildAnonFn(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _43635_tokens) {
	jule::Ptr<_1ab080446_FnDecl> _43717_f = _1ac545b3b_buildFn((*_self_)._field_p, _43635_tokens,false,false);;
	if ((!(_1ab080798_IsAnon(_43717_f.ptr())))) {
		_1ac52ecce_pushErr(&(*_self_), _43717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ac5300ed_pushSuggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _43717_f;;
}



inline jule::Any _1ac534a70_buildUnsafe(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _44535_tokens) {
	{
		auto &_match_expr{ _44535_tokens[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1bc77ebbc:;
			{
				return jule::Any(_1ac534762_buildAnonFn(&(*_self_), _44535_tokens), &__jule_any_type16);;
			}
		}
		else {
			_case_begin_1bc78012e:;
			{
				return jule::Any(_1ac534454_buildUnsafeExpr(&(*_self_), _44535_tokens), &__jule_any_type110);;
			}
		}
		_match_end_1bc7800a7:;
	};
}



inline void _1ac534e38_pushRangeLitPart(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _45539_part, jule::Ptr<_1a97237bc_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>>& _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_1ac52ecce_pushErr(&(*_self_), _4569_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ac5300ed_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_45634_parts = jule::alloc_for_append(_45634_parts,1);_45634_parts.__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _1ac535268_getBraceRangeLitExprParts(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _47217_parts = nullptr;;
	jule::I64 _47417_last = 0LL;;
	jule::I64 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL,(_46648_tokens.len() - 1LL));
	{
		auto &expr = _46648_tokens;
		auto it = expr.begin();
		_iter_begin_1bc7842ba:;
		if (it != expr.end()) {
			jule::I64 _47713_i = it - expr.begin();
			jule::Ptr<_1a97237bc_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1bc785a5d:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_1bc785651:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_1bc785442:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1bc7842ba;
				};
				_1ac534e38_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last,_47713_i),_47716_token,_47217_parts);
				_47417_last=static_cast<jule::I64>((_47713_i + 1LL));
			}
			_iter_next_1bc7842ba:;
			++it;
			_47713_i++;
			goto _iter_begin_1bc7842ba;
		}
		_iter_end_1bc7842ba:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_1ac534e38_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[_47417_last],_47217_parts);
			};
		} else {
			_1ac534e38_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[(_47417_last - 1LL)],_47217_parts);
		};
	};
	return _47217_parts;;
}



inline jule::Ptr<_1ab077949_FieldExprPair> _1ac535587_buildFieldExprPair(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_1ac52ecce_pushErr(&(*_self_), _50841_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab077949_FieldExprPair> _51317_pair = jule::new_ptr<_1ab077949_FieldExprPair>(_1ab077949_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_1ac538e2b_buildFromTokens(&(*_self_), _50841_tokens);
	return _51317_pair;;
}



inline jule::Ptr<_1ab072ed8_Expr> _1ac535895_buildStructLitExpr(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _52142_tokens) {
	jule::Ptr<_1a97237bc_Token> _52217_token = _52142_tokens[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (_52142_tokens.len() > 1LL))) {
		_52217_token=_52142_tokens[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_1ab072ed8_Expr>(_1ab072ed8_Expr{._field_Token=_52217_token, ._field_End=_52142_tokens[(_52142_tokens.len() - 1LL)], ._field_Kind=jule::Any(_1ac535587_buildFieldExprPair(&(*_self_), _52142_tokens), &__jule_any_type86)});;
		};
	};
	return _1ac538e2b_buildFromTokens(&(*_self_), _52142_tokens);;
}



inline jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _1ac535ba3_buildStructLitExprs(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _53717_parts = _1ac535268_getBraceRangeLitExprParts(&(*_self_), _53643_tokens);;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab072ed8_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_1ab072ed8_Expr>>::alloc(0LL, _53717_parts.len());;
	{
		auto &expr = _53717_parts;
		auto it = expr.begin();
		_iter_begin_1bc78d9cd:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a97237bc_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_1ac535895_buildStructLitExpr(&(*_self_), _54321_part));;
			}
			_iter_next_1bc78d9cd:;
			++it;
			goto _iter_begin_1bc78d9cd;
		}
		_iter_end_1bc78d9cd:;
	};
	return _54217_pairs;;
}



inline jule::Ptr<_1ab078197_StructLit> _1ac535ed3_buildTypedStructLiteral(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _54946_tokens) {
	jule::I64 _55017_i = 0LL;;
	jule::Ptr<_1ab06d9b7_TypeDecl> _55118_t;;
	jule::Bool _55121_ok = false;;
	({
		__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType((*_self_)._field_p, _54946_tokens,(&(_55017_i)),true);
		_55118_t = __jule_assign_result.__jule_result_arg0;
		_55121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_55121_ok))) {
		return nullptr;;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_1ac52ecce_pushErr(&(*_self_), _54946_tokens[_55017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_1a97237bc_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_56013_token.get()._field_Kind != jule::Str("{", 1)))) {
		_1ac52ecce_pushErr(&(*_self_), _56013_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab078197_StructLit>(_1ab078197_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_1ac535ba3_buildStructLitExprs(&(*_self_), _54946_tokens)});;
}



inline jule::Ptr<_1ab072ed8_Expr> _1ac536302_buildBraceLitPart(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _57341_tokens) {
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _57425_r;;
	({
		__jule_tuple_sx_1a97237bc_Token__jule_tuple_sx_1a97237bc_Token __jule_assign_result = _1ac539b96_splitDelim(_57341_tokens,static_cast<jule::U64>(11LLU));
		_57418_l = __jule_assign_result.__jule_result_arg0;
		_57425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_1ab072ed8_Expr>(_1ab072ed8_Expr{._field_Token=_57341_tokens[0LL], ._field_End=_57341_tokens[(_57341_tokens.len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1ab078de0_KeyValPair>(_1ab078de0_KeyValPair{._field_Key=_1ac538e2b_buildFromTokens(&(*_self_), _57418_l), ._field_Val=_1ac538e2b_buildFromTokens(&(*_self_), _57425_r), ._field_Colon=_57341_tokens[_57418_l.len()]}), &__jule_any_type87)});;
	};
	return _1ac538e2b_buildFromTokens(&(*_self_), _57341_tokens);;
}



inline jule::Ptr<_1ab07861a_BraceLit> _1ac536610_buildBraceLit(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _59037_tokens) {
	jule::Ptr<_1ab07861a_BraceLit> _59117_lit = jule::new_ptr<_1ab07861a_BraceLit>(_1ab07861a_BraceLit{._field_Token=_59037_tokens[0LL], ._field_End=_59037_tokens[(_59037_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _59617_parts = _1ac535268_getBraceRangeLitExprParts(&(*_self_), _59037_tokens);;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1ab072ed8_Expr>>::alloc(0LL, _59617_parts.len());
	{
		auto &expr = _59617_parts;
		auto it = expr.begin();
		_iter_begin_1bc79808c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a97237bc_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_1ac536302_buildBraceLitPart(&(*_self_), _60221_part));;
			}
			_iter_next_1bc79808c:;
			++it;
			goto _iter_begin_1bc79808c;
		}
		_iter_end_1bc79808c:;
	};
	return _59117_lit;;
}



inline jule::Any _1ac53691d_buildBraceRange(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _60939_tokens) {
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _61018_exprTokens;;
	jule::I64 _61030_rangeN = 0;;
	({
		__jule_tuple_sx_1a97237bc_Token__jule_tuple_int __jule_assign_result = _1ac53a47c_getRangeExprTokens(_60939_tokens);
		_61018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_61030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_1bc799d6e:;
			{
				return jule::Any(_1ac536610_buildBraceLit(&(*_self_), _60939_tokens), &__jule_any_type116);;
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_1bc799dd5:;
			{
				_1ac52ecce_pushErr(&(*_self_), _60939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc798eb1:;
	};
	jule::Ptr<_1a97237bc_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL,(_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _1ac538810_build(&(*_self_), _61018_exprTokens);;
		if ((_62421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type == &__jule_any_type115) {
				_case_begin_1bc79d180:;
				{
					_60939_tokens=_60939_tokens.slice((_61018_exprTokens.len() + 1LL));
					jule::I64 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_1a97237bc_Token>> _63225_rangeTokens = _1ac53c8d0_range(_63125_i,jule::Str("{", 1),jule::Str("}", 1),_60939_tokens);;
					jule::Ptr<_1ab076eba_FnCallExpr> _63325_model = _62421_d.cast_ptr<_1ab076eba_FnCallExpr>(&__jule_any_type115);;
					if (_1ab077592_Ignored(_63325_model.ptr())) {
						_1ac52ecce_pushErr(&(*_self_), _62113_elseToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1ac5300ed_pushSuggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_1ac541142_buildScope((*_self_)._field_p, _63225_rangeTokens,_60939_tokens[(_63125_i - 1LL)]);
					return _62421_d;;
				}
			}
			else {
				_case_begin_1bc79cc62:;
				{
					_1ac52ecce_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1bc79cb0d:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1bc7a2b13:;
			{
				return _1ac534a70_buildUnsafe(&(*_self_), _60939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1bc7a2b79:;
			{
				return jule::Any(_1ac534762_buildAnonFn(&(*_self_), _60939_tokens), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bc7a296a:;
			{
				return jule::Any(_1ac535ed3_buildTypedStructLiteral(&(*_self_), _60939_tokens), &__jule_any_type114);;
			}
		}
		else {
			_case_begin_1bc7a043a:;
			{
				_1ac52ecce_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc7a1cee:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _1ac536c2b_getEnumerableParts(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL,(_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _66318_parts;;
	jule::Slice<_1a7995777_Log> _66325_errors;;
	({
		__jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log __jule_assign_result = _1ac53d44c_parts(_66141_tokens,static_cast<jule::U64>(8LLU),true);
		_66318_parts = __jule_assign_result.__jule_result_arg0;
		_66325_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;;
}



inline jule::Ptr<_1ab0795c7_SliceExpr> _1ac537039_buildSlice(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _66833_tokens) {
	jule::Ptr<_1ab0795c7_SliceExpr> _66917_slc = jule::new_ptr<_1ab0795c7_SliceExpr>(_1ab0795c7_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _67417_parts = _1ac536c2b_getEnumerableParts(&(*_self_), _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1ab072ed8_Expr>>::alloc(0LL, _67417_parts.len());
	{
		auto &expr = _67417_parts;
		auto it = expr.begin();
		_iter_begin_1bc7a7585:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a97237bc_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_1bc7a7585;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_1ac538e2b_buildFromTokens(&(*_self_), _68021_p));;
			}
			_iter_next_1bc7a7585:;
			++it;
			goto _iter_begin_1bc7a7585;
		}
		_iter_end_1bc7a7585:;
	};
	return _66917_slc;;
}



inline jule::Ptr<_1ab079e46_IndexingExpr> _1ac53748a_buildIndexing(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_1a97237bc_Token>> _69113_tokens, jule::Ptr<_1a97237bc_Token> _69135_errorToken) {
	jule::Ptr<_1a97237bc_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL,(_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_1ac52ecce_pushErr(&(*_self_), _69135_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab072ed8_Expr> _69817_expr = _1ac538e2b_buildFromTokens(&(*_self_), _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab072ed8_Expr> _70217_index = _1ac538e2b_buildFromTokens(&(*_self_), _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab079e46_IndexingExpr>(_1ab079e46_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});;
}



inline jule::Ptr<_1ab07a551_SlicingExpr> _1ac537a2e_buildSlicing(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _71436_exprTokens, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _71463_start, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _71514_to, jule::Ptr<_1a97237bc_Token>& _71533_errorToken, jule::Ptr<_1a97237bc_Token> _71557_end) {
	jule::Ptr<_1ab07a551_SlicingExpr> _71617_slc = jule::new_ptr<_1ab07a551_SlicingExpr>(_1ab07a551_SlicingExpr{._field_Token=_71533_errorToken, ._field_End=_71557_end, ._field_Expr=_1ac538e2b_buildFromTokens(&(*_self_), _71436_exprTokens), });;
	if ((_71463_start.len() > 0LL)) {
		_71617_slc.get()._field_Start=_1ac538e2b_buildFromTokens(&(*_self_), _71463_start);
	};
	if ((_71514_to.len() > 0LL)) {
		_71617_slc.get()._field_To=_1ac538e2b_buildFromTokens(&(*_self_), _71514_to);
	};
	return _71617_slc;;
}



inline jule::Any _1ac537d3c_buildBracketRange(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _73040_tokens) {
	jule::Ptr<_1a97237bc_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _73218_exprTokens;;
	jule::I64 _73230_rangeN = 0;;
	({
		__jule_tuple_sx_1a97237bc_Token__jule_tuple_int __jule_assign_result = _1ac53a47c_getRangeExprTokens(_73040_tokens);
		_73218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_73230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_73218_exprTokens.len() == 0LL)) {
		return jule::Any(_1ac537039_buildSlice(&(*_self_), _73040_tokens), &__jule_any_type103);;
	} else if ((_73230_rangeN > 0LL)) {
		_1ac52ecce_pushErr(&(*_self_), _73117_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _74717_splitTokens = _73040_tokens.slice(1LL,(_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _74829_to;;
	({
		__jule_tuple_sx_1a97237bc_Token__jule_tuple_sx_1a97237bc_Token __jule_assign_result = _1ac539b96_splitDelim(_74717_splitTokens,static_cast<jule::U64>(11LLU));
		_74818_start = __jule_assign_result.__jule_result_arg0;
		_74829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return jule::Any(_1ac537a2e_buildSlicing(&(*_self_), _73218_exprTokens,_74818_start,_74829_to,_73117_errorToken,_73040_tokens[(_73040_tokens.len() - 1LL)]), &__jule_any_type112);;
	};
	return jule::Any(_1ac53748a_buildIndexing(&(*_self_), _73218_exprTokens,_73040_tokens,_73117_errorToken), &__jule_any_type111);;
}



inline jule::Any _1ac53814a_buildData(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _75533_tokens) {
	{
		auto _match_expr{ _75533_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1bc7b3e54:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1bc7b4020:;
			{
				return _1ac530d35_buildSingle(&(*_self_), _75533_tokens[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1bc7b4086:;
			{
				if ((_75533_tokens[0LL].get()._field_Id == static_cast<jule::U64>(30LLU))) {
					return jule::Any(_1ac531143_buildCppLinkedIdent(&(*_self_), _75533_tokens), &__jule_any_type88);;
				};
			}
		}
		_match_end_1bc7b3728:;
	};
	jule::Ptr<_1a97237bc_Token> _76717_token = _75533_tokens[(_75533_tokens.len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_76717_token.get()._field_Kind == jule::Str("...", 3)))) {
		return jule::Any(_1ac532496_buildVariadic(&(*_self_), _75533_tokens), &__jule_any_type84);;
	};
	_76717_token=_75533_tokens[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bc7b7188:;
			{
				if (((_75533_tokens.len() > 1LL) && (_76717_token.get()._field_Kind == jule::Str("*", 1)))) {
					_76717_token=_75533_tokens[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U64>(34LLU)))) {
						return jule::Any(_1ac531d7a_buildType(&(*_self_), _75533_tokens), &__jule_any_type97);;
					};
				};
				return jule::Any(_1ac531451_buildUnary(&(*_self_), _75533_tokens), &__jule_any_type96);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bc7b72dc:;
			{
				if ((_75533_tokens.len() < 3LL)) {
					goto _match_end_1bc7b7276;
				};
				if ((_75533_tokens.len() > 3LL)) {
					jule::Ptr<_1a97237bc_Token> _78921_t = _75533_tokens[(_75533_tokens.len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_78921_t.get()._field_Kind == jule::Str(")", 1)))) {
						goto _match_end_1bc7b7276;
					};
				};
				jule::Ptr<_1a97237bc_Token> _79517_next = _75533_tokens[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_79517_next.get()._field_Kind != jule::Str("]", 1)))) {
					goto _match_end_1bc7b7276;
				};
				return jule::Any(_1ac531d7a_buildType(&(*_self_), _75533_tokens), &__jule_any_type97);;
			}
		}
		_match_end_1bc7b7276:;
	};
	_76717_token=_75533_tokens[(_75533_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1bc7b782b:;
			{
				return _1ac532188_buildSubIdent(&(*_self_), _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1bc7bcd4d:;
			{
				return jule::Any(_1ac531d7a_buildType(&(*_self_), _75533_tokens), &__jule_any_type97);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bc7bcdb4:;
			{
				return _1ac5327a4_buildOpRight(&(*_self_), _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bc7bce2a:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1bc7be69b:;
						{
							return _1ac534146_buildParenthesesRange(&(*_self_), _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1bc7be723:;
						{
							return _1ac53691d_buildBraceRange(&(*_self_), _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1bc7be79a:;
						{
							return _1ac537d3c_buildBracketRange(&(*_self_), _75533_tokens);;
						}
					}
					_match_end_1bc7be1a1:;
				};
			}
		}
		_match_end_1bc7b77c6:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		return jule::Any(_1ac531d7a_buildType(&(*_self_), _75533_tokens), &__jule_any_type97);;
	};
	_1ac52ecce_pushErr(&(*_self_), _76717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ac538502_buildBinop(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _83134_tokens, jule::I64 _83152_i) {
	jule::Ptr<_1a97237bc_Token> _83217_op = _83134_tokens[_83152_i];;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _83317_leftTokens = _83134_tokens.slice(0LL,_83152_i);;
	if ((_1ac53927d_isTypeOp(_83217_op.get()._field_Kind) && _1ac539569_isTypeRange(_83317_leftTokens))) {
		return jule::Any(_1ac531d7a_buildType(&(*_self_), _83134_tokens), &__jule_any_type97);;
	};
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _83817_rightTokens = _83134_tokens.slice((_83152_i + 1LL));;
	if ((_83317_leftTokens.len() == 0LL)) {
		_1ac52ecce_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ac5300ed_pushSuggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83817_rightTokens.len() == 0LL)) {
		_1ac52ecce_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ac5300ed_pushSuggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1ab0768b0_BinopExpr>(_1ab0768b0_BinopExpr{._field_Left=_1ac538e2b_buildFromTokens(&(*_self_), _83317_leftTokens), ._field_Right=_1ac538e2b_buildFromTokens(&(*_self_), _83817_rightTokens), ._field_Op=_83217_op}), &__jule_any_type117);;
}



inline jule::Any _1ac538810_build(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _85629_tokens) {
	jule::I64 _85713_i = _1ac539e3d_findLowestPrecOp(_85629_tokens);;
	if ((_85713_i == -1LL)) {
		return _1ac53814a_buildData(&(*_self_), _85629_tokens);;
	};
	return _1ac538502_buildBinop(&(*_self_), _85629_tokens,_85713_i);;
}



inline jule::Any _1ac538b1d_buildKind(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _86433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _86518_parts;;
	jule::Slice<_1a7995777_Log> _86525_errors;;
	({
		__jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log __jule_assign_result = _1ac53d44c_parts(_86433_tokens,static_cast<jule::U64>(8LLU),true);
		_86518_parts = __jule_assign_result.__jule_result_arg0;
		_86525_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86525_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_86525_errors);
		return nullptr;;
	} else if ((_86518_parts.len() > 1LL)) {
		return jule::Any(_1ac53040b_buildTuple(&(*_self_), _86518_parts), &__jule_any_type89);;
	};
	return _1ac538810_build(&(*_self_), _86433_tokens);;
}



inline jule::Ptr<_1ab072ed8_Expr> _1ac538e2b_buildFromTokens(_1ac52e53c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _87538_tokens) {
	if ((_87538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab072ed8_Expr>(_1ab072ed8_Expr{._field_Token=_87538_tokens[0LL], ._field_End=_87538_tokens[(_87538_tokens.len() - 1LL)], ._field_Kind=_1ac538b1d_buildKind(&(*_self_), _87538_tokens)});;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac52e53c_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac53ad40_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1ac53e99d_stop(_1ac53e66d_parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1ac53ec12_stopped(_1ac53e66d_parser* _self_) {
	return ((*_self_)._field_ast == nullptr);;
}



inline void _1ac5400ca_pushErr(_1ac53e66d_parser* _self_, jule::Ptr<_1a97237bc_Token> _28126_token, jule::Str _28141_fmt, jule::Slice<jule::Any> _28154_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ac53dace_compilerErr(_28126_token,_28141_fmt,_28154_args));;
}



inline void _1ac5403e9_pushSuggestion(_1ac53e66d_parser* _self_, jule::Str _28633_fmt, jule::Slice<jule::Any> _28646_args) {
	{
		_1ac53e00d_pushSuggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_28633_fmt,_28646_args);
	};
}



inline jule::Ptr<_1ab072ed8_Expr> _1ac540707_buildExpr(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _29034_tokens) {
	jule::Ptr<_1ac52e53c_exprBuilder> _29117_ep = jule::new_ptr<_1ac52e53c_exprBuilder>(_1ac52e53c_exprBuilder{._field_p=_self_});;
	jule::Ptr<_1ab072ed8_Expr> _29417_expr = _1ac538e2b_buildFromTokens(_29117_ep.ptr(), _29034_tokens);;
	return _29417_expr;;
}



inline jule::Ptr<_1ab03a720_Directive> _1ac540a15_buildDirective(_1ac53e66d_parser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _29837_tokens) {
	if ((_29837_tokens.len() == 1LL)) {
		_1ac5400ca_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_29837_tokens[1LL].get()._field_Column != (_29837_tokens[0LL].get()._field_Column + 1LL))) {
		_1ac5400ca_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab03a720_Directive>(_1ab03a720_Directive{._field_Tag=_29837_tokens[1LL], ._field_Args=_29837_tokens.slice(2LL)});;
}



inline void _1ac540c8a_pushDirective(_1ac53e66d_parser* _self_, jule::Ptr<_1ab03a720_Directive> _31336_d) {
	if ((_31336_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1bc802987:;
		if (it != expr.end()) {
			jule::Ptr<_1ab03a720_Directive> _31816_pd = *it;
			{
				if ((_31336_d.get()._field_Tag.get()._field_Kind == _31816_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1bc802987:;
			++it;
			goto _iter_begin_1bc802987;
		}
		_iter_end_1bc802987:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_31336_d);;
}



inline jule::Ptr<_1ab07d950_ScopeTree> _1ac541142_buildScope(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _32635_tokens, jule::Ptr<_1a97237bc_Token> _32657_end) {
	jule::Ptr<_1ab07d950_ScopeTree> _32717_s = _1ac52162d_newScope();;
	_32717_s.get()._field_End=_32657_end;
	_1ac523025_scopeParser _32917_sp = _1ac523025_scopeParser{._field_p=_self_, };;
	_1ac52daad_build(&_32917_sp, _32635_tokens,_32717_s);
	return _32717_s;;
}



inline __jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool _1ac541593__buildType(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _33642_tokens, jule::I64* _33713_i, jule::Bool _33722_err) {
	__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1ac550382_typeBuilder _33817_tb = _1ac550382_typeBuilder{._field_p=_self_, ._field_tokens=_33642_tokens, ._field_i=_33713_i, ._field_err=_33722_err};;
	jule::Ptr<_1ab06d9b7_TypeDecl> _34418_decl;;
	jule::Bool _34424_ok = false;;
	({
		__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac55362c_build(&_33817_tb);
		_34418_decl = __jule_assign_result.__jule_result_arg0;
		_34424_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _34418_decl;
	__jule_func_result.__jule_result_arg1 = _34424_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool _1ac5419e4_buildType(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _34941_tokens, jule::I64* _35013_i, jule::Bool _35022_err) {
	__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a97237bc_Token> _35113_token = _34941_tokens[(*(_35013_i))];;
	jule::Ptr<_1ab06d9b7_TypeDecl> _35218_t;;
	jule::Bool _35221_ok = false;;
	({
		__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac541593__buildType(_self_, _34941_tokens,_35013_i,_35022_err);
		_35218_t = __jule_assign_result.__jule_result_arg0;
		_35221_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_35022_err && (!(_35221_ok)))) {
		_1ac5400ca_pushErr(_self_.ptr(), _35113_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _35218_t;
	__jule_func_result.__jule_result_arg1 = _35221_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab084c86_TypeAliasDecl> _1ac541d02_buildTypeAliasDecl(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _35943_tokens) {
	jule::I64 _36017_i = 1LL;;
	if ((_36017_i >= _35943_tokens.len())) {
		_1ac5400ca_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab084c86_TypeAliasDecl> _36517_tad = jule::new_ptr<_1ab084c86_TypeAliasDecl>(_1ab084c86_TypeAliasDecl{._field_Token=_35943_tokens[1LL], ._field_Ident=_35943_tokens[1LL].get()._field_Kind, });;
	jule::Ptr<_1a97237bc_Token> _36917_token = _35943_tokens[_36017_i];;
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ac5400ca_pushErr(_self_.ptr(), _36917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_1ac5400ca_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	_36917_token=_35943_tokens[_36017_i];
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1ac5400ca_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_1ac5400ca_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	jule::Ptr<_1ab06d9b7_TypeDecl> _39018_t;;
	jule::Bool _39021_ok = false;;
	({
		__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType(_self_, _35943_tokens,(&(_36017_i)),true);
		_39018_t = __jule_assign_result.__jule_result_arg0;
		_39021_ok = __jule_assign_result.__jule_result_arg1;
	});
	_36517_tad.get()._field_Kind=_39018_t;
	if ((_39021_ok && (_36017_i < _35943_tokens.len()))) {
		_1ac5400ca_pushErr(_self_.ptr(), _35943_tokens[_36017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_36517_tad.get()._field_Public=_1ac54e31a_isPub(_36517_tad.get()._field_Ident);
	return _36517_tad;;
}



inline void _1ac542121_buildVarTypeAndExpr(jule::Ptr<_1ac53e66d_parser> _self_, jule::Ptr<_1ab081425_VarDecl>& _39944_v, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _39962_tokens) {
	jule::I64 _40017_i = 0LL;;
	jule::Ptr<_1a97237bc_Token> _40117_tok = _39962_tokens[_40017_i];;
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40017_i)++;
		if (((_40017_i >= _39962_tokens.len()) || ((_39962_tokens[_40017_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_39962_tokens[_40017_i].get()._field_Kind == jule::Str("=", 1))))) {
			_1ac5400ca_pushErr(_self_.ptr(), _40117_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1ab06d9b7_TypeDecl> _40922_t;;
		jule::Bool _40925_ok = false;;
		({
			__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType(_self_, _39962_tokens,(&(_40017_i)),true);
			_40922_t = __jule_assign_result.__jule_result_arg0;
			_40925_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_40925_ok) {
			_39944_v.get()._field_Kind=_40922_t;
			if ((_40017_i >= _39962_tokens.len())) {
				return;;
			};
			_40117_tok=_39962_tokens[_40017_i];
		};
	};
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((_40117_tok.get()._field_Kind != jule::Str("=", 1))) {
			_1ac5400ca_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_1a97237bc_Token>> _42421_exprTokens = _39962_tokens.slice((_40017_i + 1LL));;
		if ((_42421_exprTokens.len() == 0LL)) {
			_1ac5400ca_pushErr(_self_.ptr(), _40117_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_39944_v.get()._field_Expr=_1ac540707_buildExpr(_self_, _42421_exprTokens);
	} else {
		_1ac5400ca_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1ac542440_buildVarCommon(jule::Ptr<_1ac53e66d_parser> _self_, jule::Ptr<_1ab081425_VarDecl>& _43539_v, jule::Slice<jule::Ptr<_1a97237bc_Token>> _43556_tokens) {
	_43539_v.get()._field_Token=_43556_tokens[0LL];
	if ((_43539_v.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ac5400ca_pushErr(_self_.ptr(), _43539_v.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_43539_v.get()._field_Ident=_43539_v.get()._field_Token.get()._field_Kind;
	_43539_v.get()._field_Public=_1ac54e31a_isPub(_43539_v.get()._field_Ident);
	_43539_v.get()._field_Kind=nullptr;
	if ((_43556_tokens.len() > 1LL)) {
		_43556_tokens=_43556_tokens.slice(1LL);
		_1ac542121_buildVarTypeAndExpr(_self_, _43539_v,_43556_tokens);
	};
}



inline void _1ac542808_buildVarBegin(_1ac53e66d_parser* _self_, jule::Ptr<_1ab081425_VarDecl>& _45137_v, jule::I64& _45155_i, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _45164_tokens) {
	jule::Ptr<_1a97237bc_Token> _45213_tok = _45164_tokens[_45155_i];;
	{
		auto &_match_expr{ _45213_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1bc81c4da:;
			{
				_45137_v.get()._field_Statically=true;
				goto _case_begin_1bc81bbe3;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1bc81bbe3:;
			{
				(_45155_i)++;
				if ((_45155_i >= _45164_tokens.len())) {
					_1ac5400ca_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45164_tokens[_45155_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_45137_v.get()._field_Mutable=true;
					(_45155_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1bc81bc59:;
			{
				(_45155_i)++;
				_45137_v.get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1bc81bb49:;
			{
				_1ac5400ca_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1bc81b9b2:;
	};
	if ((_45155_i >= _45164_tokens.len())) {
		_1ac5400ca_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1ab081425_VarDecl> _1ac542b16_buildVar(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _48132_tokens) {
	jule::I64 _48217_i = 0LL;;
	jule::Ptr<_1ab081425_VarDecl> _48317_v = jule::new_ptr<_1ab081425_VarDecl>(_1ab081425_VarDecl{._field_Token=_48132_tokens[0LL], });;
	_1ac542808_buildVarBegin(_self_.ptr(), _48317_v,_48217_i,_48132_tokens);
	if ((_48217_i >= _48132_tokens.len())) {
		return nullptr;;
	};
	_48132_tokens=_48132_tokens.slice(_48217_i);
	if (((_48132_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_48132_tokens[0LL].get()._field_Kind == jule::Str("&", 1)))) {
		_48317_v.get()._field_Reference=true;
		if ((_48132_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_48132_tokens=_48132_tokens.slice(1LL);
	};
	_1ac542440_buildVarCommon(_self_, _48317_v,_48132_tokens);
	return _48317_v;;
}



inline jule::Ptr<_1ab07acb0_GenericDecl> _1ac542e24_buildGeneric(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _50337_tokens) {
	jule::Ptr<_1ab07acb0_GenericDecl> _50417_g = jule::new_ptr<_1ab07acb0_GenericDecl>(_1ab07acb0_GenericDecl{._field_Token=_50337_tokens[0LL], });;
	if ((_50417_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ac5400ca_pushErr(_self_.ptr(), _50417_g.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_50417_g.get()._field_Ident=_50417_g.get()._field_Token.get()._field_Kind;
	if ((_50337_tokens.len() > 1LL)) {
		if ((_50337_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_1ac5400ca_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		if ((_50337_tokens.len() == 2LL)) {
			_1ac5400ca_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1a97237bc_Token>> _52121_constraintTokens = _50337_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _52222_parts;;
		jule::Slice<_1a7995777_Log> _52229_errors;;
		({
			__jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log __jule_assign_result = _1ac53d062_partsKind(_52121_constraintTokens,jule::Str("|", 1),true);
			_52222_parts = __jule_assign_result.__jule_result_arg0;
			_52229_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_52229_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52229_errors);
			return nullptr;;
		};
		_50417_g.get()._field_Constraint=jule::new_ptr<_1ab07a83c_Constraint>(_1ab07a83c_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>>::alloc(0LL, _52222_parts.len())});
		{
			auto &expr = _52222_parts;
			auto it = expr.begin();
			_iter_begin_1bc828e86:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_1a97237bc_Token>> _52825_part = *it;
				{
					jule::I64 _52925_i = 0LL;;
					jule::Ptr<_1ab06d9b7_TypeDecl> _53026_kind;;
					({
						__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType(_self_, _52825_part,(&(_52925_i)),true);
						_53026_kind = __jule_assign_result.__jule_result_arg0;
					});
					_50417_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50417_g.get()._field_Constraint.get()._field_Mask,1);_50417_g.get()._field_Constraint.get()._field_Mask.__push(_53026_kind);;
					if ((_52925_i < _52825_part.len())) {
						_1ac5400ca_pushErr(_self_.ptr(), _52825_part[_52925_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_1bc828e86:;
				++it;
				goto _iter_begin_1bc828e86;
			}
			_iter_end_1bc828e86:;
		};
	};
	return _50417_g;;
}



inline jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>> _1ac5432cb_buildGenerics(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _54038_tokens, jule::Ptr<_1a97237bc_Token>& _54057_errorToken) {
	if ((_54038_tokens.len() == 0LL)) {
		_1ac5400ca_pushErr(_self_.ptr(), _54057_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _54618_parts;;
	jule::Slice<_1a7995777_Log> _54625_errors;;
	({
		__jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log __jule_assign_result = _1ac53d44c_parts(_54038_tokens,static_cast<jule::U64>(8LLU),true);
		_54618_parts = __jule_assign_result.__jule_result_arg0;
		_54625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54625_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54625_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>> _55217_generics = jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>>::alloc(0LL, _54618_parts.len());;
	{
		auto &expr = _54618_parts;
		auto it = expr.begin();
		_iter_begin_1bc82d63e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a97237bc_Token>> _55321_part = *it;
			{
				_55217_generics = jule::alloc_for_append(_55217_generics,1);_55217_generics.__push(_1ac542e24_buildGeneric(_self_, _55321_part));;
			}
			_iter_next_1bc82d63e:;
			++it;
			goto _iter_begin_1bc82d63e;
		}
		_iter_end_1bc82d63e:;
	};
	return _55217_generics;;
}



inline jule::Ptr<_1ab07e126_ParamDecl> _1ac5435d9_buildSelfParam(_1ac53e66d_parser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _56037_tokens) {
	if ((_56037_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1ab07e126_ParamDecl> _56517_param = jule::new_ptr<_1ab07e126_ParamDecl>();;
	jule::I64 _56817_i = 0LL;;
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_56517_param.get()._field_Mutable=true;
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1ac5400ca_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Kind == jule::Str("&", 1))) {
		_56517_param.get()._field_Ident=jule::Str("&", 1);
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1ac5400ca_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(27LLU))) {
		_56517_param.get()._field_Ident+=jule::Str("self", 4);
		_56517_param.get()._field_Token=_56037_tokens[_56817_i];
		(_56817_i)++;
		if ((_56817_i < _56037_tokens.len())) {
			_1ac5400ca_pushErr(&(*_self_), _56037_tokens[_56817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _56517_param;;
}



inline void _1ac5439a2_paramTypeBegin(_1ac53e66d_parser* _self_, jule::Ptr<_1ab07e126_ParamDecl>& _59938_param, jule::I64& _59962_i, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _59971_tokens) {
	for (; (_59962_i < _59971_tokens.len()); (_59962_i)++) {
		{
			jule::Ptr<_1a97237bc_Token> _60117_token = _59971_tokens[_59962_i];;
			if ((_60117_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60117_token.get()._field_Kind != jule::Str("...", 3))) {
				return;;
			};
			if (_59938_param.get()._field_Variadic) {
				_1ac5400ca_pushErr(&(*_self_), _60117_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1bc835525;
			};
			_59938_param.get()._field_Variadic=true;
		}
	_iter_next_1bc835525:;
	}
	_iter_end_1bc835525:;;
}



inline void _1ac543cc1_buildParamType(jule::Ptr<_1ac53e66d_parser> _self_, jule::Ptr<_1ab07e126_ParamDecl>& _61639_param, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _61663_tokens) {
	jule::I64 _61717_i = 0LL;;
	_1ac5439a2_paramTypeBegin(_self_.ptr(), _61639_param,_61717_i,_61663_tokens);
	if ((_61717_i >= _61663_tokens.len())) {
		return;;
	};
	({
		__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType(_self_, _61663_tokens,(&(_61717_i)),true);
		_61639_param.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_61717_i < _61663_tokens.len())) {
		_1ac5400ca_pushErr(_self_.ptr(), _61663_tokens[_61717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1ac5440e0_buildParamBody(jule::Ptr<_1ac53e66d_parser> _self_, jule::Ptr<_1ab07e126_ParamDecl>& _62939_param, jule::Slice<jule::Ptr<_1a97237bc_Token>> _62962_tokens) {
	jule::Ptr<_1a97237bc_Token> _63017_tok = _62962_tokens[0LL];;
	_62939_param.get()._field_Ident=_63017_tok.get()._field_Kind;
	if ((_62962_tokens.len() == 1LL)) {
		return;;
	} else if ((_62962_tokens.len() < 3LL)) {
		_1ac5400ca_pushErr(_self_.ptr(), _63017_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_62962_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1ac543cc1_buildParamType(_self_, _62939_param,_62962_tokens);
		return;;
	};
	_62962_tokens=_62962_tokens.slice(2LL);
	_1ac543cc1_buildParamType(_self_, _62939_param,_62962_tokens);
}



inline jule::Ptr<_1ab07e126_ParamDecl> _1ac5443ed_buildParam(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _64734_tokens) {
	jule::Ptr<_1ab07e126_ParamDecl> _64817_param = jule::new_ptr<_1ab07e126_ParamDecl>(_1ab07e126_ParamDecl{._field_Token=_64734_tokens[0LL], });;
	if ((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_64817_param.get()._field_Mutable=true;
		if ((_64734_tokens.len() == 1LL)) {
			_1ac5400ca_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_64734_tokens=_64734_tokens.slice(1LL);
		_64817_param.get()._field_Token=_64734_tokens[0LL];
	};
	if ((_64734_tokens.len() >= 3LL)) {
		if (((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64817_param.get()._field_Token.get()._field_Kind == jule::Str("&", 1)))) {
			if ((_64734_tokens.len() == 1LL)) {
				_1ac5400ca_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_64734_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_64734_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_64817_param.get()._field_Reference=true;
				_64734_tokens=_64734_tokens.slice(1LL);
				_64817_param.get()._field_Token=_64734_tokens[0LL];
			};
		};
	};
	if ((_64817_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_64817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1ac543cc1_buildParamType(_self_, _64817_param,_64734_tokens);
	} else {
		_1ac5440e0_buildParamBody(_self_, _64817_param,_64734_tokens);
	};
	return _64817_param;;
}



inline void _1ac544673_checkParams(_1ac53e66d_parser* _self_, jule::Slice<jule::Ptr<_1ab07e126_ParamDecl>>& _69035_params) {
	{
		auto &expr = _69035_params;
		auto it = expr.begin();
		_iter_begin_1bc844864:;
		if (it != expr.end()) {
			jule::Ptr<_1ab07e126_ParamDecl> _69121_param = *it;
			{
				if ((_1ab07e489_IsSelf(_69121_param.ptr()) || (_69121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1bc844864;
				};
				if ((_69121_param.get()._field_Token == nullptr)) {
					_1ac5400ca_pushErr(&(*_self_), _69121_param.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69121_param.get()._field_Kind=jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1ab06e07d_IdentTypeDecl>(_1ab06e07d_IdentTypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Ident=_69121_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type21)});
					_69121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1bc844864:;
			++it;
			goto _iter_begin_1bc844864;
		}
		_iter_end_1bc844864:;
	};
}



inline jule::Slice<jule::Ptr<_1ab07e126_ParamDecl>> _1ac544a2a_buildParams(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _71036_tokens, jule::Bool _71054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _71118_parts;;
	jule::Slice<_1a7995777_Log> _71125_errs;;
	({
		__jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log __jule_assign_result = _1ac53d44c_parts(_71036_tokens,static_cast<jule::U64>(8LLU),true);
		_71118_parts = __jule_assign_result.__jule_result_arg0;
		_71125_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71125_errs);
	if ((_71118_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab07e126_ParamDecl>> _71717_params = nullptr;;
	if ((_71054_method && (_71118_parts.len() > 0LL))) {
		jule::Ptr<_1ab07e126_ParamDecl> _71921_param = _1ac5435d9_buildSelfParam(_self_.ptr(), _71118_parts[0LL]);;
		if (((_71921_param != nullptr) && _1ab07e489_IsSelf(_71921_param.ptr()))) {
			_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_71921_param);;
			_71118_parts=_71118_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71118_parts;
		auto it = expr.begin();
		_iter_begin_1bc84902d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a97237bc_Token>> _72621_part = *it;
			{
				jule::Ptr<_1ab07e126_ParamDecl> _72721_param = _1ac5443ed_buildParam(_self_, _72621_part);;
				if ((_72721_param != nullptr)) {
					_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_72721_param);;
				};
			}
			_iter_next_1bc84902d:;
			++it;
			goto _iter_begin_1bc84902d;
		}
		_iter_end_1bc84902d:;
	};
	_1ac544673_checkParams(_self_.ptr(), _71717_params);
	return _71717_params;;
}



inline __jule_tuple_x_1ab071aca_RetTypeDecl__jule_tuple_bool _1ac544dd2_buildMultiRetType(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _73742_tokens, jule::I64& _73765_i) {
	__jule_tuple_x_1ab071aca_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1ab071aca_RetTypeDecl>();
	(_73765_i)++;
	if ((_73765_i >= _73742_tokens.len())) {
		(_73765_i)--;
		({
			__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType(_self_, _73742_tokens,(&(_73765_i)),false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	(_73765_i)--;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _74717_rangeTokens = _1ac53c8d0_range(_73765_i,jule::Str("(", 1),jule::Str(")", 1),_73742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _74918_parts;;
	jule::Slice<_1a7995777_Log> _74925_errs;;
	({
		__jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log __jule_assign_result = _1ac53d44c_parts(_74717_rangeTokens,static_cast<jule::U64>(8LLU),true);
		_74918_parts = __jule_assign_result.__jule_result_arg0;
		_74925_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_74925_errs);
	if ((_74918_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>> _75517_types = jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>>::alloc(0LL, _74918_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_1a97237bc_Token>>::alloc(0LL, _74918_parts.len());
	{
		auto &expr = _74918_parts;
		auto it = expr.begin();
		_iter_begin_1bc850353:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a97237bc_Token>> _75721_part = *it;
			{
				jule::Ptr<_1a97237bc_Token> _75821_token = _75721_part[0LL];;
				jule::I64 _75921_offset = 0LL;;
				if ((_75721_part.len() > 1LL)) {
					_75821_token=_75721_part[1LL];
					if ((_75821_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_75921_offset=2LL;
						if ((_75721_part.len() < 3LL)) {
							_1ac5400ca_pushErr(_self_.ptr(), _75821_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1bc850353;
						};
					};
				};
				_75821_token=_75721_part[0LL];
				if ((_75921_offset != 2LL)) {
					jule::Ptr<_1a97237bc_Token> _77525_newToken = jule::new_ptr<_1a97237bc_Token>((*(_75821_token)));;
					_77525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_77525_newToken);;
				} else {
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_75821_token);;
				};
				jule::Ptr<_1ab06d9b7_TypeDecl> _78222_tk;;
				({
					__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType(_self_, _75721_part,(&(_75921_offset)),true);
					_78222_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_75921_offset < _75721_part.len())) {
					_1ac5400ca_pushErr(_self_.ptr(), _75721_part[_75921_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_75517_types = jule::alloc_for_append(_75517_types,1);_75517_types.__push(_78222_tk);;
			}
			_iter_next_1bc850353:;
			++it;
			goto _iter_begin_1bc850353;
		}
		_iter_end_1bc850353:;
	};
	if ((_75517_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Token=_73742_tokens[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1ab070557_TupleTypeDecl>(_1ab070557_TupleTypeDecl{._field_Types=_75517_types}), &__jule_any_type83)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_75517_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ab071aca_RetTypeDecl__jule_tuple_bool _1ac545289_buildRetType(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _80537_tokens, jule::I64& _80560_i) {
	__jule_tuple_x_1ab071aca_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1ab071aca_RetTypeDecl>();
	if ((_80560_i >= _80537_tokens.len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a97237bc_Token> _81117_token = _80537_tokens[_80560_i];;
	{
		auto &_match_expr{ _81117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bc8589dd:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("{", 1))) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bc858a54:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("=", 1))) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1bc858aba:;
			{
				if (((_80560_i + 1LL) >= _80537_tokens.len())) {
					_1ac5400ca_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				(_80560_i)++;
				_81117_token=_80537_tokens[_80560_i];
				if ((_81117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81117_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1bc85b43b:;
							{
								({
									__jule_tuple_x_1ab071aca_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ac544dd2_buildMultiRetType(_self_, _80537_tokens,_80560_i);
									__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
									__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
								});
								return __jule_func_result;;
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1bc85b4b3:;
							{
								_1ac5400ca_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return __jule_func_result;;
							}
						}
						_match_end_1bc85b392:;
					};
				};
				({
					__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType(_self_, _80537_tokens,(&(_80560_i)),true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1bc858900:;
	};
	(_80560_i)++;
	_1ac5400ca_pushErr(_self_.ptr(), _81117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1ab080446_FnDecl> _1ac5456da_buildFnPrototype(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _85041_tokens, jule::I64& _85064_i, jule::Bool _85072_method) {
	jule::Ptr<_1ab080446_FnDecl> _85117_f = jule::new_ptr<_1ab080446_FnDecl>(_1ab080446_FnDecl{._field_Token=_85041_tokens[_85064_i], });;
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_85117_f.get()._field_Statically=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_1ac5400ca_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_85117_f.get()._field_Unsafety=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_1ac5400ca_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	(_85064_i)++;
	if ((_85064_i >= _85041_tokens.len())) {
		_1ac5400ca_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a97237bc_Token> _88413_tok = _85041_tokens[_85064_i];;
	if ((_88413_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_1ac5400ca_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Ident=_88413_tok.get()._field_Kind;
	} else {
		_85117_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1a97237bc_Token> _89613_errorToken = _85041_tokens[_85064_i];;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _89717_genericsTokens = _1ac53c8d0_range(_85064_i,jule::Str("[", 1),jule::Str("]", 1),_85041_tokens);;
	if ((_89717_genericsTokens != nullptr)) {
		_85117_f.get()._field_Generics=_1ac5432cb_buildGenerics(_self_, _89717_genericsTokens,_89613_errorToken);
	};
	if ((_85041_tokens[_85064_i].get()._field_Kind != jule::Str("(", 1))) {
		_1ac5400ca_pushErr(_self_.ptr(), _85041_tokens[_85064_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _90717_paramsToks = _1ac53c8d0_range(_85064_i,jule::Str("(", 1),jule::Str(")", 1),_85041_tokens);;
	if ((_90717_paramsToks.len() > 0LL)) {
		_85117_f.get()._field_Params=_1ac544a2a_buildParams(_self_, _90717_paramsToks,_85072_method);
	};
	if ((_85064_i < _85041_tokens.len())) {
		jule::Ptr<_1a97237bc_Token> _91317_token = _85041_tokens[_85064_i];;
		if (((_91317_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_91317_token.get()._field_Kind == jule::Str("!", 1)))) {
			_85117_f.get()._field_Exceptional=true;
			(_85064_i)++;
		};
	};
	_85117_f.get()._field_Public=_1ac54e31a_isPub(_85117_f.get()._field_Ident);
	({
		__jule_tuple_x_1ab071aca_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ac545289_buildRetType(_self_, _85041_tokens,_85064_i);
		_85117_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _85117_f;;
}



inline jule::Ptr<_1ab080446_FnDecl> _1ac545b3b_buildFn(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _92732_tokens, jule::Bool _92750_method, jule::Bool _92764_prototype) {
	jule::I64 _92817_i = 0LL;;
	jule::Ptr<_1ab080446_FnDecl> _92917_f = _1ac5456da_buildFnPrototype(_self_, _92732_tokens,_92817_i,_92750_method);;
	if (_92764_prototype) {
		if ((_92817_i < _92732_tokens.len())) {
			_1ac5400ca_pushErr(_self_.ptr(), _92732_tokens[(_92817_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _92917_f;;
	} else if ((_92917_f == nullptr)) {
		return _92917_f;;
	};
	if ((_92817_i >= _92732_tokens.len())) {
		_1ac53e99d_stop(_self_.ptr());
		_1ac5400ca_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _94517_blockTokens = _1ac53c8d0_range(_92817_i,jule::Str("{", 1),jule::Str("}", 1),_92732_tokens);;
	if ((_94517_blockTokens != nullptr)) {
		_92917_f.get()._field_Scope=_1ac541142_buildScope(_self_, _94517_blockTokens,_92732_tokens[(_92817_i - 1LL)]);
		_92917_f.get()._field_Scope.get()._field_Unsafety=_92917_f.get()._field_Unsafety;
		if ((_92817_i < _92732_tokens.len())) {
			_1ac5400ca_pushErr(_self_.ptr(), _92732_tokens[_92817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1ac53e99d_stop(_self_.ptr());
		_1ac5400ca_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _92917_f;;
}



inline jule::Slice<jule::Ptr<_1a97237bc_Token>> _1ac545e49_getUseDeclSelectors(_1ac53e66d_parser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _96142_tokens) {
	jule::I64 _96217_i = 0LL;;
	_96142_tokens=_1ac53c8d0_range(_96217_i,jule::Str("{", 1),jule::Str("}", 1),_96142_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _96418_parts;;
	jule::Slice<_1a7995777_Log> _96425_errs;;
	({
		__jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log __jule_assign_result = _1ac53d44c_parts(_96142_tokens,static_cast<jule::U64>(8LLU),true);
		_96418_parts = __jule_assign_result.__jule_result_arg0;
		_96425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96425_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_96425_errs);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _97017_selectors = jule::Slice<jule::Ptr<_1a97237bc_Token>>::alloc(0LL, _96418_parts.len());;
	{
		auto &expr = _96418_parts;
		auto it = expr.begin();
		_iter_begin_1bc87759a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a97237bc_Token>> _97121_part = *it;
			{
				if ((_97121_part.len() > 1LL)) {
					_1ac5400ca_pushErr(&(*_self_), _97121_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a97237bc_Token> _97521_tok = _97121_part[0LL];;
				if (((_97521_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97521_tok.get()._field_Id != static_cast<jule::U64>(27LLU)))) {
					_1ac5400ca_pushErr(&(*_self_), _97521_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1ac5403e9_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1bc87759a;
				};
				_97017_selectors = jule::alloc_for_append(_97017_selectors,1);_97017_selectors.__push(_97521_tok);;
			}
			_iter_next_1bc87759a:;
			++it;
			goto _iter_begin_1bc87759a;
		}
		_iter_end_1bc87759a:;
	};
	return _97017_selectors;;
}



inline void _1ac546268_buildCppUseDecl(_1ac53e66d_parser* _self_, jule::Ptr<_1ab086172_UseDecl>& _98639_decl, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _98656_tokens) {
	if ((_98656_tokens.len() > 1LL)) {
		_1ac5400ca_pushErr(&(*_self_), _98656_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a97237bc_Token> _99013_token = _98656_tokens[0LL];;
	if (((_99013_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99013_token.get()._field_Kind[0LL] != '`') && (_99013_token.get()._field_Kind[0LL] != '\"')))) {
		_1ac5400ca_pushErr(&(*_self_), _99013_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_98639_decl.get()._field_CppLinked=true;
	_98639_decl.get()._field_LinkPath=_99013_token.get()._field_Kind.slice(1LL,(_99013_token.get()._field_Kind.len() - 1LL));
}



inline void _1ac546587_buildStdUseDecl(_1ac53e66d_parser* _self_, jule::Ptr<_1ab086172_UseDecl>& _99939_decl, jule::Slice<jule::Ptr<_1a97237bc_Token>> _99959_tokens) {
	_99939_decl.get()._field_Std=true;
	jule::Ptr<_1a97237bc_Token> _100217_token = _99959_tokens[0LL];;
	if ((_99959_tokens.len() < 3LL)) {
		_1ac5400ca_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_99959_tokens=_99959_tokens.slice(2LL);
	_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1bc880d23:;
			{
				_1ac5400ca_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bc880d9a:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("}", 1))) {
					_1ac5400ca_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1a97237bc_Token>> _101921_selectors = nullptr;;
				({
					__jule_tuple_sx_1a97237bc_Token__jule_tuple_sx_1a97237bc_Token __jule_assign_result = _1ac53cb77_rangeLast(_99959_tokens);
					_99959_tokens = __jule_assign_result.__jule_result_arg0;
					_101921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				_99939_decl.get()._field_Selected=_1ac545e49_getUseDeclSelectors(&(*_self_), _101921_selectors);
				if ((_99959_tokens.len() == 0LL)) {
					_1ac5400ca_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1ac5400ca_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1ac5400ca_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bc880e22:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("*", 1))) {
					_1ac5400ca_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1ac5400ca_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1ac5400ca_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1ac5400ca_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99939_decl.get()._field_Full=true;
			}
		}
		_match_end_1bc880c9b:;
	};
	_99939_decl.get()._field_LinkPath=(jule::Str("std::", 5) + _1ac53e2a5_tokstoa(_99959_tokens));
}



inline void _1ac5468a6_buildIdentUseDecl(_1ac53e66d_parser* _self_, jule::Ptr<_1ab086172_UseDecl>& _106141_decl, jule::Slice<jule::Ptr<_1a97237bc_Token>> _106161_tokens) {
	_106141_decl.get()._field_Std=false;
	jule::Ptr<_1a97237bc_Token> _106417_token = _106161_tokens[(_106161_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1bc88a558:;
			{
				_1ac5400ca_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bc88ab41:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("}", 1))) {
					_1ac5400ca_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1a97237bc_Token>> _107521_selectors = nullptr;;
				({
					__jule_tuple_sx_1a97237bc_Token__jule_tuple_sx_1a97237bc_Token __jule_assign_result = _1ac53cb77_rangeLast(_106161_tokens);
					_106161_tokens = __jule_assign_result.__jule_result_arg0;
					_107521_selectors = __jule_assign_result.__jule_result_arg1;
				});
				_106141_decl.get()._field_Selected=_1ac545e49_getUseDeclSelectors(&(*_self_), _107521_selectors);
				if ((_106161_tokens.len() == 0LL)) {
					_1ac5400ca_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1ac5400ca_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1ac5400ca_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bc88acc8:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("*", 1))) {
					_1ac5400ca_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1ac5400ca_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1ac5400ca_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1ac5400ca_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106141_decl.get()._field_Full=true;
			}
		}
		_match_end_1bc88aadb:;
	};
	_106141_decl.get()._field_LinkPath=_1ac53e2a5_tokstoa(_106161_tokens);
}



inline void _1ac546bc5_parseUseDecl(_1ac53e66d_parser* _self_, jule::Ptr<_1ab086172_UseDecl>& _112436_decl, jule::Slice<jule::Ptr<_1a97237bc_Token>> _112456_tokens) {
	if (_112436_decl.get()._field_CppLinked) {
		_1ac546268_buildCppUseDecl(&(*_self_), _112436_decl,_112456_tokens);
		return;;
	};
	jule::Ptr<_1a97237bc_Token> _113017_token = _112456_tokens[0LL];;
	if ((_113017_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ac5400ca_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_112456_tokens.len() > 2LL) && (_112456_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		_112436_decl.get()._field_Alias=_113017_token.get()._field_Kind;
		if ((_112456_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1ac5400ca_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1ac5403e9_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_112456_tokens=_112456_tokens.slice(2LL);
		_113017_token=_112456_tokens[0LL];
	};
	;
	{
		
		if ((_113017_token.get()._field_Kind == jule::Str("std", 3))) {
			_case_begin_1bc8970e2:;
			{
				_1ac546587_buildStdUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		else {
			_case_begin_1bc8991b0:;
			{
				_1ac5468a6_buildIdentUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		_match_end_1bc899149:;
	};
}



inline jule::Ptr<_1ab086172_UseDecl> _1ac54707c_buildUseDecl(_1ac53e66d_parser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _115835_tokens, jule::Bool _115853_cpp_linked) {
	jule::Ptr<_1ab086172_UseDecl> _115917_decl = jule::new_ptr<_1ab086172_UseDecl>(_1ab086172_UseDecl{._field_Token=_115835_tokens[0LL], ._field_CppLinked=_115853_cpp_linked, });;
	if ((_115835_tokens.len() < 2LL)) {
		_1ac5400ca_pushErr(&(*_self_), _115917_decl.get()._field_Token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_115835_tokens=_115835_tokens.slice(1LL);
	_1ac546bc5_parseUseDecl(&(*_self_), _115917_decl,_115835_tokens);
	return _115917_decl;;
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac547434_buildTypeEnumItemKind(jule::Ptr<_1ac53e66d_parser> _self_, jule::I64& _117246_i, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _117259_tokens) {
	jule::I64 _117317_braceN = 0LL;;
	jule::I64 _117413_exprStart = _117246_i;;
	for (; (_117246_i < _117259_tokens.len()); (_117246_i)++) {
		{
			jule::Ptr<_1a97237bc_Token> _117617_t = _117259_tokens[_117246_i];;
			if ((_117617_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _117617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1bc89e2e7:;
						{
							(_117317_braceN)++;
							goto _iter_next_1bc89cd51;
						}
					}
					else {
						_case_begin_1bc89ddda:;
						{
							(_117317_braceN)--;
						}
					}
					_match_end_1bc89dbcb:;
				};
			};
			if ((_117317_braceN > 0LL)) {
				goto _iter_next_1bc89cd51;
			};
			if (((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_117246_i + 1LL) >= _117259_tokens.len()))) {
				jule::Slice<jule::Ptr<_1a97237bc_Token>> _119225_kindTokens = nullptr;;
				if ((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart,_117246_i);
				} else {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart);
				};
				jule::I64 _119825_j = 0LL;;
				jule::Ptr<_1ab06d9b7_TypeDecl> _119926_kind;;
				({
					__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType(_self_, _119225_kindTokens,(&(_119825_j)),true);
					_119926_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_119825_j < _119225_kindTokens.len())) {
					_1ac5400ca_pushErr(_self_.ptr(), _119225_kindTokens[_119825_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _119926_kind;;
			};
		}
	_iter_next_1bc89cd51:;
	}
	_iter_end_1bc89cd51:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1ab087b24_TypeEnumItemDecl>> _1ac547742_buildTypeEnumItems(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _120943_tokens) {
	jule::Slice<jule::Ptr<_1ab087b24_TypeEnumItemDecl>> _121017_items = jule::Slice<jule::Ptr<_1ab087b24_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121117_i = 0LL;;
	for (; (_121117_i < _120943_tokens.len()); (_121117_i)++) {
		{
			jule::Ptr<_1a97237bc_Token> _121321_t = _120943_tokens[_121117_i];;
			jule::Ptr<_1ab087b24_TypeEnumItemDecl> _121421_item = jule::new_ptr<_1ab087b24_TypeEnumItemDecl>();;
			_121421_item.get()._field_Token=_121321_t;
			if (((_121421_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((_120943_tokens.len() - _121117_i) > 2LL))) {
				_121421_item.get()._field_Ident=_121421_item.get()._field_Token.get()._field_Kind;
				_121321_t=_120943_tokens[(_121117_i + 1LL)];
				if ((_121321_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121117_i+=2LL;
					if (((_121117_i >= _120943_tokens.len()) || (_120943_tokens[_121117_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_1ac5400ca_pushErr(_self_.ptr(), _121321_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_1bc8a3b04;
					};
				};
			};
			_121421_item.get()._field_Kind=_1ac547434_buildTypeEnumItemKind(_self_, _121117_i,_120943_tokens);
			_121017_items = jule::alloc_for_append(_121017_items,1);_121017_items.__push(_121421_item);;
		}
	_iter_next_1bc8a3b04:;
	}
	_iter_end_1bc8a3b04:;;
	return _121017_items;;
}



inline jule::Ptr<_1ab08822e_TypeEnumDecl> _1ac547a50_buildTypeEnumDecl(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _123342_tokens) {
	jule::I64 _123417_i = 1LL;;
	jule::Ptr<_1ab08822e_TypeEnumDecl> _123517_e = jule::new_ptr<_1ab08822e_TypeEnumDecl>(_1ab08822e_TypeEnumDecl{._field_Token=_123342_tokens[_123417_i], });;
	if ((_123517_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ac5400ca_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Ident=_123517_e.get()._field_Token.get()._field_Kind;
	_123417_i+=3LL;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _124517_itemTokens = _1ac53c8d0_range(_123417_i,jule::Str("{", 1),jule::Str("}", 1),_123342_tokens);;
	if ((_124517_itemTokens == nullptr)) {
		_1ac53e99d_stop(_self_.ptr());
		_1ac5400ca_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _123517_e;;
	} else if ((_123417_i < _123342_tokens.len())) {
		_1ac5400ca_pushErr(_self_.ptr(), _123342_tokens[_123417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Public=_1ac54e31a_isPub(_123517_e.get()._field_Ident);
	_123517_e.get()._field_End=_123342_tokens[(_123417_i - 1LL)];
	_123517_e.get()._field_Items=_1ac547742_buildTypeEnumItems(_self_, _124517_itemTokens);
	return _123517_e;;
}



inline jule::Ptr<_1ab072ed8_Expr> _1ac547e07_buildEnumItemExpr(jule::Ptr<_1ac53e66d_parser> _self_, jule::I64& _126042_i, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _126055_tokens) {
	jule::I64 _126117_braceN = 0LL;;
	jule::I64 _126213_exprStart = _126042_i;;
	for (; (_126042_i < _126055_tokens.len()); (_126042_i)++) {
		{
			jule::Ptr<_1a97237bc_Token> _126417_t = _126055_tokens[_126042_i];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1bc8b0308:;
						{
							(_126117_braceN)++;
							goto _iter_next_1bc8add62;
						}
					}
					else {
						_case_begin_1bc8aedeb:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_1bc8aebdc:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_1bc8add62;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_126042_i + 1LL) >= _126055_tokens.len()))) {
				jule::Slice<jule::Ptr<_1a97237bc_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart,_126042_i);
				} else {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart);
				};
				return _1ac540707_buildExpr(_self_, _128025_exprTokens);;
			};
		}
	_iter_next_1bc8add62:;
	}
	_iter_end_1bc8add62:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1ab0865e5_EnumItemDecl>> _1ac548215_buildEnumItems(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _129239_tokens) {
	jule::Slice<jule::Ptr<_1ab0865e5_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_1ab0865e5_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _129417_i = 0LL;;
	for (; (_129417_i < _129239_tokens.len()); (_129417_i)++) {
		{
			jule::Ptr<_1a97237bc_Token> _129621_t = _129239_tokens[_129417_i];;
			jule::Ptr<_1ab0865e5_EnumItemDecl> _129721_item = jule::new_ptr<_1ab0865e5_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_1ac5400ca_pushErr(_self_.ptr(), _129721_item.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= _129239_tokens.len()) || (_129239_tokens[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_129417_i + 1LL) < _129239_tokens.len())) {
					(_129417_i)++;
				};
				_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
				goto _iter_next_1bc8b377e;
			};
			(_129417_i)++;
			_129621_t=_129239_tokens[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_1ac5400ca_pushErr(_self_.ptr(), _129621_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_1bc8b377e;
			};
			if (((_129417_i >= _129239_tokens.len()) || (_129239_tokens[_129417_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_1ac5400ca_pushErr(_self_.ptr(), _129621_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1bc8b377e;
			};
			_129721_item.get()._field_Expr=_1ac547e07_buildEnumItemExpr(_self_, _129417_i,_129239_tokens);
			_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
		}
	_iter_next_1bc8b377e:;
	}
	_iter_end_1bc8b377e:;;
	return _129317_items;;
}



inline jule::Ptr<_1ab08711d_EnumDecl> _1ac548523_buildEnumDecl(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _132938_tokens) {
	if ((_132938_tokens.len() < 3LL)) {
		_1ac5400ca_pushErr(_self_.ptr(), _132938_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab08711d_EnumDecl> _133417_e = jule::new_ptr<_1ab08711d_EnumDecl>(_1ab08711d_EnumDecl{._field_Token=_132938_tokens[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ac5400ca_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134217_i = 2LL;;
	if ((_132938_tokens[_134217_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134217_i)++;
		if ((_134217_i >= _132938_tokens.len())) {
			_1ac5400ca_pushErr(_self_.ptr(), _132938_tokens[(_134217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _133417_e;;
		};
		({
			__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType(_self_, _132938_tokens,(&(_134217_i)),true);
			_133417_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_134217_i >= _132938_tokens.len())) {
			_1ac53e99d_stop(_self_.ptr());
			_1ac5400ca_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _133417_e;;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _135917_itemTokens = _1ac53c8d0_range(_134217_i,jule::Str("{", 1),jule::Str("}", 1),_132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_1ac53e99d_stop(_self_.ptr());
		_1ac5400ca_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133417_e;;
	} else if ((_134217_i < _132938_tokens.len())) {
		_1ac5400ca_pushErr(_self_.ptr(), _132938_tokens[_134217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Public=_1ac54e31a_isPub(_133417_e.get()._field_Ident);
	_133417_e.get()._field_End=_132938_tokens[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_1ac548215_buildEnumItems(_self_, _135917_itemTokens);
	return _133417_e;;
}



inline jule::Any _1ac548831_buildNodeEnumDecl(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _137442_tokens) {
	if (((_137442_tokens.len() > 3LL) && (_137442_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if ((_137442_tokens[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return jule::Any(_1ac547a50_buildTypeEnumDecl(_self_, _137442_tokens), &__jule_any_type20);;
		};
	};
	return jule::Any(_1ac548523_buildEnumDecl(_self_, _137442_tokens), &__jule_any_type19);;
}



inline jule::Ptr<_1ab08842c_FieldDecl> _1ac548b3e_buildField(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _138334_tokens) {
	jule::Ptr<_1ab08842c_FieldDecl> _138417_f = jule::new_ptr<_1ab08842c_FieldDecl>();;
	_138417_f.get()._field_Mutable=(_138334_tokens[0LL].get()._field_Id == static_cast<jule::U64>(35LLU));
	if (_138417_f.get()._field_Mutable) {
		if ((_138334_tokens.len() == 1LL)) {
			_1ac5400ca_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(1LL);
	};
	_138417_f.get()._field_Token=_138334_tokens[0LL];
	if ((_138417_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ac5400ca_pushErr(_self_.ptr(), _138417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138417_f.get()._field_Ident=_138417_f.get()._field_Token.get()._field_Kind;
	if ((_138334_tokens.len() == 1LL)) {
		_1ac5400ca_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_138334_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1ac5400ca_pushErr(_self_.ptr(), _138334_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138334_tokens=_138334_tokens.slice(2LL);
	jule::I64 _141217_i = 0LL;;
	({
		__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType(_self_, _138334_tokens,(&(_141217_i)),true);
		_138417_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_141217_i < _138334_tokens.len())) {
		jule::Ptr<_1a97237bc_Token> _141517_token = _138334_tokens[_141217_i];;
		if (((_141517_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_141517_token.get()._field_Kind != jule::Str("=", 1)))) {
			_1ac5400ca_pushErr(_self_.ptr(), _138334_tokens[_141217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_141217_i)++;
		if ((_141217_i >= _138334_tokens.len())) {
			_1ac5400ca_pushErr(_self_.ptr(), _141517_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(_141217_i);
		_138417_f.get()._field_Default=_1ac540707_buildExpr(_self_, _138334_tokens);
	};
	_138417_f.get()._field_Public=_1ac54e31a_isPub(_138417_f.get()._field_Ident);
	return _138417_f;;
}



inline jule::Slice<jule::Ptr<_1ab08842c_FieldDecl>> _1ac548e4c_buildStructDeclFields(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _143245_tokens) {
	jule::Slice<jule::Ptr<_1ab08842c_FieldDecl>> _143317_fields = nullptr;;
	jule::Slice<jule::Ptr<_1ac5226ea_stmt>> _143417_stmts = _1ac522a91_splitStmts(_143245_tokens);;
	{
		auto &expr = _143417_stmts;
		auto it = expr.begin();
		_iter_begin_1bc8d025c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac5226ea_stmt> _143521_stmt = *it;
			{
				_143245_tokens=_143521_stmt.get()._field_tokens;
				jule::Ptr<_1ab08842c_FieldDecl> _143721_f = _1ac548b3e_buildField(_self_, _143245_tokens);;
				_143317_fields = jule::alloc_for_append(_143317_fields,1);_143317_fields.__push(_143721_f);;
			}
			_iter_next_1bc8d025c:;
			++it;
			goto _iter_begin_1bc8d025c;
		}
		_iter_end_1bc8d025c:;
	};
	return _143317_fields;;
}



inline jule::Ptr<_1ab088bd0_StructDecl> _1ac54925a_buildStructDecl(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _144340_tokens) {
	if ((_144340_tokens.len() < 3LL)) {
		_1ac5400ca_pushErr(_self_.ptr(), _144340_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _144917_i = 1LL;;
	jule::Ptr<_1ab088bd0_StructDecl> _145017_s = jule::new_ptr<_1ab088bd0_StructDecl>(_1ab088bd0_StructDecl{._field_Token=_144340_tokens[_144917_i], });;
	if ((_145017_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ac5400ca_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_144917_i)++;
	if ((_144917_i >= _144340_tokens.len())) {
		_1ac5400ca_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _145017_s;;
	};
	_145017_s.get()._field_Ident=_145017_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_1a97237bc_Token> _146413_errorToken = _144340_tokens[_144917_i];;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _146517_genericsTokens = _1ac53c8d0_range(_144917_i,jule::Str("[", 1),jule::Str("]", 1),_144340_tokens);;
	if ((_146517_genericsTokens != nullptr)) {
		_145017_s.get()._field_Generics=_1ac5432cb_buildGenerics(_self_, _146517_genericsTokens,_146413_errorToken);
	};
	if ((_144917_i >= _144340_tokens.len())) {
		_1ac5400ca_pushErr(_self_.ptr(), _144340_tokens[(_144917_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;;
	};
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _147517_bodyTokens = _1ac53c8d0_range(_144917_i,jule::Str("{", 1),jule::Str("}", 1),_144340_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_1ac53e99d_stop(_self_.ptr());
		_1ac5400ca_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;;
	};
	if ((_144917_i < _144340_tokens.len())) {
		_1ac5400ca_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_145017_s.get()._field_Public=_1ac54e31a_isPub(_145017_s.get()._field_Ident);
	_145017_s.get()._field_Fields=_1ac548e4c_buildStructDeclFields(_self_, _147517_bodyTokens);
	_145017_s.get()._field_End=_144340_tokens[(_144917_i - 1LL)];
	return _145017_s;;
}



inline void _1ac5494d0_checkMethodReceiver(_1ac53e66d_parser* _self_, jule::Ptr<_1ab080446_FnDecl>& _149139_f) {
	if (_149139_f.get()._field_Statically) {
		if (((_149139_f.get()._field_Params.len() > 0LL) && _1ab07e489_IsSelf(_149139_f.get()._field_Params[0LL].ptr()))) {
			_1ac5400ca_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_149139_f.get()._field_Params.len() == 0LL)) {
		_1ac5400ca_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab07e126_ParamDecl> _150313_param = _149139_f.get()._field_Params[0LL];;
	if ((!(_1ab07e489_IsSelf(_150313_param.ptr())))) {
		_1ac5400ca_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1ab080446_FnDecl>> _1ac5497dd_buildTraitMethods(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _151041_tokens) {
	jule::Slice<jule::Ptr<_1ab080446_FnDecl>> _151117_methods = nullptr;;
	jule::Slice<jule::Ptr<_1ac5226ea_stmt>> _151217_stmts = _1ac522a91_splitStmts(_151041_tokens);;
	{
		auto &expr = _151217_stmts;
		auto it = expr.begin();
		_iter_begin_1bc8de37b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac5226ea_stmt> _151321_stmt = *it;
			{
				_151041_tokens=_151321_stmt.get()._field_tokens;
				if ((_151041_tokens.len() == 0LL)) {
					goto _iter_next_1bc8de37b;
				};
				jule::Ptr<_1ab080446_FnDecl> _151821_f = _1ac545b3b_buildFn(_self_, _151041_tokens,true,true);;
				if ((_151821_f != nullptr)) {
					if (_1ab080798_IsAnon(_151821_f.ptr())) {
						_1ac5400ca_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1ac5494d0_checkMethodReceiver(_self_.ptr(), _151821_f);
					if ((_151821_f.get()._field_Generics.len() > 0LL)) {
						_1ac5400ca_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_151117_methods = jule::alloc_for_append(_151117_methods,1);_151117_methods.__push(_151821_f);;
				};
			}
			_iter_next_1bc8de37b:;
			++it;
			goto _iter_begin_1bc8de37b;
		}
		_iter_end_1bc8de37b:;
	};
	return _151117_methods;;
}



inline jule::Ptr<_1ab0892da_TraitDecl> _1ac549aeb_buildTraitDecl(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _153339_tokens) {
	if ((_153339_tokens.len() < 3LL)) {
		_1ac5400ca_pushErr(_self_.ptr(), _153339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab0892da_TraitDecl> _153817_t = jule::new_ptr<_1ab0892da_TraitDecl>(_1ab0892da_TraitDecl{._field_Token=_153339_tokens[1LL], });;
	if ((_153817_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ac5400ca_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Ident=_153817_t.get()._field_Token.get()._field_Kind;
	jule::I64 _154617_i = 2LL;;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _154717_bodyTokens = _1ac53c8d0_range(_154617_i,jule::Str("{", 1),jule::Str("}", 1),_153339_tokens);;
	if ((_154717_bodyTokens == nullptr)) {
		_1ac53e99d_stop(_self_.ptr());
		_1ac5400ca_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_154617_i < _153339_tokens.len())) {
		_1ac5400ca_pushErr(_self_.ptr(), _153339_tokens[_154617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Public=_1ac54e31a_isPub(_153817_t.get()._field_Ident);
	_153817_t.get()._field_Methods=_1ac5497dd_buildTraitMethods(_self_, _154717_bodyTokens);
	_153817_t.get()._field_End=_153339_tokens[(_154617_i - 1LL)];
	return _153817_t;;
}



inline jule::Ptr<_1ab080446_FnDecl> _1ac549e09_buildCppLinkFn(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _156338_tokens) {
	_156338_tokens=_156338_tokens.slice(1LL);
	jule::Ptr<_1ab080446_FnDecl> _156517_f = _1ac545b3b_buildFn(_self_, _156338_tokens,false,true);;
	if ((_156517_f != nullptr)) {
		if (_1ab080798_IsAnon(_156517_f.ptr())) {
			_1ac5400ca_pushErr(_self_.ptr(), _156517_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_156517_f.get()._field_Public=false;
		_156517_f.get()._field_CppLinked=true;
	};
	return _156517_f;;
}



inline jule::Ptr<_1ab081425_VarDecl> _1ac54a217_buildCppLinkVar(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _157639_tokens) {
	_157639_tokens=_157639_tokens.slice(1LL);
	jule::Ptr<_1ab081425_VarDecl> _157817_v = _1ac542b16_buildVar(_self_, _157639_tokens);;
	if ((_157817_v != nullptr)) {
		_157817_v.get()._field_Public=false;
		_157817_v.get()._field_CppLinked=true;
		if ((_157817_v.get()._field_Expr != nullptr)) {
			_1ac5400ca_pushErr(_self_.ptr(), _157817_v.get()._field_Token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _157817_v;;
}



inline jule::Ptr<_1ab088bd0_StructDecl> _1ac54a525_buildCppLinkStruct(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _158942_tokens) {
	_158942_tokens=_158942_tokens.slice(1LL);
	jule::Ptr<_1ab088bd0_StructDecl> _159117_s = _1ac54925a_buildStructDecl(_self_, _158942_tokens);;
	if ((_159117_s != nullptr)) {
		_159117_s.get()._field_Public=false;
		{
			auto &expr = _159117_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1bc8edb60:;
			if (it != expr.end()) {
				jule::Ptr<_1ab08842c_FieldDecl> _159425_f = *it;
				{
					_159425_f.get()._field_Public=true;
				}
				_iter_next_1bc8edb60:;
				++it;
				goto _iter_begin_1bc8edb60;
			}
			_iter_end_1bc8edb60:;
		};
		_159117_s.get()._field_CppLinked=true;
	};
	return _159117_s;;
}



inline jule::Ptr<_1ab084c86_TypeAliasDecl> _1ac54a833_buildCppLinkTypeAlias(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _160345_tokens) {
	_160345_tokens=_160345_tokens.slice(1LL);
	jule::Ptr<_1ab084c86_TypeAliasDecl> _160517_t = _1ac541d02_buildTypeAliasDecl(_self_, _160345_tokens);;
	if ((_160517_t != nullptr)) {
		_160517_t.get()._field_Public=false;
		_160517_t.get()._field_CppLinked=true;
	};
	return _160517_t;;
}



inline jule::Ptr<_1ab086172_UseDecl> _1ac54ab41_buildCppLinkUse(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _161339_tokens) {
	if ((_161339_tokens.len() == 1LL)) {
		_1ac5400ca_pushErr(_self_.ptr(), _161339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_161339_tokens=_161339_tokens.slice(1LL);
	;
	return _1ac54707c_buildUseDecl(_self_.ptr(), _161339_tokens,true);;
}



inline jule::Any _1ac54ae4e_buildCppLink(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _162437_tokens) {
	jule::Ptr<_1a97237bc_Token> _162517_token = _162437_tokens[0LL];;
	if ((_162437_tokens.len() == 1LL)) {
		_1ac5400ca_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_162517_token=_162437_tokens[1LL];
	{
		auto &_match_expr{ _162517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1bc9037d0:;
			{
				return jule::Any(_1ac549e09_buildCppLinkFn(_self_, _162437_tokens), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1bc9044a1:;
			{
				return jule::Any(_1ac54a217_buildCppLinkVar(_self_, _162437_tokens), &__jule_any_type18);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1bc904517:;
			{
				return jule::Any(_1ac54a525_buildCppLinkStruct(_self_, _162437_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1bc90457d:;
			{
				return jule::Any(_1ac54a833_buildCppLinkTypeAlias(_self_, _162437_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1bc90433b:;
			{
				_1ac5400ca_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc90443a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab080446_FnDecl> _1ac54b25c_getMethod(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _164834_tokens) {
	jule::I64 _164917_i = 0LL;;
	jule::Ptr<_1a97237bc_Token> _165017_token = _164834_tokens[_164917_i];;
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_1ac5400ca_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_1ac5400ca_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id != static_cast<jule::U64>(32LLU))) {
		_1ac5400ca_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab080446_FnDecl> _167417_f = _1ac545b3b_buildFn(_self_, _164834_tokens,true,false);;
	if (((_167417_f != nullptr) && _1ab080798_IsAnon(_167417_f.ptr()))) {
		_1ac5400ca_pushErr(_self_.ptr(), _167417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _167417_f;;
}



inline void _1ac54b57b_parseImplBody(jule::Ptr<_1ac53e66d_parser> _self_, jule::Ptr<_1ab0898e5_Impl>& _168138_ipl, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _168155_tokens) {
	jule::Slice<jule::Ptr<_1ac5226ea_stmt>> _168217_stmts = _1ac522a91_splitStmts(_168155_tokens);;
	{
		auto &expr = _168217_stmts;
		auto it = expr.begin();
		_iter_begin_1bc90c476:;
		if (it != expr.end()) {
			jule::Ptr<_1ac5226ea_stmt> _168321_stmt = *it;
			{
				_168155_tokens=_168321_stmt.get()._field_tokens;
				jule::Ptr<_1a97237bc_Token> _168521_token = _168155_tokens[0LL];;
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(38LLU)) {
						_case_begin_1bc90d5cb:;
						{
							_1ac540c8a_pushDirective(_self_.ptr(), _1ac540a15_buildDirective(_self_.ptr(), _168155_tokens));
							goto _iter_next_1bc90c476;
						}
					}
					_match_end_1bc90d576:;
				};
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1bc90d71e:;
						{
							jule::Ptr<_1ab081425_VarDecl> _169425_v = _1ac542b16_buildVar(_self_, _168155_tokens);;
							if ((_169425_v != nullptr)) {
								_168138_ipl.get()._field_Statics = jule::alloc_for_append(_168138_ipl.get()._field_Statics,1);_168138_ipl.get()._field_Statics.__push(_169425_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1bc90e38a:;
						{
							jule::Ptr<_1ab080446_FnDecl> _170125_f = _1ac54b25c_getMethod(_self_, _168155_tokens);;
							if ((_170125_f != nullptr)) {
								_1ac5494d0_checkMethodReceiver(_self_.ptr(), _170125_f);
								_1ac54be1c_applyFnMeta(_self_.ptr(), _170125_f);
								_168138_ipl.get()._field_Methods = jule::alloc_for_append(_168138_ipl.get()._field_Methods,1);_168138_ipl.get()._field_Methods.__push(_170125_f);;
							};
						}
					}
					else {
						_case_begin_1bc90db4d:;
						{
							_1ac5400ca_pushErr(_self_.ptr(), _168521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1bc90c476;
						}
					}
					_match_end_1bc90dae8:;
				};
			}
			_iter_next_1bc90c476:;
			++it;
			goto _iter_begin_1bc90c476;
		}
		_iter_end_1bc90c476:;
	};
}



inline jule::Ptr<_1ab0898e5_Impl> _1ac54b889_buildImpl(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _171433_tokens) {
	jule::Ptr<_1a97237bc_Token> _171517_token = _171433_tokens[0LL];;
	if ((_171433_tokens.len() < 2LL)) {
		_1ac5400ca_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _172117_i = 1LL;;
	jule::Ptr<_1ab06d9b7_TypeDecl> _172318_base;;
	jule::Bool _172328_ok = false;;
	({
		__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
		_172318_base = __jule_assign_result.__jule_result_arg0;
		_172328_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172328_ok))) {
		return nullptr;;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_1ac5400ca_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab0898e5_Impl> _173217_ipl = jule::new_ptr<_1ab0898e5_Impl>(_1ab0898e5_Impl{._field_Base=_172318_base, });;
	_171517_token=_171433_tokens[_172117_i];
	if ((_171517_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_171517_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_171517_token.get()._field_Kind == jule::Str("{", 1)))) {
			({
				jule::Ptr<_1ab06d9b7_TypeDecl> ___jule_assign_arg = _173217_ipl.get()._field_Dest;
				jule::Ptr<_1ab06d9b7_TypeDecl> _1___jule_assign_arg = _173217_ipl.get()._field_Base;
				_173217_ipl.get()._field_Base = ___jule_assign_arg;
				_173217_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_1ac53e99d_stop(_self_.ptr());
		_1ac5400ca_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_172117_i)++;
	if ((_172117_i >= _171433_tokens.len())) {
		_1ac53e99d_stop(_self_.ptr());
		_1ac5400ca_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
		_173217_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_172328_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172328_ok))) {
		return nullptr;;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_1ac53e99d_stop(_self_.ptr());
		_1ac5400ca_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _177017_bodyTokens = _1ac53c8d0_range(_172117_i,jule::Str("{", 1),jule::Str("}", 1),_171433_tokens);;
	if ((_177017_bodyTokens == nullptr)) {
		_1ac53e99d_stop(_self_.ptr());
		_1ac5400ca_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_172117_i < _171433_tokens.len())) {
		_1ac5400ca_pushErr(_self_.ptr(), _171433_tokens[_172117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_173217_ipl.get()._field_End=_171433_tokens[(_172117_i - 1LL)];
	_1ac54b57b_parseImplBody(_self_, _173217_ipl,_177017_bodyTokens);
	return _173217_ipl;;
}



inline jule::Any _1ac54bb97_buildNodeData(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _178538_tokens) {
	jule::Ptr<_1a97237bc_Token> _178617_token = _178538_tokens[0LL];;
	{
		auto &_match_expr{ _178617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1bc91ddb1:;
			{
				jule::Ptr<_1ab080446_FnDecl> _179021_f = _1ac545b3b_buildFn(_self_, _178538_tokens,false,false);;
				if ((_179021_f != nullptr)) {
					_179021_f.get()._field_Global=true;
					if (_1ab080798_IsAnon(_179021_f.ptr())) {
						_1ac5400ca_pushErr(_self_.ptr(), _179021_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return jule::Any(_179021_f, &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1bc91ed29:;
			{
				return jule::Any(_1ac542b16_buildVar(_self_, _178538_tokens), &__jule_any_type18);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1bc91ed90:;
			{
				return jule::Any(_1ac541d02_buildTypeAliasDecl(_self_, _178538_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1bc91ee06:;
			{
				return _1ac548831_buildNodeEnumDecl(_self_, _178538_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1bc91e521:;
			{
				return jule::Any(_1ac54925a_buildStructDecl(_self_, _178538_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1bc91e587:;
			{
				return jule::Any(_1ac549aeb_buildTraitDecl(_self_, _178538_tokens), &__jule_any_type17);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1bc91e5ed:;
			{
				return jule::Any(_1ac54b889_buildImpl(_self_, _178538_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bc91e664:;
			{
				return _1ac54ae4e_buildCppLink(_self_, _178538_tokens);;
			}
		}
		else {
			_case_begin_1bc91e4aa:;
			{
				_1ac5400ca_pushErr(_self_.ptr(), _178617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc91e301:;
	};
}



inline void _1ac54be1c_applyFnMeta(_1ac53e66d_parser* _self_, jule::Ptr<_1ab080446_FnDecl>& _182135_f) {
	_182135_f.get()._field_Directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1ac54c192_applyMeta(_1ac53e66d_parser* _self_, _1ab03a324_Node& _182633_node) {
	{
		auto &_match_expr{ _182633_node._field_Data };
		
		if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1bc925846:;
			{
				jule::Ptr<_1ab081425_VarDecl> _182921_v = _182633_node._field_Data.cast_ptr<_1ab081425_VarDecl>(&__jule_any_type18);;
				if ((_182921_v == nullptr)) {
					return;;
				};
				_182921_v.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bc9258ac:;
			{
				jule::Ptr<_1ab080446_FnDecl> _183621_f = _182633_node._field_Data.cast_ptr<_1ab080446_FnDecl>(&__jule_any_type16);;
				if ((_183621_f == nullptr)) {
					return;;
				};
				_1ac54be1c_applyFnMeta(&(*_self_), _183621_f);
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1bc925923:;
			{
				jule::Ptr<_1ab088bd0_StructDecl> _184221_sd = _182633_node._field_Data.cast_ptr<_1ab088bd0_StructDecl>(&__jule_any_type15);;
				if ((_184221_sd == nullptr)) {
					return;;
				};
				_184221_sd.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1bc925637:;
	};
}



inline void _1ac54c417_pushUseDecl(jule::Ptr<_1ac53e66d_parser> _self_, jule::Ptr<_1ab086172_UseDecl>& _185136_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push(_185136_decl);;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1ac5400ca_pushErr(_self_.ptr(), _185136_decl.get()._field_Token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1ac5403e9_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ac54c725_pushMetaNodes(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _185938_tokens) {
	{
		auto &_match_expr{ _185938_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1bc92b462:;
			{
				;
				jule::Ptr<_1ab086172_UseDecl> _186321_decl = _1ac54707c_buildUseDecl(_self_.ptr(), _185938_tokens,false);;
				_1ac54c417_pushUseDecl(_self_, _186321_decl);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bc92b4d9:;
			{
				if (((_185938_tokens.len() > 1LL) && (_185938_tokens[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_1ab086172_UseDecl> _186825_decl = _1ac54ab41_buildCppLinkUse(_self_, _185938_tokens);;
					_1ac54c417_pushUseDecl(_self_, _186825_decl);
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1bc92b561:;
			{
				_1ac540c8a_pushDirective(_self_.ptr(), _1ac540a15_buildDirective(_self_.ptr(), _185938_tokens));
				return true;;
			}
		}
		_match_end_1bc92b385:;
	};
	return false;;
}



inline _1ab03a324_Node _1ac54ca33_parseNode(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _187934_st) {
	_1ab03a324_Node _188017_node = _1ab03a324_Node{._field_Token=_187934_st[0LL], };;
	if (_1ac54c725_pushMetaNodes(_self_, _187934_st)) {
		return _188017_node;;
	};
	jule::Any _188817_data = _1ac54bb97_buildNodeData(_self_, _187934_st);;
	if ((_188817_data == nullptr)) {
		return _188017_node;;
	};
	_188017_node._field_Data=_188817_data;
	_1ac54c192_applyMeta(_self_.ptr(), _188017_node);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1ac5400ca_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188017_node;;
}



inline void _1ac54cca8_appendNode(jule::Ptr<_1ac53e66d_parser> _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _190335_st) {
	if ((_190335_st.len() == 0LL)) {
		return;;
	};
	_1ab03a324_Node _190717_node = _1ac54ca33_parseNode(_self_, _190335_st);;
	if (((_190717_node._field_Data == nullptr) || _1ac53ec12_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_190717_node);;
}



inline void _1ac54d21a_removeRange(_1ac53e66d_parser* _self_, jule::I64 _191430_i, jule::Str _191438_kind, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _191450_tokens, jule::Slice<jule::I64>& _191473_ranges) {
	jule::Str _191513_close = _1ac53d6e4_getCloseKindOfBrace(_191438_kind);;
	for (; (_191430_i >= 0LL); (_191430_i)--) {
		{
			jule::Ptr<_1a97237bc_Token> _191717_tok = _191450_tokens[_191473_ranges[_191430_i]];;
			if ((_191717_tok.get()._field_Kind != _191513_close)) {
				goto _iter_next_1bc935b0e;
			};
			_191473_ranges=jule::append(_191473_ranges.slice(0LL,_191430_i),_191473_ranges.slice((_191430_i + 1LL)));
			goto _iter_end_1bc935b0e;
		}
	_iter_next_1bc935b0e:;
	}
	_iter_end_1bc935b0e:;;
}



inline void _1ac54d5d3_pushWrongOrderCloseErr(_1ac53e66d_parser* _self_, jule::Ptr<_1a97237bc_Token>& _192642_t, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _192654_tokens, jule::Slice<jule::I64>& _192673_ranges) {
	{
		auto &_match_expr{ _192654_tokens[_192673_ranges[(_192673_ranges.len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1bc937bbb:;
			{
				_1ac5400ca_pushErr(&(*_self_), _192642_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1bc937c43:;
			{
				_1ac5400ca_pushErr(&(*_self_), _192642_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1bc937cba:;
			{
				_1ac5400ca_pushErr(&(*_self_), _192642_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc937a9a:;
	};
}



inline void _1ac54da45_pushRangeClose(_1ac53e66d_parser* _self_, jule::Ptr<_1a97237bc_Token> _193733_t, jule::Str _193744_left, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _193756_tokens, jule::Slice<jule::I64>& _193779_ranges) {
	jule::I64 _193813_n = _193779_ranges.len();;
	if ((_193813_n == 0LL)) {
		{
			auto &_match_expr{ _193733_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1bc93a7e5:;
				{
					_1ac5400ca_pushErr(&(*_self_), _193733_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1bc93a86c:;
				{
					_1ac5400ca_pushErr(&(*_self_), _193733_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1bc93a8e4:;
				{
					_1ac5400ca_pushErr(&(*_self_), _193733_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1bc93a5a3:;
		};
		return;;
	} else if ((_193756_tokens[_193779_ranges[(_193813_n - 1LL)]].get()._field_Kind != _193744_left)) {
		_1ac54d5d3_pushWrongOrderCloseErr(&(*_self_), _193733_t,_193756_tokens,_193779_ranges);
	};
	_1ac54d21a_removeRange(&(*_self_), static_cast<jule::I64>((_193813_n - 1LL)),_193733_t.get()._field_Kind,_193756_tokens,_193779_ranges);
}



inline void _1ac54dcba_checkRanges(_1ac53e66d_parser* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _195531_tokens) {
	jule::Slice<jule::I64> _195617_ranges = nullptr;;
	{
		auto &expr = _195531_tokens;
		auto it = expr.begin();
		_iter_begin_1bc93d96e:;
		if (it != expr.end()) {
			jule::I64 _195813_i = it - expr.begin();
			jule::Ptr<_1a97237bc_Token> &_195816_token = *it;
			{
				if ((_195816_token.get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1bc93d96e;
				};
				{
					auto &_match_expr{ _195816_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1bc93ec28:;
						{
							_195617_ranges = jule::alloc_for_append(_195617_ranges,1);_195617_ranges.__push(_195813_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1bc93ec8e:;
						{
							_1ac54da45_pushRangeClose(&(*_self_), _195816_token,jule::Str("(", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1bc93ed05:;
						{
							_1ac54da45_pushRangeClose(&(*_self_), _195816_token,jule::Str("{", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1bc93ed7c:;
						{
							_1ac54da45_pushRangeClose(&(*_self_), _195816_token,jule::Str("[", 1),_195531_tokens,_195617_ranges);
						}
					}
					_match_end_1bc93eb6d:;
				};
			}
			_iter_next_1bc93d96e:;
			++it;
			_195813_i++;
			goto _iter_begin_1bc93d96e;
		}
		_iter_end_1bc93d96e:;
	};
	{
		auto &expr = _195617_ranges;
		auto it = expr.begin();
		_iter_begin_1bc9412e0:;
		if (it != expr.end()) {
			jule::I64 _197616_i = *it;
			{
				jule::Ptr<_1a97237bc_Token> _197717_token = _195531_tokens[_197616_i];;
				{
					auto &_match_expr{ _197717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1bc942445:;
						{
							_1ac5400ca_pushErr(&(*_self_), _197717_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1bc9424ab:;
						{
							_1ac5400ca_pushErr(&(*_self_), _197717_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1bc942522:;
						{
							_1ac5400ca_pushErr(&(*_self_), _197717_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1bc942214:;
				};
			}
			_iter_next_1bc9412e0:;
			++it;
			goto _iter_begin_1bc9412e0;
		}
		_iter_end_1bc9412e0:;
	};
}



inline void _1ac54e040_parse(jule::Ptr<_1ac53e66d_parser> _self_, jule::Ptr<_1a9728b57_File>& _198930_f) {
	_self_.get()._field_ast=jule::new_ptr<_1ab039532_Ast>(_1ab039532_Ast{._field_File=_198930_f, });
	_1ac54dcba_checkRanges(_self_.ptr(), _198930_f.get()._field_Tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ac5226ea_stmt>> _199917_stmts = _1ac522a91_splitStmts(_198930_f.get()._field_Tokens);;
	jule::I64 _200217_i = 0LL;;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_1ac5226ea_stmt> _200421_stmt = _199917_stmts[_200217_i];;
			if ((_200421_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200421_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(38LLU))) {
				goto _iter_end_1bc94548c;
			};
			if ((!(_1a7997658_IsTopDirective(_200421_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1bc94548c;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_1ac540a15_buildDirective(_self_.ptr(), _200421_stmt.get()._field_tokens));;
		}
	_iter_next_1bc94548c:;
	}
	_iter_end_1bc94548c:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_1ac5226ea_stmt> _202121_stmt = _199917_stmts[_200217_i];;
			_1ac54cca8_appendNode(_self_, _202121_stmt.get()._field_tokens);
			if (_1ac53ec12_stopped(_self_.ptr())) {
				goto _iter_end_1bc946e2d;
			};
		}
	_iter_next_1bc946e2d:;
	}
	_iter_end_1bc946e2d:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1ac5400ca_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ac53e66d_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1ac550959_pushErr(_1ac550382_typeBuilder* _self_, jule::Ptr<_1a97237bc_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*_self_)._field_err) {
		_1ac5400ca_pushErr((*_self_)._field_p.ptr(), _4126_token,_4141_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1ac550c78_pushSuggestion(_1ac550382_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*_self_)._field_err) {
		_1ac5403e9_pushSuggestion((*_self_)._field_p.ptr(), _4833_fmt,_4846_args);
	};
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac550edc_buildPrim(_1ac550382_typeBuilder* _self_) {
	jule::Ptr<_1ab06d9b7_TypeDecl> _5517_t = _1ac54eded_buildPrimType((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _5517_t;;
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac551251_buildNamespace(_1ac550382_typeBuilder* _self_) {
	jule::Ptr<_1ab06d9b7_TypeDecl> _6117_t = jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_1ab06ea84_NamespaceTypeDecl> _6517_nst = jule::new_ptr<_1ab06ea84_NamespaceTypeDecl>();;
	jule::I64 _6617_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1a97237bc_Token> _6821_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_6617_n & 1LL) == 0LL)) {
				if ((_6821_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_1ac550959_pushErr(&(*_self_), _6821_token,jule::Str("invalid syntax", 14));
					_1ac550c78_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_6517_nst.get()._field_Idents = jule::alloc_for_append(_6517_nst.get()._field_Idents,1);_6517_nst.get()._field_Idents.__push(_6821_token);;
			} else if ((_6821_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
				goto _iter_end_1bc94e111;
			};
			(_6617_n)++;
		}
	_iter_next_1bc94e111:;
	}
	_iter_end_1bc94e111:;;
	_6517_nst.get()._field_Idents=_6517_nst.get()._field_Idents.slice(0LL,(_6517_nst.get()._field_Idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_6517_nst.get()._field_Kind=_1ac55198d_buildIdent(&(*_self_));
	_6117_t.get()._field_Kind=jule::Any(_6517_nst, &__jule_any_type99);
	return _6117_t;;
}



inline jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>> _1ac5514b5_buildGenerics(_1ac550382_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a97237bc_Token> _9413_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_9413_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_9413_token.get()._field_Kind != jule::Str("[", 1)))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _9917_parts = _1ac551729_identGenerics(&(*_self_));;
	if ((_9917_parts.len() == 0LL)) {
		_1ac550959_pushErr(&(*_self_), _9413_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>> _10517_types = jule::Slice<jule::Ptr<_1ab06d9b7_TypeDecl>>::alloc(0LL, _9917_parts.len());;
	{
		auto &expr = _9917_parts;
		auto it = expr.begin();
		_iter_begin_1bc9569ba:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a97237bc_Token>> _10621_part = *it;
			{
				jule::I64 _10721_j = 0LL;;
				jule::Ptr<_1ab06d9b7_TypeDecl> _10822_t;;
				({
					__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType((*_self_)._field_p, _10621_part,(&(_10721_j)),true);
					_10822_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10721_j < _10621_part.len())) {
					_1ac550959_pushErr(&(*_self_), _10621_part[_10721_j],jule::Str("invalid syntax", 14));
				};
				_10517_types = jule::alloc_for_append(_10517_types,1);_10517_types.__push(_10822_t);;
			}
			_iter_next_1bc9569ba:;
			++it;
			goto _iter_begin_1bc9569ba;
		}
		_iter_end_1bc9569ba:;
	};
	return _10517_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _1ac551729_identGenerics(_1ac550382_typeBuilder* _self_) {
	jule::I64 _11813_first = (*((*_self_)._field_i));;
	jule::I64 _11917_rangeN = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1a97237bc_Token> _12117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_12117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _12117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1bc95a4e6:;
						{
							(_11917_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1bc95a56d:;
						{
							(_11917_rangeN)--;
						}
					}
					_match_end_1bc95a2b5:;
				};
			};
			if ((_11917_rangeN == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1bc9591c6;
			};
		}
	_iter_next_1bc9591c6:;
	}
	_iter_end_1bc9591c6:;;
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _13517_tokens = (*_self_)._field_tokens.slice((_11813_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _13618_parts;;
	jule::Slice<_1a7995777_Log> _13625_errors;;
	({
		__jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log __jule_assign_result = _1ac53d44c_parts(_13517_tokens,static_cast<jule::U64>(8LLU),true);
		_13618_parts = __jule_assign_result.__jule_result_arg0;
		_13625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_13625_errors);
	};
	return _13618_parts;;
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac55198d_buildIdent(_1ac550382_typeBuilder* _self_) {
	jule::Bool _14417_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_14417_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return _1ac551251_buildNamespace(&(*_self_));;
	};
	jule::Ptr<_1a97237bc_Token> _14817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1ab06e07d_IdentTypeDecl> _14917_it = jule::new_ptr<_1ab06e07d_IdentTypeDecl>(_1ab06e07d_IdentTypeDecl{._field_Token=_14817_token, ._field_Ident=_14817_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1ab06d9b7_TypeDecl> _15517_itd = jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_14917_it, &__jule_any_type21)});;
	if (((!(_14417_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_14917_it.get()._field_Generics=_1ac5514b5_buildGenerics(&(*_self_));
		return _15517_itd;;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_1ac550959_pushErr(&(*_self_), _14817_token,jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ac550959_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	jule::Ptr<_1ab06e6cc_SubIdentTypeDecl> _17217_sit = jule::new_ptr<_1ab06e6cc_SubIdentTypeDecl>();;
	_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_14917_it);;
	jule::Ptr<_1ab06d9b7_TypeDecl> _17417_ident = _1ac55198d_buildIdent(&(*_self_));;
	{
		auto &_match_expr{ _17417_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1bc965501:;
			{
				_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_17417_ident.get()._field_Kind.cast_ptr<_1ab06e07d_IdentTypeDecl>(&__jule_any_type21));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1bc96559a:;
			{
				_17217_sit.get()._field_Idents=jule::append(_17217_sit.get()._field_Idents,_17417_ident.get()._field_Kind.cast_ptr<_1ab06e6cc_SubIdentTypeDecl>(&__jule_any_type95).get()._field_Idents);
			}
		}
		_match_end_1bc96549b:;
	};
	return jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_17217_sit, &__jule_any_type95)});;
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac551c02_buildCppLink(_1ac550382_typeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_1ac550959_pushErr(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1ab06d9b7_TypeDecl> _19317_t = _1ac55198d_buildIdent(&(*_self_));;
	_19317_t.get()._field_Kind.cast_ptr<_1ab06e07d_IdentTypeDecl>(&__jule_any_type21).get()._field_CppLinked=true;
	return _19317_t;;
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac551e66_buildFn(_1ac550382_typeBuilder* _self_) {
	jule::Ptr<_1a97237bc_Token> _19917_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1ab080446_FnDecl> _20017_f = _1ac5456da_buildFnPrototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_20017_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab080798_IsAnon(_20017_f.ptr())))) {
		_1ac550959_pushErr(&(*_self_), _20017_f.get()._field_Token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Token=_19917_token, ._field_Kind=jule::Any(_20017_f, &__jule_any_type16)});;
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac5521ca_buildPtr(_1ac550382_typeBuilder* _self_) {
	jule::Ptr<_1a97237bc_Token> _21417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1ac550959_pushErr(&(*_self_), _21417_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_1ab070843_PtrTypeDecl>(_1ab070843_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type80)});;
	};
	jule::Ptr<_1ab06d9b7_TypeDecl> _23117_elem = _1ac5533b8_step(&(*_self_));;
	if ((_23117_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_1ab070843_PtrTypeDecl>(_1ab070843_PtrTypeDecl{._field_Elem=_23117_elem}), &__jule_any_type80)});;
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac55243e_buildSptr(_1ac550382_typeBuilder* _self_) {
	jule::Ptr<_1a97237bc_Token> _24517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1ac550959_pushErr(&(*_self_), _24517_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1ab06d9b7_TypeDecl> _25217_elem = _1ac5533b8_step(&(*_self_));;
	if ((_25217_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Token=_24517_token, ._field_Kind=jule::Any(jule::new_ptr<_1ab06ed70_SptrTypeDecl>(_1ab06ed70_SptrTypeDecl{._field_Elem=_25217_elem}), &__jule_any_type81)});;
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac5526a3_buildOp(_1ac550382_typeBuilder* _self_) {
	jule::Ptr<_1a97237bc_Token> _26617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _26617_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1bc972684:;
			{
				return _1ac5521ca_buildPtr(&(*_self_));;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1bc9740e2:;
			{
				return _1ac55243e_buildSptr(&(*_self_));;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1bc974158:;
			{
				return jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1ab06ed70_SptrTypeDecl>(_1ab06ed70_SptrTypeDecl{._field_Elem=_1ac55243e_buildSptr(&(*_self_))}), &__jule_any_type81)});;
			}
		}
		else {
			_case_begin_1bc973685:;
			{
				_1ac550959_pushErr(&(*_self_), _26617_token,jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1bc9734ed:;
	};
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac552917_buildSlc(_1ac550382_typeBuilder* _self_) {
	jule::Ptr<_1a97237bc_Token> _28517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1ab06d9b7_TypeDecl> _28717_elem = _1ac5533b8_step(&(*_self_));;
	if ((_28717_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Token=_28517_token, ._field_Kind=jule::Any(jule::new_ptr<_1ab07026b_SlcTypeDecl>(_1ab07026b_SlcTypeDecl{._field_Elem=_28717_elem}), &__jule_any_type79)});;
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac552b7b_buildArr(_1ac550382_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _30017_exprTokens = _1ac53c8d0_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1ac550959_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1ab06d9b7_TypeDecl> _30617_elem = _1ac5533b8_step(&(*_self_));;
	if ((_30617_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab070ec5_ArrTypeDecl> _31117_arrt = jule::new_ptr<_1ab070ec5_ArrTypeDecl>(_1ab070ec5_ArrTypeDecl{._field_Elem=_30617_elem, });;
	jule::Ptr<_1a97237bc_Token> _31517_token = _30017_exprTokens[0LL];;
	if ((((_30017_exprTokens.len() == 1LL) && (_31517_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && (_31517_token.get()._field_Kind == jule::Str("...", 3)))) {
	} else {
		_31117_arrt.get()._field_Size=_1ac540707_buildExpr((*_self_)._field_p, _30017_exprTokens);
	};
	return jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Token=_31517_token, ._field_Kind=jule::Any(_31117_arrt, &__jule_any_type78)});;
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac552de0_buildMap(_1ac550382_typeBuilder* _self_) {
	jule::Ptr<_1a97237bc_Token> _32917_mapToken = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1ac550959_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _33717_keyTokens = _1ac53c8d0_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1ac550959_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_33717_keyTokens.len() == 0LL)) {
		_1ac550959_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1ab071723_MapTypeDecl> _34617_mapt = jule::new_ptr<_1ab071723_MapTypeDecl>();;
	jule::I64 _34717_j = 0LL;;
	jule::Ptr<_1ab06d9b7_TypeDecl> _34818_keyt;;
	jule::Bool _34828_ok = false;;
	({
		__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType((*_self_)._field_p, _33717_keyTokens,(&(_34717_j)),(*_self_)._field_err);
		_34818_keyt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	} else if ((_34717_j < _33717_keyTokens.len())) {
		_1ac550959_pushErr(&(*_self_), _33717_keyTokens[_34717_j],jule::Str("invalid syntax", 14));
	};
	_34617_mapt.get()._field_Key=_34818_keyt;
	jule::Ptr<_1ab06d9b7_TypeDecl> _35618_valt;;
	({
		__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac5419e4_buildType((*_self_)._field_p, (*_self_)._field_tokens,(*_self_)._field_i,(*_self_)._field_err);
		_35618_valt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	};
	_34617_mapt.get()._field_Val=_35618_valt;
	return jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Token=_32917_mapToken, ._field_Kind=jule::Any(_34617_mapt, &__jule_any_type82)});;
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac553154_buildEnumerable(_1ac550382_typeBuilder* _self_) {
	jule::Ptr<_1a97237bc_Token> _36817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_36817_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (_36817_token.get()._field_Kind != jule::Str("[", 1)))) {
		_1ac550959_pushErr(&(*_self_), _36817_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*_self_)._field_i)))++;
	_36817_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_36817_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_36817_token.get()._field_Kind == jule::Str("]", 1)))) {
		return _1ac552917_buildSlc(&(*_self_));;
	};
	((*((*_self_)._field_i)))--;
	return _1ac552b7b_buildArr(&(*_self_));;
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac5533b8_step(_1ac550382_typeBuilder* _self_) {
	jule::Ptr<_1a97237bc_Token> _38513_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _38513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1bc987996:;
			{
				return _1ac550edc_buildPrim(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1bc98727b:;
			{
				return _1ac55198d_buildIdent(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bc9872e2:;
			{
				return _1ac551c02_buildCppLink(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1bc987358:;
			{
				return _1ac551e66_buildFn(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bc9873d0:;
			{
				return _1ac5526a3_buildOp(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bc987ce8:;
			{
				return _1ac553154_buildEnumerable(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1bc987d5e:;
			{
				return _1ac552de0_buildMap(&(*_self_));;
			}
		}
		else {
			_case_begin_1bc987215:;
			{
				((*((*_self_)._field_i)))++;
				_1ac550959_pushErr(&(*_self_), _38513_token,jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1bc98707d:;
	};
}



inline __jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool _1ac55362c_build(_1ac550382_typeBuilder* _self_) {
	__jule_tuple_x_1ab06d9b7_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ab06d9b7_TypeDecl> _41117_root = _1ac5533b8_step(&(*_self_));;
	if ((_41117_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1ac54ebde_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _41117_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac550382_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab780eba_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1ab78286d_pushErr(_1ab78231d_directiveEval* _self_, jule::Ptr<_1a97237bc_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_1a7995777_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_1a7995bb7_Logf(_2137_fmt,_2150_args), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _1ab782c25_splitOperans(_1ab78231d_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3351_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_1a97237bc_Token> _4017_b = _3351_tokens[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1bc9acdc8:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1bc9aabd9;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1bc9ace3e:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1bc9acbb9:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1bc9aabd9;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1bc9aabd9:;
	}
	_iter_end_1bc9aabd9:;;
	if ((_3817_last < _3351_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last));;
	} else {
		_1ab78286d_pushErr(&(*_self_), _3351_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _1ab783033_evalDirectiveIdent(_1ab78231d_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1bc9b0e86:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7333_ident)) {
					return true;;
				};
			}
			_iter_next_1bc9b0e86:;
			++it;
			goto _iter_begin_1bc9b0e86;
		}
		_iter_end_1bc9b0e86:;
	};
	return false;;
}



inline jule::Bool _1ab783341_evalDirectivePart(_1ab78231d_directiveEval* _self_, jule::Slice<jule::Ptr<_1a97237bc_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_8740_part[0LL].get()._field_Kind == jule::Str("!", 1)));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_1ab78286d_pushErr(&(*_self_), _8740_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _9817_result = _1ab783033_evalDirectiveIdent(&(*_self_), _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;;
}



inline jule::Bool _1ab7835a5_eval(_1ab78231d_directiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_Args.len() == 0LL)) {
		_1ab78286d_pushErr(&(*_self_), (*_self_)._field_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _11317_logicalOrParts = _1ab782c25_splitOperans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_Args);;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto &expr = _11317_logicalOrParts;
		auto it = expr.begin();
		_iter_begin_1bc9b7300:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a97237bc_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _12021_logicalAndParts = _1ab782c25_splitOperans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto &expr = _12021_logicalAndParts;
					auto it = expr.begin();
					_iter_begin_1bc9b8ab5:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_1a97237bc_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_1a97237bc_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_Kind == jule::Str("(", 1)))) {
								jule::Ptr<_1a97237bc_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_Kind != jule::Str(")", 1)))) {
									_1ab78286d_pushErr(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;;
								};
								_12525_andPart=_12525_andPart.slice(1LL,(_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _1ab783341_evalDirectivePart(&(*_self_), _12525_andPart));
						}
						_iter_next_1bc9b8ab5:;
						++it;
						goto _iter_begin_1bc9b8ab5;
					}
					_iter_end_1bc9b8ab5:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1bc9b7300:;
			++it;
			goto _iter_begin_1bc9b7300;
		}
		_iter_end_1bc9b7300:;
	};
	return _11117_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab78231d_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac44b657_JuleImporter> static__1ac327e6d_New(_1ab780eba_CompileInfo _5819_info) {
	jule::Ptr<_1ac44b657_JuleImporter> _5917_imp = jule::new_ptr<_1ac44b657_JuleImporter>(_1ac44b657_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1a79cdccc_PathStdlib}), });;
	_1ab7817d4_initVars(_5917_imp.get()._field_vars,_5819_info);
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_1abc4cd9e_ImportInfo>> _1ac38c17a_AllPackages(_1ac44b657_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;;
}



inline void _1ac3a7ae1_SetModPath(_1ac44b657_JuleImporter* _self_, jule::Str _7529_path) {
	(*_self_)._field_mod=_7529_path;
}



inline jule::Str _1ac3ca273_GetModPath(_1ac44b657_JuleImporter* _self_) {
	return (*_self_)._field_mod;;
}



inline jule::Str _1ac3d9cdd_ModById(_1ac44b657_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*_self_)._field_mods[_8322_id];;
}



inline jule::Ptr<_1abc4cd9e_ImportInfo> _1ac428007_GetImport(_1ac44b657_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1bc9c563d:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1bc9c563d:;
			++it;
			goto _iter_begin_1bc9c563d;
		}
		_iter_end_1bc9c563d:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1ab039532_Ast__jule_tuple_s_1a7995777_Log _1ac441be1_ImportPackage(_1ac44b657_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1ab039532_Ast__jule_tuple_s_1a7995777_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1d95ba601_DirEntry>> _9717_dirents = ({
		auto except = static__1a791a17a_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1a7995777_Log>::make({_1ac3244ec_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_1d95ba601_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1ab79244e_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_newMod;
			jule::Slice<_1a7995777_Log> _10525_errs = _1ab7926e6_CheckModuleFile((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1ab039532_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1ab039532_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1bc9c6b5b:;
		if (it != expr.end()) {
			jule::Ptr<_1d95ba601_DirEntry> _11316_dirent = *it;
			{
				if ((_1d95bace9_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_1a7907b90_HasSuffix(_11316_dirent.get()._field_Name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1bc9c6b5b;
				};
				jule::Str _11917__path = _1a7917276_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_1a9728b57_File> _12021_file = _1a972a186_NewFileSet(_11917__path);;
				_1a97292d9_Fill(_12021_file.ptr(), _1ac31c281_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_1a7995777_Log> _12221_errors = _1a9735a32_Lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1ac4c8ad0_FileInfo> _12721_finfo = _1ac52063d_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1ab7800da_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1bc9c6b5b;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_1a7995777_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_1a7995777_Log __jule_assign_result = _1ac472cdd_isPassBuildDirectives(&(*_self_), _12721_finfo.get()._field_Ast);
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_1bc9c6b5b;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_1bc9c6b5b:;
			++it;
			goto _iter_begin_1bc9c6b5b;
		}
		_iter_end_1bc9c6b5b:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ac46ae29_Imported(_1ac44b657_JuleImporter* _self_, jule::Ptr<_1abc4cd9e_ImportInfo> _15331_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1bc9cec96:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1bc9cec96:;
			++it;
			goto _iter_begin_1bc9cec96;
		}
		_iter_end_1bc9cec96:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1bc9d157d:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1bc9d157d:;
				++it;
				_16217_i++;
				goto _iter_begin_1bc9d157d;
			}
			_iter_end_1bc9d157d:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15331_imp);;
}



inline __jule_tuple_bool__jule_tuple_s_1a7995777_Log _1ac472cdd_isPassBuildDirectives(_1ac44b657_JuleImporter* _self_, jule::Ptr<_1ab039532_Ast>& _17945_file) {
	__jule_tuple_bool__jule_tuple_s_1a7995777_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto &expr = _17945_file.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1bc9d47d4:;
		if (it != expr.end()) {
			jule::Ptr<_1ab03a720_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_Tag.get()._field_Kind != jule::Str("build", 5))) {
					goto _iter_next_1bc9d47d4;
				};
				_1ab78231d_directiveEval _18421_de = _1ab78231d_directiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _1ab7835a5_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc9d47d4:;
			++it;
			goto _iter_begin_1bc9d47d4;
		}
		_iter_end_1bc9d47d4:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44b657_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac2e83e4_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bca07890_isCommonOrdered(jule::Slice<jule::Ptr<_1ab08a1a9_Struct>> _1834_s, jule::Ptr<_1ab08a1a9_Struct> _1842_t) {
	{
		auto &expr = _1842_t.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_1bca0893a:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a1a9_Struct> &_1916_d = *it;
			{
				{
					auto &expr = _1834_s;
					auto it = expr.begin();
					_iter_begin_1bca09265:;
					if (it != expr.end()) {
						jule::Ptr<_1ab08a1a9_Struct> &_2020_t2 = *it;
						{
							if ((_1916_d == _2020_t2)) {
								return false;;
							};
						}
						_iter_next_1bca09265:;
						++it;
						goto _iter_begin_1bca09265;
					}
					_iter_end_1bca09265:;
				};
			}
			_iter_next_1bca0893a:;
			++it;
			goto _iter_begin_1bca0893a;
		}
		_iter_end_1bca0893a:;
	};
	return true;;
}

inline jule::Bool _1bca0eb2d_isCommonOrdered(jule::Slice<jule::Ptr<_1abc73ee6_Var>> _1834_s, jule::Ptr<_1abc73ee6_Var> _1842_t) {
	{
		auto &expr = _1842_t.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_1bca10b84:;
		if (it != expr.end()) {
			jule::Ptr<_1abc73ee6_Var> &_1916_d = *it;
			{
				{
					auto &expr = _1834_s;
					auto it = expr.begin();
					_iter_begin_1bca114ae:;
					if (it != expr.end()) {
						jule::Ptr<_1abc73ee6_Var> &_2020_t2 = *it;
						{
							if ((_1916_d == _2020_t2)) {
								return false;;
							};
						}
						_iter_next_1bca114ae:;
						++it;
						goto _iter_begin_1bca114ae;
					}
					_iter_end_1bca114ae:;
				};
			}
			_iter_next_1bca10b84:;
			++it;
			goto _iter_begin_1bca10b84;
		}
		_iter_end_1bca10b84:;
	};
	return true;;
}



inline void _1bca01e1c_orderCommon(jule::Slice<jule::Ptr<_1ab08a1a9_Struct>>& _3135_s) {
	jule::I64 _3217_i = 0LL;;
	{
		auto &expr = _3135_s;
		auto it = expr.begin();
		_iter_begin_1bca0324d:;
		if (it != expr.end()) {
			jule::I64 _3314_j = it - expr.begin();
			jule::Ptr<_1ab08a1a9_Struct> _3321_t = *it;
			{
				if ((_3321_t.get()._field_CppLinked || (_3321_t.get()._field_Depends.len() == 0LL))) {
					_3135_s.swap(_3217_i,_3314_j);
					(_3217_i)++;
				};
			}
			_iter_next_1bca0324d:;
			++it;
			_3314_j++;
			goto _iter_begin_1bca0324d;
		}
		_iter_end_1bca0324d:;
	};
	jule::Slice<jule::Ptr<_1ab08a1a9_Struct>> _4017_sp = _3135_s.slice(_3217_i);;
	jule::I64 _4117_n = (_4017_sp.len() - 1LL);;
	{
		auto &expr = _4017_sp;
		auto it = expr.begin();
		_iter_begin_1bca055c4:;
		if (it != expr.end()) {
			{
				jule::Bool _4321_swapped = false;;
				jule::I64 _4421_k = 0LL;;
				for (; (_4421_k < _4117_n); (_4421_k)++) {
					{
						if ((!(_1bca07890_isCommonOrdered(_4017_sp.slice((_4421_k + 1LL)),_4017_sp[_4421_k])))) {
							_4017_sp.swap(_4421_k,static_cast<jule::I64>((_4421_k + 1LL)));
							_4321_swapped=true;
						};
					}
				_iter_next_1bca063e9:;
				}
				_iter_end_1bca063e9:;;
				if ((!(_4321_swapped))) {
					goto _iter_end_1bca055c4;
				};
				(_4117_n)--;
			}
			_iter_next_1bca055c4:;
			++it;
			goto _iter_begin_1bca055c4;
		}
		_iter_end_1bca055c4:;
	};
}

inline void _1bca027ad_orderCommon(jule::Slice<jule::Ptr<_1abc73ee6_Var>>& _3135_s) {
	jule::I64 _3217_i = 0LL;;
	{
		auto &expr = _3135_s;
		auto it = expr.begin();
		_iter_begin_1bca0a4db:;
		if (it != expr.end()) {
			jule::I64 _3314_j = it - expr.begin();
			jule::Ptr<_1abc73ee6_Var> _3321_t = *it;
			{
				if ((_3321_t.get()._field_CppLinked || (_3321_t.get()._field_Depends.len() == 0LL))) {
					_3135_s.swap(_3217_i,_3314_j);
					(_3217_i)++;
				};
			}
			_iter_next_1bca0a4db:;
			++it;
			_3314_j++;
			goto _iter_begin_1bca0a4db;
		}
		_iter_end_1bca0a4db:;
	};
	jule::Slice<jule::Ptr<_1abc73ee6_Var>> _4017_sp = _3135_s.slice(_3217_i);;
	jule::I64 _4117_n = (_4017_sp.len() - 1LL);;
	{
		auto &expr = _4017_sp;
		auto it = expr.begin();
		_iter_begin_1bca0c862:;
		if (it != expr.end()) {
			{
				jule::Bool _4321_swapped = false;;
				jule::I64 _4421_k = 0LL;;
				for (; (_4421_k < _4117_n); (_4421_k)++) {
					{
						if ((!(_1bca0eb2d_isCommonOrdered(_4017_sp.slice((_4421_k + 1LL)),_4017_sp[_4421_k])))) {
							_4017_sp.swap(_4421_k,static_cast<jule::I64>((_4421_k + 1LL)));
							_4321_swapped=true;
						};
					}
				_iter_next_1bca0d687:;
				}
				_iter_end_1bca0d687:;;
				if ((!(_4321_swapped))) {
					goto _iter_end_1bca0c862;
				};
				(_4117_n)--;
			}
			_iter_next_1bca0c862:;
			++it;
			goto _iter_begin_1bca0c862;
		}
		_iter_end_1bca0c862:;
	};
}



inline void static__1ac30c64a_orderStructures(jule::Slice<jule::Ptr<_1ab08a1a9_Struct>>& _6036_structs) {
	_1bca01e1c_orderCommon(_6036_structs);
}



inline void static__1ac3407b0_orderVars(jule::Slice<jule::Ptr<_1abc73ee6_Var>>& _6630_vars) {
	_1bca027ad_orderCommon(_6630_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac553819_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abbde5c1_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1abc2586b_optimizeChild(jule::Ptr<_1abc25393_scopeDeadCode> _self_, jule::Ptr<_1ababdcdb_Scope>& _3938_s) {
	jule::Ptr<_1abc25393_scopeDeadCode> _4017_sdc = jule::new_ptr<_1abc25393_scopeDeadCode>(_1abc25393_scopeDeadCode{._field_parent=_self_, ._field_s=_3938_s, ._field_stmts=(&(_3938_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1abc27eab_optimizeStmts(_4017_sdc);
	};
}



inline void _1abc25b13_optimizeBodyChildExceptional(jule::Ptr<_1abc25393_scopeDeadCode> _self_, jule::Ptr<_1ababdcdb_Scope>& _5053_s) {
	jule::Ptr<_1abc25393_scopeDeadCode> _5117_sdc = jule::new_ptr<_1abc25393_scopeDeadCode>(_1abc25393_scopeDeadCode{._field_s=_5053_s, ._field_stmts=(&(_5053_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1abc27eab_optimizeStmts(_5117_sdc);
	};
}



inline void _1abc25d99_optimizeBodyChild(jule::Ptr<_1abc25393_scopeDeadCode> _self_, jule::Ptr<_1ababdcdb_Scope>& _6142_s) {
	jule::Ptr<_1abc25393_scopeDeadCode> _6217_sdc = jule::new_ptr<_1abc25393_scopeDeadCode>(_1abc25393_scopeDeadCode{._field_s=_6142_s, ._field_stmts=(&(_6142_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1abc27eab_optimizeStmts(_6217_sdc);
	};
}



inline void _1abc2611e_optimizeExprModel(jule::Ptr<_1abc25393_scopeDeadCode> _self_, jule::Any& _7142_model) {
	_1abc292ed_exprDeadCode _7213_edc = static__1abc2992a_new(_self_);;
	_1abc30645_optimize(&_7213_edc, _7142_model);
}



inline void _1abc262ea_eliminateFollowed(_1abc25393_scopeDeadCode* _self_) {
	if (((*((*_self_)._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_1abc25393_scopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1bca7bb78:;
	}
	_iter_end_1bca7bb78:;;
}



inline void _1abc26570_pushGoto(jule::Ptr<_1abc25393_scopeDeadCode> _self_, jule::Ptr<_1abac1816_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1bca7ed9b:;
	}
	_iter_end_1bca7ed9b:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1abac1816_GotoSt>>::make({_9232_gt}));
}



inline void _1abc267e5_pushLabel(jule::Ptr<_1abc25393_scopeDeadCode> _self_, jule::Ptr<_1abac152a_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1bca81672;
			};
			(_10317_i)++;
		}
	_iter_next_1bca81672:;
	}
	_iter_end_1bca81672:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1abac152a_Label>>::make({_10233_l}));
}



inline void _1abc26a6a_optimizeRangeIter(jule::Ptr<_1abc25393_scopeDeadCode> _self_, jule::Ptr<_1abac098b_RangeIter> _11541_it) {
	_1abc2611e_optimizeExprModel(_self_, _11541_it.get()._field_Expr.get()._field_Model);
	_1abc25d99_optimizeBodyChild(_self_, _11541_it.get()._field_Scope);
}



inline void _1abc26ce0_optimizeWhileIter(jule::Ptr<_1abc25393_scopeDeadCode> _self_, jule::Ptr<_1abac00a6_WhileIter> _12041_it) {
	_1abc2611e_optimizeExprModel(_self_, _12041_it.get()._field_Expr);
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1abc27cd0_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1abc25d99_optimizeBodyChild(_self_, _12041_it.get()._field_Scope);
}



inline void _1abc27065_optimizeInfIter(jule::Ptr<_1abc25393_scopeDeadCode> _self_, jule::Ptr<_1ababeb33_InfIter> _12839_it) {
	_1abc25d99_optimizeBodyChild(_self_, _12839_it.get()._field_Scope);
}



inline void _1abc272da_optimizeConditional(jule::Ptr<_1abc25393_scopeDeadCode> _self_, jule::Ptr<_1ababe847_Conditional> _13243_c) {
	{
		auto &expr = _13243_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1bca87898:;
		if (it != expr.end()) {
			jule::Ptr<_1ababe1d7_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1abc2611e_optimizeExprModel(_self_, _13321_case.get()._field_Expr);
					_1abc25d99_optimizeBodyChild(_self_, _13321_case.get()._field_Scope);
				};
			}
			_iter_next_1bca87898:;
			++it;
			goto _iter_begin_1bca87898;
		}
		_iter_end_1bca87898:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1abc2586b_optimizeChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		} else {
			_1abc25d99_optimizeBodyChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1abc27560_optimizeMatch(jule::Ptr<_1abc25393_scopeDeadCode> _self_, jule::Ptr<_1abac2a37_Match> _15037_m) {
	{
		auto &expr = _15037_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1bca8a4e4:;
		if (it != expr.end()) {
			jule::Ptr<_1abac3582_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1bca8ad41:;
					if (it != expr.end()) {
						jule::Ptr<_1abcbba55_Data> _15225_expr = *it;
						{
							_1abc2611e_optimizeExprModel(_self_, _15225_expr.get()._field_Model);
						}
						_iter_next_1bca8ad41:;
						++it;
						goto _iter_begin_1bca8ad41;
					}
					_iter_end_1bca8ad41:;
				};
				_1abc25d99_optimizeBodyChild(_self_, _15121_case.get()._field_Scope);
			}
			_iter_next_1bca8a4e4:;
			++it;
			goto _iter_begin_1bca8a4e4;
		}
		_iter_end_1bca8a4e4:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1abc2586b_optimizeChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		} else {
			_1abc25d99_optimizeBodyChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1abc277d5_optimizeAssign(jule::Ptr<_1abc25393_scopeDeadCode> _self_, jule::Ptr<_1abac2141_Assign> _16838_assign) {
	_1abc2611e_optimizeExprModel(_self_, _16838_assign.get()._field_L.get()._field_Model);
	_1abc2611e_optimizeExprModel(_self_, _16838_assign.get()._field_R.get()._field_Model);
}



inline void _1abc27a5a_optimizeMultiAssign(jule::Ptr<_1abc25393_scopeDeadCode> _self_, jule::Ptr<_1abac24e8_MultiAssign> _17343_assign) {
	{
		auto &expr = _17343_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1bca8e32d:;
		if (it != expr.end()) {
			jule::Ptr<_1abcbba55_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1abc2611e_optimizeExprModel(_self_, _17421_l.get()._field_Model);
				};
			}
			_iter_next_1bca8e32d:;
			++it;
			goto _iter_begin_1bca8e32d;
		}
		_iter_end_1bca8e32d:;
	};
	_1abc2611e_optimizeExprModel(_self_, _17343_assign.get()._field_R);
}



inline void _1abc27cd0_optimizeStmt(jule::Ptr<_1abc25393_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bca90a05:;
			{
				jule::Ptr<_1ababdcdb_Scope> _18521_scope = _18236_st.cast_ptr<_1ababdcdb_Scope>(&__jule_any_type23);;
				if (_18521_scope.get()._field_Deferred) {
					_1abc28297_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1abc2586b_optimizeChild(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bca90b7b:;
			{
				_1abc26a6a_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1abac098b_RangeIter>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bca90be2:;
			{
				_1abc26ce0_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1abac00a6_WhileIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bca90c58:;
			{
				_1abc27065_optimizeInfIter(_self_, _18236_st.cast_ptr<_1ababeb33_InfIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1bca90cd0:;
			{
				_1abc272da_optimizeConditional(_self_, _18236_st.cast_ptr<_1ababe847_Conditional>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1bca90d57:;
			{
				_1abc27560_optimizeMatch(_self_, _18236_st.cast_ptr<_1abac2a37_Match>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bca90dce:;
			{
				_1abc277d5_optimizeAssign(_self_, _18236_st.cast_ptr<_1abac2141_Assign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1bca90e56:;
			{
				_1abc27a5a_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1abac24e8_MultiAssign>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bca90ecd:;
			{
				jule::Ptr<_1abcbba55_Data> _20621_d = _18236_st.cast_ptr<_1abcbba55_Data>(&__jule_any_type25);;
				if (_self_.get()._field_except) {
					goto _match_end_1bca90b15;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type31) {
						_case_begin_1bca95e28:;
						{
							_1abc262ea_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1bca96445:;
						{
							_1abc2611e_optimizeExprModel(_self_, _20621_d.get()._field_Model);
						}
					}
					_match_end_1bca963e0:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1bca91055:;
			{
				_1abc262ea_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1bca910cc:;
			{
				_1abc26570_pushGoto(_self_, _18236_st.cast_ptr<_1abac1816_GotoSt>(&__jule_any_type44));
				_1abc262ea_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bca91154:;
			{
				_1abc267e5_pushLabel(_self_, _18236_st.cast_ptr<_1abac152a_Label>(&__jule_any_type22));
			}
		}
		_match_end_1bca90b15:;
	};
}



inline void _1abc27eab_optimizeStmts(jule::Ptr<_1abc25393_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1abc27cd0_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1bca988dc:;
	}
	_iter_end_1bca988dc:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abc25393_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1abc292ed_exprDeadCode static__1abc2992a_new(jule::Ptr<_1abc25393_scopeDeadCode>& _5024_s) {
	return _1abc292ed_exprDeadCode{._field_s=_5024_s};;
}



inline void _1abc29ba0_binary(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba90de0_BinopExprModel> _5625_m) {
	_1abc30645_optimize(&(*_self_), _5625_m.get()._field_Left.get()._field_Model);
	_1abc30645_optimize(&(*_self_), _5625_m.get()._field_Right.get()._field_Model);
}



inline void _1abc29e25_unary(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba91297_UnaryExprModel> _6124_m) {
	_1abc30645_optimize(&(*_self_), _6124_m.get()._field_Expr.get()._field_Model);
}



inline void _1abc2a19a_structureLit(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba91a4a_StructLitExprModel> _6531_m) {
	{
		auto &expr = _6531_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1bca9bb21:;
		if (it != expr.end()) {
			jule::Ptr<_1aba91693_StructArgExprModel> _6621_arg = *it;
			{
				_1abc30645_optimize(&(*_self_), _6621_arg.get()._field_Expr);
			}
			_iter_next_1bca9bb21:;
			++it;
			goto _iter_begin_1bca9bb21;
		}
		_iter_end_1bca9bb21:;
	};
}



inline void _1abc2a420_allocStructure(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba91d58_AllocStructLitExprModel> _7133_m) {
	_1abc2a19a_structureLit(&(*_self_), _7133_m.get()._field_Lit);
}



inline void _1abc2a695_casting(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba923a8_CastingExprModel> _7526_m) {
	_1abc30645_optimize(&(*_self_), _7526_m.get()._field_Expr);
}



inline void _1abc2a91a_args(_1abc292ed_exprDeadCode* _self_, jule::Slice<jule::Any>& _7924_args) {
	{
		auto &expr = _7924_args;
		auto it = expr.begin();
		_iter_begin_1bca9dd76:;
		if (it != expr.end()) {
			jule::Any _8021_arg = *it;
			{
				_1abc30645_optimize(&(*_self_), _8021_arg);
			}
			_iter_next_1bca9dd76:;
			++it;
			goto _iter_begin_1bca9dd76;
		}
		_iter_end_1bca9dd76:;
	};
}



inline void _1abc2ab90_funcCall(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba92c5a_FnCallExprModel> _8527_m) {
	_1abc30645_optimize(&(*_self_), _8527_m.get()._field_Expr);
	_1abc2a91a_args(&(*_self_), _8527_m.get()._field_Args);
	if ((_8527_m.get()._field_Except != nullptr)) {
		_1abc25b13_optimizeBodyChildExceptional((*_self_)._field_s, _8527_m.get()._field_Except);
	};
}



inline void _1abc2ae15_slice(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba93112_SliceExprModel> _9324_m) {
	_1abc2a91a_args(&(*_self_), _9324_m.get()._field_Elems);
}



inline void _1abc2b18a_array(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba95e06_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_1abc30645_optimize(&(*_self_), _9724_m.get()._field_Elems[0LL]);
	};
	_1abc2a91a_args(&(*_self_), _9724_m.get()._field_Elems);
}



inline void _1abc2b410_indexing(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba93585_IndexingExprModel> _10427_m) {
	_1abc30645_optimize(&(*_self_), _10427_m.get()._field_Expr.get()._field_Model);
	_1abc30645_optimize(&(*_self_), _10427_m.get()._field_Index.get()._field_Model);
}



inline void _1abc2b685_anonFunc(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba9393c_AnonFnExprModel> _10927_m) {
	_1abc28297_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _1abc2b90a_mapExpr(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba94267_MapExprModel> _11326_m) {
	{
		auto &expr = _11326_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1bcaa4d49:;
		if (it != expr.end()) {
			jule::Ptr<_1aba93ce4_KeyValPairExprModel> _11421_pair = *it;
			{
				_1abc30645_optimize(&(*_self_), _11421_pair.get()._field_Key);
				_1abc30645_optimize(&(*_self_), _11421_pair.get()._field_Val);
			}
			_iter_next_1bcaa4d49:;
			++it;
			goto _iter_begin_1bcaa4d49;
		}
		_iter_end_1bcaa4d49:;
	};
}



inline void _1abc2bb80_slicing(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba947a6_SlicingExprModel> _12026_m) {
	_1abc30645_optimize(&(*_self_), _12026_m.get()._field_Expr);
	_1abc30645_optimize(&(*_self_), _12026_m.get()._field_Left);
	if ((_12026_m.get()._field_Right != nullptr)) {
		_1abc30645_optimize(&(*_self_), _12026_m.get()._field_Right);
	};
}



inline void _1abc2be05_traitSub(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba94ce5_TraitSubIdentExprModel> _12827_m) {
	_1abc30645_optimize(&(*_self_), _12827_m.get()._field_Expr);
}



inline void _1abc2c17a_structureSub(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba95697_StructSubIdentExprModel> _13231_m) {
	_1abc30645_optimize(&(*_self_), _13231_m.get()._field_Expr.get()._field_Model);
}



inline void _1abc2c400_commonSub(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba96753_CommonSubIdentExprModel> _13628_m) {
	_1abc30645_optimize(&(*_self_), _13628_m.get()._field_Expr);
}



inline void _1abc2c675_tuple(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba96a50_TupleExprModel> _14024_m) {
	{
		auto &expr = _14024_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1bcaa9348:;
		if (it != expr.end()) {
			jule::Ptr<_1abcbba55_Data> _14121_d = *it;
			{
				_1abc30645_optimize(&(*_self_), _14121_d.get()._field_Model);
			}
			_iter_next_1bcaa9348:;
			++it;
			goto _iter_begin_1bcaa9348;
		}
		_iter_end_1bcaa9348:;
	};
}



inline void _1abc2c8ea_newCall(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba97a1d_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_1abc30645_optimize(&(*_self_), _14626_m.get()._field_Init);
	};
}



inline void _1abc2cb70_outCall(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba96e29_BuiltinOutCallExprModel> _15226_m) {
	_1abc30645_optimize(&(*_self_), _15226_m.get()._field_Expr);
}



inline void _1abc2cde5_outlnCall(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba97314_BuiltinOutlnCallExprModel> _15628_m) {
	_1abc30645_optimize(&(*_self_), _15628_m.get()._field_Expr);
}



inline void _1abc2d16a_panicCall(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba97e08_BuiltinPanicCallExprModel> _16028_m) {
	_1abc30645_optimize(&(*_self_), _16028_m.get()._field_Expr);
}



inline void _1abc2d3e0_assertCall(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba983ae_BuiltinAssertCallExprModel> _16429_m) {
	_1abc30645_optimize(&(*_self_), _16429_m.get()._field_Expr);
}



inline void _1abc2d665_errorCall(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba9a290_BuiltinErrorCallExprModel> _16828_m) {
	_1abc30645_optimize(&(*_self_), _16828_m.get()._field_Err.get()._field_Model);
}



inline void _1abc2d8da_makeCall(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba98865_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_1abc30645_optimize(&(*_self_), _17227_m.get()._field_Len);
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_1abc30645_optimize(&(*_self_), _17227_m.get()._field_Cap);
	};
}



inline void _1abc2db60_appendCall(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba98c50_BuiltinAppendCallExprModel> _18129_m) {
	_1abc30645_optimize(&(*_self_), _18129_m.get()._field_Dest);
	_1abc30645_optimize(&(*_self_), _18129_m.get()._field_Elements);
}



inline void _1abc2ddd5_lenCall(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba9906e_BuiltinLenCallExprModel> _18626_m) {
	_1abc30645_optimize(&(*_self_), _18626_m.get()._field_Expr.get()._field_Model);
}



inline void _1abc2e15a_capCall(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba9938d_BuiltinCapCallExprModel> _19026_m) {
	_1abc30645_optimize(&(*_self_), _19026_m.get()._field_Expr.get()._field_Model);
}



inline void _1abc2e3d0_cloneCall(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba97633_BuiltinCloneCallExprModel> _19428_m) {
	_1abc30645_optimize(&(*_self_), _19428_m.get()._field_Expr);
}



inline void _1abc2e655_deleteCall(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba99a42_BuiltinDeleteCallExprModel> _19829_m) {
	_1abc30645_optimize(&(*_self_), _19829_m.get()._field_Dest.get()._field_Model);
	if ((_19829_m.get()._field_Key != nullptr)) {
		_1abc30645_optimize(&(*_self_), _19829_m.get()._field_Key.get()._field_Model);
	};
}



inline void _1abc2e8ca_sizeof(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba9a58c_SizeofExprModel> _20525_m) {
	_1abc30645_optimize(&(*_self_), _20525_m.get()._field_Expr);
}



inline void _1abc2eb50_alignof(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba9a878_AlignofExprModel> _20926_m) {
	_1abc30645_optimize(&(*_self_), _20926_m.get()._field_Expr);
}



inline void _1abc2edc5_integratedToStr(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba9ae72_IntegratedToStrExprModel> _21334_m) {
	_1abc30645_optimize(&(*_self_), _21334_m.get()._field_Expr);
}



inline void _1abc3014a_free(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba9b626_FreeExprModel> _21723_m) {
	_1abc30645_optimize(&(*_self_), _21723_m.get()._field_Expr);
}



inline void _1abc303c0_backendEmit(_1abc292ed_exprDeadCode* _self_, jule::Ptr<_1aba9b33a_BackendEmitExprModel> _22130_m) {
	_1abc2a91a_args(&(*_self_), _22130_m.get()._field_Exprs);
}



inline void _1abc30645_optimize(_1abc292ed_exprDeadCode* _self_, jule::Any& _22528_model) {
	{
		auto &_match_expr{ _22528_model };
		
		if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bcab6e38:;
			{
				_1abc29ba0_binary(&(*_self_), _22528_model.cast_ptr<_1aba90de0_BinopExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bcab6eb0:;
			{
				_1abc29e25_unary(&(*_self_), _22528_model.cast_ptr<_1aba91297_UnaryExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1bcab7037:;
			{
				_1abc2a19a_structureLit(&(*_self_), _22528_model.cast_ptr<_1aba91a4a_StructLitExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1bcab7411:;
			{
				_1abc2a420_allocStructure(&(*_self_), _22528_model.cast_ptr<_1aba91d58_AllocStructLitExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1bcab7477:;
			{
				_1abc2a695_casting(&(*_self_), _22528_model.cast_ptr<_1aba923a8_CastingExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bcab74ee:;
			{
				_1abc2ab90_funcCall(&(*_self_), _22528_model.cast_ptr<_1aba92c5a_FnCallExprModel>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1bcab7576:;
			{
				_1abc2ae15_slice(&(*_self_), _22528_model.cast_ptr<_1aba93112_SliceExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1bcab75ed:;
			{
				_1abc2b18a_array(&(*_self_), _22528_model.cast_ptr<_1aba95e06_ArrayExprModel>(&__jule_any_type93));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bcab7675:;
			{
				_1abc2b410_indexing(&(*_self_), _22528_model.cast_ptr<_1aba93585_IndexingExprModel>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1bcab76ec:;
			{
				_1abc2b685_anonFunc(&(*_self_), _22528_model.cast_ptr<_1aba9393c_AnonFnExprModel>(&__jule_any_type107));
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1bcab7774:;
			{
				_1abc2b90a_mapExpr(&(*_self_), _22528_model.cast_ptr<_1aba94267_MapExprModel>(&__jule_any_type106));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1bcab77eb:;
			{
				_1abc2bb80_slicing(&(*_self_), _22528_model.cast_ptr<_1aba947a6_SlicingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1bcab7873:;
			{
				_1abc2be05_traitSub(&(*_self_), _22528_model.cast_ptr<_1aba94ce5_TraitSubIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bcab78ea:;
			{
				_1abc2c17a_structureSub(&(*_self_), _22528_model.cast_ptr<_1aba95697_StructSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1bcab7972:;
			{
				_1abc2c400_commonSub(&(*_self_), _22528_model.cast_ptr<_1aba96753_CommonSubIdentExprModel>(&__jule_any_type75));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1bcab79e9:;
			{
				_1abc2c675_tuple(&(*_self_), _22528_model.cast_ptr<_1aba96a50_TupleExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1bcab7a71:;
			{
				_1abc2cb70_outCall(&(*_self_), _22528_model.cast_ptr<_1aba96e29_BuiltinOutCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bcab7ae8:;
			{
				_1abc2cde5_outlnCall(&(*_self_), _22528_model.cast_ptr<_1aba97314_BuiltinOutlnCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1bcab7b70:;
			{
				_1abc2c8ea_newCall(&(*_self_), _22528_model.cast_ptr<_1aba97a1d_BuiltinNewCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1bcab7be7:;
			{
				_1abc2d16a_panicCall(&(*_self_), _22528_model.cast_ptr<_1aba97e08_BuiltinPanicCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1bcab7c6e:;
			{
				_1abc2d3e0_assertCall(&(*_self_), _22528_model.cast_ptr<_1aba983ae_BuiltinAssertCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bcab7ce6:;
			{
				_1abc2d665_errorCall(&(*_self_), _22528_model.cast_ptr<_1aba9a290_BuiltinErrorCallExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1bcab7d6d:;
			{
				_1abc2d8da_makeCall(&(*_self_), _22528_model.cast_ptr<_1aba98865_BuiltinMakeCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bcab7de5:;
			{
				_1abc2db60_appendCall(&(*_self_), _22528_model.cast_ptr<_1aba98c50_BuiltinAppendCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1bcab7e6c:;
			{
				_1abc2ddd5_lenCall(&(*_self_), _22528_model.cast_ptr<_1aba9906e_BuiltinLenCallExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1bcab7ee4:;
			{
				_1abc2e15a_capCall(&(*_self_), _22528_model.cast_ptr<_1aba9938d_BuiltinCapCallExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1bcab806b:;
			{
				_1abc2e3d0_cloneCall(&(*_self_), _22528_model.cast_ptr<_1aba97633_BuiltinCloneCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bcab80e3:;
			{
				_1abc2e655_deleteCall(&(*_self_), _22528_model.cast_ptr<_1aba99a42_BuiltinDeleteCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1bcab816a:;
			{
				_1abc2e8ca_sizeof(&(*_self_), _22528_model.cast_ptr<_1aba9a58c_SizeofExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1bcab81e2:;
			{
				_1abc2eb50_alignof(&(*_self_), _22528_model.cast_ptr<_1aba9a878_AlignofExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1bcab8269:;
			{
				_1abc2edc5_integratedToStr(&(*_self_), _22528_model.cast_ptr<_1aba9ae72_IntegratedToStrExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bcab82e1:;
			{
				_1abc3014a_free(&(*_self_), _22528_model.cast_ptr<_1aba9b626_FreeExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bcab8368:;
			{
				_1abc303c0_backendEmit(&(*_self_), _22528_model.cast_ptr<_1aba9b33a_BackendEmitExprModel>(&__jule_any_type26));
			}
		}
		_match_end_1bcab7136:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1abc292ed_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9750e7b_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a97dda1e_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9791384_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9cd418a_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9e8e1e1_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9749e20_scopeOptimizer> static__1a9748bee_new(jule::Ptr<_1ababdcdb_Scope> _4523_scope) {
	return jule::new_ptr<_1a9749e20_scopeOptimizer>(_1a9749e20_scopeOptimizer{._field_scope=_4523_scope});;
}



inline void _1a976140e_setCurrentStmt(_1a9749e20_scopeOptimizer* _self_, jule::Any _5137_stmt) {
	(*_self_)._field_scope.get()._field_Stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5137_stmt))))));
}



inline void _1a9763a2c_optimizeData(_1a9749e20_scopeOptimizer* _self_, jule::Ptr<_1abcbba55_Data> _5535_d) {
	{
		auto &_match_expr{ _5535_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bcb03062:;
			{
				jule::Ptr<_1aba92c5a_FnCallExprModel> _5821_m = _5535_d.get()._field_Model.cast_ptr<_1aba92c5a_FnCallExprModel>(&__jule_any_type36);;
				if (_1d7c0a98a_Production) {
					if (((!(_1abaa3210_IsBuiltin(_5821_m.get()._field_Func.ptr()))) && _1a9cae3da_isStdPackage(_5821_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("debug", 5)))) {
						_1a976140e_setCurrentStmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1bcb02d53:;
	};
	static__1a9d29840_optimize(_5535_d.get()._field_Model);
}



inline void _1a97710cd_optimizeVar(_1a9749e20_scopeOptimizer* _self_, jule::Ptr<_1abc73ee6_Var> _7034_v) {
	if ((_7034_v.get()._field_Value != nullptr)) {
		static__1a9d29840_optimize(_7034_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1a9790817_optimizeConditional(_1a9749e20_scopeOptimizer* _self_, jule::Ptr<_1ababe847_Conditional> _7642_c) {
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1bcb06164:;
		if (it != expr.end()) {
			jule::Ptr<_1ababe1d7_If> _7721_elif = *it;
			{
				static__1a9d29840_optimize(_7721_elif.get()._field_Expr);
				_1a98d93cd_optimizeChild(&(*_self_), _7721_elif.get()._field_Scope);
			}
			_iter_next_1bcb06164:;
			++it;
			goto _iter_begin_1bcb06164;
		}
		_iter_end_1bcb06164:;
	};
	if ((_7642_c.get()._field_Default != nullptr)) {
		_1a98d93cd_optimizeChild(&(*_self_), _7642_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1a98ce5d2_Cond))) {
		return;;
	};
	jule::Bool _8917_constCase = false;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1bcb07ee0:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_1ababe1d7_If> _9221_elif = *it;
			{
				if ((!(_1a9cca26e_isConstantValidConditionalCase(_9221_elif)))) {
					goto _iter_next_1bcb07ee0;
				};
				_8917_constCase=true;
				_7642_c.get()._field_Elifs=_7642_c.get()._field_Elifs.slice(0LL,_9214_i);
				_7642_c.get()._field_Default=jule::new_ptr<_1ababe4c3_Else>(_1ababe4c3_Else{._field_Scope=_9221_elif.get()._field_Scope});
				goto _iter_end_1bcb07ee0;
			}
			_iter_next_1bcb07ee0:;
			++it;
			_9214_i++;
			goto _iter_begin_1bcb07ee0;
		}
		_iter_end_1bcb07ee0:;
	};
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ababe1d7_If>* _10917_i = (&(_7642_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1ababe1d7_If>* _11013_end = (&(_7642_c.get()._field_Elifs[(_7642_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1a9cee12d_isUnreachableConditionalCase((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1bcb0b224:;
	}
	_iter_end_1bcb0b224:;;
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_constCase))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1bcb0c885:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_1ababe1d7_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1bcb0c885:;
			++it;
			_12913_j++;
			goto _iter_begin_1bcb0c885;
		}
		_iter_end_1bcb0c885:;
	};
	if ((_12817_only != -1LL)) {
		_1a976140e_setCurrentStmt(&(*_self_), jule::Any(_7642_c.get()._field_Elifs[_12817_only].get()._field_Scope, &__jule_any_type23));
	};
}



inline void _1a9795553_buildDefaultConstatTrueCase(_1a9749e20_scopeOptimizer* _self_, jule::Ptr<_1abac3582_Case> _14550_case, jule::I64& _14568_i, jule::Ptr<_1abac2a37_Match>& _14581_m) {
	_14550_case.get()._field_Exprs=nullptr;
	jule::I64 _14713_start = _14568_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14550_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1bcb1035a;
			};
			jule::Any &_15322_stmt = _14550_case.get()._field_Scope.get()._field_Stmts[(_14550_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type == &__jule_any_type51) {
					_case_begin_1bcb109ba:;
					{
						(_14568_i)++;
						if ((_14568_i >= _14581_m.get()._field_Cases.len())) {
							_15322_stmt=jule::Any(_14581_m.get()._field_Default.get()._field_Scope, &__jule_any_type23);
							goto _iter_end_1bcb1035a;
						};
						_14550_case=_14581_m.get()._field_Cases[_14568_i];
						_15322_stmt=jule::Any(_14550_case.get()._field_Scope, &__jule_any_type23);
					}
				}
				else {
					_case_begin_1bcb11e0b:;
					{
						goto _iter_end_1bcb1035a;
					}
				}
				_match_end_1bcb11d1d:;
			};
		}
	_iter_next_1bcb1035a:;
	}
	_iter_end_1bcb1035a:;;
	_14581_m.get()._field_Default=_14581_m.get()._field_Cases[_14713_start];
	_14581_m.get()._field_Cases=_14581_m.get()._field_Cases.slice(0LL,_14713_start);
}



inline void _1a97969e9_optimizeMatch(_1a9749e20_scopeOptimizer* _self_, jule::Ptr<_1abac2a37_Match> _17136_m) {
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1bcb13eda:;
		if (it != expr.end()) {
			jule::Ptr<_1abac3582_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1bcb14837:;
					if (it != expr.end()) {
						jule::Ptr<_1abcbba55_Data> _17325_expr = *it;
						{
							static__1a9d29840_optimize(_17325_expr.get()._field_Model);
						}
						_iter_next_1bcb14837:;
						++it;
						goto _iter_begin_1bcb14837;
					}
					_iter_end_1bcb14837:;
				};
				_1a98d93cd_optimizeChild(&(*_self_), _17221_case.get()._field_Scope);
			}
			_iter_next_1bcb13eda:;
			++it;
			goto _iter_begin_1bcb13eda;
		}
		_iter_end_1bcb13eda:;
	};
	if ((_17136_m.get()._field_Default != nullptr)) {
		_1a98d93cd_optimizeChild(&(*_self_), _17136_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1a98ce5d2_Cond))) {
		return;;
	};
	jule::Bool _18617_constCase = false;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1bcb164c6:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_1abac3582_Case> _18925_case = *it;
			{
				if ((!(_1a9ce4ba1_isConstantValidMatchCase(_18925_case)))) {
					goto _iter_next_1bcb164c6;
				};
				_18617_constCase=true;
				_1a9795553_buildDefaultConstatTrueCase(&(*_self_), _18925_case,_18918_i,_17136_m);
				goto _iter_end_1bcb164c6;
			}
			_iter_next_1bcb164c6:;
			++it;
			_18918_i++;
			goto _iter_begin_1bcb164c6;
		}
		_iter_end_1bcb164c6:;
	};
	if ((_17136_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1abac3582_Case>* _20317_i = (&(_17136_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1abac3582_Case>* _20413_end = (&(_17136_m.get()._field_Cases[(_17136_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1a9d064ba_isUnreachableMatchCase((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1bcb191dd:;
	}
	_iter_end_1bcb191dd:;;
	if ((!(_18617_constCase))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1bcb1a299:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_1abac3582_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1bcb1a299:;
			++it;
			_21913_j++;
			goto _iter_begin_1bcb1a299;
		}
		_iter_end_1bcb1a299:;
	};
	if ((_21817_only != -1LL)) {
		_1a976140e_setCurrentStmt(&(*_self_), jule::Any(_17136_m.get()._field_Cases[_21817_only].get()._field_Scope, &__jule_any_type23));
	};
}



inline void _1a9797a72_optimizeRangeIter(_1a9749e20_scopeOptimizer* _self_, jule::Ptr<_1abac098b_RangeIter> _23540_it) {
	static__1a9d29840_optimize(_23540_it.get()._field_Expr.get()._field_Model);
	_1a98d93cd_optimizeChild(&(*_self_), _23540_it.get()._field_Scope);
}



inline void _1a9798028_optimizeWhileIter(_1a9749e20_scopeOptimizer* _self_, jule::Ptr<_1abac00a6_WhileIter> _24040_it) {
	static__1a9d29840_optimize(_24040_it.get()._field_Expr);
	_1a98d3b36_optimizeStmt(&(*_self_), _24040_it.get()._field_Next);
	_1a98d93cd_optimizeChild(&(*_self_), _24040_it.get()._field_Scope);
}



inline jule::Bool _1a97c829a_substr(_1a9749e20_scopeOptimizer* _self_, jule::Ptr<_1abac2141_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1bcb1e413:;
			{
				jule::Ptr<_1aba947a6_SlicingExprModel> _24921_sem = _24629_a.get()._field_R.get()._field_Model.cast_ptr<_1aba947a6_SlicingExprModel>(&__jule_any_type100);;
				if ((_24921_sem.get()._field_Expr == _24629_a.get()._field_L.get()._field_Model)) {
					_1a976140e_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1a9cd418a_MutSlicingExprModel>(_1a9cd418a_MutSlicingExprModel{._field_Token=_24921_sem.get()._field_Token, ._field_Expr=_24921_sem.get()._field_Expr, ._field_Left=_24921_sem.get()._field_Left, ._field_Right=_24921_sem.get()._field_Right}), &__jule_any_type128));
					return true;;
				};
			}
		}
		_match_end_1bcb1e3ad:;
	};
	return false;;
}



inline jule::Bool _1a97d1083_strInsert(_1a9749e20_scopeOptimizer* _self_, jule::Ptr<_1abac2141_Assign> _26332_a) {
	{
		auto &_match_expr{ _26332_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bcb21833:;
			{
				jule::Ptr<_1aba90de0_BinopExprModel> _26621_m = _26332_a.get()._field_R.get()._field_Model.cast_ptr<_1aba90de0_BinopExprModel>(&__jule_any_type119);;
				if ((_26621_m.get()._field_Right.get()._field_Model == _26332_a.get()._field_L.get()._field_Model)) {
					_1a976140e_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1a9e8e1e1_StrInsertBeginExprModel>(_1a9e8e1e1_StrInsertBeginExprModel{._field_Dest=_26332_a.get()._field_L.get()._field_Model, ._field_Expr=_26621_m.get()._field_Left.get()._field_Model}), &__jule_any_type129));
					return true;;
				};
			}
		}
		_match_end_1bcb2157a:;
	};
	return false;;
}



inline jule::Bool _1a97e764e_strAssign(_1a9749e20_scopeOptimizer* _self_, jule::Ptr<_1abac2141_Assign> _27832_a) {
	if ((_27832_a.get()._field_Op.get()._field_Kind != jule::Str("=", 1))) {
		return false;;
	};
	jule::Ptr<_1abcec734_Prim> _28213_lp = _1abce9d6e_Prim(_27832_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1abd00968_IsStr(_28213_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_1a97c829a_substr(&(*_self_), _27832_a) || _1a97d1083_strInsert(&(*_self_), _27832_a)) {
			_case_begin_1bcb2520a:;
			{
				return true;;
			}
		}
		_match_end_1bcb25172:;
	};
	return false;;
}



inline void _1a9871e04_optimizeAssign(_1a9749e20_scopeOptimizer* _self_, jule::Ptr<_1abac2141_Assign> _29437_assign) {
	if ((_1a976ca14_Copy && _1a97e764e_strAssign(&(*_self_), _29437_assign))) {
		return;;
	};
	static__1a9d29840_optimize(_29437_assign.get()._field_L.get()._field_Model);
	static__1a9d29840_optimize(_29437_assign.get()._field_R.get()._field_Model);
	{
		auto &_match_expr{ _29437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1bcb2710d:;
			{
				if ((_1a9873a4e_Math && (_1abceb2c1_Struct(_29437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_29437_assign.get()._field_Op.get()._field_Kind=_29437_assign.get()._field_Op.get()._field_Kind.slice(0LL,(_29437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _30725_model = jule::Any(jule::new_ptr<_1aba90de0_BinopExprModel>(_1aba90de0_BinopExprModel{._field_Left=_29437_assign.get()._field_L, ._field_Right=_29437_assign.get()._field_R, ._field_Op=_29437_assign.get()._field_Op}), &__jule_any_type119);;
					static__1a9d29840_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type == &__jule_any_type119) {
							_case_begin_1bcb29583:;
							{
								_29437_assign.get()._field_R=jule::new_ptr<_1aba90928_OperandExprModel>((*(_29437_assign.get()._field_R)));
								_29437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_29437_assign.get()._field_R.get()._field_Model=_30725_model;
								return;;
							}
						}
						_match_end_1bcb29330:;
					};
					_29437_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1bcb26ea9:;
	};
	if (_1a97c6100_Append) {
		{
			auto &_match_expr{ _29437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type27) {
				_case_begin_1bcb3106d:;
				{
					jule::Ptr<_1aba98c50_BuiltinAppendCallExprModel> _32825_m = _29437_assign.get()._field_R.get()._field_Model.cast_ptr<_1aba98c50_BuiltinAppendCallExprModel>(&__jule_any_type27);;
					{
						auto &_match_expr{ _32825_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type85) {
							_case_begin_1bcb32107:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_Dest };
									
									if (_match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type73) {
										_case_begin_1bcb328aa:;
										{
											_1a976140e_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1a9791384_PushToSliceExprModel>(_1a9791384_PushToSliceExprModel{._field_Dest=_32825_m.get()._field_Dest, ._field_Elems=_32825_m.get()._field_Elements.cast_ptr<_1aba93112_SliceExprModel>(&__jule_any_type85)}), &__jule_any_type130));
										}
									}
									_match_end_1bcb32855:;
								};
							}
						}
						_match_end_1bcb31de8:;
					};
				}
			}
			_match_end_1bcb27c02:;
		};
	};
}



inline void _1a98729e8_optimizeMultiAssign(_1a9749e20_scopeOptimizer* _self_, jule::Ptr<_1abac24e8_MultiAssign> _34442_assign) {
	{
		auto &expr = _34442_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1bcb3147a:;
		if (it != expr.end()) {
			jule::Ptr<_1abcbba55_Data> _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1a9d29840_optimize(_34521_l.get()._field_Model);
				};
			}
			_iter_next_1bcb3147a:;
			++it;
			goto _iter_begin_1bcb3147a;
		}
		_iter_end_1bcb3147a:;
	};
	static__1a9d29840_optimize(_34442_assign.get()._field_R);
}



inline void _1a98d0c21_optimizeRet(_1a9749e20_scopeOptimizer* _self_, jule::Ptr<_1abac3eab_RetSt> _35334_r) {
	static__1a9d29840_optimize(_35334_r.get()._field_Expr);
}



inline void _1a98d3b36_optimizeStmt(_1a9749e20_scopeOptimizer* _self_, jule::Any _35735_stmt) {
	{
		auto &_match_expr{ _35735_stmt };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bcb34d85:;
			{
				_1a98d93cd_optimizeChild(&(*_self_), _35735_stmt.cast_ptr<_1ababdcdb_Scope>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bcb34e0c:;
			{
				_1a9763a2c_optimizeData(&(*_self_), _35735_stmt.cast_ptr<_1abcbba55_Data>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bcb34e73:;
			{
				_1a97710cd_optimizeVar(&(*_self_), _35735_stmt.cast_ptr<_1abc73ee6_Var>(&__jule_any_type10));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1bcb34ed9:;
			{
				_1a9790817_optimizeConditional(&(*_self_), _35735_stmt.cast_ptr<_1ababe847_Conditional>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bcb35050:;
			{
				_1a9797a72_optimizeRangeIter(&(*_self_), _35735_stmt.cast_ptr<_1abac098b_RangeIter>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bcb350c7:;
			{
				_1a9798028_optimizeWhileIter(&(*_self_), _35735_stmt.cast_ptr<_1abac00a6_WhileIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bcb3514e:;
			{
				_1a98d93cd_optimizeChild(&(*_self_), _35735_stmt.cast_ptr<_1ababeb33_InfIter>(&__jule_any_type38).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bcb351c6:;
			{
				_1a9871e04_optimizeAssign(&(*_self_), _35735_stmt.cast_ptr<_1abac2141_Assign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1bcb3524d:;
			{
				_1a98729e8_optimizeMultiAssign(&(*_self_), _35735_stmt.cast_ptr<_1abac24e8_MultiAssign>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1bcb352c5:;
			{
				_1a97969e9_optimizeMatch(&(*_self_), _35735_stmt.cast_ptr<_1abac2a37_Match>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1bcb3534c:;
			{
				_1a98d0c21_optimizeRet(&(*_self_), _35735_stmt.cast_ptr<_1abac3eab_RetSt>(&__jule_any_type53));
			}
		}
		_match_end_1bcb34bba:;
	};
}



inline void _1a98d93cd_optimizeChild(_1a9749e20_scopeOptimizer* _self_, jule::Ptr<_1ababdcdb_Scope> _38436_child) {
	jule::Ptr<_1a9749e20_scopeOptimizer> _38517_so = static__1a9748bee_new(_38436_child);;
	_1a9ca9825_optimize(_38517_so.ptr());
}



inline void _1a9ca9825_optimize(_1a9749e20_scopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1bcb3b4eb:;
		if (it != expr.end()) {
			jule::I64 _39114_i = it - expr.begin();
			jule::Any _39121_stmt = *it;
			{
				(*_self_)._field_i=_39114_i;
				_1a98d3b36_optimizeStmt(&(*_self_), _39121_stmt);
			}
			_iter_next_1bcb3b4eb:;
			++it;
			_39114_i++;
			goto _iter_begin_1bcb3b4eb;
		}
		_iter_end_1bcb3b4eb:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a9749e20_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1a9d29840_optimize(jule::Any& _5829_model) {
	if (_1abb87e1b_exprEnabled) {
		jule::Ptr<_1a98cd3e4_exprOptimizer> _6121_exop = jule::new_ptr<_1a98cd3e4_exprOptimizer>(_1a98cd3e4_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5829_model))))});;
		_1a9e463b8_do(_6121_exop.ptr());
	};
}



inline jule::Bool _1a9d30ec8_strCond(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba90de0_BinopExprModel> _6826_m) {
	jule::Ptr<_1abcec734_Prim> _6913_lp = _1abce9d6e_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_1abd00968_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((_6826_m.get()._field_Op.get()._field_Kind != jule::Str("==", 2)) && (_6826_m.get()._field_Op.get()._field_Kind != jule::Str("!=", 2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1bcb45071:;
			{
				({
					jule::Ptr<_1aba90928_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_1aba90928_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_1bcb4501b:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1bcb4479b:;
			{
				goto _match_end_1bcb45d0d;
			}
		}
		else {
			_case_begin_1bcb46193:;
			{
				return true;;
			}
		}
		_match_end_1bcb45d0d:;
	};
	_julec_label_opt:;
	jule::Ptr<_1aba86b94_Const> _8813_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_1aba86b94_Const>(&__jule_any_type49);;
	if ((!(_1aba87c2d_ReadStr(_8813_c.ptr()).empty()))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1bcb4787b:;
			{
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1aba96753_CommonSubIdentExprModel>(_1aba96753_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type75);
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1bcb478e2:;
			{
				jule::Ptr<_1a97237bc_Token> _10021_op = _6826_m.get()._field_Op;;
				_10021_op.get()._field_Kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1aba91297_UnaryExprModel>(_1aba91297_UnaryExprModel{._field_Expr=jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Model=jule::Any(jule::new_ptr<_1aba96753_CommonSubIdentExprModel>(_1aba96753_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type75), }), ._field_Op=_10021_op}), &__jule_any_type76);
			}
		}
		_match_end_1bcb4711c:;
	};
	return true;;
}



inline void _1a9d34c9b_binary(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba90de0_BinopExprModel> _11625_m) {
	static__1a9d29840_optimize(_11625_m.get()._field_Left.get()._field_Model);
	static__1a9d29840_optimize(_11625_m.get()._field_Right.get()._field_Model);
	{
		auto &_match_expr{ _11625_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1bcb48e54:;
			{
				goto _match_end_1bcb4b3a7;
			}
		}
		else {
			_case_begin_1bcb4b50b:;
			{
				return;;
			}
		}
		_match_end_1bcb4b3a7:;
	};
	if ((_1a98ce5d2_Cond && _1a9d30ec8_strCond(&(*_self_), _11625_m))) {
		return;;
	};
	if ((!(_1a9873a4e_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _11625_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1bcb4c551:;
			{
				jule::Bool _13618_ok = false;;
				jule::U64 _13622_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a9e6ab29_checkForBitShiftOpt(_11625_m.get()._field_Left,_11625_m.get()._field_Right);
					_13618_ok = __jule_assign_result.__jule_result_arg0;
					_13622_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_13618_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1aba86b94_Const> _13925_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_1aba86b94_Const>(&__jule_any_type49);;
					_1aba8846a_SetU64(_13925_c.ptr(), _13622_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1bcb4c5b7:;
			{
				jule::Bool _14418_ok = false;;
				jule::U64 _14422_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a9e6ab29_checkForBitShiftOpt(_11625_m.get()._field_Left,_11625_m.get()._field_Right);
					_14418_ok = __jule_assign_result.__jule_result_arg0;
					_14422_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_14418_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1aba86b94_Const> _14725_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_1aba86b94_Const>(&__jule_any_type49);;
					_1aba8846a_SetU64(_14725_c.ptr(), _14422_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1bcb4c62d:;
			{
				jule::Ptr<_1aba86b94_Const> _15221_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_1aba86b94_Const>(&__jule_any_type49);;
				jule::F64 _15317_d = _1aba88206_AsF64(_15221_c.ptr());;
				if ((_15317_d == 2LL)) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1aba88338_SetI64(_15221_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1bcb4c364:;
	};
	jule::Any _15917_model = jule::Any(jule::new_ptr<_1a9750e7b_UnsafeBinopExprModel>(_1a9750e7b_UnsafeBinopExprModel{._field_Node=_11625_m}), &__jule_any_type131);;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15917_model))))));
}



inline void _1a9d4069c_unary(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba91297_UnaryExprModel> _16324_m) {
	static__1a9d29840_optimize(_16324_m.get()._field_Expr.get()._field_Model);
	if ((_1a98ce33a_Ptr && (_16324_m.get()._field_Op.get()._field_Kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16324_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type76) {
				_case_begin_1bcb5458b:;
				{
					jule::Ptr<_1aba91297_UnaryExprModel> _16825_um = _16324_m.get()._field_Expr.get()._field_Model.cast_ptr<_1aba91297_UnaryExprModel>(&__jule_any_type76);;
					if ((_16825_um.get()._field_Op.get()._field_Kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16825_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1bcb54536:;
		};
	};
}



inline void _1a9d459c1_structureLit(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba91a4a_StructLitExprModel> _17631_m) {
	{
		auto &expr = _17631_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1bcb5615e:;
		if (it != expr.end()) {
			jule::Ptr<_1aba91693_StructArgExprModel> _17721_arg = *it;
			{
				static__1a9d29840_optimize(_17721_arg.get()._field_Expr);
			}
			_iter_next_1bcb5615e:;
			++it;
			goto _iter_begin_1bcb5615e;
		}
		_iter_end_1bcb5615e:;
	};
}



inline void _1a9ce1681_allocStructure(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba91d58_AllocStructLitExprModel> _18233_m) {
	_1a9d459c1_structureLit(&(*_self_), _18233_m.get()._field_Lit);
}



inline void _1a9d55c9a_casting(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba923a8_CastingExprModel> _18626_m) {
	static__1a9d29840_optimize(_18626_m.get()._field_Expr);
}



inline void _1a9d5ccd5_args(_1a98cd3e4_exprOptimizer* _self_, jule::Slice<jule::Any>& _19024_args) {
	{
		auto &expr = _19024_args;
		auto it = expr.begin();
		_iter_begin_1bcb57b55:;
		if (it != expr.end()) {
			jule::I64 _19114_i = it - expr.begin();
			jule::Any _19121_arg = *it;
			{
				static__1a9d29840_optimize(_19121_arg);
				_19024_args[_19114_i]=_19121_arg;
			}
			_iter_next_1bcb57b55:;
			++it;
			_19114_i++;
			goto _iter_begin_1bcb57b55;
		}
		_iter_end_1bcb57b55:;
	};
}



inline void _1a9d6c4dc_scope(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1ababdcdb_Scope>& _19725_s) {
	jule::Ptr<_1a9749e20_scopeOptimizer> _19817_scopt = static__1a9748bee_new(_19725_s);;
	_1a9ca9825_optimize(_19817_scopt.ptr());
}



inline void _1a9d73b97_funcCall(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba92c5a_FnCallExprModel> _20227_m) {
	static__1a9d29840_optimize(_20227_m.get()._field_Expr);
	_1a9d5ccd5_args(&(*_self_), _20227_m.get()._field_Args);
	if ((_20227_m.get()._field_Except != nullptr)) {
		_1a9d6c4dc_scope(&(*_self_), _20227_m.get()._field_Except);
	};
}



inline void _1a9d7b232_slice(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba93112_SliceExprModel> _21024_m) {
	_1a9d5ccd5_args(&(*_self_), _21024_m.get()._field_Elems);
}



inline void _1a9d99409_array(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba95e06_ArrayExprModel> _21424_m) {
	if (((_21424_m.get()._field_Elems.len() == 2LL) && (_21424_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _21621_elem = _21424_m.get()._field_Elems[0LL];;
		static__1a9d29840_optimize(_21621_elem);
		_21424_m.get()._field_Elems[0LL]=_21621_elem;
	};
	_1a9d5ccd5_args(&(*_self_), _21424_m.get()._field_Elems);
}



inline void _1a9dd2de3_indexing(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba93585_IndexingExprModel> _22327_m) {
	static__1a9d29840_optimize(_22327_m.get()._field_Expr.get()._field_Model);
	static__1a9d29840_optimize(_22327_m.get()._field_Index.get()._field_Model);
	if ((!(_1a98a5454_Access))) {
		return;;
	};
	jule::Bool _22913_array = (_1abceaa84_Arr(_22327_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_22913_array && _1abcbc418_IsConst(_22327_m.get()._field_Index.ptr()))) {
		jule::Any _23221_model = jule::Any(jule::new_ptr<_1a97dda1e_UnsafeIndexingExprModel>(_1a97dda1e_UnsafeIndexingExprModel{._field_Node=_22327_m}), &__jule_any_type132);;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_23221_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22327_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bcb61576:;
			{
				jule::Ptr<_1abc73ee6_Var> _23817_i = _22327_m.get()._field_Index.get()._field_Model.cast_ptr<_1abc73ee6_Var>(&__jule_any_type10);;
				if ((_23817_i.get()._field_Mutable || (_23817_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1bcb61521;
				};
				{
					auto &_match_expr{ _22327_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1bcb62d4c:;
						{
							jule::Ptr<_1abc73ee6_Var> _24421_r = _22327_m.get()._field_Expr.get()._field_Model.cast_ptr<_1abc73ee6_Var>(&__jule_any_type10);;
							if ((_23817_i.get()._field_IterRelation.get()._field_Range == _24421_r)) {
								jule::Any _24729_model = jule::Any(jule::new_ptr<_1a97dda1e_UnsafeIndexingExprModel>(_1a97dda1e_UnsafeIndexingExprModel{._field_Node=_22327_m}), &__jule_any_type132);;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24729_model))))));
							};
						}
					}
					_match_end_1bcb62ce7:;
				};
			}
		}
		_match_end_1bcb61521:;
	};
}



inline void _1a9dd6831_anonFunc(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba9393c_AnonFnExprModel> _25427_m) {
	_1a9d6c4dc_scope(&(*_self_), _25427_m.get()._field_Func.get()._field_Scope);
}



inline void _1a9dde3d8_mapExpr(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba94267_MapExprModel> _25826_m) {
	{
		auto &expr = _25826_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1bcb6546a:;
		if (it != expr.end()) {
			jule::Ptr<_1aba93ce4_KeyValPairExprModel> _25921_pair = *it;
			{
				static__1a9d29840_optimize(_25921_pair.get()._field_Key);
				static__1a9d29840_optimize(_25921_pair.get()._field_Val);
			}
			_iter_next_1bcb6546a:;
			++it;
			goto _iter_begin_1bcb6546a;
		}
		_iter_end_1bcb6546a:;
	};
}



inline void _1a9e00dab_slicing(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba947a6_SlicingExprModel> _26526_m) {
	static__1a9d29840_optimize(_26526_m.get()._field_Expr);
	static__1a9d29840_optimize(_26526_m.get()._field_Left);
	if ((_26526_m.get()._field_Right != nullptr)) {
		static__1a9d29840_optimize(_26526_m.get()._field_Right);
	};
}



inline void _1a9e05ce5_traitSub(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba94ce5_TraitSubIdentExprModel> _27327_m) {
	static__1a9d29840_optimize(_27327_m.get()._field_Expr);
}



inline void _1a9e76937_structureSub(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba95697_StructSubIdentExprModel> _27731_m) {
	static__1a9d29840_optimize(_27731_m.get()._field_Expr.get()._field_Model);
}



inline void _1a9e92ec5_commonSub(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba96753_CommonSubIdentExprModel> _28128_m) {
	static__1a9d29840_optimize(_28128_m.get()._field_Expr);
}



inline void _1a9758703_tuple(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba96a50_TupleExprModel> _28524_m) {
	{
		auto &expr = _28524_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1bcb68825:;
		if (it != expr.end()) {
			jule::Ptr<_1abcbba55_Data> _28621_d = *it;
			{
				static__1a9d29840_optimize(_28621_d.get()._field_Model);
			}
			_iter_next_1bcb68825:;
			++it;
			goto _iter_begin_1bcb68825;
		}
		_iter_end_1bcb68825:;
	};
}



inline void _1a975be98_newCall(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba97a1d_BuiltinNewCallExprModel> _29126_m) {
	if ((_29126_m.get()._field_Init != nullptr)) {
		static__1a9d29840_optimize(_29126_m.get()._field_Init);
	};
}



inline void _1a975d395_outCall(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba96e29_BuiltinOutCallExprModel> _29726_m) {
	static__1a9d29840_optimize(_29726_m.get()._field_Expr);
}



inline void _1a975e41d_outlnCall(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba97314_BuiltinOutlnCallExprModel> _30128_m) {
	static__1a9d29840_optimize(_30128_m.get()._field_Expr);
}



inline void _1a9760496_panicCall(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba97e08_BuiltinPanicCallExprModel> _30528_m) {
	static__1a9d29840_optimize(_30528_m.get()._field_Expr);
}



inline void _1a976da9d_assertCall(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba983ae_BuiltinAssertCallExprModel> _30929_m) {
	static__1a9d29840_optimize(_30929_m.get()._field_Expr);
}



inline void _1a9772475_errorCall(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba9a290_BuiltinErrorCallExprModel> _31328_m) {
	static__1a9d29840_optimize(_31328_m.get()._field_Err.get()._field_Model);
}



inline void _1a97920dd_makeCall(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba98865_BuiltinMakeCallExprModel> _31727_m) {
	if ((_31727_m.get()._field_Len != nullptr)) {
		static__1a9d29840_optimize(_31727_m.get()._field_Len);
	};
	if ((_31727_m.get()._field_Cap != nullptr)) {
		static__1a9d29840_optimize(_31727_m.get()._field_Cap);
	};
}



inline void _1a9794992_appendCall(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba98c50_BuiltinAppendCallExprModel> _32629_m) {
	static__1a9d29840_optimize(_32629_m.get()._field_Dest);
	static__1a9d29840_optimize(_32629_m.get()._field_Elements);
}



inline void _1a9795993_lenCall(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba9906e_BuiltinLenCallExprModel> _33126_m) {
	static__1a9d29840_optimize(_33126_m.get()._field_Expr.get()._field_Model);
}



inline void _1a9873895_capCall(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba9938d_BuiltinCapCallExprModel> _33526_m) {
	static__1a9d29840_optimize(_33526_m.get()._field_Expr.get()._field_Model);
}



inline void _1a989cb99_cloneCall(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba97633_BuiltinCloneCallExprModel> _33928_m) {
	static__1a9d29840_optimize(_33928_m.get()._field_Expr);
}



inline void _1a98ed689_deleteCall(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba99a42_BuiltinDeleteCallExprModel> _34329_m) {
	static__1a9d29840_optimize(_34329_m.get()._field_Dest.get()._field_Model);
	if ((_34329_m.get()._field_Key != nullptr)) {
		static__1a9d29840_optimize(_34329_m.get()._field_Key.get()._field_Model);
	};
}



inline void _1a9d24b04_sizeof(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba9a58c_SizeofExprModel> _35025_m) {
	static__1a9d29840_optimize(_35025_m.get()._field_Expr);
}



inline void _1a9d75b44_alignof(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba9a878_AlignofExprModel> _35426_m) {
	static__1a9d29840_optimize(_35426_m.get()._field_Expr);
}



inline void _1a9e2a3ad_integratedToStr(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba9ae72_IntegratedToStrExprModel> _35834_m) {
	static__1a9d29840_optimize(_35834_m.get()._field_Expr);
}



inline void _1a9e42e20_free(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba9b626_FreeExprModel> _36223_m) {
	static__1a9d29840_optimize(_36223_m.get()._field_Expr);
}



inline void _1a9e44042_backendEmit(_1a98cd3e4_exprOptimizer* _self_, jule::Ptr<_1aba9b33a_BackendEmitExprModel> _36630_m) {
	_1a9d5ccd5_args(&(*_self_), _36630_m.get()._field_Exprs);
}



inline void _1a9e463b8_do(_1a98cd3e4_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bcb72db2:;
			{
				_1a9d34c9b_binary(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba90de0_BinopExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bcb7319d:;
			{
				_1a9d4069c_unary(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba91297_UnaryExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1bcb73214:;
			{
				_1a9d459c1_structureLit(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba91a4a_StructLitExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1bcb7327a:;
			{
				_1a9ce1681_allocStructure(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba91d58_AllocStructLitExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1bcb73302:;
			{
				_1a9d55c9a_casting(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba923a8_CastingExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bcb73379:;
			{
				_1a9d73b97_funcCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba92c5a_FnCallExprModel>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1bcb73401:;
			{
				_1a9d7b232_slice(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba93112_SliceExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1bcb73478:;
			{
				_1a9d99409_array(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba95e06_ArrayExprModel>(&__jule_any_type93));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bcb73500:;
			{
				_1a9dd2de3_indexing(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba93585_IndexingExprModel>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1bcb73577:;
			{
				_1a9dd6831_anonFunc(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba9393c_AnonFnExprModel>(&__jule_any_type107));
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1bcb735ee:;
			{
				_1a9dde3d8_mapExpr(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba94267_MapExprModel>(&__jule_any_type106));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1bcb73676:;
			{
				_1a9e00dab_slicing(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba947a6_SlicingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1bcb736ed:;
			{
				_1a9e05ce5_traitSub(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba94ce5_TraitSubIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bcb73775:;
			{
				_1a9e76937_structureSub(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba95697_StructSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1bcb737ec:;
			{
				_1a9e92ec5_commonSub(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba96753_CommonSubIdentExprModel>(&__jule_any_type75));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1bcb73874:;
			{
				_1a9758703_tuple(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba96a50_TupleExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1bcb738eb:;
			{
				_1a975d395_outCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba96e29_BuiltinOutCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bcb73973:;
			{
				_1a975e41d_outlnCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba97314_BuiltinOutlnCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1bcb739ea:;
			{
				_1a975be98_newCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba97a1d_BuiltinNewCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1bcb73a72:;
			{
				_1a9760496_panicCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba97e08_BuiltinPanicCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1bcb73ae9:;
			{
				_1a976da9d_assertCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba983ae_BuiltinAssertCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bcb73b71:;
			{
				_1a9772475_errorCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba9a290_BuiltinErrorCallExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1bcb73be8:;
			{
				_1a97920dd_makeCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba98865_BuiltinMakeCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bcb73c70:;
			{
				_1a9794992_appendCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba98c50_BuiltinAppendCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1bcb73ce7:;
			{
				_1a9795993_lenCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba9906e_BuiltinLenCallExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1bcb73d6e:;
			{
				_1a9873895_capCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba9938d_BuiltinCapCallExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1bcb73de6:;
			{
				_1a989cb99_cloneCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba97633_BuiltinCloneCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bcb73e6d:;
			{
				_1a98ed689_deleteCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba99a42_BuiltinDeleteCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1bcb73ee5:;
			{
				_1a9d24b04_sizeof(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba9a58c_SizeofExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1bcb7406c:;
			{
				_1a9d75b44_alignof(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba9a878_AlignofExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1bcb740e4:;
			{
				_1a9e2a3ad_integratedToStr(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba9ae72_IntegratedToStrExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bcb7416b:;
			{
				_1a9e42e20_free(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba9b626_FreeExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bcb741e3:;
			{
				_1a9e44042_backendEmit(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1aba9b33a_BackendEmitExprModel>(&__jule_any_type26));
			}
		}
		_match_end_1bcb72d5c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a98cd3e4_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abbab318_Optimizer> static__1abb87a64_New(jule::Ptr<_1ac317732_IR>& _2524_ir) {
	return jule::new_ptr<_1abbab318_Optimizer>(_1abbab318_Optimizer{._field_ir=_2524_ir});;
}



inline void _1abb97348_optimizeGlobal(_1abbab318_Optimizer* _self_, jule::Ptr<_1abc73ee6_Var>& _3138_v) {
	if ((!(_3138_v.get()._field_CppLinked))) {
		static__1a9d29840_optimize(_3138_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1abba054e_optimizeFunction(_1abbab318_Optimizer* _self_, jule::Ptr<_1aba9e1c8_Fn>& _3740_func) {
	if (_3740_func.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _3740_func.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bcb8b46e:;
		if (it != expr.end()) {
			jule::Ptr<_1abaa1d79_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1a9749e20_scopeOptimizer> _4221_so = static__1a9748bee_new(_4121_ins.get()._field_Scope);;
				_1a9ca9825_optimize(_4221_so.ptr());
			}
			_iter_next_1bcb8b46e:;
			++it;
			goto _iter_begin_1bcb8b46e;
		}
		_iter_end_1bcb8b46e:;
	};
}



inline void _1abbb0295_optimizeStruct(_1abbab318_Optimizer* _self_, jule::Ptr<_1ab08a1a9_Struct>& _4738_s) {
	if (_4738_s.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _4738_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bcb8c926:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a583_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1bcb8d251:;
					if (it != expr.end()) {
						jule::Ptr<_1ab08a396_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__1a9d29840_optimize(_5225_f.get()._field_Default.get()._field_Model);
							};
						}
						_iter_next_1bcb8d251:;
						++it;
						goto _iter_begin_1bcb8d251;
					}
					_iter_end_1bcb8d251:;
				};
				{
					auto &expr = _5121_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1bcb8e494:;
					if (it != expr.end()) {
						jule::Ptr<_1aba9e1c8_Fn> _5725_m = *it;
						{
							_1abba054e_optimizeFunction(&(*_self_), _5725_m);
						}
						_iter_next_1bcb8e494:;
						++it;
						goto _iter_begin_1bcb8e494;
					}
					_iter_end_1bcb8e494:;
				};
			}
			_iter_next_1bcb8c926:;
			++it;
			goto _iter_begin_1bcb8c926;
		}
		_iter_end_1bcb8c926:;
	};
}



inline void _1abbb19d3_optimizeGlobals(_1abbab318_Optimizer* _self_, jule::Ptr<_1abc50d08_Package>& _6339_p) {
	{
		auto &expr = _6339_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bcb8e692:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1bcb903c9:;
					if (it != expr.end()) {
						jule::Ptr<_1abc73ee6_Var> _6525_v = *it;
						{
							_1abb97348_optimizeGlobal(&(*_self_), _6525_v);
						}
						_iter_next_1bcb903c9:;
						++it;
						goto _iter_begin_1bcb903c9;
					}
					_iter_end_1bcb903c9:;
				};
			}
			_iter_next_1bcb8e692:;
			++it;
			goto _iter_begin_1bcb8e692;
		}
		_iter_end_1bcb8e692:;
	};
}



inline void _1abb8a89c_optimizeFunctions(_1abbab318_Optimizer* _self_, jule::Ptr<_1abc50d08_Package>& _7141_p) {
	{
		auto &expr = _7141_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bcb9093a:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1bcb916c7:;
					if (it != expr.end()) {
						jule::Ptr<_1aba9e1c8_Fn> _7325_func = *it;
						{
							_1abba054e_optimizeFunction(&(*_self_), _7325_func);
						}
						_iter_next_1bcb916c7:;
						++it;
						goto _iter_begin_1bcb916c7;
					}
					_iter_end_1bcb916c7:;
				};
			}
			_iter_next_1bcb9093a:;
			++it;
			goto _iter_begin_1bcb9093a;
		}
		_iter_end_1bcb9093a:;
	};
}



inline void _1abbaaaa9_optimizeStructs(_1abbab318_Optimizer* _self_, jule::Ptr<_1abc50d08_Package>& _7939_p) {
	{
		auto &expr = _7939_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bcb91c38:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1bcb929c5:;
					if (it != expr.end()) {
						jule::Ptr<_1ab08a1a9_Struct> _8125_s = *it;
						{
							_1abbb0295_optimizeStruct(&(*_self_), _8125_s);
						}
						_iter_next_1bcb929c5:;
						++it;
						goto _iter_begin_1bcb929c5;
					}
					_iter_end_1bcb929c5:;
				};
			}
			_iter_next_1bcb91c38:;
			++it;
			goto _iter_begin_1bcb91c38;
		}
		_iter_end_1bcb91c38:;
	};
}



inline void _1abbe0b66_optimizePackage(_1abbab318_Optimizer* _self_, jule::Ptr<_1abc50d08_Package>& _8739_p) {
	_1abbb19d3_optimizeGlobals(&(*_self_), _8739_p);
	_1abb8a89c_optimizeFunctions(&(*_self_), _8739_p);
	_1abbaaaa9_optimizeStructs(&(*_self_), _8739_p);
}



inline void _1abbe2a14_Optimize(_1abbab318_Optimizer* _self_) {
	_1abbe89c6_detectEnabled();
	if (_1a9790bad_Deadcode) {
		_1abc23e74_EliminateDefines((*_self_)._field_ir);
	};
	if ((_1abb89428_scopeEnabled || _1abb87e1b_exprEnabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_Used;
			auto it = expr.begin();
			_iter_begin_1bcb947da:;
			if (it != expr.end()) {
				jule::Ptr<_1abc4cd9e_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_1abbe0b66_optimizePackage(&(*_self_), _10325_u.get()._field_Package);
					};
				}
				_iter_next_1bcb947da:;
				++it;
				goto _iter_begin_1bcb947da;
			}
			_iter_end_1bcb947da:;
		};
		_1abbe0b66_optimizePackage(&(*_self_), (*_self_)._field_ir.get()._field_Main);
	};
	if (_1a9790bad_Deadcode) {
		_1abc28c26_EliminateScopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1abbab318_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1ac6ebbc1_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1ac6ece69_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1ac6ebbc1_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1ac6ecc7c_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1ac6ee4ed_LogFlat(_1a7995777_Log& _1424_l) {
	jule::outln(_1424_l._field_Text);
}



inline void static__1ac6ee70c_LogError(_1a7995777_Log& _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1925_l._field_Text);
	static__1ac6ebbc1_Reset();
	if ((_1925_l._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1925_l._field_Path);
	};
	if (((_1925_l._field_Row != 0LL) && (_1925_l._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1aba81485_Itoa(_1925_l._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1aba81485_Itoa(_1925_l._field_Column));
	};
	if ((_1925_l._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _1a79147b2_TrimLeft(_1925_l._field_Line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1925_l._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_1a79147b2_TrimLeft(_3621_line,jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1aba81485_Itoa(_1925_l._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1a78d5002_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1a78d5002_Repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1925_l._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1925_l._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1a78d5002_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1ac6ece69_Print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1925_l._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1ac6ee91b_Log(_1a7995777_Log& _6520_l) {
	{
		auto &_match_expr{ _6520_l._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1bcba49d7:;
			{
				static__1ac6ee4ed_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1bcba4a4d:;
			{
				static__1ac6ee70c_LogError(_6520_l);
			}
		}
		_match_end_1bcba4894:;
	};
}



inline void static__1ac6eeb2a_PrintLogs(jule::Slice<_1a7995777_Log>& _7526_logs) {
	{
		auto &expr = _7526_logs;
		auto it = expr.begin();
		_iter_begin_1bcba59b6:;
		if (it != expr.end()) {
			_1a7995777_Log &_7616_l = *it;
			{
				static__1ac6ee91b_Log(_7616_l);
			}
			_iter_next_1bcba59b6:;
			++it;
			goto _iter_begin_1bcba59b6;
		}
		_iter_end_1bcba59b6:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1aba81485_Itoa(static_cast<jule::I64>(_7526_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac6ee29a_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1ace0db96_Unix(_1ace0d7de_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1ace1122b_unixYearToSeconds(_5717_y,_5617_leap);;
	_6817_t+=_1ace115b1_unixMonthToSeconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_Hour);
	_6817_t+=(60LLU * (*_self_)._field_Minute);
	_6817_t+=(*_self_)._field_Second;
	return _6817_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ace0d7de_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1ace0de82_Time static__1ace0e328_Unix(jule::U64 _9120_sec) {
	return _1ace0de82_Time{._field_sec=_9120_sec};;
}



inline _1ace0de82_Time static__1ace0e526_Now(void) {
	return static__1ace0e328_Unix(static_cast<jule::U64>(_1ace10e1d_unix()));;
}



inline jule::U64 _1ace0e977_Unix(_1ace0de82_Time* _self_) {
	return (*_self_)._field_sec;;
}



inline jule::U64 _1ace0ebdb_Day(_1ace0de82_Time* _self_) {
	return _1ace10b65_Abs(&(*_self_))._field_Day;;
}



inline jule::U64 _1ace0ee50_Month(_1ace0de82_Time* _self_) {
	return _1ace10b65_Abs(&(*_self_))._field_Month;;
}



inline jule::U64 _1ace101b4_Year(_1ace0de82_Time* _self_) {
	return _1ace10b65_Abs(&(*_self_))._field_Year;;
}



inline jule::U64 _1ace10428_Second(_1ace0de82_Time* _self_) {
	return _1ace10b65_Abs(&(*_self_))._field_Second;;
}



inline jule::U64 _1ace1068c_Minute(_1ace0de82_Time* _self_) {
	return _1ace10b65_Abs(&(*_self_))._field_Minute;;
}



inline jule::U64 _1ace10901_Hour(_1ace0de82_Time* _self_) {
	return _1ace10b65_Abs(&(*_self_))._field_Hour;;
}



inline _1ace0d7de_AbsTime _1ace10b65_Abs(_1ace0de82_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1ace0cd71_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1ace0cd71_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1bcbd560b:;
	}
	_iter_end_1bcbd560b:;;
	_1ace0d7de_AbsTime _17417_t = _1ace0d7de_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ace0de82_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1acd54427_scopeCoder> static__1acd54a43_new(jule::Ptr<_1ace15c9c_ObjectCoder>& _6124_oc) {
	return jule::new_ptr<_1acd54427_scopeCoder>(_1acd54427_scopeCoder{._field_oc=_6124_oc});;
}



inline void _1acd54cb8_rangeIndexIter(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac098b_RangeIter>& _6739_it) {
	jule::Str _6813_begin = static__1acd724ab_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6739_it)));;
	jule::Str _6913_next = static__1acd729ea_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6739_it)));;
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1acddb910_addIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1a976ca14_Copy && _1acd5997c_isCopyOptimizable(_6739_it.get()._field_Expr))) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1acd6820a_model(_self_.get()._field_oc.get()._field_ec, _6739_it.get()._field_Expr.get()._field_Model);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, _6813_begin);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1acddb910_addIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	if ((_6739_it.get()._field_KeyA != nullptr)) {
		_1ace18640_varInitExpr(_self_.get()._field_oc, _6739_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1acde0480_indent(_self_.get()._field_oc);
	};
	if ((_6739_it.get()._field_KeyB != nullptr)) {
		if (_1a976ca14_Copy) {
			_6739_it.get()._field_KeyB.get()._field_Reference=_1acd59d12_isIterCopyOptimizable(_6739_it.get()._field_Expr,_6739_it.get()._field_KeyB);
		};
		_1ace18640_varInitExpr(_self_.get()._field_oc, _6739_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1acde0480_indent(_self_.get()._field_oc);
	};
	_1acd593a5_scope(_self_, _6739_it.get()._field_Scope);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, _6913_next);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1acde0480_indent(_self_.get()._field_oc);
	if ((_6739_it.get()._field_KeyA != nullptr)) {
		_1acd978cc_write(_self_.get()._field_oc, static__1acd72214_var(_6739_it.get()._field_KeyA));
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1acde0480_indent(_self_.get()._field_oc);
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1acd978cc_write(_self_.get()._field_oc, _6813_begin);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1acddbe2c_doneIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, static__1acd72753_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6739_it))));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1acddbe2c_doneIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1acd5503d_rangeHashmapIter(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac098b_RangeIter>& _13541_it) {
	jule::Str _13613_begin = static__1acd724ab_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_13541_it)));;
	jule::Str _13713_next = static__1acd729ea_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_13541_it)));;
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1acddb910_addIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1a976ca14_Copy && _1acd5997c_isCopyOptimizable(_13541_it.get()._field_Expr))) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1acd6820a_model(_self_.get()._field_oc.get()._field_ec, _13541_it.get()._field_Expr.get()._field_Model);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, _13613_begin);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1acddb910_addIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	if ((_13541_it.get()._field_KeyA != nullptr)) {
		if (_1a976ca14_Copy) {
			_13541_it.get()._field_KeyA.get()._field_Reference=_1acd59d12_isIterCopyOptimizable(_13541_it.get()._field_Expr,_13541_it.get()._field_KeyA);
		};
		_1ace18640_varInitExpr(_self_.get()._field_oc, _13541_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1acde0480_indent(_self_.get()._field_oc);
	};
	if ((_13541_it.get()._field_KeyB != nullptr)) {
		if (_1a976ca14_Copy) {
			_13541_it.get()._field_KeyB.get()._field_Reference=_1acd59d12_isIterCopyOptimizable(_13541_it.get()._field_Expr,_13541_it.get()._field_KeyB);
		};
		_1ace18640_varInitExpr(_self_.get()._field_oc, _13541_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1acde0480_indent(_self_.get()._field_oc);
	};
	_1acd593a5_scope(_self_, _13541_it.get()._field_Scope);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, _13713_next);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1acd978cc_write(_self_.get()._field_oc, _13613_begin);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1acddbe2c_doneIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, static__1acd72753_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_13541_it))));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1acddbe2c_doneIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1acd552b3_ifCase(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1ababe1d7_If> _20130_i) {
	if ((_20130_i.get()._field_Expr != nullptr)) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _20130_i.get()._field_Expr);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1acd593a5_scope(_self_, _20130_i.get()._field_Scope);
}



inline void _1acd55538_conditional(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1ababe847_Conditional> _21035_c) {
	jule::Bool _21117_writed = false;;
	{
		auto &expr = _21035_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1bcc9d63b:;
		if (it != expr.end()) {
			jule::Ptr<_1ababe1d7_If> _21221_elif = *it;
			{
				if ((_21221_elif == nullptr)) {
					goto _iter_next_1bcc9d63b;
				};
				if (_21117_writed) {
					_1acd978cc_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_21117_writed=true;
				_1acd552b3_ifCase(_self_, _21221_elif);
			}
			_iter_next_1bcc9d63b:;
			++it;
			goto _iter_begin_1bcc9d63b;
		}
		_iter_end_1bcc9d63b:;
	};
	if ((_21035_c.get()._field_Default != nullptr)) {
		if (_21117_writed) {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1acd593a5_scope(_self_, _21035_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1acd557ad_infIter(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1ababeb33_InfIter> _23031_it) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1acddb910_addIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd593a5_scope(_self_, _23031_it.get()._field_Scope);
	_1acddbe2c_doneIndent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, static__1acd729ea_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23031_it))));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, static__1acd72753_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23031_it))));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1acd55a33_whileIter(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac00a6_WhileIter> _24733_it) {
	if (((_24733_it.get()._field_Expr != nullptr) && (_24733_it.get()._field_Next == nullptr))) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _24733_it.get()._field_Expr);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24733_it.get()._field_Expr != nullptr)) {
			_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _24733_it.get()._field_Expr);
		};
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24733_it.get()._field_Next != nullptr)) {
			_1acd58daa_st(_self_, _24733_it.get()._field_Next);
		};
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1acddb910_addIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd593a5_scope(_self_, _24733_it.get()._field_Scope);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1acddbe2c_doneIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, static__1acd729ea_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24733_it))));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, static__1acd72753_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24733_it))));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1acd55ca8_rangeIter(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac098b_RangeIter> _28033_it) {
	{
		
		if ((_1abceace8_Slc(_28033_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bccae174:;
			{
				_1acd54cb8_rangeIndexIter(_self_, _28033_it);
			}
		}
		else if ((_1abceaa84_Arr(_28033_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bccadc12:;
			{
				_1acd54cb8_rangeIndexIter(_self_, _28033_it);
			}
		}
		else if ((_1abceb799_Map(_28033_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bccad8d2:;
			{
				_1acd5503d_rangeHashmapIter(_self_, _28033_it);
			}
		}
		else {
			_case_begin_1bccad86b:;
			{
				_1acd54cb8_rangeIndexIter(_self_, _28033_it);
			}
		}
		_match_end_1bccad7a0:;
	};
}



inline void _1acd5602d_cont(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac0d87_ContSt> _29324_c) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1acd978cc_write(_self_.get()._field_oc, static__1acd729ea_iterNext(_29324_c.get()._field_It));
}



inline void _1acd562a3_label(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac152a_Label> _29825_l) {
	_1acd978cc_write(_self_.get()._field_oc, static__1acd72c92_label(_29825_l.get()._field_Ident));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1acd56528_gotoSt(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac1816_GotoSt> _30326_gt) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1acd978cc_write(_self_.get()._field_oc, static__1acd72c92_label(_30326_gt.get()._field_Ident));
}



inline void _1acd5679d_postfix(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac1bbd_Postfix> _30831_p) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _30831_p.get()._field_Expr);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1acd978cc_write(_self_.get()._field_oc, _30831_p.get()._field_Op);
}



inline void _1acd56a23_assign(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac2141_Assign> _31530_a) {
	_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _31530_a.get()._field_L.get()._field_Model);
	_1acd978cc_write(_self_.get()._field_oc, _31530_a.get()._field_Op.get()._field_Kind);
	_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _31530_a.get()._field_R.get()._field_Model);
}



inline void _1acd56c98_mapLookupAssign(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac24e8_MultiAssign>& _32140_a) {
	jule::Ptr<_1aba93585_IndexingExprModel> _32217_iem = _32140_a.get()._field_R.cast_ptr<_1aba93585_IndexingExprModel>(&__jule_any_type47);;
	_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _32217_iem.get()._field_Expr.get()._field_Model);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _32217_iem.get()._field_Index.get()._field_Model);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if ((_32140_a.get()._field_L[0LL] != nullptr)) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _32140_a.get()._field_L[0LL].get()._field_Model);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if ((_32140_a.get()._field_L[1LL] != nullptr)) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _32140_a.get()._field_L[1LL].get()._field_Model);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd5701d_multiAssignTup(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac24e8_MultiAssign>& _34439_a) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1acddb910_addIndent(_self_.get()._field_oc);
	jule::Ptr<_1aba96a50_TupleExprModel> _34817_tup = _34439_a.get()._field_R.cast_ptr<_1aba96a50_TupleExprModel>(&__jule_any_type90);;
	{
		auto &expr = _34817_tup.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1bccbe7b1:;
		if (it != expr.end()) {
			jule::I64 _35014_i = it - expr.begin();
			jule::Ptr<_1abcbba55_Data> _35021_r = *it;
			{
				_1acde0480_indent(_self_.get()._field_oc);
				jule::Ptr<_1abcbba55_Data> _35221_l = _34439_a.get()._field_L[_35014_i];;
				if ((_35221_l != nullptr)) {
					_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35221_l.get()._field_Kind));
					_1acd978cc_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1acd978cc_write(_self_.get()._field_oc, static__1acd7071d_toOut(_1acd5404d_assignArgName,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_35014_i))));
					_1acd978cc_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _35021_r.get()._field_Model);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1bccbe7b1:;
			++it;
			_35014_i++;
			goto _iter_begin_1bccbe7b1;
		}
		_iter_end_1bccbe7b1:;
	};
	{
		auto &expr = _34439_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1bccc4211:;
		if (it != expr.end()) {
			jule::I64 _36314_i = it - expr.begin();
			jule::Ptr<_1abcbba55_Data> _36321_l = *it;
			{
				if ((_36321_l != nullptr)) {
					_1acde0480_indent(_self_.get()._field_oc);
					_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _36321_l.get()._field_Model);
					_1acd978cc_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1acd978cc_write(_self_.get()._field_oc, static__1acd7071d_toOut(_1acd5404d_assignArgName,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_36314_i))));
					_1acd978cc_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1bccc4211:;
			++it;
			_36314_i++;
			goto _iter_begin_1bccc4211;
		}
		_iter_end_1bccc4211:;
	};
	_1acddbe2c_doneIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1acd57293_multiAssignFn(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac24e8_MultiAssign>& _37838_a) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1acddb910_addIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	jule::Ptr<_1aba92c5a_FnCallExprModel> _38317_f = _37838_a.get()._field_R.cast_ptr<_1aba92c5a_FnCallExprModel>(&__jule_any_type36);;
	_1ace26dbd_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_38317_f.get()._field_Func.get()._field_Result);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _37838_a.get()._field_R);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto &expr = _37838_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1bccca976:;
		if (it != expr.end()) {
			jule::I64 _38914_i = it - expr.begin();
			jule::Ptr<_1abcbba55_Data> _38921_l = *it;
			{
				if ((_38921_l != nullptr)) {
					_1acde0480_indent(_self_.get()._field_oc);
					_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _38921_l.get()._field_Model);
					_1acd978cc_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_1acd978cc_write(_self_.get()._field_oc, _1aba81485_Itoa(_38914_i));
					_1acd978cc_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1bccca976:;
			++it;
			_38914_i++;
			goto _iter_begin_1bccca976;
		}
		_iter_end_1bccca976:;
	};
	_1acddbe2c_doneIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1acd57518_multiAssign(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac24e8_MultiAssign> _40435_a) {
	{
		auto &_match_expr{ _40435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bccce33c:;
			{
				_1acd56c98_mapLookupAssign(_self_, _40435_a);
				return;;
			}
		}
		_match_end_1bccce12d:;
	};
	{
		auto &_match_expr{ _40435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1bccce062:;
			{
				_1acd5701d_multiAssignTup(_self_, _40435_a);
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bccd01d9:;
			{
				_1acd57293_multiAssignFn(_self_, _40435_a);
			}
		}
		else {
			_case_begin_1bccced54:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:418:13"));;
			}
		}
		_match_end_1bcccecee:;
	};
}



inline jule::Fn<void(void)> _1acd57826_matchExpr(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac2a37_Match> _42233_m) {
	if ((!(_1abcbc418_IsConst(_42233_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_1aba88cd9_IsBool(_42233_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1aba87aeb_ReadBool(_42233_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1acd6820a_model(_self_.get()._field_oc.get()._field_ec, _42233_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1acd57b45_case(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac2a37_Match> _43228_m, jule::Ptr<_1abac3582_Case> _43243_c) {
	if (((_43243_c.get()._field_Exprs.len() != 0LL) && (!(_1abac3043_IsGenericTypeMatch(_43228_m.ptr()))))) {
		if (((_43228_m.get()._field_Cases.len() > 0LL) && (_43228_m.get()._field_Cases[0LL] == _43243_c))) {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _43243_c.get()._field_Exprs;
			auto it = expr.begin();
			_iter_begin_1bccd57c7:;
			if (it != expr.end()) {
				jule::I64 _43918_i = it - expr.begin();
				jule::Ptr<_1abcbba55_Data> _43925_expr = *it;
				{
					{
						
						if ((!(_43228_m.get()._field_TypeMatch))) {
							_case_begin_1bccda997:;
							{
								jule::Fn<void(void)> _44225_caseExpr = _1acd57826_matchExpr(_self_, _43228_m);;
								if (_1abcbc726_GoodOperand(_43228_m.get()._field_Expr.ptr(), _43925_expr)) {
									if ((_44225_caseExpr != nullptr)) {
										_44225_caseExpr();
										_1acd978cc_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _43925_expr.get()._field_Model);
								} else {
									_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _43925_expr.get()._field_Model);
									if ((_44225_caseExpr != nullptr)) {
										_1acd978cc_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_44225_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1bccd6a3c:;
							{
								_1acd978cc_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_1abce79d7_TypeKind> _45829_tk = _43925_expr.get()._field_Model.cast_ptr<_1abce79d7_TypeKind>(&__jule_any_type92);;
								if ((_1abceb535_Trait(_43228_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1acd978cc_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
									_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _45829_tk));
									_1acd978cc_write(_self_.get()._field_oc, jule::Str(">()", 3));
								} else {
									jule::I64 _46429_j = _1acd9beca_pushAnyType(_self_.get()._field_oc, _45829_tk);;
									_1acd978cc_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_1acd978cc_write(_self_.get()._field_oc, _1aba81485_Itoa(_46429_j));
								};
							}
						}
						_match_end_1bccd6971:;
					};
					if (((_43243_c.get()._field_Exprs.len() - _43918_i) > 1LL)) {
						_1acd978cc_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1bccd57c7:;
				++it;
				_43918_i++;
				goto _iter_begin_1bccd57c7;
			}
			_iter_end_1bccd57c7:;
		};
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_43228_m.get()._field_Default == _43243_c) && (_43228_m.get()._field_Cases.len() != 0LL))) {
		_1acde0480_indent(_self_.get()._field_oc);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1acddb910_addIndent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, static__1acd732d1_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43243_c))));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_43243_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1acde0480_indent(_self_.get()._field_oc);
		_1acd593a5_scope(_self_, _43243_c.get()._field_Scope);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1acddbe2c_doneIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1acd57dba_matchSt(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac2a37_Match> _49831_m) {
	if (((_49831_m.get()._field_Cases.len() == 0LL) && (_49831_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _50313_genericTypeMatch = _1abac3043_IsGenericTypeMatch(_49831_m.ptr());;
	if ((_50313_genericTypeMatch && ((_49831_m.get()._field_Default == nullptr) || (_49831_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1acddb910_addIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	if (((!(_50313_genericTypeMatch)) && (!(_1abcbc418_IsConst(_49831_m.get()._field_Expr.ptr()))))) {
		if ((_1a976ca14_Copy && _1acd5997c_isCopyOptimizable(_49831_m.get()._field_Expr))) {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _49831_m.get()._field_Expr.get()._field_Model);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1acde0480_indent(_self_.get()._field_oc);
	};
	if ((_49831_m.get()._field_Cases.len() > 0LL)) {
		{
			auto &expr = _49831_m.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1bcce9c2b:;
			if (it != expr.end()) {
				jule::Ptr<_1abac3582_Case> _52725_c = *it;
				{
					if ((_52725_c == nullptr)) {
						goto _iter_next_1bcce9c2b;
					};
					_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1acde0480_indent(_self_.get()._field_oc);
					_1acd57b45_case(_self_, _49831_m,_52725_c);
				}
				_iter_next_1bcce9c2b:;
				++it;
				goto _iter_begin_1bcce9c2b;
			}
			_iter_end_1bcce9c2b:;
		};
	};
	if ((_49831_m.get()._field_Default != nullptr)) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1acd57b45_case(_self_, _49831_m,_49831_m.get()._field_Default);
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, static__1acd73039_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_49831_m))));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1acddbe2c_doneIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1acd58140_fallSt(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac3b37_FallSt> _55426_f) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1acd978cc_write(_self_.get()._field_oc, static__1acd732d1_caseBegin(_55426_f.get()._field_DestCase));
}



inline void _1acd583b5_breakSt(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac123e_BreakSt> _55927_b) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_55927_b.get()._field_It != 0LLU)) {
		_1acd978cc_write(_self_.get()._field_oc, static__1acd72753_iterEnd(_55927_b.get()._field_It));
	} else {
		_1acd978cc_write(_self_.get()._field_oc, static__1acd73039_matchEnd(_55927_b.get()._field_Mtch));
	};
}



inline void _1acd5863a_setResult(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac3eab_RetSt> _56833_r) {
	if ((_56833_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _56833_r.get()._field_Expr);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_1acde0480_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1abcbba55_Data>> _57617_datas = _56833_r.get()._field_Expr.cast_ptr<_1aba96a50_TupleExprModel>(&__jule_any_type90).get()._field_Datas;;
	{
		auto &expr = _57617_datas;
		auto it = expr.begin();
		_iter_begin_1bcd0220b:;
		if (it != expr.end()) {
			jule::I64 _57713_i = it - expr.begin();
			jule::Ptr<_1abcbba55_Data> _57716_data = *it;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_1acd978cc_write(_self_.get()._field_oc, _1aba81485_Itoa(_57713_i));
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _57716_data.get()._field_Model);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1acde0480_indent(_self_.get()._field_oc);
			}
			_iter_next_1bcd0220b:;
			++it;
			_57713_i++;
			goto _iter_begin_1bcd0220b;
		}
		_iter_end_1bcd0220b:;
	};
}



inline void _1acd588b0_retSt(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abac3eab_RetSt> _58729_r) {
	if (_1aba9e63a_IsVoid(_58729_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_58729_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_58729_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_58729_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _58729_r.get()._field_Func.get()._field_Result));
			_1acd978cc_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _58729_r.get()._field_Expr);
			_1acd978cc_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _58729_r.get()._field_Expr);
			_1acd978cc_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_58729_r.get()._field_Expr != nullptr)) {
		_1acd5863a_setResult(_self_, _58729_r);
	};
	if (_58729_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1ace26dbd_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_58729_r.get()._field_Func.get()._field_Result);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _1acd58b35_var(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abc73ee6_Var> _62327_v) {
	if ((!(_62327_v.get()._field_Constant))) {
		_1ace18772_var(_self_.get()._field_oc, _62327_v);
	};
}



inline void _1acd58daa_st(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Any _63026_st) {
	if ((_63026_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _63026_st };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bcd11e30:;
			{
				_1acd593a5_scope(_self_, _63026_st.cast_ptr<_1ababdcdb_Scope>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bcd11acd:;
			{
				_1acd58b35_var(_self_, _63026_st.cast_ptr<_1abc73ee6_Var>(&__jule_any_type10));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bcd12529:;
			{
				_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _63026_st.cast_ptr<_1abcbba55_Data>(&__jule_any_type25).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1bcd12590:;
			{
				_1acd55538_conditional(_self_, _63026_st.cast_ptr<_1ababe847_Conditional>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bcd12606:;
			{
				_1acd557ad_infIter(_self_, _63026_st.cast_ptr<_1ababeb33_InfIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bcd1266c:;
			{
				_1acd55a33_whileIter(_self_, _63026_st.cast_ptr<_1abac00a6_WhileIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bcd126d3:;
			{
				_1acd55ca8_rangeIter(_self_, _63026_st.cast_ptr<_1abac098b_RangeIter>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1bcd12749:;
			{
				_1acd5602d_cont(_self_, _63026_st.cast_ptr<_1abac0d87_ContSt>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bcd127b0:;
			{
				_1acd562a3_label(_self_, _63026_st.cast_ptr<_1abac152a_Label>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1bcd12826:;
			{
				_1acd56528_gotoSt(_self_, _63026_st.cast_ptr<_1abac1816_GotoSt>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bcd1289d:;
			{
				_1acd5679d_postfix(_self_, _63026_st.cast_ptr<_1abac1bbd_Postfix>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bcd12925:;
			{
				_1acd56a23_assign(_self_, _63026_st.cast_ptr<_1abac2141_Assign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1bcd1299c:;
			{
				_1acd57518_multiAssign(_self_, _63026_st.cast_ptr<_1abac24e8_MultiAssign>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1bcd12a24:;
			{
				_1acd57dba_matchSt(_self_, _63026_st.cast_ptr<_1abac2a37_Match>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1bcd12a9b:;
			{
				_1acd58140_fallSt(_self_, _63026_st.cast_ptr<_1abac3b37_FallSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bcd12b23:;
			{
				_1acd583b5_breakSt(_self_, _63026_st.cast_ptr<_1abac123e_BreakSt>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1bcd12b9a:;
			{
				_1acd588b0_retSt(_self_, _63026_st.cast_ptr<_1abac3eab_RetSt>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1bcd12c22:;
			{
				_1acd66192_pushToSlice(_self_.get()._field_oc.get()._field_ec, _63026_st.cast_ptr<_1a9791384_PushToSliceExprModel>(&__jule_any_type130));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1bcd12c99:;
			{
				_1acd67c10_mutSlicing(_self_.get()._field_oc.get()._field_ec, _63026_st.cast_ptr<_1a9cd418a_MutSlicingExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1bcd12d21:;
			{
				_1acd67e85_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _63026_st.cast_ptr<_1a9e8e1e1_StrInsertBeginExprModel>(&__jule_any_type129));
			}
		}
		else {
			_case_begin_1bcd118ad:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1bcd11858:;
	};
}



inline void _1acd59130_scopeStmts(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1ababdcdb_Scope>& _68035_s) {
	{
		auto &expr = _68035_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1bcd1caa6:;
		if (it != expr.end()) {
			jule::Any _68121_st = *it;
			{
				_1acde0480_indent(_self_.get()._field_oc);
				_1acd58daa_st(_self_, _68121_st);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1bcd1caa6:;
			++it;
			goto _iter_begin_1bcd1caa6;
		}
		_iter_end_1bcd1caa6:;
	};
}



inline void _1acd593a5_scope(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1ababdcdb_Scope> _68929_s) {
	_1acddb910_addIndent(_self_.get()._field_oc);
	if (_68929_s.get()._field_Deferred) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1acd59130_scopeStmts(_self_, _68929_s);
	_1acddbe2c_doneIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_68929_s.get()._field_Deferred) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1acd5962a_funcScope(jule::Ptr<_1acd54427_scopeCoder> _self_, jule::Ptr<_1abaa1d79_FnIns> _70533_f) {
	if ((_70533_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1acddb910_addIndent(_self_.get()._field_oc);
	if ((!(_1aba9e63a_IsVoid(_70533_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_1abd024a3_Tuple> _71221_tup = _1abceba0d_Tup(_70533_f.get()._field_Result.ptr());;
		if ((_71221_tup != nullptr)) {
			_1acde0480_indent(_self_.get()._field_oc);
			_1ace26780_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_71221_tup);
			_1acd978cc_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto &expr = _71221_tup.get()._field_Types;
				auto it = expr.begin();
				_iter_begin_1bcd24e43:;
				if (it != expr.end()) {
					jule::I64 _71722_i = it - expr.begin();
					jule::Ptr<_1abce79d7_TypeKind> _71729_t = *it;
					{
						if (_1ace291ab_shouldInitialized(_71729_t)) {
							_1acde0480_indent(_self_.get()._field_oc);
							_1acd978cc_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_1acd978cc_write(_self_.get()._field_oc, _1aba81485_Itoa(_71722_i));
							_1acd978cc_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_1acd6897a_initExpr(_self_.get()._field_oc.get()._field_ec, _71729_t);
							_1acd978cc_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_1bcd24e43:;
					++it;
					_71722_i++;
					goto _iter_begin_1bcd24e43;
				}
				_iter_end_1bcd24e43:;
			};
		} else if ((_70533_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_1acde0480_indent(_self_.get()._field_oc);
			_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _70533_f.get()._field_Result));
			_1acd978cc_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_1ace291ab_shouldInitialized(_70533_f.get()._field_Result)) {
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1acd6897a_initExpr(_self_.get()._field_oc.get()._field_ec, _70533_f.get()._field_Result);
			};
			_1acd978cc_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_1acd59130_scopeStmts(_self_, _70533_f.get()._field_Scope);
	if ((_70533_f.get()._field_Decl.get()._field_Exceptional && _1aba9e63a_IsVoid(_70533_f.get()._field_Decl.ptr()))) {
		_1acde0480_indent(_self_.get()._field_oc);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_1acddbe2c_doneIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1acd54427_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1acd5c0bc_exprCoder> static__1acd5c4b8_new(jule::Ptr<_1ace15c9c_ObjectCoder>& _10424_oc) {
	return jule::new_ptr<_1acd5c0bc_exprCoder>(_1acd5c0bc_exprCoder{._field_oc=_10424_oc});;
}



inline void _1acd5c73d_string(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba86b94_Const>& _11027_c) {
	jule::Str _11113_content = _1aba87c2d_ReadStr(_11027_c.ptr());;
	if ((_11113_content.len() == 0LL)) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _11613_bytes = static_cast<jule::Slice<jule::U8>>(_11113_content);;
	jule::Str _11713_len = _1aba81353_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_11613_bytes.len())),10LL);;
	jule::Str _11813_lit = _1acd6967e_cstrLit(_11613_bytes);;
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1acd978cc_write(_self_.get()._field_oc, _11813_lit);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1acd978cc_write(_self_.get()._field_oc, _11713_len);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd5c9b3_boolean(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba86b94_Const>& _12728_c) {
	if (_1aba87aeb_ReadBool(_12728_c.ptr())) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1acd5cb8e_nilLit(jule::Ptr<_1acd5c0bc_exprCoder> _self_) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1acd5ce9c_ftoaSpecialCases(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::F64& _13937_x) {
	{
		
		if (_1aba4ca17_IsNaN(_13937_x)) {
			_case_begin_1bcd48164:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1aba4cc7b_IsInf(_13937_x,1LL)) {
			_case_begin_1bcd4798d:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1aba4cc7b_IsInf(_13937_x,-1LL)) {
			_case_begin_1bcd47a04:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1bcd47927:;
			{
				return false;;
			}
		}
		_match_end_1bcd4785b:;
	};
	return true;;
}



inline void _1acd5d222_float32(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba86b94_Const>& _15328_c) {
	jule::F64 _15413_x = _1aba88206_AsF64(_15328_c.ptr());;
	if (_1acd5ce9c_ftoaSpecialCases(_self_, _15413_x)) {
		return;;
	};
	{
		
		if ((_15413_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1bcd4a9e6:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15413_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1bcd4a72c:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1bcd4a5ea:;
			{
				_1acd978cc_write(_self_.get()._field_oc, _1acd6998c_ftoa(_15413_x,32LL));
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1bcd4a595:;
	};
}



inline void _1acd5d497_float64(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba86b94_Const>& _17228_c) {
	jule::F64 _17313_x = _1aba88206_AsF64(_17228_c.ptr());;
	if (_1acd5ce9c_ftoaSpecialCases(_self_, _17313_x)) {
		return;;
	};
	{
		
		if ((_17313_x == jule::MAX_F64)) {
			_case_begin_1bcd4d9a5:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17313_x == jule::MIN_F64)) {
			_case_begin_1bcd4e1ae:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1bcd4d5a9:;
			{
				_1acd978cc_write(_self_.get()._field_oc, _1acd6998c_ftoa(_17313_x,64LL));
			}
		}
		_match_end_1bcd4d554:;
	};
}



inline void _1acd5d71c_constant(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba86b94_Const> _19032_c) {
	{
		
		if (_1aba88ed7_IsStr(_19032_c.ptr())) {
			_case_begin_1bcd50754:;
			{
				_1acd5c73d_string(_self_, _19032_c);
			}
		}
		else if (_1aba88cd9_IsBool(_19032_c.ptr())) {
			_case_begin_1bcd507ba:;
			{
				_1acd5c9b3_boolean(_self_, _19032_c);
			}
		}
		else if (_1aba8924b_IsF64(_19032_c.ptr())) {
			_case_begin_1bcd50831:;
			{
				{
					
					if ((_19032_c.get()._field_Kind == jule::Str("f32", 3))) {
						_case_begin_1bcd52e71:;
						{
							_1acd5d222_float32(_self_, _19032_c);
						}
					}
					else {
						_case_begin_1bcd52668:;
						{
							_1acd5d497_float64(_self_, _19032_c);
						}
					}
					_match_end_1bcd5259c:;
				};
			}
		}
		else if (_1aba88a75_IsI64(_19032_c.ptr())) {
			_case_begin_1bcd50897:;
			{
				_1acd978cc_write(_self_.get()._field_oc, _1acd69c34_itoa(static_cast<jule::I64>(_1aba87887_ReadI64(_19032_c.ptr()))));
			}
		}
		else if (_1aba88ba7_IsU64(_19032_c.ptr())) {
			_case_begin_1bcd511e4:;
			{
				_1acd978cc_write(_self_.get()._field_oc, _1acd69ecb_utoa(static_cast<jule::U64>(_1aba879b9_ReadU64(_19032_c.ptr()))));
			}
		}
		else if (_1aba894b0_IsNil(_19032_c.ptr())) {
			_case_begin_1bcd5125a:;
			{
				_1acd5cb8e_nilLit(_self_);
			}
		}
		else {
			_case_begin_1bcd506dd:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1bcd50622:;
	};
}



inline void _1acd5dad5_divByZeroBinary(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1a97237bc_Token>& _21436_op, jule::Ptr<_1aba90928_OperandExprModel>& _21453_l, jule::Ptr<_1aba90928_OperandExprModel>& _21480_r) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _21436_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1bcd55d75:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1bcd55ddb:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1bcd55ca9:;
	};
	if ((!(_1d7c0a98a_Production))) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1ace16396_locInfo(_self_.get()._field_oc, _21436_op);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1acd68480_expr(_self_, _21453_l.get()._field_Model);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1acd68480_expr(_self_, _21480_r.get()._field_Model);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd5dd5a_unsafeBinary(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba90de0_BinopExprModel> _23636_m) {
	if (((_23636_m.get()._field_Op.get()._field_Kind == jule::Str("==", 2)) || (_23636_m.get()._field_Op.get()._field_Kind == jule::Str("!=", 2)))) {
		if (_1acd6ab25_isAny(_23636_m.get()._field_Left.get()._field_Kind)) {
			if (((!(_1abce891c_IsNil(_23636_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_1acd6ab25_isAny(_23636_m.get()._field_Right.get()._field_Kind))))) {
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("(", 1));
				if ((_23636_m.get()._field_Op.get()._field_Kind == jule::Str("!=", 2))) {
					_1acd978cc_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I64 _24625_i = _1acd9beca_pushAnyType(_self_.get()._field_oc, _23636_m.get()._field_Right.get()._field_Kind);;
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_1acd978cc_write(_self_.get()._field_oc, _1aba81485_Itoa(_24625_i));
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_1acd6820a_model(_self_, _23636_m.get()._field_Left.get()._field_Model);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1acd6820a_model(_self_, _23636_m.get()._field_Right.get()._field_Model);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1acd6820a_model(_self_, _23636_m.get()._field_Left.get()._field_Model);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1acd978cc_write(_self_.get()._field_oc, _23636_m.get()._field_Op.get()._field_Kind);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1acd6820a_model(_self_, _23636_m.get()._field_Right.get()._field_Model);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd5e0d0_binary(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba90de0_BinopExprModel> _26730_m) {
	{
		auto &_match_expr{ _26730_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1bcd62a74:;
			{
				if ((_1abceb2c1_Struct(_26730_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1acd5dad5_divByZeroBinary(_self_, _26730_m.get()._field_Op,_26730_m.get()._field_Left,_26730_m.get()._field_Right);
					return;;
				};
			}
		}
		_match_end_1bcd629db:;
	};
	_1acd5dd5a_unsafeBinary(_self_, _26730_m);
}



inline void _1acd5e355_var(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1abc73ee6_Var> _27927_m) {
	if (_27927_m.get()._field_CppLinked) {
		jule::Ptr<_1ab03a720_Directive> _28117_d = _1ace28a7e_findDirective(_27927_m.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_28117_d != nullptr)) {
			_1acd978cc_write(_self_.get()._field_oc, _1ace1ab4d_concatAllParts(_28117_d.get()._field_Args));
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1acd978cc_write(_self_.get()._field_oc, static__1acd72214_var(_27927_m));
}



inline void _1acd5e5ca_structureIns(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1ab08a583_StructIns> _29036_m) {
	_1acd978cc_write(_self_.get()._field_oc, _1ace20bca_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29036_m));
}



inline void _1acd5e850_unary(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba91297_UnaryExprModel> _29429_m) {
	{
		auto &_match_expr{ _29429_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1bcd67837:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1acd68480_expr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1bcd678ae:;
			{
				if ((_1d7c0a98a_Production || (_1abcea0d3_Sptr(_29429_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1bcd6778d;
				};
				_1acd68480_expr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1ace16396_locInfo(_self_.get()._field_oc, _29429_m.get()._field_Op);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1bcd6778d:;
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1acd978cc_write(_self_.get()._field_oc, _29429_m.get()._field_Op.get()._field_Kind);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1acd68480_expr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1acd5eac5_structureLit(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba91a4a_StructLitExprModel> _31836_m) {
	if (_31836_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1acd978cc_write(_self_.get()._field_oc, static__1acd71bc5_structureIns(_31836_m.get()._field_Strct));
	if (_31836_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_31836_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _31836_m.get()._field_Strct.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1bcd6ed5b:;
			if (it != expr.end()) {
				jule::I64 _33117_i = it - expr.begin();
				jule::Ptr<_1ab08a396_FieldIns> _33120_f = *it;
				{
					{
						auto &expr = _31836_m.get()._field_Args;
						auto it = expr.begin();
						_iter_begin_1bcd70a82:;
						if (it != expr.end()) {
							jule::Ptr<_1aba91693_StructArgExprModel> _33229_arg = *it;
							{
								if ((_33229_arg.get()._field_Field == _33120_f)) {
									_1acd978cc_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1acd978cc_write(_self_.get()._field_oc, static__1acd71e6c_field(_33229_arg.get()._field_Field.get()._field_Decl));
									_1acd978cc_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1acd68480_expr(_self_, _33229_arg.get()._field_Expr);
									if (((_31836_m.get()._field_Strct.get()._field_Fields.len() - _33117_i) > 1LL)) {
										_1acd978cc_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1bcd6ed5b;
								};
							}
							_iter_next_1bcd70a82:;
							++it;
							goto _iter_begin_1bcd70a82;
						}
						_iter_end_1bcd70a82:;
					};
				}
				_iter_next_1bcd6ed5b:;
				++it;
				_33117_i++;
				goto _iter_begin_1bcd6ed5b;
			}
			_iter_end_1bcd6ed5b:;
		};
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1acd5ed4a_allocStructure(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba91d58_AllocStructLitExprModel> _34938_m) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1acd978cc_write(_self_.get()._field_oc, static__1acd71bc5_structureIns(_34938_m.get()._field_Lit.get()._field_Strct));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1acd5eac5_structureLit(_self_, _34938_m.get()._field_Lit);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd600c0_casting(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba923a8_CastingExprModel> _35731_m) {
	{
		
		if (_1acd6ab25_isAny(_35731_m.get()._field_Kind)) {
			_case_begin_1bcd7667b:;
			{
				if (_1abce891c_IsNil(_35731_m.get()._field_ExprKind.ptr())) {
					_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_1abcea820_TypeEnum(_35731_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_1acd6820a_model(_self_, _35731_m.get()._field_Expr);
					return;;
				};
				jule::I64 _36817_i = _1acd9beca_pushAnyType(_self_.get()._field_oc, _35731_m.get()._field_ExprKind);;
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				_1acd6820a_model(_self_, _35731_m.get()._field_Expr);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_1acd978cc_write(_self_.get()._field_oc, _1aba81485_Itoa(_36817_i));
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1abcea347_Ptr(_35731_m.get()._field_ExprKind.ptr()) != nullptr) || (_1abcea347_Ptr(_35731_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcd766e2:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35731_m.get()._field_Kind));
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1acd68480_expr(_self_, _35731_m.get()._field_Expr);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if (_1acd6ab25_isAny(_35731_m.get()._field_ExprKind)) {
			_case_begin_1bcd76758:;
			{
				_1acd6820a_model(_self_, _35731_m.get()._field_Expr);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1abcea0d3_Sptr(_35731_m.get()._field_Kind.ptr()) != nullptr)) {
					_1acd978cc_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1abcea0d3_Sptr(_35731_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1acd978cc_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35731_m.get()._field_Kind));
				};
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_1d7c0a98a_Production))) {
					_1acd978cc_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1ace16396_locInfo(_self_.get()._field_oc, _35731_m.get()._field_Token);
					_1acd978cc_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_1acd978cc_write(_self_.get()._field_oc, _1aba81485_Itoa(static_cast<jule::I64>(_1acd9beca_pushAnyType(_self_.get()._field_oc, _35731_m.get()._field_Kind))));
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1abceb535_Trait(_35731_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1bcd767be:;
			{
				_1acd6820a_model(_self_, _35731_m.get()._field_Expr);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_1d7c0a98a_Production) {
					_1acd978cc_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35731_m.get()._field_Kind));
					_1acd978cc_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_1abcea0d3_Sptr(_35731_m.get()._field_Kind.ptr()) != nullptr)) {
						_1acd978cc_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1abcea0d3_Sptr(_35731_m.get()._field_Kind.ptr()).get()._field_Elem));
					} else {
						_1acd978cc_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35731_m.get()._field_Kind));
					};
					_1acd978cc_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1ace16396_locInfo(_self_.get()._field_oc, _35731_m.get()._field_Token);
					_1acd978cc_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_1abceb535_Trait(_35731_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcd787c1:;
			{
				_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35731_m.get()._field_Kind));
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1acd68480_expr(_self_, _35731_m.get()._field_Expr);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1acd978cc_write(_self_.get()._field_oc, _1aba81485_Itoa(static_cast<jule::I64>(_1acd77c64_findTypeOffset(_self_.get()._field_oc.ptr(), _1abceb535_Trait(_35731_m.get()._field_Kind.ptr()),_35731_m.get()._field_ExprKind))));
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1bcd76615:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35731_m.get()._field_Kind));
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1acd68480_expr(_self_, _35731_m.get()._field_Expr);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1bcd76549:;
	};
}



inline void _1acd60345_args(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Slice<jule::Any> _43528_args) {
	if ((_43528_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _43528_args;
		auto it = expr.begin();
		_iter_begin_1bcd8e4c9:;
		if (it != expr.end()) {
			jule::I64 _43914_i = it - expr.begin();
			jule::Any _43921_a = *it;
			{
				_1acd68480_expr(_self_, _43921_a);
				if (((_43528_args.len() - _43914_i) > 1LL)) {
					_1acd978cc_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1bcd8e4c9:;
			++it;
			_43914_i++;
			goto _iter_begin_1bcd8e4c9;
		}
		_iter_end_1bcd8e4c9:;
	};
}



inline void _1acd605ba_modelForCall(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Any _44736_expr) {
	{
		auto &_match_expr{ _44736_expr };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bcd91344:;
			{
				_1acd63942_funcIns(_self_, _44736_expr.cast_ptr<_1abaa1d79_FnIns>(&__jule_any_type9));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bcd913bb:;
			{
				jule::Ptr<_1aba95697_StructSubIdentExprModel> _45321_ssie = _44736_expr.cast_ptr<_1aba95697_StructSubIdentExprModel>(&__jule_any_type73);;
				if ((_45321_ssie.get()._field_Method != nullptr)) {
					_1acd63942_funcIns(_self_, _45321_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1bcd9129a:;
	};
	_1acd6820a_model(_self_, _44736_expr);
}



inline void _1acd60840_pushCallInf(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba92c5a_FnCallExprModel>& _46232_m) {
	if ((_1d7c0a98a_Production || ((!(_46232_m.get()._field_Func.get()._field_Anon)) && (!(_1acd6a64c_isBuiltinCallHasDebuginf(_46232_m)))))) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_46232_m.get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ _46232_m.get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type73) {
				_case_begin_1bcd94611:;
				{
					if (_46232_m.get()._field_Expr.cast_ptr<_1aba95697_StructSubIdentExprModel>(&__jule_any_type73).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_1acd978cc_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1bcd947ed;
				}
			}
			else {
				_case_begin_1bcd947ed:;
				{
					_1acd978cc_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1bcd946aa:;
		};
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1ace16396_locInfo(_self_.get()._field_oc, _46232_m.get()._field_Token);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_46232_m.get()._field_Args.len() != 0LL)) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1acd60b4d_isWrapped(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba92c5a_FnCallExprModel>& _48734_m) {
	if ((((!(_1abaa3210_IsBuiltin(_48734_m.get()._field_Func.ptr()))) && (_48734_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1aba9ceb8_IsSelf(_48734_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _48734_m.get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type73) {
				_case_begin_1bcd983c3:;
				{
					jule::Ptr<_1aba95697_StructSubIdentExprModel> _49125_ssie = _48734_m.get()._field_Expr.cast_ptr<_1aba95697_StructSubIdentExprModel>(&__jule_any_type73);;
					{
						
						if (_1aba9d22c_IsRef(_48734_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1abcea0d3_Sptr(_49125_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1bcd98bba:;
							{
								goto _match_end_1bcd9925e;
							}
						}
						else {
							_case_begin_1bcd992c5:;
							{
								if ((_1abceb2c1_Struct(_49125_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_49125_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1acd978cc_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1acd6820a_model(_self_, _49125_ssie.get()._field_Expr.get()._field_Model);
										_1acd978cc_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1bcd9925e:;
					};
				}
			}
			_match_end_1bcd981b4:;
		};
	};
	return false;;
}



inline void _1acd60dc3_pureFuncCall(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba92c5a_FnCallExprModel>& _51137_m) {
	jule::Bool _51213_wrapped = _1acd60b4d_isWrapped(_self_, _51137_m);;
	_1acd605ba_modelForCall(_self_, _51137_m.get()._field_Expr);
	if ((!(_1abaa3210_IsBuiltin(_51137_m.get()._field_Func.ptr())))) {
		if ((_51137_m.get()._field_Func.get()._field_Decl.get()._field_CppLinked && (_51137_m.get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1ace28e14_hasDirective(_51137_m.get()._field_Func.get()._field_Decl.get()._field_Directives,jule::Str("cdef", 4))))) {
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _51137_m.get()._field_Func.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1bcd9ed25:;
					if (it != expr.end()) {
						jule::I64 _51826_i = it - expr.begin();
						jule::Ptr<_1abce62aa_InsGeneric> _51833_g = *it;
						{
							_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _51833_g.get()._field_Kind));
							if (((_51137_m.get()._field_Func.get()._field_Generics.len() - _51826_i) > 1LL)) {
								_1acd978cc_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1bcd9ed25:;
						++it;
						_51826_i++;
						goto _iter_begin_1bcd9ed25;
					}
					_iter_end_1bcd9ed25:;
				};
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1acd60840_pushCallInf(_self_, _51137_m);
	jule::Bool _52917_locinfo = false;;
	if ((((!(_1abaa3210_IsBuiltin(_51137_m.get()._field_Func.ptr()))) && (_51137_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1aba9ceb8_IsSelf(_51137_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _51137_m.get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type73) {
				_case_begin_1bcda3950:;
				{
					jule::Ptr<_1aba95697_StructSubIdentExprModel> _53325_ssie = _51137_m.get()._field_Expr.cast_ptr<_1aba95697_StructSubIdentExprModel>(&__jule_any_type73);;
					{
						
						if (_1aba9d22c_IsRef(_51137_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1bcda58ca:;
							{
								_1acd6820a_model(_self_, _53325_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1abcea0d3_Sptr(_53325_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1bcda62d2:;
							{
								_1acd6820a_model(_self_, _53325_ssie.get()._field_Expr.get()._field_Model);
								_1acd978cc_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_1d7c0a98a_Production))) {
									_1acd978cc_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1ace16396_locInfo(_self_.get()._field_oc, _51137_m.get()._field_Token);
									_1acd978cc_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1bcda48da:;
							{
								if ((_1abceb2c1_Struct(_53325_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1acd978cc_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_51213_wrapped) {
									_1acd978cc_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1acd6820a_model(_self_, _53325_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1bcda4874:;
					};
					if ((_51137_m.get()._field_Args.len() > 0LL)) {
						_1acd978cc_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type72) {
				_case_begin_1bcda39b6:;
				{
					_1acd6820a_model(_self_, _51137_m.get()._field_Expr.cast_ptr<_1aba94ce5_TraitSubIdentExprModel>(&__jule_any_type72).get()._field_Expr);
					if ((!(_1d7c0a98a_Production))) {
						_52917_locinfo=true;
					};
					if ((_51137_m.get()._field_Args.len() > 0LL)) {
						_1acd978cc_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1bcda3741:;
		};
	};
	_1acd60345_args(_self_, _51137_m.get()._field_Args);
	if (_52917_locinfo) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1ace16396_locInfo(_self_.get()._field_oc, _51137_m.get()._field_Token);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_51213_wrapped) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _1acd61148_coFuncCall(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba92c5a_FnCallExprModel>& _58335_m) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1acddb910_addIndent(_self_.get()._field_oc);
	jule::Str _58617_head = jule::Str("std::thread([", 13);;
	if ((_58335_m.get()._field_Func.get()._field_Owner != nullptr)) {
		_58617_head+=jule::Str("_self_", 6);
		if ((_58335_m.get()._field_Args.len() > 0LL)) {
			_58617_head+=jule::Str(", ", 2);
		};
	};
	{
		auto &expr = _58335_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1bcdb11aa:;
		if (it != expr.end()) {
			jule::I64 _59313_i = it - expr.begin();
			jule::Any _59316_arg = *it;
			{
				if ((_59313_i > 0LL)) {
					_58617_head+=jule::Str(", ", 2);
				};
				{
					auto &_match_expr{ _59316_arg };
					
					if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1bcdb30be:;
						{
							jule::Ptr<_1abc73ee6_Var> _59925_v = _59316_arg.cast_ptr<_1abc73ee6_Var>(&__jule_any_type10);;
							_58617_head+=static__1acd72214_var(_59925_v);
							goto _iter_next_1bcdb11aa;
						}
					}
					_match_end_1bcdb2871:;
				};
				jule::Str _60317_name = (jule::Str("_co_arg_", 8) + _1aba81485_Itoa(_59313_i));;
				_58617_head+=_60317_name;
				_1acde0480_indent(_self_.get()._field_oc);
				_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _58335_m.get()._field_Func.get()._field_Params[_59313_i].get()._field_Kind));
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if (_58335_m.get()._field_Func.get()._field_Params[_59313_i].get()._field_Decl.get()._field_Reference) {
					_1acd978cc_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_1acd978cc_write(_self_.get()._field_oc, _60317_name);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1acd68480_expr(_self_, _59316_arg);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _61517_argS = jule::Any(_60317_name, &__jule_any_type7);;
				_58335_m.get()._field_Args[_59313_i]=(*(((jule::Any*)((&(_61517_argS))))));
			}
			_iter_next_1bcdb11aa:;
			++it;
			_59313_i++;
			goto _iter_begin_1bcdb11aa;
		}
		_iter_end_1bcdb11aa:;
	};
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, _58617_head);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1acddb910_addIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd60dc3_pureFuncCall(_self_, _58335_m);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1acddbe2c_doneIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_1acddbe2c_doneIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1acd61467_writeUseExpr(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1abaa1d79_FnIns>& _63337_f, jule::Ptr<_1abcbba55_Data> _63352_d) {
	if ((_1abceba0d_Tup(_63352_d.get()._field_Kind.ptr()) == nullptr)) {
		_1acd68480_expr(_self_, _63352_d.get()._field_Model);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_1aba96a50_TupleExprModel> _63917_tup = _63352_d.get()._field_Model.cast_ptr<_1aba96a50_TupleExprModel>(&__jule_any_type90);;
	_1ace26780_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_1abceba0d_Tup(_63337_f.get()._field_Result.ptr()));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto &expr = _63917_tup.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1bcdbe493:;
		if (it != expr.end()) {
			jule::I64 _64213_i = it - expr.begin();
			jule::Ptr<_1abcbba55_Data> _64216_data = *it;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_1acd978cc_write(_self_.get()._field_oc, _1aba81485_Itoa(_64213_i));
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("=", 1));
				_1acd68480_expr(_self_.get()._field_oc.get()._field_ec, _64216_data.get()._field_Model);
				if (((_63917_tup.get()._field_Datas.len() - _64213_i) > 1LL)) {
					_1acd978cc_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_1bcdbe493:;
			++it;
			_64213_i++;
			goto _iter_begin_1bcdbe493;
		}
		_iter_end_1bcdbe493:;
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _1acd616dc_funcCall(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba92c5a_FnCallExprModel> _65432_m) {
	if (_65432_m.get()._field_IsCo) {
		_1acd61148_coFuncCall(_self_, _65432_m);
		return;;
	};
	if (((_1abaa3210_IsBuiltin(_65432_m.get()._field_Func.ptr()) || (!(_65432_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_65432_m.get()._field_Except != nullptr) && (_65432_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1acd60dc3_pureFuncCall(_self_, _65432_m);
		return;;
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1acddb910_addIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1acd60dc3_pureFuncCall(_self_, _65432_m);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1acde0480_indent(_self_.get()._field_oc);
	if ((_65432_m.get()._field_Except != nullptr)) {
		if (((_65432_m.get()._field_Func.get()._field_Result == nullptr) || (!(_65432_m.get()._field_Assigned)))) {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1acd593a5_scope(_self_.get()._field_oc.get()._field_sc, _65432_m.get()._field_Except);
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _68021_forwarded = _1acd6a383_isForwarded(_65432_m.get()._field_Except);;
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_68021_forwarded) {
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _68525_stmt = _65432_m.get()._field_Except.get()._field_Stmts[(_65432_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _68525_stmt };
				
				if (_match_expr.type == &__jule_any_type25) {
					_case_begin_1bcdc9767:;
					{
						_65432_m.get()._field_Except.get()._field_Stmts=_65432_m.get()._field_Except.get()._field_Stmts.slice(0LL,(_65432_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_1acd978cc_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_1acddb910_addIndent(_self_.get()._field_oc);
						_1acd59130_scopeStmts(_self_.get()._field_oc.get()._field_sc, _65432_m.get()._field_Except);
						_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1acde0480_indent(_self_.get()._field_oc);
						_1acd61467_writeUseExpr(_self_, _65432_m.get()._field_Func,_68525_stmt.cast_ptr<_1abcbba55_Data>(&__jule_any_type25));
						_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1acddbe2c_doneIndent(_self_.get()._field_oc);
						_1acde0480_indent(_self_.get()._field_oc);
						_1acd978cc_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_1bcdca13b:;
					{
						_1acd593a5_scope(_self_.get()._field_oc.get()._field_sc, _65432_m.get()._field_Except);
					}
				}
				_match_end_1bcdca0d6:;
			};
			if (_68021_forwarded) {
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1acd6897a_initExpr(_self_, _65432_m.get()._field_Func.get()._field_Result);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1acd978cc_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1acddbe2c_doneIndent(_self_.get()._field_oc);
	} else {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1ace16396_locInfo(_self_.get()._field_oc, _65432_m.get()._field_Token);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1aba9e63a_IsVoid(_65432_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1acde0480_indent(_self_.get()._field_oc);
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1acddbe2c_doneIndent(_self_.get()._field_oc);
	};
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1acd61962_slice(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba93112_SliceExprModel> _72529_m) {
	if ((_72529_m.get()._field_Elems.len() == 0LL)) {
		_1acd978cc_write(_self_.get()._field_oc, _1ace1e877_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _72529_m.get()._field_ElemKind));
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1acd978cc_write(_self_.get()._field_oc, _1ace1e877_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _72529_m.get()._field_ElemKind));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1acd60345_args(_self_, _72529_m.get()._field_Elems);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1acd61bd7_indexing(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba93585_IndexingExprModel> _73732_m) {
	_1acd6820a_model(_self_, _73732_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_1d7c0a98a_Production || (_1abcea347_Ptr(_73732_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1abceb799_Map(_73732_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1acd6a87d_isExprComesFromBind(_73732_m.get()._field_Expr)) {
			_case_begin_1bcdd6e8e:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1acd68480_expr(_self_, _73732_m.get()._field_Index.get()._field_Model);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1bcdd7742:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1ace16396_locInfo(_self_.get()._field_oc, _73732_m.get()._field_Token);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1acd68480_expr(_self_, _73732_m.get()._field_Index.get()._field_Model);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1bcdd76cb:;
	};
}



inline void _1acd61e5c_unsafeIndexing(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1a97dda1e_UnsafeIndexingExprModel> _75738_m) {
	_1acd6820a_model(_self_, _75738_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_1d7c0a98a_Production || (_1abcea347_Ptr(_75738_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1abceb799_Map(_75738_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcddb724:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1acd68480_expr(_self_, _75738_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1bcddc071:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1acd68480_expr(_self_, _75738_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1bcddc00a:;
	};
}



inline void _1acd621d2_anonFunc(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba9393c_AnonFnExprModel> _77432_m) {
	_1acd978cc_write(_self_.get()._field_oc, _1ace2234c_func(_self_.get()._field_oc.get()._field_tc.ptr(), _77432_m.get()._field_Func));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1ace1850d_paramsIns(_self_.get()._field_oc, _77432_m.get()._field_Func.get()._field_Params);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1ace21c31_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_oc.get()._field_Obj,_77432_m.get()._field_Func);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1acd5962a_funcScope(_self_.get()._field_oc.get()._field_sc, _77432_m.get()._field_Func);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd62457_mapExpr(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba94267_MapExprModel> _78531_m) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _78531_m.get()._field_KeyKind));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _78531_m.get()._field_ValKind));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_78531_m.get()._field_Entries.len() > 0LL)) {
		{
			auto &expr = _78531_m.get()._field_Entries;
			auto it = expr.begin();
			_iter_begin_1bcdeb316:;
			if (it != expr.end()) {
				jule::I64 _79218_i = it - expr.begin();
				jule::Ptr<_1aba93ce4_KeyValPairExprModel> _79225_pair = *it;
				{
					_1acd978cc_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1acd68480_expr(_self_, _79225_pair.get()._field_Key);
					_1acd978cc_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1acd68480_expr(_self_, _79225_pair.get()._field_Val);
					_1acd978cc_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_78531_m.get()._field_Entries.len() - _79218_i) > 1LL)) {
						_1acd978cc_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1bcdeb316:;
				++it;
				_79218_i++;
				goto _iter_begin_1bcdeb316;
			}
			_iter_end_1bcdeb316:;
		};
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1acd626cc_slicing(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba947a6_SlicingExprModel> _80631_m) {
	_1acd6820a_model(_self_, _80631_m.get()._field_Expr);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_1d7c0a98a_Production))) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1ace16396_locInfo(_self_.get()._field_oc, _80631_m.get()._field_Token);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1acd68480_expr(_self_, _80631_m.get()._field_Left);
	if ((_80631_m.get()._field_Right != nullptr)) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1acd68480_expr(_self_, _80631_m.get()._field_Right);
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd62952_traitSub(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba94ce5_TraitSubIdentExprModel> _82232_m) {
	_1acd978cc_write(_self_.get()._field_oc, static__1acd713de_traitDecl(_82232_m.get()._field_Trt));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1acd6820a_model(_self_, _82232_m.get()._field_Expr);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1acd978cc_write(_self_.get()._field_oc, static__1acd70da0_func(_82232_m.get()._field_Method));
}



inline void _1acd62bc7_structureSub(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba95697_StructSubIdentExprModel> _83136_m) {
	_1acd6820a_model(_self_, _83136_m.get()._field_Expr.get()._field_Model);
	if ((_83136_m.get()._field_Field != nullptr)) {
		if ((_1abcea347_Ptr(_83136_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1abcea0d3_Sptr(_83136_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_1d7c0a98a_Production))) {
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1ace16396_locInfo(_self_.get()._field_oc, _83136_m.get()._field_Token);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1acd978cc_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1acd978cc_write(_self_.get()._field_oc, static__1acd71e6c_field(_83136_m.get()._field_Field.get()._field_Decl));
	};
}



inline void _1acd62e4c_commonIdent(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba961e2_CommonIdentExprModel> _85131_m) {
	_1acd978cc_write(_self_.get()._field_oc, _85131_m.get()._field_Ident);
}



inline void _1acd631c2_commonSub(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba96753_CommonSubIdentExprModel> _85533_m) {
	_1acd6820a_model(_self_, _85533_m.get()._field_Expr);
	{
		
		if ((_1abcea347_Ptr(_85533_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1bce0a754:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1abcea0d3_Sptr(_85533_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1bce0ae80:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_1d7c0a98a_Production))) {
					_1acd978cc_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1ace16396_locInfo(_self_.get()._field_oc, _85533_m.get()._field_Token);
					_1acd978cc_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1bce0ae19:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1bce0ada3:;
	};
	_1acd978cc_write(_self_.get()._field_oc, _85533_m.get()._field_Ident);
}



inline void _1acd63447_array(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba95e06_ArrayExprModel> _87429_m) {
	_1acd978cc_write(_self_.get()._field_oc, _1ace20ed8_array(_self_.get()._field_oc.get()._field_tc.ptr(), _87429_m.get()._field_Kind));
	if ((_87429_m.get()._field_Elems.len() == 0LL)) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_87429_m.get()._field_Elems.len() == 2LL) && (_87429_m.get()._field_Elems[1LL] == nullptr))) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1acd68480_expr(_self_, _87429_m.get()._field_Elems[0LL]);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1acd60345_args(_self_, _87429_m.get()._field_Elems);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1acd636bc_funcInsCommon(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1abaa1d79_FnIns> _89737_m) {
	_1acd978cc_write(_self_.get()._field_oc, _1ace2234c_func(_self_.get()._field_oc.get()._field_tc.ptr(), _89737_m));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1acd63942_funcIns(_self_, _89737_m);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd63942_funcIns(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1abaa1d79_FnIns> _90431_m) {
	if (((_90431_m.get()._field_Decl != nullptr) && _90431_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_1ab03a720_Directive> _90617_d = _1ace28a7e_findDirective(_90431_m.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_90617_d != nullptr)) {
			_1acd978cc_write(_self_.get()._field_oc, _1ace1ab4d_concatAllParts(_90617_d.get()._field_Args));
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1acd978cc_write(_self_.get()._field_oc, static__1acd71147_funcIns(_90431_m));
}



inline void _1acd63bb7_tuple(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba96a50_TupleExprModel> _91529_m) {
	{
		auto &expr = _91529_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1bce18740:;
		if (it != expr.end()) {
			jule::I64 _91614_i = it - expr.begin();
			jule::Ptr<_1abcbba55_Data> _91621_d = *it;
			{
				_1acd68480_expr(_self_, _91621_d.get()._field_Model);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_91529_m.get()._field_Datas.len() - _91614_i) > 1LL)) {
					_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1acde0480_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_1bce18740:;
			++it;
			_91614_i++;
			goto _iter_begin_1bce18740;
		}
		_iter_end_1bce18740:;
	};
}



inline void _1acd63e3c_newCall(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba97a1d_BuiltinNewCallExprModel> _92631_m) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _92631_m.get()._field_Kind));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_92631_m.get()._field_Init != nullptr)) {
		_1acd68480_expr(_self_, _92631_m.get()._field_Init);
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd641b2_outCall(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba96e29_BuiltinOutCallExprModel> _93631_m) {
	if ((_93631_m.get()._field_Debug && _1d7c0a98a_Production)) {
		return;;
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1acd68480_expr(_self_, _93631_m.get()._field_Expr);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd64437_outlnCall(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba97314_BuiltinOutlnCallExprModel> _94533_m) {
	if ((_94533_m.get()._field_Debug && _1d7c0a98a_Production)) {
		return;;
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1acd68480_expr(_self_, _94533_m.get()._field_Expr);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd646ac_panicCall(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba97e08_BuiltinPanicCallExprModel> _95433_m) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1acd68480_expr(_self_, _95433_m.get()._field_Expr);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1ace16396_locInfo(_self_.get()._field_oc, _95433_m.get()._field_Token);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1acd64932_assertCall(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba983ae_BuiltinAssertCallExprModel> _96234_m) {
	if (_1d7c0a98a_Production) {
		return;;
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1acd68480_expr(_self_, _96234_m.get()._field_Expr);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1acd978cc_write(_self_.get()._field_oc, _1acd6967e_cstrLit(static_cast<jule::Slice<jule::U8>>(_96234_m.get()._field_Log)));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1ace16396_locInfo(_self_.get()._field_oc, _96234_m.get()._field_Token);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1acd64ba7_errorCall(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba9a290_BuiltinErrorCallExprModel> _97533_m) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1aba9e63a_IsVoid(_97533_m.get()._field_Func.get()._field_Decl.ptr())) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1ace26dbd_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_97533_m.get()._field_Func.get()._field_Result);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_1acd68480_expr(_self_, _97533_m.get()._field_Err.get()._field_Model);
	jule::I64 _98513_i = _1acd9beca_pushAnyType(_self_.get()._field_oc, _97533_m.get()._field_Err.get()._field_Kind);;
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_1acd978cc_write(_self_.get()._field_oc, _1aba81485_Itoa(_98513_i));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1acd64e2c_copyCall(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba99da5_BuiltinCopyCallExprModel> _99132_m) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1acd6820a_model(_self_, _99132_m.get()._field_Dest.get()._field_Model);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1abce9d6e_Prim(_99132_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1acd6820a_model(_self_, _99132_m.get()._field_Src.get()._field_Model);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1abce9d6e_Prim(_99132_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd651a2_lenCall(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba9906e_BuiltinLenCallExprModel> _100731_m) {
	_1acd6820a_model(_self_, _100731_m.get()._field_Expr.get()._field_Model);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1acd65427_capCall(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba9938d_BuiltinCapCallExprModel> _101231_m) {
	_1acd6820a_model(_self_, _101231_m.get()._field_Expr.get()._field_Model);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1acd6569c_deleteCall(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba99a42_BuiltinDeleteCallExprModel> _101734_m) {
	_1acd6820a_model(_self_, _101734_m.get()._field_Dest.get()._field_Model);
	if ((_101734_m.get()._field_Key != nullptr)) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_1acd6820a_model(_self_, _101734_m.get()._field_Key.get()._field_Model);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1acd65922_makeCallSlice(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba98865_BuiltinMakeCallExprModel>& _102838_m) {
	jule::Ptr<_1abd01925_Slc> _102917_slice = _1abceace8_Slc(_102838_m.get()._field_Kind.ptr());;
	_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _102838_m.get()._field_Kind));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1acd68480_expr(_self_, _102838_m.get()._field_Len);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if ((_102838_m.get()._field_Cap != nullptr)) {
		_1acd68480_expr(_self_, _102838_m.get()._field_Cap);
	} else {
		_1acd68480_expr(_self_, _102838_m.get()._field_Len);
	};
	if (_1ace291ab_shouldInitialized(_102917_slice.get()._field_Elem)) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1acd6897a_initExpr(_self_, _102917_slice.get()._field_Elem);
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd65b97_makeCallStr(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba98865_BuiltinMakeCallExprModel>& _104636_m) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1acd68480_expr(_self_, _104636_m.get()._field_Len);
	if ((_104636_m.get()._field_Cap != nullptr)) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1acd68480_expr(_self_, _104636_m.get()._field_Cap);
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd65e1c_makeCall(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba98865_BuiltinMakeCallExprModel> _105732_m) {
	if ((_1abceace8_Slc(_105732_m.get()._field_Kind.ptr()) != nullptr)) {
		_1acd65922_makeCallSlice(_self_, _105732_m);
		return;;
	};
	_1acd65b97_makeCallStr(_self_, _105732_m);
}



inline void _1acd66192_pushToSlice(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1a9791384_PushToSliceExprModel> _106535_m) {
	jule::I64 _106613_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1acd6820a_model(_self_, _106535_m.get()._field_Dest);
	jule::Str _106813_dest = _self_.get()._field_oc.get()._field_Obj.slice(_106613_n);;
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1acd978cc_write(_self_.get()._field_oc, _106813_dest);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1acd978cc_write(_self_.get()._field_oc, _1aba81485_Itoa(static_cast<jule::I64>(_106535_m.get()._field_Elems.get()._field_Elems.len())));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _106535_m.get()._field_Elems.get()._field_Elems;
		auto it = expr.begin();
		_iter_begin_1bce3e1d3:;
		if (it != expr.end()) {
			jule::Any _107521_e = *it;
			{
				_1acd978cc_write(_self_.get()._field_oc, _106813_dest);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1acd6820a_model(_self_, _107521_e);
				_1acd978cc_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1bce3e1d3:;
			++it;
			goto _iter_begin_1bce3e1d3;
		}
		_iter_end_1bce3e1d3:;
	};
}



inline void _1acd66417_appendCall(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba98c50_BuiltinAppendCallExprModel> _108434_m) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1acd6820a_model(_self_, _108434_m.get()._field_Dest);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1acd6820a_model(_self_, _108434_m.get()._field_Elements);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd6668c_cloneCall(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba97633_BuiltinCloneCallExprModel> _109233_m) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1acd6820a_model(_self_, _109233_m.get()._field_Expr);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd66912_sizeof(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba9a58c_SizeofExprModel> _109830_m) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1acd6820a_model(_self_, _109830_m.get()._field_Expr);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd66b87_alignof(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba9a878_AlignofExprModel> _110431_m) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1acd6820a_model(_self_, _110431_m.get()._field_Expr);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1acd66e95_runeLit(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba9ab64_RuneExprModel> _111027_m) {
	if ((_111027_m.get()._field_Code <= 127LL)) {
		jule::Str _111221_b = _1acd690b8_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_111027_m.get()._field_Code)));;
		if ((_111221_b == jule::Str("'", 1))) {
			_111221_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _111221_b) + jule::Str("'", 1));;
	};
	return _1acd69c34_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_111027_m.get()._field_Code)));;
}



inline void _1acd6721a_structureStatic(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba95a3d_StructStaticIdentExprModel> _112139_m) {
	_1acd978cc_write(_self_.get()._field_oc, static__1acd71147_funcIns(_112139_m.get()._field_Method));
}



inline void _1acd67490_integratedToStr(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba9ae72_IntegratedToStrExprModel> _112539_m) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1acd6820a_model(_self_, _112539_m.get()._field_Expr);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1acd67715_backendEmit(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba9b33a_BackendEmitExprModel> _113135_m) {
	if ((_113135_m.get()._field_Exprs.len() == 0LL)) {
		_1acd978cc_write(_self_.get()._field_oc, _113135_m.get()._field_Code);
		return;;
	};
	jule::I64 _113613_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _113717_args = jule::Slice<jule::Any>::alloc(_113135_m.get()._field_Exprs.len(), _113135_m.get()._field_Exprs.len());;
	{
		auto &expr = _113135_m.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1bce4a035:;
		if (it != expr.end()) {
			jule::I64 _113814_i = it - expr.begin();
			jule::Any _113821_expr = *it;
			{
				_1acd68480_expr(_self_, _113821_expr);
				_113717_args[_113814_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_113613_n), &__jule_any_type7);
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL,_113613_n);
			}
			_iter_next_1bce4a035:;
			++it;
			_113814_i++;
			goto _iter_begin_1bce4a035;
		}
		_iter_end_1bce4a035:;
	};
	_1acd978cc_write(_self_.get()._field_oc, _1abda87ac_Format(_113135_m.get()._field_Code,_113717_args));
}



inline void _1acd6798a_free(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1aba9b626_FreeExprModel> _114628_m) {
	_1acd68480_expr(_self_, _114628_m.get()._field_Expr);
	if (_1d7c0a2e7_RC) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1acd67c10_mutSlicing(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1a9cd418a_MutSlicingExprModel> _115534_m) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1acd6820a_model(_self_, _115534_m.get()._field_Expr);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_1d7c0a98a_Production))) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1ace16396_locInfo(_self_.get()._field_oc, _115534_m.get()._field_Token);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1acd68480_expr(_self_, _115534_m.get()._field_Left);
	if ((_115534_m.get()._field_Right != nullptr)) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1acd68480_expr(_self_, _115534_m.get()._field_Right);
	};
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1acd67e85_strInsertBegin(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1a9e8e1e1_StrInsertBeginExprModel> _117238_m) {
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1acd6820a_model(_self_, _117238_m.get()._field_Dest);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1acd6820a_model(_self_, _117238_m.get()._field_Expr);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1acd6820a_model(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Any _118029_m) {
	{
		auto &_match_expr{ _118029_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bce55a24:;
			{
				_1acd978cc_write(_self_.get()._field_oc, _118029_m.cast<jule::Str>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1bce55cee:;
			{
				_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _118029_m.cast_ptr<_1abce79d7_TypeKind>(&__jule_any_type92)));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1bce55d65:;
			{
				_1acd5d71c_constant(_self_, _118029_m.cast_ptr<_1aba86b94_Const>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bce55dcb:;
			{
				_1acd5e355_var(_self_, _118029_m.cast_ptr<_1abc73ee6_Var>(&__jule_any_type10));
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1bce55e42:;
			{
				_1acd5e5ca_structureIns(_self_, _118029_m.cast_ptr<_1ab08a583_StructIns>(&__jule_any_type11));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bce5696a:;
			{
				_1acd636bc_funcInsCommon(_self_, _118029_m.cast_ptr<_1abaa1d79_FnIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1bce569d1:;
			{
				_1acd5dd5a_unsafeBinary(_self_, _118029_m.cast_ptr<_1a9750e7b_UnsafeBinopExprModel>(&__jule_any_type131).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bce56a47:;
			{
				_1acd5e0d0_binary(_self_, _118029_m.cast_ptr<_1aba90de0_BinopExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bce56aad:;
			{
				_1acd5e850_unary(_self_, _118029_m.cast_ptr<_1aba91297_UnaryExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1bce56b24:;
			{
				_1acd5eac5_structureLit(_self_, _118029_m.cast_ptr<_1aba91a4a_StructLitExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1bce56b8a:;
			{
				_1acd5ed4a_allocStructure(_self_, _118029_m.cast_ptr<_1aba91d58_AllocStructLitExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1bce56c01:;
			{
				_1acd600c0_casting(_self_, _118029_m.cast_ptr<_1aba923a8_CastingExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bce56c67:;
			{
				_1acd616dc_funcCall(_self_, _118029_m.cast_ptr<_1aba92c5a_FnCallExprModel>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1bce56ccd:;
			{
				_1acd61962_slice(_self_, _118029_m.cast_ptr<_1aba93112_SliceExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1bce56d44:;
			{
				_1acd63447_array(_self_, _118029_m.cast_ptr<_1aba95e06_ArrayExprModel>(&__jule_any_type93));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1bce56daa:;
			{
				_1acd61e5c_unsafeIndexing(_self_, _118029_m.cast_ptr<_1a97dda1e_UnsafeIndexingExprModel>(&__jule_any_type132));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bce56e21:;
			{
				_1acd61bd7_indexing(_self_, _118029_m.cast_ptr<_1aba93585_IndexingExprModel>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1bce56e98:;
			{
				_1acd621d2_anonFunc(_self_, _118029_m.cast_ptr<_1aba9393c_AnonFnExprModel>(&__jule_any_type107));
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1bce57020:;
			{
				_1acd62457_mapExpr(_self_, _118029_m.cast_ptr<_1aba94267_MapExprModel>(&__jule_any_type106));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1bce57097:;
			{
				_1acd626cc_slicing(_self_, _118029_m.cast_ptr<_1aba947a6_SlicingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1bce5711e:;
			{
				_1acd62952_traitSub(_self_, _118029_m.cast_ptr<_1aba94ce5_TraitSubIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bce57196:;
			{
				_1acd62bc7_structureSub(_self_, _118029_m.cast_ptr<_1aba95697_StructSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1bce5721d:;
			{
				_1acd62e4c_commonIdent(_self_, _118029_m.cast_ptr<_1aba961e2_CommonIdentExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1bce57295:;
			{
				_1acd631c2_commonSub(_self_, _118029_m.cast_ptr<_1aba96753_CommonSubIdentExprModel>(&__jule_any_type75));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1bce5731c:;
			{
				_1acd63bb7_tuple(_self_, _118029_m.cast_ptr<_1aba96a50_TupleExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1bce57394:;
			{
				_1acd641b2_outCall(_self_, _118029_m.cast_ptr<_1aba96e29_BuiltinOutCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bce5741b:;
			{
				_1acd64437_outlnCall(_self_, _118029_m.cast_ptr<_1aba97314_BuiltinOutlnCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1bce57493:;
			{
				_1acd63e3c_newCall(_self_, _118029_m.cast_ptr<_1aba97a1d_BuiltinNewCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1bce5751a:;
			{
				_1acd646ac_panicCall(_self_, _118029_m.cast_ptr<_1aba97e08_BuiltinPanicCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1bce57592:;
			{
				_1acd64932_assertCall(_self_, _118029_m.cast_ptr<_1aba983ae_BuiltinAssertCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bce57619:;
			{
				_1acd64ba7_errorCall(_self_, _118029_m.cast_ptr<_1aba9a290_BuiltinErrorCallExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1bce57691:;
			{
				_1acd65e1c_makeCall(_self_, _118029_m.cast_ptr<_1aba98865_BuiltinMakeCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bce57718:;
			{
				_1acd66417_appendCall(_self_, _118029_m.cast_ptr<_1aba98c50_BuiltinAppendCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1bce57790:;
			{
				_1acd6668c_cloneCall(_self_, _118029_m.cast_ptr<_1aba97633_BuiltinCloneCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1bce57817:;
			{
				_1acd64e2c_copyCall(_self_, _118029_m.cast_ptr<_1aba99da5_BuiltinCopyCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1bce5788e:;
			{
				_1acd651a2_lenCall(_self_, _118029_m.cast_ptr<_1aba9906e_BuiltinLenCallExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1bce57916:;
			{
				_1acd65427_capCall(_self_, _118029_m.cast_ptr<_1aba9938d_BuiltinCapCallExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bce5798d:;
			{
				_1acd6569c_deleteCall(_self_, _118029_m.cast_ptr<_1aba99a42_BuiltinDeleteCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1bce57a15:;
			{
				_1acd66912_sizeof(_self_, _118029_m.cast_ptr<_1aba9a58c_SizeofExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1bce57a8c:;
			{
				_1acd66b87_alignof(_self_, _118029_m.cast_ptr<_1aba9a878_AlignofExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bce57b14:;
			{
				_1acd978cc_write(_self_.get()._field_oc, _1acd66e95_runeLit(_self_, _118029_m.cast_ptr<_1aba9ab64_RuneExprModel>(&__jule_any_type91)));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1bce57b8b:;
			{
				_1acd6721a_structureStatic(_self_, _118029_m.cast_ptr<_1aba95a3d_StructStaticIdentExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1bce57c13:;
			{
				_1acd67490_integratedToStr(_self_, _118029_m.cast_ptr<_1aba9ae72_IntegratedToStrExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bce57c8a:;
			{
				_1acd67715_backendEmit(_self_, _118029_m.cast_ptr<_1aba9b33a_BackendEmitExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bce57d12:;
			{
				_1acd6798a_free(_self_, _118029_m.cast_ptr<_1aba9b626_FreeExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1bce57d89:;
			{
				_1acd67c10_mutSlicing(_self_, _118029_m.cast_ptr<_1a9cd418a_MutSlicingExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1bce57e11:;
			{
				_1acd67e85_strInsertBegin(_self_, _118029_m.cast_ptr<_1a9e8e1e1_StrInsertBeginExprModel>(&__jule_any_type129));
			}
		}
		else {
			_case_begin_1bce55b9a:;
			{
				_1acd978cc_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1bce55abd:;
	};
}



inline void _1acd68480_expr(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Any _128128_e) {
	_1acd6820a_model(_self_, _128128_e);
}



inline void _1acd68705_val(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1abcbcacd_Value> _128527_v) {
	if (_1abcbc418_IsConst(_128527_v.get()._field_Data.ptr())) {
		_1acd5d71c_constant(_self_, _128527_v.get()._field_Data.get()._field_Constant);
		return;;
	};
	_1acd68480_expr(_self_, _128527_v.get()._field_Data.get()._field_Model);
}



inline void _1acd6897a_initExpr(jule::Ptr<_1acd5c0bc_exprCoder> _self_, jule::Ptr<_1abce79d7_TypeKind> _129332_t) {
	if (_1abce93bd_NilCompatible(_129332_t.ptr())) {
		if ((_1abcea347_Ptr(_129332_t.ptr()) != nullptr)) {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _129332_t));
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1abd024a3_Tuple> _130317_tup = _1abceba0d_Tup(_129332_t.ptr());;
	if ((_130317_tup != nullptr)) {
		_1ace26780_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_130317_tup);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto &expr = _130317_tup.get()._field_Types;
			auto it = expr.begin();
			_iter_begin_1bce750c6:;
			if (it != expr.end()) {
				jule::I64 _130718_i = it - expr.begin();
				jule::Ptr<_1abce79d7_TypeKind> _130725_tt = *it;
				{
					if ((!(_1ace291ab_shouldInitialized(_130725_tt)))) {
						goto _iter_next_1bce750c6;
					};
					_1acd978cc_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_1acd978cc_write(_self_.get()._field_oc, _1aba81485_Itoa(_130718_i));
					_1acd978cc_write(_self_.get()._field_oc, jule::Str("=", 1));
					_1acd6897a_initExpr(_self_, _130725_tt);
					if (((_130317_tup.get()._field_Types.len() - _130718_i) > 1LL)) {
						_1acd978cc_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_1bce750c6:;
				++it;
				_130718_i++;
				goto _iter_begin_1bce750c6;
			}
			_iter_end_1bce750c6:;
		};
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_1abab3220_Enum> _132217_enm = _1abcea5ab_Enum(_129332_t.ptr());;
	if ((_132217_enm != nullptr)) {
		_1acd68705_val(_self_, _132217_enm.get()._field_Items[0LL].get()._field_Value);
		return;;
	};
	jule::Ptr<_1abcec734_Prim> _132713_prim = _1abce9d6e_Prim(_129332_t.ptr());;
	if ((_132713_prim != nullptr)) {
		if (_1aba86930_IsNum(_132713_prim.get()._field_Kind)) {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_1abd00704_IsBool(_132713_prim.ptr())) {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_1abd00968_IsStr(_132713_prim.ptr())) {
			_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_1abceaa84_Arr(_129332_t.ptr()) != nullptr)) {
		jule::Ptr<_1abd03ac0_Arr> _133921_arr = _1abceaa84_Arr(_129332_t.ptr());;
		_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _129332_t));
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1acd6897a_initExpr(_self_, _133921_arr.get()._field_Elem);
		_1acd978cc_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_1ab08a583_StructIns> _134617_s = _1abceb2c1_Struct(_129332_t.ptr());;
	if ((((_134617_s != nullptr) && _134617_s.get()._field_Decl.get()._field_CppLinked) && (_1ace28a7e_findDirective(_134617_s.get()._field_Decl.get()._field_Directives,jule::Str("typedef", 7)) == nullptr))) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _129332_t));
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1acd978cc_write(_self_.get()._field_oc, _1ace2265a_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _129332_t));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1acd5c0bc_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1acd6b230_deriveCoder> static__1acd6b609_new(jule::Ptr<_1ace15c9c_ObjectCoder> _1223_oc) {
	return jule::new_ptr<_1acd6b230_deriveCoder>(_1acd6b230_deriveCoder{._field_oc=_1223_oc});;
}



inline jule::Str _1acd6b917_cloneFuncDecl(_1acd6b230_deriveCoder* _self_, jule::Ptr<_1ab08a1a9_Struct>& _1633_s) {
	jule::Str _1717_obj = _1ace208bc_structure((*_self_)._field_oc.get()._field_tc.ptr(), _1633_s);;
	_1717_obj+=jule::Str(" clone(void) const ", 19);
	return _1717_obj;;
}



inline jule::Str _1acd6bc25_cloneFuncDef(_1acd6b230_deriveCoder* _self_, jule::Ptr<_1ab08a1a9_Struct>& _2232_s) {
	jule::Str _2317_obj = _1ace208bc_structure((*_self_)._field_oc.get()._field_tc.ptr(), _2232_s);;
	_2317_obj+=(jule::Str(" ", 1) + _2317_obj);
	_2317_obj+=jule::Str("::clone(void) const ", 20);
	return _2317_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd6b230_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1acd6cb05_TestCoder> static__1acd6d078_New(jule::Ptr<_1ace15c9c_ObjectCoder>& _2824_oc) {
	return jule::new_ptr<_1acd6cb05_TestCoder>(_1acd6cb05_TestCoder{._field_oc=_2824_oc});;
}



inline jule::Ptr<_1abc4cd9e_ImportInfo> _1acd6d2dc_findTestingPackage(jule::Ptr<_1acd6cb05_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1bce841c3:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_LinkPath == jule::Str("std::testing", 12))) {
					return _3521_imp;;
				};
			}
			_iter_next_1bce841c3:;
			++it;
			goto _iter_begin_1bce841c3;
		}
		_iter_end_1bce841c3:;
	};
	return nullptr;;
}



inline void _1acd6d562_appendTest(jule::Ptr<_1acd6cb05_TestCoder> _self_, jule::Ptr<_1abaa1d79_FnIns> _4334_f) {
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd6dc27_callTmReset(_self_);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1acd978cc_write(_self_.get()._field_oc, _1acd6967e_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, static__1acd71147_funcIns(_4334_f));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1acd6d7d7_appendPackageTests(jule::Ptr<_1acd6cb05_TestCoder> _self_, jule::Ptr<_1abc50d08_Package>& _6043_p) {
	{
		auto &expr = _6043_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bce899e2:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1bce8a33e:;
					if (it != expr.end()) {
						jule::Ptr<_1aba9e1c8_Fn> _6225_f = *it;
						{
							if (_1ace28e14_hasDirective(_6225_f.get()._field_Directives,jule::Str("test", 4))) {
								_1acd6d562_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1bce8a33e:;
						++it;
						goto _iter_begin_1bce8a33e;
					}
					_iter_end_1bce8a33e:;
				};
			}
			_iter_next_1bce899e2:;
			++it;
			goto _iter_begin_1bce899e2;
		}
		_iter_end_1bce899e2:;
	};
}



inline jule::Bool _1acd6da4b_readyTestingPackage(jule::Ptr<_1acd6cb05_TestCoder> _self_) {
	jule::Ptr<_1abc4cd9e_ImportInfo> _7117_p = _1acd6d2dc_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_1abc4e2e0_FindStruct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1ab0656b2_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tmFailed=_1ab0656b2_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6),false);
	_self_.get()._field_tmSkipped=_1ab0656b2_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7),false);
	return true;;
}



inline void _1acd6dc27_callTmReset(jule::Ptr<_1acd6cb05_TestCoder> _self_) {
	_1acd978cc_write(_self_.get()._field_oc, static__1acd70da0_func(_self_.get()._field_tmReset));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1acd6de03_callTmFailed(jule::Ptr<_1acd6cb05_TestCoder> _self_) {
	_1acd978cc_write(_self_.get()._field_oc, static__1acd70da0_func(_self_.get()._field_tmFailed));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1acd6e0ce_callTmSkipped(jule::Ptr<_1acd6cb05_TestCoder> _self_) {
	_1acd978cc_write(_self_.get()._field_oc, static__1acd70da0_func(_self_.get()._field_tmSkipped));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1acd6e2aa_Serialize(jule::Ptr<_1acd6cb05_TestCoder> _self_) {
	_1ace1a323_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1ace1a147_end(_self_.get()._field_oc);
	});;
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1acddb910_addIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	if ((!(_1acd6da4b_readyTestingPackage(_self_)))) {
		_1acd978cc_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1acddbe2c_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1acd978cc_write(_self_.get()._field_oc, _1ace1d524_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _1ace20bca_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1acd978cc_write(_self_.get()._field_oc, _1ace20bca_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1acddb910_addIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1acd6de03_callTmFailed(_self_);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1acd6e0ce_callTmSkipped(_self_);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1acddbe2c_doneIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1acd6d7d7_appendPackageTests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_Main);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1acddbe2c_doneIndent(_self_.get()._field_oc);
	_1acde0480_indent(_self_.get()._field_oc);
	_1acd978cc_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1acd6cb05_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1acd7071d_toOut(jule::Str& _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1aba81221_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3322_ident;
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, (_3322_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3322_ident;
	return _4217_obj;;
}



inline jule::Str static__1acd70b08_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str& _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1aba81485_Itoa(_5423_row);
	_5517_obj+=_1aba81485_Itoa(_5433_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5444_ident;
	return _5517_obj;;
}



inline jule::Str static__1acd70da0_func(jule::Ptr<_1aba9e1c8_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_CppLinked) {
			_case_begin_1bcea3357:;
			{
				return _6521_f.get()._field_Ident;;
			}
		}
		else if ((_6521_f.get()._field_Ident == jule::Str("main", 4))) {
			_case_begin_1bcea33bd:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_1aba9e89e_IsMethod(_6521_f.ptr())) {
			_case_begin_1bcea2752:;
			{
				jule::Str _7221_obj = static__1acd7071d_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_1bcea26db:;
			{
				return static__1acd7071d_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
			}
		}
		_match_end_1bcea2642:;
	};
}



inline jule::Str static__1acd71147_funcIns(jule::Ptr<_1abaa1d79_FnIns>& _8424_f) {
	if (_1abaa3210_IsBuiltin(_8424_f.ptr())) {
		return (jule::Str("jule::", 6) + _8424_f.get()._field_Decl.get()._field_Ident);;
	};
	if ((_8424_f.get()._field_Decl.get()._field_CppLinked || (_8424_f.get()._field_Generics.len() == 0LL))) {
		return static__1acd70da0_func(_8424_f.get()._field_Decl);;
	};
	return static__1acd7071d_toOut(_8424_f.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8424_f)));;
}



inline jule::Str static__1acd713de_traitDecl(jule::Ptr<_1abab10ca_Trait> _9525_t) {
	if (_1abab1b47_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__1acd7071d_toOut(_9525_t.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__1acd71686_param(jule::Ptr<_1aba9c88b_Param>& _10322_p) {
	if ((_1a9726308_IsAnonIdent(_10322_p.get()._field_Ident) || _1a9726061_IsIgnoreIdent(_10322_p.get()._field_Ident))) {
		return jule::Str();;
	};
	if (_1aba9ceb8_IsSelf(_10322_p.ptr())) {
		return jule::Str("_self_", 6);;
	};
	if ((_10322_p.get()._field_Token == nullptr)) {
		return static__1acd70b08_toLocal(0LL,0LL,_10322_p.get()._field_Ident);;
	};
	return static__1acd70b08_toLocal(_10322_p.get()._field_Token.get()._field_Row,_10322_p.get()._field_Token.get()._field_Column,_10322_p.get()._field_Ident);;
}



inline jule::Str static__1acd7192d_structure(jule::Ptr<_1ab08a1a9_Struct>& _11726_s) {
	if (_11726_s.get()._field_CppLinked) {
		if (_1ace28e14_hasDirective(_11726_s.get()._field_Directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_Ident);;
	};
	return static__1acd7071d_toOut(_11726_s.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));;
}



inline jule::Str static__1acd71bc5_structureIns(jule::Ptr<_1ab08a583_StructIns>& _12829_s) {
	if ((_12829_s.get()._field_Decl.get()._field_CppLinked || (_12829_s.get()._field_Generics.len() == 0LL))) {
		return static__1acd7192d_structure(_12829_s.get()._field_Decl);;
	};
	return static__1acd7071d_toOut(_12829_s.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12829_s)));;
}



inline jule::Str static__1acd71e6c_field(jule::Ptr<_1ab05e216_Field>& _13622_f) {
	if (_13622_f.get()._field_Owner.get()._field_CppLinked) {
		return _13622_f.get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_Ident);;
}



inline jule::Str static__1acd72214_var(jule::Ptr<_1abc73ee6_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_1bcead274:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("error", 5))) {
			_case_begin_1bceac5e7:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("self", 4))) {
			_case_begin_1bceac65d:;
			{
				if ((_1abcea0d3_Sptr(_14423_v.get()._field_Kind.get()._field_Kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);;
				};
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_1bceac6c4:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_1bceac73a:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _1aba81485_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1bceac9c1:;
			{
				return static__1acd70b08_toLocal(_14423_v.get()._field_Token.get()._field_Row,_14423_v.get()._field_Token.get()._field_Column,_14423_v.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1bceac581:;
			{
				return static__1acd7071d_toOut(_14423_v.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_1bceabcde:;
	};
}



inline jule::Str static__1acd724ab_iterBegin(jule::Uintptr _16725_it) {
	jule::Str _16817_obj = jule::Str::alloc(0LL, 30LL);;
	_16817_obj+=jule::Str("_iter_begin_", 12);
	_16817_obj+=_1aba81221_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16725_it)),15LL);
	return _16817_obj;;
}



inline jule::Str static__1acd72753_iterEnd(jule::Uintptr _17523_it) {
	jule::Str _17617_obj = jule::Str::alloc(0LL, 30LL);;
	_17617_obj+=jule::Str("_iter_end_", 10);
	_17617_obj+=_1aba81221_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17523_it)),15LL);
	return _17617_obj;;
}



inline jule::Str static__1acd729ea_iterNext(jule::Uintptr _18324_it) {
	jule::Str _18417_obj = jule::Str::alloc(0LL, 30LL);;
	_18417_obj+=jule::Str("_iter_next_", 11);
	_18417_obj+=_1aba81221_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18324_it)),15LL);
	return _18417_obj;;
}



inline jule::Str static__1acd72c92_label(jule::Str& _19122_ident) {
	jule::Str _19217_obj = jule::Str::alloc(0LL, 30LL);;
	_19217_obj+=jule::Str("_julec_label_", 13);
	_19217_obj+=_19122_ident;
	return _19217_obj;;
}



inline jule::Str static__1acd73039_matchEnd(jule::Uintptr _19924_m) {
	jule::Str _20017_obj = jule::Str::alloc(0LL, 30LL);;
	_20017_obj+=jule::Str("_match_end_", 11);
	_20017_obj+=_1aba81221_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19924_m)),15LL);
	return _20017_obj;;
}



inline jule::Str static__1acd732d1_caseBegin(jule::Uintptr _20725_c) {
	jule::Str _20817_obj = jule::Str::alloc(0LL, 30LL);;
	_20817_obj+=jule::Str("_case_begin_", 12);
	_20817_obj+=_1aba81221_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20725_c)),15LL);
	return _20817_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd70256_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acda29e7_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd7800b_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ace1bad8_Str(_1ace1b7ec_customType* _self_) {
	return (*_self_)._field_kind;;
}



inline jule::Bool _1ace1bde6_Equal(jule::Ptr<_1ace1b7ec_customType> _self_, jule::Ptr<_1abce79d7_TypeKind> _3921_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ace1b7ec_customType _Src) {
	_Stream << _1ace1bad8_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1ace1c29d_typeCoder> static__1ace1c7dc_new(jule::Ptr<_1ace15c9c_ObjectCoder>& _6224_oc) {
	jule::Ptr<_1ace1c29d_typeCoder> _6317_tc = jule::new_ptr<_1ace1c29d_typeCoder>(_1ace1c29d_typeCoder{._field_oc=_6224_oc, });;
	_6317_tc.get()._field_rc=static__1ace25097_new(_6317_tc);
	return _6317_tc;;
}



inline jule::Str _1ace1caea_toType(_1ace1c29d_typeCoder* _self_, jule::Str _6929_id) {
	if ((_6929_id != jule::Str("uintptr", 7))) {
		_6929_id=_1ab4bb8c6_RealKindOf(_6929_id);
	};
	if (((97LL <= _6929_id[0LL]) && (_6929_id[0LL] <= 122LLU))) {
		_6929_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6929_id);;
}



inline jule::Str _1ace1ce08_prim(_1ace1c29d_typeCoder* _self_, jule::Ptr<_1abcec734_Prim> _8023_p) {
	return _1ace1caea_toType(&(*_self_), _1abceca97_Str(_8023_p.ptr()));;
}



inline jule::Str _1ace1d216_tuple(_1ace1c29d_typeCoder* _self_, jule::Ptr<_1abd024a3_Tuple> _8528_t) {
	jule::Str _8617_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _8528_t.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1bd0b3357:;
		if (it != expr.end()) {
			jule::Ptr<_1abce79d7_TypeKind> _8721_tk = *it;
			{
				_8617_obj+=_1ace2265a_kind(&(*_self_), _8721_tk);
				_8617_obj+=jule::Str(",", 1);
			}
			_iter_next_1bd0b3357:;
			++it;
			goto _iter_begin_1bd0b3357;
		}
		_iter_end_1bd0b3357:;
	};
	(_8617_obj).mut_slice(0LL,(_8617_obj.len() - 1LL));;
	_8617_obj+=jule::Str(">", 1);
	return _8617_obj;;
}



inline jule::Str _1ace1d524_asSptr(_1ace1c29d_typeCoder* _self_, jule::Str _9725_elem) {
	jule::Str _9817_obj = jule::Str("jule::Ptr<", 10);;
	_9817_obj+=_9725_elem;
	_9817_obj+=jule::Str(">", 1);
	return _9817_obj;;
}



inline jule::Str _1ace1d832_asPtr(_1ace1c29d_typeCoder* _self_, jule::Str _10524_elem) {
	return (_10524_elem + jule::Str("*", 1));;
}



inline jule::Str _1ace1db40_sptr(_1ace1c29d_typeCoder* _self_, jule::Ptr<_1abd00eb8_Sptr> _11027_sptr) {
	return _1ace1d524_asSptr(&(*_self_), _1ace2265a_kind(&(*_self_), _11027_sptr.get()._field_Elem));;
}



inline jule::Str _1ace1de4d_ptr(_1ace1c29d_typeCoder* _self_, jule::Ptr<_1abd0452c_Ptr> _11526_p) {
	;
	if (_1abd05000_IsUnsafe(_11526_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _12017_elem = _1ace2265a_kind(&(*_self_), _11526_p.get()._field_Elem);;
	_12017_elem+=jule::Str("*", 1);
	return _12017_elem;;
}



inline jule::Str _1ace1e25b_enumDecl(_1ace1c29d_typeCoder* _self_, jule::Ptr<_1abab3220_Enum> _12631_e) {
	return _1ace2265a_kind(&(*_self_), _12631_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _1ace1e569_typeEnumDecl(_1ace1c29d_typeCoder* _self_, jule::Ptr<_1abab481a_TypeEnum> _13135_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _1ace1e877_asSlice(_1ace1c29d_typeCoder* _self_, jule::Ptr<_1abce79d7_TypeKind> _13530_elem) {
	jule::Str _13617_obj = jule::Str("jule::Slice<", 12);;
	_13617_obj+=_1ace2265a_kind(&(*_self_), _13530_elem);
	_13617_obj+=jule::Str(">", 1);
	return _13617_obj;;
}



inline jule::Str _1ace1eb85_slice(_1ace1c29d_typeCoder* _self_, jule::Ptr<_1abd01925_Slc> _14328_s) {
	return _1ace1e877_asSlice(&(*_self_), _14328_s.get()._field_Elem);;
}



inline jule::Str _1ace1ee93_mapType(_1ace1c29d_typeCoder* _self_, jule::Ptr<_1abd02ecb_Map> _14830_m) {
	jule::Str _14917_obj = jule::Str("jule::Map<", 10);;
	_14917_obj+=_1ace2265a_kind(&(*_self_), _14830_m.get()._field_Key);
	_14917_obj+=jule::Str(",", 1);
	_14917_obj+=_1ace2265a_kind(&(*_self_), _14830_m.get()._field_Val);
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;;
}



inline jule::Str _1ace202a1_traitIdent(_1ace1c29d_typeCoder* _self_, jule::Str _15729_ident) {
	jule::Str _15817_obj = jule::Str("jule::Trait<", 12);;
	_15817_obj+=_15729_ident;
	_15817_obj+=jule::Str(">", 1);
	return _15817_obj;;
}



inline jule::Str _1ace205ae_traitDecl(_1ace1c29d_typeCoder* _self_, jule::Ptr<_1abab10ca_Trait> _16528_t) {
	return _1ace202a1_traitIdent(&(*_self_), static__1acd713de_traitDecl(_16528_t));;
}



inline jule::Str _1ace208bc_structure(_1ace1c29d_typeCoder* _self_, jule::Ptr<_1ab08a1a9_Struct> _17028_s) {
	jule::Str _17117_rep = jule::Str();;
	if ((_17028_s.get()._field_CppLinked && (!(_1ace28e14_hasDirective(_17028_s.get()._field_Directives,jule::Str("typedef", 7)))))) {
		_17117_rep+=jule::Str("struct ", 7);
	};
	_17117_rep+=static__1acd7192d_structure(_17028_s);
	return _17117_rep;;
}



inline jule::Str _1ace20bca_structureIns(_1ace1c29d_typeCoder* _self_, jule::Ptr<_1ab08a583_StructIns> _18035_s) {
	if (_18035_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _18221_ident = static__1acd71bc5_structureIns(_18035_s);;
		if ((_18035_s.get()._field_Generics.len() > 0LL)) {
			_18221_ident+=jule::Str("<", 1);
			{
				auto &expr = _18035_s.get()._field_Generics;
				auto it = expr.begin();
				_iter_begin_1bd0be95c:;
				if (it != expr.end()) {
					jule::Ptr<_1abce62aa_InsGeneric> _18529_g = *it;
					{
						_18221_ident+=_1ace2265a_kind(&(*_self_), _18529_g.get()._field_Kind);
						_18221_ident+=jule::Str(",", 1);
					}
					_iter_next_1bd0be95c:;
					++it;
					goto _iter_begin_1bd0be95c;
				}
				_iter_end_1bd0be95c:;
			};
			(_18221_ident).mut_slice(0LL,(_18221_ident.len() - 1LL));;
			_18221_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_1ab03a720_Directive> _19217_d = _1ace28a7e_findDirective(_18035_s.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_19217_d != nullptr)) {
			(_18221_ident).buffer.insert(0, ((_1ace1ab4d_concatAllParts(_19217_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _18221_ident;;
	};
	return static__1acd71bc5_structureIns(_18035_s);;
}



inline jule::Str _1ace20ed8_array(_1ace1c29d_typeCoder* _self_, jule::Ptr<_1abd03ac0_Arr> _20228_a) {
	jule::Str _20317_obj = jule::Str("jule::Array<", 12);;
	_20317_obj+=_1ace2265a_kind(&(*_self_), _20228_a.get()._field_Elem);
	_20317_obj+=jule::Str(",", 1);
	_20317_obj+=_1aba81485_Itoa(_20228_a.get()._field_N);
	_20317_obj+=jule::Str(">", 1);
	return _20317_obj;;
}



inline jule::Str _1ace21604_paramIns(_1ace1c29d_typeCoder* _self_, jule::Ptr<_1abaa0eaa_ParamIns>& _22832_p) {
	jule::Str _22917_obj = jule::Str();;
	if (_22832_p.get()._field_Decl.get()._field_Variadic) {
		_22917_obj+=jule::Str("jule::Slice<", 12);
		_22917_obj+=_1ace2265a_kind(&(*_self_), _22832_p.get()._field_Kind);
		_22917_obj+=jule::Str(">", 1);
	} else {
		_22917_obj+=_1ace2265a_kind(&(*_self_), _22832_p.get()._field_Kind);
	};
	if (_22832_p.get()._field_Decl.get()._field_Reference) {
		_22917_obj+=jule::Str("&", 1);
	};
	return _22917_obj;;
}



inline void _1ace21c31_funcInsResult(_1ace1c29d_typeCoder* _self_, jule::Str& _25837_s, jule::Ptr<_1abaa1d79_FnIns>& _25850_f) {
	if (_1aba9e63a_IsVoid(_25850_f.get()._field_Decl.ptr())) {
		if (_25850_f.get()._field_Decl.get()._field_Exceptional) {
			_25837_s+=jule::Str("jule::VoidExceptional", 21);
		} else {
			_25837_s+=jule::Str("void", 4);
		};
		return;;
	};
	if (_25850_f.get()._field_Decl.get()._field_Exceptional) {
		_25837_s+=jule::Str("jule::Exceptional<", 18);
		_1ace26dbd_codeMut1((*_self_)._field_rc.ptr(), _25837_s,_25850_f.get()._field_Result);
		_25837_s+=jule::Str(">", 1);
		return;;
	};
	_1ace26dbd_codeMut1((*_self_)._field_rc.ptr(), _25837_s,_25850_f.get()._field_Result);
}



inline jule::Str _1ace2203e_anonFunc(_1ace1c29d_typeCoder* _self_, jule::Ptr<_1abaa1d79_FnIns> _27631_f) {
	if (((_27631_f.get()._field_Result != nullptr) && (_1abceba0d_Tup(_27631_f.get()._field_Result.ptr()) != nullptr))) {
		_1acd9b20a_pushResultIns((*_self_)._field_oc, _27631_f);
	};
	jule::Str _28017_decl = jule::Str();;
	_1ace21c31_funcInsResult(&(*_self_), _28017_decl,_27631_f);
	_28017_decl+=jule::Str("(", 1);
	if ((_27631_f.get()._field_Params.len() > 0LL)) {
		{
			auto &expr = _27631_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1bd0cde77:;
			if (it != expr.end()) {
				jule::Ptr<_1abaa0eaa_ParamIns> _28425_param = *it;
				{
					if (_1aba9ceb8_IsSelf(_28425_param.get()._field_Decl.ptr())) {
						goto _iter_next_1bd0cde77;
					};
					_28017_decl+=_1ace21604_paramIns(&(*_self_), _28425_param);
					_28017_decl+=jule::Str(",", 1);
				}
				_iter_next_1bd0cde77:;
				++it;
				goto _iter_begin_1bd0cde77;
			}
			_iter_end_1bd0cde77:;
		};
		(_28017_decl).mut_slice(0LL,(_28017_decl.len() - 1LL));;
	} else {
		_28017_decl+=jule::Str("void", 4);
	};
	_28017_decl+=jule::Str(")", 1);
	return _28017_decl;;
}



inline jule::Str _1ace2234c_func(_1ace1c29d_typeCoder* _self_, jule::Ptr<_1abaa1d79_FnIns> _30027_f) {
	jule::Str _30117_obj = jule::Str("jule::Fn<", 9);;
	_30117_obj+=_1ace2203e_anonFunc(&(*_self_), _30027_f);
	_30117_obj+=jule::Str(">", 1);
	return _30117_obj;;
}



inline jule::Str _1ace2265a_kind(_1ace1c29d_typeCoder* _self_, jule::Ptr<_1abce79d7_TypeKind> _30827_k) {
	{
		
		if ((_1abceb2c1_Struct(_30827_k.ptr()) != nullptr)) {
			_case_begin_1bd0d2189:;
			{
				return _1ace20bca_structureIns(&(*_self_), _1abceb2c1_Struct(_30827_k.ptr()));;
			}
		}
		else if (_1abce86a8_CppLinked(_30827_k.ptr())) {
			_case_begin_1bd0d2211:;
			{
				return _30827_k.get()._field_CppIdent;;
			}
		}
		else if ((_1abce9d6e_Prim(_30827_k.ptr()) != nullptr)) {
			_case_begin_1bd0d2288:;
			{
				return _1ace1ce08_prim(&(*_self_), _1abce9d6e_Prim(_30827_k.ptr()));;
			}
		}
		else if ((_1abceba0d_Tup(_30827_k.ptr()) != nullptr)) {
			_case_begin_1bd0d2310:;
			{
				return _1ace1d216_tuple(&(*_self_), _1abceba0d_Tup(_30827_k.ptr()));;
			}
		}
		else if ((_1abcea0d3_Sptr(_30827_k.ptr()) != nullptr)) {
			_case_begin_1bd0d2387:;
			{
				return _1ace1db40_sptr(&(*_self_), _1abcea0d3_Sptr(_30827_k.ptr()));;
			}
		}
		else if ((_1abcea347_Ptr(_30827_k.ptr()) != nullptr)) {
			_case_begin_1bd0d240e:;
			{
				return _1ace1de4d_ptr(&(*_self_), _1abcea347_Ptr(_30827_k.ptr()));;
			}
		}
		else if ((_1abcea5ab_Enum(_30827_k.ptr()) != nullptr)) {
			_case_begin_1bd0d2486:;
			{
				return _1ace1e25b_enumDecl(&(*_self_), _1abcea5ab_Enum(_30827_k.ptr()));;
			}
		}
		else if ((_1abcea820_TypeEnum(_30827_k.ptr()) != nullptr)) {
			_case_begin_1bd0d250d:;
			{
				return _1ace1e569_typeEnumDecl(&(*_self_), _1abcea820_TypeEnum(_30827_k.ptr()));;
			}
		}
		else if ((_1abceace8_Slc(_30827_k.ptr()) != nullptr)) {
			_case_begin_1bd0d2585:;
			{
				return _1ace1eb85_slice(&(*_self_), _1abceace8_Slc(_30827_k.ptr()));;
			}
		}
		else if ((_1abceb799_Map(_30827_k.ptr()) != nullptr)) {
			_case_begin_1bd0d260c:;
			{
				return _1ace1ee93_mapType(&(*_self_), _1abceb799_Map(_30827_k.ptr()));;
			}
		}
		else if ((_1abceb535_Trait(_30827_k.ptr()) != nullptr)) {
			_case_begin_1bd0d2684:;
			{
				return _1ace205ae_traitDecl(&(*_self_), _1abceb535_Trait(_30827_k.ptr()));;
			}
		}
		else if ((_1abceaa84_Arr(_30827_k.ptr()) != nullptr)) {
			_case_begin_1bd0d270b:;
			{
				return _1ace20ed8_array(&(*_self_), _1abceaa84_Arr(_30827_k.ptr()));;
			}
		}
		else if ((_1abceb05c_Fn(_30827_k.ptr()) != nullptr)) {
			_case_begin_1bd0d2783:;
			{
				return _1ace2234c_func(&(*_self_), _1abceb05c_Fn(_30827_k.ptr()));;
			}
		}
		_match_end_1bd0d1ead:;
	};
	{
		auto &_match_expr{ _30827_k.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ace1b7ec_customType>>()) {
			_case_begin_1bd0d9e94:;
			{
				return _30827_k.get()._field_Kind.operator jule::Ptr<_1ace1b7ec_customType>().get()._field_kind;;
			}
		}
		else {
			_case_begin_1bd0d5a61:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1bd0da219:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ace1c29d_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ace24a8b_resultCoder> static__1ace25097_new(jule::Ptr<_1ace1c29d_typeCoder>& _36224_tc) {
	return jule::new_ptr<_1ace24a8b_resultCoder>(_1ace24a8b_resultCoder{._field_tc=_36224_tc});;
}



inline void _1ace253b6_ptr(_1ace24a8b_resultCoder* _self_, jule::Str& _36627_s, jule::Ptr<_1abd0452c_Ptr> _36639_p) {
	_36627_s+=jule::Str("p", 1);
	_1ace26a9e_codeMut(&(*_self_), _36627_s,_36639_p.get()._field_Elem);
}



inline void _1ace256d5_sptr(_1ace24a8b_resultCoder* _self_, jule::Str& _37128_s, jule::Ptr<_1abd00eb8_Sptr> _37140_p) {
	_37128_s+=jule::Str("x", 1);
	_1ace26a9e_codeMut(&(*_self_), _37128_s,_37140_p.get()._field_Elem);
}



inline void _1ace25a04_mapType(_1ace24a8b_resultCoder* _self_, jule::Str& _37631_s, jule::Ptr<_1abd02ecb_Map> _37643_p) {
	_37631_s+=jule::Str("m", 1);
	_1ace26a9e_codeMut(&(*_self_), _37631_s,_37643_p.get()._field_Key);
	_1ace26a9e_codeMut(&(*_self_), _37631_s,_37643_p.get()._field_Val);
}



inline void _1ace25d23_slice(_1ace24a8b_resultCoder* _self_, jule::Str& _38229_s, jule::Ptr<_1abd01925_Slc> _38241_slc) {
	_38229_s+=jule::Str("s", 1);
	_1ace26a9e_codeMut(&(*_self_), _38229_s,_38241_slc.get()._field_Elem);
}



inline void _1ace26142_arr(_1ace24a8b_resultCoder* _self_, jule::Str& _38727_s, jule::Ptr<_1abd03ac0_Arr> _38739_arr) {
	_38727_s+=jule::Str("a", 1);
	_38727_s+=_1aba81353_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_38739_arr.get()._field_N)),16LL);
	_1ace26a9e_codeMut(&(*_self_), _38727_s,_38739_arr.get()._field_Elem);
}



inline void _1ace26461_func(_1ace24a8b_resultCoder* _self_, jule::Str& _39328_s, jule::Ptr<_1abaa1d79_FnIns> _39340_f) {
	_39328_s+=jule::Str("f", 1);
	{
		auto &expr = _39340_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1bd0e0e67:;
		if (it != expr.end()) {
			jule::Ptr<_1abaa0eaa_ParamIns> _39521_p = *it;
			{
				if (_39521_p.get()._field_Decl.get()._field_Reference) {
					_39328_s+=jule::Str("r", 1);
				};
				_1ace26a9e_codeMut(&(*_self_), _39328_s,_39521_p.get()._field_Kind);
			}
			_iter_next_1bd0e0e67:;
			++it;
			goto _iter_begin_1bd0e0e67;
		}
		_iter_end_1bd0e0e67:;
	};
	if ((_39340_f.get()._field_Result != nullptr)) {
		_1ace26a9e_codeMut(&(*_self_), _39328_s,_39340_f.get()._field_Result);
	};
}



inline void _1ace26780_tup(_1ace24a8b_resultCoder* _self_, jule::Str& _40627_s, jule::Ptr<_1abd024a3_Tuple> _40639_tup) {
	{
		auto &expr = _40639_tup.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1bd0e2b4a:;
		if (it != expr.end()) {
			jule::Ptr<_1abce79d7_TypeKind> _40721_t = *it;
			{
				_40627_s+=jule::Str("__jule_tuple_", 13);
				_1ace26a9e_codeMut(&(*_self_), _40627_s,_40721_t);
			}
			_iter_next_1bd0e2b4a:;
			++it;
			goto _iter_begin_1bd0e2b4a;
		}
		_iter_end_1bd0e2b4a:;
	};
}



inline void _1ace26a9e_codeMut(_1ace24a8b_resultCoder* _self_, jule::Str& _41331_s, jule::Ptr<_1abce79d7_TypeKind>& _41344_t) {
	{
		auto &_match_expr{ _41344_t.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1abd0452c_Ptr>>()) {
			_case_begin_1adb3ecc2:;
			{
				_1ace253b6_ptr(&(*_self_), _41331_s,_41344_t.get()._field_Kind.operator jule::Ptr<_1abd0452c_Ptr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abd00eb8_Sptr>>()) {
			_case_begin_1adb3ed38:;
			{
				_1ace256d5_sptr(&(*_self_), _41331_s,_41344_t.get()._field_Kind.operator jule::Ptr<_1abd00eb8_Sptr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abd02ecb_Map>>()) {
			_case_begin_1bc108931:;
			{
				_1ace25a04_mapType(&(*_self_), _41331_s,_41344_t.get()._field_Kind.operator jule::Ptr<_1abd02ecb_Map>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abd01925_Slc>>()) {
			_case_begin_1bc108997:;
			{
				_1ace25d23_slice(&(*_self_), _41331_s,_41344_t.get()._field_Kind.operator jule::Ptr<_1abd01925_Slc>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abd03ac0_Arr>>()) {
			_case_begin_1bc108a0d:;
			{
				_1ace26142_arr(&(*_self_), _41331_s,_41344_t.get()._field_Kind.operator jule::Ptr<_1abd03ac0_Arr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abaa1d79_FnIns>>()) {
			_case_begin_1bc108a74:;
			{
				_1ace26461_func(&(*_self_), _41331_s,_41344_t.get()._field_Kind.operator jule::Ptr<_1abaa1d79_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abab3220_Enum>>()) {
			_case_begin_1bc109811:;
			{
				jule::Ptr<_1abab3220_Enum> _42817_te = _41344_t.get()._field_Kind.operator jule::Ptr<_1abab3220_Enum>();;
				_41331_s+=static__1acd7071d_toOut(_42817_te.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_42817_te)));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abab481a_TypeEnum>>()) {
			_case_begin_1bc109877:;
			{
				jule::Ptr<_1abab481a_TypeEnum> _43117_te = _41344_t.get()._field_Kind.operator jule::Ptr<_1abab481a_TypeEnum>();;
				_41331_s+=static__1acd7071d_toOut(_43117_te.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43117_te)));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab08a583_StructIns>>()) {
			_case_begin_1bc1098dd:;
			{
				jule::Ptr<_1ab08a583_StructIns> _43421_si = _41344_t.get()._field_Kind.operator jule::Ptr<_1ab08a583_StructIns>();;
				_41331_s+=static__1acd71bc5_structureIns(_43421_si);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abab10ca_Trait>>()) {
			_case_begin_1bc109954:;
			{
				jule::Ptr<_1abab10ca_Trait> _43721_trt = _41344_t.get()._field_Kind.operator jule::Ptr<_1abab10ca_Trait>();;
				_41331_s+=static__1acd713de_traitDecl(_43721_trt);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abcec734_Prim>>()) {
			_case_begin_1bc1099ba:;
			{
				_41331_s+=_41344_t.get()._field_Kind.operator jule::Ptr<_1abcec734_Prim>().get()._field_Kind;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abd024a3_Tuple>>()) {
			_case_begin_1bc109a31:;
			{
				_1ace26780_tup(&(*_self_), _41331_s,_41344_t.get()._field_Kind.operator jule::Ptr<_1abd024a3_Tuple>());
			}
		}
		else {
			_case_begin_1bc109c95:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:444:13"));;
			}
		}
		_match_end_1bc0ea1d6:;
	};
}



inline void _1ace26dbd_codeMut1(_1ace24a8b_resultCoder* _self_, jule::Str& _44832_s, jule::Ptr<_1abce79d7_TypeKind>& _44845_t) {
	jule::Ptr<_1abd024a3_Tuple> _44917_tup = _1abceba0d_Tup(_44845_t.ptr());;
	if ((_44917_tup != nullptr)) {
		_1ace26780_tup(&(*_self_), _44832_s,_44917_tup);
	} else {
		_44832_s+=_1ace2265a_kind((*_self_)._field_tc.ptr(), _44845_t);
	};
}



inline jule::Str _1ace27198_code(_1ace24a8b_resultCoder* _self_, jule::Ptr<_1abce79d7_TypeKind>& _45728_t) {
	jule::Str _45817_s = jule::Str::alloc(0LL, 20LL);;
	_1ace26a9e_codeMut(&(*_self_), _45817_s,_45728_t);
	return _45817_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ace24a8b_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1bc114bb2_Name(_1bc11484e_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1bc114ce4_What(_1bc11484e_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1bc114e37_Reset(_1bc11484e_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1bc11507a_Short(_1bc11484e_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc11484e_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bc118116_Name(_1bc118589_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1bc118875_What(_1bc118589_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1bc1189a7_Reset(_1bc118589_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1bc118ad9_Short(_1bc118589_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc118589_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bc11b933_Name(_1bc11bda6_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1bc11c192_What(_1bc11bda6_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1bc11c2c4_Reset(_1bc11bda6_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1bc11c406_Short(_1bc11bda6_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc11bda6_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bc120294_Name(_1bc120717_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1bc120a03_What(_1bc120717_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1bc120b35_Reset(_1bc120717_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1bc120c67_Short(_1bc120717_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc120717_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bc123ab1_Name(_1bc124034_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1bc124320_What(_1bc124034_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1bc124452_Reset(_1bc124034_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1bc124584_Short(_1bc124034_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc124034_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ace50ea2_FlagSet> static__1ace5128d_New(void) {
	return jule::new_ptr<_1ace50ea2_FlagSet>(_1ace50ea2_FlagSet{._field_flags=jule::Slice<jule::Trait<_1ace4d2bd_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1ace4d2bd_CommonFlag> _1ace51722_FindFlag(_1ace50ea2_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1bc12e391:;
		if (it != expr.end()) {
			jule::Trait<_1ace4d2bd_CommonFlag> _7221_flag = *it;
			{
				if ((_1ace4d2bd_CommonFlag_mptr_data[(_7221_flag).type_offset]._1ace4e621_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1bc12e391:;
			++it;
			goto _iter_begin_1bc12e391;
		}
		_iter_end_1bc12e391:;
	};
	return nullptr;;
}



inline jule::Trait<_1ace4d2bd_CommonFlag> _1ace51a30_FindFlagShort(_1ace50ea2_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1bc12e9bd:;
		if (it != expr.end()) {
			jule::Trait<_1ace4d2bd_CommonFlag> _8221_flag = *it;
			{
				if ((_1ace4d2bd_CommonFlag_mptr_data[(_8221_flag).type_offset]._1ace4e753_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1bc12e9bd:;
			++it;
			goto _iter_begin_1bc12e9bd;
		}
		_iter_end_1bc12e9bd:;
	};
	return nullptr;;
}



inline jule::Slice<jule::Trait<_1ace4d2bd_CommonFlag>> _1ace51c94_Flags(_1ace50ea2_FlagSet* _self_) {
	return (*_self_)._field_flags;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1ace520a2_Parse(_1ace50ea2_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1ace5367a_argParser _11617_ap = _1ace5367a_argParser{._field_set=(*_self_), ._field_args=_11524_args, };;
	({
		auto except = _1ace54a66_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(except.error, &__jule_any_type1));
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline void _1ace5227d_Reset(_1ace50ea2_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1bc131904:;
		if (it != expr.end()) {
			jule::Trait<_1ace4d2bd_CommonFlag> _12616_f = *it;
			{
				_1ace4d2bd_CommonFlag_mptr_data[(_12616_f).type_offset]._1ace4e9b7_Reset(_12616_f);
			}
			_iter_next_1bc131904:;
			++it;
			goto _iter_begin_1bc131904;
		}
		_iter_end_1bc131904:;
	};
}



inline jule::Ptr<_1bc124034_Flag> _1bd1c86e2_addFlagCommon(_1ace50ea2_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1bd1c9d42:;
			{
				goto _match_end_1bd1c9cdc;
			}
		}
		_match_end_1bd1c9cdc:;
	};
	if ((_1ace51722_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1ace51a30_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1bc124034_Flag> _14817_flag = jule::new_ptr<_1bc124034_Flag>(_1bc124034_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_1ace4d2bd_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;;
}

inline jule::Ptr<_1bc120717_Flag> _1bd1d20e1_addFlagCommon(_1ace50ea2_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1bd1d36db:;
			{
				goto _match_end_1bd1d3642;
			}
		}
		_match_end_1bd1d3642:;
	};
	if ((_1ace51722_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1ace51a30_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1bc120717_Flag> _14817_flag = jule::new_ptr<_1bc120717_Flag>(_1bc120717_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_1ace4d2bd_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;;
}



inline void _1bd1c6668_AddVar(_1ace50ea2_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1bc124034_Flag> _17617_flag = _1bd1c86e2_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1bd1d009a_AddVar(_1ace50ea2_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1bc120717_Flag> _17617_flag = _1bd1d20e1_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1ace50ea2_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab060dd8_Str(_1ab08a583_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*_self_)._field_Decl.get()._field_Ident;
	if (((*_self_)._field_Generics.len() > 0LL)) {
		_25017_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_Generics;
			auto it = expr.begin();
			_iter_begin_1bb892e9b:;
			if (it != expr.end()) {
				jule::Ptr<_1abce62aa_InsGeneric> &_25420_g = *it;
				{
					_25017_kind+=_1abce7dd3_Str(_25420_g.get()._field_Kind.ptr());
					_25017_kind+=jule::Str(",", 1);
				}
				_iter_next_1bb892e9b:;
				++it;
				goto _iter_begin_1bb892e9b;
			}
			_iter_end_1bb892e9b:;
		};
		(_25017_kind).mut_slice(0LL,(_25017_kind.len() - 1LL));;
		_25017_kind+=jule::Str("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _1ab06203d_Equal(jule::Ptr<_1ab08a583_StructIns> _self_, jule::Ptr<_1abce79d7_TypeKind> _26521_other) {
	jule::Ptr<_1ab08a583_StructIns> _26613_s = _1abceb2c1_Struct(_26521_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I64 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_1abce81e1_Equal(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1bb8965ed:;
	}
	_iter_end_1bb8965ed:;;
	return true;;
}



inline jule::Bool _1ab064392_Same(_1ab08a583_StructIns* _self_, jule::Ptr<_1ab08a583_StructIns> _29319_s) {
	if ((((*_self_)._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1bb898a40:;
		if (it != expr.end()) {
			jule::I64 _29713_i = it - expr.begin();
			jule::Ptr<_1abce62aa_InsGeneric> &_29716_g = *it;
			{
				if ((!(_1abce81e1_Equal(_29716_g.get()._field_Kind, _29319_s.get()._field_Generics[_29713_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1bb898a40:;
			++it;
			_29713_i++;
			goto _iter_begin_1bb898a40;
		}
		_iter_end_1bb898a40:;
	};
	return true;;
}



inline jule::Ptr<_1aba9e1c8_Fn> _1ab0656b2_FindMethod(_1ab08a583_StructIns* _self_, jule::Str _30729_ident, jule::Bool _30741_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bb89a46a:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> _30821_f = *it;
			{
				if (((_30821_f.get()._field_Statically == _30741_statically) && (_30821_f.get()._field_Ident == _30729_ident))) {
					return _30821_f;;
				};
			}
			_iter_next_1bb89a46a:;
			++it;
			goto _iter_begin_1bb89a46a;
		}
		_iter_end_1bb89a46a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab08a396_FieldIns> _1ab04762d_FindField(_1ab08a583_StructIns* _self_, jule::Str _31828_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1bb89b69c:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a396_FieldIns> _31921_f = *it;
			{
				if ((_31921_f.get()._field_Decl.get()._field_Ident == _31828_ident)) {
					return _31921_f;;
				};
			}
			_iter_next_1bb89b69c:;
			++it;
			goto _iter_begin_1bb89b69c;
		}
		_iter_end_1bb89b69c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abc73ee6_Var> _1ab05364a_FindStatic(_1ab08a583_StructIns* _self_, jule::Str _32929_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_1bb89bd62:;
		if (it != expr.end()) {
			jule::Ptr<_1abc73ee6_Var> _33021_v = *it;
			{
				if ((_33021_v.get()._field_Ident == _32929_ident)) {
					return _33021_v;;
				};
			}
			_iter_next_1bb89bd62:;
			++it;
			goto _iter_begin_1bb89bd62;
		}
		_iter_end_1bb89bd62:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab08a583_StructIns _Src) {
	_Stream << _1ab060dd8_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1abbde989_ObjectDeadCode> static__1abc21834_new(jule::Ptr<_1ac317732_IR>& _3424_ir) {
	return jule::new_ptr<_1abbde989_ObjectDeadCode>(_1abbde989_ObjectDeadCode{._field_ir=_3424_ir});;
}



inline jule::Bool _1bca36649_isLive(jule::Ptr<_1abbde989_ObjectDeadCode> _self_, jule::Ptr<_1abab10ca_Trait>& _4030_t) {
	jule::Slice<jule::Ptr<_1abab10ca_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bca383d7:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1bca380eb:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1bca38abe:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_1bca38abe:;
			++it;
			_5213_i++;
			goto _iter_begin_1bca38abe;
		}
		_iter_end_1bca38abe:;
	};
	return false;;
}

inline jule::Bool _1bca3b682_isLive(jule::Ptr<_1abbde989_ObjectDeadCode> _self_, jule::Ptr<_1abaa1d79_FnIns>& _4030_t) {
	jule::Slice<jule::Ptr<_1abaa1d79_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bca3d6ea:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1bca3d640:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1bca3dd8d:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_1bca3dd8d:;
			++it;
			_5213_i++;
			goto _iter_begin_1bca3dd8d;
		}
		_iter_end_1bca3dd8d:;
	};
	return false;;
}

inline jule::Bool _1bca440c4_isLive(jule::Ptr<_1abbde989_ObjectDeadCode> _self_, jule::Ptr<_1ab08a583_StructIns>& _4030_t) {
	jule::Slice<jule::Ptr<_1ab08a583_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bca4721a:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1bca46e95:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1bca48084:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_1bca48084:;
			++it;
			_5213_i++;
			goto _iter_begin_1bca48084;
		}
		_iter_end_1bca48084:;
	};
	return false;;
}

inline jule::Bool _1bca49c01_isLive(jule::Ptr<_1abbde989_ObjectDeadCode> _self_, jule::Ptr<_1abc73ee6_Var>& _4030_t) {
	jule::Slice<jule::Ptr<_1abc73ee6_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bca4b780:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1bca4b65e:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1bca4b6b4:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_1bca4b6b4:;
			++it;
			_5213_i++;
			goto _iter_begin_1bca4b6b4;
		}
		_iter_end_1bca4b6b4:;
	};
	return false;;
}



inline void _1bca369ac_pushLive(jule::Ptr<_1abbde989_ObjectDeadCode> _self_, jule::Ptr<_1abab10ca_Trait> _6035_t) {
	{
		
{
			_case_begin_1bca3a4e9:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_1bca3a197:;
	};
}

inline void _1bca3c045_pushLive(jule::Ptr<_1abbde989_ObjectDeadCode> _self_, jule::Ptr<_1abaa1d79_FnIns> _6035_t) {
	{
		
{
			_case_begin_1bca4107c:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_1bca40d07:;
	};
}

inline void _1bca4339d_pushLive(jule::Ptr<_1abbde989_ObjectDeadCode> _self_, jule::Ptr<_1ab08a583_StructIns> _6035_t) {
	{
		
{
			_case_begin_1bca44aa8:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_1bca447bc:;
	};
}

inline void _1bca4a064_pushLive(jule::Ptr<_1abbde989_ObjectDeadCode> _self_, jule::Ptr<_1abc73ee6_Var> _6035_t) {
	{
		
{
			_case_begin_1bca4dbd3:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_1bca4db06:;
	};
}



inline void _1abc2213c_setReferencesAsLive(jule::Ptr<_1abbde989_ObjectDeadCode> _self_, jule::Ptr<_1abaa4ce4_ReferenceStack>& _7344_rs) {
	if ((_7344_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1abaa5410_Len(_7344_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1abaa571d_At(_7344_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type12) {
					_case_begin_1bca353e5:;
					{
						jule::Ptr<_1abab10ca_Trait> _8225_t = _7921_ref.cast_ptr<_1abab10ca_Trait>(&__jule_any_type12);;
						if (_1bca36649_isLive(_self_, _8225_t)) {
							goto _iter_next_1bca34768;
						};
						_1bca369ac_pushLive(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1bca3645c:;
							if (it != expr.end()) {
								jule::Ptr<_1aba9e1c8_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1bca3b9e5:;
										if (it != expr.end()) {
											jule::Ptr<_1abaa1d79_FnIns> _8833_mins = *it;
											{
												if (_1bca3b682_isLive(_self_, _8833_mins)) {
													goto _iter_next_1bca3b9e5;
												};
												_1bca3c045_pushLive(_self_, _8833_mins);
												_1abc2213c_setReferencesAsLive(_self_, _8833_mins.get()._field_Refers);
											}
											_iter_next_1bca3b9e5:;
											++it;
											goto _iter_begin_1bca3b9e5;
										}
										_iter_end_1bca3b9e5:;
									};
								}
								_iter_next_1bca3645c:;
								++it;
								goto _iter_begin_1bca3645c;
							}
							_iter_end_1bca3645c:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1bca3545b:;
					{
						jule::Ptr<_1abaa1d79_FnIns> _9725_f = _7921_ref.cast_ptr<_1abaa1d79_FnIns>(&__jule_any_type9);;
						if (_1bca3b682_isLive(_self_, _9725_f)) {
							goto _match_end_1bca35280;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1bca440c4_isLive(_self_, _9725_f.get()._field_Owner)))) {
								_1bca4339d_pushLive(_self_, _9725_f.get()._field_Owner);
								_1abc2213c_setReferencesAsLive(_self_, _9725_f.get()._field_Owner.get()._field_Refers);
							};
						};
						_1bca3c045_pushLive(_self_, _9725_f);
						_1abc2213c_setReferencesAsLive(_self_, _9725_f.get()._field_Refers);
					}
				}
				else if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1bca35538:;
					{
						jule::Ptr<_1abc73ee6_Var> _11025_v = _7921_ref.cast_ptr<_1abc73ee6_Var>(&__jule_any_type10);;
						if (_1bca49c01_isLive(_self_, _11025_v)) {
							goto _match_end_1bca35280;
						};
						_1bca4a064_pushLive(_self_, _11025_v);
						_1abc2213c_setReferencesAsLive(_self_, _11025_v.get()._field_Refers);
					}
				}
				else if (_match_expr.type == &__jule_any_type11) {
					_case_begin_1bca3559e:;
					{
						jule::Ptr<_1ab08a583_StructIns> _11725_s = _7921_ref.cast_ptr<_1ab08a583_StructIns>(&__jule_any_type11);;
						if (_1bca440c4_isLive(_self_, _11725_s)) {
							goto _match_end_1bca35280;
						};
						_1bca4339d_pushLive(_self_, _11725_s);
						_1abc2213c_setReferencesAsLive(_self_, _11725_s.get()._field_Refers);
						{
							auto &expr = _11725_s.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1bca51dc3:;
							if (it != expr.end()) {
								jule::Ptr<_1aba9e1c8_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1bca525ee:;
										if (it != expr.end()) {
											jule::Ptr<_1abaa1d79_FnIns> _12433_mins = *it;
											{
												if (_1bca3b682_isLive(_self_, _12433_mins)) {
													goto _iter_next_1bca525ee;
												};
												_1bca3c045_pushLive(_self_, _12433_mins);
												_1abc2213c_setReferencesAsLive(_self_, _12433_mins.get()._field_Refers);
											}
											_iter_next_1bca525ee:;
											++it;
											goto _iter_begin_1bca525ee;
										}
										_iter_end_1bca525ee:;
									};
								}
								_iter_next_1bca51dc3:;
								++it;
								goto _iter_begin_1bca51dc3;
							}
							_iter_end_1bca51dc3:;
						};
					}
				}
				_match_end_1bca35280:;
			};
		}
	_iter_next_1bca34768:;
	}
	_iter_end_1bca34768:;;
}



inline void _1abc223b2_inits(jule::Ptr<_1abbde989_ObjectDeadCode> _self_, jule::Ptr<_1abc50d08_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bca3a472:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1bca52cc5:;
					if (it != expr.end()) {
						jule::Ptr<_1aba9e1c8_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_Ident == jule::Str("init", 4))) {
								jule::Ptr<_1abaa1d79_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1abc2213c_setReferencesAsLive(_self_, _14029_ins.get()._field_Refers);
							};
						}
						_iter_next_1bca52cc5:;
						++it;
						goto _iter_begin_1bca52cc5;
					}
					_iter_end_1bca52cc5:;
				};
			}
			_iter_next_1bca3a472:;
			++it;
			goto _iter_begin_1bca3a472;
		}
		_iter_end_1bca3a472:;
	};
}



inline void _1abc22637_collectLivePackage(jule::Ptr<_1abbde989_ObjectDeadCode> _self_, jule::Ptr<_1abc50d08_Package>& _14843_pkg) {
	_1abc223b2_inits(_self_, _14843_pkg);
	if (_1d7c0a02d_Test) {
		{
			auto &expr = _14843_pkg.get()._field_Files;
			auto it = expr.begin();
			_iter_begin_1bca57170:;
			if (it != expr.end()) {
				jule::Ptr<_1abcb6c2b_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_Funcs;
						auto it = expr.begin();
						_iter_begin_1bca57989:;
						if (it != expr.end()) {
							jule::Ptr<_1aba9e1c8_Fn> _15529_f = *it;
							{
								if (_1abc2464a_hasDirective(_15529_f.get()._field_Directives,jule::Str("test", 4))) {
									jule::Ptr<_1abaa1d79_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1abc2213c_setReferencesAsLive(_self_, _15733_ins.get()._field_Refers);
								};
							}
							_iter_next_1bca57989:;
							++it;
							goto _iter_begin_1bca57989;
						}
						_iter_end_1bca57989:;
					};
				}
				_iter_next_1bca57170:;
				++it;
				goto _iter_begin_1bca57170;
			}
			_iter_end_1bca57170:;
		};
	};
}



inline void _1abc22813_collectLive(jule::Ptr<_1abbde989_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1bca552b1:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_1abc22637_collectLivePackage(_self_, _16721_used.get()._field_Package);
				};
			}
			_iter_next_1bca552b1:;
			++it;
			goto _iter_begin_1bca552b1;
		}
		_iter_end_1bca552b1:;
	};
	_1abc22637_collectLivePackage(_self_, _self_.get()._field_ir.get()._field_Main);
	jule::Ptr<_1aba9e1c8_Fn> _17517_main = _1abc525ac_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_1abaa1d79_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1abc2213c_setReferencesAsLive(_self_, _17617_ins.get()._field_Refers);
}



inline void _1abc22a88_removeDeadGlobals(jule::Ptr<_1abbde989_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1abc73ee6_Var>>& _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18142_vars.len())) {
		{
			jule::Ptr<_1abc73ee6_Var> _18417_v = _18142_vars[_18217_i];;
			if (_1bca49c01_isLive(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_1bca5c6d6;
			};
			_18142_vars=jule::append(_18142_vars.slice(0LL,_18217_i),_18142_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_1bca5c6d6:;
	}
	_iter_end_1bca5c6d6:;;
}



inline void _1abc22d0d_removeDeadFns(jule::Ptr<_1abbde989_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aba9e1c8_Fn>>& _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19338_funcs.len())) {
		{
			jule::Ptr<_1aba9e1c8_Fn> _19621_f = _19338_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1abaa1d79_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1bca3b682_isLive(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_1bca60b18;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL,_19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1bca60b18:;
			}
			_iter_end_1bca60b18:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				_19338_funcs=jule::append(_19338_funcs.slice(0LL,_19417_i),_19338_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_1bca5cb7b;
			};
			(_19417_i)++;
		}
	_iter_next_1bca5cb7b:;
	}
	_iter_end_1bca5cb7b:;;
}



inline void _1abc23083_removeDeadStructs(jule::Ptr<_1abbde989_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ab08a1a9_Struct>>& _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21442_structs.len())) {
		{
			jule::Ptr<_1ab08a1a9_Struct> _21721_s = _21442_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1ab08a583_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1abc22d0d_removeDeadFns(_self_, _22025_ins.get()._field_Methods);
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1bca440c4_isLive(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_1bca64b94;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL,_21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1bca64b94:;
			}
			_iter_end_1bca64b94:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				_21442_structs=jule::append(_21442_structs.slice(0LL,_21517_i),_21442_structs.slice((_21517_i + 1LL)));
				goto _iter_next_1bca6290b;
			};
			(_21517_i)++;
		}
	_iter_next_1bca6290b:;
	}
	_iter_end_1bca6290b:;;
}



inline void _1abc23308_removeDeadTraits(jule::Ptr<_1abbde989_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1abab10ca_Trait>>& _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23641_traits.len())) {
		{
			jule::Ptr<_1abab10ca_Trait> _23921_t = _23641_traits[_23717_i];;
			if ((!(_1bca36649_isLive(_self_, _23921_t)))) {
				_23641_traits=jule::append(_23641_traits.slice(0LL,_23717_i),_23641_traits.slice((_23717_i + 1LL)));
				goto _iter_next_1bca67438;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1ab08a1a9_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1bca69182;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL,_24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1bca69182:;
			}
			_iter_end_1bca69182:;;
			(_23717_i)++;
		}
	_iter_next_1bca67438:;
	}
	_iter_end_1bca67438:;;
}



inline void _1abc2357d_removeDeadsFile(jule::Ptr<_1abbde989_ObjectDeadCode> _self_, jule::Ptr<_1abcb6c2b_SymbolTable>& _25740_file) {
	_1abc22d0d_removeDeadFns(_self_, _25740_file.get()._field_Funcs);
	_1abc23083_removeDeadStructs(_self_, _25740_file.get()._field_Structs);
	_1abc23308_removeDeadTraits(_self_, _25740_file.get()._field_Traits);
	_1abc22a88_removeDeadGlobals(_self_, _25740_file.get()._field_Vars);
}



inline void _1abc23803_removeDeadsPackage(jule::Ptr<_1abbde989_ObjectDeadCode> _self_, jule::Ptr<_1abc50d08_Package>& _26443_pkg) {
	{
		auto &expr = _26443_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bca6dae3:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _26521_file = *it;
			{
				_1abc2357d_removeDeadsFile(_self_, _26521_file);
			}
			_iter_next_1bca6dae3:;
			++it;
			goto _iter_begin_1bca6dae3;
		}
		_iter_end_1bca6dae3:;
	};
}



inline void _1abc239ce_removeDeads(jule::Ptr<_1abbde989_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1bca6e363:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_1abc23803_removeDeadsPackage(_self_, _27121_used.get()._field_Package);
				};
			}
			_iter_next_1bca6e363:;
			++it;
			goto _iter_begin_1bca6e363;
		}
		_iter_end_1bca6e363:;
	};
	_1abc23803_removeDeadsPackage(_self_, _self_.get()._field_ir.get()._field_Main);
}



inline void _1abc23baa_elimanate(jule::Ptr<_1abbde989_ObjectDeadCode> _self_) {
	_1abc22813_collectLive(_self_);
	_1abc239ce_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1abbde989_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ace15c9c_ObjectCoder> static__1acd774e4_New(jule::Ptr<_1ac317732_IR>& _8624_ir, _1acda29e7_SerializationInfo _8633_info) {
	jule::Ptr<_1ace15c9c_ObjectCoder> _8717_oc = jule::new_ptr<_1ace15c9c_ObjectCoder>(_1ace15c9c_ObjectCoder{._field_ir=_8624_ir, ._field_info=_8633_info, });;
	_8717_oc.get()._field_ec=static__1acd5c4b8_new(_8717_oc);
	_8717_oc.get()._field_sc=static__1acd54a43_new(_8717_oc);
	_8717_oc.get()._field_tc=static__1ace1c7dc_new(_8717_oc);
	_8717_oc.get()._field_dc=static__1acd6b609_new(_8717_oc);
	return _8717_oc;;
}



inline void _1acd978cc_write(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Str _9825_s) {
	_self_.get()._field_Obj+=_9825_s;
}



inline void _1acddb910_addIndent(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer+=jule::Str("\t", 1);
}



inline void _1acddbe2c_doneIndent(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL,(_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1acde0480_indent(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1acde6464_findAnyType(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1abce79d7_TypeKind>& _11736_t) {
	{
		auto &expr = _self_.get()._field_anyTypeMap;
		auto it = expr.begin();
		_iter_begin_1bcebd1c9:;
		if (it != expr.end()) {
			jule::I64 _11814_i = it - expr.begin();
			jule::Ptr<_1abce79d7_TypeKind> _11821_at = *it;
			{
				if (_1abce81e1_Equal(_11821_at, _11736_t)) {
					return _11814_i;;
				};
			}
			_iter_next_1bcebd1c9:;
			++it;
			_11814_i++;
			goto _iter_begin_1bcebd1c9;
		}
		_iter_end_1bcebd1c9:;
	};
	return -1LL;;
}



inline jule::I64 _1acd9beca_pushAnyType(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1abce79d7_TypeKind>& _12636_t) {
	jule::I64 _12717_i = _1acde6464_findAnyType(_self_, _12636_t);;
	if ((_12717_i != -1LL)) {
		return _12717_i;;
	};
	_12717_i=static_cast<jule::I64>(_self_.get()._field_anyTypeMap.len());
	_self_.get()._field_anyTypeMap = jule::alloc_for_append(_self_.get()._field_anyTypeMap,1);_self_.get()._field_anyTypeMap.__push(_12636_t);;
	jule::Str _13313_si = _1aba81485_Itoa(_12717_i);;
	if ((_1abcea0d3_Sptr(_12636_t.ptr()) != nullptr)) {
		jule::Str _13517_elem_kind = _1ace2265a_kind(_self_.get()._field_tc.ptr(), _1abcea0d3_Sptr(_12636_t.ptr()).get()._field_Elem);;
		jule::Str _13617_kind = _1ace1d524_asSptr(_self_.get()._field_tc.ptr(), _13517_elem_kind);;
		_self_.get()._field_anyObj+=jule::Str("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_13517_elem_kind;
		_self_.get()._field_anyObj+=jule::Str(">().dealloc(); }\n", 17);
		_self_.get()._field_anyObj+=jule::Str("struct jule::Any::Type ", 23);
		_self_.get()._field_anyObj+=jule::Str("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58);
		_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_compare(const jule::Any &any, const ", 37);
		_self_.get()._field_anyObj+=_13617_kind;
		_self_.get()._field_anyObj+=jule::Str(" &other) { return any.type == &__jule_any_type", 46);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52);
	} else {
		jule::Bool _16217_comparable = _1abce8de5_Comparable(_12636_t.ptr());;
		jule::Str _16317_kind = _1ace2265a_kind(_self_.get()._field_tc.ptr(), _12636_t);;
		if ((_16317_kind == jule::Str("[<unimplemented_type_kind>]", 27))) {
			jule::outln(_1abce7dd3_Str(_12636_t.ptr()));
		};
		_self_.get()._field_anyObj+=jule::Str("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_16317_kind;
		_self_.get()._field_anyObj+=jule::Str(">().dealloc(); }\n", 17);
		if (_16217_comparable) {
			_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_eq(void *alloc, void *other) noexcept { return *static_cast<", 61);
			_self_.get()._field_anyObj+=_16317_kind;
			_self_.get()._field_anyObj+=jule::Str("*>(alloc) == *static_cast<", 26);
			_self_.get()._field_anyObj+=_16317_kind;
			_self_.get()._field_anyObj+=jule::Str("*>(other); }\n", 13);
		};
		_self_.get()._field_anyObj+=jule::Str("jule::Str __jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const ", 77);
		_self_.get()._field_anyObj+=_16317_kind;
		_self_.get()._field_anyObj+=jule::Str("*>(alloc)); }\n", 14);
		_self_.get()._field_anyObj+=jule::Str("struct jule::Any::Type ", 23);
		_self_.get()._field_anyObj+=jule::Str("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc, ", 10);
		if (_16217_comparable) {
			_self_.get()._field_anyObj+=jule::Str(".eq=__jule_any_type", 19);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_eq, ", 5);
		};
		_self_.get()._field_anyObj+=jule::Str(".to_str=__jule_any_type", 23);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_to_str};\n", 10);
		if (_16217_comparable) {
			_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_compare(const jule::Any &any, const ", 37);
			_self_.get()._field_anyObj+=_16317_kind;
			_self_.get()._field_anyObj+=jule::Str(" &other) { return any.type == &__jule_any_type", 46);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str(" && __jule_any_type", 19);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_eq(any.data.alloc, (void*)&other); }\n", 38);
		};
	};
	return _12717_i;;
}



inline void _1acd9b20a_pushResultIns(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1abaa1d79_FnIns>& _22538_f) {
	jule::Str _22613_s = _1ace27198_code(_self_.get()._field_tc.get()._field_rc.ptr(), _22538_f.get()._field_Result);;
	jule::Bool _22717_ok = false;;
	_self_.get()._field_resultMap.lookup(_22613_s, nullptr, &(_22717_ok));
	if (_22717_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_22613_s]=false;
	jule::Str _23217_obj = jule::Str::alloc(0LL, 128LL);;
	_23217_obj+=jule::Str("struct ", 7);
	_23217_obj+=_22613_s;
	_23217_obj+=jule::Str(" {\n", 3);
	{
		auto &expr = _1abceba0d_Tup(_22538_f.get()._field_Result.ptr()).get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1bced1121:;
		if (it != expr.end()) {
			jule::I64 _23614_i = it - expr.begin();
			jule::Ptr<_1abce79d7_TypeKind> _23621_t = *it;
			{
				_23217_obj+=jule::Str("\t", 1);
				_23217_obj+=_1ace2265a_kind(_self_.get()._field_tc.ptr(), _23621_t);
				_23217_obj+=jule::Str(" ", 1);
				_23217_obj+=jule::Str("__jule_result_arg", 17);
				_23217_obj+=_1aba81485_Itoa(_23614_i);
				_23217_obj+=jule::Str(";\n", 2);
			}
			_iter_next_1bced1121:;
			++it;
			_23614_i++;
			goto _iter_begin_1bced1121;
		}
		_iter_end_1bced1121:;
	};
	_23217_obj+=jule::Str("};\n", 3);
	_self_.get()._field_resultDecls = jule::alloc_for_append(_self_.get()._field_resultDecls,1);_self_.get()._field_resultDecls.__push(_23217_obj);;
}



inline void _1acddddc9_pushResult(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1aba9e1c8_Fn>& _24835_f) {
	if ((_1aba9e63a_IsVoid(_24835_f.ptr()) || (_24835_f.get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _25217_n = _24835_f.get()._field_Instances.len();;
	if ((_24835_f.get()._field_Generics.len() == 0LL)) {
		_25217_n=1LL;
	};
	{
		auto expr = _24835_f.get()._field_Instances.slice(0LL,_25217_n);
		auto it = expr.begin();
		_iter_begin_1bced4e05:;
		if (it != expr.end()) {
			jule::Ptr<_1abaa1d79_FnIns> _25621_ins = *it;
			{
				_1acd9b20a_pushResultIns(_self_, _25621_ins);
			}
			_iter_next_1bced4e05:;
			++it;
			goto _iter_begin_1bced4e05;
		}
		_iter_end_1bced4e05:;
	};
}



inline jule::I64 _1acd77c64_findTypeOffset(_1ace15c9c_ObjectCoder* _self_, jule::Ptr<_1abab10ca_Trait> _26129_t, jule::Ptr<_1abce79d7_TypeKind> _26144_k) {
	if ((_26129_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1ab08a583_StructIns> _26517_s = nullptr;;
	if ((_1abcea0d3_Sptr(_26144_k.ptr()) != nullptr)) {
		_26144_k=_1abcea0d3_Sptr(_26144_k.ptr()).get()._field_Elem;
	};
	if ((_1abceb2c1_Struct(_26144_k.ptr()) == nullptr)) {
		return -1LL;;
	};
	_26517_s=_1abceb2c1_Struct(_26144_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1bced7b94:;
		if (it != expr.end()) {
			jule::Ptr<_1acd7800b_traitHash> &_27316_hash = *it;
			{
				if (((_27316_hash.get()._field_t == _26129_t) && (_27316_hash.get()._field_s == _26517_s))) {
					return _27316_hash.get()._field_i;;
				};
			}
			_iter_next_1bced7b94:;
			++it;
			goto _iter_begin_1bced7b94;
		}
		_iter_end_1bced7b94:;
	};
	return -1LL;;
}



inline void _1ace16396_locInfo(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1a97237bc_Token>& _28228_t) {
	jule::Str &_28314_loc = _28228_t.get()._field_File.get()._field_Path;;
	if (_1d7c0a98a_Production) {
		{
			
			if (_1a78d463e_HasPrefix(_28314_loc,_1a79cdccc_PathStdlib)) {
				_case_begin_1bceda01a:;
				{
					_1acd978cc_write(_self_, _1acd69360_cstrBytes(static_cast<jule::Slice<jule::U8>>(_28314_loc.slice((_1a7917dd1_Dir(_1a79cdccc_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_1a78d463e_HasPrefix(_28314_loc,_self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1bceda6e1:;
				{
					_1acd978cc_write(_self_, _1acd69360_cstrBytes(static_cast<jule::Slice<jule::U8>>(_28314_loc.slice((_1a7917dd1_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1bced9b74:;
				{
					_1acd978cc_write(_self_, _1acd69360_cstrBytes(static_cast<jule::Slice<jule::U8>>(_28314_loc)));
				}
			}
			_match_end_1bced9aa8:;
		};
	} else {
		_1acd978cc_write(_self_, _1acd69360_cstrBytes(static_cast<jule::Slice<jule::U8>>(_28314_loc)));
	};
	_1acd978cc_write(_self_, jule::Str(":", 1));
	_1acd978cc_write(_self_, _1aba81485_Itoa(_28228_t.get()._field_Row));
	_1acd978cc_write(_self_, jule::Str(":", 1));
	_1acd978cc_write(_self_, _1aba81485_Itoa(_28228_t.get()._field_Column));
}



inline void _1ace164c8_head(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	_1ace0de82_Time _30913_time = static__1ace0e526_Now();;
	_1ace0d7de_AbsTime _31013_abs = _1ace10b65_Abs(&_30913_time);;
	_1acd978cc_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1acd978cc_write(_self_, jule::Str("// JuleC version: ", 18));
	_1acd978cc_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_1acd978cc_write(_self_, jule::Str("\n", 1));
	_1acd978cc_write(_self_, jule::Str("// Date: ", 9));
	_1acd978cc_write(_self_, _1aba81221_FmtUint(_31013_abs._field_Day,10LL));
	_1acd978cc_write(_self_, jule::Str("/", 1));
	_1acd978cc_write(_self_, _1aba81221_FmtUint(_31013_abs._field_Month,10LL));
	_1acd978cc_write(_self_, jule::Str("/", 1));
	_1acd978cc_write(_self_, _1aba81221_FmtUint(_31013_abs._field_Year,10LL));
	_1acd978cc_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1acd978cc_write(_self_, _self_.get()._field_info._field_Compiler);
	_1acd978cc_write(_self_, jule::Str(" ", 1));
	_1acd978cc_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1acd978cc_write(_self_, jule::Str("\n\n", 2));
	if (_1d7c0a98a_Production) {
		_1acd978cc_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1d7c0a2e7_RC))) {
		_1acd978cc_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1d7c0a6c1_Safety))) {
		_1acd978cc_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1ace1660a_links(_self_);
	_1acd978cc_write(_self_, jule::Str("\n\n#include \"", 12));
	_1acd978cc_write(_self_, _1a79de1e9_PathApi);
	_1acd978cc_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1ace1660a_links(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1bcee5d7d:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _34716_used = *it;
			{
				{
					
					if ((!(_34716_used.get()._field_CppLinked))) {
						_case_begin_1bcee68d9:;
						{
							goto _iter_next_1bcee5d7d;
						}
					}
					else if (_1a7988616_IsStdHeaderPath(_34716_used.get()._field_Path)) {
						_case_begin_1bcee6961:;
						{
							_1acd978cc_write(_self_, jule::Str("#include ", 9));
							_1acd978cc_write(_self_, _34716_used.get()._field_Path);
							_1acd978cc_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_1a79888be_IsValidHeaderExt(_1a791751d_Ext(_34716_used.get()._field_Path))) {
						_case_begin_1bcee69d8:;
						{
							_1acd978cc_write(_self_, jule::Str("#include \"", 10));
							_1acd978cc_write(_self_, _34716_used.get()._field_Path);
							_1acd978cc_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1bcee67b8:;
				};
			}
			_iter_next_1bcee5d7d:;
			++it;
			goto _iter_begin_1bcee5d7d;
		}
		_iter_end_1bcee5d7d:;
	};
}



inline void _1ace1673c_prepareStructure(_1ace15c9c_ObjectCoder* _self_, jule::Ptr<_1ab08a1a9_Struct>& _36340_s) {
	{
		auto &expr = _36340_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bcee849b:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a583_StructIns> _36421_ins = *it;
			{
				{
					auto &expr = _36421_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1bcee9920:;
					if (it != expr.end()) {
						jule::Ptr<_1aba9e1c8_Fn> _36525_m = *it;
						{
							if (_36525_m.get()._field_Statically) {
								goto _iter_next_1bcee9920;
							};
							{
								auto &expr = _36525_m.get()._field_Instances;
								auto it = expr.begin();
								_iter_begin_1bceea679:;
								if (it != expr.end()) {
									jule::Ptr<_1abaa1d79_FnIns> _36929_mins = *it;
									{
										jule::Ptr<_1abaa0eaa_ParamIns> _37029_p = _36929_mins.get()._field_Params[0LL];;
										if ((!(_1aba9d22c_IsRef(_37029_p.get()._field_Decl.ptr())))) {
											_37029_p.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(jule::new_ptr<_1ace1b7ec_customType>(_1ace1b7ec_customType{._field_kind=_1ace1d832_asPtr((*_self_)._field_tc.ptr(), _1ace2265a_kind((*_self_)._field_tc.ptr(), _37029_p.get()._field_Kind))}), 13)});
										} else {
											_37029_p.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(jule::new_ptr<_1ace1b7ec_customType>(_1ace1b7ec_customType{._field_kind=_1ace2265a_kind((*_self_)._field_tc.ptr(), _37029_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_1bceea679:;
									++it;
									goto _iter_begin_1bceea679;
								}
								_iter_end_1bceea679:;
							};
						}
						_iter_next_1bcee9920:;
						++it;
						goto _iter_begin_1bcee9920;
					}
					_iter_end_1bcee9920:;
				};
			}
			_iter_next_1bcee849b:;
			++it;
			goto _iter_begin_1bcee849b;
		}
		_iter_end_1bcee849b:;
	};
}



inline void _1ace1686e_prepareStructures(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bceea25b:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a1a9_Struct> _39021_s = *it;
			{
				if ((_39021_s.get()._field_Token != nullptr)) {
					_1ace1673c_prepareStructure(_self_.ptr(), _39021_s);
				};
			}
			_iter_next_1bceea25b:;
			++it;
			goto _iter_begin_1bceea25b;
		}
		_iter_end_1bceea25b:;
	};
}



inline void _1ace169a1_iterPackages(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1abc50d08_Package>&)> _39732_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1bceee260:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _39821_used = *it;
			{
				if ((!(_39821_used.get()._field_CppLinked))) {
					_39732_f(_39821_used.get()._field_Package);
				};
			}
			_iter_next_1bceee260:;
			++it;
			goto _iter_begin_1bceee260;
		}
		_iter_end_1bceee260:;
	};
	_39732_f(_self_.get()._field_ir.get()._field_Main);
}



inline void _1ace16ad3_buildTraitMap(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	_1ace169a1_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1abc50d08_Package>&)>([=](jule::Ptr<_1abc50d08_Package>& _40735_pkg) mutable -> void {
		_1ace1a862_iterFiles(_40735_pkg,jule::Fn<void(jule::Ptr<_1abcb6c2b_SymbolTable>&)>([=](jule::Ptr<_1abcb6c2b_SymbolTable>& _40836_file) mutable -> void {
			{
				auto &expr = _40836_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1bd0024c7:;
				if (it != expr.end()) {
					jule::Ptr<_1abab10ca_Trait> _40929_t = *it;
					{
						if ((_40929_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_40929_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1acd7800b_traitHash>(_1acd7800b_traitHash{._field_t=_40929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1bd0024c7;
						};
						jule::I64 _42129_i = 0LL;;
						{
							auto &expr = _40929_t.get()._field_Implemented;
							auto it = expr.begin();
							_iter_begin_1bd002c69:;
							if (it != expr.end()) {
								jule::Ptr<_1ab08a1a9_Struct> _42233_s = *it;
								{
									{
										auto &expr = _42233_s.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1bd004430:;
										if (it != expr.end()) {
											jule::Ptr<_1ab08a583_StructIns> _42337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1acd7800b_traitHash>(_1acd7800b_traitHash{._field_t=_40929_t, ._field_s=_42337_ins, ._field_i=_42129_i}));;
												(_42129_i)++;
											}
											_iter_next_1bd004430:;
											++it;
											goto _iter_begin_1bd004430;
										}
										_iter_end_1bd004430:;
									};
								}
								_iter_next_1bd002c69:;
								++it;
								goto _iter_begin_1bd002c69;
							}
							_iter_end_1bd002c69:;
						};
					}
					_iter_next_1bd0024c7:;
					++it;
					goto _iter_begin_1bd0024c7;
				}
				_iter_end_1bd0024c7:;
			};
		}));
	}));
}



inline void _1ace16c15_traitDecls(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	_1ace169a1_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1abc50d08_Package>&)>([=](jule::Ptr<_1abc50d08_Package>& _43835_pkg) mutable -> void {
		_1ace1a862_iterFiles(_43835_pkg,jule::Fn<void(jule::Ptr<_1abcb6c2b_SymbolTable>&)>([=](jule::Ptr<_1abcb6c2b_SymbolTable>& _43936_file) mutable -> void {
			{
				auto &expr = _43936_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1bd006d7d:;
				if (it != expr.end()) {
					jule::Ptr<_1abab10ca_Trait> _44029_t = *it;
					{
						if ((_44029_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1acde0480_indent(_self_);
						_1acd978cc_write(_self_, jule::Str("struct ", 7));
						_1acd978cc_write(_self_, static__1acd713de_traitDecl(_44029_t));
						_1acd978cc_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1bd006d7d:;
					++it;
					goto _iter_begin_1bd006d7d;
				}
				_iter_end_1bd006d7d:;
			};
		}));
	}));
}



inline void _1ace16d47_structurePlainDecl(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1ab08a1a9_Struct>& _45343_s) {
	{
		auto &expr = _45343_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bd00691b:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a583_StructIns> _45421_ins = *it;
			{
				_1acd978cc_write(_self_, jule::Str("struct ", 7));
				_1acd978cc_write(_self_, static__1acd71bc5_structureIns(_45421_ins));
				_1acd978cc_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1bd00691b:;
			++it;
			goto _iter_begin_1bd00691b;
		}
		_iter_end_1bd00691b:;
	};
}



inline void _1ace16e79_structurePlainDecls(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bd009d2b:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a1a9_Struct> _46221_s = *it;
			{
				if ((_46221_s.get()._field_Token != nullptr)) {
					_1ace16d47_structurePlainDecl(_self_, _46221_s);
				};
			}
			_iter_next_1bd009d2b:;
			++it;
			goto _iter_begin_1bd009d2b;
		}
		_iter_end_1bd009d2b:;
	};
}



inline void _1ace170ab_fieldDecl(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1ab08a396_FieldIns>& _46934_f) {
	_1acd978cc_write(_self_, _1ace2265a_kind(_self_.get()._field_tc.ptr(), _46934_f.get()._field_Kind));
	_1acd978cc_write(_self_, jule::Str(" ", 1));
	_1acd978cc_write(_self_, static__1acd71e6c_field(_46934_f.get()._field_Decl));
	if ((_46934_f.get()._field_Default == nullptr)) {
		if (_1ace291ab_shouldInitialized(_46934_f.get()._field_Kind)) {
			_1acd978cc_write(_self_, jule::Str(" = ", 3));
			_1acd6897a_initExpr(_self_.get()._field_ec, _46934_f.get()._field_Kind);
		};
	} else {
		_1acd978cc_write(_self_, jule::Str(" = ", 3));
		_1acd68480_expr(_self_.get()._field_ec, _46934_f.get()._field_Default.get()._field_Model);
	};
	_1acd978cc_write(_self_, jule::Str(";", 1));
}



inline void _1ace171dd_structureDestructor(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1ab08a583_StructIns>& _48744_s) {
	;
	jule::Ptr<_1aba9e1c8_Fn> _49013_disposeMethod = _1ab0656b2_FindMethod(_48744_s.ptr(), jule::Str("Dispose", 7),false);;
	jule::Bool _49117_disposed = static__1abc75415_Dispose(_49013_disposeMethod);;
	if ((!(_49117_disposed))) {
		return;;
	};
	_1acd978cc_write(_self_, jule::Str("~", 1));
	_1acd978cc_write(_self_, static__1acd71bc5_structureIns(_48744_s));
	_1acd978cc_write(_self_, jule::Str("(void) { ", 9));
	_1acd978cc_write(_self_, static__1acd70da0_func(_49013_disposeMethod));
	_1acd978cc_write(_self_, jule::Str("(this); }", 9));
}



inline void _1ace17320_structureDeriveDefsDecls(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1ab08a583_StructIns>& _50345_s) {
	if (_1ab0541d9_IsDerives(_50345_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1acde0480_indent(_self_);
		_1acd978cc_write(_self_, _1acd6b917_cloneFuncDecl(_self_.get()._field_dc.ptr(), _50345_s.get()._field_Decl));
		_1acd978cc_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1ace17452_structureOperatorEq(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Str& _51140_ident, jule::Ptr<_1ab08a583_StructIns>& _51157_s) {
	if ((!(_51157_s.get()._field_Comparable))) {
		return;;
	};
	if ((_51157_s.get()._field_Operators._field_Eq != nullptr)) {
		_1ace176b6_structureOperator(_self_, _51140_ident,_51157_s.get()._field_Operators._field_Eq,jule::Str("==", 2));
		return;;
	};
	_1acde0480_indent(_self_);
	if (_1a98cd9aa_Inline) {
		_1acd978cc_write(_self_, jule::Str("inline ", 7));
	};
	_1acd978cc_write(_self_, jule::Str("bool operator==(", 16));
	_1acd978cc_write(_self_, _51140_ident);
	_1acd978cc_write(_self_, jule::Str(" _other) {", 10));
	if ((_51157_s.get()._field_Fields.len() > 0LL)) {
		_1acddb910_addIndent(_self_);
		_1acd978cc_write(_self_, jule::Str("\n", 1));
		_1acde0480_indent(_self_);
		_1acd978cc_write(_self_, jule::Str("return ", 7));
		_1acddb910_addIndent(_self_);
		jule::Bool _53421_writed = false;;
		{
			auto &expr = _51157_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1bd017dd3:;
			if (it != expr.end()) {
				jule::Ptr<_1ab08a396_FieldIns> _53525_f = *it;
				{
					jule::Ptr<_1ab08a583_StructIns> _53721_strct = _1abceb2c1_Struct(_53525_f.get()._field_Kind.ptr());;
					if ((((_53721_strct != nullptr) && (_53721_strct.get()._field_Decl != nullptr)) && _53721_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_1bd017dd3;
					};
					if (_53421_writed) {
						_1acd978cc_write(_self_, jule::Str(" &&", 3));
					};
					_53421_writed=true;
					_1acd978cc_write(_self_, jule::Str("\n", 1));
					_1acde0480_indent(_self_);
					_1acd978cc_write(_self_, jule::Str("this->", 6));
					jule::Str _54821_fIdent = static__1acd71e6c_field(_53525_f.get()._field_Decl);;
					_1acd978cc_write(_self_, _54821_fIdent);
					_1acd978cc_write(_self_, jule::Str(" == _other.", 11));
					_1acd978cc_write(_self_, _54821_fIdent);
				}
				_iter_next_1bd017dd3:;
				++it;
				goto _iter_begin_1bd017dd3;
			}
			_iter_end_1bd017dd3:;
		};
		_1acddbe2c_doneIndent(_self_);
		if ((!(_53421_writed))) {
			_1acd978cc_write(_self_, jule::Str("true", 4));
		};
		_1acd978cc_write(_self_, jule::Str(";\n", 2));
		_1acddbe2c_doneIndent(_self_);
		_1acde0480_indent(_self_);
		_1acd978cc_write(_self_, jule::Str("}", 1));
	} else {
		_1acd978cc_write(_self_, jule::Str(" return true; }", 15));
	};
	_1acd978cc_write(_self_, jule::Str("\n\n", 2));
}



inline void _1ace17584_structureOperatorNotEq(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Str& _56743_ident, jule::Ptr<_1ab08a583_StructIns>& _56760_s) {
	if ((!(_56760_s.get()._field_Comparable))) {
		return;;
	};
	_1acde0480_indent(_self_);
	if (_1a98cd9aa_Inline) {
		_1acd978cc_write(_self_, jule::Str("inline ", 7));
	};
	_1acd978cc_write(_self_, jule::Str("bool operator!=(", 16));
	_1acd978cc_write(_self_, _56743_ident);
	_1acd978cc_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1ace176b6_structureOperator(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Str& _58138_ident, jule::Ptr<_1abaa1d79_FnIns>& _58155_f, jule::Str _58166_op) {
	if ((_58155_f == nullptr)) {
		return;;
	};
	jule::Bool _58613_unary = (_58155_f.get()._field_Params.len() == 1LL);;
	jule::Bool _58713_assignment = _1aba9e63a_IsVoid(_58155_f.get()._field_Decl.ptr());;
	_1acde0480_indent(_self_);
	if (_1a98cd9aa_Inline) {
		_1acd978cc_write(_self_, jule::Str("inline ", 7));
	};
	if (_58713_assignment) {
		_1acd978cc_write(_self_, _58138_ident);
		_1acd978cc_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1abce9d6e_Prim(_58155_f.get()._field_Result.ptr()) == nullptr)) {
			_1acd978cc_write(_self_, _58138_ident);
		} else {
			_1acd978cc_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1acd978cc_write(_self_, jule::Str(" operator", 9));
	_1acd978cc_write(_self_, _58166_op);
	_1acd978cc_write(_self_, jule::Str("(", 1));
	if ((!(_58613_unary))) {
		jule::Ptr<_1abaa0eaa_ParamIns> _60921_p = _58155_f.get()._field_Params[1LL];;
		_1acd978cc_write(_self_, _1ace21604_paramIns(_self_.get()._field_tc.ptr(), _60921_p));
		_1acd978cc_write(_self_, jule::Str(" _other", 7));
	};
	_1acd978cc_write(_self_, jule::Str(") { ", 4));
	if ((!(_58713_assignment))) {
		_1acd978cc_write(_self_, jule::Str("return ", 7));
	};
	_1acd978cc_write(_self_, static__1acd71147_funcIns(_58155_f));
	if ((!(_58613_unary))) {
		_1acd978cc_write(_self_, jule::Str("(this, _other); ", 16));
		if (_58713_assignment) {
			_1acd978cc_write(_self_, jule::Str("return *this; ", 14));
		};
		_1acd978cc_write(_self_, jule::Str("}", 1));
	} else {
		_1acd978cc_write(_self_, jule::Str("(this); }", 9));
	};
	_1acd978cc_write(_self_, jule::Str("\n\n", 2));
}



inline void _1ace177e8_structureOperators(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1ab08a583_StructIns>& _63043_s) {
	jule::Str _63113_ident = static__1acd71bc5_structureIns(_63043_s);;
	_1ace17452_structureOperatorEq(_self_, _63113_ident,_63043_s);
	_1ace17584_structureOperatorNotEq(_self_, _63113_ident,_63043_s);
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Gt,jule::Str(">", 1));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_GtEq,jule::Str(">=", 2));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Lt,jule::Str("<", 1));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_LtEq,jule::Str("<=", 2));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Shl,jule::Str("<<", 2));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Shr,jule::Str(">>", 2));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Add,jule::Str("+", 1));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Sub,jule::Str("-", 1));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Div,jule::Str("/", 1));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Mul,jule::Str("*", 1));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Mod,jule::Str("%", 1));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitAnd,jule::Str("&", 1));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitOr,jule::Str("|", 1));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitXor,jule::Str("^", 1));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Neg,jule::Str("-", 1));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Pos,jule::Str("+", 1));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitNot,jule::Str("~", 1));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_AddAssign,jule::Str("+=", 2));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_SubAssign,jule::Str("-=", 2));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_DivAssign,jule::Str("/=", 2));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_MulAssign,jule::Str("*=", 2));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_ModAssign,jule::Str("%=", 2));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_ShlAssign,jule::Str("<<=", 3));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_ShrAssign,jule::Str(">>=", 3));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitOrAssign,jule::Str("|=", 2));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitAndAssign,jule::Str("&=", 2));
	_1ace176b6_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitXorAssign,jule::Str("^=", 2));
}



inline void _1ace1792a_structureInsDecl(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1ab08a583_StructIns>& _66941_s) {
	if ((_66941_s.get()._field_Methods.len() > 0LL)) {
		{
			auto &expr = _66941_s.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1bd035dac:;
			if (it != expr.end()) {
				jule::Ptr<_1aba9e1c8_Fn> _67125_m = *it;
				{
					_1acddddc9_pushResult(_self_, _67125_m);
					_1ace18035_funcDecl(_self_, _67125_m,false);
				}
				_iter_next_1bd035dac:;
				++it;
				goto _iter_begin_1bd035dac;
			}
			_iter_end_1bd035dac:;
		};
	};
	_1acd978cc_write(_self_, jule::Str("struct ", 7));
	jule::Str _67813_outIdent = static__1acd71bc5_structureIns(_66941_s);;
	_1acd978cc_write(_self_, _67813_outIdent);
	_1acd978cc_write(_self_, jule::Str(" {\n", 3));
	_1acddb910_addIndent(_self_);
	{
		auto &expr = _66941_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1bd037d7b:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a396_FieldIns> _68421_f = *it;
			{
				_1acde0480_indent(_self_);
				_1ace170ab_fieldDecl(_self_, _68421_f);
				_1acd978cc_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1bd037d7b:;
			++it;
			goto _iter_begin_1bd037d7b;
		}
		_iter_end_1bd037d7b:;
	};
	_1acde0480_indent(_self_);
	_1ace171dd_structureDestructor(_self_, _66941_s);
	_1acd978cc_write(_self_, jule::Str("\n\n", 2));
	_1acde0480_indent(_self_);
	_1acd978cc_write(_self_, _67813_outIdent);
	_1acd978cc_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1ace17320_structureDeriveDefsDecls(_self_, _66941_s);
	_1ace177e8_structureOperators(_self_, _66941_s);
	_1acd978cc_write(_self_, jule::Str("\n", 1));
	_1acddbe2c_doneIndent(_self_);
	_1acde0480_indent(_self_);
	_1acd978cc_write(_self_, jule::Str("};", 2));
}



inline void _1ace17a5c_structureDecl(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1ab08a1a9_Struct>& _70938_s) {
	{
		auto &expr = _70938_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bd03be7e:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a583_StructIns> _71021_ins = *it;
			{
				_1ace1792a_structureInsDecl(_self_, _71021_ins);
			}
			_iter_next_1bd03be7e:;
			++it;
			goto _iter_begin_1bd03be7e;
		}
		_iter_end_1bd03be7e:;
	};
}



inline void _1ace17b8e_structureDecls(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bd03cd3c:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a1a9_Struct> _71621_s = *it;
			{
				if ((_71621_s.get()._field_Token != nullptr)) {
					_1ace17a5c_structureDecl(_self_, _71621_s);
					_1acd978cc_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1bd03cd3c:;
			++it;
			goto _iter_begin_1bd03cd3c;
		}
		_iter_end_1bd03cd3c:;
	};
}



inline void _1ace17cc1_paramsDecls(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1abaa0eaa_ParamIns>>& _72436_params) {
	if ((_72436_params.len() == 0LL)) {
		_1acd978cc_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1acd978cc_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _72436_params;
		auto it = expr.begin();
		_iter_begin_1bd03edd8:;
		if (it != expr.end()) {
			jule::I64 _73114_i = it - expr.begin();
			jule::Ptr<_1abaa0eaa_ParamIns> _73121_p = *it;
			{
				_1acd978cc_write(_self_, _1ace21604_paramIns(_self_.get()._field_tc.ptr(), _73121_p));
				if (((_72436_params.len() - _73114_i) > 1LL)) {
					_1acd978cc_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1bd03edd8:;
			++it;
			_73114_i++;
			goto _iter_begin_1bd03edd8;
		}
		_iter_end_1bd03edd8:;
	};
	_1acd978cc_write(_self_, jule::Str(")", 1));
}



inline void _1ace17e03_funcHead(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1abaa1d79_FnIns>& _74133_f, jule::Bool _74144_ptr) {
	if ((((!(_74144_ptr)) && _1a98cd9aa_Inline) && (!(_1aba9eb13_IsEntryPoint(_74133_f.get()._field_Decl.ptr()))))) {
		_1acd978cc_write(_self_, jule::Str("inline ", 7));
	};
	_1ace21c31_funcInsResult(_self_.get()._field_tc.ptr(), _self_.get()._field_Obj,_74133_f);
	if (_74144_ptr) {
		_1acd978cc_write(_self_, jule::Str("(*", 2));
		_1acd978cc_write(_self_, static__1acd71147_funcIns(_74133_f));
		_1acd978cc_write(_self_, jule::Str(")", 1));
	} else {
		_1acd978cc_write(_self_, jule::Str(" ", 1));
		_1acd978cc_write(_self_, static__1acd71147_funcIns(_74133_f));
	};
}



inline void _1ace18035_funcDecl(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1aba9e1c8_Fn>& _75633_f, jule::Bool _75641_ptr) {
	{
		auto &expr = _75633_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bd045394:;
		if (it != expr.end()) {
			jule::Ptr<_1abaa1d79_FnIns> _75721_c = *it;
			{
				_1acde0480_indent(_self_);
				_1ace17e03_funcHead(_self_, _75721_c,_75641_ptr);
				_1ace17cc1_paramsDecls(_self_, _75721_c.get()._field_Params);
				_1acd978cc_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1bd045394:;
			++it;
			goto _iter_begin_1bd045394;
		}
		_iter_end_1bd045394:;
	};
}



inline void _1ace18167_funcDecls(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	_1ace169a1_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1abc50d08_Package>&)>([=](jule::Ptr<_1abc50d08_Package>& _76635_pkg) mutable -> void {
		_1ace1a862_iterFiles(_76635_pkg,jule::Fn<void(jule::Ptr<_1abcb6c2b_SymbolTable>&)>([=](jule::Ptr<_1abcb6c2b_SymbolTable>& _76736_file) mutable -> void {
			{
				auto &expr = _76736_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1bd04885e:;
				if (it != expr.end()) {
					jule::Ptr<_1aba9e1c8_Fn> _76829_f = *it;
					{
						if (((!(_76829_f.get()._field_CppLinked)) && (_76829_f.get()._field_Token != nullptr))) {
							_1acddddc9_pushResult(_self_, _76829_f);
							_1ace18035_funcDecl(_self_, _76829_f,false);
						};
					}
					_iter_next_1bd04885e:;
					++it;
					goto _iter_begin_1bd04885e;
				}
				_iter_end_1bd04885e:;
			};
		}));
	}));
}



inline void _1ace18299_traitDataTypes(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	_1ace169a1_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1abc50d08_Package>&)>([=](jule::Ptr<_1abc50d08_Package>& _77935_pkg) mutable -> void {
		_1ace1a862_iterFiles(_77935_pkg,jule::Fn<void(jule::Ptr<_1abcb6c2b_SymbolTable>&)>([=](jule::Ptr<_1abcb6c2b_SymbolTable>& _78036_file) mutable -> void {
			{
				auto &expr = _78036_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1bd04b82e:;
				if (it != expr.end()) {
					jule::Ptr<_1abab10ca_Trait> _78129_t = *it;
					{
						if ((_78129_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1acd978cc_write(_self_, jule::Str("struct ", 7));
						_1acd978cc_write(_self_, static__1acd713de_traitDecl(_78129_t));
						_1acd978cc_write(_self_, jule::Str("MptrData", 8));
						_1acd978cc_write(_self_, jule::Str(" {\n", 3));
						_1acddb910_addIndent(_self_);
						{
							auto &expr = _78129_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1bd0535e4:;
							if (it != expr.end()) {
								jule::Ptr<_1aba9e1c8_Fn> _79033_m = *it;
								{
									jule::Ptr<_1abaa1d79_FnIns> _79133_ins = _79033_m.get()._field_Instances[0LL];;
									jule::Ptr<_1abaa0eaa_ParamIns> _79233_p = _79133_ins.get()._field_Params[0LL];;
									_79233_p.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_78129_t, 2)});
									{
										auto expr = _79133_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1bd054590:;
										if (it != expr.end()) {
											jule::I64 _79630_i = it - expr.begin();
											jule::Ptr<_1abaa0eaa_ParamIns> _79637_ip = *it;
											{
												if (_1a9726308_IsAnonIdent(_79637_ip.get()._field_Decl.get()._field_Ident)) {
													_79637_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1aba81485_Itoa(_79630_i));
												};
											}
											_iter_next_1bd054590:;
											++it;
											_79630_i++;
											goto _iter_begin_1bd054590;
										}
										_iter_end_1bd054590:;
									};
									if ((!(_1d7c0a98a_Production))) {
										_79133_ins.get()._field_Params = jule::alloc_for_append(_79133_ins.get()._field_Params,1);_79133_ins.get()._field_Params.__push(jule::new_ptr<_1abaa0eaa_ParamIns>(_1abaa0eaa_ParamIns{._field_Decl=jule::new_ptr<_1aba9c88b_Param>(_1aba9c88b_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(jule::new_ptr<_1ace1b7ec_customType>(_1ace1b7ec_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1ace18035_funcDecl(_self_, _79033_m,true);
								}
								_iter_next_1bd0535e4:;
								++it;
								goto _iter_begin_1bd0535e4;
							}
							_iter_end_1bd0535e4:;
						};
						_1acddbe2c_doneIndent(_self_);
						_1acde0480_indent(_self_);
						_1acd978cc_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1bd04b82e:;
					++it;
					goto _iter_begin_1bd04b82e;
				}
				_iter_end_1bd04b82e:;
			};
		}));
	}));
}



inline void _1ace183cb_paramIns(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1abaa0eaa_ParamIns>& _82333_p) {
	_1acd978cc_write(_self_, _1ace21604_paramIns(_self_.get()._field_tc.ptr(), _82333_p));
	_1acd978cc_write(_self_, jule::Str(" ", 1));
	_1acd978cc_write(_self_, static__1acd71686_param(_82333_p.get()._field_Decl));
}



inline void _1ace1850d_paramsIns(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1abaa0eaa_ParamIns>>& _82934_params) {
	if ((_82934_params.len() == 0LL)) {
		_1acd978cc_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1acd978cc_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _82934_params;
		auto it = expr.begin();
		_iter_begin_1bd059dc0:;
		if (it != expr.end()) {
			jule::I64 _83514_i = it - expr.begin();
			jule::Ptr<_1abaa0eaa_ParamIns> _83521_p = *it;
			{
				_1ace183cb_paramIns(_self_, _83521_p);
				if (((_82934_params.len() - _83514_i) > 1LL)) {
					_1acd978cc_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1bd059dc0:;
			++it;
			_83514_i++;
			goto _iter_begin_1bd059dc0;
		}
		_iter_end_1bd059dc0:;
	};
	_1acd978cc_write(_self_, jule::Str(")", 1));
}



inline void _1ace18640_varInitExpr(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1abc73ee6_Var>& _84436_v, jule::Fn<void(void)> _84445_init) {
	if (_84436_v.get()._field_Statically) {
		_1acd978cc_write(_self_, jule::Str("static ", 7));
	};
	_1acd978cc_write(_self_, _1ace2265a_kind(_self_.get()._field_tc.ptr(), _84436_v.get()._field_Kind.get()._field_Kind));
	_1acd978cc_write(_self_, jule::Str(" ", 1));
	if (_84436_v.get()._field_Reference) {
		_1acd978cc_write(_self_, jule::Str("&", 1));
	};
	_1acd978cc_write(_self_, static__1acd72214_var(_84436_v));
	if ((_84445_init != nullptr)) {
		_1acd978cc_write(_self_, jule::Str(" = ", 3));
		_84445_init();
	};
	_1acd978cc_write(_self_, jule::Str(";", 1));
}



inline void _1ace18772_var(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1abc73ee6_Var> _86227_v) {
	if (_1a9726061_IsIgnoreIdent(_86227_v.get()._field_Ident)) {
		return;;
	};
	if (((_86227_v.get()._field_Value != nullptr) && (_86227_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_86227_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			_1ace18640_varInitExpr(_self_, _86227_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1acd68705_val(_self_.get()._field_ec, _86227_v.get()._field_Value);
			}));
			return;;
		};
		_1ace18640_varInitExpr(_self_, _86227_v,nullptr);
		return;;
	};
	if (_1ace291ab_shouldInitialized(_86227_v.get()._field_Kind.get()._field_Kind)) {
		_1ace18640_varInitExpr(_self_, _86227_v,jule::Fn<void(void)>([=](void) mutable -> void {
			_1acd6897a_initExpr(_self_.get()._field_ec, _86227_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_1ace18640_varInitExpr(_self_, _86227_v,nullptr);
}



inline void _1ace188a4_func(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1aba9e1c8_Fn>& _88129_f) {
	{
		auto &expr = _88129_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bd064528:;
		if (it != expr.end()) {
			jule::Ptr<_1abaa1d79_FnIns> _88221_ins = *it;
			{
				_1ace17e03_funcHead(_self_, _88221_ins,false);
				_1ace1850d_paramsIns(_self_, _88221_ins.get()._field_Params);
				_1acd978cc_write(_self_, jule::Str(" ", 1));
				_1acd5962a_funcScope(_self_.get()._field_sc, _88221_ins);
				if ((_88221_ins.get()._field_Scope != nullptr)) {
					_1acd978cc_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1bd064528:;
			++it;
			goto _iter_begin_1bd064528;
		}
		_iter_end_1bd064528:;
	};
}



inline void _1ace189d6_traitWrappers(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1bd0668c1:;
		if (it != expr.end()) {
			jule::Ptr<_1acd7800b_traitHash> _89421_hash = *it;
			{
				{
					auto &expr = _89421_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1bd06700e:;
					if (it != expr.end()) {
						jule::Ptr<_1aba9e1c8_Fn> _89525_m = *it;
						{
							jule::Str _89621_ident = _89525_m.get()._field_Ident;;
							_89525_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_89525_m.get()._field_Ident=((_89621_ident + jule::Str("_", 1)) + _1aba81485_Itoa(_89421_hash.get()._field_i));
							_1ace188a4_func(_self_, _89525_m);
							_89525_m.get()._field_Ident=_89621_ident;
							if ((_89421_hash.get()._field_s == nullptr)) {
								if (_1d7c0a98a_Production) {
									_1acd978cc_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1acd978cc_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1bd06700e;
							};
							jule::Bool _91221_ptr = (!(_1aba9d22c_IsRef(_89525_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_1aba9e1c8_Fn> _91425_sm = _1ab0656b2_FindMethod(_89421_hash.get()._field_s.ptr(), _89525_m.get()._field_Ident,false);;
							if (((_91425_sm == nullptr) || (_91425_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_1bd06700e;
							};
							_1acddb910_addIndent(_self_);
							_1acd978cc_write(_self_, jule::Str("{\n", 2));
							_1acde0480_indent(_self_);
							if ((_91425_sm.get()._field_Exceptional || (!(_1aba9e63a_IsVoid(_91425_sm.ptr()))))) {
								_1acd978cc_write(_self_, jule::Str("return ", 7));
							};
							_1acd978cc_write(_self_, static__1acd70da0_func(_91425_sm));
							_1acd978cc_write(_self_, jule::Str("(", 1));
							if (_91221_ptr) {
								_1acd978cc_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1acd978cc_write(_self_, _1ace20bca_structureIns(_self_.get()._field_tc.ptr(), _89421_hash.get()._field_s));
								_1acd978cc_write(_self_, jule::Str(">(", 2));
								if ((!(_1d7c0a98a_Production))) {
									_1acd978cc_write(_self_, jule::Str("_00___file", 10));
								};
								_1acd978cc_write(_self_, jule::Str(")", 1));
							} else {
								_1acd978cc_write(_self_, jule::Str("_self_.data.as<", 15));
								_1acd978cc_write(_self_, _1ace208bc_structure(_self_.get()._field_tc.ptr(), _91425_sm.get()._field_Owner));
								_1acd978cc_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _89525_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1bd070da3:;
								if (it != expr.end()) {
									jule::Ptr<_1aba9c88b_Param> _94024_mp = *it;
									{
										_1acd978cc_write(_self_, jule::Str(", ", 2));
										_1acd978cc_write(_self_, static__1acd71686_param(_94024_mp));
									}
									_iter_next_1bd070da3:;
									++it;
									goto _iter_begin_1bd070da3;
								}
								_iter_end_1bd070da3:;
							};
							_1acd978cc_write(_self_, jule::Str(");\n}\n", 5));
							_1acddbe2c_doneIndent(_self_);
						}
						_iter_next_1bd06700e:;
						++it;
						goto _iter_begin_1bd06700e;
					}
					_iter_end_1bd06700e:;
				};
			}
			_iter_next_1bd0668c1:;
			++it;
			goto _iter_begin_1bd0668c1;
		}
		_iter_end_1bd0668c1:;
	};
}



inline void _1ace18b18_traitDatas(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	jule::Ptr<_1abab10ca_Trait> _95117_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1bd066b8a:;
		if (it != expr.end()) {
			jule::Ptr<_1acd7800b_traitHash> _95221_hash = *it;
			{
				jule::Str _95317_ident = static__1acd713de_traitDecl(_95221_hash.get()._field_t);;
				if ((_95221_hash.get()._field_t != _95117_old)) {
					if ((_95117_old != nullptr)) {
						_1acddbe2c_doneIndent(_self_);
						_1acde0480_indent(_self_);
						_1acd978cc_write(_self_, jule::Str("};\n", 3));
					};
					_1acd978cc_write(_self_, jule::Str("static ", 7));
					_1acd978cc_write(_self_, _95317_ident);
					_1acd978cc_write(_self_, jule::Str("MptrData ", 9));
					_1acd978cc_write(_self_, _95317_ident);
					_1acd978cc_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_95117_old=_95221_hash.get()._field_t;
					_1acddb910_addIndent(_self_);
				};
				_1acde0480_indent(_self_);
				_1acd978cc_write(_self_, jule::Str("{\n", 2));
				_1acddb910_addIndent(_self_);
				{
					auto &expr = _95221_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1bd076e31:;
					if (it != expr.end()) {
						jule::Ptr<_1aba9e1c8_Fn> _97125_m = *it;
						{
							jule::Str _97221_mIdent = static__1acd70da0_func(_97125_m);;
							_1acde0480_indent(_self_);
							_1acd978cc_write(_self_, jule::Str(".", 1));
							_1acd978cc_write(_self_, _97221_mIdent);
							_1acd978cc_write(_self_, jule::Str("=", 1));
							_1acd978cc_write(_self_, _97221_mIdent);
							_1acd978cc_write(_self_, jule::Str("_", 1));
							_1acd978cc_write(_self_, _1aba81485_Itoa(_95221_hash.get()._field_i));
							_1acd978cc_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1bd076e31:;
						++it;
						goto _iter_begin_1bd076e31;
					}
					_iter_end_1bd076e31:;
				};
				_1acddbe2c_doneIndent(_self_);
				_1acde0480_indent(_self_);
				_1acd978cc_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1bd066b8a:;
			++it;
			goto _iter_begin_1bd066b8a;
		}
		_iter_end_1bd066b8a:;
	};
	if ((_95117_old != nullptr)) {
		_1acddbe2c_doneIndent(_self_);
		_1acde0480_indent(_self_);
		_1acd978cc_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1ace18c4a_globals(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Globals;
		auto it = expr.begin();
		_iter_begin_1bd07b09a:;
		if (it != expr.end()) {
			jule::Ptr<_1abc73ee6_Var> _99421_v = *it;
			{
				_1acd978cc_write(_self_, _1ace2265a_kind(_self_.get()._field_tc.ptr(), _99421_v.get()._field_Kind.get()._field_Kind));
				_1acd978cc_write(_self_, jule::Str(" ", 1));
				if (_99421_v.get()._field_Reference) {
					_1acd978cc_write(_self_, jule::Str("&", 1));
				};
				_1acd978cc_write(_self_, static__1acd72214_var(_99421_v));
				_1acd978cc_write(_self_, jule::Str(" = ", 3));
				_1acd68705_val(_self_.get()._field_ec, _99421_v.get()._field_Value);
				_1acd978cc_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1bd07b09a:;
			++it;
			goto _iter_begin_1bd07b09a;
		}
		_iter_end_1bd07b09a:;
	};
}



inline void _1ace18d7c_decls(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	_1ace16c15_traitDecls(_self_);
	_1ace16e79_structurePlainDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1ace17b8e_structureDecls(_self_);
	_1ace18167_funcDecls(_self_);
	_1acd978cc_write(_self_, jule::Str("\n\n", 2));
	_1ace18299_traitDataTypes(_self_);
	_1acd978cc_write(_self_, jule::Str("\n\n", 2));
	_1ace189d6_traitWrappers(_self_);
	_1acd978cc_write(_self_, jule::Str("\n\n", 2));
	_1ace18b18_traitDatas(_self_);
	_1acd978cc_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1ace18c4a_globals(_self_);
}



inline void _1ace18eae_structureMethods(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1ab08a583_StructIns>& _102441_s) {
	{
		auto &expr = _102441_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bd082513:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> _102521_f = *it;
			{
				_1ace188a4_func(_self_, _102521_f);
				_1acd978cc_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1bd082513:;
			++it;
			goto _iter_begin_1bd082513;
		}
		_iter_end_1bd082513:;
	};
}



inline void _1ace190e1_structureDeriveDefs(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1ab08a583_StructIns>& _103144_s) {
	if (_1ab0541d9_IsDerives(_103144_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1acd978cc_write(_self_, _1acd6bc25_cloneFuncDef(_self_.get()._field_dc.ptr(), _103144_s.get()._field_Decl));
		_1acd978cc_write(_self_, jule::Str("{\n", 2));
		_1acddb910_addIndent(_self_);
		_1acde0480_indent(_self_);
		_1acd978cc_write(_self_, _1ace20bca_structureIns(_self_.get()._field_tc.ptr(), _103144_s));
		_1acd978cc_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _103144_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1bd08445a:;
			if (it != expr.end()) {
				jule::Ptr<_1ab08a396_FieldIns> _103920_f = *it;
				{
					jule::Str _104021_ident = static__1acd71e6c_field(_103920_f.get()._field_Decl);;
					_1acde0480_indent(_self_);
					_1acd978cc_write(_self_, jule::Str("clone.", 6));
					_1acd978cc_write(_self_, _104021_ident);
					_1acd978cc_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1acd978cc_write(_self_, _104021_ident);
					_1acd978cc_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1bd08445a:;
				++it;
				goto _iter_begin_1bd08445a;
			}
			_iter_end_1bd08445a:;
		};
		_1acde0480_indent(_self_);
		_1acd978cc_write(_self_, jule::Str("return clone;\n", 14));
		_1acddbe2c_doneIndent(_self_);
		_1acd978cc_write(_self_, jule::Str("}", 1));
	};
}



inline void _1ace19223_structureOstream(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1ab08a583_StructIns>& _105541_s) {
	_1acde0480_indent(_self_);
	_1acd978cc_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1acd978cc_write(_self_, static__1acd71bc5_structureIns(_105541_s));
	_1acd978cc_write(_self_, jule::Str(" _Src) {\n", 9));
	_1acddb910_addIndent(_self_);
	_1acde0480_indent(_self_);
	jule::Ptr<_1aba9e1c8_Fn> _106317_fts = _1ab0656b2_FindMethod(_105541_s.ptr(), jule::Str("Str", 3),false);;
	if (static__1abc756ac_Str(_106317_fts)) {
		_1acd978cc_write(_self_, jule::Str("_Stream << ", 11));
		_1acd978cc_write(_self_, static__1acd70da0_func(_106317_fts));
		_1acd978cc_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1acd978cc_write(_self_, jule::Str("_Stream << \"", 12));
		_1acd978cc_write(_self_, _105541_s.get()._field_Decl.get()._field_Ident);
		_1acd978cc_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _105541_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1bd08ca4b:;
			if (it != expr.end()) {
				jule::I64 _107318_i = it - expr.begin();
				jule::Ptr<_1ab08a396_FieldIns> _107325_f = *it;
				{
					_1acde0480_indent(_self_);
					_1acd978cc_write(_self_, jule::Str("_Stream << \"", 12));
					_1acd978cc_write(_self_, _107325_f.get()._field_Decl.get()._field_Ident);
					_1acd978cc_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1ab08a583_StructIns> _108021_strct = _1abceb2c1_Struct(_107325_f.get()._field_Kind.ptr());;
					if ((((_108021_strct != nullptr) && (_108021_strct.get()._field_Decl != nullptr)) && _108021_strct.get()._field_Decl.get()._field_CppLinked)) {
						_1acd978cc_write(_self_, jule::Str(" cpp.", 5));
						_1acd978cc_write(_self_, static__1acd71e6c_field(_107325_f.get()._field_Decl));
						_1acd978cc_write(_self_, jule::Str("\"", 1));
					} else {
						_1acd978cc_write(_self_, jule::Str("\" << _Src.", 10));
						_1acd978cc_write(_self_, static__1acd71e6c_field(_107325_f.get()._field_Decl));
					};
					if (((_107318_i + 1LL) < _105541_s.get()._field_Fields.len())) {
						_1acd978cc_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1acd978cc_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1bd08ca4b:;
				++it;
				_107318_i++;
				goto _iter_begin_1bd08ca4b;
			}
			_iter_end_1bd08ca4b:;
		};
		_1acde0480_indent(_self_);
		_1acd978cc_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1acde0480_indent(_self_);
	_1acd978cc_write(_self_, jule::Str("return _Stream;\n", 16));
	_1acddbe2c_doneIndent(_self_);
	_1acd978cc_write(_self_, jule::Str("}", 1));
}



inline void _1ace193dd_structureIns(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1ab08a583_StructIns>& _110637_s) {
	_1ace18eae_structureMethods(_self_, _110637_s);
	_1acd978cc_write(_self_, jule::Str("\n\n", 2));
	_1ace190e1_structureDeriveDefs(_self_, _110637_s);
	_1acd978cc_write(_self_, jule::Str("\n\n", 2));
	_1ace19223_structureOstream(_self_, _110637_s);
}



inline void _1ace19663_structure(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1ab08a1a9_Struct>& _111434_s) {
	{
		auto &expr = _111434_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bd09589a:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a583_StructIns> _111521_ins = *it;
			{
				_1ace193dd_structureIns(_self_, _111521_ins);
				_1acd978cc_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1bd09589a:;
			++it;
			goto _iter_begin_1bd09589a;
		}
		_iter_end_1bd09589a:;
	};
}



inline void _1ace1983e_structures(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bd096acc:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08a1a9_Struct> _112221_s = *it;
			{
				if ((_112221_s.get()._field_Token != nullptr)) {
					_1ace19663_structure(_self_, _112221_s);
					_1acd978cc_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1bd096acc:;
			++it;
			goto _iter_begin_1bd096acc;
		}
		_iter_end_1bd096acc:;
	};
}



inline void _1ace19a1a_funcs(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	_1ace169a1_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1abc50d08_Package>&)>([=](jule::Ptr<_1abc50d08_Package>& _113135_pkg) mutable -> void {
		_1ace1a862_iterFiles(_113135_pkg,jule::Fn<void(jule::Ptr<_1abcb6c2b_SymbolTable>&)>([=](jule::Ptr<_1abcb6c2b_SymbolTable>& _113236_file) mutable -> void {
			{
				auto &expr = _113236_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1bd099cab:;
				if (it != expr.end()) {
					jule::Ptr<_1aba9e1c8_Fn> _113329_f = *it;
					{
						if (((!(_1d7c0a02d_Test)) && _1ace28e14_hasDirective(_113329_f.get()._field_Directives,jule::Str("test", 4)))) {
							goto _iter_next_1bd099cab;
						};
						if (((!(_113329_f.get()._field_CppLinked)) && (_113329_f.get()._field_Token != nullptr))) {
							_1ace188a4_func(_self_, _113329_f);
							_1acd978cc_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1bd099cab:;
					++it;
					goto _iter_begin_1bd099cab;
				}
				_iter_end_1bd099cab:;
			};
		}));
	}));
}



inline void _1ace19c90_pushInit(jule::Ptr<_1ace15c9c_ObjectCoder> _self_, jule::Ptr<_1abc50d08_Package>& _114633_pkg) {
	_1ace1a862_iterFiles(_114633_pkg,jule::Fn<void(jule::Ptr<_1abcb6c2b_SymbolTable>&)>([=](jule::Ptr<_1abcb6c2b_SymbolTable>& _114732_file) mutable -> void {
		{
			auto &expr = _114732_file.get()._field_Funcs;
			auto it = expr.begin();
			_iter_begin_1bd09c572:;
			if (it != expr.end()) {
				jule::Ptr<_1aba9e1c8_Fn> _114820_f = *it;
				{
					if ((_114820_f.get()._field_Ident == jule::Str("init", 4))) {
						_1acde0480_indent(_self_);
						_1acd978cc_write(_self_, static__1acd70da0_func(_114820_f));
						_1acd978cc_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1bd09c572:;
				++it;
				goto _iter_begin_1bd09c572;
			}
			_iter_end_1bd09c572:;
		};
	}));
}



inline void _1ace19e6b_initCaller(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	_1acd978cc_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1acddb910_addIndent(_self_);
	_1ace169a1_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1abc50d08_Package>&)>([=](jule::Ptr<_1abc50d08_Package>& _116135_pkg) mutable -> void {
		_1ace19c90_pushInit(_self_, _116135_pkg);
	}));
	_1acddbe2c_doneIndent(_self_);
	_1acd978cc_write(_self_, jule::Str("\n}", 2));
}



inline void _1ace1a147_end(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	_1acd978cc_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_1d7c0a02d_Test) {
		_1acd978cc_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1acd978cc_write(_self_, jule::Str("entry_point();", 14));
	};
	_1acd978cc_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1ace1a323_serializeHead(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	_1ace1686e_prepareStructures(_self_);
	_1ace16ad3_buildTraitMap(_self_);
	_1ace164c8_head(_self_);
	_1acd978cc_write(_self_, jule::Str("\n", 1));
	_1ace18d7c_decls(_self_);
	if ((_self_.get()._field_resultDecls.len() > 0LL)) {
		jule::Str _119621_head = _self_.get()._field_Obj.slice(0LL,_self_.get()._field_headPos);;
		{
			auto &expr = _self_.get()._field_resultDecls;
			auto it = expr.begin();
			_iter_begin_1bd0a3ee6:;
			if (it != expr.end()) {
				jule::Str _119720_decl = *it;
				{
					_119621_head+=_119720_decl;
					_self_.get()._field_declPos+=_119720_decl.len();
				}
				_iter_next_1bd0a3ee6:;
				++it;
				goto _iter_begin_1bd0a3ee6;
			}
			_iter_end_1bd0a3ee6:;
		};
		_119621_head+=_self_.get()._field_Obj.slice(_self_.get()._field_headPos);
		_self_.get()._field_Obj=_119621_head;
	};
	_1acd978cc_write(_self_, jule::Str("\n", 1));
	_1ace1983e_structures(_self_);
	_1ace19a1a_funcs(_self_);
	_1ace19e6b_initCaller(_self_);
	_1acd978cc_write(_self_, jule::Str("\n\n", 2));
	if ((_self_.get()._field_anyObj.len() > 0LL)) {
		jule::Str _121221_head = _self_.get()._field_Obj.slice(0LL,_self_.get()._field_declPos);;
		_121221_head+=_self_.get()._field_anyObj;
		_121221_head+=_self_.get()._field_Obj.slice(_self_.get()._field_declPos);
		_self_.get()._field_Obj=_121221_head;
	};
}



inline void _1ace1a4ee_Serialize(jule::Ptr<_1ace15c9c_ObjectCoder> _self_) {
	_1ace1a323_serializeHead(_self_);
	_1ace1a147_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1ace15c9c_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1ac317732_IR__jule_tuple_s_1a7995777_Log static__1ac479b80_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1ac317732_IR__jule_tuple_s_1a7995777_Log __jule_func_result;
	jule::Ptr<_1ac44b657_JuleImporter> _2817_importer = static__1ac327e6d_New(_1ac366b6b_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1ab039532_Ast>> _2918_files;;
	jule::Slice<_1a7995777_Log> _2929_logs;;
	({
		__jule_tuple_sx_1ab039532_Ast__jule_tuple_s_1a7995777_Log __jule_assign_result = _1ac441be1_ImportPackage(_2817_importer.ptr(), _2721_path,true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1abc50d08_Package> _3918_pkg;;
	({
		__jule_tuple_x_1abc50d08_Package__jule_tuple_s_1a7995777_Log __jule_assign_result = _1abd14e55_AnalyzePackage(_2918_files,jule::Trait<_1abad9873_Importer>(_2817_importer, 0),_2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac317732_IR> _4417_ir = jule::new_ptr<_1ac317732_IR>(_1ac317732_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1ac38c17a_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1ac344e24_getAllUniquePasses(_4417_ir.get()._field_Main,_4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ac4e2984_appendStructs(_1ac317732_IR* _self_, jule::Ptr<_1abc50d08_Package>& _5633_p, jule::Slice<jule::Ptr<_1ab08a1a9_Struct>>& _5657_buffer) {
	{
		auto &expr = _5633_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bc9e9420:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _5721_f = *it;
			{
				{
					auto &expr = _5721_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1bc9e9c6c:;
					if (it != expr.end()) {
						jule::Ptr<_1ab08a1a9_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								_5657_buffer = jule::alloc_for_append(_5657_buffer,1);_5657_buffer.__push(_5825_s);;
							};
						}
						_iter_next_1bc9e9c6c:;
						++it;
						goto _iter_begin_1bc9e9c6c;
					}
					_iter_end_1bc9e9c6c:;
				};
			}
			_iter_next_1bc9e9420:;
			++it;
			goto _iter_begin_1bc9e9420;
		}
		_iter_end_1bc9e9420:;
	};
}



inline jule::Slice<jule::Ptr<_1ab08a1a9_Struct>> _1ac4ea77d_GetAllStructures(_1ac317732_IR* _self_) {
	jule::Slice<jule::Ptr<_1ab08a1a9_Struct>> _6917_buffer = nullptr;;
	_1ac4e2984_appendStructs(&(*_self_), (*_self_)._field_Main,_6917_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1bc9e991a:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_1ac4e2984_appendStructs(&(*_self_), _7121_u.get()._field_Package,_6917_buffer);
				};
			}
			_iter_next_1bc9e991a:;
			++it;
			goto _iter_begin_1bc9e991a;
		}
		_iter_end_1bc9e991a:;
	};
	return _6917_buffer;;
}



inline void _1ac504a62_appendGlobals(_1ac317732_IR* _self_, jule::Ptr<_1abc50d08_Package>& _7933_p, jule::Slice<jule::Ptr<_1abc73ee6_Var>>& _7957_buffer) {
	{
		auto &expr = _7933_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bc9ec412:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1bc9ecc3c:;
					if (it != expr.end()) {
						jule::Ptr<_1abc73ee6_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								_7957_buffer = jule::alloc_for_append(_7957_buffer,1);_7957_buffer.__push(_8125_v);;
							};
						}
						_iter_next_1bc9ecc3c:;
						++it;
						goto _iter_begin_1bc9ecc3c;
					}
					_iter_end_1bc9ecc3c:;
				};
			}
			_iter_next_1bc9ec412:;
			++it;
			goto _iter_begin_1bc9ec412;
		}
		_iter_end_1bc9ec412:;
	};
}



inline jule::Slice<jule::Ptr<_1abc73ee6_Var>> _1ac31e78e_GetAllGlobals(_1ac317732_IR* _self_) {
	jule::Slice<jule::Ptr<_1abc73ee6_Var>> _9217_buffer = nullptr;;
	_1ac504a62_appendGlobals(&(*_self_), (*_self_)._field_Main,_9217_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1bc9ee6cd:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_1ac504a62_appendGlobals(&(*_self_), _9421_u.get()._field_Package,_9217_buffer);
				};
			}
			_iter_next_1bc9ee6cd:;
			++it;
			goto _iter_begin_1bc9ee6cd;
		}
		_iter_end_1bc9ee6cd:;
	};
	return _9217_buffer;;
}



inline void _1ac426ac7_Order(_1ac317732_IR* _self_) {
	(*_self_)._field_Ordered._field_Structs=_1ac4ea77d_GetAllStructures(&(*_self_));
	(*_self_)._field_Ordered._field_Globals=_1ac31e78e_GetAllGlobals(&(*_self_));
	static__1ac30c64a_orderStructures((*_self_)._field_Ordered._field_Structs);
	static__1ac3407b0_orderVars((*_self_)._field_Ordered._field_Globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac317732_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1bc1374ba_parseInteger(_1ace5367a_argParser* _self_, jule::Str& _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (_19031_s.empty()) {
			_case_begin_1bc13a15a:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1a78d463e_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1bc13a5bc:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a78d463e_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1bc13a765:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a78d463e_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1bc13a4ac:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1bc139d2a:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(1LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bc139cb4:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s,10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bc139be8:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1bc1405b1_parseInteger(_1ace5367a_argParser* _self_, jule::Str& _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (_19031_s.empty()) {
			_case_begin_1bc14320c:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1a78d463e_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1bc14366e:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a78d463e_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1bc143817:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a78d463e_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1bc14355e:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1bc142dcc:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(1LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bc142d66:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s,10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bc142c9a:;
	};
	return __jule_func_result;;
}



inline jule::Str _1ace53e72_getData(_1ace5367a_argParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();;
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];;
}



inline jule::VoidExceptional _1ace541b4_processFlag(_1ace5367a_argParser* _self_, jule::Trait<_1ace4d2bd_CommonFlag>& _21735_flag) {
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1bc120717_Flag>>()) {
			_case_begin_1bc13471a:;
			{
				jule::Ptr<_1bc120717_Flag> _22021_bf = _21735_flag.operator jule::Ptr<_1bc120717_Flag>();;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1bc1346a4:;
	};
	jule::Str _22513_data = _1ace53e72_getData(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1ace4d2bd_CommonFlag_mptr_data[(_21735_flag).type_offset]._1ace4e621_Name(_21735_flag)) + jule::Str(": expression missing", 20)), &__jule_any_type7));
	};
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1bc11484e_Flag>>()) {
			_case_begin_1bc135d7b:;
			{
				jule::Ptr<_1bc11484e_Flag> _23221_intf = _21735_flag.operator jule::Ptr<_1bc11484e_Flag>();;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1bc1374ba_parseInteger(&(*_self_), _22513_data,jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1ab598ac4_ParseInt(_23370_s,_23378_base,64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1ace4d2bd_CommonFlag_mptr_data[(_21735_flag).type_offset]._1ace4e621_Name(_21735_flag)) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type7));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc118589_Flag>>()) {
			_case_begin_1bc136761:;
			{
				jule::Ptr<_1bc118589_Flag> _24021_uintf = _21735_flag.operator jule::Ptr<_1bc118589_Flag>();;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1bc1405b1_parseInteger(&(*_self_), _22513_data,jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1ab887b1b_ParseUint(_24171_s,_24179_base,64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1ace4d2bd_CommonFlag_mptr_data[(_21735_flag).type_offset]._1ace4e621_Name(_21735_flag)) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type7));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc11bda6_Flag>>()) {
			_case_begin_1bc1367c7:;
			{
				jule::Ptr<_1bc11bda6_Flag> _24821_ff = _21735_flag.operator jule::Ptr<_1bc11bda6_Flag>();;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1aba7beec_ParseFloat(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1ace4d2bd_CommonFlag_mptr_data[(_21735_flag).type_offset]._1ace4e621_Name(_21735_flag)) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type7));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc124034_Flag>>()) {
			_case_begin_1bc13683d:;
			{
				(*(_21735_flag.operator jule::Ptr<_1bc124034_Flag>().get()._field_data))=_22513_data;
			}
		}
		_match_end_1bc1366ea:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ace54439_singleDash(_1ace5367a_argParser* _self_, jule::Str& _25730_arg) {
	if ((_25730_arg.len() == 1LL)) {
		return jule::VoidExceptional(jule::Any((_25730_arg + jule::Str(": missing argument", 18)), &__jule_any_type7));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25730_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1bc14a8da:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1ace4d2bd_CommonFlag> _26321_flag = _1ace51a30_FindFlagShort(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any(((_25730_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)), &__jule_any_type7));
				};
				({
					auto except = _1ace541b4_processFlag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(jule::Any(except.error, &__jule_any_type1));
					}
				});
			}
			_iter_next_1bc14a8da:;
			++it;
			goto _iter_begin_1bc14a8da;
		}
		_iter_end_1bc14a8da:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ace546ae_doubleDash(_1ace5367a_argParser* _self_, jule::Str& _27230_arg) {
	if ((_27230_arg.len() == 2LL)) {
		return jule::VoidExceptional(jule::Any((_27230_arg + jule::Str(": missing argument", 18)), &__jule_any_type7));
	};
	jule::Trait<_1ace4d2bd_CommonFlag> _27617_flag = _1ace51722_FindFlag(&(*_self_)._field_set, _27230_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any((_27230_arg + jule::Str(": flag is not exist", 19)), &__jule_any_type7));
	};
	({
		auto except = _1ace541b4_processFlag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(jule::Any(except.error, &__jule_any_type1));
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ace5488a_tryArg(_1ace5367a_argParser* _self_) {
	jule::Str _28413_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1ace546ae_doubleDash(&(*_self_), _28413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(jule::Any(except.error, &__jule_any_type1));
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1ace54439_singleDash(&(*_self_), _28413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(jule::Any(except.error, &__jule_any_type1));
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28413_arg);;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ace54a66_parse(_1ace5367a_argParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1ace5488a_tryArg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(jule::Any(except.error, &__jule_any_type1));
				}
			});
		}
	_iter_next_1bc1513a2:;
	}
	_iter_end_1bc1513a2:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1ace5367a_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1d9644ec7_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _1d9659706_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	{
		return static_cast<jule::Str>(_6924_s);;
	};
}



inline jule::I64 _1d7c8c6a9_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _1d96779bb_Stat(jule::U8* _4816_path, struct stat* _4833_stat) {
	return static_cast<jule::I64>(stat(((char*)(_4816_path)), _4833_stat));;
}



inline jule::I64 _1d9677da6_Open(jule::U8* _5316_path, jule::I64 _5329_flag, jule::I64 _5340_mode) {
	return static_cast<jule::I64>(open(((char*)(_5316_path)),_5329_flag,_5340_mode));;
}



inline jule::U8* _1d96781e7_Getcwd(jule::U8* _5918_buff, jule::U64 _5931_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5918_buff)),_5931_bufflen)));;
}



inline DIR* _1d96786c0_Opendir(jule::U8* _6419_path) {
	return opendir(((char*)(_6419_path)));;
}



inline struct dirent* _1d9678967_Readdir(DIR* _6723_dir) {
	return readdir(_6723_dir);;
}



inline jule::I64 _1d9678c0e_Closedir(DIR* _7024_dir) {
	return static_cast<jule::I64>(closedir(_7024_dir));;
}



inline jule::I64 _1d967958e_Mkdir(jule::U8* _7917_path, jule::I64 _7930_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7917_path)),_7930_mode));;
}



inline jule::I64 _1d9679836_Rmdir(jule::U8* _8417_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_8417_path))));;
}



inline jule::I64 _1d9679acd_Unlink(jule::U8* _8718_path) {
	return static_cast<jule::I64>(unlink(((char*)(_8718_path))));;
}



inline jule::I64 _1d969a13c_Seek(jule::I64 _269_handle, jule::I64 _2622_offset, jule::I64 _2635_origin) {
	return static_cast<jule::I64>(lseek(_269_handle,_2622_offset,_2635_origin));;
}



inline jule::I64 _1d969a527_Read(jule::I64 _3116_handle, void* _3133_buff, jule::U64 _3148_n) {
	return static_cast<jule::I64>(read(_3116_handle,_3133_buff,_3148_n));;
}



inline jule::I64 _1d969a89b_Close(jule::I64 _3610_handle) {
	return static_cast<jule::I64>(close(_3610_handle));;
}



inline jule::I64 _1d969ac86_Write(jule::I64 _3917_handle, void* _3930_buff, jule::U64 _3945_n) {
	return static_cast<jule::I64>(write(_3917_handle,_3930_buff,_3945_n));;
}



inline void _1d969ae95_Exit(jule::I64 _449_code) {
	exit(_449_code);
}



inline jule::I64 _1d973de28_getLastOsError(void) {
	jule::I64 _309_err = _1d7c8c6a9_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1aced1c9c:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1aced16a3:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1aced172a:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1aced17a2:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1aced19d3:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1aced1a49:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1aced1ab0:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1aced14e9:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1aced1494:;
	};
}



inline jule::Slice<jule::Str> _1d973e90c_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _1d973ed80_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _1d9740c82_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(jule::Any(except.error, &__jule_any_type1));
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _1d9740c82_getwd(void) {
	jule::U8* _1113_buff = _1d96781e7_Getcwd(nullptr,0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_1d973de28_getLastOsError(), &__jule_any_type133));
	};
	jule::Str _159_pwd = _1d9659706_BytePtrToStr(_1113_buff);;
	{
		_1d9644ec7_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _159_pwd);;
}



inline jule::Bool _1a7783521_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1a77e3790__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1a77ebac8_isExcludingLatin(_1a778c706_Letter,_7613_r);;
}



inline jule::Bool _1a77eaee5_is16(jule::Slice<_1a77e9433_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1ac072e71:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_1a77e9433_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1ac072e71:;
				++it;
				_19313_i++;
				goto _iter_begin_1ac072e71;
			}
			_iter_end_1ac072e71:;
		};
		return false;;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_1a77e9433_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1ac06db4d:;
	}
	_iter_end_1ac06db4d:;;
	return false;;
}



inline jule::Bool _1a77eb336_is32(jule::Slice<_1a77e98a6_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1a7a2a499:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_1a77e98a6_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1a7a2a499:;
				++it;
				_23013_i++;
				goto _iter_begin_1a7a2a499;
			}
			_iter_end_1a7a2a499:;
		};
		return false;;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_1a77e98a6_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1ac236b07:;
	}
	_iter_end_1ac236b07:;;
	return false;;
}



inline jule::Bool _1a77ebac8_isExcludingLatin(jule::Ptr<_1a77e9d29_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1a77e9433_Range16> &_28014_R16 = _27821_rangeTab.get()._field_R16;;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if (((_28014_R16.len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>(_28014_R16[(_28014_R16.len() - 1LL)]._field_Hi)))) {
			return _1a77eaee5_is16(_28014_R16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_1a77e98a6_Range32> &_28710_R32 = _27821_rangeTab.get()._field_R32;;
	if (((_28710_R32.len() > 0LL) && (_27844_r >= static_cast<jule::I32>(_28710_R32[0LL]._field_Lo)))) {
		return _1a77eb336_is32(_28710_R32,static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _1a77ebd70_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1a77e3790__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1a77ebac8_isExcludingLatin(_1a7793c5c_Upper,_29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _1a78cd88b_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _1a78cc769_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_1a78cccec_acceptRange _1969_accept = _1a78cd10a_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1a78cdbaa_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _1a78cc769_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_1a78cccec_acceptRange _2439_accept = _1a78cd10a_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1a78cde52_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_1a78d0827_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1ac294b10;
			};
		}
	_iter_next_1ac294b10:;
	}
	_iter_end_1ac294b10:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a78cd88b_DecodeRune(_27619_p.slice(_28113_start,_2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _1a78cec00_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _1a78d0041_appendRuneNonASCII(_40519_p,_40530_r);;
}



inline jule::Slice<jule::U8> _1a78d0041_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1ac2aa032:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1ac2a866d:;
			{
				_41242_r=128LL;
				goto _case_begin_1ac2a86d4;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1ac2a86d4:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1ac2a7bcd:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1ac2a7b78:;
	};
}



inline jule::I64 _1a78d0580_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1ac2b359b;
			};
			jule::U8 _48213_x = _1a78cc769_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1ac2b359b;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1ac2b359b;
			};
			_1a78cccec_acceptRange _49213_accept = _1a78cd10a_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1ac2b359b:;
	}
	_iter_end_1ac2b359b:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a78d0827_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::Slice<jule::U8> _1a7901914_Stobs(jule::Str& _911_s) {
	return _911_s.fake_slice();;
}



inline void _1a7907002_PushToStrBuffer(jule::Str& _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		(_2825_s).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline jule::I64 _1a79074ec_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	jule::U8* _519_first = (&(_5017_s[0LL]));;
	jule::U8* _5213_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5213_it >= _519_first); (_5213_it)--) {
		{
			{
				if (((*(_5213_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_5213_it - _519_first))));;
				};
			};
		}
	_iter_next_1ad742a90:;
	}
	_iter_end_1ad742a90:;;
	return -1LL;;
}



inline jule::I64 _1a7907772_FindLastByteStr(jule::Str& _6921_s, jule::U8 _6929_b) {
	return static_cast<jule::I64>(_1a79074ec_FindLastByte(_1a7901914_Stobs(_6921_s),_6929_b));;
}



inline jule::Str _1a78d5002_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_1ad7568c8:;
	}
	_iter_end_1ad7568c8:;;
	return _2013_ss;;
}



inline jule::Bool _1a78d83ac_hasPrefix(jule::Str& _2715_s, jule::Str& _2724_sub, jule::I64 _2738_start) {
	if (((_2724_sub.len() == 0LL) || ((_2715_s.len() - _2738_start) < _2724_sub.len()))) {
		return false;;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < _2724_sub.len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_3213_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if ((_2715_s[_2738_start] != _2724_sub[_3213_i])) {
				return false;;
			};
		}
	_iter_next_1ad759931:;
	}
	_iter_end_1ad759931:;;
	return true;;
}



inline jule::Bool _1a78d463e_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _1a78d83ac_hasPrefix(_4214_s,_4222_sub,0LL);;
}



inline jule::Bool _1a79078d7_hasSuffix(jule::Str& _4615_s, jule::Str& _4624_sub, jule::I64 _4638_start) {
	if (((_4624_sub.len() == 0LL) || ((_4615_s.len() - _4638_start) < _4624_sub.len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>((_4615_s.len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < _4624_sub.len()); (_5213_i)++) {
		{
			if ((_4615_s[((_4638_start - _5213_i) - 1LL)] != _4624_sub[((_4624_sub.len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1ad75b955:;
	}
	_iter_end_1ad75b955:;;
	return true;;
}



inline jule::Bool _1a7907b90_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _1a79078d7_hasSuffix(_6214_s,_6222_sub,0LL);;
}



inline jule::I64 _1a790807a_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_1a78d83ac_hasPrefix(_7011_s,_7019_sub,_7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1ad760a36:;
	}
	_iter_end_1ad760a36:;;
	return -1LL;;
}



inline jule::I64 _1a79088b6_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10017_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1ad763088;
					};
				}
			_iter_next_1ad7647e8:;
			}
			_iter_end_1ad7647e8:;;
			return _9413_j;;
		}
	_iter_next_1ad763088:;
	}
	_iter_end_1ad763088:;;
	return -1LL;;
}



inline jule::I64 _1a7908c6d_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_1a79088b6_FindLastAt(_11513_s,_11521_sub,static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _1a7910291_findRune(jule::Slice<jule::U8>& _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < _17114_s.len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I64 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a78cd88b_DecodeRune(_17114_s.slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1ad76c1e6:;
	}
	_iter_end_1ad76c1e6:;;
	return -1LL;;
}



inline jule::I64 _1a7910acc_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_1a7907772_FindLastByteStr(_19317_s,_19325_b));;
}



inline jule::I64 _1a79118e1_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _1a7901914_Stobs(_22812_s);;
	jule::Slice<jule::U8> _23013_rb = _1a7901914_Stobs(_22820_runes);;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I64 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a78cd88b_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a7910291_findRune(_23013_rb,_23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1ad77297c:;
	}
	_iter_end_1ad77297c:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1a791211c_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _1a790807a_FindAt(_26210_s,_26218_sub,_27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1ad778d7e;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i,_27613_j));;
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1ad778d7e:;
	}
	_iter_end_1ad778d7e:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;;
}



inline jule::Bool _1a791245d_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_1a790807a_FindAt(_29013_s,_29021_sub,0LL) != -1LL);;
}



inline jule::Bool _1a7912e31_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_1a79118e1_FindAny(_30616_s,_30624_runes) != -1LL);;
}



inline jule::I64 _1a7913272_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _1a790807a_FindAt(_31210_s,_31218_sub,_31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1ad77e439;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1ad77e439:;
	}
	_iter_end_1ad77e439:;;
	return _31613_n;;
}



inline jule::Str _1a7913706_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I64 _3379_m = _1a7913272_Count(_33212_s,_33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _1a790807a_FindAt(_33212_s,_33220_sub,_34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1ad783262;
			};
			_34513_ss+=_33212_s.slice(_34613_i,_34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1ad783262:;
	}
	_iter_end_1ad783262:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _1a7910769_trimLeft(jule::Slice<jule::U8>& _38818_s, jule::Slice<jule::U8>& _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < _38818_s.len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I64 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a78cd88b_DecodeRune(_38818_s.slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a7910291_findRune(_38830_cutset,_39114_r) == -1LL)) {
				_38818_s=_38818_s.slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1ad785d7a:;
	}
	_iter_end_1ad785d7a:;;
	_38818_s=nullptr;
}



inline jule::Str _1a79147b2_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _1a7901914_Stobs(_40313_s);;
	jule::Slice<jule::U8> _4059_bcutset = _1a7901914_Stobs(_40321_cutset);;
	_1a7910769_trimLeft(_40413_bytes,_4059_bcutset);
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _1a7914a6a_trimRight(jule::Slice<jule::U8>& _41019_s, jule::Slice<jule::U8>& _41031_cutset) {
	jule::I64 _41113_i = _41019_s.len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I64 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a78cde52_DecodeLastRune(_41019_s.slice(0LL,_41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a7910291_findRune(_41031_cutset,_41314_r) == -1LL)) {
				_41019_s=_41019_s.slice(0LL,_41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1ad78a4de:;
	}
	_iter_end_1ad78a4de:;;
	_41019_s=nullptr;
}



inline jule::Str _1a79151ec_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _1a7901914_Stobs(_4349_s);;
	jule::Slice<jule::U8> _4369_bcutset = _1a7901914_Stobs(_43417_cutset);;
	_1a7910769_trimLeft(_43513_bytes,_4369_bcutset);
	_1a7914a6a_trimRight(_43513_bytes,_4369_bcutset);
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Str _1a791553d_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1ad78edd9:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1ad78ee50:;
			{
				return _4449_parts[0LL];;
			}
		}
		_match_end_1ad78ea76:;
	};
	jule::Str _45113_s = _4449_parts[0LL];;
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1ad790ea6:;
		if (it != expr.end()) {
			jule::Str &_45212_part = *it;
			{
				_45113_s+=_44423_sep;
				_45113_s+=_45212_part;
			}
			_iter_next_1ad790ea6:;
			++it;
			goto _iter_begin_1ad790ea6;
		}
		_iter_end_1ad790ea6:;
	};
	return _45113_s;;
}



inline jule::Str _1a79168c4_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _1a7919564_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _1a7918ed1_IsPathSep(_1099_originalPath[0LL])) && _1a7918ed1_IsPathSep(_1099_originalPath[1LL]))) {
			return _1a7916e57_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _1a7918ed1_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_1a7915b15_lazyBuff _12713_out = _1a7915b15_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0;;
	jule::I64 _13221_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_1a791630d_append(&_12713_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_1a7918ed1_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1ad79eab9:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _1a7918ed1_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1ad7a278c:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _1a7918ed1_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1ad7a2803:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1ad7a56d5:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_1a7918ed1_IsPathSep(static_cast<jule::U8>(_1a7916088_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1ad7a6153:;
									}
									_iter_end_1ad7a6153:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1ad7a574b:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1a791630d_append(&_12713_out, 47LLU);
									};
									_1a791630d_append(&_12713_out, '.');
									_1a791630d_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1ad7a5350:;
						};
					}
				}
				else {
					_case_begin_1ad79d04b:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_1a791630d_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_1a7918ed1_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_1a791630d_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1ad79e57a:;
						}
						_iter_end_1ad79e57a:;;
					}
				}
				_match_end_1ad79cd1a:;
			};
		}
	_iter_next_1ad79cea2:;
	}
	_iter_end_1ad79cea2:;;
	if ((_12713_out._field_w == 0LL)) {
		_1a791630d_append(&_12713_out, '.');
	};
	return _1a7916e57_FromSlash(_1a7916572_string(&_12713_out));;
}



inline jule::Str _1a7916e57_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;;
	};
}



inline jule::Str _1a7917276_Join(jule::Slice<jule::Str> _2259_elem) {
	return _1a7919b2a_join(_2259_elem);;
}



inline jule::Str _1a791751d_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_1a7918ed1_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_1ad7a9d5a:;
	}
	_iter_end_1ad7a9d5a:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1a79177b5_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a7919883_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _1a7917a5c_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _1a7918ed1_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL,(_25413_path.len() - 1LL));;
		}
	_iter_next_1ad7ac379:;
	}
	_iter_end_1ad7ac379:;;
	(_25413_path).mut_slice(_1a7918178_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_1a7918ed1_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1ad7adb94:;
	}
	_iter_end_1ad7adb94:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(47LL);;
	};
	return _25413_path;;
}



inline jule::Str _1a7917dd1_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _1a7918178_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_1a7918ed1_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1ad7b0eb5:;
	}
	_iter_end_1ad7b0eb5:;;
	jule::Str _2919_dir = _1a79168c4_Clean(_2858_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _1a7918178_VolumeName(jule::Str _30315_path) {
	return _1a7916e57_FromSlash(_30315_path.slice(0LL,_1a7919564_volumeNameLen(_30315_path)));;
}



inline jule::Bool _1a7918ed1_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _1a79192bc_IsAbs(jule::Str _5310_path) {
	return _1a78d463e_HasPrefix(_5310_path,jule::Str("/", 1));;
}



inline jule::I64 _1a7919564_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _1a7919883_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_1a79192bc_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _1a79168c4_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _679_wd = ({
		auto except = _1d973ed80_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _1a7919b2a_join(jule::Slice<jule::Str>::make({_679_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1a7919b2a_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto &expr = _739_elem;
		auto it = expr.begin();
		_iter_begin_1ad7b9b7d:;
		if (it != expr.end()) {
			jule::I64 _749_i = it - expr.begin();
			jule::Str &_7412_e = *it;
			{
				if ((!(_7412_e.empty()))) {
					return _1a79168c4_Clean(_1a791553d_Join(_739_elem.slice(_749_i),static_cast<jule::Str>(47LL)));;
				};
			}
			_iter_next_1ad7b9b7d:;
			++it;
			_749_i++;
			goto _iter_begin_1ad7b9b7d;
		}
		_iter_end_1ad7b9b7d:;
	};
	return jule::Str();;
}



inline jule::I64 _1d7caad8c_getLastFsError(void) {
	jule::I64 _729_err = _1d7c8c6a9_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ad7c7c13:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ad7c7196:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1ad7c7608:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1ad7c766e:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ad7c76d5:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ad7c774b:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_1ad7c7d34:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1ad7c7d9a:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1ad7c7e11:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1ad7c7e77:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1ad7c7eee:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1ad7c8076:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ad7c80ed:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1ad7c8175:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1ad7c81ec:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_1ad7c8274:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1ad7c82eb:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1ad7c8373:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1ad7c83ea:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_1ad7c8472:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1ad7c84e9:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1ad7c8571:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ad7c85e8:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1ad7c8670:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1ad7c86e7:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_1ad7c876e:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_1ad7c87e6:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_1ad7c886d:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1ad7c7460:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1ad7c740a:;
	};
}



inline jule::I64 _1a79e0184_getLastProcessError(void) {
	jule::I64 _429_err = _1d7c8c6a9_GetLastErrno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ad7ee6b8:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1ad7edb5c:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1ad7ee0ad:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ad7ee135:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ad7ee1ac:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ad7ee234:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1ad7ee410:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1ad7ee487:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1ad7ee50e:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 97LL) {
			_case_begin_1ad7ee586:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1ad7ee7d9:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else {
			_case_begin_1ad7ede15:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_1ad7eddb0:;
	};
}



inline jule::Slice<char*> _1a79e3352_strSliceToCstrSlice(jule::Slice<jule::Str> _2024_s) {
	jule::Slice<char*> _2113_cs = jule::Slice<char*>::alloc(0LL, (_2024_s.len() + 1LL), nullptr);;
	{
		auto &expr = _2024_s;
		auto it = expr.begin();
		_iter_begin_1ad80a88e:;
		if (it != expr.end()) {
			jule::I64 _229_i = it - expr.begin();
			{
				_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(((char*)((&(_2024_s[_229_i][0LL])))));;
			}
			_iter_next_1ad80a88e:;
			++it;
			_229_i++;
			goto _iter_begin_1ad80a88e;
		}
		_iter_end_1ad80a88e:;
	};
	_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(nullptr);;
	return _2113_cs;;
}



inline jule::I64 _1a79e37a3_execvp(jule::Str _2911_file, jule::Slice<jule::Str> _2922_argv) {
	jule::Slice<char*> _309_cargv = _1a79e3352_strSliceToCstrSlice(_2922_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_2911_file[0LL])))), (char*const*)(&(_309_cargv[0LL]))));;
	};
}



inline jule::I64 _1a79e3b8d_execve(jule::Str _3611_file, jule::Slice<jule::Str> _3622_argv, jule::Slice<jule::Str> _3635_env) {
	jule::Slice<char*> _379_cargv = _1a79e3352_strSliceToCstrSlice(_3622_argv);;
	jule::Slice<char*> _389_cenv = _1a79e3352_strSliceToCstrSlice(_3635_env);;
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3611_file[0LL])))), (char*const*)(&(_379_cargv[0LL])), (char*const*)((&(_389_cenv[0LL])))));;
	};
}



inline void _1a79e47a4_Exit(jule::I64 _129_code) {
	_1d969ae95_Exit(_129_code);
}



inline jule::Str _1a79e49a2_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1a7988616_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1a79888be_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto &expr = _1a791ada1_CppHeaderExts;
		auto it = expr.begin();
		_iter_begin_1ad841980:;
		if (it != expr.end()) {
			jule::Str &_3212_validExt = *it;
			{
				if ((_3121_ext == _3212_validExt)) {
					return true;;
				};
			}
			_iter_next_1ad841980:;
			++it;
			goto _iter_begin_1ad841980;
		}
		_iter_end_1ad841980:;
	};
	return false;;
}



inline jule::Bool _1a7988b66_IsValidCppExt(jule::Str _4118_ext) {
	if ((_4118_ext == jule::Str(".c", 2))) {
		return true;;
	};
	{
		auto &expr = _1a7986834_CppExts;
		auto it = expr.begin();
		_iter_begin_1ad8422dd:;
		if (it != expr.end()) {
			jule::Str &_4512_e = *it;
			{
				if ((_4118_ext == _4512_e)) {
					return true;;
				};
			}
			_iter_next_1ad8422dd:;
			++it;
			goto _iter_begin_1ad8422dd;
		}
		_iter_end_1ad8422dd:;
	};
	{
		auto &expr = _1a7986a54_ObjectiveCppExts;
		auto it = expr.begin();
		_iter_begin_1ad8435ec:;
		if (it != expr.end()) {
			jule::Str &_5012_e = *it;
			{
				if ((_4118_ext == _5012_e)) {
					return true;;
				};
			}
			_iter_next_1ad8435ec:;
			++it;
			goto _iter_begin_1ad8435ec;
		}
		_iter_end_1ad8435ec:;
	};
	return false;;
}



inline jule::Str _1a7995bb7_Logf(jule::Str _3009_fmt, jule::Slice<jule::Any> _30022_args) {
	return _1a79965d0_applyFmt(_3009_fmt,_30022_args);;
}



inline jule::Str _1a7995ea3_argToStr(jule::Any _30413_arg) {
	{
		auto &_match_expr{ _30413_arg };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad844a4e:;
			{
				return _30413_arg.cast<jule::Str>(&__jule_any_type7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1ad844ab5:;
			{
				return static_cast<jule::Str>(_30413_arg.cast<jule::U8>(&__jule_any_type134));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ad844840:;
			{
				return static_cast<jule::Str>(_30413_arg.cast<jule::I32>(&__jule_any_type3));;
			}
		}
		else {
			_case_begin_1ad844411:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1ad844224:;
	};
}



inline jule::I64 _1a799624a_findNextFmt(jule::Str _31716_fmt) {
	{
		auto &expr = _31716_fmt;
		auto it = expr.begin();
		_iter_begin_1ad84527a:;
		if (it != expr.end()) {
			jule::I64 _3189_i = it - expr.begin();
			jule::U8 &_31812_b = *it;
			{
				if ((_31812_b == '@')) {
					return _3189_i;;
				};
			}
			_iter_next_1ad84527a:;
			++it;
			_3189_i++;
			goto _iter_begin_1ad84527a;
		}
		_iter_end_1ad84527a:;
	};
	return -1LL;;
}



inline jule::Str _1a79965d0_applyFmt(jule::Str _32617_fmt, jule::Slice<jule::Any> _32627_args) {
	jule::Str _32713_s = jule::Str();;
	{
		auto &expr = _32627_args;
		auto it = expr.begin();
		_iter_begin_1ad846e80:;
		if (it != expr.end()) {
			jule::Any &_32812_arg = *it;
			{
				jule::I64 _32913_i = _1a799624a_findNextFmt(_32617_fmt);;
				if ((_32913_i == -1LL)) {
					goto _iter_end_1ad846e80;
				};
				_32713_s+=_32617_fmt.slice(0LL,_32913_i);
				_32713_s+=_1a7995ea3_argToStr(_32812_arg);
				(_32617_fmt).mut_slice((_32913_i + 1LL));;
			}
			_iter_next_1ad846e80:;
			++it;
			goto _iter_begin_1ad846e80;
		}
		_iter_end_1ad846e80:;
	};
	_32713_s+=_32617_fmt;
	return _32713_s;;
}



inline jule::Bool _1a7997658_IsTopDirective(jule::Str _2819_directive) {
	return ((_2819_directive == jule::Str("pass", 4)) || (_2819_directive == jule::Str("build", 5)));;
}



inline jule::Bool _1a7998a88_IsWindows(jule::Str _3714_os) {
	return (_3714_os == jule::Str("windows", 7));;
}



inline jule::Bool _1a7998d41_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == jule::Str("darwin", 6));;
}



inline jule::Bool _1a79990d8_IsLinux(jule::Str _4312_os) {
	return (_4312_os == jule::Str("linux", 5));;
}



inline jule::Bool _1a7999407_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == jule::Str("i386", 4));;
}



inline jule::Bool _1a799969e_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == jule::Str("amd64", 5));;
}



inline jule::Bool _1a7999946_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == jule::Str("arm64", 5));;
}



inline jule::Bool _1a7999bdd_IsUnix(jule::Str _5511_os) {
	return (_1a7998d41_IsDarwin(_5511_os) || _1a79990d8_IsLinux(_5511_os));;
}



inline jule::Bool _1a799a062_Is32Bit(jule::Str _5812_arch) {
	return _1a7999407_IsI386(_5812_arch);;
}



inline jule::Bool _1a799a309_Is64Bit(jule::Str _6112_arch) {
	return (_1a799969e_IsAmd64(_6112_arch) || _1a7999946_IsArm64(_6112_arch));;
}



inline void _1a79ced99_init(void) {
	jule::Str _2513_path = _1a79e49a2_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1a79d087d_PathWd=({
			auto except = _1d973ed80_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1a79ce65c_PathExec=_1a7917dd1_Dir(_2513_path);
		_1a79cdccc_PathStdlib=_1a7917276_Join(jule::Slice<jule::Str>::make({_1a79ce65c_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_1a79de1e9_PathApi=_1a7917276_Join(jule::Slice<jule::Str>::make({_1a79ce65c_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1a9723ec6_IsUnaryOp(jule::Str _31214_kind) {
	{
		auto &expr = _1a9677c0a_UnaryOps;
		auto it = expr.begin();
		_iter_begin_1ac6096c2:;
		if (it != expr.end()) {
			jule::Str &_31312_op = *it;
			{
				if ((_31214_kind == _31312_op)) {
					return true;;
				};
			}
			_iter_next_1ac6096c2:;
			++it;
			goto _iter_begin_1ac6096c2;
		}
		_iter_end_1ac6096c2:;
	};
	return false;;
}



inline jule::Bool _1a97242b2_IsBinOp(jule::Str _32212_kind) {
	{
		auto &expr = _1a967803a_BinOps;
		auto it = expr.begin();
		_iter_begin_1ac609b67:;
		if (it != expr.end()) {
			jule::Str &_32312_op = *it;
			{
				if ((_32212_kind == _32312_op)) {
					return true;;
				};
			}
			_iter_next_1ac609b67:;
			++it;
			goto _iter_begin_1ac609b67;
		}
		_iter_end_1ac609b67:;
	};
	return false;;
}



inline jule::Bool _1a9724878_IsStr(jule::Str _34210_k) {
	return ((!(_34210_k.empty())) && ((_34210_k[0LL] == '\"') || _1a9724b20_IsRawStr(_34210_k)));;
}



inline jule::Bool _1a9724b20_IsRawStr(jule::Str _34513_k) {
	return ((!(_34513_k.empty())) && (_34513_k[0LL] == '`'));;
}



inline jule::Bool _1a9724db7_IsRune(jule::Str _34911_k) {
	return ((!(_34911_k.empty())) && (_34911_k[0LL] == '\''));;
}



inline jule::Bool _1a97254d3_IsBool(jule::Str _35511_k) {
	return ((_35511_k == jule::Str("true", 4)) || (_35511_k == jule::Str("false", 5)));;
}



inline jule::Bool _1a972577a_IsFloat(jule::Str _35812_k) {
	if (_1a78d463e_HasPrefix(_35812_k,jule::Str("0x", 2))) {
		return _1a7912e31_ContainsAny(_35812_k,jule::Str(".pP", 3));;
	};
	return _1a7912e31_ContainsAny(_35812_k,jule::Str(".eE", 3));;
}



inline jule::Bool _1a9725a22_IsNum(jule::Str _36610_k) {
	if (_36610_k.empty()) {
		return false;;
	};
	jule::U8 _3719_b = _36610_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));;
}



inline jule::Bool _1a9726061_IsIgnoreIdent(jule::Str _38118_ident) {
	return (_38118_ident == jule::Str("_", 1));;
}



inline jule::Bool _1a9726308_IsAnonIdent(jule::Str _38416_ident) {
	return (_38416_ident == jule::Str("<anonymous>", 11));;
}



inline jule::Bool _1a9726847_IsSpace(jule::I32 _39712_r) {
	{
		auto &expr = _1a96779da_Spaces;
		auto it = expr.begin();
		_iter_begin_1ac6135bb:;
		if (it != expr.end()) {
			jule::I32 &_39812_cr = *it;
			{
				if ((_39712_r == _39812_cr)) {
					return true;;
				};
			}
			_iter_next_1ac6135bb:;
			++it;
			goto _iter_begin_1ac6135bb;
		}
		_iter_end_1ac6135bb:;
	};
	return false;;
}



inline jule::Bool _1a9726c98_IsLetter(jule::I32 _40713_r) {
	return _1a7783521_IsLetter(_40713_r);;
}



inline jule::Bool _1a97272d7_IsDecimal(jule::U8 _42714_b) {
	return (('0' <= _42714_b) && (_42714_b <= '9'));;
}



inline jule::Bool _1a972757e_IsBinary(jule::U8 _43013_b) {
	return ((_43013_b == '0') || (_43013_b == '1'));;
}



inline jule::Bool _1a9727826_IsOctal(jule::U8 _43312_b) {
	return (('0' <= _43312_b) && (_43312_b <= '7'));;
}



inline jule::Bool _1a9727abd_IsHex(jule::U8 _43610_b) {
	{
		
		if ((('0' <= _43610_b) && (_43610_b <= '9'))) {
			_case_begin_1ac61837e:;
			{
				return true;;
			}
		}
		else if ((('a' <= _43610_b) && (_43610_b <= 'f'))) {
			_case_begin_1ac617ba8:;
			{
				return true;;
			}
		}
		else if ((('A' <= _43610_b) && (_43610_b <= 'F'))) {
			_case_begin_1ac617c1e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac617b42:;
			{
				return false;;
			}
		}
		_match_end_1ac617a76:;
	};
}



inline jule::Bool _1a9727d65_IsAssign(jule::U64 _45113_id) {
	return (((((((_45113_id == static_cast<jule::U64>(2LLU)) || (_45113_id == static_cast<jule::U64>(30LLU))) || (_45113_id == static_cast<jule::U64>(33LLU))) || (_45113_id == static_cast<jule::U64>(20LLU))) || (_45113_id == static_cast<jule::U64>(27LLU))) || (_45113_id == static_cast<jule::U64>(3LLU))) || (_45113_id == static_cast<jule::U64>(7LLU)));;
}



inline jule::Bool _1a972810c_IsPostfixOp(jule::Str _46216_kind) {
	{
		auto &expr = _1a971ccc2_PostfixOps;
		auto it = expr.begin();
		_iter_begin_1ac61b6d4:;
		if (it != expr.end()) {
			jule::Str &_46312_op = *it;
			{
				if ((_46216_kind == _46312_op)) {
					return true;;
				};
			}
			_iter_next_1ac61b6d4:;
			++it;
			goto _iter_begin_1ac61b6d4;
		}
		_iter_end_1ac61b6d4:;
	};
	return false;;
}



inline jule::Bool _1a97283a4_IsAssignOp(jule::Str _47215_kind) {
	if (_1a972810c_IsPostfixOp(_47215_kind)) {
		return true;;
	};
	{
		auto &expr = _1a971d0be_AssignOps;
		auto it = expr.begin();
		_iter_begin_1ac61c8d3:;
		if (it != expr.end()) {
			jule::Str &_47612_op = *it;
			{
				if ((_47215_kind == _47612_op)) {
					return true;;
				};
			}
			_iter_next_1ac61c8d3:;
			++it;
			goto _iter_begin_1ac61c8d3;
		}
		_iter_end_1ac61c8d3:;
	};
	return false;;
}



inline jule::Ptr<_1a9728b57_File> _1a972a186_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_1a9728b57_File>(_1a9728b57_File{._field_Path=_6315_path, });;
}



inline _1a7995777_Log _1a972b929_makeErr(jule::I64 _11112_row, jule::I64 _11122_col, jule::Ptr<_1a9728b57_File>& _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _1a7995777_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=_11133_f.get()._field_Path, ._field_Text=_1a7995bb7_Logf(_11143_fmt,_11156_args), };;
}



inline jule::Bool _1a972bcae_bytesHasPrefix(jule::Slice<jule::U8>& _12120_bytes, jule::Str _12135_prefix) {
	if ((_12120_bytes.len() < _12135_prefix.len())) {
		return false;;
	};
	{
		auto &expr = _12135_prefix;
		auto it = expr.begin();
		_iter_begin_1ac62779a:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12120_bytes[_1259_i] != _12135_prefix[_1259_i])) {
					return false;;
				};
			}
			_iter_next_1ac62779a:;
			++it;
			_1259_i++;
			goto _iter_begin_1ac62779a;
		}
		_iter_end_1ac62779a:;
	};
	return true;;
}



inline jule::Str _1a972c100_floatFmtE(jule::Slice<jule::U8>& _13315_txt, jule::I64 _13332_i) {
	jule::Str __jule_func_result;
	(_13332_i)++;
	if ((_13332_i >= _13315_txt.len())) {
		return __jule_func_result;;
	};
	jule::U8 _13913_b = _13315_txt[_13332_i];;
	if ((_13913_b == '_')) {
		return __jule_func_result;;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= _13315_txt.len())) {
			return __jule_func_result;;
		};
		if ((_13315_txt[_13332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1539_first = _13332_i;;
	for (; (_13332_i < _13315_txt.len()); (_13332_i)++) {
		{
			_13913_b=_13315_txt[_13332_i];
			if (((_13913_b != '_') && (!(_1a97272d7_IsDecimal(_13913_b))))) {
				goto _iter_end_1ac62ac43;
			};
		}
	_iter_next_1ac62ac43:;
	}
	_iter_end_1ac62ac43:;;
	if ((_13332_i == _1539_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_13315_txt.slice(0LL,_13332_i));
	return __jule_func_result;;
}



inline jule::Str _1a972c485_floatFmtP(jule::Slice<jule::U8>& _16715_txt, jule::I64 _16728_i) {
	return _1a972c100_floatFmtE(_16715_txt,_16728_i);;
}



inline jule::Str _1a972c7c6_floatFmtDotnp(jule::Slice<jule::U8>& _17119_txt, jule::I64 _17136_i) {
	if ((_17119_txt[_17136_i] != '.')) {
		return jule::Str();;
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < _17119_txt.len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = _17119_txt[_17136_i];;
			{
				
				if ((_17913_b == '_') || _1a97272d7_IsDecimal(_17913_b)) {
					_case_begin_1ac62da9d:;
					{
						goto _iter_next_1ac62ce43;
					}
				}
				else if (_1a972e07a_isFloatFmtP(_17913_b,_17136_i)) {
					_case_begin_1ac62db14:;
					{
						return _1a972c485_floatFmtP(_17119_txt,_17136_i);;
					}
				}
				else {
					_case_begin_1ac62da37:;
					{
						goto _iter_end_1ac62ce43;
					}
				}
				_match_end_1ac62d9c1:;
			};
		}
	_iter_next_1ac62ce43:;
	}
	_iter_end_1ac62ce43:;;
	return jule::Str();;
}



inline jule::Str _1a972cb17_floatFmtDotfp(jule::Slice<jule::U8>& _19219_txt, jule::I64 _19236_i) {
	_19236_i+=2LL;
	return _1a972c100_floatFmtE(_19219_txt,_19236_i);;
}



inline jule::Str _1a972ce58_floatFmtDotp(jule::Slice<jule::U8>& _19718_txt, jule::I64 _19735_i) {
	(_19735_i)++;
	return _1a972c100_floatFmtE(_19718_txt,_19735_i);;
}



inline jule::Str _1a972d3a9_floatNum(jule::Slice<jule::U8>& _20214_txt, jule::I64 _20231_i) {
	jule::Str __jule_func_result;
	(_20231_i)++;
	if ((_20231_i >= _20214_txt.len())) {
		__jule_func_result = static_cast<jule::Str>(_20214_txt);
		return __jule_func_result;;
	};
	if ((_20214_txt[_20231_i] == '_')) {
		(_20231_i)--;
		__jule_func_result = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
		return __jule_func_result;;
	};
	for (; (_20231_i < _20214_txt.len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = _20214_txt[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				__jule_func_result = _1a972c100_floatFmtE(_20214_txt,_20231_i);
				return __jule_func_result;;
			};
			if (((_21213_b != '_') && (!(_1a97272d7_IsDecimal(_21213_b))))) {
				goto _iter_end_1ac631430;
			};
		}
	_iter_next_1ac631430:;
	}
	_iter_end_1ac631430:;;
	if ((_20231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
	return __jule_func_result;;
}



inline jule::Str _1a972d651_commonNum(jule::Slice<jule::U8>& _22715_txt) {
	jule::Str __jule_func_result;
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22715_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22715_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1ac63539b:;
					{
						__jule_func_result = _1a972d3a9_floatNum(_22715_txt,_22813_i);
						return __jule_func_result;;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1ac635423:;
					{
						goto _iter_next_1ac6346a8;
					}
				}
				else if (_1a972dc39_isFloatFmtE(_23113_b,_22813_i)) {
					_case_begin_1ac63549a:;
					{
						__jule_func_result = _1a972c100_floatFmtE(_22715_txt,_22813_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1a97272d7_IsDecimal(_23113_b)))) {
					_case_begin_1ac635522:;
					{
						goto _iter_end_1ac6346a8;
					}
				}
				_match_end_1ac6352be:;
			};
		}
	_iter_next_1ac6346a8:;
	}
	_iter_end_1ac6346a8:;;
	if ((_22813_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_22715_txt.slice(0LL,_22813_i));
	return __jule_func_result;;
}



inline jule::Str _1a972d8e8_binaryNum(jule::Slice<jule::U8>& _25015_txt) {
	jule::Str __jule_func_result;
	if ((!(_1a972bcae_bytesHasPrefix(_25015_txt,jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if ((_25015_txt.len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25015_txt.len()); (_25913_i)++) {
		{
			if (((_25015_txt[_25913_i] != '_') && (!(_1a972757e_IsBinary(_25015_txt[_25913_i]))))) {
				goto _iter_end_1ac636ca4;
			};
		}
	_iter_next_1ac636ca4:;
	}
	_iter_end_1ac636ca4:;;
	if ((_25913_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_25015_txt.slice(0LL,_25913_i));
	return __jule_func_result;;
}



inline jule::Bool _1a972dc39_isFloatFmtE(jule::U8 _27216_b, jule::I64 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));;
}



inline jule::Bool _1a972e07a_isFloatFmtP(jule::U8 _27616_b, jule::I64 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));;
}



inline jule::Bool _1a972e3bb_isFloatFmtDotnp(jule::Slice<jule::U8>& _28021_txt, jule::I64 _28038_i) {
	if ((_28021_txt[_28038_i] != '.')) {
		return false;;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < _28021_txt.len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = _28021_txt[_28038_i];;
			{
				
				if ((_28713_b == '_') || _1a97272d7_IsDecimal(_28713_b)) {
					_case_begin_1ac63cbcd:;
					{
						goto _iter_next_1ac63b9e0;
					}
				}
				else if (_1a972e07a_isFloatFmtP(_28713_b,_28038_i)) {
					_case_begin_1ac63cc44:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1ac63cb67:;
					{
						goto _iter_end_1ac63b9e0;
					}
				}
				_match_end_1ac63cb01:;
			};
		}
	_iter_next_1ac63b9e0:;
	}
	_iter_end_1ac63b9e0:;;
	return false;;
}



inline jule::Bool _1a972e70c_isFloatFmtDotp(jule::Slice<jule::U8>& _30120_txt, jule::I64 _30133_i) {
	{
		
		if ((_30120_txt.len() < 3LL)) {
			_case_begin_1ac63e8c2:;
			{
				goto _case_begin_1ac63e1eb;
			}
		}
		else if ((_30120_txt[_30133_i] != '.')) {
			_case_begin_1ac63e1eb:;
			{
				goto _case_begin_1ac63e262;
			}
		}
		else if (((_30120_txt[(_30133_i + 1LL)] != 'p') && (_30120_txt[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_1ac63e262:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ac63e185:;
			{
				return true;;
			}
		}
		_match_end_1ac63e0b9:;
	};
}



inline jule::Bool _1a972ea4d_isFloatFmtDotfp(jule::Slice<jule::U8>& _31421_txt, jule::I64 _31434_i) {
	{
		
		if ((_31421_txt.len() < 4LL)) {
			_case_begin_1ac641bc1:;
			{
				goto _case_begin_1ac64150b;
			}
		}
		else if ((_31421_txt[_31434_i] != '.')) {
			_case_begin_1ac64150b:;
			{
				goto _case_begin_1ac641572;
			}
		}
		else if (((_31421_txt[(_31434_i + 1LL)] != 'f') && (_31421_txt[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_1ac641572:;
			{
				goto _case_begin_1ac6415d8;
			}
		}
		else if (((_31421_txt[(_31434_i + 2LL)] != 'p') && (_31421_txt[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_1ac6415d8:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ac641099:;
			{
				return true;;
			}
		}
		_match_end_1ac640ecd:;
	};
}



inline jule::Str _1a972ee9e_octalNum(jule::Slice<jule::U8>& _32914_txt) {
	jule::Str __jule_func_result;
	if ((_32914_txt[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if ((_32914_txt.len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32914_txt[1LL] == 'o')) {
		if ((_32914_txt.len() < 3LL)) {
			return __jule_func_result;;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octalStart;;
	for (; (_34813_i < _32914_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32914_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1a972d3a9_floatNum(_32914_txt,_34813_i);
				return __jule_func_result;;
			};
			if (_1a972dc39_isFloatFmtE(_35013_b,_34813_i)) {
				__jule_func_result = _1a972c100_floatFmtE(_32914_txt,_34813_i);
				return __jule_func_result;;
			};
			if (((_35013_b != '_') && (!(_1a9727826_IsOctal(_35013_b))))) {
				goto _iter_end_1ac645c19;
			};
		}
	_iter_next_1ac645c19:;
	}
	_iter_end_1ac645c19:;;
	if ((_34813_i == _33713_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_32914_txt.slice(0LL,_34813_i));
	return __jule_func_result;;
}



inline jule::Str _1a9730246_hexNum(jule::Slice<jule::U8>& _37112_txt) {
	jule::Str __jule_func_result;
	if ((_37112_txt.len() < 3LL)) {
		return __jule_func_result;;
	};
	if (((_37112_txt[0LL] != '0') || ((_37112_txt[1LL] != 'x') && (_37112_txt[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37112_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37112_txt[_38013_i];;
			{
				
				if (_1a972e70c_isFloatFmtDotp(_37112_txt,_38013_i)) {
					_case_begin_1ac64bc31:;
					{
						__jule_func_result = _1a972ce58_floatFmtDotp(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (_1a972ea4d_isFloatFmtDotfp(_37112_txt,_38013_i)) {
					_case_begin_1ac64bca8:;
					{
						__jule_func_result = _1a972cb17_floatFmtDotfp(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (_1a972e07a_isFloatFmtP(_38313_b,_38013_i)) {
					_case_begin_1ac64bd30:;
					{
						__jule_func_result = _1a972c485_floatFmtP(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (_1a972e3bb_isFloatFmtDotnp(_37112_txt,_38013_i)) {
					_case_begin_1ac64bda7:;
					{
						__jule_func_result = _1a972c7c6_floatFmtDotnp(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (((_38313_b != '_') && (!(_1a9727abd_IsHex(_38313_b))))) {
					_case_begin_1ac64be2e:;
					{
						goto _iter_end_1ac64ae72;
					}
				}
				_match_end_1ac64bb43:;
			};
		}
	_iter_next_1ac64ae72:;
	}
	_iter_end_1ac64ae72:;;
	if ((_38013_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_37112_txt.slice(0LL,_38013_i));
	return __jule_func_result;;
}



inline jule::Str _1a9730587_hexEscape(jule::Slice<jule::U8>& _40415_txt, jule::I64 _40428_n) {
	jule::Str __jule_func_result;
	if ((_40415_txt.len() < _40428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_1a9727abd_IsHex(_40415_txt[_41013_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1ac64e607:;
	}
	_iter_end_1ac64e607:;;
	__jule_func_result=static_cast<jule::Str>(_40415_txt.slice(0LL,_40428_n));
	return __jule_func_result;;
}



inline jule::Str _1a973082e_bigUnicodePointEscape(jule::Slice<jule::U8>& _42227_txt) {
	return _1a9730587_hexEscape(_42227_txt,10LL);;
}



inline jule::Str _1a9730ae8_littleUnicodePointEscape(jule::Slice<jule::U8>& _42730_txt) {
	return _1a9730587_hexEscape(_42730_txt,6LL);;
}



inline jule::Str _1a9730ca2_hexByteEscape(jule::Slice<jule::U8>& _43219_txt) {
	return _1a9730587_hexEscape(_43219_txt,4LL);;
}



inline jule::Str _1a9731038_byteEscape(jule::Slice<jule::U8>& _43716_txt) {
	jule::Str __jule_func_result;
	if ((_43716_txt.len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1a9727826_IsOctal(_43716_txt[1LL]))) || (!(_1a9727826_IsOctal(_43716_txt[2LL])))) || (!(_1a9727826_IsOctal(_43716_txt[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_43716_txt.slice(0LL,4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1a7995777_Log> _1a9735a32_Lex(jule::Ptr<_1a9728b57_File> _82612_f, jule::I64 _82622_mode) {
	if ((_82612_f == nullptr)) {
		return nullptr;;
	};
	_1a9731720_lex _83113_lex = _1a9731720_lex{._field_mode=_82622_mode, ._field_file=_82612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1a97342b1_newLine(&_83113_lex);
	_1a97322ae_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;;
	};
	_82612_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;;
}



inline jule::I64 _1aba3e366_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1aba467e1_Len64(_6119_x)));;
}



inline jule::I64 _1aba4029b_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1aba40e39_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _1aba40b92_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1aba3e971__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _1aba40e39_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1aba40037__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _1aba46549_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _1aba467e1_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1aba474a1_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1aba48b34_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _1abae025d_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1abae0527_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1abae07be_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1abae0add_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1abae30c9_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1ad6d5c97:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1aba4cc7b_IsInf(_4714_f,0LL) || _1aba4ca17_IsNaN(_4714_f)) {
			_case_begin_1ad6d5d1e:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1ad6d5b87:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1aba4cdad_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _1abae07be_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1abae0add_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _1aba4c8d5_NaN(void) {
	return static_cast<jule::F64>(_1abae0add_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1aba4ca17_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1aba4cb49_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1abae0add_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_1abae0add_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1aba4cc7b_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1aba4cdad_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1aba4e398_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1aba4dc7c_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1aba4ca17_IsNaN(_1118_x) || _1aba4cc7b_IsInf(_1118_x,1LL)) {
			_case_begin_1a97503cb:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1a975050d:;
			{
				return static_cast<jule::F64>(_1aba4c8d5_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1a9750640:;
			{
				return static_cast<jule::F64>(_1aba4cb49_Inf(-1LL));;
			}
		}
		_match_end_1a974eb8e:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I64 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1abae30c9_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _1aba4e398_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1abae0add_F64FromBits(static_cast<jule::U64>((_1abae07be_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1aba53248_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _1aba4e398_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1abe0383a:;
		}
		_iter_end_1abe0383a:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _1aba53688_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I64 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1abae30c9_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1aba4dc7c_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _1ab5444dc_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_1ab53bb55_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1ab603722_max(static_cast<jule::I64>((_7832_prec + 4LL)),24LL), 0),_7813_f,_7821_fmt,_7832_prec,_7843_bit_size));;
}



inline jule::Slice<jule::U8> _1ab53bb55_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1ab93ae00_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1aa41e462:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1abae025d_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1ab93ae00_floatInfo>)((&(_1ab5265bd_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa41e63d:;
			{
				_8313_bits=static_cast<jule::U64>(_1abae07be_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1ab93ae00_floatInfo>)((&(_1ab526a30_f64info))));
			}
		}
		else {
			_case_begin_1aa41dd46:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1aa41c817:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1aa422c7e:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1aa4251c1:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1aa425369:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1aa424269:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1aa42419d:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1aa4237eb:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1aa41e6a4:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1aa422c29:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1ab906591_fmtB(_8220_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1ab954479_fmtX(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));;
	};
	;
	_1ab5c106e_decimalSlice _13213_digs = _1ab5c106e_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1aba7c9d1_ryuFtoaShortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa428eb6:;
				{
					_8258_prec=static_cast<jule::I64>(_1ab603722_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa429093:;
				{
					_8258_prec=static_cast<jule::I64>(_1ab603722_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa429109:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1aa428ca7:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa42abee:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa42b282:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1aa42b183:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1aa42b051:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1aba7c41a_ryuFtoaFixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1aba7c54c_ryuFtoaFixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1ab56d2c4_bigFtoa(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));;
	};
	return _1ab5d1e5e_fmtDigits(_8220_dst,_1359_shortest,_969_neg,_13213_digs,_8258_prec,_8243_fmt);;
}



inline jule::Slice<jule::U8> _1ab56d2c4_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1ab93ae00_floatInfo& _18327_flt) {
	_1aba7e32e_decimal _18413_d = _1aba7e32e_decimal{};;
	_1aba7e51b_assign(&_18413_d, _1835_mant);
	_1aba7e64d_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_1ab5c106e_decimalSlice _18713_digs = _1ab5c106e_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1ab68d1a2_roundShortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1ab5c106e_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa431243:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa4338e9:;
				{
					_18233_prec=static_cast<jule::I64>(_1ab603722_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa4339a4:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1aa433630:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa435324:;
				{
					_1aba7e9e4_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa43539b:;
				{
					_1aba7e9e4_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa435423:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1aba7e9e4_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1aa435203:;
		};
		_18713_digs=_1ab5c106e_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1ab5d1e5e_fmtDigits(_18216_dst,_1889_shortest,_18255_neg,_18713_digs,_18233_prec,_18244_fmt);;
}



inline jule::Slice<jule::U8> _1ab5d1e5e_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1ab5c106e_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1aa438a64:;
			{
				return _1ab8b7e7b_fmtE(_21918_dst,_21947_neg,_2205_digs,_22029_prec,_22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aa438aca:;
			{
				return _1ab906261_fmtF(_21918_dst,_21947_neg,_2205_digs,_22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1aa438b41:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1ab8b7e7b_fmtE(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1ab906261_fmtF(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>(_1ab603722_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));;
			}
		}
		_match_end_1aa438921:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _1ab68d1a2_roundShortest(_1aba7e32e_decimal& _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _1ab93ae00_floatInfo& _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		_25723_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25757_flt._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * (_25723_d._field_dp - _25723_d._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)))))) {
		return;;
	};
	_1aba7e32e_decimal _28713_upper = _1aba7e32e_decimal{};;
	_1aba7e51b_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1aba7e64d_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << _25757_flt._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_1aba7e32e_decimal _30613_lower = _1aba7e32e_decimal{};;
	_1aba7e51b_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1aba7e64d_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25723_d._field_dp);;
			if ((_33513_mi >= _25723_d._field_nd)) {
				goto _iter_end_1ad08092d;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25723_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1ad085a98:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1ad085b20:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1ad085b97:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1ad0859cc:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1ad088d87:;
					{
						_1aba7e9e4_round(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1ad088e0e:;
					{
						_1aba7e780_roundDown(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1ad088e86:;
					{
						_1aba7e8b2_roundUp(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1ad088cbb:;
			};
		}
	_iter_next_1ad08092d:;
	}
	_iter_end_1ad08092d:;;
}



inline jule::Slice<jule::U8> _1ab8b7e7b_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1ab5c106e_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1ab527ed7_min(_39637_d._field_nd,static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1ad08c5d8:;
		}
		_iter_end_1ad08c5d8:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1ad090cd4:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1ad091378:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1ad091026:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1ad091213:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _1ab906261_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1ab5c106e_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1ab527ed7_min(_45137_d._field_nd,_45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1ad095657:;
		}
		_iter_end_1ad095657:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1ad096d2e:;
		}
		_iter_end_1ad096d2e:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _1ab906591_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _1ab93ae00_floatInfo& _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1aba8182b_fmtBits(_48413_dst,_48437_mant,10LL,false,true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>(_48463_flt._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1aba8182b_fmtBits(_48413_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)),10LL,(_48452_exp < 0LL),true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _1ab954479_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1ab93ae00_floatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1ad099e75:;
	}
	_iter_end_1ad099e75:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1ad0a28ea:;
		}
		_iter_end_1ad0a28ea:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1ad0a427b:;
		}
		_iter_end_1ad0a427b:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1ab58661c_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1ad0a15a8:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1ad0a1498:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1ad0a6b63:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1ad0a6d50:;
	};
	return _50613_dst;;
}



inline jule::I64 _1ab527ed7_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I64 _1ab603722_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _1ab58661c_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__1ab512e39_ConvError _1ab64e130_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	__jule_tuple_u64__jule_tuple__1ab512e39_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (_5118_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1ad0ada05:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1ad0ad8d4:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_1ab58661c_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1ad0b0809:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1ab58661c_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1ad0b061c:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1ab58661c_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1ad0b0683:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1ad0b0276:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1ad0b01aa:;
					};
				};
			}
		}
		else {
			_case_begin_1ad0acbe1:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1ad0acb7a:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1ad0b54e0:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ad0b4b0a:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1ad0b4dd5:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1ad0b4c5e:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1ad0b4ec3:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ad0b6634:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1ad0b5215:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5118_s;
		auto it = expr.begin();
		_iter_begin_1ad0b7745:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1ad0b6898:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1ab58661c_lower(_10912_c)) && (_1ab58661c_lower(_10912_c) <= 'z'))) {
						_case_begin_1ad0b8a87:;
						{
							_11017_d=static_cast<jule::U8>(((_1ab58661c_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1ad0b86ad:;
						{
							goto _iter_next_1ad0b7745;
						}
					}
					else {
						_case_begin_1ad0b8647:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1ad0b85d1:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1ad0b7745:;
			++it;
			goto _iter_begin_1ad0b7745;
		}
		_iter_end_1ad0b7745:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1ab887b1b_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I64 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1ab512e39_ConvError __jule_assign_result = _1ab64e130_parseUint(_14618_s,_14630_base,_14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type135));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _1ab598ac4_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type135));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I64 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1ab512e39_ConvError __jule_assign_result = _1ab64e130_parseUint(_17217_s,_17225_base,_17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type135));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type135));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type135));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1ab5d06dd_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1abae0add_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _579_clz = _1aba3e366_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1aba48b34_Mul64(_4122_man,_1ab83c7d5_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1aba48b34_Mul64(_4122_man,_1ab83c7d5_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1abae0add_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1ab51539d_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1abae0527_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1329_clz = _1aba3e366_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1aba48b34_Mul64(_11022_man,_1ab83c7d5_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1aba48b34_Mul64(_11022_man,_1ab83c7d5_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_1abae0527_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1aba7aa01_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;;
			};
		}
	_iter_next_1ad0e0383:;
	}
	_iter_end_1ad0e0383:;;
	return _4613_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1aba7ab33_special(jule::Str _6816_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if (_6816_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1ad0e473e:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1ad0e47b6;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1ad0e47b6:;
			{
				jule::I64 _8317_caseN = _1aba7aa01_commonPrefixLenIgnoreCase(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1aba4cb49_Inf(_7213_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_7313_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1ad0e483d:;
			{
				if ((_1aba7aa01_commonPrefixLenIgnoreCase(_6816_s,jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1aba4c8d5_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ad0e4673:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1aba7ac65_readFloat(jule::Str _10314_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1ad0ea3b0:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1ad0ea437:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1ad0ea26c:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < _10314_s.len()) && (_10314_s[__jule_func_result.__jule_result_arg5] == '0')) && (_1ab58661c_lower(_10314_s[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_11913_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < _10314_s.len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13313_c = _10314_s[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1ad1015a3:;
					{
						goto _iter_next_1ad100a03;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1ad10162a:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1ad100a03;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1ad1016a2:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1ad100a03;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_11713_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1ad100a03;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1ab58661c_lower(_13313_c))) && (_1ab58661c_lower(_13313_c) <= 'f'))) {
					_case_begin_1ad101729:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1ab58661c_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1ad100a03;
					}
				}
				_match_end_1ad1014c6:;
			};
			goto _iter_end_1ad100a03;
		}
	_iter_next_1ad100a03:;
	}
	_iter_end_1ad100a03:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && (_1ab58661c_lower(_10314_s[__jule_func_result.__jule_result_arg5]) == _11913_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_19617_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= _10314_s.len()) || (_10314_s[__jule_func_result.__jule_result_arg5] < '0')) || (_10314_s[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && ((('0' <= _10314_s[__jule_func_result.__jule_result_arg5]) && (_10314_s[__jule_func_result.__jule_result_arg5] <= '9')) || (_10314_s[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if ((_10314_s[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1ad10ab0c;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1ad10ab0c:;
		}
		_iter_end_1ad10ab0c:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1aba7b6a0_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48116_mantissa >> _1ab526a30_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1ad115a6d:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1ad115ae5:;
			{
				if ((_48135_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1ab9ae748_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1ab9ae748_f64pow10[_48135_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1ad115b6c:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1ab9ae748_f64pow10[(-(_48135_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ad1159a2:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1aba7b7d2_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_51516_mantissa >> _1ab5265bd_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1ad11a754:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1ad11a7cb:;
			{
				if ((_51535_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1aba7b46e_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1aba7b46e_f32pow10[_51535_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1ad11a853:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1aba7b46e_f32pow10[(-(_51535_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ad11a688:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1ab512e39_ConvError _1aba7b914_atofHex(jule::Str _55112_s, _1ab93ae00_floatInfo& _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	__jule_tuple_f64__jule_tuple__1ab512e39_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << _55121_flt._field_expbits)) + _55121_flt._field_bias) - 2LL);;
	jule::I64 _5539_minExp = (_55121_flt._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>(_55121_flt._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> (_55121_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1ad12065a:;
	}
	_iter_end_1ad12065a:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + _55121_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1ad122508:;
	}
	_iter_end_1ad122508:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1ad122ecb:;
	}
	_iter_end_1ad122ecb:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + _55121_flt._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> _55121_flt._field_mantbits) == 0LLU)) {
		_55160_exp=_55121_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55121_flt._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << _55121_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - _55121_flt._field_bias) & static_cast<jule::I64>(((1LL << _55121_flt._field_expbits) - 1LL)))) << _55121_flt._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << _55121_flt._field_mantbits) << _55121_flt._field_expbits);
	};
	if ((_55121_flt == _1ab5265bd_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_1abae0527_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits)))));
		__jule_func_result.__jule_result_arg1 = _59813_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1abae0add_F64FromBits(_60513_bits));
	__jule_func_result.__jule_result_arg1 = _59813_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1ab512e39_ConvError _1aba7bb56_atof32(jule::Str _61611_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1ab512e39_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _61814_val = 0;;
		jule::I64 _61819__n = 0;;
		jule::Bool _61823_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aba7ab33_special(_61611_s);
			_61814_val = __jule_assign_result.__jule_result_arg0;
			_61819__n = __jule_assign_result.__jule_result_arg1;
			_61823_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_61823_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			__jule_func_result.__jule_result_arg1 = _61819__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62410_mantissa = 0;;
	jule::I64 _62420_exp = 0;;
	jule::Bool _62425_neg = false;;
	jule::Bool _62430_trunc = false;;
	jule::Bool _62437_hex = false;;
	jule::I64 _62442__n = 0;;
	jule::Bool _62450_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aba7ac65_readFloat(_61611_s);
		_62410_mantissa = __jule_assign_result.__jule_result_arg0;
		_62420_exp = __jule_assign_result.__jule_result_arg1;
		_62425_neg = __jule_assign_result.__jule_result_arg2;
		_62430_trunc = __jule_assign_result.__jule_result_arg3;
		_62437_hex = __jule_assign_result.__jule_result_arg4;
		_62442__n = __jule_assign_result.__jule_result_arg5;
		_62450_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62442__n;
	if ((!(_62450_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1ab512e39_ConvError __jule_assign_result = _1aba7b914_atofHex(_61611_s.slice(0LL,__jule_func_result.__jule_result_arg1),_1ab5265bd_f32info,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
			_63117_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62430_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1aba7b7d2_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62450_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1ab51539d_eiselLemire32(_62410_mantissa,_62420_exp,_62425_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62450_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65321_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1ab51539d_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
				_65321_fUp = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62450_ok && (__jule_func_result.__jule_result_arg0 == _65321_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1aba7e32e_decimal _66213_d = _1aba7e32e_decimal{};;
	if ((!(_1aba7aeb8_set(&_66213_d, _61611_s.slice(0LL,__jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _66610_b = 0;;
	jule::Bool _66613_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1aba7b0ea_floatBits(&_66213_d, _1ab5265bd_f32info);
		_66610_b = __jule_assign_result.__jule_result_arg0;
		_66613_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1abae0527_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ab512e39_ConvError _1aba7bc88_atof64(jule::Str _67411_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1ab512e39_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _67614_val = 0;;
		jule::I64 _67619__n = 0;;
		jule::Bool _67623_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aba7ab33_special(_67411_s);
			_67614_val = __jule_assign_result.__jule_result_arg0;
			_67619__n = __jule_assign_result.__jule_result_arg1;
			_67623_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_67623_ok) {
			__jule_func_result.__jule_result_arg0 = _67614_val;
			__jule_func_result.__jule_result_arg1 = _67619__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68210_mantissa = 0;;
	jule::I64 _68220_exp = 0;;
	jule::Bool _68225_neg = false;;
	jule::Bool _68230_trunc = false;;
	jule::Bool _68237_hex = false;;
	jule::I64 _68242__n = 0;;
	jule::Bool _68250_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aba7ac65_readFloat(_67411_s);
		_68210_mantissa = __jule_assign_result.__jule_result_arg0;
		_68220_exp = __jule_assign_result.__jule_result_arg1;
		_68225_neg = __jule_assign_result.__jule_result_arg2;
		_68230_trunc = __jule_assign_result.__jule_result_arg3;
		_68237_hex = __jule_assign_result.__jule_result_arg4;
		_68242__n = __jule_assign_result.__jule_result_arg5;
		_68250_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68242__n;
	if ((!(_68250_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68237_hex) {
		({
			__jule_tuple_f64__jule_tuple__1ab512e39_ConvError __jule_assign_result = _1aba7b914_atofHex(_67411_s.slice(0LL,__jule_func_result.__jule_result_arg1),_1ab526a30_f64info,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68230_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1aba7b6a0_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68250_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1ab5d06dd_eiselLemire64(_68210_mantissa,_68220_exp,_68225_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68250_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71021_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1ab5d06dd_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
				_71021_fUp = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68250_ok && (__jule_func_result.__jule_result_arg0 == _71021_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1aba7e32e_decimal _71913_d = _1aba7e32e_decimal{};;
	if ((!(_1aba7aeb8_set(&_71913_d, _67411_s.slice(0LL,__jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72310_b = 0;;
	jule::Bool _72313_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1aba7b0ea_floatBits(&_71913_d, _1ab526a30_f64info);
		_72310_b = __jule_assign_result.__jule_result_arg0;
		_72313_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1abae0add_F64FromBits(_72310_b));
	if (_72313_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ab512e39_ConvError _1aba7bdba_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1ab512e39_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f = 0;;
		jule::I64 _73317_n = 0;;
		jule::I64 _73320_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1ab512e39_ConvError __jule_assign_result = _1aba7bb56_atof32(_73121_s);
			_73314_f = __jule_assign_result.__jule_result_arg0;
			_73317_n = __jule_assign_result.__jule_result_arg1;
			_73320_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73314_f));
		__jule_func_result.__jule_result_arg1 = _73317_n;
		__jule_func_result.__jule_result_arg2 = _73320_err;
		return __jule_func_result;;
	};
	jule::F64 _73710_f = 0;;
	jule::I64 _73713_n = 0;;
	jule::I64 _73716_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1ab512e39_ConvError __jule_assign_result = _1aba7bc88_atof64(_73121_s);
		_73710_f = __jule_assign_result.__jule_result_arg0;
		_73713_n = __jule_assign_result.__jule_result_arg1;
		_73716_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _73710_f;
	__jule_func_result.__jule_result_arg1 = _73713_n;
	__jule_func_result.__jule_result_arg2 = _73716_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1aba7beec_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f = 0;;
	jule::I64 _76613_n = 0;;
	jule::I64 _76616_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1ab512e39_ConvError __jule_assign_result = _1aba7bdba_parseFloatPrefix(_76515_s,_76523_bit_size);
		_76610_f = __jule_assign_result.__jule_result_arg0;
		_76613_n = __jule_assign_result.__jule_result_arg1;
		_76616_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type135));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_76616_err, &__jule_any_type135));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _76610_f);;
}



inline void _1aba7c41a_ryuFtoaFixed32(_1ab5c106e_decimalSlice& _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			_4924_d._field_nd = ___jule_assign_arg;
			_4924_d._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _1aba46549_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1aba7cb13_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I64 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aba7d32d_mult64bitPow10(_4945_mant,_6213_e2,_749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1aba7d592_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1aba7c89e_formatDecimal(_4924_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_roundUp,_4966_prec);
	_4924_d._field_dp-=_749_q;
}



inline void _1aba7c54c_ryuFtoaFixed64(_1ab5c106e_decimalSlice& _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			_12124_d._field_nd = ___jule_assign_arg;
			_12124_d._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _1aba467e1_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1aba7cb13_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I64 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aba7d460_mult128bitPow10(_12145_mant,_13113_e2,_1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1aba7d592_divisibleByPow5(_12145_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1aba7c89e_formatDecimal(_12124_d,_15314_di,(!(_15329_d0)),_17113_roundUp,_12166_prec);
	_12124_d._field_dp-=_1469_q;
}



inline void _1aba7c89e_formatDecimal(_1ab5c106e_decimalSlice& _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _1aba7c7a0_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1ad159254:;
	}
	_iter_end_1ad159254:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	_20023_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1ad15cc08:;
	}
	_iter_end_1ad15cc08:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20023_d._field_d[(_20023_d._field_nd - 1LL)] == '0')) {
		{
			(_20023_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1ad163a33:;
	}
	_iter_end_1ad163a33:;;
	_20023_d._field_dp=static_cast<jule::I64>((_20023_d._field_nd + _20213_trimmed));
}



inline void _1aba7c9d1_ryuFtoaShortest(_1ab5c106e_decimalSlice& _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1ab93ae00_floatInfo& _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			_26125_d._field_nd = ___jule_assign_arg;
			_26125_d._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1aba40e39_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1aba7d0b9_ryuDigits(_26125_d,_26146_mant,_26146_mant,_26146_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I64 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1aba7cd77_computeBounds(_26146_mant,_26157_exp,_26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_1aba7d0b9_ryuDigits(_26125_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_1aba7cb13_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26168_flt == _1ab5265bd_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aba7d32d_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aba7d32d_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aba7d32d_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aba7d460_mult128bitPow10(_27310_ml,_27326_e2,_2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aba7d460_mult128bitPow10(_27314_mc,_27326_e2,_2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aba7d460_mult128bitPow10(_27318_mu,_27326_e2,_2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1aba7d592_divisibleByPow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1aba7d592_divisibleByPow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1aba7d592_divisibleByPow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1aba7d0b9_ryuDigits(_26125_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26125_d._field_dp-=_2799_q;
}



inline jule::I64 _1aba7cb13_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _1aba7cc45_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1aba7cd77_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1ab93ae00_floatInfo& _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << _3966_flt._field_mantbits)) || (_39529_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1aba7d0b9_ryuDigits(_1ab5c106e_decimalSlice& _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1aba7d6c4_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1aba7d6c4_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1aba7d6c4_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_1aba7d1eb_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1aba7d1eb_ryuDigits32(_40919_d,_41014_lhi,_41110_chi,_41210_uhi,_40978_c0,_40992_cup,8LL);
		_40919_d._field_dp+=9LL;
	} else {
		_40919_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40919_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1ad183998:;
		}
		_iter_end_1ad183998:;;
		_40919_d._field_d=_40919_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40919_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1aba7d1eb_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,static_cast<jule::I64>((_40919_d._field_nd + 8LL)));
	};
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[(_40919_d._field_nd - 1LL)] == '0'))) {
		{
			(_40919_d._field_nd)--;
		}
	_iter_next_1ad18402b:;
	}
	_iter_end_1ad18402b:;;
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[0LL] == '0'))) {
		{
			(_40919_d._field_nd)--;
			(_40919_d._field_dp)--;
			_40919_d._field_d=_40919_d._field_d.slice(1LL);
		}
	_iter_next_1ad18369b:;
	}
	_iter_end_1ad18369b:;;
}



inline void _1aba7d1eb_ryuDigits32(_1ab5c106e_decimalSlice& _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45421_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1ad18965d;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1ad18965d:;
	}
	_iter_end_1ad18965d:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45421_d._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			_45421_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45421_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1ad191137:;
	}
	_iter_end_1ad191137:;;
	if ((_51013_n == _45421_d._field_nd)) {
		_45421_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45421_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45421_d._field_dp=static_cast<jule::I64>((_45421_d._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1aba7d32d_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1ab83c7d5_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1aba48b34_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)),_54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1aba7cc45_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1aba7d460_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1ab83c7d5_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1aba7cc45_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1aba48b34_Mul64(_56220_m,_57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1aba48b34_Mul64(_56220_m,_57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1aba474a1_Add64(_57910_l1,_58018_h0,0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1aba7d592_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1adb54d3c:;
	}
	_iter_end_1adb54d3c:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1aba7d6c4_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1aba7ed8a_trim(_1aba7e32e_decimal& _45314_a) {
	while (((_45314_a._field_nd > 0LL) && (_45314_a._field_d[(_45314_a._field_nd - 1LL)] == '0'))) {
		{
			(_45314_a._field_nd)--;
		}
	_iter_next_1adb58406:;
	}
	_iter_end_1adb58406:;;
	if ((_45314_a._field_nd == 0LL)) {
		_45314_a._field_dp=0LL;
	};
}



inline void _1aba7eebc_rightShift(_1aba7e32e_decimal& _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= _46320_a._field_nd)) {
				if ((_46813_n == 0LLU)) {
					_46320_a._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1adb5bc34:;
				}
				_iter_end_1adb5bc34:;;
				goto _iter_end_1adb5a87b;
			};
			jule::U64 _48213_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1adb5a87b:;
	}
	_iter_end_1adb5a87b:;;
	_46320_a._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < _46320_a._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1adb5e52d:;
	}
	_iter_end_1adb5e52d:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				_46320_a._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_1adb61002:;
	}
	_iter_end_1adb61002:;;
	_46320_a._field_nd=_46513_w;
	_1aba7ed8a_trim(_46320_a);
}



inline jule::Bool _1aba800ee_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);;
			};
		}
	_iter_next_1adb63d90:;
	}
	_iter_end_1adb63d90:;;
	return false;;
}



inline void _1aba80231_leftShift(_1aba7e32e_decimal& _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _1aba7e230_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_1aba800ee_prefixIsLessThan(_53119_a._field_d,_53119_a._field_nd,_1aba7e230_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = _53119_a._field_nd;;
	jule::I64 _53813_w = (_53119_a._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>(_53119_a._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1adb67448:;
	}
	_iter_end_1adb67448:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1adb69ed9:;
	}
	_iter_end_1adb69ed9:;;
	_53119_a._field_nd+=_53213_delta;
	if ((_53119_a._field_nd >= 800LL)) {
		_53119_a._field_nd=800LL;
	};
	_53119_a._field_dp+=_53213_delta;
	_1aba7ed8a_trim(_53119_a);
}



inline jule::Bool _1aba80363_shouldRoundUp(_1aba7e32e_decimal& _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= _57819_a._field_nd))) {
		return false;;
	};
	if (((_57819_a._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == _57819_a._field_nd))) {
		if (_57819_a._field_trunc) {
			return true;;
		};
		return ((_57831_nd > 0LL) && (((_57819_a._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return (_57819_a._field_d[_57831_nd] >= '5');;
}



inline jule::Str _1aba81221_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1aba815b7_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1aba8182b_fmtBits(nullptr,_6012_i,_6020_base,false,false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _1aba81353_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1aba815b7_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1aba8182b_fmtBits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)),_7119_base,(_7111_i < 0LL),false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _1aba81485_Itoa(jule::I64 _809_i) {
	return _1aba81353_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)),10LL);;
}



inline jule::Str _1aba815b7_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _1aba816e9_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1aba8182b_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1adba8335:;
		}
		_iter_end_1adba8335:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1aba816e9_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1aba4029b_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1adbb1b13:;
		}
		_iter_end_1adbb1b13:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1adbb472b:;
		}
		_iter_end_1adbb472b:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _1ab4bb8c6_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1bb5819c0:;
			{
				return _1aa0b16ed_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1bb581a36:;
			{
				return _1ab4a7d68_SysUint;;
			}
		}
		else {
			_case_begin_1bb581dbb:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1bb582372:;
	};
}



inline jule::I64 _1ab4c5d53_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1bb583384:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1bb5833ea:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1bb582e22:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1bb582e88:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1bb582eee:;
			{
				return _1ab4a8011_BitSize;;
			}
		}
		else {
			_case_begin_1bb582949:;
			{
				return -1LL;;
			}
		}
		_match_end_1bb582d78:;
	};
}



inline jule::Str _1ab4e834d_IntFromBits(jule::I64 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1bb585320:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1bb585386:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1bb585133:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bb585199:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1bb5835c6:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bb584d69:;
	};
}



inline jule::Str _1ab4209c3_UintFromBits(jule::I64 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1bb586794:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1bb58680a:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1bb586596:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bb58660c:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1bb586112:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bb585ed0:;
	};
}



inline jule::Str _1ab4e87b0_FloatFromBits(jule::I64 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1bb587c18:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bb587c7e:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1bb587586:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bb587454:;
	};
}



inline jule::Bool _1ab4e6615_CheckBitFloat(jule::Str _15018_val, jule::I64 _15028_bit) {
	({
		auto except = _1aba7beec_ParseFloat(_15018_val,_15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1ab40757b_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1bb58cc62:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bb58bdb5:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bb58bd1b:;
	};
}



inline jule::I64 _1ab49b477_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_1bb58db42:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_1bb58dba8:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_1bb58dc1e:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bb58d36c:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bb58d2a1:;
	};
}



inline jule::I64 _1ab444dc1_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_1bb590a56:;
			{
				return 8LLU;;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_1bb590abc:;
			{
				return 16LLU;;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_1bb590b33:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bb58ee95:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bb58eaaa:;
	};
}



inline void _1ab445003_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1a79a67dd_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1bb591bbc:;
				{
					_1ab4a8011_BitSize=64LLU;
					_1aa0b16ed_SysInt=jule::Str("i64", 3);
					_1ab4a7d68_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1bb591c44:;
				{
					_1ab4a8011_BitSize=32LLU;
					_1aa0b16ed_SysInt=jule::Str("i32", 3);
					_1ab4a7d68_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1bb591b12:;
		};
	};
}



inline void _1ab4a71db_init(void) {
	_1ab445003_UpdateTarget();
}



inline jule::F64 _1aba8409d_Min(jule::Str _6112_k) {
	_6112_k=_1ab4bb8c6_RealKindOf(_6112_k);
	{
		auto &_match_expr{ _6112_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1bb594560:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1bb5945c6:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1bb594076:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1bb5940ed:;
			{
				return jule::MIN_I64;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1bb594175:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1bb5941ec:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1bb591e75:;
			{
				return 0LL;;
			}
		}
		_match_end_1bb592140:;
	};
}



inline jule::F64 _1aba841d0_Max(jule::Str _8312_k) {
	_8312_k=_1ab4bb8c6_RealKindOf(_8312_k);
	{
		auto &_match_expr{ _8312_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1bb594a27:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1bb595b27:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1bb595b8d:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1bb595c04:;
			{
				return jule::MAX_I64;;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1bb595c7b:;
			{
				return 255LL;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1bb595ee0:;
			{
				return 65535LL;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1bb596056:;
			{
				return 4294967295LL;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1bb5960cd:;
			{
				return jule::MAX_U64;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1bb596155:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1bb596364:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1bb59574d:;
			{
				return 0LL;;
			}
		}
		_match_end_1bb5956e8:;
	};
}



inline jule::Bool _1aba844dd_IsI8Compatible(jule::Str _623_k) {
	return (_623_k == jule::Str("i8", 2));;
}



inline jule::Bool _1aba84620_IsI16Compatible(jule::Str _1124_k) {
	return ((_1124_k == jule::Str("i8", 2)) || (_1124_k == jule::Str("i16", 3)));;
}



inline jule::Bool _1aba84752_IsI32Compatible(jule::Str _1724_k) {
	return ((((_1724_k == jule::Str("i8", 2)) || (_1724_k == jule::Str("i16", 3))) || (_1724_k == jule::Str("i32", 3))) || (_1724_k == jule::Str("u8", 2)));;
}



inline jule::Bool _1aba84884_IsI64Compatible(jule::Str _2524_k) {
	return ((((_2524_k == jule::Str("i8", 2)) || (_2524_k == jule::Str("i16", 3))) || (_2524_k == jule::Str("i32", 3))) || (_2524_k == jule::Str("i64", 3)));;
}



inline jule::Bool _1aba849b6_IsU8Compatible(jule::Str _3323_k) {
	return (_3323_k == jule::Str("u8", 2));;
}



inline jule::Bool _1aba84ae8_IsU16Compatible(jule::Str _3824_k) {
	return ((_3824_k == jule::Str("u8", 2)) || (_3824_k == jule::Str("u16", 3)));;
}



inline jule::Bool _1aba84c2a_IsU32Compatible(jule::Str _4324_k) {
	return (((_4324_k == jule::Str("u8", 2)) || (_4324_k == jule::Str("u16", 3))) || (_4324_k == jule::Str("u32", 3)));;
}



inline jule::Bool _1aba84d5c_IsU64Compatible(jule::Str _5024_k) {
	return ((((_5024_k == jule::Str("u8", 2)) || (_5024_k == jule::Str("u16", 3))) || (_5024_k == jule::Str("u32", 3))) || (_5024_k == jule::Str("u64", 3)));;
}



inline jule::Bool _1aba84e8e_IsF32Compatible(jule::Str _5824_k) {
	return (_5824_k == jule::Str("f32", 3));;
}



inline jule::Bool _1aba850c1_IsF64Compatible(jule::Str _6324_k) {
	return (_6324_k == jule::Str("f64", 3));;
}



inline jule::Bool _1aba85203_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1bb59e0a3:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1bb59e889:;
			{
				return (_7036_k2 == jule::Str("int", 3));;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1bb59e900:;
			{
				return (_7036_k2 == jule::Str("uintptr", 7));;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1bb59e37d:;
			{
				return (_7036_k2 == jule::Str("uint", 4));;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1bb59e3e4:;
			{
				return _1aba844dd_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1bb59e45a:;
			{
				return _1aba84620_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1bb59e4c1:;
			{
				return _1aba84752_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1bb59e999:;
			{
				return _1aba84884_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1bb59ea10:;
			{
				return _1aba849b6_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1bb59ea76:;
			{
				return _1aba84ae8_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1bb59eadc:;
			{
				return _1aba84c2a_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1bb59eb53:;
			{
				return _1aba84d5c_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1bb59ebb9:;
			{
				return _1aba84e8e_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1bb59ec41:;
			{
				return _1aba850c1_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1bb59ecb8:;
			{
				return (_7036_k2 == jule::Str("bool", 4));;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1bb59ed40:;
			{
				return (_7036_k2 == jule::Str("str", 3));;
			}
		}
		else {
			_case_begin_1bb59e26d:;
			{
				return false;;
			}
		}
		_match_end_1bb59e13b:;
	};
}



inline jule::Bool _1aba85335_IsI16Greater(jule::Str _11021_k) {
	return (_11021_k == jule::Str("i8", 2));;
}



inline jule::Bool _1aba85467_IsI32Greater(jule::Str _11521_k) {
	return ((_11521_k == jule::Str("i8", 2)) || (_11521_k == jule::Str("i16", 3)));;
}



inline jule::Bool _1aba85599_IsI64Greater(jule::Str _12021_k) {
	return (((_12021_k == jule::Str("i8", 2)) || (_12021_k == jule::Str("i16", 3))) || (_12021_k == jule::Str("i32", 3)));;
}



inline jule::Bool _1aba856cb_IsU16Greater(jule::Str _12721_k) {
	return (_12721_k == jule::Str("u8", 2));;
}



inline jule::Bool _1aba85a3e_IsU32Greater(jule::Str _13221_k) {
	return ((_13221_k == jule::Str("u8", 2)) || (_13221_k == jule::Str("u16", 3)));;
}



inline jule::Bool _1aba85b71_IsU64Greater(jule::Str _13821_k) {
	return (((_13821_k == jule::Str("u8", 2)) || (_13821_k == jule::Str("u16", 3))) || (_13821_k == jule::Str("u32", 3)));;
}



inline jule::Bool _1aba85ca3_IsF32Greater(jule::Str _14517_k) {
	return (_14517_k != jule::Str("f64", 3));;
}



inline jule::Bool _1aba85dd5_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1aba86017_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1bb5a0406:;
			{
				return _1aba86457_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1bb5a795d:;
			{
				return _1aba86589_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1bb5a79c4:;
			{
				return _1aba86589_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1bb5a7a3a:;
			{
				return _1aba85335_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1bb5a7683:;
			{
				return _1aba85467_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1bb5a76e9:;
			{
				return _1aba85599_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1bb5a7760:;
			{
				return _1aba856cb_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1bb5a77c6:;
			{
				return _1aba85a3e_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1bb5a7c6b:;
			{
				return _1aba85b71_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1bb5a7cd2:;
			{
				return _1aba85ca3_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1bb5a7d48:;
			{
				return _1aba85dd5_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1bb5a7dc0:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb5a751d:;
			{
				return false;;
			}
		}
		_match_end_1bb5a7474:;
	};
}



inline jule::Bool _1aba86457_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == jule::Str("i8", 2)) || (_2717_k == jule::Str("i16", 3))) || (_2717_k == jule::Str("i32", 3))) || (_2717_k == jule::Str("i64", 3))) || (_2717_k == jule::Str("int", 3)));;
}



inline jule::Bool _1aba86589_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == jule::Str("u8", 2)) || (_3619_k == jule::Str("u16", 3))) || (_3619_k == jule::Str("u32", 3))) || (_3619_k == jule::Str("u64", 3))) || (_3619_k == jule::Str("uint", 4))) || (_3619_k == jule::Str("uintptr", 7)));;
}



inline jule::Bool _1aba866bb_IsInt(jule::Str _4610_k) {
	return (_1aba86457_IsSigInt(_4610_k) || _1aba86589_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1aba867ed_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == jule::Str("f32", 3)) || (_5112_k == jule::Str("f64", 3)));;
}



inline jule::Bool _1aba86930_IsNum(jule::Str _5610_k) {
	return (_1aba866bb_IsInt(_5610_k) || _1aba867ed_IsFloat(_5610_k));;
}



inline jule::Bool _1aba86a62_IsSigNum(jule::Str _6113_k) {
	return (_1aba86457_IsSigInt(_6113_k) || _1aba867ed_IsFloat(_6113_k));;
}



inline void _1aba8d32c_lshiftUnsig(_1aba86b94_Const& _59021_c, _1aba86b94_Const& _59032_x) {
	jule::U64 _5919_l = _1aba880c4_AsU64(&_59021_c);;
	jule::U64 _5929_r = _1aba880c4_AsU64(&_59032_x);;
	_1aba8846a_SetU64(&_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _1aba8d629_rshiftUnsig(_1aba86b94_Const& _59621_c, _1aba86b94_Const& _59632_x) {
	jule::U64 _5979_l = _1aba880c4_AsU64(&_59621_c);;
	jule::U64 _5989_r = _1aba880c4_AsU64(&_59632_x);;
	_1aba8846a_SetU64(&_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _1abc8c53c_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _1abc8c6b3_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1abca509e_runeFromEsqSeq(_1811_bytes,_2517_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a78cd88b_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _1abca46ec_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _1abca49e9_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1abca53e0_strEsqSeq(_4210_bytes,_4813_i));
			} else {
				jule::I32 _5418_r = 0;;
				jule::I64 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a78cd88b_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_1a78cec00_AppendRune(_4713_s,_5418_r);
			};
		}
	_iter_next_1bb624524:;
	}
	_iter_end_1bb624524:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1abca4c91_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1bb6289e0:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1bb628a56:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1bb628abc:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1bb628b33:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1bb628baa:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1bb628c32:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1bb628ca9:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1bb628d31:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1bb628da8:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1bb628e30:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1bb6288be:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1abca509e_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64& _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1abca4c91_tryBtoaCommonEsq(_9219_bytes.slice(_9239_i));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	(_9239_i)++;
	if (_9313_ok) {
		(_9239_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[_9239_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1bb62eaa1:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1ab887b1b_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				_9239_i+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1bb62e441:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1ab887b1b_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				_9239_i+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1bb62e4a7:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice((_9239_i + 1LL),(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1ab887b1b_ParseUint(static_cast<jule::Str>(_11313_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1bb62cc47:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice(_9239_i,(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1ab887b1b_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1bb62d132:;
	};
}



inline jule::Slice<jule::U8> _1abca53e0_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64& _12434_i) {
	jule::I32 _1259_r = _1abca509e_runeFromEsqSeq(_12414_bytes,_12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));;
}



inline jule::I64 _1abd9b6a1_findFormatPrefix(jule::Slice<jule::U8>& _1022_bytes, jule::I64& _1038_start) {
	jule::I64 _1113_i = _1038_start;;
	while ((_1113_i < _1022_bytes.len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I64 _1317_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a78cd88b_DecodeRune(_1022_bytes.slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_1bb663ec0:;
	}
	_iter_end_1bb663ec0:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1abda7107_getFormatRange(jule::I64& _2724_i, jule::Slice<jule::U8>& _2737_bytes) {
	jule::I64 _289_start = _2724_i;;
	jule::I64 _2913_braces = 0LL;;
	while ((_2724_i < _2737_bytes.len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I64 _3117_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a78cd88b_DecodeRune(_2737_bytes.slice(_2724_i));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			_2724_i+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_1bb666a72:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1bb666ad8:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return _2737_bytes.slice(_289_start,_2724_i);;
						};
					}
				}
				_match_end_1bb666764:;
			};
		}
	_iter_next_1bb665d3a:;
	}
	_iter_end_1bb665d3a:;;
	return nullptr;;
}



inline void _1abda73b0_FmtByDefault(jule::Str& _4722_buf, jule::Any& _4733_arg) {
	if ((_4733_arg == nullptr)) {
		_4722_buf+=jule::Str("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ _4733_arg };
		
		if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1bb667a62:;
			{
				_4722_buf+=_1ab5444dc_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>(_4733_arg.cast<jule::F32>(&__jule_any_type136))),'g',-1LL,32LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bb6687ee:;
			{
				_4722_buf+=_1ab5444dc_FmtFloat(static_cast<jule::F64>(_4733_arg.cast<jule::F64>(&__jule_any_type8)),'g',-1LL,64LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1bb6689a8:;
			{
				_4722_buf+=_1aba81353_FmtInt(static_cast<jule::I64>(_4733_arg.cast<jule::I8>(&__jule_any_type137)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1bb667aea:;
			{
				_4722_buf+=_1aba81353_FmtInt(static_cast<jule::I64>(_4733_arg.cast<jule::I16>(&__jule_any_type138)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bb668425:;
			{
				_4722_buf+=_1aba81353_FmtInt(static_cast<jule::I64>(_4733_arg.cast<jule::I32>(&__jule_any_type3)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bb66848b:;
			{
				_4722_buf+=_1aba81353_FmtInt(static_cast<jule::I64>(_4733_arg.cast<jule::I64>(&__jule_any_type4)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1bb668a30:;
			{
				_4722_buf+=_1aba81221_FmtUint(static_cast<jule::U64>(_4733_arg.cast<jule::U8>(&__jule_any_type134)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1bb668a96:;
			{
				_4722_buf+=_1aba81221_FmtUint(static_cast<jule::U64>(_4733_arg.cast<jule::U16>(&__jule_any_type139)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1bb668b0c:;
			{
				_4722_buf+=_1aba81221_FmtUint(static_cast<jule::U64>(_4733_arg.cast<jule::U32>(&__jule_any_type140)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bb668b73:;
			{
				_4722_buf+=_1aba81221_FmtUint(static_cast<jule::U64>(_4733_arg.cast<jule::U64>(&__jule_any_type5)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bb668bd9:;
			{
				_4722_buf+=_4733_arg.cast<jule::Str>(&__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bb668c50:;
			{
				if (_4733_arg.cast<jule::Bool>(&__jule_any_type6)) {
					_4722_buf+=jule::Str("true", 4);
				} else {
					_4722_buf+=jule::Str("false", 5);
				};
			}
		}
		else {
			_case_begin_1bb6682c1:;
			{
				_4722_buf+=jule::to_str(_4733_arg);
			}
		}
		_match_end_1bb66705b:;
	};
}



inline void _1abda7789_applyFmtByDefault(jule::Str& _8627_buf, jule::I64& _8642_j, jule::Slice<jule::Any>& _8651_args) {
	jule::Any _879_arg = _8651_args[_8642_j];;
	(_8642_j)++;
	_1abda73b0_FmtByDefault(_8627_buf,_879_arg);
}



inline void _1abda7b85_applyFmt(jule::Slice<jule::U8>& _9418_fmt, jule::Str& _9436_buf, jule::I64& _9451_j, jule::Slice<jule::Any>& _9460_args) {
	if ((_9418_fmt.len() == 2LL)) {
		_1abda7789_applyFmtByDefault(_9436_buf,_9451_j,_9460_args);
		return;;
	};
	if ((((((_9418_fmt.len() == 4LL) && (_9418_fmt[0LL] == '{')) && (_9418_fmt[1LL] == '{')) && (_9418_fmt[2LL] == '}')) && (_9418_fmt[3LL] == '}'))) {
		_9436_buf+=jule::Str("{}", 2);
		return;;
	};
	_1a7907002_PushToStrBuffer(_9436_buf,_9418_fmt);
}



inline jule::Str _1abda7e93_Format(jule::Str& _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return _11312_fmt;;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _1a7901914_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, _11312_fmt.len());;
	jule::I64 _11913_j = 0LL;;
	jule::I64 _12013_last = 0LL;;
	jule::I64 _12113_i = _1abd9b6a1_findFormatPrefix(_11713_fmtBytes,_12013_last);;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I64>(_1abd9b6a1_findFormatPrefix(_11713_fmtBytes,_12113_i))) {
		{
			_1a7907002_PushToStrBuffer(_11813_buf,_11713_fmtBytes.slice(_12013_last,_12113_i));
			jule::Slice<jule::U8> _12417_format = _1abda7107_getFormatRange(_12113_i,_11713_fmtBytes);;
			if ((_12417_format == nullptr)) {
				goto _iter_next_1bb675399;
			};
			_1abda7b85_applyFmt(_12417_format,_11813_buf,_11913_j,_11322_args);
			if ((_11913_j >= _11322_args.len())) {
				_1a7907002_PushToStrBuffer(_11813_buf,_11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I64>(_11713_fmtBytes.len());
				goto _iter_end_1bb675399;
			};
			_12013_last=_12113_i;
		}
	_iter_next_1bb675399:;
	}
	_iter_end_1bb675399:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_1a7907002_PushToStrBuffer(_11813_buf,_11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _1abda87ac_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1abda7e93_Format(_3011_fmt,_3021_args);;
}



inline jule::Bool _1abaa3e8b_parameterUsesGenerics(jule::Ptr<_1abaa0eaa_ParamIns>& _37431_p, jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>>& _37446_generics) {
	if (_1aba9ceb8_IsSelf(_37431_p.get()._field_Decl.ptr())) {
		return false;;
	};
	return _1abd0e6e1_kindUsesGenerics(_37431_p.get()._field_Kind,_37446_generics);;
}



inline jule::Ptr<_1abcebdb5_TypeSymbol> _1abaa64aa_buildType(jule::Ptr<_1ab06d9b7_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1abcebdb5_TypeSymbol>(_1abcebdb5_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1abcbcacd_Value> _1abaa6796_buildExpr(jule::Ptr<_1ab072ed8_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1abcbcacd_Value>(_1abcbcacd_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1abce6ce4_TypeAlias> _1abaa6a3d_buildTypeAlias(jule::Ptr<_1ab084c86_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1abce6ce4_TypeAlias>(_1abce6ce4_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1abaa64aa_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_1ab05e216_Field> _1abaa6d5c_buildField(jule::Ptr<_1ab08842c_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1ab05e216_Field>(_1ab05e216_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1abaa64aa_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_1ab05e216_Field>> _1abaa7104_buildFields(jule::Slice<jule::Ptr<_1ab08842c_FieldDecl>>& _13421_decls) {
	jule::Slice<jule::Ptr<_1ab05e216_Field>> _13513_fields = jule::Slice<jule::Ptr<_1ab05e216_Field>>::alloc(0LL, _13421_decls.len());;
	{
		auto &expr = _13421_decls;
		auto it = expr.begin();
		_iter_begin_1bb8c8069:;
		if (it != expr.end()) {
			jule::Ptr<_1ab08842c_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1abaa6d5c_buildField(_13617_decl));;
			}
			_iter_next_1bb8c8069:;
			++it;
			goto _iter_begin_1bb8c8069;
		}
		_iter_end_1bb8c8069:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_1ab08a1a9_Struct> _1abaa739b_buildStruct(jule::Ptr<_1ab088bd0_StructDecl> _14220_decl) {
	return jule::new_ptr<_1ab08a1a9_Struct>(_1ab08a1a9_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1abaa7104_buildFields(_14220_decl.get()._field_Fields), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_1aba9c88b_Param> _1abaa7643_buildParam(jule::Ptr<_1ab07e126_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1aba9c88b_Param>(_1aba9c88b_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1abaa64aa_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1aba9c88b_Param>> _1abaa79b7_buildParams(jule::Slice<jule::Ptr<_1ab07e126_ParamDecl>>& _16521_decls) {
	jule::Slice<jule::Ptr<_1aba9c88b_Param>> _16613_params = jule::Slice<jule::Ptr<_1aba9c88b_Param>>::alloc(0LL, _16521_decls.len());;
	{
		auto &expr = _16521_decls;
		auto it = expr.begin();
		_iter_begin_1bb8cac5e:;
		if (it != expr.end()) {
			jule::Ptr<_1ab07e126_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1abaa7643_buildParam(_16717_decl));;
			}
			_iter_next_1bb8cac5e:;
			++it;
			goto _iter_begin_1bb8cac5e;
		}
		_iter_end_1bb8cac5e:;
	};
	return _16613_params;;
}



inline jule::Ptr<_1aba9c1b5_RetType> _1abaa7c5e_buildRetType(jule::Ptr<_1ab071aca_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1aba9c1b5_RetType>(_1aba9c1b5_RetType{._field_Kind=_1abaa64aa_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_1aba9e1c8_Fn> _1abaa8006_buildFn(jule::Ptr<_1ab080446_FnDecl> _18316_decl) {
	return jule::new_ptr<_1aba9e1c8_Fn>(_1aba9e1c8_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1abaa7c5e_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1abaa79b7_buildParams(_18316_decl.get()._field_Params), });;
}



inline jule::Slice<jule::Ptr<_1aba9e1c8_Fn>> _1abaa829d_buildMethods(jule::Slice<jule::Ptr<_1ab080446_FnDecl>>& _20122_decls) {
	jule::Slice<jule::Ptr<_1aba9e1c8_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1aba9e1c8_Fn>>::alloc(0LL, _20122_decls.len());;
	{
		auto &expr = _20122_decls;
		auto it = expr.begin();
		_iter_begin_1bb8ce658:;
		if (it != expr.end()) {
			jule::Ptr<_1ab080446_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1abaa8006_buildFn(_20317_decl));;
			}
			_iter_next_1bb8ce658:;
			++it;
			goto _iter_begin_1bb8ce658;
		}
		_iter_end_1bb8ce658:;
	};
	return _20213_methods;;
}



inline jule::Ptr<_1abab10ca_Trait> _1abaa8545_buildTrait(jule::Ptr<_1ab0892da_TraitDecl> _20919_decl) {
	return jule::new_ptr<_1abab10ca_Trait>(_1abab10ca_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_1abaa829d_buildMethods(_20919_decl.get()._field_Methods), });;
}



inline jule::Ptr<_1abab272a_EnumItem> _1abaa87dc_buildEnumItem(jule::Ptr<_1ab0865e5_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_1abab272a_EnumItem>(_1abab272a_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_1abaa6796_buildExpr(_21822_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1abab272a_EnumItem>> _1abaa8a84_buildEnumItems(jule::Slice<jule::Ptr<_1ab0865e5_EnumItemDecl>>& _22624_decls) {
	jule::Slice<jule::Ptr<_1abab272a_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_1abab272a_EnumItem>>::alloc(0LL, _22624_decls.len());;
	{
		auto &expr = _22624_decls;
		auto it = expr.begin();
		_iter_begin_1bb8d1a78:;
		if (it != expr.end()) {
			jule::Ptr<_1ab0865e5_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_1abaa87dc_buildEnumItem(_22817_decl));;
			}
			_iter_next_1bb8d1a78:;
			++it;
			goto _iter_begin_1bb8d1a78;
		}
		_iter_end_1bb8d1a78:;
	};
	return _22713_items;;
}



inline jule::Ptr<_1abab3220_Enum> _1abaa8d2b_buildEnum(jule::Ptr<_1ab08711d_EnumDecl> _23418_decl) {
	return jule::new_ptr<_1abab3220_Enum>(_1abab3220_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_1abaa64aa_buildType(_23418_decl.get()._field_Kind), ._field_Items=_1abaa8a84_buildEnumItems(_23418_decl.get()._field_Items)});;
}



inline jule::Ptr<_1abab4254_TypeEnumItem> _1abaa927c_buildTypeEnumItem(jule::Ptr<_1ab087b24_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_1abab4254_TypeEnumItem>(_1abab4254_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_1abaa64aa_buildType(_24426_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1abab4254_TypeEnumItem>> _1abaa9524_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ab087b24_TypeEnumItemDecl>>& _25228_decls) {
	jule::Slice<jule::Ptr<_1abab4254_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_1abab4254_TypeEnumItem>>::alloc(0LL, _25228_decls.len());;
	{
		auto &expr = _25228_decls;
		auto it = expr.begin();
		_iter_begin_1bb8d422e:;
		if (it != expr.end()) {
			jule::Ptr<_1ab087b24_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_1abaa927c_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_1bb8d422e:;
			++it;
			goto _iter_begin_1bb8d422e;
		}
		_iter_end_1bb8d422e:;
	};
	return _25313_items;;
}



inline jule::Ptr<_1abab481a_TypeEnum> _1abaa97bb_buildTypeEnum(jule::Ptr<_1ab08822e_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_1abab481a_TypeEnum>(_1abab481a_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_1abaa9524_buildTypeEnumItems(_26022_decl.get()._field_Items)});;
}



inline jule::Ptr<_1abc73ee6_Var> _1abaa9a63_buildVar(jule::Ptr<_1ab081425_VarDecl> _26917_decl) {
	return jule::new_ptr<_1abc73ee6_Var>(_1abc73ee6_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_1abaa64aa_buildType(_26917_decl.get()._field_Kind), ._field_Value=_1abaa6796_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__1abaa507a_new(), ._field_Directives=_26917_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1abc73ee6_Var>> _1abaa9d0a_buildVars(jule::Slice<jule::Ptr<_1ab081425_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_1abc73ee6_Var>> _28713_vars = jule::Slice<jule::Ptr<_1abc73ee6_Var>>::alloc(0LL, _28618_decls.len());;
	{
		auto &expr = _28618_decls;
		auto it = expr.begin();
		_iter_begin_1bb8d71aa:;
		if (it != expr.end()) {
			jule::Ptr<_1ab081425_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_1abaa9a63_buildVar(_28817_decl));;
			}
			_iter_next_1bb8d71aa:;
			++it;
			goto _iter_begin_1bb8d71aa;
		}
		_iter_end_1bb8d71aa:;
	};
	return _28713_vars;;
}



inline jule::Ptr<_1abab8c81_Impl> _1abaaa0a2_buildImpl(jule::Ptr<_1ab0898e5_Impl> _29418_decl) {
	return jule::new_ptr<_1abab8c81_Impl>(_1abab8c81_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_1abaa829d_buildMethods(_29418_decl.get()._field_Methods), ._field_Statics=_1abaa9d0a_buildVars(_29418_decl.get()._field_Statics)});;
}



inline jule::Bool _1abab8126_matchConstraint(jule::Str& _14221_c, jule::Ptr<_1abce79d7_TypeKind>& _14234_g) {
	{
		auto &_match_expr{ _14221_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1bb9401be:;
			{
				jule::Ptr<_1abcec734_Prim> _14513_prim = _1abce9d6e_Prim(_14234_g.ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _1aba86a62_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1bb93eb5d:;
			{
				jule::Ptr<_1abcec734_Prim> _15113_prim = _1abce9d6e_Prim(_14234_g.ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _1aba86589_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1bb93ee27:;
			{
				jule::Ptr<_1abcec734_Prim> _15713_prim = _1abce9d6e_Prim(_14234_g.ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _1aba867ed_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1bb93ee9e:;
			{
				jule::Ptr<_1abcec734_Prim> _16313_prim = _1abce9d6e_Prim(_14234_g.ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _1aba86930_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1bb940026:;
			{
				return _1abce9159_Mutable(_14234_g.ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1bb93ebe6:;
			{
				return (!(_1abce9159_Mutable(_14234_g.ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1bb93ec5c:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1bb93ecd4:;
			{
				jule::Ptr<_1abcec734_Prim> _17513_prim = _1abce9d6e_Prim(_14234_g.ptr());;
				if ((_17513_prim != nullptr)) {
					return (_1aba86930_IsNum(_17513_prim.get()._field_Kind) || _1abd00968_IsStr(_17513_prim.ptr()));;
				};
				if ((_1abcea347_Ptr(_14234_g.ptr()) != nullptr)) {
					return true;;
				};
				jule::Ptr<_1ab08a583_StructIns> _18213_s = _1abceb2c1_Struct(_14234_g.ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));;
				};
				jule::Ptr<_1abab3220_Enum> _18913_enm = _1abcea5ab_Enum(_14234_g.ptr());;
				if ((_18913_enm != nullptr)) {
					return _1aba86930_IsNum(_1abce7dd3_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));;
				};
				return false;;
			}
		}
		else {
			_case_begin_1bb93e07a:;
			{
				return false;;
			}
		}
		_match_end_1bb93ded1:;
	};
}



inline jule::Bool _1abab8412_isBuiltinConstraint(jule::Str& _19925_ident) {
	{
		auto &expr = _1abab6586_builtinConstraints;
		auto it = expr.begin();
		_iter_begin_1bb946acc:;
		if (it != expr.end()) {
			jule::Str &_20012_bc = *it;
			{
				if ((_19925_ident == _20012_bc)) {
					return true;;
				};
			}
			_iter_next_1bb946acc:;
			++it;
			goto _iter_begin_1bb946acc;
		}
		_iter_end_1bb946acc:;
	};
	return false;;
}



inline jule::Ptr<_1abac584d_scopeChecker> _1ababad1b_newScopeCheckerBase(jule::Ptr<_1abc55eea_Sema>& _5829_s, jule::Ptr<_1abaa1d79_FnIns> _5843_owner) {
	return jule::new_ptr<_1abac584d_scopeChecker>(_1abac584d_scopeChecker{._field_s=_5829_s, ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1abcb6c2b_SymbolTable>(), });;
}



inline jule::Ptr<_1abac584d_scopeChecker> _1ababb1a1_newScopeChecker(jule::Ptr<_1abc55eea_Sema>& _6625_s, jule::Ptr<_1abaa1d79_FnIns> _6639_owner) {
	jule::Ptr<_1abac584d_scopeChecker> _6713_base = _1ababad1b_newScopeCheckerBase(_6625_s,_6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1abac45b6_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1abac4a39_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_1abac45b6_scopeLabel> _1ababb4e2_findLabelParent(jule::Str _7620_ident, jule::Ptr<_1abac584d_scopeChecker> _7636_scope) {
	jule::Ptr<_1abac45b6_scopeLabel> _7713_label = _1abac9324_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_1abac9324_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_1bb95d9e5:;
	}
	_iter_end_1bb95d9e5:;;
	return _7713_label;;
}



inline jule::Bool _1ababb877_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1ababdcdb_Scope>& _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bb9605c9:;
			{
				jule::Ptr<_1aba92c5a_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_1aba92c5a_FnCallExprModel>(&__jule_any_type36);;
				if ((_9313_fcem.get()._field_Except == _9034_sc)) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bb960640:;
			{
				jule::Ptr<_1abcbba55_Data> _9813_d = _9021_Model.cast_ptr<_1abcbba55_Data>(&__jule_any_type25);;
				return _1ababb877_modelIsGotoScope(_9813_d.get()._field_Model,_9034_sc);;
			}
		}
		_match_end_1bb9603ed:;
	};
	return false;;
}



inline jule::Bool _1ababbbb8_stmtIsGotoScope(jule::Any& _10421_stmt, jule::Ptr<_1ababdcdb_Scope>& _10434_sc) {
	{
		auto &_match_expr{ _10421_stmt };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bb962a3d:;
			{
				return (_10421_stmt.cast_ptr<_1ababdcdb_Scope>(&__jule_any_type23) == _10434_sc);;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bb9627c9:;
			{
				return (_10421_stmt.cast_ptr<_1ababeb33_InfIter>(&__jule_any_type38).get()._field_Scope == _10434_sc);;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bb962840:;
			{
				jule::Ptr<_1abac098b_RangeIter> _11113_it = _10421_stmt.cast_ptr<_1abac098b_RangeIter>(&__jule_any_type42);;
				return ((_11113_it.get()._field_Scope == _10434_sc) || _1ababb877_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model,_10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bb9628a6:;
			{
				jule::Ptr<_1abac00a6_WhileIter> _11413_it = _10421_stmt.cast_ptr<_1abac00a6_WhileIter>(&__jule_any_type40);;
				return (((_11413_it.get()._field_Scope == _10434_sc) || _1ababb877_modelIsGotoScope(_11413_it.get()._field_Expr,_10434_sc)) || _1ababb877_modelIsGotoScope(_11413_it.get()._field_Next,_10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1bb962521:;
			{
				jule::Ptr<_1abac2a37_Match> _11913_m = _10421_stmt.cast_ptr<_1abac2a37_Match>(&__jule_any_type50);;
				{
					auto &expr = _11913_m.get()._field_Cases;
					auto it = expr.begin();
					_iter_begin_1bb965e70:;
					if (it != expr.end()) {
						jule::Ptr<_1abac3582_Case> &_12016_c = *it;
						{
							if ((_12016_c.get()._field_Scope == _10434_sc)) {
								return true;;
							};
							{
								auto &expr = _12016_c.get()._field_Exprs;
								auto it = expr.begin();
								_iter_begin_1bb966da5:;
								if (it != expr.end()) {
									jule::Ptr<_1abcbba55_Data> &_12420_expr = *it;
									{
										if (_1ababb877_modelIsGotoScope(_12420_expr.get()._field_Model,_10434_sc)) {
											return true;;
										};
									}
									_iter_next_1bb966da5:;
									++it;
									goto _iter_begin_1bb966da5;
								}
								_iter_end_1bb966da5:;
							};
						}
						_iter_next_1bb965e70:;
						++it;
						goto _iter_begin_1bb965e70;
					}
					_iter_end_1bb965e70:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1bb962587:;
			{
				jule::Ptr<_1ababe847_Conditional> _13213_c = _10421_stmt.cast_ptr<_1ababe847_Conditional>(&__jule_any_type37);;
				{
					auto &expr = _13213_c.get()._field_Elifs;
					auto it = expr.begin();
					_iter_begin_1bb9683c3:;
					if (it != expr.end()) {
						jule::Ptr<_1ababe1d7_If> &_13316_elif = *it;
						{
							if (((_13316_elif.get()._field_Scope == _10434_sc) || _1ababb877_modelIsGotoScope(_13316_elif.get()._field_Expr,_10434_sc))) {
								return true;;
							};
						}
						_iter_next_1bb9683c3:;
						++it;
						goto _iter_begin_1bb9683c3;
					}
					_iter_end_1bb9683c3:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bb96260e:;
			{
				jule::Ptr<_1abcbba55_Data> _14013_d = _10421_stmt.cast_ptr<_1abcbba55_Data>(&__jule_any_type25);;
				return _1ababb877_modelIsGotoScope(_14013_d.get()._field_Model,_10434_sc);;
			}
		}
		else {
			_case_begin_1bb9609b4:;
			{
				return false;;
			}
		}
		_match_end_1bb96094d:;
	};
}



inline jule::I64 _1ababc009_countMatchType(jule::Ptr<_1abac2a37_Match>& _14720_m, jule::Ptr<_1abce79d7_TypeKind>& _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _1abce7dd3_Str(_14732_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14720_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1bb96b3a4:;
		if (it != expr.end()) {
			jule::Ptr<_1abac3582_Case> &_15112_c = *it;
			{
				if ((_15112_c == nullptr)) {
					goto _iter_next_1bb96b3a4;
				};
				{
					auto &expr = _15112_c.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1bb96bcde:;
					if (it != expr.end()) {
						jule::Ptr<_1abcbba55_Data> &_15616_expr = *it;
						{
							if ((_15616_expr == nullptr)) {
								goto _iter_end_1bb96b3a4;
							};
							if ((_1499_kind == _1abce7dd3_Str(_15616_expr.get()._field_Model.cast_ptr<_1abce79d7_TypeKind>(&__jule_any_type92).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1bb96bcde:;
						++it;
						goto _iter_begin_1bb96bcde;
					}
					_iter_end_1bb96bcde:;
				};
			}
			_iter_next_1bb96b3a4:;
			++it;
			goto _iter_begin_1bb96b3a4;
		}
		_iter_end_1bb96b3a4:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_1abcbba55_Data>> _1ababc2a1_getDatasFromTupleData(jule::Ptr<_1abcbba55_Data>& _17131_d) {
	if ((_1abceba0d_Tup(_17131_d.get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17131_d.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type90) {
				_case_begin_1bb970d59:;
				{
					return _17131_d.get()._field_Model.cast_ptr<_1aba96a50_TupleExprModel>(&__jule_any_type90).get()._field_Datas;;
				}
			}
			else {
				_case_begin_1bb96d94a:;
				{
					jule::Ptr<_1abd024a3_Tuple> _17721_t = _1abceba0d_Tup(_17131_d.get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1abcbba55_Data>> _17821_r = jule::Slice<jule::Ptr<_1abcbba55_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto &expr = _17721_t.get()._field_Types;
						auto it = expr.begin();
						_iter_begin_1bb96ec9d:;
						if (it != expr.end()) {
							jule::Ptr<_1abce79d7_TypeKind> _17925_kind = *it;
							{
								_17821_r = jule::alloc_for_append(_17821_r,1);_17821_r.__push(jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=_17925_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1bb96ec9d:;
							++it;
							goto _iter_begin_1bb96ec9d;
						}
						_iter_end_1bb96ec9d:;
					};
					return _17821_r;;
				}
			}
			_match_end_1bb96d8b2:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1abcbba55_Data>>::make({_17131_d});;
	};
}



inline jule::Bool _1ababcadc_checkMut(jule::Ptr<_1abc55eea_Sema>& _20618_s, jule::Ptr<_1abcbba55_Data>& _20629_left, jule::Ptr<_1abcbba55_Data> _20646_right, jule::Ptr<_1a97237bc_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!(_20629_left.get()._field_Mutable))) {
			_case_begin_1bb974027:;
			{
				_1abc58bac_pushErr(_20618_s.ptr(), _20660_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _1abce9159_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1bb973884:;
			{
				if (((_20660_op.get()._field_Kind != jule::Str("=", 1)) && (_1abceb2c1_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1abc58bac_pushErr(_20618_s.ptr(), _20660_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type7)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bb97381d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bb973774:;
	};
}



inline jule::Bool _1ababd071_checkAssign(jule::Ptr<_1abc55eea_Sema>& _22521_s, jule::Ptr<_1abcbba55_Data>& _22536_left, jule::Ptr<_1abcbba55_Data> _22553_right, jule::Ptr<_1a97237bc_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abaa1d79_FnIns> _2269_f = _1abceb05c_Fn(_22536_left.get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_1abc58bac_pushErr(_22521_s.ptr(), _22567_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1abcbc418_IsConst(_22536_left.ptr())) {
			_case_begin_1bb978b64:;
			{
				_1abc58bac_pushErr(_22521_s.ptr(), _22567_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1abc58ecb_pushSugggestion(_22521_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_22536_left.get()._field_Lvalue))) {
			_case_begin_1bb9784d2:;
			{
				_1abc58bac_pushErr(_22521_s.ptr(), _22567_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1ababcadc_checkMut(_22521_s,_22536_left,_22553_right,_22567_op)))) {
			_case_begin_1bb978548:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bb97846b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bb97834a:;
	};
}



inline jule::Bool _1ababd318_isValidAstStForNextSt(jule::Any& _24731_n) {
	{
		auto &_match_expr{ _24731_n };
		
		if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1bb9785e2:;
			{
				return (!(_24731_n.cast_ptr<_1ab07c454_AssignSt>(&__jule_any_type61).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1bb97a8d0:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb97a76a:;
			{
				return false;;
			}
		}
		_match_end_1bb97a704:;
	};
}



inline jule::Bool _1ababd5b0_isValidStForNextSt(jule::Any& _25824_st) {
	{
		auto &_match_expr{ _25824_st };
		
		if (_match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type46 || _match_expr.type == &__jule_any_type48) {
			_case_begin_1bb97b8d1:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bb97b947:;
			{
				{
					auto &_match_expr{ _25824_st.cast_ptr<_1abcbba55_Data>(&__jule_any_type25).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1bb97c22d:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1bb97c5d5:;
						{
							return false;;
						}
					}
					_match_end_1bb97c33d:;
				};
			}
		}
		else {
			_case_begin_1bb97b381:;
			{
				return false;;
			}
		}
		_match_end_1bb97b32b:;
	};
}



inline jule::Bool _1ababd857_stmtIsDef(jule::Any& _27615_st) {
	{
		auto &_match_expr{ _27615_st };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bb97cc34:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb97c7e4:;
			{
				return false;;
			}
		}
		_match_end_1bb97c706:;
	};
}



inline jule::Ptr<_1abc73ee6_Var> _1abad9c08_findVarInPackage(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>& _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto &expr = _4626_files;
		auto it = expr.begin();
		_iter_begin_1bbacaa1e:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1abc73ee6_Var> _4817_v = _1abcb790d_FindVar(_4717_f.ptr(), _4649_ident,_4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1bbacaa1e:;
			++it;
			goto _iter_begin_1bbacaa1e;
		}
		_iter_end_1bbacaa1e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abce6ce4_TypeAlias> _1abada137_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>& _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto &expr = _5832_files;
		auto it = expr.begin();
		_iter_begin_1bbacbed7:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1abce6ce4_TypeAlias> _6017_ta = _1abcb7cb5_FindTypeAlias(_5917_f.ptr(), _5855_ident,_5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1bbacbed7:;
			++it;
			goto _iter_begin_1bbacbed7;
		}
		_iter_end_1bbacbed7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab08a1a9_Struct> _1abc4add0_findStructInPackage(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>& _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto &expr = _7029_files;
		auto it = expr.begin();
		_iter_begin_1bbacd48e:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1ab08a1a9_Struct> _7217_s = _1abcb816c_FindStruct(_7117_f.ptr(), _7052_ident,_7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1bbacd48e:;
			++it;
			goto _iter_begin_1bbacd48e;
		}
		_iter_end_1bbacd48e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aba9e1c8_Fn> _1abc4b342_findFnInPackage(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>& _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto &expr = _8225_files;
		auto it = expr.begin();
		_iter_begin_1bbace946:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1aba9e1c8_Fn> _8417_f = _1abcb8524_FindFn(_8317_file.ptr(), _8248_ident,_8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1bbace946:;
			++it;
			goto _iter_begin_1bbace946;
		}
		_iter_end_1bbace946:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abab10ca_Trait> _1abc4b650_findTraitInPackage(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>& _9428_files, jule::Str _9451_ident) {
	{
		auto &expr = _9428_files;
		auto it = expr.begin();
		_iter_begin_1bbaceec9:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1abab10ca_Trait> _9617_t = _1abcb8832_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1bbaceec9:;
			++it;
			goto _iter_begin_1bbaceec9;
		}
		_iter_end_1bbaceec9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abab3220_Enum> _1abc4b991_findEnumInPackage(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>& _10627_files, jule::Str _10650_ident) {
	{
		auto &expr = _10627_files;
		auto it = expr.begin();
		_iter_begin_1bbad1edc:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1abab3220_Enum> _10817_e = _1abcb8b40_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1bbad1edc:;
			++it;
			goto _iter_begin_1bbad1edc;
		}
		_iter_end_1bbad1edc:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abab481a_TypeEnum> _1abc4bcd2_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>& _11831_files, jule::Str _11854_ident) {
	{
		auto &expr = _11831_files;
		auto it = expr.begin();
		_iter_begin_1bbad32a7:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1abab481a_TypeEnum> _12017_e = _1abcb8e4d_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1bbad32a7:;
			++it;
			goto _iter_begin_1bbad32a7;
		}
		_iter_end_1bbad32a7:;
	};
	return nullptr;;
}



inline jule::Any _1abc4c2cc_defByIdentPackage(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>& _12927_files, jule::Str& _12951_ident, jule::Bool _12963_cppLinked) {
	{
		auto &expr = _12927_files;
		auto it = expr.begin();
		_iter_begin_1bbad4781:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _1abcb9cc8_defByIdent(_13017_file.ptr(), _12951_ident,_12963_cppLinked);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1bbad4781:;
			++it;
			goto _iter_begin_1bbad4781;
		}
		_iter_end_1bbad4781:;
	};
	return nullptr;;
}



inline jule::Bool _1abc533d2_isStdPackage(jule::Str _36117_f, jule::Str _36125_p) {
	return _1a78d463e_HasPrefix(_36117_f,_1a7917276_Join(jule::Slice<jule::Str>::make({_1a79cdccc_PathStdlib,_36125_p})));;
}



inline jule::Bool _1abc541b3_isValidModelForRef(jule::Any& _1228_m) {
	{
		auto &_match_expr{ _1228_m };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bbae574d:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bbae57b4:;
			{
				jule::Ptr<_1aba95697_StructSubIdentExprModel> _1717_model = _1228_m.cast_ptr<_1aba95697_StructSubIdentExprModel>(&__jule_any_type73);;
				return _1abc541b3_isValidModelForRef(_1717_model.get()._field_Expr.get()._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1bbae5550:;
			{
				jule::Ptr<_1aba94ce5_TraitSubIdentExprModel> _2017_model = _1228_m.cast_ptr<_1aba94ce5_TraitSubIdentExprModel>(&__jule_any_type72);;
				return _1abc541b3_isValidModelForRef(_2017_model.get()._field_Expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bbae55b6:;
			{
				jule::Ptr<_1aba91297_UnaryExprModel> _2317_unary = _1228_m.cast_ptr<_1aba91297_UnaryExprModel>(&__jule_any_type76);;
				if ((_2317_unary.get()._field_Op.get()._field_Kind != jule::Str("*", 1))) {
					return false;;
				};
				if ((_1abcea347_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1abcea0d3_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1abc541b3_isValidModelForRef(_2317_unary.get()._field_Expr.get()._field_Model);;
			}
		}
		else {
			_case_begin_1bbae4b37:;
			{
				return false;;
			}
		}
		_match_end_1bbae4ad2:;
	};
}



inline _1a7995777_Log _1abc545d1_compilerErr(jule::Ptr<_1a97237bc_Token>& _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_1a7995777_Log _4213_log = _1a7995777_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_4117_token.get()._field_Row, ._field_Column=_4117_token.get()._field_Column, ._field_Path=_4117_token.get()._field_File.get()._field_Path, ._field_Text=_1a7995bb7_Logf(_4144_fmt,_4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_1a9729d34_GetRow(_4117_token.get()._field_File.ptr(), _4117_token.get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _1abc54922_impIsLookupable(jule::Ptr<_1abc4cd9e_ImportInfo>& _5521_i, jule::Str _5537_ident) {
	if (_5521_i.get()._field_CppLinked) {
		return false;;
	};
	if ((!(_5521_i.get()._field_ImportAll))) {
		if ((_5521_i.get()._field_Selected.len() > 0LL)) {
			return _1abc50775_existIdent(_5521_i.ptr(), _5537_ident);;
		};
	};
	return _5521_i.get()._field_ImportAll;;
}



inline void _1abc54c1e_appendRetVars(jule::Slice<jule::Ptr<_1abc73ee6_Var>>& _6723_dest, jule::Ptr<_1abaa1d79_FnIns>& _6742_f) {
	if ((_1aba9e63a_IsVoid(_6742_f.get()._field_Decl.ptr()) || (_6742_f.get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1abce79d7_TypeKind>> _7213_types = _1abaa2e9b_Types(_6742_f.ptr());;
	{
		auto &expr = _6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1bbb0365c:;
		if (it != expr.end()) {
			jule::I64 _7310_i = it - expr.begin();
			jule::Ptr<_1a97237bc_Token> _7317_ident = *it;
			{
				if ((_1a9726061_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _1a9726308_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1bbb0365c;
				};
				_6723_dest = jule::alloc_for_append(_6723_dest,1);_6723_dest.__push(jule::new_ptr<_1abc73ee6_Var>(_1abc73ee6_Var{._field_Scope=_6742_f.get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1abcebdb5_TypeSymbol>(_1abcebdb5_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1abcbcacd_Value>(_1abcbcacd_Value{._field_Data=jule::new_ptr<_1abcbba55_Data>()}), ._field_RetOrder=_7310_i, }));;
			}
			_iter_next_1bbb0365c:;
			++it;
			_7310_i++;
			goto _iter_begin_1bbb0365c;
		}
		_iter_end_1bbb0365c:;
	};
	if (((_6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && (_6723_dest.len() == 1LL))) {
		_6723_dest[(_6723_dest.len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _1abc54ec7_appendParamVars(jule::Slice<jule::Ptr<_1abc73ee6_Var>>& _9725_dest, jule::Ptr<_1abaa1d79_FnIns>& _9744_f) {
	if ((_9744_f.get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9744_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1bbb07430:;
		if (it != expr.end()) {
			jule::Ptr<_1abaa0eaa_ParamIns> _10217_p = *it;
			{
				if ((_1a9726061_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _1a9726308_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1bbb07430;
				};
				jule::Ptr<_1abc73ee6_Var> _10717_v = jule::new_ptr<_1abc73ee6_Var>(_1abc73ee6_Var{._field_Scope=_9744_f.get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1abcebdb5_TypeSymbol>(), ._field_Value=jule::new_ptr<_1abcbcacd_Value>(_1abcbcacd_Value{._field_Data=jule::new_ptr<_1abcbba55_Data>()}), });;
				{
					
					if (_1aba9ceb8_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_1bbb09e16:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1abce75a8_Kind>(_9744_f.get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_1aba9d22c_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_1aba9d22c_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1abce75a8_Kind>(jule::new_ptr<_1abd00eb8_Sptr>(_1abd00eb8_Sptr{._field_Elem=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_CppIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1bbb09b4c:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1abce75a8_Kind>(jule::new_ptr<_1abd01925_Slc>(_1abd01925_Slc{._field_Elem=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_CppIdent=_10217_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_1bbb07ad4:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_1bbb09a2b:;
				};
				_9725_dest = jule::alloc_for_append(_9725_dest,1);_9725_dest.__push(_10717_v);;
			}
			_iter_next_1bbb07430:;
			++it;
			goto _iter_begin_1bbb07430;
		}
		_iter_end_1bbb07430:;
	};
}



inline void _1abc552a2_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1abce6ce4_TypeAlias>>& _15734_dest, jule::Ptr<_1abaa1d79_FnIns>& _15759_f) {
	jule::I64 _15813_size = _15759_f.get()._field_Generics.len();;
	if ((_15759_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=_15759_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15759_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1bbb103a0:;
		if (it != expr.end()) {
			jule::I64 _16710_i = it - expr.begin();
			jule::Ptr<_1abce62aa_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_1ab07acb0_GenericDecl> _16817_decl = _15759_f.get()._field_Decl.get()._field_Generics[_16710_i];;
				_15734_dest = jule::alloc_for_append(_15734_dest,1);_15734_dest.__push(jule::new_ptr<_1abce6ce4_TypeAlias>(_1abce6ce4_TypeAlias{._field_Scope=_15759_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1abcebdb5_TypeSymbol>(_1abcebdb5_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), }));;
			}
			_iter_next_1bbb103a0:;
			++it;
			_16710_i++;
			goto _iter_begin_1bbb103a0;
		}
		_iter_end_1bbb103a0:;
	};
	if ((_15759_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1ab08a583_StructIns> _18017_owner = _15759_f.get()._field_Owner;;
		{
			auto &expr = _18017_owner.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1bbb128d0:;
			if (it != expr.end()) {
				jule::I64 _18114_i = it - expr.begin();
				jule::Ptr<_1abce62aa_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_1ab07acb0_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					_15734_dest = jule::alloc_for_append(_15734_dest,1);_15734_dest.__push(jule::new_ptr<_1abce6ce4_TypeAlias>(_1abce6ce4_TypeAlias{._field_Scope=_15759_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1abcebdb5_TypeSymbol>(_1abcebdb5_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), }));;
				}
				_iter_next_1bbb128d0:;
				++it;
				_18114_i++;
				goto _iter_begin_1bbb128d0;
			}
			_iter_end_1bbb128d0:;
		};
	};
}



inline jule::Ptr<_1abcb6c2b_SymbolTable> _1abc55604_findFile(jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>& _19518_files, jule::Ptr<_1a9728b57_File>& _19542_handler) {
	{
		auto &expr = _19518_files;
		auto it = expr.begin();
		_iter_begin_1bbb131a5:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == _19542_handler)) {
					return _19617_fl;;
				};
			}
			_iter_next_1bbb131a5:;
			++it;
			goto _iter_begin_1bbb131a5;
		}
		_iter_end_1bbb131a5:;
	};
	return nullptr;;
}



inline void _1abc55a66_pushSugggestion(_1a7995777_Log* _20431_log, jule::Str _20442_fmt, jule::Slice<jule::Any> _20455_args) {
	_20431_log->_field_Suggestion=_1a7995bb7_Logf(_20442_fmt,_20455_args);
}



inline jule::Bool _1abc8c95a_traitHasReferenceReceiver(jule::Ptr<_1abab10ca_Trait>& _2631_t) {
	{
		auto &expr = _2631_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1ad98a0b2:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_Statically) {
					goto _iter_next_1ad98a0b2;
				};
				jule::Ptr<_1aba9c88b_Param> _3313_p = _2712_f.get()._field_Params[0LL];;
				if ((_1aba9d22c_IsRef(_3313_p.ptr()) && _1aba9ceb8_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1ad98a0b2:;
			++it;
			goto _iter_begin_1ad98a0b2;
		}
		_iter_end_1ad98a0b2:;
	};
	return false;;
}



inline jule::Bool _1abc8ca8c_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1abcbba55_Data>& _4132_d) {
	jule::Str _429_value = _1ab5444dc_FmtFloat(static_cast<jule::F64>(_1aba88206_AsF64(_4132_d.get()._field_Constant.ptr())),'g',-1LL,64LL);;
	return _1ab4e6615_CheckBitFloat(_429_value,static_cast<jule::I64>(_1ab4c5d53_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _1abca4466_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1abcbba55_Data>& _4630_d) {
	jule::F64 _479_min = _1aba8409d_Min(_4618_kind);;
	jule::F64 _489_max = _1aba841d0_Max(_4618_kind);;
	{
		
		if (_1aba8924b_IsF64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1ad990d54:;
			{
				jule::F64 _5113_x = _1aba87d60_ReadF64(_4630_d.get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1aba53248_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_1aba88ba7_IsU64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1ad9917c2:;
			{
				jule::F64 _5813_x = _1aba88206_AsF64(_4630_d.get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_1aba88a75_IsI64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1ad991849:;
			{
				jule::F64 _6313_x = _1aba88206_AsF64(_4630_d.get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_1ad9916a1:;
	};
	return false;;
}



inline jule::Bool _1abca4598_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1abcbba55_Data>& _6932_d) {
	jule::F64 _709_max = _1aba841d0_Max(_6920_kind);;
	if ((_6932_d.get()._field_IsRune && (_6920_kind == jule::Str("u8", 2)))) {
		return _1abc8c53c_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1aba87887_ReadI64(_6932_d.get()._field_Constant.ptr()))));;
	};
	{
		
		if (_1aba8924b_IsF64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1ad996673:;
			{
				jule::F64 _7713_x = _1aba87d60_ReadF64(_6932_d.get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1aba53248_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_1aba88ba7_IsU64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1ad9966ea:;
			{
				jule::F64 _8713_x = _1aba88206_AsF64(_6932_d.get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_1aba88a75_IsI64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1ad996772:;
			{
				jule::F64 _9213_x = _1aba88206_AsF64(_6932_d.get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_1ad995ee1:;
	};
	return false;;
}



inline jule::Bool _1abca5643_intAssignable(jule::Str _9818_kind, jule::Ptr<_1abcbba55_Data>& _9830_d) {
	{
		
		if (_1aba86457_IsSigInt(_9818_kind)) {
			_case_begin_1ad99ae80:;
			{
				return _1abca4466_sigAssignable(_9818_kind,_9830_d);;
			}
		}
		else if (_1aba86589_IsUnsigInt(_9818_kind)) {
			_case_begin_1ad99a831:;
			{
				return _1abca4598_unsigAssignable(_9818_kind,_9830_d);;
			}
		}
		else {
			_case_begin_1ad996e59:;
			{
				return false;;
			}
		}
		_match_end_1ad996d8d:;
	};
}



inline jule::Ptr<_1abce79d7_TypeKind> _1abcb5ca2_lenKind(void) {
	return jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("int", 3)), 6)});;
}



inline jule::Ptr<_1ab03a720_Directive> _1abce2185_findDirective(jule::Slice<jule::Ptr<_1ab03a720_Directive>>& _412023_directives, jule::Str _412054_d) {
	{
		auto &expr = _412023_directives;
		auto it = expr.begin();
		_iter_begin_1bc076dbb:;
		if (it != expr.end()) {
			jule::Ptr<_1ab03a720_Directive> _412117_dr = *it;
			{
				if ((_412117_dr.get()._field_Tag.get()._field_Kind == _412054_d)) {
					return _412117_dr;;
				};
			}
			_iter_next_1bc076dbb:;
			++it;
			goto _iter_begin_1bc076dbb;
		}
		_iter_end_1bc076dbb:;
	};
	return nullptr;;
}



inline jule::Any _1abce251a_findBuiltinsImport(jule::Str _412923_ident, jule::Ptr<_1abc4cd9e_ImportInfo> _412935_imp) {
	return _1abd1d8cb_findPackageBuiltinDef(_412935_imp.get()._field_LinkPath,_412923_ident);;
}



inline void _1abce2729_fitBitsize(jule::Ptr<_1abcbba55_Data>& _413620_d) {
	jule::Ptr<_1abcec734_Prim> _413713_prim = _1abce9d6e_Prim(_413620_d.get()._field_Kind.ptr());;
	jule::I64 _41389_z = _1ab4c5d53_BitsizeOf(_1abceca97_Str(_413713_prim.ptr()));;
	if ((_41389_z == 64LLU)) {
		return;;
	};
	jule::I64 _414313_k = 0LL;;
	{
		
		if (_1aba88a75_IsI64(_413620_d.get()._field_Constant.ptr())) {
			_case_begin_1bc079a06:;
			{
				_414313_k=static_cast<jule::I64>(_1ab49b477_BitsizeOfInt(static_cast<jule::I64>(_1aba87887_ReadI64(_413620_d.get()._field_Constant.ptr()))));
				if ((_414313_k > _41389_z)) {
					_413713_prim.get()._field_Kind=_1ab4e834d_IntFromBits(_414313_k);
				};
			}
		}
		else if (_1aba88ba7_IsU64(_413620_d.get()._field_Constant.ptr())) {
			_case_begin_1bc079a7d:;
			{
				_414313_k=static_cast<jule::I64>(_1ab444dc1_BitsizeOfUint(static_cast<jule::U64>(_1aba879b9_ReadU64(_413620_d.get()._field_Constant.ptr()))));
				if ((_414313_k > _41389_z)) {
					_413713_prim.get()._field_Kind=_1ab4209c3_UintFromBits(_414313_k);
				};
			}
		}
		else if (_1aba8924b_IsF64(_413620_d.get()._field_Constant.ptr())) {
			_case_begin_1bc079b05:;
			{
				_414313_k=static_cast<jule::I64>(_1ab40757b_BitsizeOfFloat(static_cast<jule::F64>(_1aba87d60_ReadF64(_413620_d.get()._field_Constant.ptr()))));
				if ((_414313_k > _41389_z)) {
					_413713_prim.get()._field_Kind=_1ab4e87b0_FloatFromBits(_414313_k);
				};
			}
		}
		_match_end_1bc07993a:;
	};
}



inline void _1abce2a26_makeStructLitAlloc(jule::Ptr<_1abcbba55_Data>& _416328_d, jule::Ptr<_1aba91a4a_StructLitExprModel>& _416343_lit) {
	_416328_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(jule::new_ptr<_1abd00eb8_Sptr>(_1abd00eb8_Sptr{._field_Elem=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_416343_lit.get()._field_Strct, 0)})}), 7)});
	_416328_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba91d58_AllocStructLitExprModel>(_1aba91d58_AllocStructLitExprModel{._field_Lit=_416343_lit}), &__jule_any_type120);
}



inline jule::Ptr<_1abc73ee6_Var> _1abce2d67_buildErrorVar(jule::Ptr<_1ababdcdb_Scope>& _417423_s, jule::Ptr<_1ab076eba_FnCallExpr>& _417439_fc) {
	return jule::new_ptr<_1abc73ee6_Var>(_1abc73ee6_Var{._field_Scope=_417423_s, ._field_Token=_417439_fc.get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1abcebdb5_TypeSymbol>(_1abcebdb5_TypeSymbol{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_1abcbcacd_Value>(_1abcbcacd_Value{._field_Data=jule::new_ptr<_1abcbba55_Data>()}), });;
}



inline jule::Any _1abce31a8_findBuiltinsSema(jule::Str _419321_ident, jule::Ptr<_1abc55eea_Sema> _419337_s) {
	{
		auto &expr = _419337_s.get()._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bc0804bd:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _419417_imp = *it;
			{
				if ((_419417_imp.get()._field_ImportAll || _1abc50775_existIdent(_419417_imp.ptr(), _419321_ident))) {
					jule::Any _419621_def = _1abce251a_findBuiltinsImport(_419321_ident,_419417_imp);;
					if ((_419621_def != nullptr)) {
						return _419621_def;;
					};
				};
			}
			_iter_next_1bc0804bd:;
			++it;
			goto _iter_begin_1bc0804bd;
		}
		_iter_end_1bc0804bd:;
	};
	jule::Str _420413_ppath = _1a972954d_Dir(_419337_s.get()._field_file.get()._field_File.ptr());;
	if (_1a78d463e_HasPrefix(_420413_ppath,_1a79cdccc_PathStdlib)) {
		(_420413_ppath).mut_slice(_1a79cdccc_PathStdlib.len());;
		_420413_ppath=(jule::Str("std", 3) + _1a7913706_Replace(_420413_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
		return _1abd1d8cb_findPackageBuiltinDef(_420413_ppath,_419321_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1abce3450_isOkForShifting(jule::Ptr<_1abcbba55_Data>& _421825_d) {
	if (_1abcbc418_IsConst(_421825_d.ptr())) {
		{
			
			if (_1aba88a75_IsI64(_421825_d.get()._field_Constant.ptr())) {
				_case_begin_1bc083ea5:;
				{
					return (_1aba87887_ReadI64(_421825_d.get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1aba88ba7_IsU64(_421825_d.get()._field_Constant.ptr())) {
				_case_begin_1bc0837ce:;
				{
					return true;;
				}
			}
			else if (_1aba8924b_IsF64(_421825_d.get()._field_Constant.ptr())) {
				_case_begin_1bc083845:;
				{
					return (_1aba87d60_ReadF64(_421825_d.get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1bc083768:;
				{
					return false;;
				}
			}
			_match_end_1bc08369c:;
		};
	};
	jule::Ptr<_1abcec734_Prim> _42319_prim = _1abce9d6e_Prim(_421825_d.get()._field_Kind.ptr());;
	return ((_42319_prim != nullptr) && _1aba866bb_IsInt(_1abceca97_Str(_42319_prim.ptr())));;
}



inline jule::Bool _1abce3807_isInstancedStruct(jule::Ptr<_1ab08a583_StructIns> _423522_s) {
	return (_423522_s.get()._field_Decl.get()._field_Generics.len() == _423522_s.get()._field_Generics.len());;
}



inline jule::Bool _1abce3b6a_isPtrArithmeticCompatible(jule::Ptr<_1abcbba55_Data>& _423935_l, jule::Ptr<_1abcbba55_Data>& _423950_r) {
	jule::Ptr<_1abd0452c_Ptr> _42409_ptr = _1abcea347_Ptr(_423950_r.get()._field_Kind.ptr());;
	if ((_42409_ptr != nullptr)) {
		return _1abce81e1_Equal(_1abcea347_Ptr(_423935_l.get()._field_Kind.ptr()).get()._field_Elem, _42409_ptr.get()._field_Elem);;
	};
	if (_1abcbc418_IsConst(_423950_r.ptr())) {
		return _1abca5643_intAssignable(jule::Str("int", 3),_423950_r);;
	};
	_1abca581e_typeCompatibilityChecker _424713_tcc = _1abca581e_typeCompatibilityChecker{._field_dest=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=_423950_r.get()._field_Kind, };;
	return _1abca6e08_check(&_424713_tcc);;
}



inline void _1abce3dac_applyCastKindModel(jule::Ptr<_1abcbba55_Data>& _425628_d, jule::Ptr<_1abce79d7_TypeKind>& _425643_t) {
	_425628_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba923a8_CastingExprModel>(_1aba923a8_CastingExprModel{._field_Expr=_425628_d.get()._field_Model, ._field_Kind=_425643_t, ._field_ExprKind=_425628_d.get()._field_Kind}), &__jule_any_type102);
}



inline void _1abce4165_applyCastKind(jule::Ptr<_1abcbba55_Data>& _426423_d, jule::Ptr<_1abce79d7_TypeKind>& _426438_t) {
	_1abce3dac_applyCastKindModel(_426423_d,_426438_t);
	_426423_d.get()._field_Kind=_426438_t;
}



inline jule::Ptr<_1abcbba55_Data> _1abce4363_buildVoidData(void) {
	return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("void", 4)), 6)}), });;
}



inline jule::Str _1abce462c_checkDataForIntegerIndexing(jule::Ptr<_1abcbba55_Data>& _427737_d) {
	jule::Str __jule_func_result = jule::Str();
	if ((_427737_d == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1abce9d6e_Prim(_427737_d.get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1bc08b254:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1aba866bb_IsInt(_1abceca97_Str(_1abce9d6e_Prim(_427737_d.get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1bc08b2ba:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1abcbc418_IsConst(_427737_d.ptr())) {
			_case_begin_1bc08b331:;
			{
				if ((_1aba88206_AsF64(_427737_d.get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1abce9d6e_Prim(_427737_d.get()._field_Kind.ptr()) == nullptr) || _1abcbc418_IsConst(_427737_d.ptr()) || (_1ab4bb8c6_RealKindOf(_1abceca97_Str(_1abce9d6e_Prim(_427737_d.get()._field_Kind.ptr()).ptr())) != _1ab4bb8c6_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1bc08b397:;
			{
				jule::Ptr<_1abce79d7_TypeKind> _429417_t = jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("int", 3)), 6)});;
				_1abce4165_applyCastKind(_427737_d,_429417_t);
			}
		}
		_match_end_1bc08ad8b:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1abce48e6_applyCastModelByEnum(jule::Ptr<_1abcbba55_Data>& _430330_d, jule::Ptr<_1abab3220_Enum> _430344_e) {
	if ((_430344_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1abcec734_Prim> _43079_p = _1abce9d6e_Prim(_430344_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1abd00968_IsStr(_43079_p.ptr())) {
		return;;
	};
	_1abce3dac_applyCastKindModel(_430330_d,_430344_e.get()._field_Kind.get()._field_Kind);
}



inline void _1abce4b9e_castConstByType(jule::Str& _431421_t, jule::Ptr<_1abcbba55_Data>& _431434_d) {
	{
		
		if (_1aba86457_IsSigInt(_431421_t)) {
			_case_begin_1bc091600:;
			{
				{
					auto _match_expr{ _1ab4c5d53_BitsizeOf(_1ab4bb8c6_RealKindOf(_431421_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bc092249:;
						{
							_1aba88338_SetI64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1aba87e92_AsI64(_431434_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bc0922c1:;
						{
							_1aba88338_SetI64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1aba87e92_AsI64(_431434_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1bc092337:;
						{
							_1aba88338_SetI64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1aba87e92_AsI64(_431434_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1bc09239d:;
						{
							_1aba88338_SetI64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1aba87e92_AsI64(_431434_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1bc091886:;
				};
			}
		}
		else if (_1aba86589_IsUnsigInt(_431421_t)) {
			_case_begin_1bc091677:;
			{
				{
					auto _match_expr{ _1ab4c5d53_BitsizeOf(_1ab4bb8c6_RealKindOf(_431421_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bc095835:;
						{
							_1aba8846a_SetU64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1aba880c4_AsU64(_431434_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bc0958bd:;
						{
							_1aba8846a_SetU64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1aba880c4_AsU64(_431434_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1bc095934:;
						{
							_1aba8846a_SetU64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1aba880c4_AsU64(_431434_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1bc09599a:;
						{
							_1aba8846a_SetU64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1aba880c4_AsU64(_431434_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1bc091a73:;
				};
			}
		}
		else if (_1aba867ed_IsFloat(_431421_t)) {
			_case_begin_1bc0916ee:;
			{
				{
					auto _match_expr{ _1ab4c5d53_BitsizeOf(_1ab4bb8c6_RealKindOf(_431421_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bc098e32:;
						{
							_1aba88811_SetF64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1aba88206_AsF64(_431434_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bc098eba:;
						{
							_1aba88811_SetF64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1aba88206_AsF64(_431434_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1bc09756d:;
				};
			}
		}
		_match_end_1bc0914ce:;
	};
}



inline void _1abce51aa_updateModelToGenericIns(jule::Any& _434833_m, jule::Ptr<_1abaa1d79_FnIns>& _434852_f) {
	{
		auto &_match_expr{ _434833_m };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bc09a0ed:;
			{
				_434833_m=jule::Any(_434852_f, &__jule_any_type9);
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bc09a164:;
			{
				_434833_m.cast_ptr<_1aba95697_StructSubIdentExprModel>(&__jule_any_type73).get()._field_Method=_434852_f;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1bc09a1ca:;
			{
				_434833_m.cast_ptr<_1aba95a3d_StructStaticIdentExprModel>(&__jule_any_type105).get()._field_Method=_434852_f;
			}
		}
		_match_end_1bc091d2b:;
	};
}



inline jule::Bool _1abce53ec_pushSubIdentFromExpr(jule::Any _435929_expr, jule::Ptr<_1ab06e6cc_SubIdentTypeDecl>& _435950_t) {
	{
		auto &_match_expr{ _435929_expr };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1bc09c793:;
			{
				jule::Ptr<_1ab074b99_IdentExpr> _436217_e = _435929_expr.cast_ptr<_1ab074b99_IdentExpr>(&__jule_any_type88);;
				_435950_t.get()._field_Idents = jule::alloc_for_append(_435950_t.get()._field_Idents,1);_435950_t.get()._field_Idents.__push(jule::new_ptr<_1ab06e07d_IdentTypeDecl>(_1ab06e07d_IdentTypeDecl{._field_Token=_436217_e.get()._field_Token, ._field_Ident=_436217_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bc09c809:;
			{
				jule::Ptr<_1ab07643c_SubIdentExpr> _436817_e = _435929_expr.cast_ptr<_1ab07643c_SubIdentExpr>(&__jule_any_type94);;
				if ((!(_1abce53ec_pushSubIdentFromExpr(_436817_e.get()._field_Expr.get()._field_Kind,_435950_t)))) {
					return false;;
				};
				_435950_t.get()._field_Idents = jule::alloc_for_append(_435950_t.get()._field_Idents,1);_435950_t.get()._field_Idents.__push(jule::new_ptr<_1ab06e07d_IdentTypeDecl>(_1ab06e07d_IdentTypeDecl{._field_Token=_436817_e.get()._field_Ident, ._field_Ident=_436817_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_1bc09c232:;
			{
				return false;;
			}
		}
		_match_end_1bc09c1cc:;
	};
	return true;;
}



inline jule::Bool _1abd0e6e1_kindUsesGenerics(jule::Ptr<_1abce79d7_TypeKind>& _158526_k, jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>>& _158541_generics) {
	{
		auto &expr = _158541_generics;
		auto it = expr.begin();
		_iter_begin_1bc3e97b0:;
		if (it != expr.end()) {
			jule::Ptr<_1ab07acb0_GenericDecl> &_158612_g = *it;
			{
				if (static__1abd0e2e5_exist(_158612_g.get()._field_Ident,_158526_k)) {
					return true;;
				};
			}
			_iter_next_1bc3e97b0:;
			++it;
			goto _iter_begin_1bc3e97b0;
		}
		_iter_end_1bc3e97b0:;
	};
	return false;;
}



inline jule::Bool _1abd0ea76_hasDirective(jule::Slice<jule::Ptr<_1ab03a720_Directive>>& _159522_directives, jule::Str _159553_tag) {
	{
		auto &expr = _159522_directives;
		auto it = expr.begin();
		_iter_begin_1bc3e9d98:;
		if (it != expr.end()) {
			jule::Ptr<_1ab03a720_Directive> _159617_dr = *it;
			{
				if ((_159617_dr.get()._field_Tag.get()._field_Kind == _159553_tag)) {
					return true;;
				};
			}
			_iter_next_1bc3e9d98:;
			++it;
			goto _iter_begin_1bc3e9d98;
		}
		_iter_end_1bc3e9d98:;
	};
	return false;;
}



inline jule::Bool _1abd0ed1d_canGetPtr(jule::Ptr<_1abcbba55_Data>& _160419_d) {
	if (((!(_160419_d.get()._field_Lvalue)) || _1abcbc418_IsConst(_160419_d.ptr()))) {
		return false;;
	};
	{
		
		if (((_1abceb05c_Fn(_160419_d.get()._field_Kind.ptr()) != nullptr) || (_1abcea5ab_Enum(_160419_d.get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1bc3ec340:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bc3ebb69:;
			{
				return true;;
			}
		}
		_match_end_1bc3ebb14:;
	};
}



inline jule::Bool _1abd1013c_isValidForSptrType(jule::Ptr<_1abce79d7_TypeKind>& _161728_t) {
	jule::Ptr<_1ab08a583_StructIns> _161813_s = _1abceb2c1_Struct(_161728_t.ptr());;
	if ((((_161813_s != nullptr) && (_161813_s.get()._field_Decl != nullptr)) && _161813_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1abd103d4_isValidForRef(jule::Ptr<_1abce79d7_TypeKind>& _162623_t) {
	return (_1abceb05c_Fn(_162623_t.ptr()) == nullptr);;
}



inline jule::Bool _1abd1069d_isBuiltinStrConvertable(jule::Ptr<_1abce79d7_TypeKind>& _162933_t) {
	return (((!(_1abce8b81_Void(_162933_t.ptr()))) && (_1abceb05c_Fn(_162933_t.ptr()) == nullptr)) && (_1abceba0d_Tup(_162933_t.ptr()) == nullptr));;
}



inline jule::Str _1abd10923_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1a97237bc_Token>>& _163327_tokens) {
	jule::Str _163413_s = _163327_tokens[0LL].get()._field_Kind;;
	{
		auto expr = _163327_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1bc401025:;
		if (it != expr.end()) {
			jule::Ptr<_1a97237bc_Token> &_163512_token = *it;
			{
				_163413_s+=jule::Str("::", 2);
				_163413_s+=_163512_token.get()._field_Kind;
			}
			_iter_next_1bc401025:;
			++it;
			goto _iter_begin_1bc401025;
		}
		_iter_end_1bc401025:;
	};
	return _163413_s;;
}



inline jule::Ptr<_1abcec734_Prim> _1abd10cca_buildPrimType(jule::Str _164218_kind) {
	return jule::new_ptr<_1abcec734_Prim>(_1abcec734_Prim{._field_Kind=_164218_kind});;
}



inline jule::Ptr<_1ab08a1a9_Struct> _1abd11072_getStructFromKind(jule::Ptr<_1abce79d7_TypeKind> _164826_k) {
	{
		
		if ((_164826_k == nullptr)) {
			_case_begin_1bc402257:;
			{
				return nullptr;;
			}
		}
		else if ((_1abceb2c1_Struct(_164826_k.ptr()) != nullptr)) {
			_case_begin_1bc4022bd:;
			{
				return _1abceb2c1_Struct(_164826_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_1abcea0d3_Sptr(_164826_k.ptr()) != nullptr)) {
			_case_begin_1bc402334:;
			{
				return _1abd11072_getStructFromKind(_1abcea0d3_Sptr(_164826_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1abceace8_Slc(_164826_k.ptr()) != nullptr)) {
			_case_begin_1bc40239a:;
			{
				return _1abd11072_getStructFromKind(_1abceace8_Slc(_164826_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1abceaa84_Arr(_164826_k.ptr()) != nullptr)) {
			_case_begin_1bc402631:;
			{
				return _1abd11072_getStructFromKind(_1abceaa84_Arr(_164826_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1abcea347_Ptr(_164826_k.ptr()) != nullptr)) {
			_case_begin_1bc402697:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_1bc4021e1:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc40172e:;
	};
}



inline jule::Bool _1abd11319_isPrim(jule::Str _167111_kind) {
	return ((((((((((((((((_167111_kind == jule::Str("i8", 2)) || (_167111_kind == jule::Str("i16", 3))) || (_167111_kind == jule::Str("i32", 3))) || (_167111_kind == jule::Str("i64", 3))) || (_167111_kind == jule::Str("u8", 2))) || (_167111_kind == jule::Str("u16", 3))) || (_167111_kind == jule::Str("u32", 3))) || (_167111_kind == jule::Str("u64", 3))) || (_167111_kind == jule::Str("f32", 3))) || (_167111_kind == jule::Str("f64", 3))) || (_167111_kind == jule::Str("int", 3))) || (_167111_kind == jule::Str("uint", 4))) || (_167111_kind == jule::Str("uintptr", 7))) || (_167111_kind == jule::Str("bool", 4))) || (_167111_kind == jule::Str("str", 3))) || (_167111_kind == jule::Str("any", 3)));;
}



inline void _1abd115c2_applyImplicitCast(jule::Ptr<_1abce79d7_TypeKind>& _169027_dest, jule::Ptr<_1abcbba55_Data>& _169049_d) {
	if (_1abce891c_IsNil(_169049_d.get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1abcec734_Prim> _16949_destPrim = _1abce9d6e_Prim(_169027_dest.ptr());;
	jule::Ptr<_1abcec734_Prim> _16959_prim = _1abce9d6e_Prim(_169049_d.get()._field_Kind.ptr());;
	if ((_16949_destPrim != nullptr)) {
		if (_1abd00bcc_IsAny(_16949_destPrim.ptr())) {
			if (((_16959_prim == nullptr) || (!(_1abd00bcc_IsAny(_16959_prim.ptr()))))) {
				_1abce4165_applyCastKind(_169049_d,_169027_dest);
			};
			return;;
		};
		if (((((((!(_1abce86a8_CppLinked(_169049_d.get()._field_Kind.ptr()))) && (!(_169049_d.get()._field_Kind.get()._field_Variadic))) && (!(_169049_d.get()._field_Lvalue))) && (!(_1abcbc418_IsConst(_169049_d.ptr())))) && (_16959_prim != nullptr)) && _1aba86930_IsNum(_16959_prim.get()._field_Kind))) {
			_1abce4165_applyCastKind(_169049_d,_169027_dest);
		};
		return;;
	};
	if (((_1abceb535_Trait(_169027_dest.ptr()) != nullptr) && (_1abceb535_Trait(_169049_d.get()._field_Kind.ptr()) == nullptr))) {
		_1abce3dac_applyCastKindModel(_169049_d,_169027_dest);
		return;;
	};
	if (((_1abcea820_TypeEnum(_169027_dest.ptr()) != nullptr) && (_1abcea820_TypeEnum(_169049_d.get()._field_Kind.ptr()) == nullptr))) {
		_1abce3dac_applyCastKindModel(_169049_d,_169027_dest);
		return;;
	};
}



inline __jule_tuple_x_1abcb6c2b_SymbolTable__jule_tuple_s_1a7995777_Log _1abd1463b_buildSymbols(jule::Ptr<_1ab039532_Ast>& _1622_ast, jule::Trait<_1abad9873_Importer>& _1638_importer, jule::Ptr<_1abaaa602_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1abcb6c2b_SymbolTable__jule_tuple_s_1a7995777_Log __jule_func_result;
	jule::Ptr<_1abaaa602_symbolBuilder> _1713_sb = jule::new_ptr<_1abaaa602_symbolBuilder>(_1abaaa602_symbolBuilder{._field_owner=_1662_owner, ._field_importer=_1638_importer, ._field_ast=_1622_ast, });;
	_1abab05a2_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1abc50d08_Package__jule_tuple_s_1a7995777_Log _1abd14a6a_analyzePackage(jule::Slice<jule::Ptr<_1ab039532_Ast>>& _3024_files, jule::Trait<_1abad9873_Importer>& _3044_importer, jule::I64& _3065_flags) {
	__jule_tuple_x_1abc50d08_Package__jule_tuple_s_1a7995777_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_1abcb6c2b_SymbolTable>>::alloc(0LL, _3024_files.len());;
	{
		auto &expr = _3024_files;
		auto it = expr.begin();
		_iter_begin_1bc507868:;
		if (it != expr.end()) {
			jule::Ptr<_1ab039532_Ast> _3317_f = *it;
			{
				jule::Ptr<_1abcb6c2b_SymbolTable> _3418_table;;
				jule::Slice<_1a7995777_Log> _3429_errors;;
				({
					__jule_tuple_x_1abcb6c2b_SymbolTable__jule_tuple_s_1a7995777_Log __jule_assign_result = _1abd1463b_buildSymbols(_3317_f,_3044_importer,nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_1bc507868:;
			++it;
			goto _iter_begin_1bc507868;
		}
		_iter_end_1bc507868:;
	};
	jule::Ptr<_1abc55eea_Sema> _4113_sema = jule::new_ptr<_1abc55eea_Sema>(_1abc55eea_Sema{._field_flags=_3065_flags});;
	_1abc70e49_check(_4113_sema, _3213_tables);
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1abc50d08_Package> _4913_pkg = jule::new_ptr<_1abc50d08_Package>(_1abc50d08_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _4913_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1abc50d08_Package__jule_tuple_s_1a7995777_Log _1abd14e55_AnalyzePackage(jule::Slice<jule::Ptr<_1ab039532_Ast>> _7323_files, jule::Trait<_1abad9873_Importer> _7342_importer, jule::I64 _7362_flags) {
	__jule_tuple_x_1abc50d08_Package__jule_tuple_s_1a7995777_Log __jule_func_result;
	if ((_7323_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1abc50d08_Package> _7714_package;;
	jule::Slice<_1a7995777_Log> _7727_logs;;
	({
		__jule_tuple_x_1abc50d08_Package__jule_tuple_s_1a7995777_Log __jule_assign_result = _1abd14a6a_analyzePackage(_7323_files,_7342_importer,_7362_flags);
		_7714_package = __jule_assign_result.__jule_result_arg0;
		_7727_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7714_package;
	__jule_func_result.__jule_result_arg1 = _7727_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1abaa1d79_FnIns> _1abd2101b_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1bc5113cc:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _2620_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abda97ad_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1bc511a92:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _2920_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abda9b98_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1bc511b80:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _3220_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abdaa083_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1bc511be6:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _3520_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abdaa46d_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1bc5116c9:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _3820_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abdaaa89_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1bc511740:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _4120_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abdaae74_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1bc5117b7:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _4420_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abdabc77_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1bc51183e:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _4720_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abdace76_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1bc511c6d:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _5020_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abdad9e3_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1bc511ce5:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _5320_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abdae362_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1bc511d6c:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _5620_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abdae74c_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1bc511de4:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _5920_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abdaed13_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1bc511564:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc5114ba:;
	};
}



inline jule::Ptr<_1abce6ce4_TypeAlias> _1abd22b55_findBuiltinTypeAlias(jule::Str _6625_ident) {
	{
		auto &_match_expr{ _6625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1bc5194d4:;
			{
				static jule::Ptr<_1abce6ce4_TypeAlias> _6920_t = jule::new_ptr<_1abce6ce4_TypeAlias>(_1abce6ce4_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1abcebdb5_TypeSymbol>(_1abcebdb5_TypeSymbol{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _6920_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1bc51954a:;
			{
				static jule::Ptr<_1abce6ce4_TypeAlias> _7920_t = jule::new_ptr<_1abce6ce4_TypeAlias>(_1abce6ce4_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1abcebdb5_TypeSymbol>(_1abcebdb5_TypeSymbol{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _7920_t;;
			}
		}
		else {
			_case_begin_1bc518e1d:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc518945:;
	};
}



inline jule::Any _1abd2752d_findBuiltinDef(jule::Str _9319_ident) {
	jule::Ptr<_1abaa1d79_FnIns> _9413_f = _1abd2101b_findBuiltinFn(_9319_ident);;
	if ((_9413_f != nullptr)) {
		return jule::Any(_9413_f, &__jule_any_type9);;
	};
	jule::Ptr<_1abce6ce4_TypeAlias> _9813_ta = _1abd22b55_findBuiltinTypeAlias(_9319_ident);;
	if ((_9813_ta != nullptr)) {
		return jule::Any(_9813_ta, &__jule_any_type69);;
	};
	return nullptr;;
}



inline jule::Any _1abd266d6_findBuiltinDefStdDebug(jule::Str _10527_ident) {
	{
		auto &_match_expr{ _10527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1bc51c482:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _10820_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abdb174e_builtinCallerStdDebugOut), });;
				return jule::Any(_10820_f, &__jule_any_type9);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1bc51cb8b:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _11120_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abdb1b39_builtinCallerStdDebugOutln), });;
				return jule::Any(_11120_f, &__jule_any_type9);;
			}
		}
		else {
			_case_begin_1bc51c251:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc51c65d:;
	};
}



inline jule::Any _1abd26818_findBuiltinDefStdMem(jule::Str _11825_ident) {
	{
		auto &_match_expr{ _11825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1bc51e51c:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _12120_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abdb0176_builtinCallerStdMemSizeOf), });;
				return jule::Any(_12120_f, &__jule_any_type9);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1bc51e583:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _12420_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abdb0594_builtinCallerStdMemAlignOf), });;
				return jule::Any(_12420_f, &__jule_any_type9);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1bc51e341:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _12720_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abdb09b2_builtinCallerStdMemFree), });;
				return jule::Any(_12720_f, &__jule_any_type9);;
			}
		}
		else {
			_case_begin_1bc51c7a1:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc51d582:;
	};
}



inline jule::Any _1abd1d799_findBuiltinDefStdJuleIntegrated(jule::Str _13436_ident) {
	{
		auto &_match_expr{ _13436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1bc5217d8:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _13720_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abdb0de1_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_13720_f, &__jule_any_type9);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1bc52184e:;
			{
				static jule::Ptr<_1abaa1d79_FnIns> _14020_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_Decl=jule::new_ptr<_1aba9e1c8_Fn>(_1aba9e1c8_Fn{._field_Generics=jule::Slice<jule::Ptr<_1ab07acb0_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abdb130e_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_14020_f, &__jule_any_type9);;
			}
		}
		else {
			_case_begin_1bc51e5e9:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc52084d:;
	};
}



inline jule::Any _1abd1d8cb_findPackageBuiltinDef(jule::Str _15226_link_path, jule::Str _15242_ident) {
	{
		auto &_match_expr{ _15226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1bc523730:;
			{
				return _1abd266d6_findBuiltinDefStdDebug(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1bc523796:;
			{
				return _1abd26818_findBuiltinDefStdMem(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1bc523554:;
			{
				return _1abd1d799_findBuiltinDefStdJuleIntegrated(_15242_ident);;
			}
		}
		else {
			_case_begin_1bc523147:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc522234:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abda88de_builtinCallerCommonPlain(jule::Ptr<_1abcbd5c3_Eval>& _16534_e, jule::Ptr<_1ab076eba_FnCallExpr>& _16549_fc, jule::Ptr<_1abcbba55_Data>& _16571_d) {
	jule::Ptr<_1abaa1d79_FnIns> _16613_f = _1abceb05c_Fn(_16571_d.get()._field_Kind.ptr());;
	_1abcad7e4_fnCallArgChecker _16813_fcac = _1abcad7e4_fnCallArgChecker{._field_e=_16534_e, ._field_args=_16549_fc.get()._field_Args, ._field_errorToken=_16549_fc.get()._field_Token, ._field_f=_16613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1abcb0bae_check(&_16813_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1aba92c5a_FnCallExprModel> _17913_model = jule::new_ptr<_1aba92c5a_FnCallExprModel>(_1aba92c5a_FnCallExprModel{._field_Token=_16549_fc.get()._field_Token, ._field_Func=_16613_f, ._field_Expr=_16571_d.get()._field_Model, ._field_Args=_16813_fcac._field_argModels, });;
	if ((_16613_f.get()._field_Result == nullptr)) {
		_16571_d=_1abce4363_buildVoidData();
	} else {
		_16571_d=jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=_16613_f.get()._field_Result, });
	};
	_16571_d.get()._field_Model=jule::Any(_17913_model, &__jule_any_type36);
	return _16571_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abda8b97_builtinCallerCommon(jule::Ptr<_1abcbd5c3_Eval>& _19829_e, jule::Ptr<_1ab076eba_FnCallExpr>& _19844_fc, jule::Ptr<_1abcbba55_Data>& _19866_d) {
	return _1abda88de_builtinCallerCommonPlain(_19829_e,_19844_fc,_19866_d);;
}



inline jule::Ptr<_1abcbba55_Data> _1abda9082_builtinCallerCommonMut(jule::Ptr<_1abcbd5c3_Eval>& _20232_e, jule::Ptr<_1ab076eba_FnCallExpr>& _20247_fc, jule::Ptr<_1abcbba55_Data>& _20269_d) {
	if ((!(_20269_d.get()._field_Mutable))) {
		_1abcbdace_pushErr(_20232_e.ptr(), _20247_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1abda8b97_builtinCallerCommon(_20232_e,_20247_fc,_20269_d);;
}



inline jule::Ptr<_1abcbba55_Data> _1abda93c3_builtinCallerError(jule::Ptr<_1abcbd5c3_Eval>& _20928_e, jule::Ptr<_1ab076eba_FnCallExpr>& _20943_fc) {
	if ((_20943_fc.get()._field_Args.len() < 1LL)) {
		_1abcbdace_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_20943_fc.get()._field_Args.len() > 1LL)) {
		_1abcbdace_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _21713_expr = _1abcd8ee5_evalExpr(_20928_e, _20943_fc.get()._field_Args[0LL]);;
	if ((_21713_expr == nullptr)) {
		return nullptr;;
	};
	if (_1abcbbe40_IsNil(_21713_expr.ptr())) {
		_1abcbdace_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _22613_d = _1abce4363_buildVoidData();;
	_22613_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba9a290_BuiltinErrorCallExprModel>(_1aba9a290_BuiltinErrorCallExprModel{._field_Err=_21713_expr}), &__jule_any_type24);
	return _22613_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abda97ad_builtinCallerOut(jule::Ptr<_1abcbd5c3_Eval>& _23126_e, jule::Ptr<_1ab076eba_FnCallExpr>& _23141_fc, jule::Ptr<_1abcbba55_Data>& ) {
	if ((_23141_fc.get()._field_Args.len() < 1LL)) {
		_1abcbdace_pushErr(_23126_e.ptr(), _23141_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_23141_fc.get()._field_Args.len() > 1LL)) {
		_1abcbdace_pushErr(_23126_e.ptr(), _23141_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _24013_expr = _1abcd8ee5_evalExpr(_23126_e, _23141_fc.get()._field_Args[0LL]);;
	if ((_24013_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1abd1069d_isBuiltinStrConvertable(_24013_expr.get()._field_Kind)))) {
		_1abcbdace_pushErr(_23126_e.ptr(), _23141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abcbba55_Data> _25013_d = _1abce4363_buildVoidData();;
	_25013_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba96e29_BuiltinOutCallExprModel>(_1aba96e29_BuiltinOutCallExprModel{._field_Expr=_24013_expr.get()._field_Model, }), &__jule_any_type29);
	return _25013_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abda9b98_builtinCallerOutln(jule::Ptr<_1abcbd5c3_Eval>& _25528_e, jule::Ptr<_1ab076eba_FnCallExpr>& _25543_fc, jule::Ptr<_1abcbba55_Data>& _25565_d) {
	_25565_d=_1abda97ad_builtinCallerOut(_25528_e,_25543_fc,_25565_d);
	if ((_25565_d == nullptr)) {
		return nullptr;;
	};
	_25565_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba97314_BuiltinOutlnCallExprModel>(_1aba97314_BuiltinOutlnCallExprModel{._field_Expr=_25565_d.get()._field_Model.cast_ptr<_1aba96e29_BuiltinOutCallExprModel>(&__jule_any_type29).get()._field_Expr, }), &__jule_any_type30);
	return _25565_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdaa083_builtinCallerNew(jule::Ptr<_1abcbd5c3_Eval>& _26726_e, jule::Ptr<_1ab076eba_FnCallExpr>& _26741_fc, jule::Ptr<_1abcbba55_Data>& _26763_d) {
	if ((_26741_fc.get()._field_Args.len() < 1LL)) {
		_1abcbdace_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_26741_fc.get()._field_Args.len() > 2LL)) {
		_1abcbdace_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _27613_t = _1abcd88c9_evalExprKind(_26726_e, _26741_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_27613_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_27613_t.get()._field_Decl))) {
		_1abcbdace_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1abd1013c_isValidForSptrType(_27613_t.get()._field_Kind)))) {
		jule::Ptr<_1ab08a583_StructIns> _28717_s = _1abceb2c1_Struct(_27613_t.get()._field_Kind.ptr());;
		if ((((_28717_s != nullptr) && (_28717_s.get()._field_Decl != nullptr)) && _28717_s.get()._field_Decl.get()._field_CppLinked)) {
			_1abcbdace_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	_26763_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(jule::new_ptr<_1abd00eb8_Sptr>(_1abd00eb8_Sptr{._field_Elem=_27613_t.get()._field_Kind}), 7)});
	if ((_26741_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1abce79d7_TypeKind> _30117_old = _26726_e.get()._field_prefix;;
		_26726_e.get()._field_prefix=_27613_t.get()._field_Kind;
		jule::Ptr<_1abcbba55_Data> _30417_init = _1abcd8ee5_evalExpr(_26726_e, _26741_fc.get()._field_Args[1LL]);;
		_26726_e.get()._field_prefix=_30117_old;
		if ((_30417_init != nullptr)) {
			jule::Ptr<_1a97237bc_Token> _30921_token = _26741_fc.get()._field_Args[1LL].get()._field_Token;;
			;
			_1abc639a8_checkValidityForInitExpr(_26726_e.get()._field_s, (!(_26726_e.get()._field_immutable)),false,_27613_t.get()._field_Kind,_30417_init,_30921_token);
			_1abc60a93_checkAssignType(_26726_e.get()._field_s, false,_27613_t.get()._field_Kind,_30417_init,_30921_token);
			_26763_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba97a1d_BuiltinNewCallExprModel>(_1aba97a1d_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, ._field_Init=_30417_init.get()._field_Model}), &__jule_any_type121);
		};
	} else {
		_26763_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba97a1d_BuiltinNewCallExprModel>(_1aba97a1d_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, }), &__jule_any_type121);
	};
	return _26763_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdaa46d_builtinCallerPanic(jule::Ptr<_1abcbd5c3_Eval>& _32928_e, jule::Ptr<_1ab076eba_FnCallExpr>& _32943_fc, jule::Ptr<_1abcbba55_Data>& ) {
	if ((_32943_fc.get()._field_Args.len() < 1LL)) {
		_1abcbdace_pushErr(_32928_e.ptr(), _32943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_32943_fc.get()._field_Args.len() > 1LL)) {
		_1abcbdace_pushErr(_32928_e.ptr(), _32943_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _33813_expr = _1abcd8ee5_evalExpr(_32928_e, _32943_fc.get()._field_Args[0LL]);;
	if ((_33813_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1abce9d6e_Prim(_33813_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1abd00968_IsStr(_1abce9d6e_Prim(_33813_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1abcbdace_pushErr(_32928_e.ptr(), _32943_fc.get()._field_Token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _34713_d = _1abce4363_buildVoidData();;
	_34713_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba97e08_BuiltinPanicCallExprModel>(_1aba97e08_BuiltinPanicCallExprModel{._field_Token=_32943_fc.get()._field_Token, ._field_Expr=_33813_expr.get()._field_Model}), &__jule_any_type31);
	return _34713_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdaaa89_builtinCallerMake(jule::Ptr<_1abcbd5c3_Eval>& _35527_e, jule::Ptr<_1ab076eba_FnCallExpr>& _35542_fc, jule::Ptr<_1abcbba55_Data>& _35564_d) {
	if ((_35542_fc.get()._field_Args.len() < 2LL)) {
		if ((_35542_fc.get()._field_Args.len() == 1LL)) {
			_1abcbdace_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type7)}));
			return nullptr;;
		};
		_1abcbdace_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type7)}));
		return nullptr;;
	};
	jule::Ptr<_1abcbba55_Data> _36513_t = _1abcd88c9_evalExprKind(_35527_e, _35542_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_36513_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_36513_t.get()._field_Decl))) {
		_1abcbdace_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_35542_fc.get()._field_Args.len() > 3LL)) {
		_1abcbdace_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Args[3LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_35564_d.get()._field_Kind=_36513_t.get()._field_Kind;
	jule::Ptr<_1abcbba55_Data> _38113_lenExpr = _1abcd8ee5_evalExpr(_1abc6028a_evalp(_35527_e.get()._field_s, _35527_e.get()._field_lookup,_36513_t.get()._field_Kind), _35542_fc.get()._field_Args[1LL]);;
	if ((_38113_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1abcc71c0_checkIntegerIndexingByData(_35527_e.ptr(), _38113_lenExpr,_35542_fc.get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1aba98865_BuiltinMakeCallExprModel> _38813_model = jule::new_ptr<_1aba98865_BuiltinMakeCallExprModel>(_1aba98865_BuiltinMakeCallExprModel{._field_Kind=_36513_t.get()._field_Kind, ._field_Len=_38113_lenExpr.get()._field_Model, });;
	_35564_d.get()._field_Model=jule::Any(_38813_model, &__jule_any_type122);
	if ((_35542_fc.get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1abcbba55_Data> _39417_capExpr = _1abcd8ee5_evalExpr(_1abc6028a_evalp(_35527_e.get()._field_s, _35527_e.get()._field_lookup,_36513_t.get()._field_Kind), _35542_fc.get()._field_Args[2LL]);;
		if ((_39417_capExpr == nullptr)) {
			return _35564_d;;
		};
		_1abcc71c0_checkIntegerIndexingByData(_35527_e.ptr(), _39417_capExpr,_35542_fc.get()._field_Args[2LL].get()._field_Token);
		_38813_model.get()._field_Cap=_39417_capExpr.get()._field_Model;
	};
	return _35564_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdaae74_builtinCallerAppend(jule::Ptr<_1abcbd5c3_Eval>& _40429_e, jule::Ptr<_1ab076eba_FnCallExpr>& _40444_fc, jule::Ptr<_1abcbba55_Data>& _40466_d) {
	if ((_40444_fc.get()._field_Args.len() < 2LL)) {
		if ((_40444_fc.get()._field_Args.len() == 1LL)) {
			_1abcbdace_pushErr(_40429_e.ptr(), _40444_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type7)}));
			return nullptr;;
		};
		_1abcbdace_pushErr(_40429_e.ptr(), _40444_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type7)}));
		return nullptr;;
	};
	jule::Ptr<_1abcbba55_Data> _41413_t = _1abcd8ee5_evalExpr(_40429_e, _40444_fc.get()._field_Args[0LL]);;
	if ((_41413_t == nullptr)) {
		return nullptr;;
	};
	if ((_1abceace8_Slc(_41413_t.get()._field_Kind.ptr()) == nullptr)) {
		_1abcbdace_pushErr(_40429_e.ptr(), _40444_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abaa1d79_FnIns> _42413_f = jule::new_ptr<_1abaa1d79_FnIns>(_1abaa1d79_FnIns{._field_Params=jule::Slice<jule::Ptr<_1abaa0eaa_ParamIns>>::make({jule::new_ptr<_1abaa0eaa_ParamIns>(_1abaa0eaa_ParamIns{._field_Decl=jule::new_ptr<_1aba9c88b_Param>(_1aba9c88b_Param{._field_Mutable=true, }), ._field_Kind=_41413_t.get()._field_Kind}),jule::new_ptr<_1abaa0eaa_ParamIns>(_1abaa0eaa_ParamIns{._field_Decl=jule::new_ptr<_1aba9c88b_Param>(_1aba9c88b_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1abceace8_Slc(_41413_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41413_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1abcbba55_Data>(jule::Ptr<_1abcbd5c3_Eval>&,jule::Ptr<_1ab076eba_FnCallExpr>&,jule::Ptr<_1abcbba55_Data>&)>(_1abda88de_builtinCallerCommonPlain), });;
	_40466_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_42413_f, 1)});
	_40466_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba961e2_CommonIdentExprModel>(_1aba961e2_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type74);
	_40466_d=_1abda88de_builtinCallerCommonPlain(_40429_e,_40444_fc,_40466_d);
	if ((_40466_d != nullptr)) {
		jule::Ptr<_1aba92c5a_FnCallExprModel> _45217_model = _40466_d.get()._field_Model.cast_ptr<_1aba92c5a_FnCallExprModel>(&__jule_any_type36);;
		_40466_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba98c50_BuiltinAppendCallExprModel>(_1aba98c50_BuiltinAppendCallExprModel{._field_Dest=_45217_model.get()._field_Args[0LL], ._field_Elements=_45217_model.get()._field_Args[1LL]}), &__jule_any_type27);
	};
	return _40466_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdab408_callerCopySlice(jule::Ptr<_1abcbba55_Data>& _46125_dest, jule::Ptr<_1abcbd5c3_Eval>& _46143_e, jule::Ptr<_1ab076eba_FnCallExpr>& _46158_fc, jule::Ptr<_1abcbba55_Data>& _46180_d) {
	if ((!(_46125_dest.get()._field_Mutable))) {
		_1abcbdace_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _46613_src = _1abcd8ee5_evalExpr(_46143_e, _46158_fc.get()._field_Args[1LL]);;
	if ((_46613_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abd01925_Slc> _47013_slc = _1abceace8_Slc(_46613_src.get()._field_Kind.ptr());;
	if ((_47013_slc != nullptr)) {
		if (((!(_46613_src.get()._field_Mutable)) && _1abce9159_Mutable(_47013_slc.get()._field_Elem.ptr()))) {
			_1abcbdace_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_1abce81e1_Equal(_46125_dest.get()._field_Kind, _46613_src.get()._field_Kind)))) {
			_1abcbdace_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_46125_dest.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type7)}));
		};
	} else {
		jule::Ptr<_1abcec734_Prim> _48013_destPrim = _1abce9d6e_Prim(_1abceace8_Slc(_46125_dest.get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1abcec734_Prim> _48113_prim = _1abce9d6e_Prim(_46613_src.get()._field_Kind.ptr());;
		if (((((_48013_destPrim == nullptr) || (_48113_prim == nullptr)) || (!(_1abd00968_IsStr(_48113_prim.ptr())))) || (!(_1abcee03d_IsU8(_48013_destPrim.ptr()))))) {
			_1abcbdace_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_46125_dest.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type7)}));
		};
	};
	_46180_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("int", 3)), 6)});
	_46180_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba99da5_BuiltinCopyCallExprModel>(_1aba99da5_BuiltinCopyCallExprModel{._field_Dest=_46125_dest, ._field_Src=_46613_src}), &__jule_any_type33);
	return _46180_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdab88c_callerCopyStr(jule::Ptr<_1abcbba55_Data>& _49523_dest, jule::Ptr<_1abcbd5c3_Eval>& _49541_e, jule::Ptr<_1ab076eba_FnCallExpr>& _49556_fc, jule::Ptr<_1abcbba55_Data>& _49578_d) {
	if ((!(_49523_dest.get()._field_Mutable))) {
		_1abcbdace_pushErr(_49541_e.ptr(), _49556_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _50013_src = _1abcd8ee5_evalExpr(_49541_e, _49556_fc.get()._field_Args[1LL]);;
	if ((_50013_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1abce9d6e_Prim(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc5625e8:;
			{
				if (_1abd00968_IsStr(_1abce9d6e_Prim(_50013_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1abceace8_Slc(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc56265e:;
			{
				jule::Ptr<_1abd01925_Slc> _51017_slc = _1abceace8_Slc(_50013_src.get()._field_Kind.ptr());;
				if (((_1abce9d6e_Prim(_51017_slc.get()._field_Elem.ptr()) != nullptr) && _1abcee03d_IsU8(_1abce9d6e_Prim(_51017_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1bc5623c8:;
	};
	_1abcbdace_pushErr(_49541_e.ptr(), _49556_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_49523_dest.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_50013_src.get()._field_Kind.ptr()), &__jule_any_type7)}));
	_julec_label_end:;
	_49578_d.get()._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("int", 3)), 6)});
	_49578_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba99da5_BuiltinCopyCallExprModel>(_1aba99da5_BuiltinCopyCallExprModel{._field_Dest=_49523_dest, ._field_Src=_50013_src}), &__jule_any_type33);
	return _49578_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdabc77_builtinCallerCopy(jule::Ptr<_1abcbd5c3_Eval>& _52527_e, jule::Ptr<_1ab076eba_FnCallExpr>& _52542_fc, jule::Ptr<_1abcbba55_Data>& _52564_d) {
	if ((_52542_fc.get()._field_Args.len() < 2LL)) {
		if ((_52542_fc.get()._field_Args.len() == 1LL)) {
			_1abcbdace_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type7)}));
			return nullptr;;
		};
		_1abcbdace_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_52542_fc.get()._field_Args.len() > 2LL)) {
		_1abcbdace_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _53813_dest = _1abcd8ee5_evalExpr(_52527_e, _52542_fc.get()._field_Args[0LL]);;
	{
		
		if ((_53813_dest == nullptr)) {
			_case_begin_1bc56c9bb:;
			{
				return nullptr;;
			}
		}
		else if ((_1abceace8_Slc(_53813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc56ca32:;
			{
				return _1abdab408_callerCopySlice(_53813_dest,_52527_e,_52542_fc,_52564_d);;
			}
		}
		else if (((_1abce9d6e_Prim(_53813_dest.get()._field_Kind.ptr()) != nullptr) && _1abd00968_IsStr(_1abce9d6e_Prim(_53813_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1bc56c823:;
			{
				return _1abdab88c_callerCopyStr(_53813_dest,_52527_e,_52542_fc,_52564_d);;
			}
		}
		else {
			_case_begin_1bc56ba42:;
			{
				_1abcbdace_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc56b9cb:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abdac0b8_callerLenSlice(jule::Ptr<_1abcbba55_Data>& _55224_expr, jule::Ptr<_1abcbba55_Data>& _55242_d) {
	_55242_d.get()._field_Kind=_1abcb5ca2_lenKind();
	_55242_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba9906e_BuiltinLenCallExprModel>(_1aba9906e_BuiltinLenCallExprModel{._field_Expr=_55224_expr}), &__jule_any_type123);
	return _55242_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdac409_callerLenMap(jule::Ptr<_1abcbba55_Data>& _56022_expr, jule::Ptr<_1abcbba55_Data>& _56040_d) {
	_56040_d.get()._field_Kind=_1abcb5ca2_lenKind();
	_56040_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba9906e_BuiltinLenCallExprModel>(_1aba9906e_BuiltinLenCallExprModel{._field_Expr=_56022_expr}), &__jule_any_type123);
	return _56040_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdac74a_callerLenArr(jule::Ptr<_1abcbba55_Data>& _56822_expr, jule::Ptr<_1abcbba55_Data>& _56840_d) {
	_56840_d.get()._field_Kind=_1abcb5ca2_lenKind();
	_56840_d.get()._field_Constant=static__1aba86d81_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1abceaa84_Arr(_56822_expr.get()._field_Kind.ptr()).get()._field_N)));
	_56840_d.get()._field_Model=jule::Any(_56840_d.get()._field_Constant, &__jule_any_type49);
	return _56840_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdaca8b_callerLenStr(jule::Ptr<_1abcbba55_Data>& _57522_expr, jule::Ptr<_1abcbba55_Data>& _57540_d) {
	_57540_d.get()._field_Kind=_1abcb5ca2_lenKind();
	if (_1abcbc418_IsConst(_57522_expr.ptr())) {
		_57540_d.get()._field_Constant=static__1aba86d81_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1aba87c2d_ReadStr(_57522_expr.get()._field_Constant.ptr()).len())));
		_57540_d.get()._field_Model=jule::Any(_57540_d.get()._field_Constant, &__jule_any_type49);
	} else {
		_57540_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba9906e_BuiltinLenCallExprModel>(_1aba9906e_BuiltinLenCallExprModel{._field_Expr=_57522_expr}), &__jule_any_type123);
	};
	return _57540_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdace76_builtinCallerLen(jule::Ptr<_1abcbd5c3_Eval>& _58826_e, jule::Ptr<_1ab076eba_FnCallExpr>& _58841_fc, jule::Ptr<_1abcbba55_Data>& _58863_d) {
	if ((_58841_fc.get()._field_Args.len() < 1LL)) {
		_1abcbdace_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_58841_fc.get()._field_Args.len() > 1LL)) {
		_1abcbdace_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _59613_dest = _1abcd8ee5_evalExpr(_58826_e, _58841_fc.get()._field_Args[0LL]);;
	{
		
		if ((_59613_dest == nullptr)) {
			_case_begin_1bc57782d:;
			{
				return nullptr;;
			}
		}
		else if (_59613_dest.get()._field_Decl) {
			_case_begin_1bc577894:;
			{
				_1abcbdace_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1abceace8_Slc(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc577685:;
			{
				return _1abdac0b8_callerLenSlice(_59613_dest,_58863_d);;
			}
		}
		else if ((_1abceaa84_Arr(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc57770c:;
			{
				return _1abdac74a_callerLenArr(_59613_dest,_58863_d);;
			}
		}
		else if ((_1abceb799_Map(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc57691a:;
			{
				return _1abdac409_callerLenMap(_59613_dest,_58863_d);;
			}
		}
		else if (((_1abce9d6e_Prim(_59613_dest.get()._field_Kind.ptr()) != nullptr) && _1abd00968_IsStr(_1abce9d6e_Prim(_59613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1bc576981:;
			{
				return _1abdaca8b_callerLenStr(_59613_dest,_58863_d);;
			}
		}
		else {
			_case_begin_1bc5768a4:;
			{
				_1abcbdace_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc57683d:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abdad2b7_callerCapSlice(jule::Ptr<_1abcbba55_Data>& _61724_expr, jule::Ptr<_1abcbba55_Data>& _61742_d) {
	_61742_d.get()._field_Kind=_1abcb5ca2_lenKind();
	_61742_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba9938d_BuiltinCapCallExprModel>(_1aba9938d_BuiltinCapCallExprModel{._field_Expr=_61724_expr}), &__jule_any_type124);
	return _61742_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdad608_callerCapStr(jule::Ptr<_1abcbba55_Data>& _62522_expr, jule::Ptr<_1abcbba55_Data>& _62540_d) {
	_62540_d.get()._field_Kind=_1abcb5ca2_lenKind();
	if (_1abcbc418_IsConst(_62522_expr.ptr())) {
		_62540_d.get()._field_Constant=static__1aba86d81_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1aba87c2d_ReadStr(_62522_expr.get()._field_Constant.ptr()).cap())));
		_62540_d.get()._field_Model=jule::Any(_62540_d.get()._field_Constant, &__jule_any_type49);
	} else {
		_62540_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba9938d_BuiltinCapCallExprModel>(_1aba9938d_BuiltinCapCallExprModel{._field_Expr=_62522_expr}), &__jule_any_type124);
	};
	return _62540_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdad9e3_builtinCallerCap(jule::Ptr<_1abcbd5c3_Eval>& _63826_e, jule::Ptr<_1ab076eba_FnCallExpr>& _63841_fc, jule::Ptr<_1abcbba55_Data>& _63863_d) {
	if ((_63841_fc.get()._field_Args.len() < 1LL)) {
		_1abcbdace_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_63841_fc.get()._field_Args.len() > 1LL)) {
		_1abcbdace_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _64613_dest = _1abcd8ee5_evalExpr(_63826_e, _63841_fc.get()._field_Args[0LL]);;
	{
		
		if ((_64613_dest == nullptr)) {
			_case_begin_1bc58267e:;
			{
				return nullptr;;
			}
		}
		else if (_64613_dest.get()._field_Decl) {
			_case_begin_1bc5826e5:;
			{
				_1abcbdace_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1abceace8_Slc(_64613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc5824d6:;
			{
				return _1abdad2b7_callerCapSlice(_64613_dest,_63863_d);;
			}
		}
		else if (((_1abce9d6e_Prim(_64613_dest.get()._field_Kind.ptr()) != nullptr) && _1abd00968_IsStr(_1abce9d6e_Prim(_64613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1bc58254c:;
			{
				return _1abdad608_callerCapStr(_64613_dest,_63863_d);;
			}
		}
		else {
			_case_begin_1bc581705:;
			{
				_1abcbdace_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc58168e:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abdade77_callerDeleteMap(jule::Ptr<_1abcbd5c3_Eval>& _66325_e, jule::Ptr<_1ab076eba_FnCallExpr>& _66340_fc, jule::Ptr<_1abcbba55_Data>& _66362_expr, jule::Ptr<_1abcbba55_Data>& _66380_d) {
	if ((!(_66362_expr.get()._field_Mutable))) {
		_1abcbdace_pushErr(_66325_e.ptr(), _66340_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	_66380_d=_1abce4363_buildVoidData();
	jule::Ptr<_1aba99a42_BuiltinDeleteCallExprModel> _66813_model = jule::new_ptr<_1aba99a42_BuiltinDeleteCallExprModel>(_1aba99a42_BuiltinDeleteCallExprModel{._field_Dest=_66362_expr, });;
	if ((_66340_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1abcbba55_Data> _67217_key = _1abcd8ee5_evalExpr(_66325_e, _66340_fc.get()._field_Args[1LL]);;
		{
			
			if ((_67217_key == nullptr)) {
				_case_begin_1bc588d17:;
				{
					return nullptr;;
				}
			}
			else if (_67217_key.get()._field_Decl) {
				_case_begin_1bc587640:;
				{
					_1abcbdace_pushErr(_66325_e.ptr(), _66340_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1bc5875c9:;
				{
					;
					jule::Ptr<_1abce79d7_TypeKind> _68121_keyType = _1abceb799_Map(_66362_expr.get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_1abc60a93_checkAssignType(_66325_e.get()._field_s, false,_68121_keyType,_67217_key,_66340_fc.get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1bc587563:;
		};
		_66813_model.get()._field_Key=_67217_key;
	};
	_66380_d.get()._field_Model=jule::Any(_66813_model, &__jule_any_type34);
	return _66380_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdae362_builtinCallerDelete(jule::Ptr<_1abcbd5c3_Eval>& _69229_e, jule::Ptr<_1ab076eba_FnCallExpr>& _69244_fc, jule::Ptr<_1abcbba55_Data>& _69266_d) {
	if ((_69244_fc.get()._field_Args.len() < 1LL)) {
		_1abcbdace_pushErr(_69229_e.ptr(), _69244_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_69244_fc.get()._field_Args.len() > 2LL)) {
		_1abcbdace_pushErr(_69229_e.ptr(), _69244_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _70013_dest = _1abcd8ee5_evalExpr(_69229_e, _69244_fc.get()._field_Args[0LL]);;
	{
		
		if ((_70013_dest == nullptr)) {
			_case_begin_1bc58e3b1:;
			{
				return nullptr;;
			}
		}
		else if (_70013_dest.get()._field_Decl) {
			_case_begin_1bc58e427:;
			{
				_1abcbdace_pushErr(_69229_e.ptr(), _69244_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1abceb799_Map(_70013_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc58e218:;
			{
				return _1abdade77_callerDeleteMap(_69229_e,_69244_fc,_70013_dest,_69266_d);;
			}
		}
		else {
			_case_begin_1bc58d437:;
			{
				_1abcbdace_pushErr(_69229_e.ptr(), _69244_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc58d3c1:;
	};
}



inline jule::Ptr<_1abcbba55_Data> _1abdae74c_builtinCallerClone(jule::Ptr<_1abcbd5c3_Eval>& _71528_e, jule::Ptr<_1ab076eba_FnCallExpr>& _71543_fc, jule::Ptr<_1abcbba55_Data>& ) {
	if ((_71543_fc.get()._field_Args.len() < 1LL)) {
		_1abcbdace_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_71543_fc.get()._field_Args.len() > 1LL)) {
		_1abcbdace_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _72413_d = _1abcd88c9_evalExprKind(_71528_e, _71543_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_72413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1abce9896_SupportsCloning(_72413_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1abceace8_Slc(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1abceb799_Map(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1abceaa84_Arr(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1abcea0d3_Sptr(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1bc5945a3:;
				{
					{
						_1abcbdace_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
					};
				}
			}
			else if ((_1abceb2c1_Struct(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1bc593e10:;
				{
					{
						_1abcbdace_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(jule::Str("Clone", 5), &__jule_any_type77)}));
					};
				}
			}
			else {
				_case_begin_1bc593d99:;
				{
					{
						_1abcbdace_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_1abce7dd3_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(jule::Str("Clone", 5), &__jule_any_type77)}));
					};
				}
			}
			_match_end_1bc5939d1:;
		};
	};
	_72413_d.get()._field_Mutable=true;
	_72413_d.get()._field_Model=jule::Any(jule::new_ptr<_1aba97633_BuiltinCloneCallExprModel>(_1aba97633_BuiltinCloneCallExprModel{._field_Expr=_72413_d.get()._field_Model}), &__jule_any_type28);
	return _72413_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdaed13_builtinCallerAssert(jule::Ptr<_1abcbd5c3_Eval>& _75729_e, jule::Ptr<_1ab076eba_FnCallExpr>& _75744_fc, jule::Ptr<_1abcbba55_Data>& ) {
	if ((_75744_fc.get()._field_Args.len() < 1LL)) {
		_1abcbdace_pushErr(_75729_e.ptr(), _75744_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_75744_fc.get()._field_Args.len() > 2LL)) {
		_1abcbdace_pushErr(_75729_e.ptr(), _75744_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _76613_expr = _1abcd8ee5_evalExpr(_75729_e, _75744_fc.get()._field_Args[0LL]);;
	if ((_76613_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1abce9d6e_Prim(_76613_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1abd00704_IsBool(_1abce9d6e_Prim(_76613_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1abcbdace_pushErr(_75729_e.ptr(), _75744_fc.get()._field_Token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aba983ae_BuiltinAssertCallExprModel> _77513_model = jule::new_ptr<_1aba983ae_BuiltinAssertCallExprModel>(_1aba983ae_BuiltinAssertCallExprModel{._field_Token=_75744_fc.get()._field_Token, ._field_Expr=_76613_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if ((_75744_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1abcbba55_Data> _78317_log = _1abcd8ee5_evalExpr(_75729_e, _75744_fc.get()._field_Args[1LL]);;
		if ((_78317_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1abcbc418_IsConst(_78317_log.ptr()))) || (_1abce9d6e_Prim(_78317_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1abd00968_IsStr(_1abce9d6e_Prim(_78317_log.get()._field_Kind.ptr()).ptr()))))) {
			_1abcbdace_pushErr(_75729_e.ptr(), _75744_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type7),jule::Any(_1abce7dd3_Str(_78317_log.get()._field_Kind.ptr()), &__jule_any_type7)}));
			return nullptr;;
		};
		_77513_model.get()._field_Log=_1aba87c2d_ReadStr(_78317_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1abcbba55_Data> _79613_d = _1abce4363_buildVoidData();;
	_79613_d.get()._field_Model=jule::Any(_77513_model, &__jule_any_type32);
	return _79613_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdb0176_builtinCallerStdMemSizeOf(jule::Ptr<_1abcbd5c3_Eval>& _80135_e, jule::Ptr<_1ab076eba_FnCallExpr>& _80150_fc, jule::Ptr<_1abcbba55_Data>& ) {
	jule::Ptr<_1abcbba55_Data> _80213_result = jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_80150_fc.get()._field_Args.len() < 1LL)) {
		_1abcbdace_pushErr(_80135_e.ptr(), _80150_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type7)}));
		return _80213_result;;
	};
	if ((_80150_fc.get()._field_Args.len() > 1LL)) {
		_1abcbdace_pushErr(_80135_e.ptr(), _80150_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _81413_d = _1abcd88c9_evalExprKind(_80135_e, _80150_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_81413_d == nullptr)) {
		return _80213_result;;
	};
	_80213_result.get()._field_Model=jule::Any(jule::new_ptr<_1aba9a58c_SizeofExprModel>(_1aba9a58c_SizeofExprModel{._field_Expr=_81413_d.get()._field_Model}), &__jule_any_type125);
	return _80213_result;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdb0594_builtinCallerStdMemAlignOf(jule::Ptr<_1abcbd5c3_Eval>& _82336_e, jule::Ptr<_1ab076eba_FnCallExpr>& _82351_fc, jule::Ptr<_1abcbba55_Data>& ) {
	jule::Ptr<_1abcbba55_Data> _82413_result = jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_82351_fc.get()._field_Args.len() < 1LL)) {
		_1abcbdace_pushErr(_82336_e.ptr(), _82351_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type7)}));
		return _82413_result;;
	};
	if ((_82351_fc.get()._field_Args.len() > 1LL)) {
		_1abcbdace_pushErr(_82336_e.ptr(), _82351_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _83613_d = _1abcd88c9_evalExprKind(_82336_e, _82351_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_83613_d == nullptr)) {
		return _82413_result;;
	};
	_82413_result.get()._field_Model=jule::Any(jule::new_ptr<_1aba9a878_AlignofExprModel>(_1aba9a878_AlignofExprModel{._field_Expr=_83613_d.get()._field_Model}), &__jule_any_type126);
	return _82413_result;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdb09b2_builtinCallerStdMemFree(jule::Ptr<_1abcbd5c3_Eval>& _84533_e, jule::Ptr<_1ab076eba_FnCallExpr>& _84548_fc, jule::Ptr<_1abcbba55_Data>& ) {
	if ((_84548_fc.get()._field_Args.len() < 1LL)) {
		_1abcbdace_pushErr(_84533_e.ptr(), _84548_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_84548_fc.get()._field_Args.len() > 1LL)) {
		_1abcbdace_pushErr(_84533_e.ptr(), _84548_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _85413_d = _1abcd88c9_evalExprKind(_84533_e, _84548_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_85413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1abce9632_PerformsRC(_85413_d.get()._field_Kind.ptr())))) {
		_1abcbdace_pushErr(_84533_e.ptr(), _84548_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _86313_result = _1abce4363_buildVoidData();;
	_86313_result.get()._field_Model=jule::Any(jule::new_ptr<_1aba9b626_FreeExprModel>(_1aba9b626_FreeExprModel{._field_Expr=_85413_d.get()._field_Model}), &__jule_any_type35);
	return _86313_result;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdb0de1_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1abcbd5c3_Eval>& _86845_e, jule::Ptr<_1ab076eba_FnCallExpr>& _86860_fc, jule::Ptr<_1abcbba55_Data>& ) {
	if ((_86860_fc.get()._field_Args.len() < 1LL)) {
		_1abcbdace_pushErr(_86845_e.ptr(), _86860_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_86860_fc.get()._field_Args.len() > 1LL)) {
		_1abcbdace_pushErr(_86845_e.ptr(), _86860_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abcbba55_Data> _87713_d = _1abcd88c9_evalExprKind(_86845_e, _86860_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_87713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1abd1069d_isBuiltinStrConvertable(_87713_d.get()._field_Kind)))) {
		_1abcbdace_pushErr(_86845_e.ptr(), _86860_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1abcbba55_Data>(_1abcbba55_Data{._field_Kind=jule::new_ptr<_1abce79d7_TypeKind>(_1abce79d7_TypeKind{._field_Kind=jule::Trait<_1abce75a8_Kind>(_1abd10cca_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=jule::Any(jule::new_ptr<_1aba9ae72_IntegratedToStrExprModel>(_1aba9ae72_IntegratedToStrExprModel{._field_Expr=_87713_d.get()._field_Model}), &__jule_any_type127), });;
}



inline jule::Ptr<_1abcbba55_Data> _1abdb130e_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1abcbd5c3_Eval>& _89544_e, jule::Ptr<_1ab076eba_FnCallExpr>& _89559_fc, jule::Ptr<_1abcbba55_Data>& _89581_d) {
	if ((!(_1abcbe519_isUnsafe(_89544_e.ptr())))) {
		_1abcbdace_pushErr(_89544_e.ptr(), _89559_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_89559_fc.get()._field_Args.len() < 1LL)) {
		_1abcbdace_pushErr(_89544_e.ptr(), _89559_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type7)}));
		return nullptr;;
	};
	jule::Ptr<_1abcbba55_Data> _90513_argd = _1abcd8ee5_evalExpr(_89544_e, _89559_fc.get()._field_Args[0LL]);;
	if ((_90513_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1abce9d6e_Prim(_90513_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1abd00968_IsStr(_1abce9d6e_Prim(_90513_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1abcbdace_pushErr(_89544_e.ptr(), _89559_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type101),jule::Any(_1abce7dd3_Str(_90513_argd.get()._field_Kind.ptr()), &__jule_any_type7)}));
		return nullptr;;
	};
	if (((!(_1abcbc418_IsConst(_90513_argd.ptr()))) || (!(_1aba88ed7_IsStr(_90513_argd.get()._field_Constant.ptr()))))) {
		_1abcbdace_pushErr(_89544_e.ptr(), _89559_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abcbba55_Data> _92013_r = _1abce4363_buildVoidData();;
	jule::Ptr<_1abaa1d79_FnIns> _92213_f = _1abceb05c_Fn(_89581_d.get()._field_Kind.ptr());;
	if ((_92213_f.get()._field_Generics.len() > 0LL)) {
		_92013_r.get()._field_Kind=_92213_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1aba9b33a_BackendEmitExprModel> _92713_model = jule::new_ptr<_1aba9b33a_BackendEmitExprModel>(_1aba9b33a_BackendEmitExprModel{._field_Code=_1aba87c2d_ReadStr(_90513_argd.get()._field_Constant.ptr()), });;
	if ((_89559_fc.get()._field_Args.len() > 1LL)) {
		_92713_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, (_89559_fc.get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = _89559_fc.get()._field_Args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1bc5c2a43:;
			if (it != expr.end()) {
				jule::Ptr<_1ab072ed8_Expr> _93321_arg = *it;
				{
					_90513_argd=_1abcd88c9_evalExprKind(_89544_e, _93321_arg.get()._field_Kind);
					if ((_90513_argd == nullptr)) {
						return nullptr;;
					};
					_92713_model.get()._field_Exprs = jule::alloc_for_append(_92713_model.get()._field_Exprs,1);_92713_model.get()._field_Exprs.__push(_90513_argd.get()._field_Model);;
				}
				_iter_next_1bc5c2a43:;
				++it;
				goto _iter_begin_1bc5c2a43;
			}
			_iter_end_1bc5c2a43:;
		};
	};
	_92013_r.get()._field_Model=jule::Any(_92713_model, &__jule_any_type26);
	return _92013_r;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdb174e_builtinCallerStdDebugOut(jule::Ptr<_1abcbd5c3_Eval>& _94634_e, jule::Ptr<_1ab076eba_FnCallExpr>& _94649_fc, jule::Ptr<_1abcbba55_Data>& _94671_d) {
	_94671_d=_1abda97ad_builtinCallerOut(_94634_e,_94649_fc,_94671_d);
	if ((_94671_d == nullptr)) {
		return nullptr;;
	};
	_94671_d.get()._field_Model.cast_ptr<_1aba96e29_BuiltinOutCallExprModel>(&__jule_any_type29).get()._field_Debug=true;
	return _94671_d;;
}



inline jule::Ptr<_1abcbba55_Data> _1abdb1b39_builtinCallerStdDebugOutln(jule::Ptr<_1abcbd5c3_Eval>& _95536_e, jule::Ptr<_1ab076eba_FnCallExpr>& _95551_fc, jule::Ptr<_1abcbba55_Data>& _95573_d) {
	_95573_d=_1abda9b98_builtinCallerOutln(_95536_e,_95551_fc,_95573_d);
	if ((_95573_d == nullptr)) {
		return nullptr;;
	};
	_95573_d.get()._field_Model.cast_ptr<_1aba97314_BuiltinOutlnCallExprModel>(&__jule_any_type30).get()._field_Debug=true;
	return _95573_d;;
}



inline jule::Bool _1ab7922a6_FindModuleFile(jule::Slice<jule::Ptr<_1d95ba601_DirEntry>>& _1220_dirents) {
	{
		auto &expr = _1220_dirents;
		auto it = expr.begin();
		_iter_begin_1bc5c8274:;
		if (it != expr.end()) {
			jule::Ptr<_1d95ba601_DirEntry> &_1312_d = *it;
			{
				if (((!(_1d95bace9_IsDir(_1312_d.get()._field_Stat.ptr()))) && (_1312_d.get()._field_Name == jule::Str("jule.mod", 8)))) {
					return true;;
				};
			}
			_iter_next_1bc5c8274:;
			++it;
			goto _iter_begin_1bc5c8274;
		}
		_iter_end_1bc5c8274:;
	};
	return false;;
}



inline jule::Str _1ab79244e_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1d95ba601_DirEntry>> _2617_dirents = ({
				auto except = static__1a791a17a_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1bc5c9088;
				} jule::Slice<jule::Ptr<_1d95ba601_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _1ab7922a6_FindModuleFile(_2617_dirents);;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_1a7917dd1_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1bc5c9088;
			};
		}
	_iter_next_1bc5c9088:;
	}
	_iter_end_1bc5c9088:;;
	return jule::Str();;
}



inline jule::Slice<_1a7995777_Log> _1ab7926e6_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__1d95bb404_Read(_1a7917276_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1a7995777_Log>::make({_1a7995777_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _1a79151ec_Trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_1a7995777_Log>::make({_1a7995777_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac4c8ad0_FileInfo> _1ac52063d_ParseFile(jule::Ptr<_1a9728b57_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac4c8ad0_FileInfo> _2713_finf = jule::new_ptr<_1ac4c8ad0_FileInfo>();;
	({
		__jule_tuple_x_1ab039532_Ast__jule_tuple_s_1a7995777_Log __jule_assign_result = _1ac520bc1_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_1ab039532_Ast__jule_tuple_s_1a7995777_Log _1ac520bc1_parseFileset(jule::Ptr<_1a9728b57_File> _5521_f) {
	__jule_tuple_x_1ab039532_Ast__jule_tuple_s_1a7995777_Log __jule_func_result;
	jule::Ptr<_1ac53e66d_parser> _5613_p = jule::new_ptr<_1ac53e66d_parser>();;
	_1ac54e040_parse(_5613_p, _5521_f);
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab07d950_ScopeTree> _1ac52162d_newScope(void) {
	return jule::new_ptr<_1ab07d950_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1ac5218d6_isSt(jule::Ptr<_1a97237bc_Token> _499_current, jule::Ptr<_1a97237bc_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return __jule_func_result;;
}



inline jule::Bool _1ac521c27_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a97237bc_Token>>& _5526_tokens, jule::I64& _5545_i) {
	if (((_5545_i > 1LL) && (_5526_tokens[(_5545_i - 2LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1a97237bc_Token> _6113_prev = _5526_tokens[(_5545_i - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _1a97242b2_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < _5526_tokens[_5545_i].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1ac5220ac_nextStPos(jule::Slice<jule::Ptr<_1a97237bc_Token>>& _7015_tokens, jule::I64 _7033_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _7113_braceN = 0LL;;
	jule::I64 _7213_i = _7033_start;;
	for (; (_7213_i < _7015_tokens.len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_1a97237bc_Token> _7613_tok = _7015_tokens[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1bc658854:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1bc65ac85:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_1ac521c27_prevIsIncompleteExpr(_7015_tokens,_7213_i)))) {
											({
												__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac5218d6_isSt(_7613_tok,_7015_tokens[(_7213_i - 1LL)]);
												_7417_ok = __jule_assign_result.__jule_result_arg0;
												_7517_terminated = __jule_assign_result.__jule_result_arg1;
											});
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_1bc65914b:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < _7015_tokens.len()))) {
										({
											__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac5218d6_isSt(_7015_tokens[(_7213_i + 1LL)],_7613_tok);
											_7417_ok = __jule_assign_result.__jule_result_arg0;
											_7517_terminated = __jule_assign_result.__jule_result_arg1;
										});
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1bc658e81:;
						};
						goto _iter_next_1bc65705b;
					}
				}
				_match_end_1bc6587ee:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_1bc65705b;
			};
			if ((_7213_i > _7033_start)) {
				if (_1ac521c27_prevIsIncompleteExpr(_7015_tokens,_7213_i)) {
					goto _iter_next_1bc65705b;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac5218d6_isSt(_7613_tok,_7015_tokens[(_7213_i - 1LL)]);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac5218d6_isSt(_7613_tok,_7613_tok);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7417_ok))) {
				goto _iter_next_1bc65705b;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7213_i;
			__jule_func_result.__jule_result_arg1 = _7517_terminated;
			return __jule_func_result;;
		}
	_iter_next_1bc65705b:;
	}
	_iter_end_1bc65705b:;;
	__jule_func_result.__jule_result_arg0 = _7213_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a97237bc_Token__jule_tuple_bool _1ac5223ed_skipSt(jule::I64& _13216_i, jule::Slice<jule::Ptr<_1a97237bc_Token>> _13228_tokens) {
	__jule_tuple_sx_1a97237bc_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1339_start = _13216_i;;
	jule::Bool _13413_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ac5220ac_nextStPos(_13228_tokens,_1339_start);
		_13216_i = __jule_assign_result.__jule_result_arg0;
		_13413_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1a97237bc_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start,_13216_i);;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1a97237bc_Token__jule_tuple_bool __jule_assign_result = _1ac5223ed_skipSt(_13216_i,_13228_tokens);
				_13613_stTokens = __jule_assign_result.__jule_result_arg0;
				_13413_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13613_stTokens;
			__jule_func_result.__jule_result_arg1 = _13413_terminated;
			return __jule_func_result;;
		};
		_13613_stTokens=_13613_stTokens.slice(0LL,(_13613_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13613_stTokens;
	__jule_func_result.__jule_result_arg1 = _13413_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1ac5226ea_stmt>> _1ac522a91_splitStmts(jule::Slice<jule::Ptr<_1a97237bc_Token>>& _15420_tokens) {
	jule::Slice<jule::Ptr<_1ac5226ea_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_1ac5226ea_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _15613_pos = 0LL;;
	while ((_15613_pos < _15420_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_1a97237bc_Token>> _15818_stmt;;
			jule::Bool _15824_terminated = false;;
			({
				__jule_tuple_sx_1a97237bc_Token__jule_tuple_bool __jule_assign_result = _1ac5223ed_skipSt(_15613_pos,_15420_tokens);
				_15818_stmt = __jule_assign_result.__jule_result_arg0;
				_15824_terminated = __jule_assign_result.__jule_result_arg1;
			});
			_15513_stmts = jule::alloc_for_append(_15513_stmts,1);_15513_stmts.__push(jule::new_ptr<_1ac5226ea_stmt>(_1ac5226ea_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated}));;
		}
	_iter_next_1bc6638d6:;
	}
	_iter_end_1bc6638d6:;;
	return _15513_stmts;;
}



inline jule::Bool _1ac53927d_isTypeOp(jule::Str& _88814_kind) {
	return (((_88814_kind == jule::Str("&", 1)) || (_88814_kind == jule::Str("&&", 2))) || (_88814_kind == jule::Str("*", 1)));;
}



inline jule::Bool _1ac539569_isTypeRange(jule::Slice<jule::Ptr<_1a97237bc_Token>>& _89521_tokens) {
	jule::Bool _89613_op = false;;
	{
		auto &expr = _89521_tokens;
		auto it = expr.begin();
		_iter_begin_1bc723e08:;
		if (it != expr.end()) {
			jule::I64 _8979_i = it - expr.begin();
			jule::Ptr<_1a97237bc_Token> _89712_token = *it;
			{
				if ((_89712_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					if ((_89712_token.get()._field_Kind == jule::Str("[", 1))) {
						if (_89613_op) {
							return true;;
						};
						jule::I64 _90325_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_1a97237bc_Token>> _90425_lTokens = _89521_tokens.slice(_8979_i);;
						{
							auto &expr = _90425_lTokens;
							auto it = expr.begin();
							_iter_begin_1bc72527d:;
							if (it != expr.end()) {
								jule::Ptr<_1a97237bc_Token> _90524_lToken = *it;
								{
									{
										auto &_match_expr{ _90524_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(3LLU)) {
											_case_begin_1bc726911:;
											{
												{
													auto &_match_expr{ _90524_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_1bc72726e:;
														{
															(_90325_rangeN)++;
															goto _iter_next_1bc72527d;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_1bc7272e6:;
														{
															(_90325_rangeN)--;
															goto _iter_next_1bc72527d;
														}
													}
													_match_end_1bc727093:;
												};
											}
										}
										_match_end_1bc7266be:;
									};
									if ((_90325_rangeN == 0LL)) {
										return _1ac53927d_isTypeOp(_90524_lToken.get()._field_Kind);;
									};
								}
								_iter_next_1bc72527d:;
								++it;
								goto _iter_begin_1bc72527d;
							}
							_iter_end_1bc72527d:;
						};
						return true;;
					};
				};
				if ((!(_1ac53927d_isTypeOp(_89712_token.get()._field_Kind)))) {
					return false;;
				};
				_89613_op=true;
			}
			_iter_next_1bc723e08:;
			++it;
			_8979_i++;
			goto _iter_begin_1bc723e08;
		}
		_iter_end_1bc723e08:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a97237bc_Token>> _1ac539811_getBlockExpr(jule::Slice<jule::Ptr<_1a97237bc_Token>>& _93322_tokens) {
	jule::I64 _93413_braceN = 0LL;;
	jule::I64 _93513_skipToNextBraceClose = 0LL;;
	{
		auto &expr = _93322_tokens;
		auto it = expr.begin();
		_iter_begin_1bc728a45:;
		if (it != expr.end()) {
			jule::I64 _9369_i = it - expr.begin();
			jule::Ptr<_1a97237bc_Token> _93612_tok = *it;
			{
				{
					auto &_match_expr{ _93612_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1bc729826:;
						{
							(_93513_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1bc72989d:;
						{
							{
								auto &_match_expr{ _93612_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1bc72a63a:;
									{
										if (((_93413_braceN > 0LL) || (_93513_skipToNextBraceClose > 0LL))) {
											if ((_93513_skipToNextBraceClose > 0LL)) {
												(_93513_skipToNextBraceClose)--;
											};
											(_93413_braceN)++;
											goto _match_end_1bc72a77d;
										};
										return _93322_tokens.slice(0LL,_9369_i);;
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1bc72acbc:;
									{
										(_93413_braceN)++;
									}
								}
								else {
									_case_begin_1bc72a7e4:;
									{
										(_93413_braceN)--;
									}
								}
								_match_end_1bc72a77d:;
							};
						}
					}
					_match_end_1bc72977c:;
				};
			}
			_iter_next_1bc728a45:;
			++it;
			_9369_i++;
			goto _iter_begin_1bc728a45;
		}
		_iter_end_1bc728a45:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a97237bc_Token__jule_tuple_sx_1a97237bc_Token _1ac539b96_splitDelim(jule::Slice<jule::Ptr<_1a97237bc_Token>>& _96420_tokens, jule::U64 _96438_delim) {
	__jule_tuple_sx_1a97237bc_Token__jule_tuple_sx_1a97237bc_Token __jule_func_result;
	jule::I64 _96513_rangeN = 0LL;;
	{
		auto &expr = _96420_tokens;
		auto it = expr.begin();
		_iter_begin_1bc72935e:;
		if (it != expr.end()) {
			jule::I64 _9669_i = it - expr.begin();
			jule::Ptr<_1a97237bc_Token> _96612_token = *it;
			{
				{
					auto &_match_expr{ _96612_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1bc72ceab:;
						{
							{
								auto &_match_expr{ _96612_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1bc72dc9d:;
									{
										(_96513_rangeN)++;
										goto _iter_next_1bc72935e;
									}
								}
								else {
									_case_begin_1bc72d8a2:;
									{
										(_96513_rangeN)--;
									}
								}
								_match_end_1bc72d6d7:;
							};
						}
					}
					else if (_match_expr == _96438_delim) {
						_case_begin_1bc72d033:;
						{
							if ((_96513_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1a97237bc_Token>> _98025_l = _96420_tokens.slice(0LL,_9669_i);;
								jule::Slice<jule::Ptr<_1a97237bc_Token>> _98125_r = _96420_tokens.slice((_9669_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _98025_l;
								__jule_func_result.__jule_result_arg1 = _98125_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1bc72cc7a:;
				};
			}
			_iter_next_1bc72935e:;
			++it;
			_9669_i++;
			goto _iter_begin_1bc72935e;
		}
		_iter_end_1bc72935e:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1ac539e3d_findLowestPrecOp(jule::Slice<jule::Ptr<_1a97237bc_Token>>& _99122_tokens) {
	jule::U8 _99613_prec = 255LLU;;
	jule::I64 _99713_precPos = -1LL;;
	jule::I64 _99913_braceN = 0LL;;
	jule::Bool _100013_skipToNextBraceOpen = false;;
	{
		auto &expr = _99122_tokens;
		auto it = expr.begin();
		_iter_begin_1bc7315a8:;
		if (it != expr.end()) {
			jule::I64 _10019_i = it - expr.begin();
			jule::Ptr<_1a97237bc_Token> &_100112_token = *it;
			{
				{
					
					if ((_100112_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1bc7322e0:;
						{
							{
								auto &_match_expr{ _100112_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1bc732e4a:;
									{
										_100013_skipToNextBraceOpen=false;
										goto _case_begin_1bc733676;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1bc733676:;
									{
										(_99913_braceN)++;
									}
								}
								else {
									_case_begin_1bc7331d1:;
									{
										(_99913_braceN)--;
									}
								}
								_match_end_1bc733016:;
							};
							goto _iter_next_1bc7315a8;
						}
					}
					else if (_100013_skipToNextBraceOpen) {
						_case_begin_1bc732367:;
						{
							goto _iter_next_1bc7315a8;
						}
					}
					else if ((_100112_token.get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1bc7323de:;
						{
							_100013_skipToNextBraceOpen=true;
							goto _iter_next_1bc7315a8;
						}
					}
					else if ((_10019_i == 0LL)) {
						_case_begin_1bc732466:;
						{
							goto _iter_next_1bc7315a8;
						}
					}
					else if ((_100112_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1bc7324dd:;
						{
							goto _iter_next_1bc7315a8;
						}
					}
					else if ((_99913_braceN > 0LL)) {
						_case_begin_1bc732565:;
						{
							goto _iter_next_1bc7315a8;
						}
					}
					_match_end_1bc73218b:;
				};
				jule::Ptr<_1a97237bc_Token> _102813_left = _99122_tokens[(_10019_i - 1LL)];;
				if (((_102813_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_102813_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1bc7315a8;
				};
				if ((((_10019_i > 1LL) && (_102813_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && (_102813_left.get()._field_Kind == jule::Str("]", 1)))) {
					jule::Ptr<_1a97237bc_Token> _103617_lleft = _99122_tokens[(_10019_i - 2LL)];;
					if (((_103617_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_103617_lleft.get()._field_Kind == jule::Str("[", 1)))) {
						if (((_100112_token.get()._field_Kind == jule::Str("&", 1)) || (_100112_token.get()._field_Kind == jule::Str("*", 1)))) {
							goto _iter_next_1bc7315a8;
						};
					};
				};
				jule::U8 _104513_p = _1a9723b74_Prec(_100112_token.ptr());;
				if (((_104513_p != 0LLU) && (_104513_p <= _99613_prec))) {
					_99613_prec=_104513_p;
					_99713_precPos=_10019_i;
				};
			}
			_iter_next_1bc7315a8:;
			++it;
			_10019_i++;
			goto _iter_begin_1bc7315a8;
		}
		_iter_end_1bc7315a8:;
	};
	return _99713_precPos;;
}



inline jule::Ptr<_1ab074b99_IdentExpr> _1ac53a1d5_buildIdentExpr(jule::Ptr<_1a97237bc_Token>& _105424_token) {
	return jule::new_ptr<_1ab074b99_IdentExpr>(_1ab074b99_IdentExpr{._field_Token=_105424_token, ._field_Ident=_105424_token.get()._field_Kind, ._field_CppLinked=false});;
}



inline __jule_tuple_sx_1a97237bc_Token__jule_tuple_int _1ac53a47c_getRangeExprTokens(jule::Slice<jule::Ptr<_1a97237bc_Token>>& _106228_tokens) {
	__jule_tuple_sx_1a97237bc_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _106313_rangeN = 0LL;;
	jule::I64 _106413_i = (_106228_tokens.len() - 1LL);;
	for (; (_106413_i >= 0LL); (_106413_i)--) {
		{
			jule::Ptr<_1a97237bc_Token> _106613_tok = _106228_tokens[_106413_i];;
			if ((_106613_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _106613_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1bc73bb13:;
						{
							(_106313_rangeN)++;
						}
					}
					else {
						_case_begin_1bc73b706:;
						{
							(_106313_rangeN)--;
						}
					}
					_match_end_1bc73b4e7:;
				};
			};
			if ((_106313_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = _106228_tokens.slice(0LL,_106413_i);
				__jule_func_result.__jule_result_arg1 = _106313_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1bc73a6d3:;
	}
	_iter_end_1bc73a6d3:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _106313_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1ac53b1d6_checkAssignTokens(jule::Slice<jule::Ptr<_1a97237bc_Token>>& _1623_tokens) {
	if (((_1623_tokens.len() == 0LL) || (!(_1a9727d65_IsAssign(_1623_tokens[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto &expr = _1623_tokens;
		auto it = expr.begin();
		_iter_begin_1bc7cb1ad:;
		if (it != expr.end()) {
			jule::Ptr<_1a97237bc_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1bc7cc445:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1bc7cc038:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1bc7cbd29:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1bc7cb1ad;
				} else if (((_2112_t.get()._field_Id == static_cast<jule::U64>(7LLU)) && _1a97283a4_IsAssignOp(_2112_t.get()._field_Kind))) {
					return true;;
				};
			}
			_iter_next_1bc7cb1ad:;
			++it;
			goto _iter_begin_1bc7cb1ad;
		}
		_iter_end_1bc7cb1ad:;
	};
	return false;;
}



inline _1a7995777_Log _1ac53c407_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_1a9728b57_File>& _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _1a7995777_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=_5233_f.get()._field_Path, ._field_Text=_1a7995bb7_Logf(_5243_fmt,_5256_args), };;
}



inline jule::Slice<jule::Ptr<_1a97237bc_Token>> _1ac53c8d0_range(jule::I64& _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_1a97237bc_Token>>& _7163_tokens) {
	if ((_7115_i >= _7163_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a97237bc_Token> _759_tok = _7163_tokens[_7115_i];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;;
	};
	(_7115_i)++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = _7115_i;;
	for (; ((_8013_rangeN != 0LL) && (_7115_i < _7163_tokens.len())); (_7115_i)++) {
		{
			jule::Ptr<_1a97237bc_Token> _8313_token = _7163_tokens[_7115_i];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1bc7d2c97:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1bc7d2d1e:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_1bc7d2a66:;
				};
			};
		}
	_iter_next_1bc7d1c96:;
	}
	_iter_end_1bc7d1c96:;;
	return _7163_tokens.slice(_819_start,(_7115_i - 1LL));;
}



inline __jule_tuple_sx_1a97237bc_Token__jule_tuple_sx_1a97237bc_Token _1ac53cb77_rangeLast(jule::Slice<jule::Ptr<_1a97237bc_Token>>& _10319_tokens) {
	__jule_tuple_sx_1a97237bc_Token__jule_tuple_sx_1a97237bc_Token __jule_func_result;
	if ((_10319_tokens.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _10319_tokens;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	} else if ((_10319_tokens[(_10319_tokens.len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		__jule_func_result.__jule_result_arg0 = _10319_tokens;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = (_10319_tokens.len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_1a97237bc_Token> _11213_token = _10319_tokens[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1bc7d70ba:;
						{
							(_10913_braceN)++;
							goto _iter_next_1bc7d3d20;
						}
					}
					else {
						_case_begin_1bc7d6bad:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_1bc7d699e:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = _10319_tokens.slice(0LL,_11013_i);
				__jule_func_result.__jule_result_arg1 = _10319_tokens.slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1bc7d3d20:;
	}
	_iter_end_1bc7d3d20:;;
	__jule_func_result.__jule_result_arg0 = _10319_tokens;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log _1ac53d062_partsKind(jule::Slice<jule::Ptr<_1a97237bc_Token>>& _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	__jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log __jule_func_result;
	if ((_13219_tokens.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _13713_parts = nullptr;;
	jule::Slice<_1a7995777_Log> _13813_errors = nullptr;;
	jule::I64 _14013_rangeN = 0LL;;
	jule::I64 _14113_last = 0LL;;
	{
		auto &expr = _13219_tokens;
		auto it = expr.begin();
		_iter_begin_1bc7d9cd2:;
		if (it != expr.end()) {
			jule::I64 _1429_i = it - expr.begin();
			jule::Ptr<_1a97237bc_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1bc7db465:;
							{
								(_14013_rangeN)++;
								goto _iter_next_1bc7d9cd2;
							}
						}
						else {
							_case_begin_1bc7db058:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_1bc7dad49:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_1bc7d9cd2;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_1a7995777_Log _16121_err = _1ac53c407_makeErr(_14212_token.get()._field_Row,_14212_token.get()._field_Column,_14212_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_13813_errors = jule::alloc_for_append(_13813_errors,1);_13813_errors.__push(_16121_err);;
					};
					_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last,_1429_i));;
					_14113_last=static_cast<jule::I64>((_1429_i + 1LL));
				};
			}
			_iter_next_1bc7d9cd2:;
			++it;
			_1429_i++;
			goto _iter_begin_1bc7d9cd2;
		}
		_iter_end_1bc7d9cd2:;
	};
	if ((_14113_last < _13219_tokens.len())) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last));;
	} else if ((!(_13254_expr_must))) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(jule::Slice<jule::Ptr<_1a97237bc_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _13713_parts;
	__jule_func_result.__jule_result_arg1 = _13813_errors;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log _1ac53d44c_parts(jule::Slice<jule::Ptr<_1a97237bc_Token>>& _18415_tokens, jule::U64 _18433_id, jule::Bool _18446_expr_must) {
	__jule_tuple_ssx_1a97237bc_Token__jule_tuple_s_1a7995777_Log __jule_func_result;
	if ((_18415_tokens.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a97237bc_Token>>> _18913_parts = nullptr;;
	jule::Slice<_1a7995777_Log> _19013_errors = nullptr;;
	jule::I64 _19213_rangeN = 0LL;;
	jule::I64 _19313_last = 0LL;;
	{
		auto &expr = _18415_tokens;
		auto it = expr.begin();
		_iter_begin_1bc7e14c0:;
		if (it != expr.end()) {
			jule::I64 _1949_i = it - expr.begin();
			jule::Ptr<_1a97237bc_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1bc7e2b53:;
							{
								(_19213_rangeN)++;
								goto _iter_next_1bc7e14c0;
							}
						}
						else {
							_case_begin_1bc7e2746:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_1bc7e2537:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_1bc7e14c0;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_1a7995777_Log _21321_err = _1ac53c407_makeErr(_19412_token.get()._field_Row,_19412_token.get()._field_Column,_19412_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19013_errors = jule::alloc_for_append(_19013_errors,1);_19013_errors.__push(_21321_err);;
					};
					_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last,_1949_i));;
					_19313_last=static_cast<jule::I64>((_1949_i + 1LL));
				};
			}
			_iter_next_1bc7e14c0:;
			++it;
			_1949_i++;
			goto _iter_begin_1bc7e14c0;
		}
		_iter_end_1bc7e14c0:;
	};
	if ((_19313_last < _18415_tokens.len())) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last));;
	} else if ((!(_18446_expr_must))) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(jule::Slice<jule::Ptr<_1a97237bc_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _18913_parts;
	__jule_func_result.__jule_result_arg1 = _19013_errors;
	return __jule_func_result;;
}



inline jule::Str _1ac53d6e4_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1bc7e6151:;
			{
				return jule::Str("(", 1);;
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1bc7e61b7:;
			{
				return jule::Str("{", 1);;
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1bc7e5e42:;
			{
				return jule::Str("[", 1);;
			}
		}
		else {
			_case_begin_1bc7e51e9:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bc7e5194:;
	};
}



inline _1a7995777_Log _1ac53dace_compilerErr(jule::Ptr<_1a97237bc_Token>& _24317_token, jule::Str& _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _1a7995777_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_24317_token.get()._field_Row, ._field_Column=_24317_token.get()._field_Column, ._field_Path=_24317_token.get()._field_File.get()._field_Path, ._field_Text=_1a7995bb7_Logf(_24333_fmt,_24346_args), ._field_Line=_1a9729d34_GetRow(_24317_token.get()._field_File.ptr(), _24317_token.get()._field_Row), };;
}



inline void _1ac53e00d_pushSuggestion(_1a7995777_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_1a7995bb7_Logf(_25441_fmt,_25454_args);
}



inline jule::Str _1ac53e2a5_tokstoa(jule::Slice<jule::Ptr<_1a97237bc_Token>>& _25813_tokens) {
	jule::I64 _25913_n = 0LL;;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_1bc7e8d13:;
		if (it != expr.end()) {
			jule::Ptr<_1a97237bc_Token> &_26012_token = *it;
			{
				_25913_n+=_26012_token.get()._field_Kind.len();
			}
			_iter_next_1bc7e8d13:;
			++it;
			goto _iter_begin_1bc7e8d13;
		}
		_iter_end_1bc7e8d13:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_1bc7e94b7:;
		if (it != expr.end()) {
			jule::Ptr<_1a97237bc_Token> &_26412_token = *it;
			{
				_26313_s+=_26412_token.get()._field_Kind;
			}
			_iter_next_1bc7e94b7:;
			++it;
			goto _iter_begin_1bc7e94b7;
		}
		_iter_end_1bc7e94b7:;
	};
	return _26313_s;;
}



inline jule::Bool _1ac54e31a_isPub(jule::Str& _203511_ident) {
	jule::I32 _203610_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a78cdbaa_DecodeRuneStr(_203511_ident);
		_203610_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1a77ebd70_IsUpper(_203610_r);;
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac54ebde_buildVoidType(void) {
	return jule::new_ptr<_1ab06d9b7_TypeDecl>();;
}



inline jule::Ptr<_1ab06d9b7_TypeDecl> _1ac54eded_buildPrimType(jule::Ptr<_1a97237bc_Token> _2322_t) {
	return jule::new_ptr<_1ab06d9b7_TypeDecl>(_1ab06d9b7_TypeDecl{._field_Token=_2322_t, ._field_Kind=jule::Any(jule::new_ptr<_1ab06e07d_IdentTypeDecl>(_1ab06e07d_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }), &__jule_any_type21)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1ab77eb01_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1bc998be9:;
			{
				__jule_func_result.__jule_result_arg0=_1a7998a88_IsWindows(_1a79ce162_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1bc998600:;
			{
				__jule_func_result.__jule_result_arg0=_1a7998d41_IsDarwin(_1a79ce162_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1bc998666:;
			{
				__jule_func_result.__jule_result_arg0=_1a79990d8_IsLinux(_1a79ce162_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1bc9986cc:;
			{
				__jule_func_result.__jule_result_arg0=_1a7999bdd_IsUnix(_1a79ce162_Os);
			}
		}
		else {
			_case_begin_1bc997da2:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1bc9982c0:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1ab77ed43_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1bc99aa97:;
			{
				__jule_func_result.__jule_result_arg0=_1a7999407_IsI386(_1a79a67dd_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1bc99ab0d:;
			{
				__jule_func_result.__jule_result_arg0=_1a799969e_IsAmd64(_1a79a67dd_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1bc99ab74:;
			{
				__jule_func_result.__jule_result_arg0=_1a7999946_IsArm64(_1a79a67dd_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1bc99abda:;
			{
				__jule_func_result.__jule_result_arg0=_1a799a309_Is64Bit(_1a79a67dd_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1bc99ac51:;
			{
				__jule_func_result.__jule_result_arg0=_1a799a062_Is32Bit(_1a79a67dd_Arch);
			}
		}
		else {
			_case_begin_1bc99a349:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1bc99a767:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab7800da_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1a7917a5c_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL,(_529_n - _1a791751d_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _1a7910acc_FindLastByte(_5029_p,'_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab77eb01_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab77ed43_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL,_6413_i);;
	_6413_i=static_cast<jule::I64>(_1a7910acc_FindLastByte(_5029_p,'_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab77eb01_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab77ed43_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab77ed43_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab77eb01_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab77eb01_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _1ab7812c8_setOsVars(jule::Slice<jule::Str>& _3619_vars) {
	_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(_1a79ce162_Os);;
	if (_1a7999bdd_IsUnix(_1a79ce162_Os)) {
		_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _1ab78152b_setArchVars(jule::Slice<jule::Str>& _4421_vars) {
	_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(_1a79a67dd_Arch);;
	if (_1a799a309_Is64Bit(_1a79a67dd_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x64", 3));;
	};
	if (_1a799a062_Is32Bit(_1a79a67dd_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _1ab7817d4_initVars(jule::Slice<jule::Str>& _5518_vars, _1ab780eba_CompileInfo& _5532_info) {
	_1ab7812c8_setOsVars(_5518_vars);
	_1ab78152b_setArchVars(_5518_vars);
	if (_5532_info._field_Prod) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("production", 10));;
	};
	if (_5532_info._field_Test) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5532_info._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1bc9a6d6c:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1bc9a6dd3:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1bc9a6861:;
	};
	{
		auto &_match_expr{ _5532_info._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1bc9a7730:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1bc9a7796:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bc9a780c:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1bc9a7e8e:;
	};
}



inline jule::Slice<jule::U8> _1ac31c281_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__1d95bb404_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_1a79e47a4_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1a7995777_Log _1ac3244ec_flatCompilerErr(jule::Str _4120_text) {
	return _1a7995777_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1ac2e9060_pushPasses(jule::Ptr<_1abc50d08_Package>& _11120_p, jule::Slice<jule::Str>& _11144_passes) {
	{
		auto &expr = _11120_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bc9dda96:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11217_f.get()._field_Passes;
					auto it = expr.begin();
					_iter_begin_1bc9de525:;
					if (it != expr.end()) {
						_1abaa6158_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1bc9de525;
							};
							{
								auto &expr = _11144_passes;
								auto it = expr.begin();
								_iter_begin_1bc9e04d2:;
								if (it != expr.end()) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1bc9de525;
										};
									}
									_iter_next_1bc9e04d2:;
									++it;
									goto _iter_begin_1bc9e04d2;
								}
								_iter_end_1bc9e04d2:;
							};
							_11144_passes = jule::alloc_for_append(_11144_passes,1);_11144_passes.__push(_11416_pass._field_Text);;
						}
						_iter_next_1bc9de525:;
						++it;
						goto _iter_begin_1bc9de525;
					}
					_iter_end_1bc9de525:;
				};
			}
			_iter_next_1bc9dda96:;
			++it;
			goto _iter_begin_1bc9dda96;
		}
		_iter_end_1bc9dda96:;
	};
}



inline jule::Slice<jule::Str> _1ac344e24_getAllUniquePasses(jule::Ptr<_1abc50d08_Package>& _12828_pkg, jule::Slice<jule::Ptr<_1abc4cd9e_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1ac2e9060_pushPasses(_12828_pkg,_12913_passes);
	{
		auto &expr = _12853_uses;
		auto it = expr.begin();
		_iter_begin_1bc9e1a55:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_1ac2e9060_pushPasses(_13217_u.get()._field_Package,_12913_passes);
				};
			}
			_iter_next_1bc9e1a55:;
			++it;
			goto _iter_begin_1bc9e1a55;
		}
		_iter_end_1bc9e1a55:;
	};
	return _12913_passes;;
}



inline _1ab780eba_CompileInfo _1ac366b6b_buildCompileInfo(void) {
	_1ab780eba_CompileInfo _14213_info = _1ab780eba_CompileInfo{._field_Prod=_1d7c0a98a_Production, ._field_Test=_1d7c0a02d_Test, };;
	{
		auto &_match_expr{ _1d7c08328_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1bc9e2db9:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1bc9e2e30:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1bc9e2d42:;
	};
	{
		auto &_match_expr{ _1d7c097e1_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1bc9e2638:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1bc9e32b5:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bc9e332b:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1bc9e3727:;
	};
	return _14213_info;;
}



inline void _1abc23e74_EliminateDefines(jule::Ptr<_1ac317732_IR>& _28526_ir) {
	jule::Ptr<_1abbde989_ObjectDeadCode> _28613_ocd = static__1abc21834_new(_28526_ir);;
	_1abc23baa_elimanate(_28613_ocd);
}



inline jule::Ptr<_1ab03a720_Directive> _1abc24309_findDirective(jule::Slice<jule::Ptr<_1ab03a720_Directive>>& _29123_directives, jule::Str _29154_tag) {
	{
		auto &expr = _29123_directives;
		auto it = expr.begin();
		_iter_begin_1bca32414:;
		if (it != expr.end()) {
			jule::Ptr<_1ab03a720_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;;
				};
			}
			_iter_next_1bca32414:;
			++it;
			goto _iter_begin_1bca32414;
		}
		_iter_end_1bca32414:;
	};
	return nullptr;;
}



inline jule::Bool _1abc2464a_hasDirective(jule::Slice<jule::Ptr<_1ab03a720_Directive>>& _30118_directives, jule::Str _30149_tag) {
	return (_1abc24309_findDirective(_30118_directives,_30149_tag) != nullptr);;
}



inline void _1abc28297_eliminateDeadCodeOfScope(jule::Ptr<_1ababdcdb_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1abac152a_Label>> _2429_labels = jule::Slice<jule::Ptr<_1abac152a_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1abac1816_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1abac1816_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1abc25393_scopeDeadCode> _24413_sdc = jule::new_ptr<_1abc25393_scopeDeadCode>(_1abc25393_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1abac152a_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1abac1816_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1abc27eab_optimizeStmts(_24413_sdc);
	};
}



inline void _1abc2852d_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1aba9e1c8_Fn>>& _25433_funcs) {
	{
		auto &expr = _25433_funcs;
		auto it = expr.begin();
		_iter_begin_1bca72256:;
		if (it != expr.end()) {
			jule::Ptr<_1aba9e1c8_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_Instances;
					auto it = expr.begin();
					_iter_begin_1bca74346:;
					if (it != expr.end()) {
						jule::Ptr<_1abaa1d79_FnIns> _25621_ins = *it;
						{
							_1abc28297_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1bca74346:;
						++it;
						goto _iter_begin_1bca74346;
					}
					_iter_end_1bca74346:;
				};
			}
			_iter_next_1bca72256:;
			++it;
			goto _iter_begin_1bca72256;
		}
		_iter_end_1bca72256:;
	};
}



inline void _1abc28770_eliminateFunctionsScopePackage(jule::Ptr<_1abc50d08_Package>& _26240_pkg) {
	{
		auto &expr = _26240_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bca747a8:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _26317_f = *it;
			{
				_1abc2852d_eliminateScopeFunctions(_26317_f.get()._field_Funcs);
			}
			_iter_next_1bca747a8:;
			++it;
			goto _iter_begin_1bca747a8;
		}
		_iter_end_1bca747a8:;
	};
}



inline void _1abc28a17_eliminateScopePackage(jule::Ptr<_1abc50d08_Package>& _26831_pkg) {
	_1abc28770_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1abc28c26_EliminateScopes(jule::Ptr<_1ac317732_IR>& _27325_ir) {
	jule::I64 _27413_i = (_27325_ir.get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1abc4cd9e_ImportInfo> _27617_u = _27325_ir.get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_1abc28a17_eliminateScopePackage(_27617_u.get()._field_Package);
			};
		}
	_iter_next_1bca75e5d:;
	}
	_iter_end_1bca75e5d:;;
	_1abc28a17_eliminateScopePackage(_27325_ir.get()._field_Main);
}



inline jule::Bool _1a9cae3da_isStdPackage(jule::Str _39817_f, jule::Str _39825_p) {
	return _1a78d463e_HasPrefix(_39817_f,_1a7917276_Join(jule::Slice<jule::Str>::make({_1a79cdccc_PathStdlib,_39825_p})));;
}



inline jule::Bool _1a9cca26e_isConstantValidConditionalCase(jule::Ptr<_1ababe1d7_If>& _40236_i) {
	{
		auto &_match_expr{ _40236_i.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1bcaea587:;
			{
				jule::Ptr<_1aba86b94_Const> _40513_c = _40236_i.get()._field_Expr.cast_ptr<_1aba86b94_Const>(&__jule_any_type49);;
				return (_1aba88cd9_IsBool(_40513_c.ptr()) && _1aba87aeb_ReadBool(_40513_c.ptr()));;
			}
		}
		_match_end_1bcaea411:;
	};
	return false;;
}



inline jule::Bool _1a9ce2cae_isUnreachableExpr(jule::Any& _41123_expr) {
	{
		auto &_match_expr{ _41123_expr };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1bcaeaec2:;
			{
				jule::Ptr<_1aba86b94_Const> _41413_c = _41123_expr.cast_ptr<_1aba86b94_Const>(&__jule_any_type49);;
				return (_1aba88cd9_IsBool(_41413_c.ptr()) && (!(_1aba87aeb_ReadBool(_41413_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bcaeb038:;
			{
				jule::Ptr<_1aba90de0_BinopExprModel> _41713_m = _41123_expr.cast_ptr<_1aba90de0_BinopExprModel>(&__jule_any_type119);;
				if ((_41713_m.get()._field_Op.get()._field_Kind == jule::Str("&&", 2))) {
					return (_1a9ce2cae_isUnreachableExpr(_41713_m.get()._field_Left.get()._field_Model) || _1a9ce2cae_isUnreachableExpr(_41713_m.get()._field_Right.get()._field_Model));;
				};
			}
		}
		_match_end_1bcaea642:;
	};
	return false;;
}



inline jule::Bool _1a9ce4ba1_isConstantValidMatchCase(jule::Ptr<_1abac3582_Case>& _42630_case) {
	{
		auto &expr = _42630_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1bcaed810:;
		if (it != expr.end()) {
			jule::Ptr<_1abcbba55_Data> &_42712_expr = *it;
			{
				if (((_1abcbc418_IsConst(_42712_expr.ptr()) && _1aba88cd9_IsBool(_42712_expr.get()._field_Constant.ptr())) && _1aba87aeb_ReadBool(_42712_expr.get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1bcaed810:;
			++it;
			goto _iter_begin_1bcaed810;
		}
		_iter_end_1bcaed810:;
	};
	return false;;
}



inline jule::Bool _1a9cee12d_isUnreachableConditionalCase(jule::Ptr<_1ababe1d7_If>& _43534_i) {
	return _1a9ce2cae_isUnreachableExpr(_43534_i.get()._field_Expr);;
}



inline jule::Bool _1a9d064ba_isUnreachableMatchCase(jule::Ptr<_1abac3582_Case>& _43928_case) {
	{
		auto &expr = _43928_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1bcb00d95:;
		if (it != expr.end()) {
			jule::Ptr<_1abcbba55_Data> &_44012_expr = *it;
			{
				if ((!(_1a9ce2cae_isUnreachableExpr(_44012_expr.get()._field_Model)))) {
					return false;;
				};
			}
			_iter_next_1bcb00d95:;
			++it;
			goto _iter_begin_1bcb00d95;
		}
		_iter_end_1bcb00d95:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1a9e6ab29_checkForBitShiftOpt(jule::Ptr<_1aba90928_OperandExprModel>& _45125_l, jule::Ptr<_1aba90928_OperandExprModel>& _45148_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1aba866bb_IsInt(_1abce7dd3_Str(_45125_l.get()._field_Kind.ptr())))) || (!(_1aba866bb_IsInt(_1abce7dd3_Str(_45148_r.get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _45148_r.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1bcb3d08b:;
			{
				goto _match_end_1bcb3da81;
			}
		}
		else {
			_case_begin_1bcb3dbd5:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1bcb3da81:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1aba880c4_AsU64(_45148_r.get()._field_Model.cast_ptr<_1aba86b94_Const>(&__jule_any_type49).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4659_j = _1aba53688_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4669_z = static_cast<jule::U64>(_4659_j);;
	if ((static_cast<jule::F64>(_4669_z) != _4659_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4669_z;
	return __jule_func_result;;
}



inline void _1a9e6dd08_PushOptLevel(jule::I64 _3217_level) {
	_1a976ca14_Copy=(_3217_level >= static_cast<jule::I64>(1LL));
	_1a9790bad_Deadcode=(_3217_level >= static_cast<jule::I64>(1LL));
	_1a97c6100_Append=(_3217_level >= static_cast<jule::I64>(1LL));
	_1a9873a4e_Math=(_3217_level >= static_cast<jule::I64>(1LL));
	_1a98a5454_Access=(_3217_level >= static_cast<jule::I64>(1LL));
	_1a98cd9aa_Inline=(_3217_level >= static_cast<jule::I64>(1LL));
	_1a98ce33a_Ptr=(_3217_level >= static_cast<jule::I64>(1LL));
	_1a98ce5d2_Cond=(_3217_level >= static_cast<jule::I64>(1LL));
}



inline void _1abbe89c6_detectEnabled(void) {
	_1abb87e1b_exprEnabled=(((_1a98ce33a_Ptr || _1a9873a4e_Math) || _1a98a5454_Access) || _1a98ce5d2_Cond);
	_1abb89428_scopeEnabled=((_1a98ce5d2_Cond || _1a97c6100_Append) || _1a976ca14_Copy);
}



inline void _1ac700554_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1a79e47a4_Exit(1LL);
}



inline jule::U64 _1ace10e1d_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::U64 _1ace1122b_unixYearToSeconds(jule::U64 _20122_y, jule::Bool& _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		_20140_leap=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if (_20140_leap) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));;
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		_20140_leap=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			_20140_leap=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			_20140_leap=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if (_20140_leap) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));;
}



inline jule::U64 _1ace115b1_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1bcbc2142:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1bcbc22c9:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1bcbc2340:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1bcbc23a6:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1bcbc241c:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1bcbc2483:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1bcbc24e9:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1bcbc2560:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1bcbc25c6:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1bcbc263c:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1bcbc26b4:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_1bcbc20dc:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;;
}



inline jule::Bool _1acd5997c_isCopyOptimizable(jule::Ptr<_1abcbba55_Data>& _75223_expr) {
	if ((!(_75223_expr.get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ _75223_expr.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1bcc70aa3:;
			{
				return false;;
			}
		}
		_match_end_1bcc70a4d:;
	};
	return true;;
}



inline jule::Bool _1acd59d12_isIterCopyOptimizable(jule::Ptr<_1abcbba55_Data>& _76327_expr, jule::Ptr<_1abc73ee6_Var>& _76341_v) {
	if (((!(_76327_expr.get()._field_Lvalue)) && (!(_1abce9159_Mutable(_76327_expr.get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!(_76341_v.get()._field_Mutable)) && (!(_76327_expr.get()._field_Mutable)));;
}



inline jule::Str _1acd68ccc_decomposeCommonEsq(jule::U8 _135823_b) {
	{
		auto &_match_expr{ _135823_b };
		
		if (_match_expr == '\\') {
			_case_begin_1bcd2c731:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1bcd2ccc5:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1bcd2cd3b:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1bcd2cda2:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1bcd2c9b7:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1bcd2ca2d:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1bcd2ca94:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1bcd2cb0a:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1bcd2d0e4:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1bcd2d15a:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_1bcd2c885:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bcd2c7b9:;
	};
}



inline jule::Str _1acd690b8_sbtoa(jule::U8 _138510_b) {
	if ((_138510_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_138510_b < 128LLU)) {
		jule::Str _139013_seq = _1acd68ccc_decomposeCommonEsq(_138510_b);;
		if ((!(_139013_seq.empty()))) {
			return _139013_seq;;
		};
		if (((32LL <= _138510_b) && (_138510_b <= 126LLU))) {
			return static_cast<jule::Str>(_138510_b);;
		};
	};
	jule::Str _13989_seq = _1aba81221_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_138510_b)),8LL);;
	if ((_13989_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _13989_seq);;
	};
	return (jule::Str("\\", 1) + _13989_seq);;
}



inline jule::Str _1acd69360_cstrBytes(jule::Slice<jule::U8> _140514_bytes) {
	jule::Str _140613_lit = jule::Str::alloc(0LL, _140514_bytes.len());;
	{
		auto &expr = _140514_bytes;
		auto it = expr.begin();
		_iter_begin_1bcd33bbb:;
		if (it != expr.end()) {
			jule::U8 &_140712_b = *it;
			{
				_140613_lit+=_1acd690b8_sbtoa(_140712_b);
			}
			_iter_next_1bcd33bbb:;
			++it;
			goto _iter_begin_1bcd33bbb;
		}
		_iter_end_1bcd33bbb:;
	};
	return _140613_lit;;
}



inline jule::Str _1acd6967e_cstrLit(jule::Slice<jule::U8> _141312_bytes) {
	return ((jule::Str("\"", 1) + _1acd69360_cstrBytes(_141312_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _1acd6998c_ftoa(jule::F64 _14179_f, jule::I64 _141717_bitsize) {
	if ((_141717_bitsize != 32LL)) {
		if ((_14179_f == static_cast<jule::F64>(static_cast<jule::I64>(_14179_f)))) {
			return _1acd69c34_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_14179_f)));;
		};
		if ((_14179_f == static_cast<jule::F64>(static_cast<jule::U64>(_14179_f)))) {
			return _1acd69ecb_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_14179_f)));;
		};
	};
	jule::Str _142613_m = _1ab5444dc_FmtFloat(_14179_f,'f',-1LL,_141717_bitsize);;
	if ((!(_1a791245d_Contains(_142613_m,jule::Str(".", 1))))) {
		_142613_m+=jule::Str(".0", 2);
	};
	return _142613_m;;
}



inline jule::Str _1acd69c34_itoa(jule::I64 _14339_x) {
	{
		
		if ((_14339_x == jule::MAX_I64)) {
			_case_begin_1bcd37296:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_14339_x == jule::MIN_I64)) {
			_case_begin_1bcd3730c:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_1bcd37153:;
	};
	jule::Str _14419_fmt = _1aba81353_FmtInt(_14339_x,10LL);;
	if (_1a799a309_Is64Bit(jule::Str("amd64", 5))) {
		return (_14419_fmt + jule::Str("LL", 2));;
	};
	return (_14419_fmt + jule::Str("L", 1));;
}



inline jule::Str _1acd69ecb_utoa(jule::U64 _14489_x) {
	{
		
		if ((_14489_x == jule::MAX_U64)) {
			_case_begin_1bcd38e68:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_1bcd38d69:;
	};
	jule::Str _14549_fmt = _1aba81221_FmtUint(_14489_x,10LL);;
	if (_1a799a309_Is64Bit(jule::Str("amd64", 5))) {
		return (_14549_fmt + jule::Str("LLU", 3));;
	};
	return (_14549_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _1acd6a383_isForwarded(jule::Ptr<_1ababdcdb_Scope>& _146117_s) {
	jule::Any _14629_last = _146117_s.get()._field_Stmts[(_146117_s.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _14629_last };
		
		if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bcd3a73e:;
			{
				{
					auto &_match_expr{ _14629_last.cast_ptr<_1abcbba55_Data>(&__jule_any_type25).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1bcd3b7d9:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1bcd3bba2:;
						{
							return false;;
						}
					}
					_match_end_1bcd3b8e9:;
				};
			}
		}
		else {
			_case_begin_1bcd3b025:;
			{
				return true;;
			}
		}
		_match_end_1bcd3ae48:;
	};
}



inline jule::Bool _1acd6a64c_isBuiltinCallHasDebuginf(jule::Ptr<_1aba92c5a_FnCallExprModel>& _147630_m) {
	if ((!(_1abaa3210_IsBuiltin(_147630_m.get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ _147630_m.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1bcd3be49:;
			{
				jule::Ptr<_1aba96753_CommonSubIdentExprModel> _148213_csie = _147630_m.get()._field_Expr.cast_ptr<_1aba96753_CommonSubIdentExprModel>(&__jule_any_type75);;
				return (_148213_csie.get()._field_Ident == jule::Str("swap", 4));;
			}
		}
		else {
			_case_begin_1bcd3b2ab:;
			{
				return false;;
			}
		}
		_match_end_1bcd3b256:;
	};
}



inline jule::Bool _1acd6a87d_isExprComesFromBind(jule::Ptr<_1abcbba55_Data>& _148925_d) {
	{
		auto &_match_expr{ _148925_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bcd3e248:;
			{
				return _148925_d.get()._field_Model.cast_ptr<_1abc73ee6_Var>(&__jule_any_type10).get()._field_CppLinked;;
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bcd3e2ae:;
			{
				return _148925_d.get()._field_Model.cast_ptr<_1aba95697_StructSubIdentExprModel>(&__jule_any_type73).get()._field_Owner.get()._field_Decl.get()._field_CppLinked;;
			}
		}
		else {
			_case_begin_1bcd3d885:;
			{
				return false;;
			}
		}
		_match_end_1bcd3d830:;
	};
}



inline jule::Bool _1acd6ab25_isAny(jule::Ptr<_1abce79d7_TypeKind>& _150115_t) {
	if ((_1abcea820_TypeEnum(_150115_t.ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1abcec734_Prim> _15059_prim = _1abce9d6e_Prim(_150115_t.ptr());;
	return ((_15059_prim != nullptr) && _1abd00bcc_IsAny(_15059_prim.ptr()));;
}



inline void _1ace1a862_iterFiles(jule::Ptr<_1abc50d08_Package>& _122519_pkg, jule::Fn<void(jule::Ptr<_1abcb6c2b_SymbolTable>&)> _122534_f) {
	{
		auto &expr = _122519_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bceb6a96:;
		if (it != expr.end()) {
			jule::Ptr<_1abcb6c2b_SymbolTable> _122617_file = *it;
			{
				_122534_f(_122617_file);
			}
			_iter_next_1bceb6a96:;
			++it;
			goto _iter_begin_1bceb6a96;
		}
		_iter_end_1bceb6a96:;
	};
}



inline jule::Str _1ace1ab4d_concatAllParts(jule::Slice<jule::Ptr<_1a97237bc_Token>> _123219_parts) {
	jule::I64 _123313_n = 0LL;;
	{
		auto &expr = _123219_parts;
		auto it = expr.begin();
		_iter_begin_1bceb7d72:;
		if (it != expr.end()) {
			jule::Ptr<_1a97237bc_Token> &_123412_part = *it;
			{
				_123313_n+=_123412_part.get()._field_Kind.len();
			}
			_iter_next_1bceb7d72:;
			++it;
			goto _iter_begin_1bceb7d72;
		}
		_iter_end_1bceb7d72:;
	};
	if ((_123313_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _124013_s = jule::Str::alloc(0LL, _123313_n);;
	{
		auto &expr = _123219_parts;
		auto it = expr.begin();
		_iter_begin_1bceb8dd9:;
		if (it != expr.end()) {
			jule::Ptr<_1a97237bc_Token> &_124112_p = *it;
			{
				_124013_s+=_124112_p.get()._field_Kind;
			}
			_iter_next_1bceb8dd9:;
			++it;
			goto _iter_begin_1bceb8dd9;
		}
		_iter_end_1bceb8dd9:;
	};
	return _124013_s;;
}



inline jule::Ptr<_1ab03a720_Directive> _1ace28a7e_findDirective(jule::Slice<jule::Ptr<_1ab03a720_Directive>>& _46523_directives, jule::Str _46554_tag) {
	{
		auto &expr = _46523_directives;
		auto it = expr.begin();
		_iter_begin_1bd0a7eb7:;
		if (it != expr.end()) {
			jule::Ptr<_1ab03a720_Directive> _46617_dr = *it;
			{
				if ((_46617_dr.get()._field_Tag.get()._field_Kind == _46554_tag)) {
					return _46617_dr;;
				};
			}
			_iter_next_1bd0a7eb7:;
			++it;
			goto _iter_begin_1bd0a7eb7;
		}
		_iter_end_1bd0a7eb7:;
	};
	return nullptr;;
}



inline jule::Bool _1ace28e14_hasDirective(jule::Slice<jule::Ptr<_1ab03a720_Directive>>& _47518_directives, jule::Str _47549_tag) {
	return (_1ace28a7e_findDirective(_47518_directives,_47549_tag) != nullptr);;
}



inline jule::Bool _1ace291ab_shouldInitialized(jule::Ptr<_1abce79d7_TypeKind>& _48227_t) {
	jule::Ptr<_1abcec734_Prim> _4839_prim = _1abce9d6e_Prim(_48227_t.ptr());;
	if ((_4839_prim != nullptr)) {
		return ((!(_1abd00bcc_IsAny(_4839_prim.ptr()))) && (!(_1abd00968_IsStr(_4839_prim.ptr()))));;
	};
	{
		
		if ((_1abcea0d3_Sptr(_48227_t.ptr()) != nullptr)) {
			_case_begin_1bd0aad66:;
			{
				return false;;
			}
		}
		else if ((_1abceb799_Map(_48227_t.ptr()) != nullptr)) {
			_case_begin_1bd0aa78e:;
			{
				return false;;
			}
		}
		else if ((_1abceace8_Slc(_48227_t.ptr()) != nullptr)) {
			_case_begin_1bd0aa816:;
			{
				return false;;
			}
		}
		else if ((_1abceb535_Trait(_48227_t.ptr()) != nullptr)) {
			_case_begin_1bd0aa88d:;
			{
				return false;;
			}
		}
		else if ((_1abceb05c_Fn(_48227_t.ptr()) != nullptr)) {
			_case_begin_1bd0aaa47:;
			{
				return false;;
			}
		}
		else if ((_1abceaa84_Arr(_48227_t.ptr()) != nullptr)) {
			_case_begin_1bd0aaaad:;
			{
				jule::Ptr<_1abd03ac0_Arr> _49917_arr = _1abceaa84_Arr(_48227_t.ptr());;
				return _1ace291ab_shouldInitialized(_49917_arr.get()._field_Elem);;
			}
		}
		else if ((_1abceb2c1_Struct(_48227_t.ptr()) != nullptr)) {
			_case_begin_1bd0aab24:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bd0aa0da:;
			{
				return true;;
			}
		}
		_match_end_1bd0aa085:;
	};
}



inline void _1a79221b5_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1a796e630_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_1a79221b5_printErrorMessage((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _1a797745c_HelpMap[0LL][0LL].len();;
	{
		auto &expr = _1a797745c_HelpMap;
		auto it = expr.begin();
		_iter_begin_1bc1623c4:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1bc1623c4:;
			++it;
			goto _iter_begin_1bc1623c4;
		}
		_iter_end_1bc1623c4:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _1a797745c_HelpMap;
		auto it = expr.begin();
		_iter_begin_1bc163c88:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_1a78d5002_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1bc163c88:;
			++it;
			_519_i++;
			goto _iter_begin_1bc163c88;
		}
		_iter_end_1bc163c88:;
	};
	jule::outln(_4913_s);
}



inline void _1a7977bcc_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_1a79221b5_printErrorMessage((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _1a796b84c_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1a796b97e_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1a7964746_tool(jule::Slice<jule::Str>& _9410_args) {
	if ((_9410_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9410_args.len() > 3LL)) {
		_1a79221b5_printErrorMessage((jule::Str("invalid command: ", 17) + _9410_args[3LL]));
		return;;
	};
	jule::Str _1059_cmd = _9410_args[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1bc16ac29:;
			{
				_1a796b84c_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1bc16a93d:;
			{
				_1a796b97e_toolDistarch();
			}
		}
		else {
			_case_begin_1bc1692bb:;
			{
				_1a79221b5_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1bc16a751:;
	};
}



inline void _1a7964878_julenv(jule::Slice<jule::Str>& _11712_args) {
	if ((_11712_args.len() > 2LL)) {
		_1a79221b5_printErrorMessage((jule::Str("invalid command: ", 17) + _11712_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
	jule::outln((jule::Str("default compiler: ", 18) + _1d7c08328_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _1d7c097e1_CppStd));
}



inline void _1a79796a1_mod(jule::Slice<jule::Str>& _1309_args) {
	if ((_1309_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1309_args.len() > 3LL)) {
		_1a79221b5_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1309_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1bc170118:;
			{
				({
					auto except = static__1d95bb9ba_Write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_1a79221b5_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1bc16d9eb:;
			{
				_1a79221b5_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[2LL]));
			}
		}
		_match_end_1bc16ec3e:;
	};
}



inline jule::Bool _1a798547b_processCommand(jule::Slice<jule::Str>& _15320_args) {
	{
		auto &_match_expr{ _15320_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1bc171746:;
			{
				_1a796e630_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1bc171b75:;
			{
				_1a7977bcc_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1bc171bdb:;
			{
				_1a7964746_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1bc171cc9:;
			{
				_1a7964878_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1bc171d40:;
			{
				_1a79796a1_mod(_15320_args);
			}
		}
		else {
			_case_begin_1bc171306:;
			{
				return false;;
			}
		}
		_match_end_1bc17123a:;
	};
	return true;;
}



inline void _1a79855ad_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _1d973e90c_Args();;
	if ((_18913_args.len() < 2LL)) {
		_1a79855ad_showInfo();
		return;;
	};
	if (_1a798547b_processCommand(_18913_args)) {
		return;;
	};
	_1ace5525e_compileCommand(_18913_args);
}



inline void _1ac960d03_init(void) {
	_1d7c08328_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_1d7cc668d_File> _1acbb904a_openOutput(jule::Str& _4316_path) {
	jule::Str _449_dir = _1a7917dd1_Dir(_4316_path);;
	({
		auto except = static__1d7ca5c11_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__1a791a389_Create(_449_dir);
				if (!except.ok()) {
					_1ac700554_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1d7ca6393_Create(_4316_path);
		(except.ok()) ? (except.result) : ({
			_1ac700554_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1ace38880_clearObjects(void) {
	({
		auto except = static__1d7cc8937_Remove(_1ac98583e_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1a791a598_Remove(_1acad222c_OutDir);
}



inline void _1acd22acc_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1a79e0915_Cmd> _7313_cmd = static__1a79e0d44_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=jule::Slice<jule::Str>::make({_7214_compiler});
	_7313_cmd.get()._field_Args=jule::append(_7313_cmd.get()._field_Args,_1a791211c_Split(_7229_compilerCmd,jule::Str(" ", 1),-1LL));
	jule::I64 _769_status = ({
		auto except = _1a79e10a8_Spawn(_7313_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL), &__jule_any_type2) == _match_expr) {
					_case_begin_1bc178eac:;
					{
						static__1ac6ece69_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type2) == _match_expr) {
					_case_begin_1bc178792:;
					{
						static__1ac6ece69_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL), &__jule_any_type2) == _match_expr) {
					_case_begin_1bc178a06:;
					{
						static__1ac6ece69_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type2) == _match_expr) {
					_case_begin_1bc178a6c:;
					{
						static__1ac6ece69_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1bc1788c4:;
					{
						static__1ac6ece69_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1bc17882a:;
			};
			_1ac700554_Throw(jule::Str());

			0LL;
		});
	});;
	if ((_769_status != 0LL)) {
		jule::Str _9313_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _1d7c08328_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1ac6ece69_Print(jule::Str("\033[31m", 5),_9313_errorMessage);
		_1ac700554_Throw(jule::Str());
	};
	_1ace38880_clearObjects();
}



inline jule::Bool _1acc9b968_isCppSourceFile(jule::Str _10420_path) {
	jule::I64 _1059_offset = _1a7910acc_FindLastByte(_10420_path,'.');;
	if ((_1059_offset == -1LL)) {
		return false;;
	};
	return _1a7988b66_IsValidCppExt(_10420_path.slice(_1059_offset));;
}



inline void _1ac7b7ad3_pushCompCmdClang(jule::Str& _11226_cmd) {
	_11226_cmd+=jule::Str("-Wno-everything ", 16);
	_11226_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1d7c097e1_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1bc177021:;
			{
				_11226_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1bd1b1004:;
			{
				_11226_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bd1b106a:;
			{
				_11226_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1bd1b0cd4:;
	};
	_11226_cmd+=jule::Str(" ", 1);
	if (_1d7c0a98a_Production) {
		_11226_cmd+=jule::Str("-O3 ", 4);
		_11226_cmd+=jule::Str("-flto ", 6);
		_11226_cmd+=jule::Str("-DNDEBUG ", 9);
		_11226_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11226_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1ace340ea_pushCompCmdGcc(jule::Str& _13824_cmd) {
	_13824_cmd+=jule::Str("-w ", 3);
	_13824_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1d7c097e1_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1bd1b1499:;
			{
				_13824_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1bd1b3798:;
			{
				_13824_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bd1b380e:;
			{
				_13824_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1bd1b3578:;
	};
	_13824_cmd+=jule::Str(" ", 1);
	if (_1d7c0a98a_Production) {
		_13824_cmd+=jule::Str("-O3 ", 4);
		_13824_cmd+=jule::Str("-DNDEBUG ", 9);
		_13824_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_13824_cmd+=jule::Str("-O0 ", 4);
	};
}



inline __jule_tuple_str__jule_tuple_str _1ac939bab_genCompileCmd(jule::Str _16418_sourcePath, jule::Ptr<_1ac317732_IR>& _16436_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str &_16510_compiler = _1d7c095c1_CompilerPath;;
	jule::Str _16613_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _1d7c08328_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1bd1b5657:;
			{
				_1ace340ea_pushCompCmdGcc(_16613_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1bd1b6702:;
			{
				_1ac7b7ad3_pushCompCmdClang(_16613_cmd);
			}
		}
		_match_end_1bd1b65c0:;
	};
	{
		auto &expr = _16436_ir.get()._field_Passes;
		auto it = expr.begin();
		_iter_begin_1bd1b70a4:;
		if (it != expr.end()) {
			jule::Str &_17612_pass = *it;
			{
				_16613_cmd+=_17612_pass;
				_16613_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1bd1b70a4:;
			++it;
			goto _iter_begin_1bd1b70a4;
		}
		_iter_end_1bd1b70a4:;
	};
	{
		auto &expr = _16436_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1bd1b7516:;
		if (it != expr.end()) {
			jule::Ptr<_1abc4cd9e_ImportInfo> &_18212_u = *it;
			{
				if ((_18212_u.get()._field_CppLinked && _1acc9b968_isCppSourceFile(_18212_u.get()._field_Path))) {
					_16613_cmd+=_18212_u.get()._field_Path;
					_16613_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1bd1b7516:;
			++it;
			goto _iter_begin_1bd1b7516;
		}
		_iter_end_1bd1b7516:;
	};
	if ((!(_1ace33072_Out.empty()))) {
		_16613_cmd+=jule::Str("-o ", 3);
		_16613_cmd+=_1ace33072_Out;
		_16613_cmd+=jule::Str(" ", 1);
	};
	_16613_cmd+=_16418_sourcePath;
	__jule_func_result.__jule_result_arg0 = _16510_compiler;
	__jule_func_result.__jule_result_arg1 = _16613_cmd;
	return __jule_func_result;;
}



inline jule::Str _1ac98583e_getCompilePath(void) {
	return _1a7917276_Join(jule::Slice<jule::Str>::make({_1acad222c_OutDir,_1acbb8500_OutName}));;
}



inline void _1acbbedec_applyTargetIndependentOptimizations(jule::Ptr<_1ac317732_IR>& _20545_ir) {
	jule::Ptr<_1abbab318_Optimizer> _20713_opt = static__1abb87a64_New(_20545_ir);;
	_1abbe2a14_Optimize(_20713_opt.ptr());
}



inline void _1acd381a8_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1d7c08328_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1bd1b801c:;
			{
				_1ac700554_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1bd1ba30a:;
			{
				if (_1d7c095c1_CompilerPath.empty()) {
					_1d7c095c1_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1bd1ba371:;
			{
				if (_1d7c095c1_CompilerPath.empty()) {
					_1d7c095c1_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1bd1ba294:;
			{
				_1ac700554_Throw((jule::Str("invalid option value for --compiler: ", 37) + _1d7c08328_Compiler));
			}
		}
		_match_end_1bd1ba0b8:;
	};
}



inline void _1ace43b10_checkTargetArch(jule::Str _22820_arch) {
	if ((((_22820_arch != jule::Str("amd64", 5)) && (_22820_arch != jule::Str("arm64", 5))) && (_22820_arch != jule::Str("i386", 4)))) {
		_1ac700554_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22820_arch));
	};
}



inline void _1ace47c02_checkTargetOs(jule::Str _23618_os) {
	if ((((_23618_os != jule::Str("windows", 7)) && (_23618_os != jule::Str("linux", 5))) && (_23618_os != jule::Str("darwin", 6)))) {
		_1ac700554_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23618_os));
	};
}



inline void _1acd364e7_checkTargetFlag(jule::Str& _24421_target) {
	if (_24421_target.empty()) {
		_1ac700554_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2499_parts = _1a791211c_Split(_24421_target,jule::Str("-", 1),-1LL);;
	if ((_2499_parts.len() != 2LL)) {
		_1ac700554_Throw((jule::Str("--target: undefined platform target format: ", 44) + _24421_target));
	};
	jule::Str _25410_os;;
	jule::Str _25414_arch;;
	({
		jule::Str ___jule_assign_arg = _2499_parts[0LL];
		jule::Str _1___jule_assign_arg = _2499_parts[1LL];
		_25410_os = ___jule_assign_arg;
		_25414_arch = _1___jule_assign_arg;
	});
	if ((_25410_os != jule::Str("native", 6))) {
		_1ace47c02_checkTargetOs(_25410_os);
		_1a79ce162_Os=_25410_os;
	};
	if ((_25414_arch != jule::Str("native", 6))) {
		_1ace43b10_checkTargetArch(_25414_arch);
		_1a79a67dd_Arch=_25414_arch;
	};
	_1ab445003_UpdateTarget();
}



inline void _1ace2ee1a_checkOptFlag(jule::Str& _26718_opt) {
	if (_26718_opt.empty()) {
		_1ac700554_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _26718_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1bd1c2da1:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1bd1c33ac:;
			{
				_1a9e6dd08_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1bd1c2bd6:;
			{
				_1ac700554_Throw((jule::Str("--opt: invalid optimization level: ", 35) + _26718_opt));
			}
		}
		_match_end_1bd1c2b81:;
	};
}



inline void _1ace54c86_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1d7c097e1_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bd1c3423:;
			{
				goto _match_end_1bd1c427b;
			}
		}
		else {
			_case_begin_1bd1c3d2a:;
			{
				_1ac700554_Throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _1d7c097e1_CppStd));
			}
		}
		_match_end_1bd1c427b:;
	};
}



inline jule::Slice<jule::Str> _1ace54db8_checkFlags(jule::Slice<jule::Str>& _29216_args) {
	jule::Str _29313_opt = jule::Str("L0", 2);;
	jule::Str _29413_target = jule::Str("native-native", 13);;
	jule::Ptr<_1ace50ea2_FlagSet> _29613_fs = static__1ace5128d_New();;
	_1bd1c6668_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1bd1c6668_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1bd1c6668_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1ace33072_Out)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1bd1d009a_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d7c09a11_Shadowing)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1bd1d009a_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d7c09c64_Transpilation)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1bd1c6668_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d7c08328_Compiler)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1bd1c6668_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d7c095c1_CompilerPath)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1bd1d009a_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d7c0a98a_Production)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1bd1d009a_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d7c0a2e7_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1bd1d009a_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d7c0a6c1_Safety)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1bd1c6668_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d7c097e1_CppStd)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1bd1d009a_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a976ca14_Copy)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1bd1d009a_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a9790bad_Deadcode)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1bd1d009a_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a97c6100_Append)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1bd1d009a_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a9873a4e_Math)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1bd1d009a_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a98a5454_Access)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1bd1d009a_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a98cd9aa_Inline)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1bd1d009a_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a98ce33a_Ptr)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1bd1d009a_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a98ce5d2_Cond)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _1ace520a2_Parse(_29613_fs.ptr(), _29216_args);
		(except.ok()) ? (except.result) : ({
			_1ac700554_Throw(except.error.cast<jule::Str>(&__jule_any_type7));

			nullptr;
		});
	});;
	_1acd381a8_checkCompilerFlag();
	_1ace54c86_checkCppStdFlag();
	_1acd364e7_checkTargetFlag(_29413_target);
	_1ace2ee1a_checkOptFlag(_29313_opt);
	return _31813_content;;
}



inline void _1ace54eea_setupSemaFlags(jule::I64& _33124_flags) {
	if (_1d7c09a11_Shadowing) {
		_33124_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1ac317732_IR> _1ace5512c_buildIr(jule::Slice<jule::Str>& _33713_args) {
	jule::Slice<jule::Str> _3389_content = _1ace54db8_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_1ace54eea_setupSemaFlags(_34013_semaFlags);
	if ((_3389_content.len() == 0LL)) {
		_1ac700554_Throw(_1a7995bb7_Logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_1ac700554_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a79177b5_Abs(_3389_content[0LL]);
		_34814_path = __jule_assign_result.__jule_result_arg0;
		_34820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34820_ok))) {
		_1ac700554_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_1d96aa317_Status> _3549_inf = ({
		auto except = static__1d7ca5c11_Of(_1a79cdccc_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1ac700554_Throw(_1a7995bb7_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_1d96aa317_Status>(nullptr);});
	});;
	if ((!(_1d95bace9_IsDir(_3549_inf.ptr())))) {
		_1ac700554_Throw(_1a7995bb7_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1ac317732_IR> _36214_ir;;
	jule::Slice<_1a7995777_Log> _36218_logs;;
	({
		__jule_tuple_x_1ac317732_IR__jule_tuple_s_1a7995777_Log __jule_assign_result = static__1ac479b80_Build(_34814_path,_34013_semaFlags);
		_36214_ir = __jule_assign_result.__jule_result_arg0;
		_36218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_1ac700554_Throw(_1a7995bb7_Logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_34814_path, &__jule_any_type7)})));
	};
	if ((_36218_logs != nullptr)) {
		static__1ac6eeb2a_PrintLogs(_36218_logs);
		_1ac700554_Throw(jule::Str());
	};
	return _36214_ir;;
}



inline void _1ace5525e_compileCommand(jule::Slice<jule::Str>& _37724_args) {
	_37724_args=_37724_args.slice(1LL);
	if ((_37724_args[0LL] == jule::Str("test", 4))) {
		_1d7c0a02d_Test=true;
		_37724_args=_37724_args.slice(1LL);
	};
	jule::Ptr<_1ac317732_IR> _38313_ir = _1ace5512c_buildIr(_37724_args);;
	;
	if ((!(_1d7c0a02d_Test))) {
		jule::Ptr<_1aba9e1c8_Fn> _38817_main = _1abc525ac_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
		if ((_38817_main == nullptr)) {
			_1ac700554_Throw(_1a7995bb7_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1acbbedec_applyTargetIndependentOptimizations(_38313_ir);
	_1ac426ac7_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1ac939bab_genCompileCmd(_1ac98583e_getCompilePath(),_38313_ir);
		_39910_compiler = __jule_assign_result.__jule_result_arg0;
		_39920_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1ace15c9c_ObjectCoder> _40113_oc = static__1acd774e4_New(_38313_ir,_1acda29e7_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_1d7c0a02d_Test) {
		jule::Ptr<_1acd6cb05_TestCoder> _40617_tc = static__1acd6d078_New(_40113_oc);;
		_1acd6e2aa_Serialize(_40617_tc);
	} else {
		_1ace1a4ee_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _1ac98583e_getCompilePath();;
	jule::Ptr<_1d7cc668d_File> _41313_file = _1acbb904a_openOutput(_4129_path);;
	({
		auto except = _1d7c8eed6_Write(_41313_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_1ac700554_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _1d7cc742a_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_1d7c09c64_Transpilation))) {
		_1acd22acc_compileIr(_39910_compiler,_39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1a79ced99_init();
	_1ab4a71db_init();
	_1ac960d03_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}