// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 18/5/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _220b5d6a7_Importer{};
struct _220c0aa2e_Kind{};
struct _220c2bc3c_Lookup{};
struct _202c5d9b2_CommonFlag{};
struct _21d376ce6_Range16;
struct _21d377269_Range32;
struct _21d3776dc_RangeTable;
struct _21d4387e2_acceptRange;
struct _21c49a844_lazyBuff;
struct _21b6d2351_DirEntry;
struct _21b71781a_Directory;
struct _21b6092ab_File;
struct _21c3cc820_Status;
struct _21d5402ab_Cmd;
struct _21d4e511d_Log;
struct _21d81d743_Token;
struct _21d823acd_File;
struct _21d825b35_kindPair;
struct _21d82b696_lex;
struct _21ee6c665_Ast;
struct _21ee6d314_Node;
struct _21ee6d710_Directive;
struct _21eea19a7_TypeDecl;
struct _21eea206d_IdentTypeDecl;
struct _21eea26bc_SubIdentTypeDecl;
struct _21eea2a74_NamespaceTypeDecl;
struct _21eea2d60_SptrTypeDecl;
struct _21eea325b_SlcTypeDecl;
struct _21eea3547_TupleTypeDecl;
struct _21eea3833_PtrTypeDecl;
struct _21eea3eb5_ArrTypeDecl;
struct _21eea4713_MapTypeDecl;
struct _21eea4aba_RetTypeDecl;
struct _21eea5ec8_Expr;
struct _21eea62b4_RangeExpr;
struct _21eea6869_UseExpr;
struct _21eea6b55_TupleExpr;
struct _21eea700c_LitExpr;
struct _21eea7716_UnsafeExpr;
struct _21eea7b89_IdentExpr;
struct _21eea8393_UnaryExpr;
struct _21eead5a7_VariadicExpr;
struct _21eead95e_CastExpr;
struct _21eeadd16_NsSelectionExpr;
struct _21eeae289_SubIdentExpr;
struct _21eeae70c_BinopExpr;
struct _21eeaed17_FnCallExpr;
struct _21eeb0796_FieldExprPair;
struct _21eeb0ee4_StructLit;
struct _21eeb1467_BraceLit;
struct _21eeb1c3c_KeyValPair;
struct _21eeb2424_SliceExpr;
struct _21eeb2c93_IndexingExpr;
struct _21eeb339d_SlicingExpr;
struct _21eeb3689_Constraint;
struct _21eeb3b0c_GenericDecl;
struct _21eeb3eb4_LabelSt;
struct _21eeb436b_GotoSt;
struct _21eeb4657_FallSt;
struct _21eeb4c62_AssignLeft;
struct _21eeb52a1_AssignSt;
struct _21eeb6192_Stmt;
struct _21eeb679c_ScopeTree;
struct _21eeb6e73_ParamDecl;
struct _21eeb8293_FnDecl;
struct _21eeb9272_VarDecl;
struct _21eeb9629_RetSt;
struct _21eeb9c89_Iter;
struct _21eeba55e_WhileKind;
struct _21eebae00_RangeKind;
struct _21eebb2a7_BreakSt;
struct _21eebb65e_ContSt;
struct _21eebbad2_If;
struct _21eebbe89_Else;
struct _21eebc40c_Conditional;
struct _21eebcad3_TypeAliasDecl;
struct _21eebd056_Case;
struct _21eebd72c_MatchCase;
struct _21eebdebe_UseDecl;
struct _21eebe442_EnumItemDecl;
struct _21eebee6a_EnumDecl;
struct _21eec0971_TypeEnumItemDecl;
struct _21eec107b_TypeEnumDecl;
struct _21eec1279_FieldDecl;
struct _21eec1a2c_StructDecl;
struct _21eec2137_TraitDecl;
struct _21eec2742_Impl;
struct _2206ed720_floatInfo;
struct _220975755_decimalSlice;
struct _220b2225e_leftCheat;
struct _220b2256c_decimal;
struct _220074816_Const;
struct _21ee92206_Field;
struct _21ee9984b_Operators;
struct _21eec3006_Struct;
struct _21eec31e3_FieldIns;
struct _22001ab86_OperandExprModel;
struct _220049577_BinopExprModel;
struct _220b2acc3_UnaryExprModel;
struct _220b2aeb0_StructArgExprModel;
struct _220b2b19c_StructLitExprModel;
struct _220b2b389_AllocStructLitExprModel;
struct _220b2b576_CastingExprModel;
struct _220b2b763_FnCallExprModel;
struct _220b2b950_SliceExprModel;
struct _220b2bb3c_IndexingExprModel;
struct _220b2bd29_AnonFnExprModel;
struct _220b2c016_KeyValPairExprModel;
struct _220b2c203_MapExprModel;
struct _220b2c3e0_SlicingExprModel;
struct _220b2c5cc_TraitSubIdentExprModel;
struct _220b2c9ea_StructSubIdentExprModel;
struct _220b2cbd7_StructStaticIdentExprModel;
struct _220b2cdc4_ArrayExprModel;
struct _220b2d0b1_CommonIdentExprModel;
struct _220b2d29d_CommonSubIdentExprModel;
struct _220b2d48a_TupleExprModel;
struct _220b2d677_BuiltinOutCallExprModel;
struct _220b2d864_BuiltinOutlnCallExprModel;
struct _220b2da51_BuiltinCloneCallExprModel;
struct _220b2dc3d_BuiltinNewCallExprModel;
struct _220b2de2a_BuiltinPanicCallExprModel;
struct _220b2e117_BuiltinAssertCallExprModel;
struct _220b2e304_BuiltinMakeCallExprModel;
struct _220b2e4e1_BuiltinAppendCallExprModel;
struct _220b2e6cd_BuiltinLenCallExprModel;
struct _220b2e8ba_BuiltinCapCallExprModel;
struct _220b2c7b9_BuiltinDeleteCallExprModel;
struct _220b3002a_BuiltinCopyCallExprModel;
struct _220b30217_BuiltinErrorCallExprModel;
struct _220b30404_SizeofExprModel;
struct _220b305e1_AlignofExprModel;
struct _220b307cd_RuneExprModel;
struct _220b309ba_IntegratedToStrExprModel;
struct _220b30ba7_BackendEmitExprModel;
struct _220b30d94_FreeExprModel;
struct _220b3125c_RetType;
struct _220b31449_Param;
struct _220b31636_Fn;
struct _220b31823_ParamIns;
struct _220b31a10_FnIns;
struct _220b329ab_ReferenceStack;
struct _220b332a3_Pass;
struct _220b3522d_symbolBuilder;
struct _220b376b4_Trait;
struct _220b38055_EnumItem;
struct _220b38374_Enum;
struct _220b38907_TypeEnumItem;
struct _220b38ae4_TypeEnum;
struct _220b3ab7e_constraintChecker;
struct _220b3cab5_Impl;
struct _220b42b20_Scope;
struct _220b4301b_If;
struct _220b43307_Else;
struct _220b4367b_Conditional;
struct _220b43967_InfIter;
struct _220b43dda_WhileIter;
struct _220b447c0_RangeIter;
struct _220b44bbb_ContSt;
struct _220b45073_BreakSt;
struct _220b4535e_Label;
struct _220b4564a_GotoSt;
struct _220b45a02_Postfix;
struct _220b45e75_Assign;
struct _220b4632c_MultiAssign;
struct _220b4686b_Match;
struct _220b473b6_Case;
struct _220b4796b_FallSt;
struct _220b47ce0_RetSt;
struct _220b483ea_scopeLabel;
struct _220b4886d_scopeGoto;
struct _220b49682_scopeChecker;
struct _220b5a297_directiveChecker;
struct _220b61325_ImportInfo;
struct _220b6427e_Package;
struct _220b69471_Sema;
struct _220b84777_missingRetChecker;
struct _220b86438_IterRelation;
struct _220b8746c_Var;
struct _220b8821a_FuncPattern;
struct _220bb8c95_typeCompatibilityChecker;
struct _220bba8bd_assignTypeChecker;
struct _220bbc3a3_dynamicTypeAnnotation;
struct _220bc1c6a_fnCallArgChecker;
struct _220bc4674_structLitChecker;
struct _220bc6258_rangeChecker;
struct _220bc82e3_retTypeChecker;
struct _220bca1a2_SymbolTable;
struct _220bceecb_Data;
struct _220bd1054_Value;
struct _220bd1a49_Eval;
struct _220bec8de_unaryEval;
struct _220bee67c_binaryEval;
struct _220c09731_InsGeneric;
struct _220c0a26a_TypeAlias;
struct _220c0ae5d_TypeKind;
struct _220c1033b_TypeSymbol;
struct _220c10baa_Prim;
struct _220c1443e_Sptr;
struct _220c14d9b_Slc;
struct _220c15929_Tuple;
struct _220c16452_Map;
struct _220c17046_Arr;
struct _220c179a3_Ptr;
struct _220c188e9_referencer;
struct _220c197c9_typeChecker;
struct _220c26d47_identTypeLookup;
struct _22143b0a5_FileInfo;
struct _221487134_stmt;
struct _22148795e_scopeParser;
struct _221493e76_exprBuilder;
struct _2214a0779_assignInfo;
struct _2214a40a7_parser;
struct _2214b4cbb_typeBuilder;
struct _220cde5b3_CompileInfo;
struct _220ce0916_directiveEval;
struct _2213ab795_JuleImporter;
struct _220d07345_OrderedDefines;
struct _220dce20d_defineOrderer;
struct _221583494_liveTable;
struct _2215b90e0_scopeDeadCode;
struct _2215bd04a_exprDeadCode;
struct _21d84ae02_UnsafeBinopExprModel;
struct _21d8d3b38_UnsafeIndexingExprModel;
struct _21e35075d_PushToSliceExprModel;
struct _21e745966_MutSlicingExprModel;
struct _21d88b30a_StrInsertBeginExprModel;
struct _21da0794e_scopeOptimizer;
struct _21e043709_exprOptimizer;
struct _2214ba0ac_Optimizer;
struct _2215c79a0_AnsiEscape;
struct _2215c8ebd_Logger;
struct _202becce7_AbsTime;
struct _202bed48a_Time;
struct _202b4878c_scopeCoder;
struct _202b51432_exprCoder;
struct _202b60595_deriveCoder;
struct _202b61e6a_TestCoder;
struct _202b645bb_identCoder;
struct _202b96d5c_SerializationInfo;
struct _202b6c371_traitHash;
struct _202c0ad05_customType;
struct _202c0b7a6_typeCoder;
struct _202c14094_resultCoder;
struct _20702b693_Flag;
struct _2070303cd_Flag;
struct _207033bea_Flag;
struct _20703755b_Flag;
struct _20703ad78_Flag;
struct _202c60431_FlagSet;
struct _21eec33d0_StructIns;
struct _22158375d_ObjectDeadCode;
struct _202c052a5_ObjectCoder;
struct _221064c23_IR;
struct _202c62b09_argParser;
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_220bceecb_Data__jule_tuple_x_220bceecb_Data {
	jule::Ptr<_220bceecb_Data> __jule_result_arg0;
	jule::Ptr<_220bceecb_Data> __jule_result_arg1;
};
struct __jule_tuple_x_21eebd056_Case__jule_tuple_bool {
	jule::Ptr<_21eebd056_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_21eebd056_Case__jule_tuple_x_21eebbe89_Else {
	jule::Slice<jule::Ptr<_21eebd056_Case>> __jule_result_arg0;
	jule::Ptr<_21eebbe89_Else> __jule_result_arg1;
};
struct __jule_tuple__21eeb5e61_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_21eeb52a1_AssignSt__jule_tuple_bool {
	jule::Ptr<_21eeb52a1_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool {
	jule::Ptr<_21eea19a7_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_21eea4aba_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_21eea4aba_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_21ee6c665_Ast__jule_tuple_s_21d4e511d_Log {
	jule::Slice<jule::Ptr<_21ee6c665_Ast>> __jule_result_arg0;
	jule::Slice<_21d4e511d_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_21d4e511d_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_21d4e511d_Log> __jule_result_arg1;
};
struct __jule_tuple_x_221064c23_IR__jule_tuple_s_21d4e511d_Log {
	jule::Ptr<_221064c23_IR> __jule_result_arg0;
	jule::Slice<_21d4e511d_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__220526889_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__220526889_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__220526889_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__220526889_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_220bca1a2_SymbolTable__jule_tuple_s_21d4e511d_Log {
	jule::Ptr<_220bca1a2_SymbolTable> __jule_result_arg0;
	jule::Slice<_21d4e511d_Log> __jule_result_arg1;
};
struct __jule_tuple_x_220b6427e_Package__jule_tuple_s_21d4e511d_Log {
	jule::Ptr<_220b6427e_Package> __jule_result_arg0;
	jule::Slice<_21d4e511d_Log> __jule_result_arg1;
};
struct __jule_tuple_x_21ee6c665_Ast__jule_tuple_s_21d4e511d_Log {
	jule::Ptr<_21ee6c665_Ast> __jule_result_arg0;
	jule::Slice<_21d4e511d_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_21d81d743_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_21d81d743_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_21d81d743_Token__jule_tuple_sx_21d81d743_Token {
	jule::Slice<jule::Ptr<_21d81d743_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_21d81d743_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_21d81d743_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_21d81d743_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log {
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> __jule_result_arg0;
	jule::Slice<_21d4e511d_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct _21d376ce6_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	_21d376ce6_Range16(void) = default;

	inline bool operator==(_21d376ce6_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_21d376ce6_Range16 _other) { return !this->operator==(_other); }


};
struct _21d377269_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	_21d377269_Range32(void) = default;

	inline bool operator==(_21d377269_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_21d377269_Range32 _other) { return !this->operator==(_other); }


};
struct _21d3776dc_RangeTable {
	jule::Slice<_21d376ce6_Range16> _field_R16;
	jule::Slice<_21d377269_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	

	_21d3776dc_RangeTable(void) = default;


};
struct _21d4387e2_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	_21d4387e2_acceptRange(void) = default;

	inline bool operator==(_21d4387e2_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_21d4387e2_acceptRange _other) { return !this->operator==(_other); }


};
inline jule::U8 _21c4a6cb2_index(_21c49a844_lazyBuff*, jule::I64);
inline void _21c4a95de_append(_21c49a844_lazyBuff*, jule::U8);
inline jule::Str _21c4aae1a_string(_21c49a844_lazyBuff*);
struct _21c49a844_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	

	_21c49a844_lazyBuff(void) = default;


};
struct _21b6d2351_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_21c3cc820_Status> _field_Stat;
	

	_21b6d2351_DirEntry(void) = default;

	inline bool operator==(_21b6d2351_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_21b6d2351_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_21b6d2351_DirEntry>>> static__21c4123c1_Read(jule::Str);
inline jule::VoidExceptional static__21c43be12_Create(jule::Str);
inline jule::VoidExceptional static__21c416c77_Remove(jule::Str);
struct _21b71781a_Directory {
	

	_21b71781a_Directory(void) = default;

	inline bool operator==(_21b71781a_Directory _other) { return true; }

	inline bool operator!=(_21b71781a_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_21b6092ab_File>> static__21b60a202_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__21b60b555_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _21b5bcc97_Write(_21b6092ab_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _21b5d7a2b_Read(_21b6092ab_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_21b6092ab_File> static__21b609498_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_21b6092ab_File>> static__21b5d8eb1_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__21b6d3154_Read(jule::Str);
inline jule::VoidExceptional static__21b6d371a_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _21b5d80e2_Seek(_21b6092ab_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _21b60a048_Close(_21b6092ab_File*);
struct _21b6092ab_File {
	jule::Uintptr _field_handle = 0;
	

	_21b6092ab_File(void) = default;

	inline bool operator==(_21b6092ab_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_21b6092ab_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_21c3cc820_Status>> static__21b5d882e_Of(jule::Str);
inline jule::Bool _21b6d2a49_IsDir(_21c3cc820_Status*);
inline jule::Bool _21b718475_IsReg(_21c3cc820_Status*);
struct _21c3cc820_Status {
	jule::U64 _field_Mode = 0;
	jule::U64 _field_Size = 0;
	

	_21c3cc820_Status(void) = default;

	inline bool operator==(_21c3cc820_Status _other) {
		return 
			this->_field_Mode == _other._field_Mode &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_21c3cc820_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21d5402ab_Cmd> static__21d5406da_New(jule::Str);
inline jule::Exceptional<jule::I64> _21d54094e_Spawn(_21d5402ab_Cmd*);
inline jule::Exceptional<jule::I64> _21d543820_spawn(_21d5402ab_Cmd*);
struct _21d5402ab_Cmd {
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

	_21d5402ab_Cmd(void) = default;


};
struct _21d4e511d_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	_21d4e511d_Log(void) = default;

	inline bool operator==(_21d4e511d_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_21d4e511d_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _21d81daea_Prec(_21d81d743_Token*);
struct _21d81d743_Token {
	jule::Ptr<_21d823acd_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	_21d81d743_Token(void) = default;

	inline bool operator==(_21d81d743_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_21d81d743_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _21d823eda_IsOk(_21d823acd_File*);
inline void _21d824260_Fill(_21d823acd_File*, jule::Slice<jule::U8>);
inline jule::Str _21d8244c4_Dir(_21d823acd_File*);
inline jule::Str _21d824738_Name(_21d823acd_File*);
inline jule::Uintptr _21d82499c_Addr(_21d823acd_File*);
inline jule::Str _21d824caa_GetRow(_21d823acd_File*, jule::I64);
struct _21d823acd_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _field_Tokens;
	

	_21d823acd_File(void) = default;


};
struct _21d825b35_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_21d825b35_kindPair(void) = default;

	inline bool operator==(_21d825b35_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_21d825b35_kindPair _other) { return !this->operator==(_other); }


};
inline void _21d82bc3a_pushErr(_21d82b696_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _21d82c059_pushErrTok(_21d82b696_lex*, jule::Ptr<_21d81d743_Token>&, jule::Str);
inline void _21d82c235_lex(_21d82b696_lex*);
inline jule::Str _21d82c543_id(_21d82b696_lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _21d82c7a7_resume(_21d82b696_lex*);
inline void _21d82ca2c_lexLineComment(_21d82b696_lex*, jule::Ptr<_21d81d743_Token>&);
inline void _21d82cca2_lexRangeComment(_21d82b696_lex*, jule::Ptr<_21d81d743_Token>&);
inline jule::Str _21d82d0b0_num(_21d82b696_lex*, jule::Slice<jule::U8>&);
inline jule::Str _21d82d3bd_escapeSeq(_21d82b696_lex*, jule::Slice<jule::U8>&);
inline jule::Str _21d82d775_getRune(_21d82b696_lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _21d82da83_lexRune(_21d82b696_lex*, jule::Slice<jule::U8>&);
inline jule::Str _21d82dce7_lexStr(_21d82b696_lex*);
inline jule::Bool _21d82e05b_isFirstTokenOfLine(_21d82b696_lex*);
inline void _21d82e237_newLine(_21d82b696_lex*);
inline jule::Bool _21d82e732_isOp(_21d82b696_lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_21d81d743_Token>&);
inline jule::Bool _21d82ead9_lexBasicOps(_21d82b696_lex*, jule::Slice<jule::U8>, jule::Ptr<_21d81d743_Token>&);
inline jule::Bool _21d82ee91_lexId(_21d82b696_lex*, jule::Slice<jule::U8>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Bool _21d830348_lexNum(_21d82b696_lex*, jule::Slice<jule::U8>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Ptr<_21d81d743_Token> _21d8305ac_token(_21d82b696_lex*);
struct _21d82b696_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _field_tokens;
	jule::Ptr<_21d823acd_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_21d4e511d_Log> _field_errors;
	

	_21d82b696_lex(void) = default;


};
struct _21ee6c665_Ast {
	jule::Ptr<_21d823acd_File> _field_File;
	jule::Slice<jule::Ptr<_21ee6d710_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_21eebdebe_UseDecl>> _field_UseDecls;
	jule::Slice<_21ee6d314_Node> _field_Nodes;
	

	_21ee6c665_Ast(void) = default;


};
struct _21ee6d314_Node {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_21ee6d314_Node(void) = default;

	inline bool operator==(_21ee6d314_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_21ee6d314_Node _other) { return !this->operator==(_other); }


};
struct _21ee6d710_Directive {
	jule::Ptr<_21d81d743_Token> _field_Tag;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _field_Args;
	

	_21ee6d710_Directive(void) = default;


};
struct _21eea19a7_TypeDecl {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_21eea19a7_TypeDecl(void) = default;

	inline bool operator==(_21eea19a7_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_21eea19a7_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _21eea23d1_IsPrim(_21eea206d_IdentTypeDecl*);
struct _21eea206d_IdentTypeDecl {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>> _field_Generics;
	

	_21eea206d_IdentTypeDecl(void) = default;


};
struct _21eea26bc_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_21eea206d_IdentTypeDecl>> _field_Idents;
	

	_21eea26bc_SubIdentTypeDecl(void) = default;


};
struct _21eea2a74_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_21d81d743_Token>> _field_Idents;
	jule::Ptr<_21eea19a7_TypeDecl> _field_Kind;
	

	_21eea2a74_NamespaceTypeDecl(void) = default;


};
struct _21eea2d60_SptrTypeDecl {
	jule::Ptr<_21eea19a7_TypeDecl> _field_Elem;
	

	_21eea2d60_SptrTypeDecl(void) = default;

	inline bool operator==(_21eea2d60_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_21eea2d60_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _21eea325b_SlcTypeDecl {
	jule::Ptr<_21eea19a7_TypeDecl> _field_Elem;
	

	_21eea325b_SlcTypeDecl(void) = default;

	inline bool operator==(_21eea325b_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_21eea325b_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _21eea3547_TupleTypeDecl {
	jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>> _field_Types;
	

	_21eea3547_TupleTypeDecl(void) = default;


};
inline jule::Bool _21eea3b85_IsUnsafe(_21eea3833_PtrTypeDecl*);
struct _21eea3833_PtrTypeDecl {
	jule::Ptr<_21eea19a7_TypeDecl> _field_Elem;
	

	_21eea3833_PtrTypeDecl(void) = default;

	inline bool operator==(_21eea3833_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_21eea3833_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _21eea438e_AutoSized(_21eea3eb5_ArrTypeDecl*);
struct _21eea3eb5_ArrTypeDecl {
	jule::Ptr<_21eea19a7_TypeDecl> _field_Elem;
	jule::Ptr<_21eea5ec8_Expr> _field_Size;
	

	_21eea3eb5_ArrTypeDecl(void) = default;

	inline bool operator==(_21eea3eb5_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_21eea3eb5_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _21eea4713_MapTypeDecl {
	jule::Ptr<_21eea19a7_TypeDecl> _field_Key;
	jule::Ptr<_21eea19a7_TypeDecl> _field_Val;
	

	_21eea4713_MapTypeDecl(void) = default;

	inline bool operator==(_21eea4713_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_21eea4713_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _21eea4aba_RetTypeDecl {
	jule::Ptr<_21eea19a7_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _field_Idents;
	

	_21eea4aba_RetTypeDecl(void) = default;


};
struct _21eea5ec8_Expr {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21d81d743_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_21eea5ec8_Expr(void) = default;

	inline bool operator==(_21eea5ec8_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_21eea5ec8_Expr _other) { return !this->operator==(_other); }


};
struct _21eea62b4_RangeExpr {
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	

	_21eea62b4_RangeExpr(void) = default;

	inline bool operator==(_21eea62b4_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_21eea62b4_RangeExpr _other) { return !this->operator==(_other); }


};
struct _21eea6869_UseExpr {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	

	_21eea6869_UseExpr(void) = default;

	inline bool operator==(_21eea6869_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_21eea6869_UseExpr _other) { return !this->operator==(_other); }


};
struct _21eea6b55_TupleExpr {
	jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _field_Expr;
	

	_21eea6b55_TupleExpr(void) = default;


};
inline jule::Bool _21eea735e_IsNil(_21eea700c_LitExpr*);
struct _21eea700c_LitExpr {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Value;
	

	_21eea700c_LitExpr(void) = default;

	inline bool operator==(_21eea700c_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_21eea700c_LitExpr _other) { return !this->operator==(_other); }


};
struct _21eea7716_UnsafeExpr {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	

	_21eea7716_UnsafeExpr(void) = default;

	inline bool operator==(_21eea7716_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_21eea7716_UnsafeExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _21eea7edb_IsSelf(_21eea7b89_IdentExpr*);
struct _21eea7b89_IdentExpr {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	

	_21eea7b89_IdentExpr(void) = default;

	inline bool operator==(_21eea7b89_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_21eea7b89_IdentExpr _other) { return !this->operator==(_other); }


};
struct _21eea8393_UnaryExpr {
	jule::Ptr<_21d81d743_Token> _field_Op;
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	

	_21eea8393_UnaryExpr(void) = default;

	inline bool operator==(_21eea8393_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_21eea8393_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _21eead5a7_VariadicExpr {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	

	_21eead5a7_VariadicExpr(void) = default;

	inline bool operator==(_21eead5a7_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_21eead5a7_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _21eead95e_CastExpr {
	jule::Ptr<_21eea19a7_TypeDecl> _field_Kind;
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	

	_21eead95e_CastExpr(void) = default;

	inline bool operator==(_21eead95e_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_21eead95e_CastExpr _other) { return !this->operator==(_other); }


};
struct _21eeadd16_NsSelectionExpr {
	jule::Slice<jule::Ptr<_21d81d743_Token>> _field_Ns;
	jule::Ptr<_21d81d743_Token> _field_Ident;
	

	_21eeadd16_NsSelectionExpr(void) = default;


};
struct _21eeae289_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	jule::Ptr<_21d81d743_Token> _field_Ident;
	

	_21eeae289_SubIdentExpr(void) = default;

	inline bool operator==(_21eeae289_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_21eeae289_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _21eeae70c_BinopExpr {
	jule::Ptr<_21eea5ec8_Expr> _field_Left;
	jule::Ptr<_21eea5ec8_Expr> _field_Right;
	jule::Ptr<_21d81d743_Token> _field_Op;
	

	_21eeae70c_BinopExpr(void) = default;

	inline bool operator==(_21eeae70c_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_21eeae70c_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _21eeb017a_Unhandled(_21eeaed17_FnCallExpr*);
inline jule::Bool _21eeb03de_Ignored(_21eeaed17_FnCallExpr*);
struct _21eeaed17_FnCallExpr {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _field_Args;
	jule::Ptr<_21eeb679c_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	

	_21eeaed17_FnCallExpr(void) = default;


};
inline jule::Bool _21eeb0ae8_IsTargeted(_21eeb0796_FieldExprPair*);
struct _21eeb0796_FieldExprPair {
	jule::Ptr<_21d81d743_Token> _field_Field;
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	

	_21eeb0796_FieldExprPair(void) = default;

	inline bool operator==(_21eeb0796_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_21eeb0796_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _21eeb0ee4_StructLit {
	jule::Ptr<_21d81d743_Token> _field_End;
	jule::Ptr<_21eea19a7_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _field_Exprs;
	

	_21eeb0ee4_StructLit(void) = default;


};
inline jule::Bool _21eeb17b9_IsEmpty(_21eeb1467_BraceLit*);
struct _21eeb1467_BraceLit {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21d81d743_Token> _field_End;
	jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _field_Exprs;
	

	_21eeb1467_BraceLit(void) = default;


};
struct _21eeb1c3c_KeyValPair {
	jule::Ptr<_21eea5ec8_Expr> _field_Key;
	jule::Ptr<_21eea5ec8_Expr> _field_Val;
	jule::Ptr<_21d81d743_Token> _field_Colon;
	

	_21eeb1c3c_KeyValPair(void) = default;

	inline bool operator==(_21eeb1c3c_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_21eeb1c3c_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _21eeb2754_IsEmpty(_21eeb2424_SliceExpr*);
struct _21eeb2424_SliceExpr {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21d81d743_Token> _field_End;
	jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _field_Exprs;
	

	_21eeb2424_SliceExpr(void) = default;


};
struct _21eeb2c93_IndexingExpr {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21d81d743_Token> _field_End;
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	jule::Ptr<_21eea5ec8_Expr> _field_Index;
	

	_21eeb2c93_IndexingExpr(void) = default;

	inline bool operator==(_21eeb2c93_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_21eeb2c93_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _21eeb339d_SlicingExpr {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21d81d743_Token> _field_End;
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	jule::Ptr<_21eea5ec8_Expr> _field_Start;
	jule::Ptr<_21eea5ec8_Expr> _field_To;
	

	_21eeb339d_SlicingExpr(void) = default;

	inline bool operator==(_21eeb339d_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_21eeb339d_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _21eeb3689_Constraint {
	jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>> _field_Mask;
	

	_21eeb3689_Constraint(void) = default;


};
struct _21eeb3b0c_GenericDecl {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_21eeb3689_Constraint> _field_Constraint;
	

	_21eeb3b0c_GenericDecl(void) = default;

	inline bool operator==(_21eeb3b0c_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_21eeb3b0c_GenericDecl _other) { return !this->operator==(_other); }


};
struct _21eeb3eb4_LabelSt {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Ident;
	

	_21eeb3eb4_LabelSt(void) = default;

	inline bool operator==(_21eeb3eb4_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_21eeb3eb4_LabelSt _other) { return !this->operator==(_other); }


};
struct _21eeb436b_GotoSt {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21d81d743_Token> _field_Label;
	

	_21eeb436b_GotoSt(void) = default;

	inline bool operator==(_21eeb436b_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_21eeb436b_GotoSt _other) { return !this->operator==(_other); }


};
struct _21eeb4657_FallSt {
	jule::Ptr<_21d81d743_Token> _field_Token;
	

	_21eeb4657_FallSt(void) = default;

	inline bool operator==(_21eeb4657_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_21eeb4657_FallSt _other) { return !this->operator==(_other); }


};
struct _21eeb4c62_AssignLeft {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	

	_21eeb4c62_AssignLeft(void) = default;

	inline bool operator==(_21eeb4c62_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_21eeb4c62_AssignLeft _other) { return !this->operator==(_other); }


};
struct _21eeb52a1_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_21d81d743_Token> _field_Setter;
	jule::Slice<jule::Ptr<_21eeb4c62_AssignLeft>> _field_Left;
	jule::Ptr<_21eea5ec8_Expr> _field_Right;
	

	_21eeb52a1_AssignSt(void) = default;


};
struct _21eeb6192_Stmt {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_21eeb6192_Stmt(void) = default;

	inline bool operator==(_21eeb6192_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_21eeb6192_Stmt _other) { return !this->operator==(_other); }


};
struct _21eeb679c_ScopeTree {
	jule::Ptr<_21eeb679c_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_21eeb6192_Stmt> _field_Stmts;
	jule::Ptr<_21d81d743_Token> _field_End;
	

	_21eeb679c_ScopeTree(void) = default;


};
inline jule::Bool _21eeb72d6_IsSelf(_21eeb6e73_ParamDecl*);
inline jule::Bool _21eeb754a_IsRef(_21eeb6e73_ParamDecl*);
struct _21eeb6e73_ParamDecl {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_21eea19a7_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	_21eeb6e73_ParamDecl(void) = default;

	inline bool operator==(_21eeb6e73_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_21eeb6e73_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _21eeb85e5_IsAnon(_21eeb8293_FnDecl*);
struct _21eeb8293_FnDecl {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_21ee6d710_Directive>> _field_Directives;
	jule::Ptr<_21eeb679c_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>> _field_Generics;
	jule::Ptr<_21eea4aba_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_21eeb6e73_ParamDecl>> _field_Params;
	

	_21eeb8293_FnDecl(void) = default;


};
struct _21eeb9272_VarDecl {
	jule::Ptr<_21eeb679c_ScopeTree> _field_Scope;
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_21ee6d710_Directive>> _field_Directives;
	jule::Ptr<_21eea19a7_TypeDecl> _field_Kind;
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	

	_21eeb9272_VarDecl(void) = default;


};
struct _21eeb9629_RetSt {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	

	_21eeb9629_RetSt(void) = default;

	inline bool operator==(_21eeb9629_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_21eeb9629_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _21eeba0db_IsInf(_21eeb9c89_Iter*);
struct _21eeb9c89_Iter {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_21eeb679c_ScopeTree> _field_Scope;
	

	_21eeb9c89_Iter(void) = default;

	inline bool operator==(_21eeb9c89_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_21eeb9c89_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _21eeba8b1_IsWhileNext(_21eeba55e_WhileKind*);
struct _21eeba55e_WhileKind {
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_21d81d743_Token> _field_NextToken;
	

	_21eeba55e_WhileKind(void) = default;

	inline bool operator==(_21eeba55e_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_21eeba55e_WhileKind _other) { return !this->operator==(_other); }


};
struct _21eebae00_RangeKind {
	jule::Ptr<_21d81d743_Token> _field_InToken;
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	jule::Ptr<_21eeb9272_VarDecl> _field_KeyA;
	jule::Ptr<_21eeb9272_VarDecl> _field_KeyB;
	

	_21eebae00_RangeKind(void) = default;

	inline bool operator==(_21eebae00_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_21eebae00_RangeKind _other) { return !this->operator==(_other); }


};
struct _21eebb2a7_BreakSt {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21d81d743_Token> _field_Label;
	

	_21eebb2a7_BreakSt(void) = default;

	inline bool operator==(_21eebb2a7_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_21eebb2a7_BreakSt _other) { return !this->operator==(_other); }


};
struct _21eebb65e_ContSt {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21d81d743_Token> _field_Label;
	

	_21eebb65e_ContSt(void) = default;

	inline bool operator==(_21eebb65e_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_21eebb65e_ContSt _other) { return !this->operator==(_other); }


};
struct _21eebbad2_If {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	jule::Ptr<_21eeb679c_ScopeTree> _field_Scope;
	

	_21eebbad2_If(void) = default;

	inline bool operator==(_21eebbad2_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_21eebbad2_If _other) { return !this->operator==(_other); }


};
struct _21eebbe89_Else {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21eeb679c_ScopeTree> _field_Scope;
	

	_21eebbe89_Else(void) = default;

	inline bool operator==(_21eebbe89_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_21eebbe89_Else _other) { return !this->operator==(_other); }


};
struct _21eebc40c_Conditional {
	jule::Ptr<_21eebbad2_If> _field_Head;
	jule::Slice<jule::Ptr<_21eebbad2_If>> _field_Tail;
	jule::Ptr<_21eebbe89_Else> _field_Default;
	

	_21eebc40c_Conditional(void) = default;


};
struct _21eebcad3_TypeAliasDecl {
	jule::Ptr<_21eeb679c_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_21eea19a7_TypeDecl> _field_Kind;
	

	_21eebcad3_TypeAliasDecl(void) = default;

	inline bool operator==(_21eebcad3_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_21eebcad3_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _21eebd056_Case {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21eeb679c_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _field_Exprs;
	

	_21eebd056_Case(void) = default;


};
struct _21eebd72c_MatchCase {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21d81d743_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_21eebd056_Case>> _field_Cases;
	jule::Ptr<_21eebbe89_Else> _field_Default;
	

	_21eebd72c_MatchCase(void) = default;


};
struct _21eebdebe_UseDecl {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _field_Selected;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	

	_21eebdebe_UseDecl(void) = default;


};
inline jule::Bool _21eebe794_AutoExpr(_21eebe442_EnumItemDecl*);
struct _21eebe442_EnumItemDecl {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	

	_21eebe442_EnumItemDecl(void) = default;

	inline bool operator==(_21eebe442_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_21eebe442_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _21eec04ed_DefaultTyped(_21eebee6a_EnumDecl*);
struct _21eebee6a_EnumDecl {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_21eea19a7_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_21eebe442_EnumItemDecl>> _field_Items;
	jule::Ptr<_21d81d743_Token> _field_End;
	

	_21eebee6a_EnumDecl(void) = default;


};
struct _21eec0971_TypeEnumItemDecl {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_21eea19a7_TypeDecl> _field_Kind;
	

	_21eec0971_TypeEnumItemDecl(void) = default;

	inline bool operator==(_21eec0971_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_21eec0971_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _21eec107b_TypeEnumDecl {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_21eec0971_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_21d81d743_Token> _field_End;
	

	_21eec107b_TypeEnumDecl(void) = default;


};
struct _21eec1279_FieldDecl {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_21eea19a7_TypeDecl> _field_Kind;
	jule::Ptr<_21eea5ec8_Expr> _field_Default;
	

	_21eec1279_FieldDecl(void) = default;

	inline bool operator==(_21eec1279_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_21eec1279_FieldDecl _other) { return !this->operator==(_other); }


};
struct _21eec1a2c_StructDecl {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21d81d743_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_21eec1279_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_21ee6d710_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>> _field_Generics;
	

	_21eec1a2c_StructDecl(void) = default;


};
struct _21eec2137_TraitDecl {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_21d81d743_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_21eeb8293_FnDecl>> _field_Methods;
	

	_21eec2137_TraitDecl(void) = default;


};
inline jule::Bool _21eec2aa5_IsTraitImpl(_21eec2742_Impl*);
inline jule::Bool _21eec2d19_IsStructImpl(_21eec2742_Impl*);
struct _21eec2742_Impl {
	jule::Ptr<_21d81d743_Token> _field_End;
	jule::Ptr<_21eea19a7_TypeDecl> _field_Base;
	jule::Ptr<_21eea19a7_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_21eeb8293_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_21eeb9272_VarDecl>> _field_Statics;
	

	_21eec2742_Impl(void) = default;


};
struct _2206ed720_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	_2206ed720_floatInfo(void) = default;

	inline bool operator==(_2206ed720_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_2206ed720_floatInfo _other) { return !this->operator==(_other); }


};
struct _220975755_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	

	_220975755_decimalSlice(void) = default;


};
struct _220b2225e_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	_220b2225e_leftCheat(void) = default;

	inline bool operator==(_220b2225e_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_220b2225e_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _22054a418_set(_220b2256c_decimal*, jule::Str);
inline __jule_tuple_u64__jule_tuple_bool _22054a54a_floatBits(_220b2256c_decimal*, _2206ed720_floatInfo&);
inline void _220b22759_assign(_220b2256c_decimal*, jule::U64);
inline void _220b2288b_shift(_220b2256c_decimal*, jule::I64);
inline void _220b229bd_roundDown(_220b2256c_decimal*, jule::I64);
inline void _220b22b00_roundUp(_220b2256c_decimal*, jule::I64);
inline void _220b22c32_round(_220b2256c_decimal*, jule::I64);
inline jule::U64 _220b22d64_roundedInteger(_220b2256c_decimal*);
struct _220b2256c_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	_220b2256c_decimal(void) = default;

	inline bool operator==(_220b2256c_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_220b2256c_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_220074816_Const> static__2200b58ac_NewI64(jule::I64);
inline jule::Ptr<_220074816_Const> static__22009b8c6_NewU64(jule::U64);
inline jule::Ptr<_220074816_Const> static__2200d5e93_NewBool(jule::Bool);
inline jule::Ptr<_220074816_Const> static__2200dc263_NewStr(jule::Str);
inline jule::Ptr<_220074816_Const> static__2200dc395_NewF64(jule::F64);
inline jule::Ptr<_220074816_Const> static__220b27572_NewNil(void);
inline jule::I64 _220b2796d_ReadI64(_220074816_Const*);
inline jule::U64 _220b27aa0_ReadU64(_220074816_Const*);
inline jule::Bool _220b27bd2_ReadBool(_220074816_Const*);
inline jule::Str _220b27d14_ReadStr(_220074816_Const*);
inline jule::F64 _220b27e46_ReadF64(_220074816_Const*);
inline jule::I64 _220b28078_AsI64(_220074816_Const*);
inline jule::U64 _220b281aa_AsU64(_220074816_Const*);
inline jule::F64 _220b282dc_AsF64(_220074816_Const*);
inline void _220b2841e_SetI64(_220074816_Const*, jule::I64);
inline void _220b28551_SetU64(_220074816_Const*, jule::U64);
inline void _220b28683_SetBool(_220074816_Const*, jule::Bool);
inline void _220b287b5_SetStr(_220074816_Const*, jule::Str);
inline void _220b288e7_SetF64(_220074816_Const*, jule::F64);
inline void _220b28a29_SetNil(_220074816_Const*);
inline jule::Bool _220b28b5b_IsI64(_220074816_Const*);
inline jule::Bool _220b28c8d_IsU64(_220074816_Const*);
inline jule::Bool _220b28dc0_IsBool(_220074816_Const*);
inline jule::Bool _220b29002_IsStr(_220074816_Const*);
inline jule::Bool _220b29134_IsF64(_220074816_Const*);
inline jule::Bool _220b29266_IsNil(_220074816_Const*);
inline jule::Bool _220b29398_AreSameTypes(_220074816_Const*, _220074816_Const);
inline jule::Bool _220b294ca_And(_220074816_Const*, _220074816_Const);
inline jule::Bool _220b2960c_Or(_220074816_Const*, _220074816_Const);
inline jule::Bool _220b2973e_Eq(_220074816_Const*, _220074816_Const);
inline jule::Bool _220b29871_Lt(_220074816_Const*, _220074816_Const);
inline jule::Bool _220b299a3_LtEq(_220074816_Const*, _220074816_Const);
inline jule::Bool _220b29ad5_Gt(_220074816_Const*, _220074816_Const);
inline jule::Bool _220b29c17_GtEq(_220074816_Const*, _220074816_Const);
inline jule::Bool _220b29d49_Add(_220074816_Const*, _220074816_Const);
inline jule::Bool _220b29e7b_Sub(_220074816_Const*, _220074816_Const);
inline jule::Bool _220b2a0ad_Mul(_220074816_Const*, _220074816_Const);
inline jule::Bool _220b2a1e0_Div(_220074816_Const*, _220074816_Const);
inline jule::Bool _220b2a322_Mod(_220074816_Const*, _220074816_Const);
inline jule::Bool _220b2a454_BitwiseAnd(_220074816_Const*, _220074816_Const);
inline jule::Bool _220b2a586_BitwiseOr(_220074816_Const*, _220074816_Const);
inline jule::Bool _220b2a6b8_Xor(_220074816_Const*, _220074816_Const);
inline jule::Bool _220b2a7ea_Lshift(_220074816_Const*, _220074816_Const);
inline jule::Bool _220b2a92c_Rshift(_220074816_Const*, _220074816_Const);
struct _220074816_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	_220074816_Const(void) = default;

	inline jule::Bool operator==(_220074816_Const _other) { return _220b2973e_Eq(this, _other); }

	inline bool operator!=(_220074816_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_220074816_Const _other) { return _220b29ad5_Gt(this, _other); }

	inline jule::Bool operator>=(_220074816_Const _other) { return _220b29c17_GtEq(this, _other); }

	inline jule::Bool operator<(_220074816_Const _other) { return _220b29871_Lt(this, _other); }

	inline jule::Bool operator<=(_220074816_Const _other) { return _220b299a3_LtEq(this, _other); }


};
inline jule::Ptr<_21eec31e3_FieldIns> _21ed76371_instance(jule::Ptr<_21ee92206_Field>);
struct _21ee92206_Field {
	jule::Ptr<_21eec3006_Struct> _field_Owner;
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_220c1033b_TypeSymbol> _field_Kind;
	jule::Ptr<_21eea5ec8_Expr> _field_Default;
	

	_21ee92206_Field(void) = default;

	inline bool operator==(_21ee92206_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_21ee92206_Field _other) { return !this->operator==(_other); }


};
struct _21ee9984b_Operators {
	jule::Ptr<_220b31a10_FnIns> _field_Eq;
	jule::Ptr<_220b31a10_FnIns> _field_Gt;
	jule::Ptr<_220b31a10_FnIns> _field_GtEq;
	jule::Ptr<_220b31a10_FnIns> _field_Lt;
	jule::Ptr<_220b31a10_FnIns> _field_LtEq;
	jule::Ptr<_220b31a10_FnIns> _field_Shl;
	jule::Ptr<_220b31a10_FnIns> _field_Shr;
	jule::Ptr<_220b31a10_FnIns> _field_Add;
	jule::Ptr<_220b31a10_FnIns> _field_Sub;
	jule::Ptr<_220b31a10_FnIns> _field_Div;
	jule::Ptr<_220b31a10_FnIns> _field_Mul;
	jule::Ptr<_220b31a10_FnIns> _field_Mod;
	jule::Ptr<_220b31a10_FnIns> _field_BitAnd;
	jule::Ptr<_220b31a10_FnIns> _field_BitOr;
	jule::Ptr<_220b31a10_FnIns> _field_BitXor;
	jule::Ptr<_220b31a10_FnIns> _field_Neg;
	jule::Ptr<_220b31a10_FnIns> _field_Pos;
	jule::Ptr<_220b31a10_FnIns> _field_BitNot;
	jule::Ptr<_220b31a10_FnIns> _field_AddAssign;
	jule::Ptr<_220b31a10_FnIns> _field_SubAssign;
	jule::Ptr<_220b31a10_FnIns> _field_DivAssign;
	jule::Ptr<_220b31a10_FnIns> _field_MulAssign;
	jule::Ptr<_220b31a10_FnIns> _field_ModAssign;
	jule::Ptr<_220b31a10_FnIns> _field_ShlAssign;
	jule::Ptr<_220b31a10_FnIns> _field_ShrAssign;
	jule::Ptr<_220b31a10_FnIns> _field_BitOrAssign;
	jule::Ptr<_220b31a10_FnIns> _field_BitAndAssign;
	jule::Ptr<_220b31a10_FnIns> _field_BitXorAssign;
	

	_21ee9984b_Operators(void) = default;

	inline bool operator==(_21ee9984b_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_21ee9984b_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21eec33d0_StructIns> _21ee7994c_instance(jule::Ptr<_21eec3006_Struct>);
inline jule::Ptr<_21eec33d0_StructIns> _21ee7d720_appendInstance(_21eec3006_Struct*, jule::Ptr<_21eec33d0_StructIns>&);
inline jule::Ptr<_220b31636_Fn> _21ee7e479_FindMethod(_21eec3006_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_220b8746c_Var> _21ee825d1_FindStatic(_21eec3006_Struct*, jule::Str);
inline jule::Ptr<_21ee92206_Field> _21ee81a31_FindField(_21eec3006_Struct*, jule::Str);
inline jule::Bool _21ee83e0c_IsImplements(_21eec3006_Struct*, jule::Ptr<_220b376b4_Trait>);
inline jule::Bool _21ee83208_IsDerives(_21eec3006_Struct*, jule::Str);
inline jule::Bool _21ee871c9_IsUses(_21eec3006_Struct*, jule::Ptr<_21eec3006_Struct>);
inline jule::Bool _21ee8788e_HasRefAccessible(_21eec3006_Struct*);
struct _21eec3006_Struct {
	jule::Ptr<_220b69471_Sema> _field_sema;
	jule::Slice<jule::Ptr<_21eec3006_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_21eec3006_Struct>> _field_Uses;
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_21ee92206_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_220b31636_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_220b8746c_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_21ee6d710_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_220b376b4_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_21eec33d0_StructIns>> _field_Instances;
	

	_21eec3006_Struct(void) = default;


};
struct _21eec31e3_FieldIns {
	jule::Ptr<_21ee92206_Field> _field_Decl;
	jule::Ptr<_220c0ae5d_TypeKind> _field_Kind;
	jule::Ptr<_220bceecb_Data> _field_Default;
	

	_21eec31e3_FieldIns(void) = default;

	inline bool operator==(_21eec31e3_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_21eec31e3_FieldIns _other) { return !this->operator==(_other); }


};
struct _22001ab86_OperandExprModel {
	jule::Ptr<_220c0ae5d_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	_22001ab86_OperandExprModel(void) = default;

	inline bool operator==(_22001ab86_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_22001ab86_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _220049577_BinopExprModel {
	jule::Ptr<_22001ab86_OperandExprModel> _field_Left;
	jule::Ptr<_22001ab86_OperandExprModel> _field_Right;
	jule::Ptr<_21d81d743_Token> _field_Op;
	

	_220049577_BinopExprModel(void) = default;

	inline bool operator==(_220049577_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_220049577_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _220b2acc3_UnaryExprModel {
	jule::Ptr<_220bceecb_Data> _field_Expr;
	jule::Ptr<_21d81d743_Token> _field_Op;
	

	_220b2acc3_UnaryExprModel(void) = default;

	inline bool operator==(_220b2acc3_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_220b2acc3_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _220b2aeb0_StructArgExprModel {
	jule::Ptr<_21eec31e3_FieldIns> _field_Field;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_220b2aeb0_StructArgExprModel(void) = default;

	inline bool operator==(_220b2aeb0_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_220b2aeb0_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _220b2b19c_StructLitExprModel {
	jule::Ptr<_21eec33d0_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_220b2aeb0_StructArgExprModel>> _field_Args;
	

	_220b2b19c_StructLitExprModel(void) = default;


};
struct _220b2b389_AllocStructLitExprModel {
	jule::Ptr<_220b2b19c_StructLitExprModel> _field_Lit;
	

	_220b2b389_AllocStructLitExprModel(void) = default;

	inline bool operator==(_220b2b389_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_220b2b389_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _220b2b576_CastingExprModel {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_220c0ae5d_TypeKind> _field_Kind;
	jule::Ptr<_220c0ae5d_TypeKind> _field_ExprKind;
	

	_220b2b576_CastingExprModel(void) = default;

	inline bool operator==(_220b2b576_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_220b2b576_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _220b2b763_FnCallExprModel {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_220b31a10_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_220b42b20_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	

	_220b2b763_FnCallExprModel(void) = default;


};
struct _220b2b950_SliceExprModel {
	jule::Ptr<_220c0ae5d_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

	_220b2b950_SliceExprModel(void) = default;


};
struct _220b2bb3c_IndexingExprModel {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_220bceecb_Data> _field_Expr;
	jule::Ptr<_220bceecb_Data> _field_Index;
	

	_220b2bb3c_IndexingExprModel(void) = default;

	inline bool operator==(_220b2bb3c_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_220b2bb3c_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _220b2bd29_AnonFnExprModel {
	jule::Ptr<_220b31a10_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	_220b2bd29_AnonFnExprModel(void) = default;

	inline bool operator==(_220b2bd29_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_220b2bd29_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _220b2c016_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	_220b2c016_KeyValPairExprModel(void) = default;

	inline bool operator==(_220b2c016_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_220b2c016_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _220b2c203_MapExprModel {
	jule::Ptr<_220c0ae5d_TypeKind> _field_KeyKind;
	jule::Ptr<_220c0ae5d_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_220b2c016_KeyValPairExprModel>> _field_Entries;
	

	_220b2c203_MapExprModel(void) = default;


};
struct _220b2c3e0_SlicingExprModel {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_220b2c3e0_SlicingExprModel(void) = default;

	inline bool operator==(_220b2c3e0_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_220b2c3e0_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _220b2c5cc_TraitSubIdentExprModel {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_220b31636_Fn> _field_Method;
	jule::Ptr<_220b376b4_Trait> _field_Trt;
	

	_220b2c5cc_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_220b2c5cc_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_220b2c5cc_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _220b2c9ea_StructSubIdentExprModel {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Ptr<_220bceecb_Data> _field_Expr;
	jule::Ptr<_220c0ae5d_TypeKind> _field_ExprKind;
	jule::Ptr<_220b31a10_FnIns> _field_Method;
	jule::Ptr<_21eec31e3_FieldIns> _field_Field;
	jule::Ptr<_21eec33d0_StructIns> _field_Owner;
	

	_220b2c9ea_StructSubIdentExprModel(void) = default;

	inline bool operator==(_220b2c9ea_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_220b2c9ea_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _220b2cbd7_StructStaticIdentExprModel {
	jule::Ptr<_21eec33d0_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_220b31a10_FnIns> _field_Method;
	

	_220b2cbd7_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_220b2cbd7_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_220b2cbd7_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _220b2cdc4_ArrayExprModel {
	jule::Ptr<_220c17046_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

	_220b2cdc4_ArrayExprModel(void) = default;


};
struct _220b2d0b1_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	_220b2d0b1_CommonIdentExprModel(void) = default;

	inline bool operator==(_220b2d0b1_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_220b2d0b1_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _220b2d29d_CommonSubIdentExprModel {
	jule::Ptr<_220c0ae5d_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Ident;
	

	_220b2d29d_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_220b2d29d_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_220b2d29d_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _220b2d48a_TupleExprModel {
	jule::Slice<jule::Ptr<_220bceecb_Data>> _field_Datas;
	

	_220b2d48a_TupleExprModel(void) = default;


};
struct _220b2d677_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_220b2d677_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_220b2d677_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_220b2d677_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _220b2d864_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_220b2d864_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_220b2d864_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_220b2d864_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _220b2da51_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_220b2da51_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_220b2da51_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_220b2da51_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _220b2dc3d_BuiltinNewCallExprModel {
	jule::Ptr<_220c0ae5d_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	_220b2dc3d_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_220b2dc3d_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_220b2dc3d_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _220b2de2a_BuiltinPanicCallExprModel {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_220b2de2a_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_220b2de2a_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_220b2de2a_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _220b2e117_BuiltinAssertCallExprModel {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	_220b2e117_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_220b2e117_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_220b2e117_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _220b2e304_BuiltinMakeCallExprModel {
	jule::Ptr<_220c0ae5d_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	_220b2e304_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_220b2e304_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_220b2e304_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _220b2e4e1_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	_220b2e4e1_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_220b2e4e1_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_220b2e4e1_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _220b2e6cd_BuiltinLenCallExprModel {
	jule::Ptr<_220bceecb_Data> _field_Expr;
	

	_220b2e6cd_BuiltinLenCallExprModel(void) = default;

	inline bool operator==(_220b2e6cd_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_220b2e6cd_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _220b2e8ba_BuiltinCapCallExprModel {
	jule::Ptr<_220bceecb_Data> _field_Expr;
	

	_220b2e8ba_BuiltinCapCallExprModel(void) = default;

	inline bool operator==(_220b2e8ba_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_220b2e8ba_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _220b2c7b9_BuiltinDeleteCallExprModel {
	jule::Ptr<_220bceecb_Data> _field_Dest;
	jule::Ptr<_220bceecb_Data> _field_Key;
	

	_220b2c7b9_BuiltinDeleteCallExprModel(void) = default;

	inline bool operator==(_220b2c7b9_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_220b2c7b9_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _220b3002a_BuiltinCopyCallExprModel {
	jule::Ptr<_220bceecb_Data> _field_Dest;
	jule::Ptr<_220bceecb_Data> _field_Src;
	

	_220b3002a_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_220b3002a_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_220b3002a_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _220b30217_BuiltinErrorCallExprModel {
	jule::Ptr<_220b31a10_FnIns> _field_Func;
	jule::Ptr<_220bceecb_Data> _field_Err;
	

	_220b30217_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_220b30217_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_220b30217_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _220b30404_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_220b30404_SizeofExprModel(void) = default;

	inline bool operator==(_220b30404_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_220b30404_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _220b305e1_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_220b305e1_AlignofExprModel(void) = default;

	inline bool operator==(_220b305e1_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_220b305e1_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _220b307cd_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	_220b307cd_RuneExprModel(void) = default;

	inline bool operator==(_220b307cd_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_220b307cd_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _220b309ba_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_220b309ba_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_220b309ba_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_220b309ba_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _220b30ba7_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

	_220b30ba7_BackendEmitExprModel(void) = default;


};
struct _220b30d94_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_220b30d94_FreeExprModel(void) = default;

	inline bool operator==(_220b30d94_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_220b30d94_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _220b3125c_RetType {
	jule::Ptr<_220c1033b_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _field_Idents;
	

	_220b3125c_RetType(void) = default;


};
inline jule::Ptr<_220b31823_ParamIns> _22000cb12_instance(jule::Ptr<_220b31449_Param>);
inline jule::Bool _22001a45a_IsSelf(_220b31449_Param*);
inline jule::Bool _22001b35c_IsRef(_220b31449_Param*);
struct _220b31449_Param {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_220c1033b_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	_220b31449_Param(void) = default;

	inline bool operator==(_220b31449_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_220b31449_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _22001c270_IsVoid(_220b31636_Fn*);
inline jule::Bool _22004d735_IsMethod(_220b31636_Fn*);
inline jule::Bool _220057772_IsEntryPoint(_220b31636_Fn*);
inline jule::Bool _22000d34e_IsInit(_220b31636_Fn*);
inline jule::Bool _2200105c6_IsAnon(_220b31636_Fn*);
inline jule::Bool _220012166_AnyVar(_220b31636_Fn*);
inline jule::Ptr<_220b31a10_FnIns> _220012e14_instanceForce(jule::Ptr<_220b31636_Fn>);
inline jule::Ptr<_220b31a10_FnIns> _22001c89c_instance(jule::Ptr<_220b31636_Fn>);
inline jule::Ptr<_220b31a10_FnIns> _22000b869_appendInstance(_220b31636_Fn*, jule::Ptr<_220b31a10_FnIns>&);
struct _220b31636_Fn {
	jule::Ptr<_220b69471_Sema> _field_sema;
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_21ee6d710_Directive>> _field_Directives;
	jule::Ptr<_21eeb679c_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>> _field_Generics;
	jule::Ptr<_220b3125c_RetType> _field_Result;
	jule::Slice<jule::Ptr<_220b31449_Param>> _field_Params;
	jule::Ptr<_21eec3006_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_220b31a10_FnIns>> _field_Instances;
	

	_220b31636_Fn(void) = default;


};
inline jule::Str _220044c48_Str(_220b31823_ParamIns*);
struct _220b31823_ParamIns {
	jule::Ptr<_220b31449_Param> _field_Decl;
	jule::Ptr<_220c0ae5d_TypeKind> _field_Kind;
	

	_220b31823_ParamIns(void) = default;

	inline bool operator==(_220b31823_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_220b31823_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _22000e7d4_Str(_220b31a10_FnIns*);
inline jule::Bool _220b31bec_Equal(jule::Ptr<_220b31a10_FnIns>, jule::Ptr<_220c0ae5d_TypeKind>);
inline jule::Bool _220b31d2e_EqualFn(jule::Ptr<_220b31a10_FnIns>, jule::Ptr<_220b31a10_FnIns>&);
inline jule::Bool _220b31e61_equalTrait(jule::Ptr<_220b31a10_FnIns>, jule::Ptr<_220b31a10_FnIns>&);
inline jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>> _220b32093_Types(_220b31a10_FnIns*);
inline jule::Bool _220b321c5_IsBuiltin(_220b31a10_FnIns*);
inline jule::Bool _220b32307_IsAnon(_220b31a10_FnIns*);
inline jule::Bool _220b32439_Same(_220b31a10_FnIns*, jule::Ptr<_220b31a10_FnIns>);
inline jule::Str _220b3256b_GetKindStr(_220b31a10_FnIns*, jule::Bool);
struct _220b31a10_FnIns {
	jule::Ptr<_21eec33d0_StructIns> _field_Owner;
	jule::Ptr<_220b31636_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_220c09731_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_220b31823_ParamIns>> _field_Params;
	jule::Ptr<_220c0ae5d_TypeKind> _field_Result;
	jule::Ptr<_220b42b20_Scope> _field_Scope;
	jule::Ptr<_220b329ab_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)> _field_caller;
	jule::Bool _field_reloaded = false;
	

	_220b31a10_FnIns(void) = default;


};
inline jule::Ptr<_220b329ab_ReferenceStack> static__220b32b98_new(void);
inline jule::I64 _220b32cca_Len(_220b329ab_ReferenceStack*);
inline jule::Any _220b32e0c_At(_220b329ab_ReferenceStack*, jule::I64);
inline void _220b3303e_Push(_220b329ab_ReferenceStack*, jule::Any);
inline jule::Bool _206058319_Exist(_220b329ab_ReferenceStack*, jule::Ptr<_220b31a10_FnIns>);
inline jule::Bool _20606c2c8_Exist(_220b329ab_ReferenceStack*, jule::Ptr<_220b8746c_Var>);
inline jule::Bool _20611431a_Exist(_220b329ab_ReferenceStack*, jule::Ptr<_21eec33d0_StructIns>);
inline jule::Bool _20638aae1_Exist(_220b329ab_ReferenceStack*, jule::Ptr<_220b376b4_Trait>);
struct _220b329ab_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

	_220b329ab_ReferenceStack(void) = default;


};
struct _220b332a3_Pass {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Text;
	

	_220b332a3_Pass(void) = default;

	inline bool operator==(_220b332a3_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_220b332a3_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_220b3522d_symbolBuilder> _220b355d5_getRoot(jule::Ptr<_220b3522d_symbolBuilder>);
inline void _220b35717_pushErr(_220b3522d_symbolBuilder*, jule::Ptr<_21d81d743_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _220b35849_pushErrText(_220b3522d_symbolBuilder*, jule::Ptr<_21d81d743_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _220b3597b_pushSuggestion(_220b3522d_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _220b35aad_checkCppUseDeclPath(_220b3522d_symbolBuilder*, jule::Ptr<_21eebdebe_UseDecl>&, jule::Str);
inline jule::Ptr<_220b61325_ImportInfo> _220b35be0_buildCppHeaderImport(_220b3522d_symbolBuilder*, jule::Ptr<_21eebdebe_UseDecl>&);
inline jule::Ptr<_220b61325_ImportInfo> _220b35d22_buildStdImport(_220b3522d_symbolBuilder*, jule::Ptr<_21eebdebe_UseDecl>&);
inline jule::Ptr<_220b61325_ImportInfo> _220b35e54_buildIdentImport(jule::Ptr<_220b3522d_symbolBuilder>, jule::Ptr<_21eebdebe_UseDecl>&);
inline jule::Ptr<_220b61325_ImportInfo> _220b36086_buildImport(jule::Ptr<_220b3522d_symbolBuilder>, jule::Ptr<_21eebdebe_UseDecl>&);
inline jule::Bool _220b361b8_checkDuplicateUseDecl(_220b3522d_symbolBuilder*, jule::Ptr<_220b61325_ImportInfo>&);
inline void _220b362ea_implImportSelections(_220b3522d_symbolBuilder*, jule::Ptr<_220b61325_ImportInfo>&, jule::Ptr<_21eebdebe_UseDecl>&);
inline jule::Str _220b3642c_getAsLinkPath(jule::Ptr<_220b3522d_symbolBuilder>, jule::Str);
inline void _220b3655e_pushCycleError(jule::Ptr<_220b3522d_symbolBuilder>, jule::Ptr<_220b3522d_symbolBuilder>&, jule::Str, jule::Str&);
inline void _220b36691_pushCrossCycleError(jule::Ptr<_220b3522d_symbolBuilder>, jule::Ptr<_220b3522d_symbolBuilder>&, jule::Ptr<_220b61325_ImportInfo>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Bool _220b367c3_checkImportCycles(jule::Ptr<_220b3522d_symbolBuilder>, jule::Ptr<_220b61325_ImportInfo>, jule::Ptr<_21eebdebe_UseDecl>&);
inline void _220b36905_checkPackageAccessibility(_220b3522d_symbolBuilder*, jule::Ptr<_21eebdebe_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _220b36a37_importPackage(jule::Ptr<_220b3522d_symbolBuilder>, jule::Ptr<_220b61325_ImportInfo>&, jule::Ptr<_21eebdebe_UseDecl>&);
inline jule::Ptr<_220b61325_ImportInfo> _220b36b69_importUseDecl(jule::Ptr<_220b3522d_symbolBuilder>, jule::Ptr<_21eebdebe_UseDecl>&);
inline void _220b36c9b_importUseDecls(jule::Ptr<_220b3522d_symbolBuilder>);
inline void _220b36dcd_appendNode(_220b3522d_symbolBuilder*, _21ee6d314_Node&);
inline void _220b37010_appendNodes(_220b3522d_symbolBuilder*);
inline void _220b37142_pushDirectivePass(_220b3522d_symbolBuilder*, jule::Ptr<_21ee6d710_Directive>&);
inline void _220b37274_appendTopDirectives(_220b3522d_symbolBuilder*);
inline void _220b373a6_build(jule::Ptr<_220b3522d_symbolBuilder>);
struct _220b3522d_symbolBuilder {
	jule::Ptr<_220b3522d_symbolBuilder> _field_owner;
	jule::Trait<_220b5d6a7_Importer> _field_importer;
	jule::Slice<_21d4e511d_Log> _field_errors;
	jule::Ptr<_21ee6c665_Ast> _field_ast;
	jule::Ptr<_220bca1a2_SymbolTable> _field_table;
	

	_220b3522d_symbolBuilder(void) = default;


};
inline jule::Str _220b378a1_Str(_220b376b4_Trait*);
inline jule::Bool _220b379d3_Equal(jule::Ptr<_220b376b4_Trait>, jule::Ptr<_220c0ae5d_TypeKind>);
inline jule::Bool _220b37b15_IsBuiltin(_220b376b4_Trait*);
inline jule::Ptr<_220b31636_Fn> _220b37c47_FindMethod(_220b376b4_Trait*, jule::Str);
struct _220b376b4_Trait {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_220b31636_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_21eec3006_Struct>> _field_Implemented;
	

	_220b376b4_Trait(void) = default;


};
inline jule::Bool _220b38242_AutoExpr(_220b38055_EnumItem*);
struct _220b38055_EnumItem {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_220bd1054_Value> _field_Value;
	

	_220b38055_EnumItem(void) = default;

	inline bool operator==(_220b38055_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_220b38055_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _220b38561_Str(_220b38374_Enum*);
inline jule::Bool _220b38693_Equal(jule::Ptr<_220b38374_Enum>, jule::Ptr<_220c0ae5d_TypeKind>);
inline jule::Ptr<_220b38055_EnumItem> _220b387c5_FindItem(_220b38374_Enum*, jule::Str);
struct _220b38374_Enum {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_220c1033b_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_220b38055_EnumItem>> _field_Items;
	

	_220b38374_Enum(void) = default;


};
struct _220b38907_TypeEnumItem {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_220c1033b_TypeSymbol> _field_Kind;
	

	_220b38907_TypeEnumItem(void) = default;

	inline bool operator==(_220b38907_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_220b38907_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _220b38cd1_Str(_220b38ae4_TypeEnum*);
inline jule::Bool _220b38e13_Equal(jule::Ptr<_220b38ae4_TypeEnum>, jule::Ptr<_220c0ae5d_TypeKind>);
inline jule::Ptr<_220b38907_TypeEnumItem> _220b39188_FindItem(_220b38ae4_TypeEnum*, jule::Str);
struct _220b38ae4_TypeEnum {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_220b38907_TypeEnumItem>> _field_Items;
	

	_220b38ae4_TypeEnum(void) = default;


};
inline jule::Fn<jule::Bool(jule::Ptr<_220b69471_Sema>&,jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>&)> _220b3b0ad_readyFn(jule::Ptr<_220b3ab7e_constraintChecker>);
inline jule::Bool _220b3b322_readyFi(jule::Ptr<_220b3ab7e_constraintChecker>);
inline jule::Bool _220b3b586_readySi(jule::Ptr<_220b3ab7e_constraintChecker>);
inline jule::Bool _220b3b7ea_ready(jule::Ptr<_220b3ab7e_constraintChecker>);
inline jule::Bool _220b3ba5e_check(jule::Ptr<_220b3ab7e_constraintChecker>);
struct _220b3ab7e_constraintChecker {
	jule::Ptr<_220b69471_Sema> _field_s;
	jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_220c09731_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>> _field_genericsA;
	jule::Ptr<_220b31a10_FnIns> _field_fi;
	jule::Ptr<_21eec33d0_StructIns> _field_si;
	jule::Ptr<_21d81d743_Token> _field_et;
	jule::Bool _field_uniq = false;
	

	_220b3ab7e_constraintChecker(void) = default;


};
inline jule::Bool _220b3ceb1_IsTraitImpl(_220b3cab5_Impl*);
inline jule::Bool _220b3d225_IsStructImpl(_220b3cab5_Impl*);
struct _220b3cab5_Impl {
	jule::Ptr<_21eea19a7_TypeDecl> _field_Base;
	jule::Ptr<_21eea19a7_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_220b31636_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_220b8746c_Var>> _field_Statics;
	

	_220b3cab5_Impl(void) = default;


};
struct _220b42b20_Scope {
	jule::Ptr<_220b42b20_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	

	_220b42b20_Scope(void) = default;


};
struct _220b4301b_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_220b42b20_Scope> _field_Scope;
	

	_220b4301b_If(void) = default;

	inline bool operator==(_220b4301b_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_220b4301b_If _other) { return !this->operator==(_other); }


};
struct _220b43307_Else {
	jule::Ptr<_220b42b20_Scope> _field_Scope;
	

	_220b43307_Else(void) = default;

	inline bool operator==(_220b43307_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_220b43307_Else _other) { return !this->operator==(_other); }


};
struct _220b4367b_Conditional {
	jule::Slice<jule::Ptr<_220b4301b_If>> _field_Elifs;
	jule::Ptr<_220b43307_Else> _field_Default;
	

	_220b4367b_Conditional(void) = default;


};
struct _220b43967_InfIter {
	jule::Ptr<_220b42b20_Scope> _field_Scope;
	

	_220b43967_InfIter(void) = default;

	inline bool operator==(_220b43967_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_220b43967_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _220b44281_IsWhileNext(_220b43dda_WhileIter*);
struct _220b43dda_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_220b42b20_Scope> _field_Scope;
	

	_220b43dda_WhileIter(void) = default;

	inline bool operator==(_220b43dda_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_220b43dda_WhileIter _other) { return !this->operator==(_other); }


};
struct _220b447c0_RangeIter {
	jule::Ptr<_220bceecb_Data> _field_Expr;
	jule::Ptr<_220b42b20_Scope> _field_Scope;
	jule::Ptr<_220b8746c_Var> _field_KeyA;
	jule::Ptr<_220b8746c_Var> _field_KeyB;
	

	_220b447c0_RangeIter(void) = default;

	inline bool operator==(_220b447c0_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_220b447c0_RangeIter _other) { return !this->operator==(_other); }


};
struct _220b44bbb_ContSt {
	jule::Uintptr _field_It = 0;
	

	_220b44bbb_ContSt(void) = default;

	inline bool operator==(_220b44bbb_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_220b44bbb_ContSt _other) { return !this->operator==(_other); }


};
struct _220b45073_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	_220b45073_BreakSt(void) = default;

	inline bool operator==(_220b45073_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_220b45073_BreakSt _other) { return !this->operator==(_other); }


};
struct _220b4535e_Label {
	jule::Str _field_Ident;
	

	_220b4535e_Label(void) = default;

	inline bool operator==(_220b4535e_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_220b4535e_Label _other) { return !this->operator==(_other); }


};
struct _220b4564a_GotoSt {
	jule::Str _field_Ident;
	

	_220b4564a_GotoSt(void) = default;

	inline bool operator==(_220b4564a_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_220b4564a_GotoSt _other) { return !this->operator==(_other); }


};
struct _220b45a02_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	_220b45a02_Postfix(void) = default;

	inline bool operator==(_220b45a02_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_220b45a02_Postfix _other) { return !this->operator==(_other); }


};
struct _220b45e75_Assign {
	jule::Ptr<_22001ab86_OperandExprModel> _field_L;
	jule::Ptr<_22001ab86_OperandExprModel> _field_R;
	jule::Ptr<_21d81d743_Token> _field_Op;
	

	_220b45e75_Assign(void) = default;

	inline bool operator==(_220b45e75_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_220b45e75_Assign _other) { return !this->operator==(_other); }


};
struct _220b4632c_MultiAssign {
	jule::Slice<jule::Ptr<_220bceecb_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	

	_220b4632c_MultiAssign(void) = default;


};
inline jule::Bool _220b46d77_IsGenericTypeMatch(_220b4686b_Match*);
struct _220b4686b_Match {
	jule::Ptr<_220bceecb_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Slice<jule::Ptr<_220b473b6_Case>> _field_Cases;
	jule::Ptr<_220b473b6_Case> _field_Default;
	

	_220b4686b_Match(void) = default;


};
inline jule::Bool _220b47680_isDefault(_220b473b6_Case*);
struct _220b473b6_Case {
	jule::Ptr<_220b4686b_Match> _field_Owner;
	jule::Ptr<_220b42b20_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_220bceecb_Data>> _field_Exprs;
	jule::Ptr<_220b473b6_Case> _field_Next;
	

	_220b473b6_Case(void) = default;


};
struct _220b4796b_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	_220b4796b_FallSt(void) = default;

	inline bool operator==(_220b4796b_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_220b4796b_FallSt _other) { return !this->operator==(_other); }


};
struct _220b47ce0_RetSt {
	jule::Ptr<_220b31a10_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_220b47ce0_RetSt(void) = default;

	inline bool operator==(_220b47ce0_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_220b47ce0_RetSt _other) { return !this->operator==(_other); }


};
struct _220b483ea_scopeLabel {
	jule::Ptr<_21d81d743_Token> _field_token;
	jule::Ptr<_220b4535e_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_220b49682_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	_220b483ea_scopeLabel(void) = default;

	inline bool operator==(_220b483ea_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_220b483ea_scopeLabel _other) { return !this->operator==(_other); }


};
struct _220b4886d_scopeGoto {
	jule::Ptr<_21eeb436b_GotoSt> _field_gt;
	jule::Ptr<_220b49682_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	_220b4886d_scopeGoto(void) = default;

	inline bool operator==(_220b4886d_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_220b4886d_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_220b61325_ImportInfo> _220b49b16_FindPackage(_220b49682_scopeChecker*, jule::Str);
inline jule::Ptr<_220b61325_ImportInfo> _220b49e24_SelectPackage(_220b49682_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)>);
inline jule::Ptr<_220b8746c_Var> _220b4a2cb_FindVar(_220b49682_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_220c0a26a_TypeAlias> _220b4a683_FindTypeAlias(_220b49682_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_21eec3006_Struct> _220b4aa3a_FindStruct(_220b49682_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_220b31636_Fn> _220b4ade2_FindFn(_220b49682_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_220b376b4_Trait> _220b4b200_FindTrait(_220b49682_scopeChecker*, jule::Str);
inline jule::Ptr<_220b38374_Enum> _220b4b50d_FindEnum(_220b49682_scopeChecker*, jule::Str);
inline jule::Ptr<_220b38ae4_TypeEnum> _220b4b81b_FindTypeEnum(_220b49682_scopeChecker*, jule::Str);
inline jule::Bool _220b4bb4b_isUnsafe(jule::Ptr<_220b49682_scopeChecker>);
inline jule::Bool _220b4bdb0_isRoot(_220b49682_scopeChecker*);
inline void _220b4c08b_stop(_220b49682_scopeChecker*);
inline jule::Bool _220b4c300_stopped(_220b49682_scopeChecker*);
inline jule::Bool _220b4c564_isDeferred(jule::Ptr<_220b49682_scopeChecker>);
inline jule::Ptr<_220b49682_scopeChecker> _220b4c7c8_getRoot(jule::Ptr<_220b49682_scopeChecker>);
inline jule::Ptr<_220b49682_scopeChecker> _220b4ca3c_getHardRoot(jule::Ptr<_220b49682_scopeChecker>);
inline jule::Ptr<_220b4535e_Label> _220b4cd4a_findLabel(_220b49682_scopeChecker*, jule::Str);
inline jule::Ptr<_220b483ea_scopeLabel> _220b4d158_findLabelScope(jule::Ptr<_220b49682_scopeChecker>, jule::Str);
inline jule::Ptr<_220b483ea_scopeLabel> _220b4d466_findLabelAll(_220b49682_scopeChecker*, jule::Str);
inline jule::Bool _220b4d81d_isDuplicatedIdent(_220b49682_scopeChecker*, jule::Uintptr, jule::Str);
inline void _220b4da93_checkVarDecl(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb9272_VarDecl>);
inline void _220b4dd18_checkTypeAliasDecl(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eebcad3_TypeAliasDecl>);
inline jule::Ptr<_220b42b20_Scope> _220b4e07c_getChild(_220b49682_scopeChecker*);
inline void _220b4e445_checkChildSsc(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb679c_ScopeTree>&, jule::Ptr<_220b42b20_Scope>&, jule::Ptr<_220b49682_scopeChecker>&);
inline jule::Ptr<_220b42b20_Scope> _220b4e7ec_checkChildSc(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb679c_ScopeTree>&, jule::Ptr<_220b49682_scopeChecker>&);
inline jule::Ptr<_220b42b20_Scope> _220b4eb0a_checkChild(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb679c_ScopeTree>&);
inline void _220b4ed80_checkAnonScope(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb679c_ScopeTree>);
inline void _220b5019e_processErrorCall(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_220b30217_BuiltinErrorCallExprModel>&, jule::Ptr<_21d81d743_Token>);
inline void _220b50424_checkExpr(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eea5ec8_Expr>);
inline jule::Ptr<_220b4301b_If> _220b50732_checkIf(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eebbad2_If>);
inline jule::Ptr<_220b43307_Else> _220b50a40_checkElse(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eebbe89_Else>);
inline void _220b50cb5_checkConditional(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eebc40c_Conditional>);
inline void _220b51227_checkIterScopeSsc(jule::Ptr<_220b49682_scopeChecker>, jule::Uintptr, jule::Ptr<_21eeb679c_ScopeTree>, jule::Ptr<_220b42b20_Scope>&, jule::Ptr<_220b49682_scopeChecker>);
inline jule::Ptr<_220b42b20_Scope> _220b51678_checkIterScopeSc(jule::Ptr<_220b49682_scopeChecker>, jule::Uintptr, jule::Ptr<_21eeb679c_ScopeTree>, jule::Ptr<_220b49682_scopeChecker>);
inline jule::Ptr<_220b42b20_Scope> _220b51a30_checkIterScope(jule::Ptr<_220b49682_scopeChecker>, jule::Uintptr, jule::Ptr<_21eeb679c_ScopeTree>&);
inline void _220b51ca5_checkInfIter(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb9c89_Iter>&);
inline void _220b5202a_checkWhileIter(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb9c89_Iter>&);
inline void _220b522a0_checkRangeIter(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb9c89_Iter>&);
inline void _220b52525_checkIter(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb9c89_Iter>);
inline jule::Bool _220b52833_checkValidContLabel(jule::Ptr<_220b49682_scopeChecker>, jule::Uintptr);
inline jule::Bool _220b52b41_checkValidBreakLabel(jule::Ptr<_220b49682_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_220b44bbb_ContSt> _220b52e4e_checkContValidScope(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eebb65e_ContSt>);
inline void _220b531c4_checkCont(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eebb65e_ContSt>);
inline void _220b53449_checkLabel(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb3eb4_LabelSt>);
inline void _220b536be_pushGoto(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb436b_GotoSt>);
inline void _220b53944_checkPostfix(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb52a1_AssignSt>);
inline jule::Bool _220b53c52_isNewAssignIdent(_220b49682_scopeChecker*, jule::Str);
inline jule::Bool _220b541a3_checkStructureAssignOp(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eec33d0_StructIns>&, jule::Ptr<_21eeb52a1_AssignSt>&, jule::Ptr<_220bceecb_Data>&);
inline void _220b54428_checkSingleAssign(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb52a1_AssignSt>&);
inline void _220b54956_processEndPartOfMultiAssign(_220b49682_scopeChecker*, jule::Ptr<_220b4632c_MultiAssign>&, jule::Ptr<_21eeb52a1_AssignSt>&, jule::Ptr<_21eeb4c62_AssignLeft>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&);
inline void _220b54bdc_checkMultiAssign(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb52a1_AssignSt>&);
inline void _220b54e62_checkAssignSt(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb52a1_AssignSt>);
inline jule::Ptr<_220b42b20_Scope> _220b55319_checkCaseScope(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_220b473b6_Case>&, jule::Ptr<_21eeb679c_ScopeTree>&);
inline jule::Ptr<_220b473b6_Case> _220b55814_checkCase(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_220b4686b_Match>, jule::I64, jule::Ptr<_21eebd056_Case>, jule::Ptr<_220bceecb_Data>);
inline void _220b55bcc_checkCases(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eebd72c_MatchCase>&, jule::Ptr<_220b4686b_Match>, jule::Ptr<_220bceecb_Data>);
inline jule::Ptr<_220b473b6_Case> _220b56084_checkDefault(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_220b4686b_Match>, jule::Ptr<_21eebbe89_Else>);
inline void _220b56309_checkComptimePanic(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_220b42b20_Scope>&);
inline void _220b56628_pushTypeMatch(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_220b4686b_Match>, jule::Ptr<_21eebd72c_MatchCase>&);
inline void _220b5689d_checkTypeMatch(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eebd72c_MatchCase>&);
inline void _220b56b23_checkCommonMatch(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eebd72c_MatchCase>&);
inline void _220b56d98_checkMatch(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eebd72c_MatchCase>);
inline void _220b5711d_checkFall(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb4657_FallSt>);
inline jule::Ptr<_220b45073_BreakSt> _220b5742b_checkBreakWithLabel(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eebb2a7_BreakSt>);
inline jule::Ptr<_220b45073_BreakSt> _220b57739_checkPlainBreak(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eebb2a7_BreakSt>);
inline void _220b579ae_checkBreak(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eebb2a7_BreakSt>);
inline void _220b57c34_checkRet(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb9629_RetSt>);
inline void _220b57ea9_checkUseExpr(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eea6869_UseExpr>);
inline void _220b5822e_checkNode(jule::Ptr<_220b49682_scopeChecker>, jule::Any&);
inline void _220b5840a_checkResult(jule::Ptr<_220b49682_scopeChecker>);
inline void _220b585d6_checkTree(jule::Ptr<_220b49682_scopeChecker>);
inline void _220b58905_checkGoto(_220b49682_scopeChecker*, jule::Ptr<_220b4886d_scopeGoto>&, jule::Ptr<_220b483ea_scopeLabel>&);
inline void _220b58ad1_checkGotos(_220b49682_scopeChecker*);
inline void _220b58cac_checkLabels(_220b49682_scopeChecker*);
inline void _220b58e88_checkVars(_220b49682_scopeChecker*);
inline void _220b59164_checkAliases(_220b49682_scopeChecker*);
inline void _220b59483_check(jule::Ptr<_220b49682_scopeChecker>, jule::Ptr<_21eeb679c_ScopeTree>&, jule::Ptr<_220b42b20_Scope>&);
inline jule::Ptr<_220b49682_scopeChecker> _220b596e7_newChildChecker(jule::Ptr<_220b49682_scopeChecker>);
struct _220b49682_scopeChecker {
	jule::Ptr<_21d81d743_Token> _field_calledFrom;
	jule::Ptr<_220b69471_Sema> _field_s;
	jule::Ptr<_220b31a10_FnIns> _field_owner;
	jule::Ptr<_220b49682_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_220bca1a2_SymbolTable> _field_table;
	jule::Ptr<_220b42b20_Scope> _field_scope;
	jule::Ptr<_21eeb679c_ScopeTree> _field_tree;
	jule::Ptr<_220b31a10_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_220b483ea_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_220b4886d_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	_220b49682_scopeChecker(void) = default;

	inline bool operator==(_220b49682_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_220b49682_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _220b5a6d7_checkCdef(_220b5a297_directiveChecker*, jule::Ptr<_21ee6d710_Directive>&);
inline void _220b5a95c_checkTypedef(_220b5a297_directiveChecker*, jule::Ptr<_21ee6d710_Directive>&);
inline void _220b5abd2_checkDerive(_220b5a297_directiveChecker*, jule::Ptr<_21ee6d710_Directive>&);
inline void _220b5ae57_checkNamespace(_220b5a297_directiveChecker*, jule::Ptr<_21ee6d710_Directive>&);
inline void _220b5b1cc_checkDeprecated(_220b5a297_directiveChecker*, jule::Ptr<_21ee6d710_Directive>&);
inline void _220b5b452_checkTest(_220b5a297_directiveChecker*, jule::Ptr<_21ee6d710_Directive>&);
inline void _220b5b6c7_checkDirective(_220b5a297_directiveChecker*, jule::Ptr<_21ee6d710_Directive>&);
inline void _220b5b8a3_check(_220b5a297_directiveChecker*);
struct _220b5a297_directiveChecker {
	jule::Ptr<_220b69471_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_21ee6d710_Directive>>> _field_d;
	jule::Any _field_o;
	

	_220b5a297_directiveChecker(void) = default;

	inline bool operator==(_220b5a297_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_220b5a297_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_220b61325_ImportInfo> _220b61842_FindPackage(_220b61325_ImportInfo*, jule::Str);
inline jule::Ptr<_220b61325_ImportInfo> _220b61b50_SelectPackage(_220b61325_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)>);
inline jule::Ptr<_220b8746c_Var> _220b62007_FindVar(_220b61325_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_220c0a26a_TypeAlias> _220b623ae_FindTypeAlias(_220b61325_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_21eec3006_Struct> _220b62766_FindStruct(_220b61325_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_220b31636_Fn> _220b62b1d_FindFn(_220b61325_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_220b376b4_Trait> _220b62e2b_FindTrait(_220b61325_ImportInfo*, jule::Str);
inline jule::Ptr<_220b38374_Enum> _220b63239_FindEnum(_220b61325_ImportInfo*, jule::Str);
inline jule::Ptr<_220b38ae4_TypeEnum> _220b63547_FindTypeEnum(_220b61325_ImportInfo*, jule::Str);
inline jule::Bool _220b638dd_isLookupable(_220b61325_ImportInfo*, jule::Str);
inline jule::Bool _220b63beb_existIdent(_220b61325_ImportInfo*, jule::Str);
inline jule::Bool _220b63e82_isAccessibleViaSelection(_220b61325_ImportInfo*);
struct _220b61325_ImportInfo {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _field_Selected;
	jule::Ptr<_220b6427e_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	

	_220b61325_ImportInfo(void) = default;


};
inline jule::Ptr<_220b61325_ImportInfo> _220b64757_FindPackage(_220b6427e_Package*, jule::Str);
inline jule::Ptr<_220b61325_ImportInfo> _220b64a65_SelectPackage(_220b6427e_Package*, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)>);
inline jule::Ptr<_220b8746c_Var> _220b64e1c_FindVar(_220b6427e_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_220c0a26a_TypeAlias> _220b652c4_FindTypeAlias(_220b6427e_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_21eec3006_Struct> _220b6567b_FindStruct(_220b6427e_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_220b31636_Fn> _220b65a33_FindFn(_220b6427e_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_220b376b4_Trait> _220b65d41_FindTrait(_220b6427e_Package*, jule::Str);
inline jule::Ptr<_220b38374_Enum> _220b6614e_FindEnum(_220b6427e_Package*, jule::Str);
inline jule::Ptr<_220b38ae4_TypeEnum> _220b6645c_FindTypeEnum(_220b6427e_Package*, jule::Str);
struct _220b6427e_Package {
	jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>> _field_Files;
	

	_220b6427e_Package(void) = default;


};
inline jule::Ptr<_220b61325_ImportInfo> _220b6998d_FindPackage(_220b69471_Sema*, jule::Str);
inline jule::Ptr<_220b61325_ImportInfo> _220b69c9b_SelectPackage(_220b69471_Sema*, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)>);
inline jule::Ptr<_220b8746c_Var> _220b6a153_FindVar(_220b69471_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_220c0a26a_TypeAlias> _220b6a50a_FindTypeAlias(_220b69471_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_21eec3006_Struct> _220b6a8b2_FindStruct(_220b69471_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_220b31636_Fn> _220b6ac69_FindFn(_220b69471_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_220b376b4_Trait> _220b6b077_FindTrait(_220b69471_Sema*, jule::Str);
inline jule::Ptr<_220b38374_Enum> _220b6b385_FindEnum(_220b69471_Sema*, jule::Str);
inline jule::Ptr<_220b38ae4_TypeEnum> _220b6b693_FindTypeEnum(_220b69471_Sema*, jule::Str);
inline jule::Bool _220b6b9e5_isFlag(_220b69471_Sema*, jule::I64);
inline void _220b6bc6a_setCurrentFile(_220b69471_Sema*, jule::Ptr<_220bca1a2_SymbolTable>);
inline void _220b6c133_pushErr(_220b69471_Sema*, jule::Ptr<_21d81d743_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _220b6c452_pushSugggestion(_220b69471_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _220b6c809_isAccessibleDefine(_220b69471_Sema*, jule::Bool, jule::Ptr<_21d81d743_Token>);
inline jule::Bool _220b6cc5a_isDuplicatedIdent(_220b69471_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _220b6d079_checkDirectives(jule::Ptr<_220b69471_Sema>, jule::Slice<jule::Ptr<_21ee6d710_Directive>>&, jule::Any);
inline jule::Bool _220b6d4ca_checkGenericQuantity(_220b69471_Sema*, jule::I64, jule::I64, jule::Ptr<_21d81d743_Token>);
inline jule::Bool _220b6d8a4_isDuplicatedImportSelection(_220b69471_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _220b6dc6c_getImportDef(_220b69471_Sema*, jule::Str, jule::Ptr<_220b61325_ImportInfo>&);
inline jule::Bool _205be7b46_checkImportSelection(_220b69471_Sema*, jule::Ptr<_21d81d743_Token>&, jule::Ptr<_220b8746c_Var>&);
inline jule::Bool _205bebb17_checkImportSelection(_220b69471_Sema*, jule::Ptr<_21d81d743_Token>&, jule::Ptr<_220c0a26a_TypeAlias>&);
inline jule::Bool _205c00aa5_checkImportSelection(_220b69471_Sema*, jule::Ptr<_21d81d743_Token>&, jule::Ptr<_21eec3006_Struct>&);
inline jule::Bool _205c04bca_checkImportSelection(_220b69471_Sema*, jule::Ptr<_21d81d743_Token>&, jule::Ptr<_220b376b4_Trait>&);
inline jule::Bool _205c08b68_checkImportSelection(_220b69471_Sema*, jule::Ptr<_21d81d743_Token>&, jule::Ptr<_220b38374_Enum>&);
inline jule::Bool _205c0cb06_checkImportSelection(_220b69471_Sema*, jule::Ptr<_21d81d743_Token>&, jule::Ptr<_220b38ae4_TypeEnum>&);
inline jule::Bool _205c11a94_checkImportSelection(_220b69471_Sema*, jule::Ptr<_21d81d743_Token>&, jule::Ptr<_220b31636_Fn>&);
inline jule::Bool _220b6e454_checkImportSelectedSelections(_220b69471_Sema*, jule::Ptr<_220b61325_ImportInfo>&);
inline jule::Bool _205c1602c_checkImportsAllSelectionsFromCollection(_220b69471_Sema*, jule::Slice<jule::Ptr<_220b8746c_Var>>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Bool _205c195b3_checkImportsAllSelectionsFromCollection(_220b69471_Sema*, jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Bool _205c19bbd_checkImportsAllSelectionsFromCollection(_220b69471_Sema*, jule::Slice<jule::Ptr<_21eec3006_Struct>>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Bool _205c2008b_checkImportsAllSelectionsFromCollection(_220b69471_Sema*, jule::Slice<jule::Ptr<_220b31636_Fn>>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Bool _205c206a7_checkImportsAllSelectionsFromCollection(_220b69471_Sema*, jule::Slice<jule::Ptr<_220b376b4_Trait>>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Bool _205c233be_checkImportsAllSelectionsFromCollection(_220b69471_Sema*, jule::Slice<jule::Ptr<_220b38374_Enum>>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Bool _205c260d6_checkImportsAllSelectionsFromCollection(_220b69471_Sema*, jule::Slice<jule::Ptr<_220b38ae4_TypeEnum>>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Bool _220b6eb80_checkImportAllSelections(_220b69471_Sema*, jule::Ptr<_220b61325_ImportInfo>&);
inline jule::Bool _220b6ee9e_checkImportSelections(_220b69471_Sema*, jule::Ptr<_220b61325_ImportInfo>&);
inline jule::Bool _220b702ac_isUseAliasDuplication(_220b69471_Sema*, jule::Ptr<_220b61325_ImportInfo>&);
inline jule::Bool _220b705ba_checkImport(_220b69471_Sema*, jule::Ptr<_220b61325_ImportInfo>&);
inline void _220b70796_checkImports(_220b69471_Sema*);
inline void _220b70972_implFileImpls(jule::Ptr<_220b69471_Sema>);
inline void _220b70b4d_implImpls(jule::Ptr<_220b69471_Sema>);
inline void _220b70d29_checkEnums(jule::Ptr<_220b69471_Sema>);
inline _220c197c9_typeChecker _220b7127a_typeChecker(jule::Ptr<_220b69471_Sema>, jule::Trait<_220c2bc3c_Lookup>, jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>, jule::Ptr<_220c188e9_referencer>);
inline jule::Ptr<_220c0ae5d_TypeKind> _220b71775_buildTypeWithRefers(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eea19a7_TypeDecl>&, jule::Trait<_220c2bc3c_Lookup>, jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>, jule::Ptr<_220c188e9_referencer>);
inline jule::Bool _220b71c70_checkTypeWithRefers(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220c1033b_TypeSymbol>&, jule::Trait<_220c2bc3c_Lookup>, jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>, jule::Ptr<_220c188e9_referencer>);
inline jule::Ptr<_220b3ab7e_constraintChecker> _220b71ed4_constraintChecker(jule::Ptr<_220b69471_Sema>);
inline jule::Bool _220b7238b_checkType(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220c1033b_TypeSymbol>&, jule::Trait<_220c2bc3c_Lookup>);
inline jule::Ptr<_220c0ae5d_TypeKind> _220b727dc_buildTypeWithGenerics(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eea19a7_TypeDecl>&, jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>, jule::Ptr<_220b329ab_ReferenceStack>);
inline jule::Ptr<_220c0ae5d_TypeKind> _220b72aea_buildType(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eea19a7_TypeDecl>&);
inline jule::Ptr<_220c0ae5d_TypeKind> _220b72e08_selectType(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eea19a7_TypeDecl>&);
inline jule::Ptr<_220bd1a49_Eval> _220b73359_evalpd(jule::Ptr<_220b69471_Sema>, jule::Trait<_220c2bc3c_Lookup>, jule::Ptr<_220c0ae5d_TypeKind>, jule::Ptr<_220b8746c_Var>);
inline jule::Ptr<_220bd1a49_Eval> _220b73711_evalp(jule::Ptr<_220b69471_Sema>, jule::Trait<_220c2bc3c_Lookup>, jule::Ptr<_220c0ae5d_TypeKind>);
inline jule::Ptr<_220bd1a49_Eval> _220b73a1e_eval(jule::Ptr<_220b69471_Sema>, jule::Trait<_220c2bc3c_Lookup>);
inline jule::Bool _220b74019_checkAssignType(jule::Ptr<_220b69471_Sema>, jule::Bool, jule::Ptr<_220c0ae5d_TypeKind>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21d81d743_Token>);
inline jule::Bool _220b7446a_checkTypeCompatibility(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220c0ae5d_TypeKind>&, jule::Ptr<_220c0ae5d_TypeKind>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Ptr<_220c0ae5d_TypeKind> _220b748dd_buildNonGenericTypeKind(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eea19a7_TypeDecl>&, jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>>&, jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>>&);
inline jule::Bool _220b74cc8_buildFnNonGenericTypeKinds(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b31a10_FnIns>&, jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>>&);
inline jule::Ptr<_220b31a10_FnIns> _220b750e7_getTraitCheckFnKind(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b31636_Fn>&);
inline jule::Bool _220b75548_checkConstraintsFn(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b31a10_FnIns>&, jule::Ptr<_21d81d743_Token>&, jule::Ptr<_220b31a10_FnIns>);
inline jule::Bool _220b75999_checkConstraintsStruct(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eec33d0_StructIns>&, jule::Ptr<_21d81d743_Token>&, jule::Ptr<_21eec33d0_StructIns>);
inline jule::Bool _220b75d51_fnEnvironment(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b31a10_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_220b69471_Sema>&,jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>&)>);
inline void _220b760c6_checkFnParamKind(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b31823_ParamIns>&);
inline jule::Bool _220b763d4_reloadFnInsTypes(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b31a10_FnIns>);
inline jule::Bool _220b76857_checkRefValidityForInitExpr(jule::Ptr<_220b69471_Sema>, jule::Bool, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Bool _220b76e2e_checkValidityForInitExpr(jule::Ptr<_220b69471_Sema>, jule::Bool, jule::Bool, jule::Ptr<_220c0ae5d_TypeKind>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Bool _220b772e7_checkTypeAliasDeclKind(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220c0a26a_TypeAlias>&, jule::Trait<_220c2bc3c_Lookup>);
inline void _220b77616_checkTypeAliasDecl(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220c0a26a_TypeAlias>&, jule::Trait<_220c2bc3c_Lookup>);
inline void _220b7788b_checkTypeAliasDeclDup(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220c0a26a_TypeAlias>&);
inline jule::Bool _220b77b00_checkTypeAliasDecls(jule::Ptr<_220b69471_Sema>);
inline void _205c92bbe_checkEnumItemsDup(_220b69471_Sema*, jule::Slice<jule::Ptr<_220b38055_EnumItem>>);
inline void _205c9d13b_checkEnumItemsDup(_220b69471_Sema*, jule::Slice<jule::Ptr<_220b38907_TypeEnumItem>>);
inline void _220b780ea_checkEnumItemsStr(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b38374_Enum>&);
inline void _220b78370_checkEnumItemsInt(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b38374_Enum>&);
inline void _220b785e5_checkEnumDecl(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b38374_Enum>&);
inline void _220b7886a_checkTypeEnumDecl(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b38ae4_TypeEnum>&);
inline jule::Bool _220b78ace_checkEnumDecls(jule::Ptr<_220b69471_Sema>);
inline jule::Bool _220b78d43_checkTypeEnumDecls(jule::Ptr<_220b69471_Sema>);
inline jule::Bool _220b79151_checkDeclGenerics(_220b69471_Sema*, jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>>&);
inline jule::Bool _220b7945e_checkFnDeclParamsDup(_220b69471_Sema*, jule::Ptr<_220b31636_Fn>&);
inline jule::Bool _220b7976c_checkFnDeclResultDup(_220b69471_Sema*, jule::Ptr<_220b31636_Fn>&);
inline void _220b799e2_checkFnDeclPrototype(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b31636_Fn>&);
inline void _220b79c67_checkTraitDeclMethod(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b31636_Fn>&);
inline void _220b79edc_checkTraitDeclMethods(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b376b4_Trait>&);
inline void _220b7a262_checkTraitDecl(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b376b4_Trait>&);
inline jule::Bool _220b7a4c6_checkTraitDecls(jule::Ptr<_220b69471_Sema>);
inline jule::Bool _220b7a87d_checkTraitImplMethods(_220b69471_Sema*, jule::Ptr<_220b376b4_Trait>&, jule::Ptr<_220b3cab5_Impl>&);
inline jule::Bool _220b7ac35_implToStruct(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eec3006_Struct>&, jule::Ptr<_220b3cab5_Impl>&);
inline void _220b7aeaa_implTrait(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b3cab5_Impl>&);
inline void _220b7b230_implStruct(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b3cab5_Impl>&);
inline void _220b7b4a5_implImpl(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b3cab5_Impl>&);
inline void _220b7b7c4_checkVarDecl(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b8746c_Var>&, jule::Trait<_220c2bc3c_Lookup>);
inline void _220b7ba49_checkGlobalVarDecl(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b8746c_Var>&);
inline jule::Bool _220b7bcad_checkGlobalDecls(jule::Ptr<_220b69471_Sema>);
inline jule::Bool _220b7c165_checkStructTraitImpl(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eec3006_Struct>&, jule::Ptr<_220b376b4_Trait>&);
inline jule::Bool _220b7c473_checkStructImpls(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eec3006_Struct>&);
inline jule::Bool _220b7c781_checkStructFields(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eec3006_Struct>&);
inline void _220b7ca06_checkStructDecl(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eec3006_Struct>&);
inline jule::Bool _220b7cc6a_checkStructDecls(jule::Ptr<_220b69471_Sema>);
inline void _220b7cee0_checkFnDecl(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b31636_Fn>&);
inline jule::Bool _220b7d254_checkFnDecls(jule::Ptr<_220b69471_Sema>);
inline void _220b7d61c_pushCycleError(_220b69471_Sema*, jule::Ptr<_21eec3006_Struct>&, jule::Ptr<_21eec3006_Struct>&, jule::Str&);
inline jule::Bool _220b7da6d_checkCrossCycle(_220b69471_Sema*, jule::Ptr<_21eec3006_Struct>&, jule::Ptr<_21eec3006_Struct>&, jule::Str&);
inline jule::Bool _220b7dee1_checkStructDeriveIllegalCycles(_220b69471_Sema*, jule::Str, jule::Ptr<_21eec3006_Struct>&, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220b7e332_checkStructInsDeriveClone(_220b69471_Sema*, jule::Ptr<_21eec33d0_StructIns>);
inline void _220b7e51e_checkPackageDecls(jule::Ptr<_220b69471_Sema>);
inline void _220b7e860_checkDataForTypeInference(_220b69471_Sema*, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21d81d743_Token>&);
inline void _220b7eae6_checkVar(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b8746c_Var>&);
inline void _220b7ee15_checkTypeVar(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b8746c_Var>&, jule::Trait<_220c2bc3c_Lookup>);
inline void _220b800e1_checkGlobalTypes(jule::Ptr<_220b69471_Sema>);
inline jule::Ptr<_220b31a10_FnIns> _220b80498_readyToCheckFn(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eec33d0_StructIns>&, jule::Ptr<_220b31636_Fn>&);
inline void _220b807b7_checkTypeMethod(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eec33d0_StructIns>&, jule::Ptr<_220b31636_Fn>&);
inline jule::Ptr<_220b31a10_FnIns> _220b80c18_checkStructInsOp(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eec33d0_StructIns>&, jule::Ptr<_220b31636_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_220b31636_Fn>)>);
inline jule::Bool _220b810c0_checkStructEnv(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eec33d0_StructIns>&, jule::Ptr<_21d81d743_Token>);
inline jule::Bool _220b81477_precheckStructIns(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eec33d0_StructIns>&, jule::Ptr<_21d81d743_Token>);
inline void _220b816ec_checkStructIns(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eec33d0_StructIns>&);
inline void _220b81972_checkTypeStruct(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eec3006_Struct>&);
inline void _220b81b4d_checkStructTypes(jule::Ptr<_220b69471_Sema>);
inline void _220b81de5_checkStructInsOperators(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eec33d0_StructIns>);
inline void _220b8217b_precheckStructType(jule::Ptr<_220b69471_Sema>, jule::Ptr<_21eec3006_Struct>&);
inline void _220b82357_precheckStructTypes(jule::Ptr<_220b69471_Sema>);
inline void _220b825cc_checkRets(_220b69471_Sema*, jule::Ptr<_220b31a10_FnIns>&);
inline void _220b828eb_checkFnInsSc(_220b69471_Sema*, jule::Ptr<_220b31a10_FnIns>&, jule::Ptr<_220b49682_scopeChecker>&);
inline void _220b82c1a_checkFnInsCaller(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b31a10_FnIns>&, jule::Ptr<_21d81d743_Token>);
inline void _220b82e90_checkFnIns(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b31a10_FnIns>&);
inline void _220b83215_checkTypeFn(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b31636_Fn>&);
inline void _220b8348a_checkTestFn(_220b69471_Sema*, jule::Ptr<_220b31a10_FnIns>&);
inline void _220b83710_precheckTypeFn(jule::Ptr<_220b69471_Sema>, jule::Ptr<_220b31636_Fn>&);
inline void _220b838db_precheckFnTypes(jule::Ptr<_220b69471_Sema>);
inline void _220b83ab7_checkFnTypes(jule::Ptr<_220b69471_Sema>);
inline void _220b83c93_checkPackageTypes(jule::Ptr<_220b69471_Sema>);
inline void _220b83e6e_setFileSemaFields(jule::Ptr<_220b69471_Sema>);
inline void _220b8414a_setSemaFields(jule::Ptr<_220b69471_Sema>);
inline void _220b843c0_check(jule::Ptr<_220b69471_Sema>, jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>&);
struct _220b69471_Sema {
	jule::Slice<_21d4e511d_Log> _field_errors;
	jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>> _field_files;
	jule::Ptr<_220bca1a2_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	

	_220b69471_Sema(void) = default;


};
inline _220b84777_missingRetChecker static__220b84b40_new(void);
inline jule::Bool _220b84e1a_checkConditional(_220b84777_missingRetChecker*, jule::Ptr<_220b4367b_Conditional>);
inline jule::Bool _220b85228_checkMatch(_220b84777_missingRetChecker*, jule::Ptr<_220b4686b_Match>);
inline jule::Bool _220b85536_checkInfIter(_220b84777_missingRetChecker*, jule::Ptr<_220b43967_InfIter>);
inline jule::Bool _220b85844_checkScope(_220b84777_missingRetChecker*, jule::Ptr<_220b42b20_Scope>);
inline jule::Bool _220b85b52_check(_220b84777_missingRetChecker*, jule::Ptr<_220b42b20_Scope>);
struct _220b84777_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	

	_220b84777_missingRetChecker(void) = default;


};
struct _220b86438_IterRelation {
	jule::Ptr<_220b8746c_Var> _field_Range;
	

	_220b86438_IterRelation(void) = default;

	inline bool operator==(_220b86438_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_220b86438_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _220b87835_IsInitialized(_220b8746c_Var*);
inline jule::Bool _220b87a99_IsTypeInferred(_220b8746c_Var*);
inline jule::Bool _220b87d0d_untypedConstant(_220b8746c_Var*);
struct _220b8746c_Var {
	jule::Ptr<_220b42b20_Scope> _field_Scope;
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_220c1033b_TypeSymbol> _field_Kind;
	jule::Ptr<_220bd1054_Value> _field_Value;
	jule::Ptr<_220b329ab_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_21ee6d710_Directive>> _field_Directives;
	jule::Ptr<_220b86438_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_220b8746c_Var>> _field_Depends;
	

	_220b8746c_Var(void) = default;


};
inline jule::Bool static__220b8888b_Dispose(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b88b33_Str(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b88e74_logical(jule::Ptr<_220b31636_Fn>&, jule::Str);
inline jule::Bool static__220b8921b_Eq(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b894b3_Gt(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8975a_GtEq(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b89a02_Lt(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b89c99_LtEq(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8a0da_result(jule::Ptr<_220b31636_Fn>&, jule::Str);
inline jule::Bool static__220b8a382_Shl(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8a629_Shr(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8a8c1_Add(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8ab68_Sub(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8ae10_Div(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8b1a7_Mul(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8b44e_Mod(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8b6e6_BitAnd(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8b98d_BitOr(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8bc35_BitXor(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8c076_unary(jule::Ptr<_220b31636_Fn>&, jule::Str);
inline jule::Bool static__220b8c31d_Neg(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8c5b5_Pos(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8c85c_BitNot(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8cb9d_assign(jule::Ptr<_220b31636_Fn>&, jule::Str);
inline jule::Bool static__220b8ce45_AddAssign(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8d1dc_SubAssign(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8d484_DivAssign(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8d72b_MulAssign(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8d9c3_ModAssign(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8dc6a_ShlAssign(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8e012_ShrAssign(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8e2a9_BitOrAssign(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8e551_BitAndAssign(jule::Ptr<_220b31636_Fn>);
inline jule::Bool static__220b8e7e8_BitXorAssign(jule::Ptr<_220b31636_Fn>);
struct _220b8821a_FuncPattern {
	

	_220b8821a_FuncPattern(void) = default;


};
inline void _220bb92b2_pushErr(_220bb8c95_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _220bb9526_checkTrait(_220bb8c95_typeCompatibilityChecker*);
inline jule::Bool _220bb978a_checkPtr(_220bb8c95_typeCompatibilityChecker*);
inline jule::Bool _220bb99ee_checkPrim(_220bb8c95_typeCompatibilityChecker*);
inline jule::Bool _220bb9da6_typeEnum(_220bb8c95_typeCompatibilityChecker*, jule::Ptr<_220b38ae4_TypeEnum>&, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220bba11a_checkTypeEnum(_220bb8c95_typeCompatibilityChecker*);
inline jule::Bool _220bba37e_check(_220bb8c95_typeCompatibilityChecker*);
struct _220bb8c95_typeCompatibilityChecker {
	jule::Ptr<_220b69471_Sema> _field_s;
	jule::Ptr<_220c0ae5d_TypeKind> _field_dest;
	jule::Ptr<_220c0ae5d_TypeKind> _field_src;
	jule::Ptr<_21d81d743_Token> _field_errorToken;
	

	_220bb8c95_typeCompatibilityChecker(void) = default;

	inline bool operator==(_220bb8c95_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_220bb8c95_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _220bbad30_pushErr(_220bba8bd_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _220bbb094_checkValidity(_220bba8bd_assignTypeChecker*);
inline jule::Bool _220bbb308_checkConst(_220bba8bd_assignTypeChecker*);
inline jule::Bool _220bbb56c_isPrim(_220bba8bd_assignTypeChecker*);
inline jule::Bool _220bbb7d1_checkCompatibility(_220bba8bd_assignTypeChecker*);
inline jule::Bool _220bbba45_check(_220bba8bd_assignTypeChecker*);
struct _220bba8bd_assignTypeChecker {
	jule::Ptr<_220b69471_Sema> _field_s;
	jule::Ptr<_220c0ae5d_TypeKind> _field_dest;
	jule::Ptr<_220bceecb_Data> _field_d;
	jule::Ptr<_21d81d743_Token> _field_errorToken;
	

	_220bba8bd_assignTypeChecker(void) = default;

	inline bool operator==(_220bba8bd_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_220bba8bd_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _205e1ceae_annotateConstraintElem(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _205e1c6a6_annotateConstraintElem(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _205e221b1_annotateConstraintElem(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _205e1ca3b_annotateConstraintElem(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220bbcc88_annotateConstraintMap(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220bbd096_annotateConstraintTup(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220bbd3a4_annotateConstraintFn(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220bbd6d4_annotateConstraintIdent(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220bbda03_annotateConstraint(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline void _220bbdd22_pushGeneric(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&, jule::I64);
inline jule::Bool _220bbe130_annotatePrim(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220bbe43d_annotateArr(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220bbe74b_annotateSlc(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220bbeb03_checkMapKey(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220bbee11_annotateMap(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220bc021e_annotateFn(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220bc052c_annotatePtr(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220bc083a_annotateSptr(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220bc0b48_annotateStruct(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220bc0e56_annotateAny(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220bc1264_annotateKind(_220bbc3a3_dynamicTypeAnnotation*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220bc14c8_annotate(_220bbc3a3_dynamicTypeAnnotation*);
struct _220bbc3a3_dynamicTypeAnnotation {
	jule::Ptr<_220bd1a49_Eval> _field_e;
	jule::Ptr<_220b31a10_FnIns> _field_f;
	jule::Ptr<_220b31823_ParamIns> _field_p;
	jule::Ptr<_220bceecb_Data> _field_a;
	jule::Ptr<_21d81d743_Token> _field_errorToken;
	jule::Ptr<_220c0ae5d_TypeKind>* _field_k = nullptr;
	jule::Ptr<_21eea19a7_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>> _field_ignored;
	

	_220bbc3a3_dynamicTypeAnnotation(void) = default;


};
inline void _220bc22ba_pushErrToken(_220bc1c6a_fnCallArgChecker*, jule::Ptr<_21d81d743_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _220bc25d9_pushErr(_220bc1c6a_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_220b31823_ParamIns>> _220bc284d_getParams(_220bc1c6a_fnCallArgChecker*);
inline jule::Bool _220bc2b5b_checkCounts(_220bc1c6a_fnCallArgChecker*, jule::Slice<jule::Ptr<_220b31823_ParamIns>>&);
inline jule::Bool _220bc30ac_checkArg(_220bc1c6a_fnCallArgChecker*, jule::Ptr<_220b31823_ParamIns>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Bool _220bc3464_push(_220bc1c6a_fnCallArgChecker*, jule::Ptr<_220b31823_ParamIns>&, jule::Ptr<_21eea5ec8_Expr>);
inline jule::Bool _220bc381b_pushVariadic(_220bc1c6a_fnCallArgChecker*, jule::Ptr<_220b31823_ParamIns>&, jule::I64);
inline jule::Bool _220bc3b29_checkArgs(_220bc1c6a_fnCallArgChecker*, jule::Slice<jule::Ptr<_220b31823_ParamIns>>&);
inline jule::Bool _220bc3db0_checkDynamicTypeAnnotation(_220bc1c6a_fnCallArgChecker*);
inline jule::Bool _220bc4135_check(_220bc1c6a_fnCallArgChecker*);
struct _220bc1c6a_fnCallArgChecker {
	jule::Ptr<_220bd1a49_Eval> _field_e;
	jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _field_args;
	jule::Ptr<_21d81d743_Token> _field_errorToken;
	jule::Ptr<_220b31a10_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>> _field_ignored;
	

	_220bc1c6a_fnCallArgChecker(void) = default;


};
inline void _220bc4b80_pushErr(_220bc4674_structLitChecker*, jule::Ptr<_21d81d743_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _220bc4e9e_pushSugggestion(_220bc4674_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _220bc5367_pushMatch(_220bc4674_structLitChecker*, jule::Ptr<_21eec31e3_FieldIns>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21d81d743_Token>&);
inline void _220bc5686_checkPair(_220bc4674_structLitChecker*, jule::Ptr<_21eeb0796_FieldExprPair>&, jule::Slice<jule::Ptr<_21eea5ec8_Expr>>&);
inline jule::Bool _220bc5994_readyExprs(_220bc4674_structLitChecker*, jule::Slice<jule::Ptr<_21eea5ec8_Expr>>&);
inline void _220bc5c19_check(_220bc4674_structLitChecker*, jule::Slice<jule::Ptr<_21eea5ec8_Expr>>&);
struct _220bc4674_structLitChecker {
	jule::Ptr<_220bd1a49_Eval> _field_e;
	jule::Ptr<_21d81d743_Token> _field_errorToken;
	jule::Ptr<_21eec33d0_StructIns> _field_s;
	jule::Slice<jule::Ptr<_220b2aeb0_StructArgExprModel>> _field_args;
	

	_220bc4674_structLitChecker(void) = default;


};
inline jule::Ptr<_220b8746c_Var> _220bc66ed_buildVar(_220bc6258_rangeChecker*, jule::Ptr<_21eeb9272_VarDecl>&);
inline void _220bc68c9_setSizeKey(_220bc6258_rangeChecker*);
inline void _220bc6c92_checkRangeExprValidity(_220bc6258_rangeChecker*, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220b8746c_Var>&, jule::Ptr<_220c0ae5d_TypeKind>&);
inline void _220bc6e6d_checkSlice(_220bc6258_rangeChecker*);
inline void _220bc7149_checkArray(_220bc6258_rangeChecker*);
inline void _220bc7325_checkMapKeyA(_220bc6258_rangeChecker*);
inline void _220bc7501_checkMapKeyB(_220bc6258_rangeChecker*);
inline void _220bc76cc_checkMap(_220bc6258_rangeChecker*);
inline void _220bc78a8_checkStr(_220bc6258_rangeChecker*);
inline jule::Bool _220bc7b1c_check(_220bc6258_rangeChecker*);
struct _220bc6258_rangeChecker {
	jule::Ptr<_220b49682_scopeChecker> _field_sc;
	jule::Ptr<_21eebae00_RangeKind> _field_rang;
	jule::Ptr<_220b447c0_RangeIter> _field_Kind;
	jule::Ptr<_220bceecb_Data> _field_d;
	

	_220bc6258_rangeChecker(void) = default;

	inline bool operator==(_220bc6258_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_220bc6258_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _220bc8788_prepareTypes(_220bc82e3_retTypeChecker*);
inline void _220bc8a0d_prepareExprs(_220bc82e3_retTypeChecker*, jule::Ptr<_21eea5ec8_Expr>&);
inline void _220bc8bd9_checkExprs(_220bc82e3_retTypeChecker*);
inline jule::Bool _220bc8ee7_check(_220bc82e3_retTypeChecker*, jule::Ptr<_21eea5ec8_Expr>&);
struct _220bc82e3_retTypeChecker {
	jule::Ptr<_220b49682_scopeChecker> _field_sc;
	jule::Ptr<_220b31a10_FnIns> _field_f;
	jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _field_exprs;
	jule::Ptr<_21d81d743_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	

	_220bc82e3_retTypeChecker(void) = default;


};
inline jule::Ptr<_220b61325_ImportInfo> _220bca6be_FindPackage(_220bca1a2_SymbolTable*, jule::Str);
inline jule::Ptr<_220b61325_ImportInfo> _220bca9cc_SelectPackage(_220bca1a2_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)>);
inline jule::Ptr<_220b8746c_Var> _220bcad84_FindVar(_220bca1a2_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_220c0a26a_TypeAlias> _220bcb23b_FindTypeAlias(_220bca1a2_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_21eec3006_Struct> _220bcb5e3_FindStruct(_220bca1a2_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_220b31636_Fn> _220bcb99a_FindFn(_220bca1a2_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_220b376b4_Trait> _220bcbca8_FindTrait(_220bca1a2_SymbolTable*, jule::Str);
inline jule::Ptr<_220b38374_Enum> _220bcc0b6_FindEnum(_220bca1a2_SymbolTable*, jule::Str);
inline jule::Ptr<_220b38ae4_TypeEnum> _220bcc3c4_FindTypeEnum(_220bca1a2_SymbolTable*, jule::Str);
inline jule::Ptr<_220b8746c_Var> _220bcc946_findVar(_220bca1a2_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_220c0a26a_TypeAlias> _220bccd97_findTypeAlias(_220bca1a2_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _220bcd24e_defByIdent(_220bca1a2_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _220bcd6a0_isDuplicatedIdent(_220bca1a2_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _220bca1a2_SymbolTable {
	jule::Ptr<_21d823acd_File> _field_File;
	jule::Slice<_220b332a3_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_220b61325_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_220b8746c_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_21eec3006_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_220b31636_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_220b376b4_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_220b38374_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_220b38ae4_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_220b3cab5_Impl>> _field_Impls;
	

	_220bca1a2_SymbolTable(void) = default;


};
inline jule::Bool _220bd03b6_IsNil(_220bceecb_Data*);
inline jule::Bool _220bd062a_IsVoid(_220bceecb_Data*);
inline jule::Bool _220bd088e_IsConst(_220bceecb_Data*);
inline jule::Bool _220bd0b9c_GoodOperand(_220bceecb_Data*, jule::Ptr<_220bceecb_Data>&);
struct _220bceecb_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_220c0ae5d_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_220074816_Const> _field_Constant;
	

	_220bceecb_Data(void) = default;

	inline bool operator==(_220bceecb_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_220bceecb_Data _other) { return !this->operator==(_other); }


};
struct _220bd1054_Value {
	jule::Ptr<_21eea5ec8_Expr> _field_Expr;
	jule::Ptr<_220bceecb_Data> _field_Data;
	

	_220bd1054_Value(void) = default;

	inline bool operator==(_220bd1054_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_220bd1054_Value _other) { return !this->operator==(_other); }


};
inline void _220bd2055_pushErr(_220bd1a49_Eval*, jule::Ptr<_21d81d743_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _220bd2374_pushSugggestion(_220bd1a49_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _220bd2550_allowBuiltin(_220bd1a49_Eval*);
inline void _220bd272b_disallowBuiltin(_220bd1a49_Eval*);
inline jule::Bool _220bd2990_isUnsafe(_220bd1a49_Eval*);
inline jule::Bool _220bd2c04_isGlobal(_220bd1a49_Eval*);
inline jule::Bool _220bd2ece_applyNumericPrefix(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220bd3243_litNil(_220bd1a49_Eval*);
inline jule::Ptr<_220bceecb_Data> _220bd3551_litStr(_220bd1a49_Eval*, jule::Ptr<_21eea700c_LitExpr>&);
inline jule::Ptr<_220bceecb_Data> _220bd385e_litBool(_220bd1a49_Eval*, jule::Ptr<_21eea700c_LitExpr>&);
inline jule::Ptr<_220bceecb_Data> _220bd3b6c_litRune(_220bd1a49_Eval*, jule::Ptr<_21eea700c_LitExpr>&);
inline jule::Ptr<_220bceecb_Data> _220bd3e7a_litFloat(_220bd1a49_Eval*, jule::Ptr<_21eea700c_LitExpr>&);
inline jule::Ptr<_220bceecb_Data> _220bd4288_litInt(_220bd1a49_Eval*, jule::Ptr<_21eea700c_LitExpr>&);
inline jule::Ptr<_220bceecb_Data> _220bd4596_litNum(_220bd1a49_Eval*, jule::Ptr<_21eea700c_LitExpr>&);
inline jule::Ptr<_220bceecb_Data> _220bd48a4_evalLit(_220bd1a49_Eval*, jule::Ptr<_21eea700c_LitExpr>);
inline jule::Any _220bd4bb2_findBuiltins(_220bd1a49_Eval*, jule::Str);
inline jule::Any _220bd5069_getDef(_220bd1a49_Eval*, jule::Str, jule::Bool);
inline void _206055aca_pushReference(_220bd1a49_Eval*, jule::Ptr<_220b31a10_FnIns>&);
inline void _206069acd_pushReference(_220bd1a49_Eval*, jule::Ptr<_220b8746c_Var>&);
inline void _206111acb_pushReference(_220bd1a49_Eval*, jule::Ptr<_21eec33d0_StructIns>&);
inline jule::Ptr<_220bceecb_Data> _220bd55ec__evalEnum(_220bd1a49_Eval*, jule::Ptr<_220b38374_Enum>);
inline jule::Ptr<_220bceecb_Data> _220bd59a4_evalEnum(_220bd1a49_Eval*, jule::Ptr<_220b38374_Enum>, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220bd5cb2__evalTypeEnum(_220bd1a49_Eval*, jule::Ptr<_220b38ae4_TypeEnum>);
inline jule::Ptr<_220bceecb_Data> _220bd6169_evalTypeEnum(_220bd1a49_Eval*, jule::Ptr<_220b38ae4_TypeEnum>, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220bd6477__evalStruct(_220bd1a49_Eval*, jule::Ptr<_21eec33d0_StructIns>);
inline jule::Ptr<_220bceecb_Data> _220bd682e_evalStruct(_220bd1a49_Eval*, jule::Ptr<_21eec33d0_StructIns>, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220bd6b3c_evalFnIns(_220bd1a49_Eval*, jule::Ptr<_220b31a10_FnIns>);
inline void _220bd6e5b_checkDeprecated(_220bd1a49_Eval*, jule::Slice<jule::Ptr<_21ee6d710_Directive>>&, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220bd7313_evalFn(_220bd1a49_Eval*, jule::Ptr<_220b31636_Fn>, jule::Ptr<_21d81d743_Token>);
inline void _220bd76cb_pushIllegalCycleError(_220bd1a49_Eval*, jule::Ptr<_220b8746c_Var>&, jule::Ptr<_220b8746c_Var>&, jule::Str&);
inline jule::Bool _220bd7a83_checkCrossCycle(_220bd1a49_Eval*, jule::Ptr<_220b8746c_Var>&, jule::Str&);
inline jule::Bool _220bd7e3a_checkIllegalCycles(_220bd1a49_Eval*, jule::Ptr<_220b8746c_Var>&, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220bd82e2_evalVar(_220bd1a49_Eval*, jule::Ptr<_220b8746c_Var>, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220bd8699_evalTypeAlias(_220bd1a49_Eval*, jule::Ptr<_220c0a26a_TypeAlias>, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220bd8a51_evalDef(_220bd1a49_Eval*, jule::Any, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220bd8d5e_evalIdent(_220bd1a49_Eval*, jule::Ptr<_21eea7b89_IdentExpr>);
inline jule::Ptr<_220bceecb_Data> _220bd916c_evalUnary(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eea8393_UnaryExpr>);
inline jule::Ptr<_220bceecb_Data> _220bd947a_evalVariadic(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eead5a7_VariadicExpr>);
inline jule::Ptr<_220bceecb_Data> _220bd9788_evalUnsafe(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eea7716_UnsafeExpr>);
inline jule::Ptr<_220bceecb_Data> _220bd9a96_evalArr(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eeb2424_SliceExpr>);
inline jule::Ptr<_220bceecb_Data> _220bd9ee7_evalExpSlc(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eeb2424_SliceExpr>, jule::Ptr<_220c0ae5d_TypeKind>, jule::Any);
inline jule::Ptr<_220bceecb_Data> _220bda305_evalSliceExpr(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eeb2424_SliceExpr>);
inline void _220bda646_checkIntegerIndexingByData(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21d81d743_Token>);
inline void _220bdaa20_indexingPtr(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21eeb2c93_IndexingExpr>&);
inline void _220bdadd8_indexingArr(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21eeb2c93_IndexingExpr>&);
inline void _220bdb2a1_indexingSlc(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21eeb2c93_IndexingExpr>&);
inline void _220bdb669_indexingMap(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21eeb2c93_IndexingExpr>&);
inline void _220bdba32_indexingStr(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21eeb2c93_IndexingExpr>&);
inline void _220bdbdea_toIndexing(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21eeb2c93_IndexingExpr>&);
inline jule::Bool _220bdc36d_pushGenericsFromExprSubIdent(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eeae289_SubIdentExpr>&, jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>>&, jule::Ptr<_21eea5ec8_Expr>&);
inline jule::Bool _220bdc736_pushGenericsFromData(jule::Ptr<_220bd1a49_Eval>, jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>>&, jule::Ptr<_21eea5ec8_Expr>&);
inline void _220bdca77_evalIdentDeclFromIndexing(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21eeb2c93_IndexingExpr>&);
inline jule::Bool _220bdced9_checkGenericFn(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_220b31a10_FnIns>&, jule::Ptr<_21d81d743_Token>&, jule::Any&);
inline void _220bdd32a_evalFnGenericFromIndexing(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21eeb2c93_IndexingExpr>&);
inline jule::Ptr<_220bceecb_Data> _220bdd649_evalIndexing(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eeb2c93_IndexingExpr>);
inline __jule_tuple_x_220bceecb_Data__jule_tuple_x_220bceecb_Data _220bdd957_evalSlicingExprs(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eeb339d_SlicingExpr>&);
inline void _220bddbcc_slicingArr(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>&);
inline void _220bde095_slicingStr(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&);
inline void _220bde507_checkSlicing(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21eeb339d_SlicingExpr>&);
inline jule::Ptr<_220bceecb_Data> _220bde815_evalSlicing(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eeb339d_SlicingExpr>);
inline void _220bdebcd_castPtr(_220bd1a49_Eval*, jule::Ptr<_220c0ae5d_TypeKind>, jule::Ptr<_220bceecb_Data>, jule::Ptr<_21d81d743_Token>);
inline void _220be0096_castStruct(_220bd1a49_Eval*, jule::Ptr<_220c0ae5d_TypeKind>, jule::Ptr<_220bceecb_Data>, jule::Ptr<_21d81d743_Token>);
inline void _220be045e_castRef(_220bd1a49_Eval*, jule::Ptr<_220c0ae5d_TypeKind>, jule::Ptr<_220bceecb_Data>, jule::Ptr<_21d81d743_Token>);
inline void _220be0827_castSlc(_220bd1a49_Eval*, jule::Ptr<_220c0ae5d_TypeKind>, jule::Ptr<_220bceecb_Data>, jule::Ptr<_21d81d743_Token>);
inline void _220be0b46_castStr(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>, jule::Ptr<_21d81d743_Token>);
inline void _220be100e_castInt(_220bd1a49_Eval*, jule::Ptr<_220c0ae5d_TypeKind>, jule::Ptr<_220bceecb_Data>, jule::Ptr<_21d81d743_Token>);
inline void _220be13c7_castNum(_220bd1a49_Eval*, jule::Ptr<_220c0ae5d_TypeKind>, jule::Ptr<_220bceecb_Data>, jule::Ptr<_21d81d743_Token>);
inline void _220be1790_castPrim(_220bd1a49_Eval*, jule::Ptr<_220c0ae5d_TypeKind>, jule::Ptr<_220bceecb_Data>, jule::Ptr<_21d81d743_Token>);
inline void _220be1aae_castConstant(_220bd1a49_Eval*, jule::Ptr<_220c0ae5d_TypeKind>&, jule::Ptr<_220bceecb_Data>&);
inline void _220be1e77_castTypeEnum(_220bd1a49_Eval*, jule::Ptr<_220c0ae5d_TypeKind>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21d81d743_Token>&);
inline void _220be2340_castTypeEnumT(_220bd1a49_Eval*, jule::Ptr<_220c0ae5d_TypeKind>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Ptr<_220bceecb_Data> _220be2791_evalCastByTypeNData(_220bd1a49_Eval*, jule::Ptr<_220c0ae5d_TypeKind>, jule::Ptr<_220bceecb_Data>, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be2be2_evalCastT(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_220c0ae5d_TypeKind>&, jule::Ptr<_21eea5ec8_Expr>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Ptr<_220bceecb_Data> _220be3000_evalCast(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eead95e_CastExpr>);
inline jule::Ptr<_220bceecb_Data> _220be330d_evalNsSelection(_220bd1a49_Eval*, jule::Ptr<_21eeadd16_NsSelectionExpr>);
inline jule::Ptr<_220bceecb_Data> _220be375e_evalStructLitExplicit(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eec33d0_StructIns>, jule::Slice<jule::Ptr<_21eea5ec8_Expr>>, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be3a6c_evalStructLit(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eeb0ee4_StructLit>);
inline _220c197c9_typeChecker _220be3cd1_typeChecker(_220bd1a49_Eval*);
inline jule::Ptr<_220bceecb_Data> _220be40de_evalType(_220bd1a49_Eval*, jule::Ptr<_21eea19a7_TypeDecl>);
inline void _220be440d_callTypeFn(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline void _220be472c_callBuiltinFn(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline void _220be4a6d_checkFnOfConcurrentCall(_220bd1a49_Eval*, jule::Ptr<_220b31a10_FnIns>&, jule::Ptr<_21d81d743_Token>);
inline void _220be4e69_processExceptionalHandler(_220bd1a49_Eval*, jule::Ptr<_220b31a10_FnIns>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline void _220be5299_callFn(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220be55a7_evalFnCall(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eeaed17_FnCallExpr>);
inline jule::Ptr<_220bceecb_Data> _220be595e_evalEnumStatic(_220bd1a49_Eval*, jule::Ptr<_220b38374_Enum>, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be5d16_evalTypeEnumStatic(_220bd1a49_Eval*, jule::Ptr<_220b38ae4_TypeEnum>, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be61bd_evalStructStatic(_220bd1a49_Eval*, jule::Ptr<_21eec33d0_StructIns>, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be661e_evalTraitSubIdent(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>, jule::Ptr<_220b376b4_Trait>, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be6b19_evalStructSubIdent(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>, jule::Ptr<_21eec33d0_StructIns>, jule::Ptr<_21eeae289_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_220bceecb_Data> _220be6ec1_evalSliceSubIdent(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be7378_evalArraySubIdent(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be7686_evalIntTypeStatic(_220bd1a49_Eval*, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be7994_evalUintTypeStatic(_220bd1a49_Eval*, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be7ca2_evalI8TypeStatic(_220bd1a49_Eval*, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be80b0_evalI16TypeStatic(_220bd1a49_Eval*, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be83bd_evalI32TypeStatic(_220bd1a49_Eval*, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be86cb_evalI64TypeStatic(_220bd1a49_Eval*, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be89d9_evalU8TypeStatic(_220bd1a49_Eval*, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be8ce7_evalU16TypeStatic(_220bd1a49_Eval*, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be9105_evalU32TypeStatic(_220bd1a49_Eval*, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be9413_evalU64TypeStatic(_220bd1a49_Eval*, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be9721_evalF32TypeStatic(_220bd1a49_Eval*, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be9a2e_evalF64TypeStatic(_220bd1a49_Eval*, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220be9dd6_evalPrimStatic(_220bd1a49_Eval*, jule::Str, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_220bceecb_Data> _220bea28d_evalTypeStatic(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>, jule::Ptr<_21eeae289_SubIdentExpr>);
inline jule::Ptr<_220bceecb_Data> _220bea645_evalObjSubIdent(_220bd1a49_Eval*, jule::Ptr<_220bceecb_Data>, jule::Ptr<_21eeae289_SubIdentExpr>);
inline jule::Ptr<_220bceecb_Data> _220bea953_evalSubIdent(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eeae289_SubIdentExpr>);
inline jule::Ptr<_220bceecb_Data> _220beac61_evalTuple(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eea6b55_TupleExpr>);
inline jule::Ptr<_220bceecb_Data> _220beb118_evalMap(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_220c16452_Map>, jule::Ptr<_21eeb1467_BraceLit>);
inline jule::Ptr<_220bceecb_Data> _220beb426_evalBraceLit(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eeb1467_BraceLit>);
inline jule::Ptr<_220bceecb_Data> _220beb734_evalAnonFn(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eeb8293_FnDecl>);
inline jule::Ptr<_220bceecb_Data> _220beba42_evalBinop(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eeae70c_BinopExpr>);
inline jule::Ptr<_220bceecb_Data> _220bebd50_evalExprKind(jule::Ptr<_220bd1a49_Eval>, jule::Any);
inline jule::Ptr<_220bceecb_Data> _220bec15d_eval(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eea5ec8_Expr>);
inline jule::Ptr<_220bceecb_Data> _220bec46b_evalExpr(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21eea5ec8_Expr>);
struct _220bd1a49_Eval {
	jule::Ptr<_220b69471_Sema> _field_s;
	jule::Trait<_220c2bc3c_Lookup> _field_lookup;
	jule::Ptr<_220c0ae5d_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_220b8746c_Var> _field_owner;
	jule::Ptr<_21eec31e3_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	_220bd1a49_Eval(void) = default;

	inline bool operator==(_220bd1a49_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_220bd1a49_Eval _other) { return !this->operator==(_other); }


};
inline _220bec8de_unaryEval static__220becd95_new(jule::Ptr<_220bd1a49_Eval>);
inline void _220bed071_minus(_220bec8de_unaryEval*);
inline void _220bed24c_plus(_220bec8de_unaryEval*);
inline void _220bed428_caret(_220bec8de_unaryEval*);
inline void _220bed604_excl(_220bec8de_unaryEval*);
inline void _220bed7d0_star(_220bec8de_unaryEval*);
inline void _220bed9ab_amper(_220bec8de_unaryEval*);
inline void _220bedb87_typeDecl(_220bec8de_unaryEval*);
inline void _220bedd63_evalData(_220bec8de_unaryEval*);
inline jule::Ptr<_220bceecb_Data> _220bee13d_eval(_220bec8de_unaryEval*, jule::Ptr<_21eea8393_UnaryExpr>);
struct _220bec8de_unaryEval {
	jule::Ptr<_220bd1a49_Eval> _field_e;
	jule::Ptr<_220bceecb_Data> _field_d;
	jule::Ptr<_21eea8393_UnaryExpr> _field_u;
	

	_220bec8de_unaryEval(void) = default;

	inline bool operator==(_220bec8de_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_220bec8de_unaryEval _other) { return !this->operator==(_other); }


};
inline _220bee67c_binaryEval static__220beec54_newPlain(jule::Ptr<_220bd1a49_Eval>);
inline _220bee67c_binaryEval static__220c00095_new(jule::Ptr<_220bd1a49_Eval>, jule::Ptr<_21d81d743_Token>);
inline jule::Bool _220c00309_checkTypeCompatibility(_220bee67c_binaryEval*);
inline jule::Bool _220c005a1_checkStructCommonOperatorCompatibility(_220bee67c_binaryEval*);
inline jule::Ptr<_220bceecb_Data> _220c00848_evalNil(_220bee67c_binaryEval*);
inline jule::Ptr<_220bceecb_Data> _220c00aac_evalEnum(_220bee67c_binaryEval*);
inline jule::Ptr<_220bceecb_Data> _220c00d21_evalTypeEnum(_220bee67c_binaryEval*);
inline jule::Ptr<_220bceecb_Data> _220c01085_evalSptr(_220bee67c_binaryEval*);
inline jule::Ptr<_220bceecb_Data> _220c012e9_evalPtr(_220bee67c_binaryEval*);
inline jule::Ptr<_220bceecb_Data> _220c0155d_evalArr(_220bee67c_binaryEval*);
inline jule::Ptr<_220bceecb_Data> _220c017c2_evalSlc(_220bee67c_binaryEval*);
inline jule::Ptr<_220bceecb_Data> _220c01a36_evalFn(_220bee67c_binaryEval*);
inline jule::Ptr<_220bceecb_Data> _220c01c9a_evalStruct(_220bee67c_binaryEval*);
inline jule::Ptr<_220bceecb_Data> _220c0200e_evalTrait(_220bee67c_binaryEval*);
inline jule::Ptr<_220bceecb_Data> _220c02273_evalAny(_220bee67c_binaryEval*);
inline jule::Ptr<_220bceecb_Data> _220c024d7_evalBool(_220bee67c_binaryEval*);
inline jule::Ptr<_220bceecb_Data> _220c0274b_evalStr(_220bee67c_binaryEval*);
inline void _220c02927_setTypeToGreater(_220bee67c_binaryEval*);
inline void _220c02b69_checkModData(_220bee67c_binaryEval*, jule::Ptr<_220bceecb_Data>&);
inline void _220c02d45_mod(_220bee67c_binaryEval*);
inline jule::Bool _220c031ec_numbersAreCompatibile(_220bee67c_binaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_220bceecb_Data> _220c03461_evalFloat(_220bee67c_binaryEval*);
inline jule::Ptr<_220bceecb_Data> _220c036c5_evalInt(_220bee67c_binaryEval*);
inline jule::Ptr<_220bceecb_Data> _220c03939_evalPrim(_220bee67c_binaryEval*);
inline void _220c03b15_checkSpecialCases(_220bee67c_binaryEval*);
inline jule::Ptr<_220bceecb_Data> _220c03d79_evalOp(_220bee67c_binaryEval*);
inline void _220c040ee_evalConst(_220bee67c_binaryEval*, jule::Ptr<_220bceecb_Data>&);
inline void _220c04374_checkData(_220bee67c_binaryEval*, jule::Ptr<_220bceecb_Data>&);
inline void _220c04550_checkDatas(_220bee67c_binaryEval*);
inline void _220c047c5_setModel(_220bee67c_binaryEval*, jule::Ptr<_220bceecb_Data>&);
inline void _220c04a4a_postEval(_220bee67c_binaryEval*, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220c04e02_solveExplicit(_220bee67c_binaryEval*, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220c05210_eval(_220bee67c_binaryEval*, jule::Ptr<_21eeae70c_BinopExpr>&);
struct _220bee67c_binaryEval {
	jule::Ptr<_220bd1a49_Eval> _field_e;
	jule::Ptr<_220bceecb_Data> _field_l;
	jule::Ptr<_220bceecb_Data> _field_r;
	jule::Ptr<_21d81d743_Token> _field_op;
	

	_220bee67c_binaryEval(void) = default;

	inline bool operator==(_220bee67c_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_220bee67c_binaryEval _other) { return !this->operator==(_other); }


};
struct _220c09731_InsGeneric {
	jule::Ptr<_220c0ae5d_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>> _field_Constraint;
	

	_220c09731_InsGeneric(void) = default;


};
struct _220c0a26a_TypeAlias {
	jule::Ptr<_21eeb679c_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_220c1033b_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>> _field_Generics;
	

	_220c0a26a_TypeAlias(void) = default;


};
inline jule::Str _220c0b359_Str(_220c0ae5d_TypeKind*);
inline jule::Bool _220c0b667_Equal(jule::Ptr<_220c0ae5d_TypeKind>, jule::Ptr<_220c0ae5d_TypeKind>);
inline jule::Bool _220c0bb2e_CppLinked(_220c0ae5d_TypeKind*);
inline jule::Bool _220c0bd93_IsNil(_220c0ae5d_TypeKind*);
inline jule::Bool _220c0c107_Void(_220c0ae5d_TypeKind*);
inline jule::Bool _220c0c36b_Comparable(_220c0ae5d_TypeKind*);
inline jule::Bool _220c0c5d0_Mutable(_220c0ae5d_TypeKind*);
inline jule::Bool _220c0c844_NilCompatible(_220c0ae5d_TypeKind*);
inline jule::Bool _220c0caa8_PerformsRC(_220c0ae5d_TypeKind*);
inline jule::Bool _220c0cd1c_SupportsCloning(_220c0ae5d_TypeKind*);
inline jule::Bool _220c0d081_Variadicable(_220c0ae5d_TypeKind*);
inline jule::Ptr<_220c10baa_Prim> _220c0d2e5_Prim(_220c0ae5d_TypeKind*);
inline jule::Ptr<_220c1443e_Sptr> _220c0d559_Sptr(_220c0ae5d_TypeKind*);
inline jule::Ptr<_220c179a3_Ptr> _220c0d7bd_Ptr(_220c0ae5d_TypeKind*);
inline jule::Ptr<_220b38374_Enum> _220c0da32_Enum(_220c0ae5d_TypeKind*);
inline jule::Ptr<_220b38ae4_TypeEnum> _220c0dc96_TypeEnum(_220c0ae5d_TypeKind*);
inline jule::Ptr<_220c17046_Arr> _220c0e00a_Arr(_220c0ae5d_TypeKind*);
inline jule::Ptr<_220c14d9b_Slc> _220c0e26e_Slc(_220c0ae5d_TypeKind*);
inline jule::Ptr<_220b31a10_FnIns> _220c0e4d3_Fn(_220c0ae5d_TypeKind*);
inline jule::Ptr<_21eec33d0_StructIns> _220c0e747_Struct(_220c0ae5d_TypeKind*);
inline jule::Ptr<_220b376b4_Trait> _220c0e9ab_Trait(_220c0ae5d_TypeKind*);
inline jule::Ptr<_220c16452_Map> _220c0ec20_Map(_220c0ae5d_TypeKind*);
inline jule::Ptr<_220c15929_Tuple> _220c0ee84_Tup(_220c0ae5d_TypeKind*);
struct _220c0ae5d_TypeKind {
	jule::Str _field_CppIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_220c0aa2e_Kind> _field_Kind;
	

	_220c0ae5d_TypeKind(void) = default;

	inline bool operator==(_220c0ae5d_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_220c0ae5d_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _220c106e3_checked(_220c1033b_TypeSymbol*);
inline void _220c108be_removeKind(_220c1033b_TypeSymbol*);
struct _220c1033b_TypeSymbol {
	jule::Ptr<_21eea19a7_TypeDecl> _field_Decl;
	jule::Ptr<_220c0ae5d_TypeKind> _field_Kind;
	

	_220c1033b_TypeSymbol(void) = default;

	inline bool operator==(_220c1033b_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_220c1033b_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _220c1101d_Str(_220c10baa_Prim*);
inline jule::Bool _220c1132b_Equal(jule::Ptr<_220c10baa_Prim>, jule::Ptr<_220c0ae5d_TypeKind>);
inline jule::Bool _220c1179e_IsConstraint(_220c10baa_Prim*);
inline jule::Bool _220c11a13_IsI8(_220c10baa_Prim*);
inline jule::Bool _220c11c77_IsI16(_220c10baa_Prim*);
inline jule::Bool _220c11edb_IsI32(_220c10baa_Prim*);
inline jule::Bool _220c12250_IsI64(_220c10baa_Prim*);
inline jule::Bool _220c124b4_IsU8(_220c10baa_Prim*);
inline jule::Bool _220c12728_IsU16(_220c10baa_Prim*);
inline jule::Bool _220c1298c_IsU32(_220c10baa_Prim*);
inline jule::Bool _220c12c01_IsU64(_220c10baa_Prim*);
inline jule::Bool _220c12e65_IsF32(_220c10baa_Prim*);
inline jule::Bool _220c131c9_IsF64(_220c10baa_Prim*);
inline jule::Bool _220c1343d_IsInt(_220c10baa_Prim*);
inline jule::Bool _220c136a2_IsUint(_220c10baa_Prim*);
inline jule::Bool _220c13916_IsUintptr(_220c10baa_Prim*);
inline jule::Bool _220c13b7a_IsBool(_220c10baa_Prim*);
inline jule::Bool _220c13dde_IsStr(_220c10baa_Prim*);
inline jule::Bool _220c14153_IsAny(_220c10baa_Prim*);
struct _220c10baa_Prim {
	jule::Str _field_Kind;
	

	_220c10baa_Prim(void) = default;

	inline bool operator==(_220c10baa_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_220c10baa_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _220c147a2_Str(_220c1443e_Sptr*);
inline jule::Bool _220c14ab0_Equal(jule::Ptr<_220c1443e_Sptr>, jule::Ptr<_220c0ae5d_TypeKind>);
struct _220c1443e_Sptr {
	jule::Ptr<_220c0ae5d_TypeKind> _field_Elem;
	

	_220c1443e_Sptr(void) = default;

	inline bool operator==(_220c1443e_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_220c1443e_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _220c153a7_Str(_220c14d9b_Slc*);
inline jule::Bool _220c156b5_Equal(jule::Ptr<_220c14d9b_Slc>, jule::Ptr<_220c0ae5d_TypeKind>);
struct _220c14d9b_Slc {
	jule::Ptr<_220c0ae5d_TypeKind> _field_Elem;
	

	_220c14d9b_Slc(void) = default;

	inline bool operator==(_220c14d9b_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_220c14d9b_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _220c15c8c_Str(_220c15929_Tuple*);
inline jule::Bool _220c1609a_Equal(jule::Ptr<_220c15929_Tuple>, jule::Ptr<_220c0ae5d_TypeKind>);
struct _220c15929_Tuple {
	jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>> _field_Types;
	

	_220c15929_Tuple(void) = default;


};
inline jule::Str _220c167b5_Str(_220c16452_Map*);
inline jule::Bool _220c16ac3_Equal(jule::Ptr<_220c16452_Map>, jule::Ptr<_220c0ae5d_TypeKind>);
struct _220c16452_Map {
	jule::Ptr<_220c0ae5d_TypeKind> _field_Key;
	jule::Ptr<_220c0ae5d_TypeKind> _field_Val;
	

	_220c16452_Map(void) = default;

	inline bool operator==(_220c16452_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_220c16452_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _220c173a9_Str(_220c17046_Arr*);
inline jule::Bool _220c176b7_Equal(jule::Ptr<_220c17046_Arr>, jule::Ptr<_220c0ae5d_TypeKind>);
struct _220c17046_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_220c0ae5d_TypeKind> _field_Elem;
	

	_220c17046_Arr(void) = default;

	inline bool operator==(_220c17046_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_220c17046_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _220c17d16_Str(_220c179a3_Ptr*);
inline jule::Bool _220c18124_Equal(jule::Ptr<_220c179a3_Ptr>, jule::Ptr<_220c0ae5d_TypeKind>);
inline jule::Bool _220c18476_IsUnsafe(_220c179a3_Ptr*);
struct _220c179a3_Ptr {
	jule::Ptr<_220c0ae5d_TypeKind> _field_Elem;
	

	_220c179a3_Ptr(void) = default;

	inline bool operator==(_220c179a3_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_220c179a3_Ptr _other) { return !this->operator==(_other); }


};
struct _220c188e9_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_220c188e9_referencer(void) = default;

	inline bool operator==(_220c188e9_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_220c188e9_referencer _other) { return !this->operator==(_other); }


};
inline void _220c19ed3_pushErr(_220c197c9_typeChecker*, jule::Ptr<_21d81d743_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _220c1a1ae_allowBuiltin(_220c197c9_typeChecker*);
inline void _220c1a38a_disallowBuiltin(_220c197c9_typeChecker*);
inline jule::Ptr<_220c10baa_Prim> _220c1a698_buildPrim(_220c197c9_typeChecker*, jule::Ptr<_21eea206d_IdentTypeDecl>&);
inline void _20638603c_pushReference(_220c197c9_typeChecker*, jule::Ptr<_21eec33d0_StructIns>&);
inline void _206388e30_pushReference(_220c197c9_typeChecker*, jule::Ptr<_220b376b4_Trait>&);
inline void _220c1ab93_pushReferenceByKind(_220c197c9_typeChecker*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline void _220c1b05b_pushCycleError(_220c197c9_typeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _220c1b413_checkCrossCycle(_220c197c9_typeChecker*, jule::Any, jule::Str&);
inline jule::Bool _220c1b7ba_checkIllegalCycles(_220c197c9_typeChecker*, jule::Ptr<_21eea206d_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_220c0aa2e_Kind> _220c1bb72_fromTypeAlias(_220c197c9_typeChecker*, jule::Ptr<_21eea206d_IdentTypeDecl>&, jule::Ptr<_220c0a26a_TypeAlias>&);
inline jule::Ptr<_220b38374_Enum> _220c1c029_fromEnum(_220c197c9_typeChecker*, jule::Ptr<_21eea206d_IdentTypeDecl>&, jule::Ptr<_220b38374_Enum>&);
inline jule::Ptr<_220b38ae4_TypeEnum> _220c1c3d1_fromTypeEnum(_220c197c9_typeChecker*, jule::Ptr<_21eea206d_IdentTypeDecl>&, jule::Ptr<_220b38ae4_TypeEnum>&);
inline jule::Ptr<_220b376b4_Trait> _220c1c788_fromTrait(_220c197c9_typeChecker*, jule::Ptr<_21eea206d_IdentTypeDecl>&, jule::Ptr<_220b376b4_Trait>&);
inline jule::Bool _220c1cb40_checkStructIns(_220c197c9_typeChecker*, jule::Ptr<_21eec33d0_StructIns>&, jule::Ptr<_21d81d743_Token>&);
inline void _220c1cdd7_appendUsedStructReference(_220c197c9_typeChecker*, jule::Ptr<_21eec3006_Struct>&);
inline jule::Ptr<_21eec33d0_StructIns> _220c1d2a0_buildStructInstance(_220c197c9_typeChecker*, jule::Ptr<_21eea206d_IdentTypeDecl>&, jule::Ptr<_21eec3006_Struct>&);
inline jule::Ptr<_21eec33d0_StructIns> _220c1d657_fromStruct(_220c197c9_typeChecker*, jule::Ptr<_21eea206d_IdentTypeDecl>&, jule::Ptr<_21eec3006_Struct>&);
inline jule::Trait<_220c0aa2e_Kind> _220c1d965_getDef(_220c197c9_typeChecker*, jule::Ptr<_21eea206d_IdentTypeDecl>&);
inline jule::Trait<_220c0aa2e_Kind> _220c1dc73_buildIdent(_220c197c9_typeChecker*, jule::Ptr<_21eea206d_IdentTypeDecl>);
inline jule::Trait<_220c0aa2e_Kind> _220c1e081_buildSubIdent(_220c197c9_typeChecker*, jule::Ptr<_21eea26bc_SubIdentTypeDecl>);
inline jule::Ptr<_220c1443e_Sptr> _220c1e38e_buildSptrFromType(_220c197c9_typeChecker*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Ptr<_220c1443e_Sptr> _220c1e69c_buildSptr(_220c197c9_typeChecker*, jule::Ptr<_21eea2d60_SptrTypeDecl>);
inline jule::Ptr<_220c179a3_Ptr> _220c24817_buildPtrFromType(_220c197c9_typeChecker*, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Ptr<_220c179a3_Ptr> _220c24b25_buildPtr(_220c197c9_typeChecker*, jule::Ptr<_21eea3833_PtrTypeDecl>);
inline jule::Ptr<_220c14d9b_Slc> _220c24e33_buildSlc(_220c197c9_typeChecker*, jule::Ptr<_21eea325b_SlcTypeDecl>);
inline jule::Ptr<_220c17046_Arr> _220c25241_buildArr(_220c197c9_typeChecker*, jule::Ptr<_21eea3eb5_ArrTypeDecl>);
inline jule::Ptr<_220c16452_Map> _220c2554e_buildMap(_220c197c9_typeChecker*, jule::Ptr<_21eea4713_MapTypeDecl>);
inline jule::Ptr<_220c15929_Tuple> _220c2585c_buildTuple(_220c197c9_typeChecker*, jule::Ptr<_21eea3547_TupleTypeDecl>);
inline jule::Bool _220c25b6a_checkFnTypes(_220c197c9_typeChecker*, jule::Ptr<_220b31a10_FnIns>&);
inline jule::Ptr<_220b31a10_FnIns> _220c25e78_buildFn(_220c197c9_typeChecker*, jule::Ptr<_21eeb8293_FnDecl>);
inline jule::Trait<_220c0aa2e_Kind> _220c26286_buildByNamespace(_220c197c9_typeChecker*, jule::Ptr<_21eea2a74_NamespaceTypeDecl>);
inline jule::Ptr<_220c0ae5d_TypeKind> _220c26594_build(_220c197c9_typeChecker*, jule::Any&);
inline jule::Ptr<_220c0ae5d_TypeKind> _220c268a2_checkDecl(_220c197c9_typeChecker*, jule::Ptr<_21eea19a7_TypeDecl>&);
inline void _220c26b27_check(_220c197c9_typeChecker*, jule::Ptr<_220c1033b_TypeSymbol>&);
struct _220c197c9_typeChecker {
	jule::Ptr<_220b69471_Sema> _field_s;
	jule::Trait<_220c2bc3c_Lookup> _field_rootLookup;
	jule::Trait<_220c2bc3c_Lookup> _field_lookup;
	jule::Ptr<_220c188e9_referencer> _field_referencer;
	jule::Ptr<_220b329ab_ReferenceStack> _field_refers;
	jule::Ptr<_21d81d743_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>> _field_useGenerics;
	jule::Bool _field_notPlain = false;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_220c0a26a_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	

	_220c197c9_typeChecker(void) = default;


};
inline jule::Bool static__220c27287_prim(jule::Str&, jule::Ptr<_220c10baa_Prim>);
inline jule::Bool static__220c275c8_exist(jule::Str&, jule::Ptr<_220c0ae5d_TypeKind>&);
struct _220c26d47_identTypeLookup {
	

	_220c26d47_identTypeLookup(void) = default;

	inline bool operator==(_220c26d47_identTypeLookup _other) { return true; }

	inline bool operator!=(_220c26d47_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _22143b0a5_FileInfo {
	jule::Ptr<_21ee6c665_Ast> _field_Ast;
	jule::Slice<_21d4e511d_Log> _field_Errors;
	

	_22143b0a5_FileInfo(void) = default;


};
struct _221487134_stmt {
	jule::Slice<jule::Ptr<_21d81d743_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	

	_221487134_stmt(void) = default;


};
inline void _2214880e1_stop(_22148795e_scopeParser*);
inline jule::Bool _221488355_stopped(_22148795e_scopeParser*);
inline jule::Bool _2214885b9_finished(_22148795e_scopeParser*);
inline jule::Bool _22148882d_isLastSt(_22148795e_scopeParser*);
inline void _221488b4c_pushErr(_22148795e_scopeParser*, jule::Ptr<_21d81d743_Token>, jule::Str);
inline void _221488e6b_pushSuggestion(_22148795e_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _2214891e1_insertAsNext(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_221487134_stmt> _221489455_next(_22148795e_scopeParser*);
inline jule::Ptr<_21eeb679c_ScopeTree> _22148980c_buildScope(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_21eeb9272_VarDecl> _221489b1a_buildVarSt(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eeb9629_RetSt> _221489e28_buildRetSt(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eeb9c89_Iter> _22148a236_buildWhileNextIter(_22148795e_scopeParser*, jule::Ptr<_221487134_stmt>&);
inline jule::Ptr<_21eeba55e_WhileKind> _22148a544_buildWhileIterKind(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _22148a852_getRangeKindKeysTokens(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eeb9272_VarDecl> _22148ab60_buildRangeKindKey(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Slice<jule::Ptr<_21eeb9272_VarDecl>> _22148ae6d_buildRangeKindKeys(_22148795e_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>>&);
inline void _22148b2ae_setupRangeKindKeysPlain(_22148795e_scopeParser*, jule::Ptr<_21eebae00_RangeKind>&, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline void _22148b611_setupRangeKindKeysExplicit(_22148795e_scopeParser*, jule::Ptr<_21eebae00_RangeKind>&, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline void _22148b941_setupRangeKindKeys(_22148795e_scopeParser*, jule::Ptr<_21eebae00_RangeKind>&, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eebae00_RangeKind> _22148bd92_buildRangeIterKind(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Any _22148c249_buildCommonIterKind(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Ptr<_21eeb9c89_Iter> _22148c557_buildCommonIter(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eeb9c89_Iter> _22148c865_buildIterSt(_22148795e_scopeParser*, jule::Ptr<_221487134_stmt>&);
inline jule::Ptr<_21eebb2a7_BreakSt> _22148cb73_buildBreakSt(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eebb65e_ContSt> _22148ce81_buildContSt(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eebbad2_If> _22148d28e_buildIf(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eebbe89_Else> _22148d59c_buildElse(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eebc40c_Conditional> _22148d8aa_buildIfElseChain(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eea5ec8_Expr> _22148dbb8_buildCoCallSt(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eeb436b_GotoSt> _22148dec6_buildGotoSt(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eeb4657_FallSt> _22148e2d4_buildFallSt(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eebcad3_TypeAliasDecl> _22148e5e2_buildTypeAliasSt(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline void _22148ea54_pushCaseExpr(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>, jule::Ptr<_21d81d743_Token>, jule::Bool, jule::Slice<jule::Ptr<_21eea5ec8_Expr>>&);
inline jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _22148eea5_buildCaseExprs(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Ptr<_21d81d743_Token>&, jule::Bool);
inline jule::Ptr<_21eeb679c_ScopeTree> _2214902b3_buildCaseScope(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline __jule_tuple_x_21eebd056_Case__jule_tuple_bool _22149066a_buildCase(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Bool);
inline __jule_tuple_sx_21eebd056_Case__jule_tuple_x_21eebbe89_Else _221490a22_buildCases(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>, jule::Bool);
inline jule::Ptr<_21eebd72c_MatchCase> _221490d30_buildMatchCase(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eeb679c_ScopeTree> _22149113d_buildScopeSt(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eeb3eb4_LabelSt> _22149144b_buildLabelSt(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline __jule_tuple__21eeb5e61_StmtData__jule_tuple_bool _221491759_buildIdSt(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_2214a0779_assignInfo> _221491a67_buildAssignInfo(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eeb4c62_AssignLeft> _221491d75_buildAssignL(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Slice<jule::Ptr<_21eeb4c62_AssignLeft>> _221492183_buildAssignLs(_22148795e_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>>&);
inline __jule_tuple_x_21eeb52a1_AssignSt__jule_tuple_bool _221492491_buildPlainAssign(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline __jule_tuple_x_21eeb52a1_AssignSt__jule_tuple_bool _22149279e_buildDeclAssign(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline __jule_tuple_x_21eeb52a1_AssignSt__jule_tuple_bool _221492aac_buildAssignSt(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eea6869_UseExpr> _221492dba_buildUseExpr(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Any _2214931c8_buildSt(_22148795e_scopeParser*, jule::Ptr<_221487134_stmt>&);
inline void _2214934e7_build(_22148795e_scopeParser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Ptr<_21eeb679c_ScopeTree>&);
struct _22148795e_scopeParser {
	jule::Ptr<_2214a40a7_parser> _field_p;
	jule::Ptr<_21eeb679c_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_221487134_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	

	_22148795e_scopeParser(void) = default;


};
inline void _221494718_pushErr(_221493e76_exprBuilder*, jule::Ptr<_21d81d743_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _221494a37_pushSuggestion(_221493e76_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_21eea6b55_TupleExpr> _221494d45_buildTuple(_221493e76_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>>&);
inline jule::Ptr<_21eea700c_LitExpr> _221495153_buildLit(_221493e76_exprBuilder*, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_21eea19a7_TypeDecl> _221495461_buildPrimitiveType(_221493e76_exprBuilder*, jule::Ptr<_21d81d743_Token>&);
inline jule::Any _22149576e_buildSingle(_221493e76_exprBuilder*, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_21eea7b89_IdentExpr> _221495a7c_buildCppLinkedIdent(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eea8393_UnaryExpr> _221495d8a_buildUnary(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eeae289_SubIdentExpr> _221496198_buildObjSubIdent(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eeadd16_NsSelectionExpr> _2214964a6_buildNsSubIdent(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eea19a7_TypeDecl> _2214967b4_buildType(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Any _221496ac2_buildSubIdent(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eead5a7_VariadicExpr> _221496dd0_buildVariadic(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Any _2214971dd_buildOpRight(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eea62b4_RangeExpr> _22149751d_buildBetweenParentheses(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eead95e_CastExpr> _22149783c_tryBuildCast(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline void _221497c05_pushArg(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21eea5ec8_Expr>>&, jule::Slice<jule::Ptr<_21d81d743_Token>>, jule::Ptr<_21d81d743_Token>);
inline jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _221498013_buildArgs(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>> _221498321_buildCallGenerics(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eeaed17_FnCallExpr> _221498772_buildFnCall(_221493e76_exprBuilder*, jule::Ptr<_21d81d743_Token>&, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Any _221498a80_buildParenthesesRange(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eea7716_UnsafeExpr> _221498d8d_buildUnsafeExpr(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eeb8293_FnDecl> _22149919b_buildAnonFn(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Any _2214994a9_buildUnsafe(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline void _221499872_pushRangeLitPart(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>, jule::Ptr<_21d81d743_Token>, jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _221499ba2_getBraceRangeLitExprParts(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eeb0796_FieldExprPair> _221499ec1_buildFieldExprPair(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eea5ec8_Expr> _22149a2ce_buildStructLitExpr(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _22149a5dc_buildStructLitExprs(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eeb0ee4_StructLit> _22149a91c_buildTypedStructLiteral(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eea5ec8_Expr> _22149ac3b_buildBraceLitPart(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eeb1467_BraceLit> _22149b049_buildBraceLit(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Any _22149b357_buildBraceRange(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _22149b665_getEnumerableParts(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eeb2424_SliceExpr> _22149b973_buildSlice(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eeb2c93_IndexingExpr> _22149bdc4_buildIndexing(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>, jule::Slice<jule::Ptr<_21d81d743_Token>>, jule::Ptr<_21d81d743_Token>);
inline jule::Ptr<_21eeb339d_SlicingExpr> _22149c468_buildSlicing(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Ptr<_21d81d743_Token>&, jule::Ptr<_21d81d743_Token>);
inline jule::Any _22149c776_buildBracketRange(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Any _22149ca84_buildData(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Any _22149ce3b_buildBinop(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::I64);
inline jule::Any _22149d249_build(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Any _22149d557_buildKind(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eea5ec8_Expr> _22149d865_buildFromTokens(_221493e76_exprBuilder*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
struct _221493e76_exprBuilder {
	jule::Ptr<_2214a40a7_parser> _field_p;
	

	_221493e76_exprBuilder(void) = default;

	inline bool operator==(_221493e76_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_221493e76_exprBuilder _other) { return !this->operator==(_other); }


};
struct _2214a0779_assignInfo {
	jule::Slice<jule::Ptr<_21d81d743_Token>> _field_l;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _field_r;
	jule::Ptr<_21d81d743_Token> _field_setter;
	jule::Bool _field_ok = false;
	

	_2214a0779_assignInfo(void) = default;


};
inline void _2214a43d7_stop(_2214a40a7_parser*);
inline jule::Bool _2214a464b_stopped(_2214a40a7_parser*);
inline void _2214a4a14_pushErr(_2214a40a7_parser*, jule::Ptr<_21d81d743_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _2214a4d33_pushSuggestion(_2214a40a7_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_21eea5ec8_Expr> _2214a5141_buildExpr(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21ee6d710_Directive> _2214a544e_buildDirective(_2214a40a7_parser*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline void _2214a56c4_pushDirective(_2214a40a7_parser*, jule::Ptr<_21ee6d710_Directive>);
inline jule::Ptr<_21eeb679c_ScopeTree> _2214a5a7b_buildScope(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Ptr<_21d81d743_Token>);
inline __jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool _2214a5ecc__buildType(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::I64*, jule::Bool);
inline __jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool _2214a642d_buildType(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_21eebcad3_TypeAliasDecl> _2214a673b_buildTypeAliasDecl(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline void _2214a6a5a_buildVarTypeAndExpr(jule::Ptr<_2214a40a7_parser>, jule::Ptr<_21eeb9272_VarDecl>&, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline void _2214a6d79_buildVarCommon(jule::Ptr<_2214a40a7_parser>, jule::Ptr<_21eeb9272_VarDecl>&, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline void _2214a7242_buildVarBegin(_2214a40a7_parser*, jule::Ptr<_21eeb9272_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eeb9272_VarDecl> _2214a7550_buildVar(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eeb3b0c_GenericDecl> _2214a785d_buildGeneric(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>> _2214a7c15_buildGenerics(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Ptr<_21d81d743_Token>&);
inline jule::Ptr<_21eeb6e73_ParamDecl> _2214a8023_buildSelfParam(_2214a40a7_parser*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline void _2214a83db_paramTypeBegin(_2214a40a7_parser*, jule::Ptr<_21eeb6e73_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline void _2214a870a_buildParamType(jule::Ptr<_2214a40a7_parser>, jule::Ptr<_21eeb6e73_ParamDecl>&, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline void _2214a8a29_buildParamBody(jule::Ptr<_2214a40a7_parser>, jule::Ptr<_21eeb6e73_ParamDecl>&, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eeb6e73_ParamDecl> _2214a8d37_buildParam(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline void _2214a90ac_checkParams(_2214a40a7_parser*, jule::Slice<jule::Ptr<_21eeb6e73_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_21eeb6e73_ParamDecl>> _2214a9464_buildParams(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Bool);
inline __jule_tuple_x_21eea4aba_RetTypeDecl__jule_tuple_bool _2214a981b_buildMultiRetType(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::I64&);
inline __jule_tuple_x_21eea4aba_RetTypeDecl__jule_tuple_bool _2214a9bc3_buildRetType(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::I64&);
inline jule::Ptr<_21eeb8293_FnDecl> _2214aa124_buildFnPrototype(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_21eeb8293_FnDecl> _2214aa575_buildFn(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_21d81d743_Token>> _2214aa883_getUseDeclSelectors(_2214a40a7_parser*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline void _2214aaba2_buildCppUseDecl(_2214a40a7_parser*, jule::Ptr<_21eebdebe_UseDecl>&, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline void _2214aaec1_buildStdUseDecl(_2214a40a7_parser*, jule::Ptr<_21eebdebe_UseDecl>&, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline void _2214ab2e0_buildIdentUseDecl(_2214a40a7_parser*, jule::Ptr<_21eebdebe_UseDecl>&, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline void _2214ab60e_parseUseDecl(_2214a40a7_parser*, jule::Ptr<_21eebdebe_UseDecl>&, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eebdebe_UseDecl> _2214ab9b6_buildUseDecl(_2214a40a7_parser*, jule::Slice<jule::Ptr<_21d81d743_Token>>, jule::Bool);
inline jule::Ptr<_21eea19a7_TypeDecl> _2214abd6d_buildTypeEnumItemKind(jule::Ptr<_2214a40a7_parser>, jule::I64&, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Slice<jule::Ptr<_21eec0971_TypeEnumItemDecl>> _2214ac17b_buildTypeEnumItems(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eec107b_TypeEnumDecl> _2214ac489_buildTypeEnumDecl(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eea5ec8_Expr> _2214ac841_buildEnumItemExpr(jule::Ptr<_2214a40a7_parser>, jule::I64&, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Slice<jule::Ptr<_21eebe442_EnumItemDecl>> _2214acb4e_buildEnumItems(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eebee6a_EnumDecl> _2214ace5c_buildEnumDecl(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Any _2214ad26a_buildNodeEnumDecl(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eec1279_FieldDecl> _2214ad578_buildField(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Slice<jule::Ptr<_21eec1279_FieldDecl>> _2214ad886_buildStructDeclFields(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eec1a2c_StructDecl> _2214adb94_buildStructDecl(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline void _2214ade19_checkMethodReceiver(_2214a40a7_parser*, jule::Ptr<_21eeb8293_FnDecl>&);
inline jule::Slice<jule::Ptr<_21eeb8293_FnDecl>> _2214ae227_buildTraitMethods(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eec2137_TraitDecl> _2214ae535_buildTraitDecl(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eeb8293_FnDecl> _2214ae843_buildCppLinkFn(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eeb9272_VarDecl> _2214aeb51_buildCppLinkVar(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eec1a2c_StructDecl> _2214aee5e_buildCppLinkStruct(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eebcad3_TypeAliasDecl> _2214b026c_buildCppLinkTypeAlias(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21eebdebe_UseDecl> _2214b057a_buildCppLinkUse(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Any _2214b0888_buildCppLink(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eeb8293_FnDecl> _2214b0b96_getMethod(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline void _2214b0eb5_parseImplBody(jule::Ptr<_2214a40a7_parser>, jule::Ptr<_21eec2742_Impl>&, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eec2742_Impl> _2214b12c3_buildImpl(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Any _2214b15d1_buildNodeData(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline void _2214b1856_applyFnMeta(_2214a40a7_parser*, jule::Ptr<_21eeb8293_FnDecl>&);
inline void _2214b1acb_applyMeta(_2214a40a7_parser*, _21ee6d314_Node&);
inline void _2214b1d51_pushUseDecl(jule::Ptr<_2214a40a7_parser>, jule::Ptr<_21eebdebe_UseDecl>&);
inline jule::Bool _2214b215e_pushMetaNodes(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline _21ee6d314_Node _2214b246c_parseNode(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline void _2214b26e2_appendNode(jule::Ptr<_2214a40a7_parser>, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline void _2214b2b54_removeRange(_2214a40a7_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Slice<jule::I64>&);
inline void _2214b301c_pushWrongOrderCloseErr(_2214a40a7_parser*, jule::Ptr<_21d81d743_Token>&, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Slice<jule::I64>&);
inline void _2214b347e_pushRangeClose(_2214a40a7_parser*, jule::Ptr<_21d81d743_Token>, jule::Str, jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Slice<jule::I64>&);
inline void _2214b3704_checkRanges(_2214a40a7_parser*, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline void _2214b3979_parse(jule::Ptr<_2214a40a7_parser>, jule::Ptr<_21d823acd_File>&);
struct _2214a40a7_parser {
	jule::Ptr<_21ee6c665_Ast> _field_ast;
	jule::Slice<jule::Ptr<_21ee6d710_Directive>> _field_directives;
	jule::Slice<_21d4e511d_Log> _field_errors;
	

	_2214a40a7_parser(void) = default;


};
inline void _2214b5393_pushErr(_2214b4cbb_typeBuilder*, jule::Ptr<_21d81d743_Token>, jule::Str);
inline void _2214b56b2_pushSuggestion(_2214b4cbb_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_21eea19a7_TypeDecl> _2214b5926_buildPrim(_2214b4cbb_typeBuilder*);
inline jule::Ptr<_21eea19a7_TypeDecl> _2214b5b8a_buildNamespace(_2214b4cbb_typeBuilder*);
inline jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>> _2214b5dee_buildGenerics(_2214b4cbb_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _2214b6163_identGenerics(_2214b4cbb_typeBuilder*);
inline jule::Ptr<_21eea19a7_TypeDecl> _2214b63c7_buildIdent(_2214b4cbb_typeBuilder*);
inline jule::Ptr<_21eea19a7_TypeDecl> _2214b663b_buildCppLink(_2214b4cbb_typeBuilder*);
inline jule::Ptr<_21eea19a7_TypeDecl> _2214b68a0_buildFn(_2214b4cbb_typeBuilder*);
inline jule::Ptr<_21eea19a7_TypeDecl> _2214b6b14_buildPtr(_2214b4cbb_typeBuilder*);
inline jule::Ptr<_21eea19a7_TypeDecl> _2214b6d78_buildSptr(_2214b4cbb_typeBuilder*);
inline jule::Ptr<_21eea19a7_TypeDecl> _2214b70dc_buildOp(_2214b4cbb_typeBuilder*);
inline jule::Ptr<_21eea19a7_TypeDecl> _2214b7351_buildSlc(_2214b4cbb_typeBuilder*);
inline jule::Ptr<_21eea19a7_TypeDecl> _2214b75b5_buildArr(_2214b4cbb_typeBuilder*);
inline jule::Ptr<_21eea19a7_TypeDecl> _2214b7829_buildMap(_2214b4cbb_typeBuilder*);
inline jule::Ptr<_21eea19a7_TypeDecl> _2214b7a8d_buildEnumerable(_2214b4cbb_typeBuilder*);
inline jule::Ptr<_21eea19a7_TypeDecl> _2214b7d02_step(_2214b4cbb_typeBuilder*);
inline __jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool _2214b8066_build(_2214b4cbb_typeBuilder*);
struct _2214b4cbb_typeBuilder {
	jule::Ptr<_2214a40a7_parser> _field_p;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	

	_2214b4cbb_typeBuilder(void) = default;


};
struct _220cde5b3_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_220cde5b3_CompileInfo(void) = default;

	inline bool operator==(_220cde5b3_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_220cde5b3_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _220ce0e66_pushErr(_220ce0916_directiveEval*, jule::Ptr<_21d81d743_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _220ce131d_splitOperans(_220ce0916_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Bool _220ce162b_evalDirectiveIdent(_220ce0916_directiveEval*, jule::Str);
inline jule::Bool _220ce1939_evalDirectivePart(_220ce0916_directiveEval*, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Bool _220ce1b9d_eval(_220ce0916_directiveEval*);
struct _220ce0916_directiveEval {
	jule::Slice<_21d4e511d_Log> _field_logs;
	jule::Ptr<_21ee6d710_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

	_220ce0916_directiveEval(void) = default;


};
inline jule::Ptr<_2213ab795_JuleImporter> static__220dd6204_New(_220cde5b3_CompileInfo);
inline jule::Slice<jule::Ptr<_220b61325_ImportInfo>> _220e297b9_AllPackages(_2213ab795_JuleImporter*);
inline void _220e48909_SetModPath(_2213ab795_JuleImporter*, jule::Str);
inline jule::Str _220e5a07a_GetModPath(_2213ab795_JuleImporter*);
inline jule::Str _220e866c2_ModById(_2213ab795_JuleImporter*, jule::I64);
inline jule::Ptr<_220b61325_ImportInfo> _220e8ace2_GetImport(_2213ab795_JuleImporter*, jule::Str);
inline __jule_tuple_sx_21ee6c665_Ast__jule_tuple_s_21d4e511d_Log _22104dbeb_ImportPackage(_2213ab795_JuleImporter*, jule::Str, jule::Bool);
inline void _22105c974_Imported(_2213ab795_JuleImporter*, jule::Ptr<_220b61325_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_21d4e511d_Log _221060290_isPassBuildDirectives(_2213ab795_JuleImporter*, jule::Ptr<_21ee6c665_Ast>&);
struct _2213ab795_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_220b61325_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

	_2213ab795_JuleImporter(void) = default;


};
struct _220d07345_OrderedDefines {
	jule::Slice<jule::Ptr<_21eec3006_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_220b8746c_Var>> _field_Globals;
	

	_220d07345_OrderedDefines(void) = default;


};
inline jule::Bool _206931b9d_isCommonOrdered(jule::Slice<jule::Ptr<_21eec3006_Struct>>, jule::Ptr<_21eec3006_Struct>);
inline jule::Bool _206938e3b_isCommonOrdered(jule::Slice<jule::Ptr<_220b8746c_Var>>, jule::Ptr<_220b8746c_Var>);
inline void _20692b22a_orderCommon(jule::Slice<jule::Ptr<_21eec3006_Struct>>&);
inline void _20692babb_orderCommon(jule::Slice<jule::Ptr<_220b8746c_Var>>&);
inline void static__2212880ab_orderStructures(jule::Slice<jule::Ptr<_21eec3006_Struct>>&);
inline void static__221302125_orderVars(jule::Slice<jule::Ptr<_220b8746c_Var>>&);
struct _220dce20d_defineOrderer {
	

	_220dce20d_defineOrderer(void) = default;

	inline bool operator==(_220dce20d_defineOrderer _other) { return true; }

	inline bool operator!=(_220dce20d_defineOrderer _other) { return !this->operator==(_other); }


};
struct _221583494_liveTable {
	jule::Slice<jule::Ptr<_220b8746c_Var>> _field_vars;
	jule::Slice<jule::Ptr<_220b31a10_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_21eec33d0_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_220b376b4_Trait>> _field_traits;
	

	_221583494_liveTable(void) = default;


};
inline void _2215b95b8_optimizeChild(jule::Ptr<_2215b90e0_scopeDeadCode>, jule::Ptr<_220b42b20_Scope>&);
inline void _2215b9860_optimizeBodyChildExceptional(jule::Ptr<_2215b90e0_scopeDeadCode>, jule::Ptr<_220b42b20_Scope>&);
inline void _2215b9ae6_optimizeBodyChild(jule::Ptr<_2215b90e0_scopeDeadCode>, jule::Ptr<_220b42b20_Scope>&);
inline void _2215b9d6b_optimizeExprModel(jule::Ptr<_2215b90e0_scopeDeadCode>, jule::Any&);
inline void _2215ba047_eliminateFollowed(_2215b90e0_scopeDeadCode*);
inline void _2215ba2bc_pushGoto(jule::Ptr<_2215b90e0_scopeDeadCode>, jule::Ptr<_220b4564a_GotoSt>);
inline void _2215ba542_pushLabel(jule::Ptr<_2215b90e0_scopeDeadCode>, jule::Ptr<_220b4535e_Label>);
inline void _2215ba7b7_optimizeRangeIter(jule::Ptr<_2215b90e0_scopeDeadCode>, jule::Ptr<_220b447c0_RangeIter>);
inline void _2215baa3c_optimizeWhileIter(jule::Ptr<_2215b90e0_scopeDeadCode>, jule::Ptr<_220b43dda_WhileIter>);
inline void _2215bacb2_optimizeInfIter(jule::Ptr<_2215b90e0_scopeDeadCode>, jule::Ptr<_220b43967_InfIter>);
inline void _2215bb037_optimizeConditional(jule::Ptr<_2215b90e0_scopeDeadCode>, jule::Ptr<_220b4367b_Conditional>);
inline void _2215bb2ac_optimizeMatch(jule::Ptr<_2215b90e0_scopeDeadCode>, jule::Ptr<_220b4686b_Match>);
inline void _2215bb532_optimizeAssign(jule::Ptr<_2215b90e0_scopeDeadCode>, jule::Ptr<_220b45e75_Assign>);
inline void _2215bb7a7_optimizeMultiAssign(jule::Ptr<_2215b90e0_scopeDeadCode>, jule::Ptr<_220b4632c_MultiAssign>);
inline void _2215bba2c_optimizeStmt(jule::Ptr<_2215b90e0_scopeDeadCode>, jule::Any);
inline void _2215bbc08_optimizeStmts(jule::Ptr<_2215b90e0_scopeDeadCode>);
struct _2215b90e0_scopeDeadCode {
	jule::Ptr<_2215b90e0_scopeDeadCode> _field_parent;
	jule::Ptr<_220b42b20_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_220b4535e_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_220b4564a_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	_2215b90e0_scopeDeadCode(void) = default;

	inline bool operator==(_2215b90e0_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_2215b90e0_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _2215bd04a_exprDeadCode static__2215bd677_new(jule::Ptr<_2215b90e0_scopeDeadCode>&);
inline void _2215bd8ec_binary(_2215bd04a_exprDeadCode*, jule::Ptr<_220049577_BinopExprModel>);
inline void _2215bdb72_unary(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2acc3_UnaryExprModel>);
inline void _2215bdde7_structureLit(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2b19c_StructLitExprModel>);
inline void _2215be16c_allocStructure(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2b389_AllocStructLitExprModel>);
inline void _2215be3e2_casting(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2b576_CastingExprModel>);
inline void _2215be667_args(_2215bd04a_exprDeadCode*, jule::Slice<jule::Any>&);
inline void _2215be8dc_funcCall(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2b763_FnCallExprModel>);
inline void _2215beb62_slice(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2b950_SliceExprModel>);
inline void _2215bedd7_array(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2cdc4_ArrayExprModel>);
inline void _2215c015c_indexing(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2bb3c_IndexingExprModel>);
inline void _2215c03d2_anonFunc(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2bd29_AnonFnExprModel>);
inline void _2215c0657_mapExpr(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2c203_MapExprModel>);
inline void _2215c08cc_slicing(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2c3e0_SlicingExprModel>);
inline void _2215c0b52_traitSub(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2c5cc_TraitSubIdentExprModel>);
inline void _2215c0dc7_structureSub(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2c9ea_StructSubIdentExprModel>);
inline void _2215c114c_commonSub(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2d29d_CommonSubIdentExprModel>);
inline void _2215c13c2_tuple(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2d48a_TupleExprModel>);
inline void _2215c1647_newCall(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2dc3d_BuiltinNewCallExprModel>);
inline void _2215c18bc_outCall(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2d677_BuiltinOutCallExprModel>);
inline void _2215c1b42_outlnCall(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2d864_BuiltinOutlnCallExprModel>);
inline void _2215c1db7_panicCall(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2de2a_BuiltinPanicCallExprModel>);
inline void _2215c213c_assertCall(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2e117_BuiltinAssertCallExprModel>);
inline void _2215c23b2_errorCall(_2215bd04a_exprDeadCode*, jule::Ptr<_220b30217_BuiltinErrorCallExprModel>);
inline void _2215c2637_makeCall(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2e304_BuiltinMakeCallExprModel>);
inline void _2215c28ac_appendCall(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2e4e1_BuiltinAppendCallExprModel>);
inline void _2215c2b32_lenCall(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2e6cd_BuiltinLenCallExprModel>);
inline void _2215c2da7_capCall(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2e8ba_BuiltinCapCallExprModel>);
inline void _2215c312c_cloneCall(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2da51_BuiltinCloneCallExprModel>);
inline void _2215c33a2_deleteCall(_2215bd04a_exprDeadCode*, jule::Ptr<_220b2c7b9_BuiltinDeleteCallExprModel>);
inline void _2215c3627_sizeof(_2215bd04a_exprDeadCode*, jule::Ptr<_220b30404_SizeofExprModel>);
inline void _2215c389c_alignof(_2215bd04a_exprDeadCode*, jule::Ptr<_220b305e1_AlignofExprModel>);
inline void _2215c3b22_integratedToStr(_2215bd04a_exprDeadCode*, jule::Ptr<_220b309ba_IntegratedToStrExprModel>);
inline void _2215c3d97_free(_2215bd04a_exprDeadCode*, jule::Ptr<_220b30d94_FreeExprModel>);
inline void _2215c411c_backendEmit(_2215bd04a_exprDeadCode*, jule::Ptr<_220b30ba7_BackendEmitExprModel>);
inline void _2215c4392_optimize(_2215bd04a_exprDeadCode*, jule::Any&);
struct _2215bd04a_exprDeadCode {
	jule::Ptr<_2215b90e0_scopeDeadCode> _field_s;
	

	_2215bd04a_exprDeadCode(void) = default;

	inline bool operator==(_2215bd04a_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_2215bd04a_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _21d84ae02_UnsafeBinopExprModel {
	jule::Ptr<_220049577_BinopExprModel> _field_Node;
	

	_21d84ae02_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_21d84ae02_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_21d84ae02_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _21d8d3b38_UnsafeIndexingExprModel {
	jule::Ptr<_220b2bb3c_IndexingExprModel> _field_Node;
	

	_21d8d3b38_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_21d8d3b38_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_21d8d3b38_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _21e35075d_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_220b2b950_SliceExprModel> _field_Elems;
	

	_21e35075d_PushToSliceExprModel(void) = default;

	inline bool operator==(_21e35075d_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_21e35075d_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _21e745966_MutSlicingExprModel {
	jule::Ptr<_21d81d743_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_21e745966_MutSlicingExprModel(void) = default;

	inline bool operator==(_21e745966_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_21e745966_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _21d88b30a_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_21d88b30a_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_21d88b30a_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_21d88b30a_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21da0794e_scopeOptimizer> static__21d843b75_new(jule::Ptr<_220b42b20_Scope>);
inline void _21d85b385_setCurrentStmt(_21da0794e_scopeOptimizer*, jule::Any);
inline void _21d85d9a3_optimizeData(_21da0794e_scopeOptimizer*, jule::Ptr<_220bceecb_Data>);
inline void _21d86b054_optimizeVar(_21da0794e_scopeOptimizer*, jule::Ptr<_220b8746c_Var>);
inline void _21d88a78d_optimizeConditional(_21da0794e_scopeOptimizer*, jule::Ptr<_220b4367b_Conditional>);
inline void _21d8904c9_buildDefaultConstatTrueCase(_21da0794e_scopeOptimizer*, jule::Ptr<_220b473b6_Case>, jule::I64&, jule::Ptr<_220b4686b_Match>&);
inline void _21d891970_optimizeMatch(_21da0794e_scopeOptimizer*, jule::Ptr<_220b4686b_Match>);
inline void _21d8929e8_optimizeRangeIter(_21da0794e_scopeOptimizer*, jule::Ptr<_220b447c0_RangeIter>);
inline void _21d892e9e_optimizeWhileIter(_21da0794e_scopeOptimizer*, jule::Ptr<_220b43dda_WhileIter>);
inline jule::Bool _21d8bd3b4_substr(_21da0794e_scopeOptimizer*, jule::Ptr<_220b45e75_Assign>);
inline jule::Bool _21d8c619c_strInsert(_21da0794e_scopeOptimizer*, jule::Ptr<_220b45e75_Assign>);
inline jule::Bool _21d8dc768_strAssign(_21da0794e_scopeOptimizer*, jule::Ptr<_220b45e75_Assign>);
inline void _21d96bd7a_optimizeAssign(_21da0794e_scopeOptimizer*, jule::Ptr<_220b45e75_Assign>);
inline void _21d96c96e_optimizeMultiAssign(_21da0794e_scopeOptimizer*, jule::Ptr<_220b4632c_MultiAssign>);
inline void _21d9b19e6_optimizeRet(_21da0794e_scopeOptimizer*, jule::Ptr<_220b47ce0_RetSt>);
inline void _21d9b51c0_optimizeStmt(_21da0794e_scopeOptimizer*, jule::Any);
inline void _21d9bc826_optimizeChild(_21da0794e_scopeOptimizer*, jule::Ptr<_220b42b20_Scope>);
inline void _21d9d3a18_optimize(_21da0794e_scopeOptimizer*);
struct _21da0794e_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_220b42b20_Scope> _field_scope;
	

	_21da0794e_scopeOptimizer(void) = default;

	inline bool operator==(_21da0794e_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_21da0794e_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__21db86c10_optimize(jule::Any&);
inline jule::Bool _21db9c055_strCond(_21e043709_exprOptimizer*, jule::Ptr<_220049577_BinopExprModel>);
inline void _21dba0322_binary(_21e043709_exprOptimizer*, jule::Ptr<_220049577_BinopExprModel>);
inline void _21dba1235_unary(_21e043709_exprOptimizer*, jule::Ptr<_220b2acc3_UnaryExprModel>);
inline void _21dba91c7_structureLit(_21e043709_exprOptimizer*, jule::Ptr<_220b2b19c_StructLitExprModel>);
inline void _21dbc0474_allocStructure(_21e043709_exprOptimizer*, jule::Ptr<_220b2b389_AllocStructLitExprModel>);
inline void _21dbc18e8_casting(_21e043709_exprOptimizer*, jule::Ptr<_220b2b576_CastingExprModel>);
inline void _21dbe738b_args(_21e043709_exprOptimizer*, jule::Slice<jule::Any>&);
inline void _21dc10ccd_scope(_21e043709_exprOptimizer*, jule::Ptr<_220b42b20_Scope>&);
inline void _21dc25c27_funcCall(_21e043709_exprOptimizer*, jule::Ptr<_220b2b763_FnCallExprModel>);
inline void _21dc471dd_slice(_21e043709_exprOptimizer*, jule::Ptr<_220b2b950_SliceExprModel>);
inline void _21dc7456c_array(_21e043709_exprOptimizer*, jule::Ptr<_220b2cdc4_ArrayExprModel>);
inline void _21dc82701_indexing(_21e043709_exprOptimizer*, jule::Ptr<_220b2bb3c_IndexingExprModel>);
inline void _21dc991a7_anonFunc(_21e043709_exprOptimizer*, jule::Ptr<_220b2bd29_AnonFnExprModel>);
inline void _21dca3b95_mapExpr(_21e043709_exprOptimizer*, jule::Ptr<_220b2c203_MapExprModel>);
inline void _21dd5552c_slicing(_21e043709_exprOptimizer*, jule::Ptr<_220b2c3e0_SlicingExprModel>);
inline void _21dd58442_traitSub(_21e043709_exprOptimizer*, jule::Ptr<_220b2c5cc_TraitSubIdentExprModel>);
inline void _21dd5dbd9_structureSub(_21e043709_exprOptimizer*, jule::Ptr<_220b2c9ea_StructSubIdentExprModel>);
inline void _21e018d94_commonSub(_21e043709_exprOptimizer*, jule::Ptr<_220b2d29d_CommonSubIdentExprModel>);
inline void _21e01d959_tuple(_21e043709_exprOptimizer*, jule::Ptr<_220b2d48a_TupleExprModel>);
inline void _21e0397dd_newCall(_21e043709_exprOptimizer*, jule::Ptr<_220b2dc3d_BuiltinNewCallExprModel>);
inline void _21e05232d_outCall(_21e043709_exprOptimizer*, jule::Ptr<_220b2d677_BuiltinOutCallExprModel>);
inline void _21e054220_outlnCall(_21e043709_exprOptimizer*, jule::Ptr<_220b2d864_BuiltinOutlnCallExprModel>);
inline void _21e05d69c_panicCall(_21e043709_exprOptimizer*, jule::Ptr<_220b2de2a_BuiltinPanicCallExprModel>);
inline void _21e065a39_assertCall(_21e043709_exprOptimizer*, jule::Ptr<_220b2e117_BuiltinAssertCallExprModel>);
inline void _21e088dae_errorCall(_21e043709_exprOptimizer*, jule::Ptr<_220b30217_BuiltinErrorCallExprModel>);
inline void _21e090547_makeCall(_21e043709_exprOptimizer*, jule::Ptr<_220b2e304_BuiltinMakeCallExprModel>);
inline void _21e09431a_appendCall(_21e043709_exprOptimizer*, jule::Ptr<_220b2e4e1_BuiltinAppendCallExprModel>);
inline void _21e09ec1b_lenCall(_21e043709_exprOptimizer*, jule::Ptr<_220b2e6cd_BuiltinLenCallExprModel>);
inline void _21e0a5040_capCall(_21e043709_exprOptimizer*, jule::Ptr<_220b2e8ba_BuiltinCapCallExprModel>);
inline void _21e0b04ac_cloneCall(_21e043709_exprOptimizer*, jule::Ptr<_220b2da51_BuiltinCloneCallExprModel>);
inline void _21e0b74e7_deleteCall(_21e043709_exprOptimizer*, jule::Ptr<_220b2c7b9_BuiltinDeleteCallExprModel>);
inline void _21e0c6bee_sizeof(_21e043709_exprOptimizer*, jule::Ptr<_220b30404_SizeofExprModel>);
inline void _21e0cd3a9_alignof(_21e043709_exprOptimizer*, jule::Ptr<_220b305e1_AlignofExprModel>);
inline void _21e0d5944_integratedToStr(_21e043709_exprOptimizer*, jule::Ptr<_220b309ba_IntegratedToStrExprModel>);
inline void _21e050c00_free(_21e043709_exprOptimizer*, jule::Ptr<_220b30d94_FreeExprModel>);
inline void _21e108978_backendEmit(_21e043709_exprOptimizer*, jule::Ptr<_220b30ba7_BackendEmitExprModel>);
inline void _21e142462_do(_21e043709_exprOptimizer*);
struct _21e043709_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	_21e043709_exprOptimizer(void) = default;

	inline bool operator==(_21e043709_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_21e043709_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2214ba0ac_Optimizer> static__2214d97b3_New(jule::Ptr<_221064c23_IR>&);
inline void _2214e7c33_optimizeGlobal(_2214ba0ac_Optimizer*, jule::Ptr<_220b8746c_Var>&);
inline void _221526cea_optimizeFunction(_2214ba0ac_Optimizer*, jule::Ptr<_220b31636_Fn>&);
inline void _2215365ce_optimizeStruct(_2214ba0ac_Optimizer*, jule::Ptr<_21eec3006_Struct>&);
inline void _22153e7d5_optimizeGlobals(_2214ba0ac_Optimizer*, jule::Ptr<_220b6427e_Package>&);
inline void _22154e52b_optimizeFunctions(_2214ba0ac_Optimizer*, jule::Ptr<_220b6427e_Package>&);
inline void _221550c69_optimizeStructs(_2214ba0ac_Optimizer*, jule::Ptr<_220b6427e_Package>&);
inline void _2214eb2ca_optimizePackage(_2214ba0ac_Optimizer*, jule::Ptr<_220b6427e_Package>&);
inline void _221529b33_Optimize(_2214ba0ac_Optimizer*);
struct _2214ba0ac_Optimizer {
	jule::Ptr<_221064c23_IR> _field_ir;
	

	_2214ba0ac_Optimizer(void) = default;

	inline bool operator==(_2214ba0ac_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_2214ba0ac_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__2215c6a48_Reset(void);
inline void static__2215c7b8c_Print(jule::Str, jule::Str);
struct _2215c79a0_AnsiEscape {
	

	_2215c79a0_AnsiEscape(void) = default;

	inline bool operator==(_2215c79a0_AnsiEscape _other) { return true; }

	inline bool operator!=(_2215c79a0_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__2215c9221_LogFlat(_21d4e511d_Log&);
inline void static__2215c9430_LogError(_21d4e511d_Log&);
inline void static__2215c963e_Log(_21d4e511d_Log&);
inline void static__2215c984d_PrintLogs(jule::Slice<_21d4e511d_Log>&);
struct _2215c8ebd_Logger {
	

	_2215c8ebd_Logger(void) = default;

	inline bool operator==(_2215c8ebd_Logger _other) { return true; }

	inline bool operator!=(_2215c8ebd_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _202bed19e_Unix(_202becce7_AbsTime*);
struct _202becce7_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	_202becce7_AbsTime(void) = default;

	inline bool operator==(_202becce7_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_202becce7_AbsTime _other) { return !this->operator==(_other); }


};
inline _202bed48a_Time static__202bed831_Unix(jule::U64);
inline _202bed48a_Time static__202beda2e_Now(void);
inline jule::U64 _202bede80_Unix(_202bed48a_Time*);
inline jule::U64 _202bee1e4_Day(_202bed48a_Time*);
inline jule::U64 _202bee458_Month(_202bed48a_Time*);
inline jule::U64 _202bee6bc_Year(_202bed48a_Time*);
inline jule::U64 _202bee931_Second(_202bed48a_Time*);
inline jule::U64 _202beeb95_Minute(_202bed48a_Time*);
inline jule::U64 _202beee09_Hour(_202bed48a_Time*);
inline _202becce7_AbsTime _202c0016d_Abs(_202bed48a_Time*);
struct _202bed48a_Time {
	jule::U64 _field_sec = 0;
	

	_202bed48a_Time(void) = default;

	inline bool operator==(_202bed48a_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_202bed48a_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_202b4878c_scopeCoder> static__202b48da8_new(jule::Ptr<_202c052a5_ObjectCoder>&);
inline void _202b4912d_rangeIndexIter(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b447c0_RangeIter>&);
inline void _202b493a3_rangeHashmapIter(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b447c0_RangeIter>&);
inline void _202b49628_ifCase(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b4301b_If>);
inline void _202b4989d_conditional(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b4367b_Conditional>);
inline void _202b49b23_infIter(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b43967_InfIter>);
inline void _202b49d98_whileIter(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b43dda_WhileIter>);
inline void _202b4a11d_rangeIter(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b447c0_RangeIter>);
inline void _202b4a393_cont(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b44bbb_ContSt>);
inline void _202b4a618_label(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b4535e_Label>);
inline void _202b4a88d_gotoSt(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b4564a_GotoSt>);
inline void _202b4ab13_postfix(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b45a02_Postfix>);
inline void _202b4ad88_assign(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b45e75_Assign>);
inline void _202b4b10d_mapLookupAssign(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b4632c_MultiAssign>&);
inline void _202b4b383_multiAssignTup(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b4632c_MultiAssign>&);
inline void _202b4b608_multiAssignFn(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b4632c_MultiAssign>&);
inline void _202b4b87d_multiAssign(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b4632c_MultiAssign>);
inline jule::Fn<void(void)> _202b4bb8b_matchExpr(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b4686b_Match>);
inline void _202b4beaa_case(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b4686b_Match>, jule::Ptr<_220b473b6_Case>);
inline void _202b4c230_matchSt(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b4686b_Match>);
inline void _202b4c4a5_fallSt(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b4796b_FallSt>);
inline void _202b4c72a_breakSt(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b45073_BreakSt>);
inline void _202b4c9a0_setResult(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b47ce0_RetSt>);
inline void _202b4cc25_retSt(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b47ce0_RetSt>);
inline void _202b4ce9a_var(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b8746c_Var>);
inline void _202b4d220_st(jule::Ptr<_202b4878c_scopeCoder>, jule::Any);
inline void _202b4d495_scopeStmts(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b42b20_Scope>&);
inline void _202b4d71a_scope(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b42b20_Scope>);
inline void _202b4d990_funcScope(jule::Ptr<_202b4878c_scopeCoder>, jule::Ptr<_220b31a10_FnIns>);
struct _202b4878c_scopeCoder {
	jule::Ptr<_202c052a5_ObjectCoder> _field_oc;
	

	_202b4878c_scopeCoder(void) = default;

	inline bool operator==(_202b4878c_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_202b4878c_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_202b51432_exprCoder> static__202b5182d_new(jule::Ptr<_202c052a5_ObjectCoder>&);
inline void _202b51aa3_string(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220074816_Const>&);
inline void _202b51d28_boolean(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220074816_Const>&);
inline void _202b52004_nilLit(jule::Ptr<_202b51432_exprCoder>);
inline jule::Bool _202b52312_ftoaSpecialCases(jule::Ptr<_202b51432_exprCoder>, jule::F64&);
inline void _202b52587_float32(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220074816_Const>&);
inline void _202b5280c_float64(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220074816_Const>&);
inline void _202b52a82_constant(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220074816_Const>);
inline void _202b52e4a_divByZeroBinary(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_21d81d743_Token>&, jule::Ptr<_22001ab86_OperandExprModel>&, jule::Ptr<_22001ab86_OperandExprModel>&);
inline void _202b531c0_unsafeBinary(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220049577_BinopExprModel>);
inline void _202b53445_binary(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220049577_BinopExprModel>);
inline void _202b536ba_var(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b8746c_Var>);
inline void _202b53940_structureIns(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_21eec33d0_StructIns>);
inline void _202b53bb5_unary(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2acc3_UnaryExprModel>);
inline void _202b53e3a_structureLit(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2b19c_StructLitExprModel>);
inline void _202b541b0_allocStructure(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2b389_AllocStructLitExprModel>);
inline void _202b54435_casting(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2b576_CastingExprModel>);
inline void _202b546aa_args(jule::Ptr<_202b51432_exprCoder>, jule::Slice<jule::Any>);
inline void _202b54930_modelForCall(jule::Ptr<_202b51432_exprCoder>, jule::Any);
inline void _202b54ba5_pushCallInf(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2b763_FnCallExprModel>&);
inline jule::Bool _202b54eb3_isWrapped(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2b763_FnCallExprModel>&);
inline void _202b55238_pureFuncCall(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2b763_FnCallExprModel>&);
inline void _202b554ad_coFuncCall(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2b763_FnCallExprModel>&);
inline void _202b557cc_writeUseExpr(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b31a10_FnIns>&, jule::Ptr<_220bceecb_Data>);
inline void _202b55a52_funcCall(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2b763_FnCallExprModel>);
inline void _202b55cc7_slice(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2b950_SliceExprModel>);
inline void _202b5604c_indexing(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2bb3c_IndexingExprModel>);
inline void _202b562c2_unsafeIndexing(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_21d8d3b38_UnsafeIndexingExprModel>);
inline void _202b56547_anonFunc(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2bd29_AnonFnExprModel>);
inline void _202b567bc_mapExpr(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2c203_MapExprModel>);
inline void _202b56a42_slicing(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2c3e0_SlicingExprModel>);
inline void _202b56cb7_traitSub(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2c5cc_TraitSubIdentExprModel>);
inline void _202b5703c_structureSub(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2c9ea_StructSubIdentExprModel>);
inline void _202b572b2_commonIdent(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2d0b1_CommonIdentExprModel>);
inline void _202b57537_commonSub(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2d29d_CommonSubIdentExprModel>);
inline void _202b577ac_array(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2cdc4_ArrayExprModel>);
inline void _202b57a32_funcInsCommon(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b31a10_FnIns>);
inline void _202b57ca7_funcIns(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b31a10_FnIns>);
inline void _202b5802c_tuple(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2d48a_TupleExprModel>);
inline void _202b582a2_newCall(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2dc3d_BuiltinNewCallExprModel>);
inline void _202b58527_outCall(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2d677_BuiltinOutCallExprModel>);
inline void _202b5879c_outlnCall(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2d864_BuiltinOutlnCallExprModel>);
inline void _202b58a22_panicCall(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2de2a_BuiltinPanicCallExprModel>);
inline void _202b58c97_assertCall(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2e117_BuiltinAssertCallExprModel>);
inline void _202b5901c_errorCall(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b30217_BuiltinErrorCallExprModel>);
inline void _202b59292_copyCall(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b3002a_BuiltinCopyCallExprModel>);
inline void _202b59517_lenCall(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2e6cd_BuiltinLenCallExprModel>);
inline void _202b5978c_capCall(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2e8ba_BuiltinCapCallExprModel>);
inline void _202b59a12_deleteCall(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2c7b9_BuiltinDeleteCallExprModel>);
inline void _202b59c87_makeCallSlice(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2e304_BuiltinMakeCallExprModel>&);
inline void _202b5a00c_makeCallStr(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2e304_BuiltinMakeCallExprModel>&);
inline void _202b5a282_makeCall(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2e304_BuiltinMakeCallExprModel>);
inline void _202b5a507_pushToSlice(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_21e35075d_PushToSliceExprModel>);
inline void _202b5a77c_appendCall(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2e4e1_BuiltinAppendCallExprModel>);
inline void _202b5aa02_cloneCall(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2da51_BuiltinCloneCallExprModel>);
inline void _202b5ac77_sizeof(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b30404_SizeofExprModel>);
inline void _202b5aeec_alignof(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b305e1_AlignofExprModel>);
inline jule::Str _202b5b30a_runeLit(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b307cd_RuneExprModel>);
inline void _202b5b580_structureStatic(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b2cbd7_StructStaticIdentExprModel>);
inline void _202b5b805_integratedToStr(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b309ba_IntegratedToStrExprModel>);
inline void _202b5ba7a_backendEmit(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b30ba7_BackendEmitExprModel>);
inline void _202b5bd00_free(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220b30d94_FreeExprModel>);
inline void _202b5c075_mutSlicing(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_21e745966_MutSlicingExprModel>);
inline void _202b5c2ea_strInsertBegin(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_21d88b30a_StrInsertBeginExprModel>);
inline void _202b5c570_model(jule::Ptr<_202b51432_exprCoder>, jule::Any);
inline void _202b5c7e5_expr(jule::Ptr<_202b51432_exprCoder>, jule::Any);
inline void _202b5ca6a_val(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220bd1054_Value>);
inline void _202b5cce0_initExpr(jule::Ptr<_202b51432_exprCoder>, jule::Ptr<_220c0ae5d_TypeKind>);
struct _202b51432_exprCoder {
	jule::Ptr<_202c052a5_ObjectCoder> _field_oc;
	

	_202b51432_exprCoder(void) = default;

	inline bool operator==(_202b51432_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_202b51432_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_202b60595_deriveCoder> static__202b6096e_new(jule::Ptr<_202c052a5_ObjectCoder>);
inline jule::Str _202b60c7c_cloneFuncDecl(_202b60595_deriveCoder*, jule::Ptr<_21eec3006_Struct>&);
inline jule::Str _202b6108a_cloneFuncDef(_202b60595_deriveCoder*, jule::Ptr<_21eec3006_Struct>&);
struct _202b60595_deriveCoder {
	jule::Ptr<_202c052a5_ObjectCoder> _field_oc;
	

	_202b60595_deriveCoder(void) = default;

	inline bool operator==(_202b60595_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_202b60595_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_202b61e6a_TestCoder> static__202b623dd_New(jule::Ptr<_202c052a5_ObjectCoder>&);
inline jule::Ptr<_220b61325_ImportInfo> _202b62652_findTestingPackage(jule::Ptr<_202b61e6a_TestCoder>);
inline void _202b628c7_appendTest(jule::Ptr<_202b61e6a_TestCoder>, jule::Ptr<_220b31a10_FnIns>);
inline void _202b62b4c_appendPackageTests(jule::Ptr<_202b61e6a_TestCoder>, jule::Ptr<_220b6427e_Package>&);
inline jule::Bool _202b62db1_readyTestingPackage(jule::Ptr<_202b61e6a_TestCoder>);
inline void _202b6308c_callTmReset(jule::Ptr<_202b61e6a_TestCoder>);
inline void _202b63268_callTmFailed(jule::Ptr<_202b61e6a_TestCoder>);
inline void _202b63444_callTmSkipped(jule::Ptr<_202b61e6a_TestCoder>);
inline void _202b63620_Serialize(jule::Ptr<_202b61e6a_TestCoder>);
struct _202b61e6a_TestCoder {
	jule::Ptr<_21eec33d0_StructIns> _field_t;
	jule::Ptr<_220b31636_Fn> _field_tmReset;
	jule::Ptr<_220b31636_Fn> _field_tmFailed;
	jule::Ptr<_220b31636_Fn> _field_tmSkipped;
	jule::Ptr<_202c052a5_ObjectCoder> _field_oc;
	

	_202b61e6a_TestCoder(void) = default;

	inline bool operator==(_202b61e6a_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_202b61e6a_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__202b64a83_toOut(jule::Str&, jule::Uintptr);
inline jule::Str static__202b64e6d_toLocal(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__202b65215_func(jule::Ptr<_220b31636_Fn>&);
inline jule::Str static__202b654ac_funcIns(jule::Ptr<_220b31a10_FnIns>&);
inline jule::Str static__202b65754_traitDecl(jule::Ptr<_220b376b4_Trait>);
inline jule::Str static__202b659eb_param(jule::Ptr<_220b31449_Param>&);
inline jule::Str static__202b65c93_structure(jule::Ptr<_21eec3006_Struct>&);
inline jule::Str static__202b6603a_structureIns(jule::Ptr<_21eec33d0_StructIns>&);
inline jule::Str static__202b662d2_field(jule::Ptr<_21ee92206_Field>&);
inline jule::Str static__202b66579_var(jule::Ptr<_220b8746c_Var>);
inline jule::Str static__202b66821_iterBegin(jule::Uintptr);
inline jule::Str static__202b66ab8_iterEnd(jule::Uintptr);
inline jule::Str static__202b66d60_iterNext(jule::Uintptr);
inline jule::Str static__202b67107_label(jule::Str&);
inline jule::Str static__202b6739e_matchEnd(jule::Uintptr);
inline jule::Str static__202b67646_caseBegin(jule::Uintptr);
struct _202b645bb_identCoder {
	

	_202b645bb_identCoder(void) = default;

	inline bool operator==(_202b645bb_identCoder _other) { return true; }

	inline bool operator!=(_202b645bb_identCoder _other) { return !this->operator==(_other); }


};
struct _202b96d5c_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	_202b96d5c_SerializationInfo(void) = default;

	inline bool operator==(_202b96d5c_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_202b96d5c_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _202b6c371_traitHash {
	jule::Ptr<_220b376b4_Trait> _field_t;
	jule::Ptr<_21eec33d0_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	_202b6c371_traitHash(void) = default;

	inline bool operator==(_202b6c371_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_202b6c371_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _202c0b0e1_Str(_202c0ad05_customType*);
inline jule::Bool _202c0b3ee_Equal(jule::Ptr<_202c0ad05_customType>, jule::Ptr<_220c0ae5d_TypeKind>);
struct _202c0ad05_customType {
	jule::Str _field_kind;
	

	_202c0ad05_customType(void) = default;

	inline bool operator==(_202c0ad05_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_202c0ad05_customType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_202c0b7a6_typeCoder> static__202c0bce5_new(jule::Ptr<_202c052a5_ObjectCoder>&);
inline jule::Str _202c0c103_toType(_202c0b7a6_typeCoder*, jule::Str);
inline jule::Str _202c0c411_prim(_202c0b7a6_typeCoder*, jule::Ptr<_220c10baa_Prim>);
inline jule::Str _202c0c71e_tuple(_202c0b7a6_typeCoder*, jule::Ptr<_220c15929_Tuple>);
inline jule::Str _202c0ca2c_asSptr(_202c0b7a6_typeCoder*, jule::Str);
inline jule::Str _202c0cd3a_asPtr(_202c0b7a6_typeCoder*, jule::Str);
inline jule::Str _202c0d148_sptr(_202c0b7a6_typeCoder*, jule::Ptr<_220c1443e_Sptr>);
inline jule::Str _202c0d456_ptr(_202c0b7a6_typeCoder*, jule::Ptr<_220c179a3_Ptr>);
inline jule::Str _202c0d764_enumDecl(_202c0b7a6_typeCoder*, jule::Ptr<_220b38374_Enum>);
inline jule::Str _202c0da72_typeEnumDecl(_202c0b7a6_typeCoder*, jule::Ptr<_220b38ae4_TypeEnum>);
inline jule::Str _202c0dd80_asSlice(_202c0b7a6_typeCoder*, jule::Ptr<_220c0ae5d_TypeKind>);
inline jule::Str _202c0e18d_slice(_202c0b7a6_typeCoder*, jule::Ptr<_220c14d9b_Slc>);
inline jule::Str _202c0e49b_mapType(_202c0b7a6_typeCoder*, jule::Ptr<_220c16452_Map>);
inline jule::Str _202c0e7a9_traitIdent(_202c0b7a6_typeCoder*, jule::Str);
inline jule::Str _202c0eab7_traitDecl(_202c0b7a6_typeCoder*, jule::Ptr<_220b376b4_Trait>);
inline jule::Str _202c0edc5_structure(_202c0b7a6_typeCoder*, jule::Ptr<_21eec3006_Struct>);
inline jule::Str _202c101d3_structureIns(_202c0b7a6_typeCoder*, jule::Ptr<_21eec33d0_StructIns>);
inline jule::Str _202c104e1_array(_202c0b7a6_typeCoder*, jule::Ptr<_220c17046_Arr>);
inline jule::Str _202c10b0c_paramIns(_202c0b7a6_typeCoder*, jule::Ptr<_220b31823_ParamIns>&);
inline void _202c11239_funcInsResult(_202c0b7a6_typeCoder*, jule::Str&, jule::Ptr<_220b31a10_FnIns>&);
inline jule::Str _202c11547_anonFunc(_202c0b7a6_typeCoder*, jule::Ptr<_220b31a10_FnIns>);
inline jule::Str _202c11855_func(_202c0b7a6_typeCoder*, jule::Ptr<_220b31a10_FnIns>);
inline jule::Str _202c11b63_kind(_202c0b7a6_typeCoder*, jule::Ptr<_220c0ae5d_TypeKind>);
struct _202c0b7a6_typeCoder {
	jule::Ptr<_202c052a5_ObjectCoder> _field_oc;
	jule::Ptr<_202c14094_resultCoder> _field_rc;
	

	_202c0b7a6_typeCoder(void) = default;

	inline bool operator==(_202c0b7a6_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_202c0b7a6_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_202c14094_resultCoder> static__202c145a0_new(jule::Ptr<_202c0b7a6_typeCoder>&);
inline void _202c148be_ptr(_202c14094_resultCoder*, jule::Str&, jule::Ptr<_220c179a3_Ptr>);
inline void _202c14bdd_sptr(_202c14094_resultCoder*, jule::Str&, jule::Ptr<_220c1443e_Sptr>);
inline void _202c1500c_mapType(_202c14094_resultCoder*, jule::Str&, jule::Ptr<_220c16452_Map>);
inline void _202c1532b_slice(_202c14094_resultCoder*, jule::Str&, jule::Ptr<_220c14d9b_Slc>);
inline void _202c1564a_arr(_202c14094_resultCoder*, jule::Str&, jule::Ptr<_220c17046_Arr>);
inline void _202c15969_func(_202c14094_resultCoder*, jule::Str&, jule::Ptr<_220b31a10_FnIns>);
inline void _202c15c88_tup(_202c14094_resultCoder*, jule::Str&, jule::Ptr<_220c15929_Tuple>);
inline void _202c160a7_codeMut(_202c14094_resultCoder*, jule::Str&, jule::Ptr<_220c0ae5d_TypeKind>&);
inline void _202c163c6_codeMut1(_202c14094_resultCoder*, jule::Str&, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Str _202c166a1_code(_202c14094_resultCoder*, jule::Ptr<_220c0ae5d_TypeKind>&);
struct _202c14094_resultCoder {
	jule::Ptr<_202c0b7a6_typeCoder> _field_tc;
	

	_202c14094_resultCoder(void) = default;

	inline bool operator==(_202c14094_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_202c14094_resultCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _20702ba06_Name(_20702b693_Flag*);
inline jule::Str _20702bb38_What(_20702b693_Flag*);
inline void _20702bc7b_Reset(_20702b693_Flag*);
inline jule::I32 _20702bdbe_Short(_20702b693_Flag*);
struct _20702b693_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	_20702b693_Flag(void) = default;

	inline bool operator==(_20702b693_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_20702b693_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _20702ee5a_Name(_2070303cd_Flag*);
inline jule::Str _2070306b9_What(_2070303cd_Flag*);
inline void _2070307eb_Reset(_2070303cd_Flag*);
inline jule::I32 _20703092d_Short(_2070303cd_Flag*);
struct _2070303cd_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	_2070303cd_Flag(void) = default;

	inline bool operator==(_2070303cd_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_2070303cd_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _207033777_Name(_207033bea_Flag*);
inline jule::Str _207033ed6_What(_207033bea_Flag*);
inline void _207034118_Reset(_207033bea_Flag*);
inline jule::I32 _20703424a_Short(_207033bea_Flag*);
struct _207033bea_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	_207033bea_Flag(void) = default;

	inline bool operator==(_207033bea_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_207033bea_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _2070370d8_Name(_20703755b_Flag*);
inline jule::Str _207037847_What(_20703755b_Flag*);
inline void _207037979_Reset(_20703755b_Flag*);
inline jule::I32 _207037aab_Short(_20703755b_Flag*);
struct _20703755b_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	_20703755b_Flag(void) = default;

	inline bool operator==(_20703755b_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_20703755b_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _20703a905_Name(_20703ad78_Flag*);
inline jule::Str _20703b164_What(_20703ad78_Flag*);
inline void _20703b296_Reset(_20703ad78_Flag*);
inline jule::I32 _20703b3c8_Short(_20703ad78_Flag*);
struct _20703ad78_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	_20703ad78_Flag(void) = default;

	inline bool operator==(_20703ad78_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_20703ad78_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_202c60431_FlagSet> static__202c6071c_New(void);
inline jule::Trait<_202c5d9b2_CommonFlag> _202c60ba1_FindFlag(_202c60431_FlagSet*, jule::Str);
inline jule::Trait<_202c5d9b2_CommonFlag> _202c60eae_FindFlagShort(_202c60431_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_202c5d9b2_CommonFlag>> _202c61223_Flags(_202c60431_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _202c61531_Parse(_202c60431_FlagSet*, jule::Slice<jule::Str>);
inline void _202c6170c_Reset(_202c60431_FlagSet*);
inline jule::Ptr<_20703ad78_Flag> _2070accc9_addFlagCommon(_202c60431_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_20703755b_Flag> _2070b66c8_addFlagCommon(_202c60431_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _2070aac50_AddVar(_202c60431_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _2070b4682_AddVar(_202c60431_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _202c60431_FlagSet {
	jule::Slice<jule::Trait<_202c5d9b2_CommonFlag>> _field_flags;
	

	_202c60431_FlagSet(void) = default;


};
inline jule::Str _21ee8cd5b_Str(_21eec33d0_StructIns*);
inline jule::Bool _21ee93dc8_Equal(jule::Ptr<_21eec33d0_StructIns>, jule::Ptr<_220c0ae5d_TypeKind>);
inline jule::Bool _21ee9502d_Same(_21eec33d0_StructIns*, jule::Ptr<_21eec33d0_StructIns>);
inline jule::Ptr<_220b31636_Fn> _21ee97382_FindMethod(_21eec33d0_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_21eec31e3_FieldIns> _21ee986a2_FindField(_21eec33d0_StructIns*, jule::Str);
inline jule::Ptr<_220b8746c_Var> _21ee4067c_FindStatic(_21eec33d0_StructIns*, jule::Str);
struct _21eec33d0_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_21eec3006_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_220c09731_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_21eec31e3_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_220b8746c_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_220b31636_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_220b329ab_ReferenceStack> _field_Refers;
	_21ee9984b_Operators _field_Operators;
	

	_21eec33d0_StructIns(void) = default;


};
inline jule::Ptr<_22158375d_ObjectDeadCode> static__221583bae_new(jule::Ptr<_221064c23_IR>&);
inline jule::Bool _206960836_isLive(jule::Ptr<_22158375d_ObjectDeadCode>, jule::Ptr<_220b376b4_Trait>&);
inline jule::Bool _20696586e_isLive(jule::Ptr<_22158375d_ObjectDeadCode>, jule::Ptr<_220b31a10_FnIns>&);
inline jule::Bool _20696d2b1_isLive(jule::Ptr<_22158375d_ObjectDeadCode>, jule::Ptr<_21eec33d0_StructIns>&);
inline jule::Bool _206973ddd_isLive(jule::Ptr<_22158375d_ObjectDeadCode>, jule::Ptr<_220b8746c_Var>&);
inline void _206960b99_pushLive(jule::Ptr<_22158375d_ObjectDeadCode>, jule::Ptr<_220b376b4_Trait>);
inline void _206966232_pushLive(jule::Ptr<_22158375d_ObjectDeadCode>, jule::Ptr<_220b31a10_FnIns>);
inline void _20696c58a_pushLive(jule::Ptr<_22158375d_ObjectDeadCode>, jule::Ptr<_21eec33d0_StructIns>);
inline void _206974251_pushLive(jule::Ptr<_22158375d_ObjectDeadCode>, jule::Ptr<_220b8746c_Var>);
inline void _2215b5d89_setReferencesAsLive(jule::Ptr<_22158375d_ObjectDeadCode>, jule::Ptr<_220b329ab_ReferenceStack>&);
inline void _2215b610e_inits(jule::Ptr<_22158375d_ObjectDeadCode>, jule::Ptr<_220b6427e_Package>&);
inline void _2215b6384_collectLivePackage(jule::Ptr<_22158375d_ObjectDeadCode>, jule::Ptr<_220b6427e_Package>&);
inline void _2215b6560_collectLive(jule::Ptr<_22158375d_ObjectDeadCode>);
inline void _2215b67d5_removeDeadGlobals(jule::Ptr<_22158375d_ObjectDeadCode>, jule::Slice<jule::Ptr<_220b8746c_Var>>&);
inline void _2215b6a5a_removeDeadFns(jule::Ptr<_22158375d_ObjectDeadCode>, jule::Slice<jule::Ptr<_220b31636_Fn>>&);
inline void _2215b6cd0_removeDeadStructs(jule::Ptr<_22158375d_ObjectDeadCode>, jule::Slice<jule::Ptr<_21eec3006_Struct>>&);
inline void _2215b7055_removeDeadTraits(jule::Ptr<_22158375d_ObjectDeadCode>, jule::Slice<jule::Ptr<_220b376b4_Trait>>&);
inline void _2215b72ca_removeDeadsFile(jule::Ptr<_22158375d_ObjectDeadCode>, jule::Ptr<_220bca1a2_SymbolTable>&);
inline void _2215b7550_removeDeadsPackage(jule::Ptr<_22158375d_ObjectDeadCode>, jule::Ptr<_220b6427e_Package>&);
inline void _2215b772b_removeDeads(jule::Ptr<_22158375d_ObjectDeadCode>);
inline void _2215b7907_elimanate(jule::Ptr<_22158375d_ObjectDeadCode>);
struct _22158375d_ObjectDeadCode {
	_221583494_liveTable _field_live;
	jule::Ptr<_221064c23_IR> _field_ir;
	

	_22158375d_ObjectDeadCode(void) = default;


};
inline jule::Ptr<_202c052a5_ObjectCoder> static__202b6b859_New(jule::Ptr<_221064c23_IR>&, _202b96d5c_SerializationInfo);
inline void _202b8bc42_write(jule::Ptr<_202c052a5_ObjectCoder>, jule::Str);
inline void _202bcae18_addIndent(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202bcb435_doneIndent(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202bce988_indent(jule::Ptr<_202c052a5_ObjectCoder>);
inline jule::I64 _202bd596c_findAnyType(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::I64 _202b91340_pushAnyType(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_220c0ae5d_TypeKind>&);
inline void _202b90570_pushResultIns(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_220b31a10_FnIns>&);
inline void _202bcd3d2_pushResult(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_220b31636_Fn>&);
inline jule::I64 _202b6c0c9_findTypeOffset(_202c052a5_ObjectCoder*, jule::Ptr<_220b376b4_Trait>, jule::Ptr<_220c0ae5d_TypeKind>);
inline void _202c0589e_locInfo(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_21d81d743_Token>&);
inline void _202c059d1_head(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c05b13_links(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c05c45_prepareStructure(_202c052a5_ObjectCoder*, jule::Ptr<_21eec3006_Struct>&);
inline void _202c05d77_prepareStructures(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c05ea9_iterPackages(jule::Ptr<_202c052a5_ObjectCoder>, jule::Fn<void(jule::Ptr<_220b6427e_Package>&)>);
inline void _202c060db_buildTraitMap(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c0621d_traitDecls(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c06350_structurePlainDecl(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_21eec3006_Struct>&);
inline void _202c06482_structurePlainDecls(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c065b4_fieldDecl(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_21eec31e3_FieldIns>&);
inline void _202c066e6_structureDestructor(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_21eec33d0_StructIns>&);
inline void _202c06828_structureDeriveDefsDecls(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_21eec33d0_StructIns>&);
inline void _202c0695a_structureOperatorEq(jule::Ptr<_202c052a5_ObjectCoder>, jule::Str&, jule::Ptr<_21eec33d0_StructIns>&);
inline void _202c06a8c_structureOperatorNotEq(jule::Ptr<_202c052a5_ObjectCoder>, jule::Str&, jule::Ptr<_21eec33d0_StructIns>&);
inline void _202c06bbe_structureOperator(jule::Ptr<_202c052a5_ObjectCoder>, jule::Str&, jule::Ptr<_220b31a10_FnIns>&, jule::Str);
inline void _202c06d01_structureOperators(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_21eec33d0_StructIns>&);
inline void _202c06e33_structureInsDecl(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_21eec33d0_StructIns>&);
inline void _202c07065_structureDecl(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_21eec3006_Struct>&);
inline void _202c07197_structureDecls(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c072c9_paramsDecls(jule::Ptr<_202c052a5_ObjectCoder>, jule::Slice<jule::Ptr<_220b31823_ParamIns>>&);
inline void _202c0740b_funcHead(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_220b31a10_FnIns>&, jule::Bool);
inline void _202c0753d_funcDecl(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_220b31636_Fn>&, jule::Bool);
inline void _202c07670_funcDecls(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c077a2_traitDataTypes(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c078d4_paramIns(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_220b31823_ParamIns>&);
inline void _202c07a16_paramsIns(jule::Ptr<_202c052a5_ObjectCoder>, jule::Slice<jule::Ptr<_220b31823_ParamIns>>&);
inline void _202c07b48_varInitExpr(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_220b8746c_Var>&, jule::Fn<void(void)>);
inline void _202c07c7a_var(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_220b8746c_Var>);
inline void _202c07dac_func(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_220b31636_Fn>&);
inline void _202c07ede_traitWrappers(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c08121_traitDatas(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c08253_globals(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c08385_decls(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c084b7_structureMethods(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_21eec33d0_StructIns>&);
inline void _202c085e9_structureDeriveDefs(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_21eec33d0_StructIns>&);
inline void _202c0872b_structureOstream(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_21eec33d0_StructIns>&);
inline void _202c088e6_structureIns(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_21eec33d0_StructIns>&);
inline void _202c08b6b_structure(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_21eec3006_Struct>&);
inline void _202c08d47_structures(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c09023_funcs(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c09298_pushInit(jule::Ptr<_202c052a5_ObjectCoder>, jule::Ptr<_220b6427e_Package>&);
inline void _202c09474_initCaller(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c09650_end(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c0982b_serializeHead(jule::Ptr<_202c052a5_ObjectCoder>);
inline void _202c09a07_Serialize(jule::Ptr<_202c052a5_ObjectCoder>);
struct _202c052a5_ObjectCoder {
	jule::Str _field_Obj;
	jule::Slice<jule::Str> _field_resultDecls;
	jule::Str _field_anyObj;
	jule::Ptr<_221064c23_IR> _field_ir;
	_202b96d5c_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_202b6c371_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>> _field_anyTypeMap;
	jule::Ptr<_202b51432_exprCoder> _field_ec;
	jule::Ptr<_202b4878c_scopeCoder> _field_sc;
	jule::Ptr<_202c0b7a6_typeCoder> _field_tc;
	jule::Ptr<_202b60595_deriveCoder> _field_dc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	

	_202c052a5_ObjectCoder(void) = default;


};
inline __jule_tuple_x_221064c23_IR__jule_tuple_s_21d4e511d_Log static__220cc5555_Build(jule::Str, jule::I64);
inline void _220cc606c_appendStructs(_221064c23_IR*, jule::Ptr<_220b6427e_Package>&, jule::Slice<jule::Ptr<_21eec3006_Struct>>&);
inline jule::Slice<jule::Ptr<_21eec3006_Struct>> _220cca4d3_GetAllStructures(_221064c23_IR*);
inline void _220ccbb22_appendGlobals(_221064c23_IR*, jule::Ptr<_220b6427e_Package>&, jule::Slice<jule::Ptr<_220b8746c_Var>>&);
inline jule::Slice<jule::Ptr<_220b8746c_Var>> _2210a7914_GetAllGlobals(_221064c23_IR*);
inline void _2210b8dcb_Order(_221064c23_IR*);
struct _221064c23_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_220b6427e_Package> _field_Main;
	jule::Slice<jule::Ptr<_220b61325_ImportInfo>> _field_Used;
	_220d07345_OrderedDefines _field_Ordered;
	

	_221064c23_IR(void) = default;


};
inline __jule_tuple_i64__jule_tuple_bool _20704e30e_parseInteger(_202c62b09_argParser*, jule::Str&, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _207057405_parseInteger(_202c62b09_argParser*, jule::Str&, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _202c63401_getData(_202c62b09_argParser*);
inline jule::VoidExceptional _202c63643_processFlag(_202c62b09_argParser*, jule::Trait<_202c5d9b2_CommonFlag>&);
inline jule::VoidExceptional _202c638b8_singleDash(_202c62b09_argParser*, jule::Str&);
inline jule::VoidExceptional _202c63b3d_doubleDash(_202c62b09_argParser*, jule::Str&);
inline jule::VoidExceptional _202c63d19_tryArg(_202c62b09_argParser*);
inline jule::VoidExceptional _202c63ee5_parse(_202c62b09_argParser*);
struct _202c62b09_argParser {
	_202c60431_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	

	_202c62b09_argParser(void) = default;


};
inline void _21c36c33c_Free(void*);
inline jule::Str _21c381a6b_BytePtrToStr(jule::U8*);
inline jule::I64 _21b5b45a7_GetLastErrno(void);
inline jule::I64 _21c39ed31_Stat(jule::U8*, struct stat*);
inline jule::I64 _21c3a021b_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _21c3a055c_Getcwd(jule::U8*, jule::U64);
inline DIR* _21c3a0a35_Opendir(jule::U8*);
inline struct dirent* _21c3a0ccc_Readdir(DIR*);
inline jule::I64 _21c3a1074_Closedir(DIR*);
inline jule::I64 _21c3a1904_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _21c3a1b9b_Rmdir(jule::U8*);
inline jule::I64 _21c3a1e43_Unlink(jule::U8*);
inline jule::I64 _21c3bc645_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _21c3bca30_Read(jule::I64, void*, jule::U64);
inline jule::I64 _21c3bcda4_Close(jule::I64);
inline jule::I64 _21c3bd28e_Write(jule::I64, void*, jule::U64);
inline void _21c3bd49d_Exit(jule::I64);
inline jule::I64 _21c461431_getLastOsError(void);
inline jule::Slice<jule::Str> _21c461e15_Args(void);
inline jule::Exceptional<jule::Str> _21c462388_WorkingDir(void);
inline jule::Exceptional<jule::Str> _21c46328a_getwd(void);
inline jule::Bool _21d30b077_IsLetter(jule::I32);
inline jule::Bool _21d3788a8_is16(jule::Slice<_21d376ce6_Range16>, jule::U16);
inline jule::Bool _21d378be9_is32(jule::Slice<_21d377269_Range32>, jule::U32);
inline jule::Bool _21d37948b_isExcludingLatin(jule::Ptr<_21d3776dc_RangeTable>, jule::I32);
inline jule::Bool _21d379733_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _21d439381_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _21d4396a0_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _21d439947_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _21d43a6e5_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _21d43aa36_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _21d43b075_RuneCountStr(jule::Str);
inline jule::Bool _21d43b31c_RuneStart(jule::U8);
inline jule::Slice<jule::U8> _21d45c409_Stobs(jule::Str&);
inline void _21d4629e7_PushToStrBuffer(jule::Str&, jule::Slice<jule::U8>);
inline jule::I64 _21d462ee2_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _21d463267_FindLastByteStr(jule::Str&, jule::U8);
inline jule::Str _21d4409e7_Repeat(jule::Str, jule::I64);
inline jule::Bool _21d443da2_hasPrefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _21d440134_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _21d4633cc_hasSuffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _21d463685_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _21d463a70_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _21d4643ab_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _21d464763_FindLast(jule::Str, jule::Str);
inline jule::I64 _21d46ac86_findRune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _21d46b5c2_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _21d46c3d6_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _21d46cb12_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _21d46ce53_Contains(jule::Str, jule::Str);
inline jule::Bool _21d46d926_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _21d46dc67_Count(jule::Str, jule::Str);
inline jule::Str _21d46e1eb_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _21d46b25e_trimLeft(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _21d4702a7_TrimLeft(jule::Str, jule::Str);
inline void _21d470560_trimRight(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _21d470be2_Trim(jule::Str, jule::Str);
inline jule::Str _21d471033_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _21c4bec20_Clean(jule::Str);
inline jule::Str _21c4de558_FromSlash(jule::Str);
inline jule::Str _21c4e1aee_Join(jule::Slice<jule::Str>);
inline jule::Str _21c4e30b7_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _21c4ab327_Abs(jule::Str);
inline jule::Str _21c4c73ba_Base(jule::Str);
inline jule::Str _21c4e565d_Dir(jule::Str);
inline jule::Str _21c49aa31_VolumeName(jule::Str);
inline jule::Bool _21d471374_IsPathSep(jule::U8);
inline jule::Bool _21d4714a6_IsAbs(jule::Str);
inline jule::I64 _21d4715d8_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _21d47171a_abs(jule::Str);
inline jule::Str _21d47184c_join(jule::Slice<jule::Str>);
inline jule::I64 _21b5dd9aa_getLastFsError(void);
inline jule::I64 _21d53ea2a_getLastProcessError(void);
inline jule::Slice<char*> _21d542be8_strSliceToCstrSlice(jule::Slice<jule::Str>);
inline jule::I64 _21d543149_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _21d543534_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _21d54414a_Exit(jule::I64);
inline jule::Str _21d544348_Executable(void);
inline jule::Bool _21d4d8045_IsStdHeaderPath(jule::Str);
inline jule::Bool _21d4d8265_IsValidHeaderExt(jule::Str);
inline jule::Bool _21d4d850c_IsValidCppExt(jule::Str);
inline jule::Str _21d4e555d_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _21d4e5849_argToStr(jule::Any);
inline jule::I64 _21d4e5ae1_findNextFmt(jule::Str);
inline jule::Str _21d4e5e76_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _21d4e6eee_IsTopDirective(jule::Str);
inline jule::Bool _21d4e842e_IsWindows(jule::Str);
inline jule::Bool _21d4e86d7_IsDarwin(jule::Str);
inline jule::Bool _21d4e897e_IsLinux(jule::Str);
inline jule::Bool _21d4e8c9d_IsI386(jule::Str);
inline jule::Bool _21d4e9045_IsAmd64(jule::Str);
inline jule::Bool _21d4e92dc_IsArm64(jule::Str);
inline jule::Bool _21d4e9584_IsUnix(jule::Str);
inline jule::Bool _21d4e9908_Is32Bit(jule::Str);
inline jule::Bool _21d4e9ba0_Is64Bit(jule::Str);
inline void _21d52e740_init(void);
inline jule::Bool _21d81de4c_IsUnaryOp(jule::Str);
inline jule::Bool _21d81e238_IsBinOp(jule::Str);
inline jule::Bool _21d81e7ee_IsStr(jule::Str);
inline jule::Bool _21d81ea96_IsRawStr(jule::Str);
inline jule::Bool _21d81ed3d_IsRune(jule::Str);
inline jule::Bool _21d820459_IsBool(jule::Str);
inline jule::Bool _21d820701_IsFloat(jule::Str);
inline jule::Bool _21d820998_IsNum(jule::Str);
inline jule::Bool _21d820ed7_IsIgnoreIdent(jule::Str);
inline jule::Bool _21d82127e_IsAnonIdent(jule::Str);
inline jule::Bool _21d8217bd_IsSpace(jule::I32);
inline jule::Bool _21d821c1e_IsLetter(jule::I32);
inline jule::Bool _21d82225d_IsDecimal(jule::U8);
inline jule::Bool _21d822505_IsBinary(jule::U8);
inline jule::Bool _21d82279c_IsOctal(jule::U8);
inline jule::Bool _21d822a44_IsHex(jule::U8);
inline jule::Bool _21d822cdb_IsAssign(jule::U64);
inline jule::Bool _21d823083_IsPostfixOp(jule::Str);
inline jule::Bool _21d82332a_IsAssignOp(jule::Str);
inline jule::Ptr<_21d823acd_File> _21d82510c_NewFileSet(jule::Str);
inline _21d4e511d_Log _21d8268a0_makeErr(jule::I64, jule::I64, jule::Ptr<_21d823acd_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _21d826c35_bytesHasPrefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _21d827076_floatFmtE(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _21d82740b_floatFmtP(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _21d82774c_floatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _21d827a8d_floatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _21d827dce_floatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _21d828330_floatNum(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _21d8285c7_commonNum(jule::Slice<jule::U8>&);
inline jule::Str _21d82886e_binaryNum(jule::Slice<jule::U8>&);
inline jule::Bool _21d828bb0_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _21d829001_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _21d829342_isFloatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _21d829683_isFloatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _21d8299c4_isFloatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _21d829e25_octalNum(jule::Slice<jule::U8>&);
inline jule::Str _21d82a1bc_hexNum(jule::Slice<jule::U8>&);
inline jule::Str _21d82a50d_hexEscape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _21d82a7a5_bigUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _21d82aa6e_littleUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _21d82ac28_hexByteEscape(jule::Slice<jule::U8>&);
inline jule::Str _21d82aeae_byteEscape(jule::Slice<jule::U8>&);
inline jule::Slice<_21d4e511d_Log> _21d8309a8_Lex(jule::Ptr<_21d823acd_File>, jule::I64);
inline jule::I64 _220ad3c6a_LeadingZeros64(jule::U64);
inline jule::I64 _220ad4ba0_TrailingZeros(jule::U64);
inline jule::I64 _220ad5596_TrailingZeros32(jule::U32);
inline jule::I64 _220ad583d_TrailingZeros64(jule::U64);
inline jule::I64 _220adae4d_Len32(jule::U32);
inline jule::I64 _220adb1e5_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _220adbda5_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _220add538_Mul64(jule::U64, jule::U64);
inline jule::U32 _220a0aca2_F32Bits(jule::F32);
inline jule::F32 _220a0b08d_F32FromBits(jule::U32);
inline jule::U64 _220a0b335_F64Bits(jule::F64);
inline jule::F64 _220a0b654_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _220a0db40_Frexp(jule::F64);
inline jule::F64 _220ae22d9_NaN(void);
inline jule::Bool _220ae241b_IsNaN(jule::F64);
inline jule::F64 _220ae254d_Inf(jule::I64);
inline jule::Bool _220ae2680_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _220ae27b2_normalize(jule::F64);
inline jule::F64 _220ae3681_Log(jule::F64);
inline jule::F64 _220ae3c9c_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _220ae7a4d_Modf(jule::F64);
inline jule::F64 _220ae7e8d_Log2(jule::F64);
inline jule::Str _220579557_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _220571bc0_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _22059d4d2_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _2206ed720_floatInfo&);
inline jule::Slice<jule::U8> _22061216c_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _220975755_decimalSlice, jule::I64, jule::U8);
inline void _2206cb09e_roundShortest(_220b2256c_decimal&, jule::U64, jule::I64, _2206ed720_floatInfo&);
inline jule::Slice<jule::U8> _2206ee743_fmtE(jule::Slice<jule::U8>, jule::Bool, _220975755_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _22077eebb_fmtF(jule::Slice<jule::U8>, jule::Bool, _220975755_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _2207a2373_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _2206ed720_floatInfo&);
inline jule::Slice<jule::U8> _220833558_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _2206ed720_floatInfo&);
inline jule::I64 _2208ec974_min(jule::I64, jule::I64);
inline jule::I64 _22093ac59_max(jule::I64, jule::I64);
inline jule::U8 _22093b089_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__220526889_ConvError _22098dcce_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _220702515_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _22055d052_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _2205b682a_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _2207de6bd_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _22070e588_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _22070e6ba_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _2207dd7aa_readFloat(jule::Str);
inline __jule_tuple_f64__jule_tuple_bool _220b1ecd9_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _220b1ee1b_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__220526889_ConvError _220b2004d_atofHex(jule::Str, _2206ed720_floatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__220526889_ConvError _220b20290_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__220526889_ConvError _220b203c2_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__220526889_ConvError _220b20504_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _220b20636_ParseFloat(jule::Str, jule::I64);
inline void _220b20a54_ryuFtoaFixed32(_220975755_decimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _220b20b86_ryuFtoaFixed64(_220975755_decimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _220b20dd9_formatDecimal(_220975755_decimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _220b2101b_ryuFtoaShortest(_220975755_decimalSlice&, jule::U64, jule::I64, _2206ed720_floatInfo&);
inline jule::I64 _220b2114d_mulByLog2Log10(jule::I64);
inline jule::I64 _220b21280_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _220b213b2_computeBounds(jule::U64, jule::I64, _2206ed720_floatInfo&);
inline void _220b21604_ryuDigits(_220975755_decimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _220b21736_ryuDigits32(_220975755_decimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _220b21868_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _220b2199a_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _220b21acc_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _220b21c0e_divmod1e9(jule::U64);
inline void _220b230c8_trim(_220b2256c_decimal&);
inline void _220b2320a_rightShift(_220b2256c_decimal&, jule::U64);
inline jule::Bool _220b2333c_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _220b2346e_leftShift(_220b2256c_decimal&, jule::U64);
inline jule::Bool _220b235a1_shouldRoundUp(_220b2256c_decimal&, jule::I64);
inline jule::Str _220b24261_FmtUint(jule::U64, jule::I64);
inline jule::Str _220b24393_FmtInt(jule::I64, jule::I64);
inline jule::Str _220b244c5_Itoa(jule::I64);
inline jule::Str _220b24607_small(jule::I64);
inline jule::Bool _220b24739_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _220b2486b_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _220177bc2_RealKindOf(jule::Str);
inline jule::I64 _220186b48_BitsizeOf(jule::Str);
inline jule::Str _22019d236_IntFromBits(jule::I64);
inline jule::Str _22018dca4_UintFromBits(jule::I64);
inline jule::Str _2201ce80b_FloatFromBits(jule::I64);
inline jule::Bool _2203d2091_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _2203db8a3_BitsizeOfFloat(jule::F64);
inline jule::I64 _220451ad3_BitsizeOfInt(jule::I64);
inline jule::I64 _2204d872a_BitsizeOfUint(jule::U64);
inline void _2204e1b84_UpdateTarget(void);
inline void _2204ec288_init(void);
inline jule::F64 _220b2499d_Min(jule::Str);
inline jule::F64 _220b24ad0_Max(jule::Str);
inline jule::Bool _2204d8b59_IsI8Compatible(jule::Str);
inline jule::Bool _220b24ddd_IsI16Compatible(jule::Str);
inline jule::Bool _220b25020_IsI32Compatible(jule::Str);
inline jule::Bool _220b25152_IsI64Compatible(jule::Str);
inline jule::Bool _220b25284_IsU8Compatible(jule::Str);
inline jule::Bool _220b253b6_IsU16Compatible(jule::Str);
inline jule::Bool _220b254e8_IsU32Compatible(jule::Str);
inline jule::Bool _220b2573a_IsU64Compatible(jule::Str);
inline jule::Bool _220b2586c_IsF32Compatible(jule::Str);
inline jule::Bool _220b2599e_IsF64Compatible(jule::Str);
inline jule::Bool _220b25ad1_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _220b25c13_IsI16Greater(jule::Str);
inline jule::Bool _220b25d45_IsI32Greater(jule::Str);
inline jule::Bool _220b25e77_IsI64Greater(jule::Str);
inline jule::Bool _220b260a9_IsU16Greater(jule::Str);
inline jule::Bool _220b2641c_IsU32Greater(jule::Str);
inline jule::Bool _220b2654e_IsU64Greater(jule::Str);
inline jule::Bool _220b26681_IsF32Greater(jule::Str);
inline jule::Bool _220b267b3_IsF64Greater(jule::Str);
inline jule::Bool _220b268e5_IsGreater(jule::Str, jule::Str);
inline jule::Bool _220b26d35_IsSigInt(jule::Str);
inline jule::Bool _220b26e67_IsUnsigInt(jule::Str);
inline jule::Bool _220b27099_IsInt(jule::Str);
inline jule::Bool _220b271cb_IsFloat(jule::Str);
inline jule::Bool _220b2730d_IsNum(jule::Str);
inline jule::Bool _220b27440_IsSigNum(jule::Str);
inline void _220b2aa5e_lshiftUnsig(_220074816_Const&, _220074816_Const&);
inline void _220b2ab91_rshiftUnsig(_220074816_Const&, _220074816_Const&);
inline jule::Bool _220ba09b3_IsAscii(jule::I32);
inline jule::I32 _220ba0b39_ToRune(jule::Slice<jule::U8>);
inline jule::Str _220bb7b73_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _220bb7e70_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _220bb8217_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _220bb8525_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _220bb8866_strEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _220cb4984_findFormatPrefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _220cba57d_getFormatRange(jule::I64&, jule::Slice<jule::U8>&);
inline void _220cba836_FmtByDefault(jule::Str&, jule::Any&);
inline void _220cbac10_applyFmtByDefault(jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline void _220cbb10b_applyFmt(jule::Slice<jule::U8>&, jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Str _220cbb419_Format(jule::Str&, jule::Slice<jule::Any>);
inline jule::Str _220cbbc33_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _220b3269d_parameterUsesGenerics(jule::Ptr<_220b31823_ParamIns>&, jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>>&);
inline jule::Ptr<_220c1033b_TypeSymbol> _220b33490_buildType(jule::Ptr<_21eea19a7_TypeDecl>);
inline jule::Ptr<_220bd1054_Value> _220b335c2_buildExpr(jule::Ptr<_21eea5ec8_Expr>);
inline jule::Ptr<_220c0a26a_TypeAlias> _220b33704_buildTypeAlias(jule::Ptr<_21eebcad3_TypeAliasDecl>);
inline jule::Ptr<_21ee92206_Field> _220b33836_buildField(jule::Ptr<_21eec1279_FieldDecl>);
inline jule::Slice<jule::Ptr<_21ee92206_Field>> _220b33968_buildFields(jule::Slice<jule::Ptr<_21eec1279_FieldDecl>>&);
inline jule::Ptr<_21eec3006_Struct> _220b33a9a_buildStruct(jule::Ptr<_21eec1a2c_StructDecl>);
inline jule::Ptr<_220b31449_Param> _220b33bcc_buildParam(jule::Ptr<_21eeb6e73_ParamDecl>);
inline jule::Slice<jule::Ptr<_220b31449_Param>> _220b33d0e_buildParams(jule::Slice<jule::Ptr<_21eeb6e73_ParamDecl>>&);
inline jule::Ptr<_220b3125c_RetType> _220b33e41_buildRetType(jule::Ptr<_21eea4aba_RetTypeDecl>);
inline jule::Ptr<_220b31636_Fn> _220b34073_buildFn(jule::Ptr<_21eeb8293_FnDecl>);
inline jule::Slice<jule::Ptr<_220b31636_Fn>> _220b341a5_buildMethods(jule::Slice<jule::Ptr<_21eeb8293_FnDecl>>&);
inline jule::Ptr<_220b376b4_Trait> _220b342d7_buildTrait(jule::Ptr<_21eec2137_TraitDecl>);
inline jule::Ptr<_220b38055_EnumItem> _220b34419_buildEnumItem(jule::Ptr<_21eebe442_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_220b38055_EnumItem>> _220b3454b_buildEnumItems(jule::Slice<jule::Ptr<_21eebe442_EnumItemDecl>>&);
inline jule::Ptr<_220b38374_Enum> _220b3467d_buildEnum(jule::Ptr<_21eebee6a_EnumDecl>);
inline jule::Ptr<_220b38907_TypeEnumItem> _220b349e1_buildTypeEnumItem(jule::Ptr<_21eec0971_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_220b38907_TypeEnumItem>> _220b34b23_buildTypeEnumItems(jule::Slice<jule::Ptr<_21eec0971_TypeEnumItemDecl>>&);
inline jule::Ptr<_220b38ae4_TypeEnum> _220b34c55_buildTypeEnum(jule::Ptr<_21eec107b_TypeEnumDecl>);
inline jule::Ptr<_220b8746c_Var> _220b34d87_buildVar(jule::Ptr<_21eeb9272_VarDecl>);
inline jule::Slice<jule::Ptr<_220b8746c_Var>> _220b34eb9_buildVars(jule::Slice<jule::Ptr<_21eeb9272_VarDecl>>);
inline jule::Ptr<_220b3cab5_Impl> _220b350eb_buildImpl(jule::Ptr<_21eec2742_Impl>);
inline jule::Bool _220b3be5a_matchConstraint(jule::Str&, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220b3c246_isBuiltinConstraint(jule::Str&);
inline jule::Ptr<_220b49682_scopeChecker> _220b3eb50_newScopeCheckerBase(jule::Ptr<_220b69471_Sema>&, jule::Ptr<_220b31a10_FnIns>);
inline jule::Ptr<_220b49682_scopeChecker> _220b3eed5_newScopeChecker(jule::Ptr<_220b69471_Sema>&, jule::Ptr<_220b31a10_FnIns>);
inline jule::Ptr<_220b483ea_scopeLabel> _220b40326_findLabelParent(jule::Str, jule::Ptr<_220b49682_scopeChecker>);
inline jule::Bool _220b406ab_modelIsGotoScope(jule::Any, jule::Ptr<_220b42b20_Scope>&);
inline jule::Bool _220b409ec_stmtIsGotoScope(jule::Any&, jule::Ptr<_220b42b20_Scope>&);
inline jule::I64 _220b40d3d_countMatchType(jule::Ptr<_220b4686b_Match>&, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Slice<jule::Ptr<_220bceecb_Data>> _220b410d5_getDatasFromTupleData(jule::Ptr<_220bceecb_Data>&);
inline jule::Bool _220b41921_checkMut(jule::Ptr<_220b69471_Sema>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>, jule::Ptr<_21d81d743_Token>);
inline jule::Bool _220b41da5_checkAssign(jule::Ptr<_220b69471_Sema>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>, jule::Ptr<_21d81d743_Token>);
inline jule::Bool _220b4214c_isValidAstStForNextSt(jule::Any&);
inline jule::Bool _220b423e4_isValidStForNextSt(jule::Any&);
inline jule::Bool _220b4268b_stmtIsDef(jule::Any&);
inline jule::Ptr<_220b8746c_Var> _220b5da3c_findVarInPackage(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_220c0a26a_TypeAlias> _220b5de6b_findTypeAliasInPackage(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_21eec3006_Struct> _220b5e356_findStructInPackage(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_220b31636_Fn> _220b5e7b8_findFnInPackage(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_220b376b4_Trait> _220b5eac6_findTraitInPackage(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>&, jule::Str);
inline jule::Ptr<_220b38374_Enum> _220b5ee17_findEnumInPackage(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>&, jule::Str);
inline jule::Ptr<_220b38ae4_TypeEnum> _220b60258_findTypeEnumInPackage(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>&, jule::Str);
inline jule::Any _220b60753_defByIdentPackage(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>&, jule::Str&, jule::Bool);
inline jule::Bool _220b66858_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _220b67639_isValidModelForRef(jule::Any&);
inline _21d4e511d_Log _220b67a57_compilerErr(jule::Ptr<_21d81d743_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _220b67d98_impIsLookupable(jule::Ptr<_220b61325_ImportInfo>&, jule::Str);
inline void _220b68195_appendRetVars(jule::Slice<jule::Ptr<_220b8746c_Var>>&, jule::Ptr<_220b31a10_FnIns>&);
inline void _220b6844d_appendParamVars(jule::Slice<jule::Ptr<_220b8746c_Var>>&, jule::Ptr<_220b31a10_FnIns>&);
inline void _220b68728_appendGenericTypeAliases(jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>&, jule::Ptr<_220b31a10_FnIns>&);
inline jule::Ptr<_220bca1a2_SymbolTable> _220b68a7a_findFile(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>&, jule::Ptr<_21d823acd_File>&);
inline void _220b68edc_pushSugggestion(_21d4e511d_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _220ba0dd1_traitHasReferenceReceiver(jule::Ptr<_220b376b4_Trait>&);
inline jule::Bool _220ba1013_floatAssignable(jule::Str, jule::Ptr<_220bceecb_Data>&);
inline jule::Bool _220bb78dc_sigAssignable(jule::Str, jule::Ptr<_220bceecb_Data>&);
inline jule::Bool _220bb7a1e_unsigAssignable(jule::Str, jule::Ptr<_220bceecb_Data>&);
inline jule::Bool _220bb8ab9_intAssignable(jule::Str, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220c0ae5d_TypeKind> _220bc9228_lenKind(void);
inline jule::Ptr<_21ee6d710_Directive> _220c0560b_findDirective(jule::Slice<jule::Ptr<_21ee6d710_Directive>>&, jule::Str);
inline jule::Any _220c05991_findBuiltinsImport(jule::Str, jule::Ptr<_220b61325_ImportInfo>);
inline void _220c05ba0_fitBitsize(jule::Ptr<_220bceecb_Data>&);
inline void _220c05e9c_makeStructLitAlloc(jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220b2b19c_StructLitExprModel>&);
inline jule::Ptr<_220b8746c_Var> _220c062dd_buildErrorVar(jule::Ptr<_220b42b20_Scope>&, jule::Ptr<_21eeaed17_FnCallExpr>&);
inline jule::Any _220c0662e_findBuiltinsSema(jule::Str, jule::Ptr<_220b69471_Sema>);
inline jule::Bool _220c068c6_isOkForShifting(jule::Ptr<_220bceecb_Data>&);
inline jule::Bool _220c06c7d_isInstancedStruct(jule::Ptr<_21eec33d0_StructIns>);
inline jule::Bool _220c070e1_isPtrArithmeticCompatible(jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&);
inline void _220c07333_applyCastKindModel(jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220c0ae5d_TypeKind>&);
inline void _220c075db_applyCastKind(jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Ptr<_220bceecb_Data> _220c077d9_buildVoidData(void);
inline jule::Str _220c07aa3_checkDataForIntegerIndexing(jule::Ptr<_220bceecb_Data>&);
inline void _220c07d6c_applyCastModelByEnum(jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220b38374_Enum>);
inline void _220c08125_castConstByType(jule::Str&, jule::Ptr<_220bceecb_Data>&);
inline void _220c08631_updateModelToGenericIns(jule::Any&, jule::Ptr<_220b31a10_FnIns>&);
inline jule::Bool _220c08873_pushSubIdentFromExpr(jule::Any, jule::Ptr<_21eea26bc_SubIdentTypeDecl>&);
inline jule::Bool _220c279c4_kindUsesGenerics(jule::Ptr<_220c0ae5d_TypeKind>&, jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>>&);
inline jule::Bool _220c27d59_hasDirective(jule::Slice<jule::Ptr<_21ee6d710_Directive>>&, jule::Str);
inline jule::Bool _220c28101_canGetPtr(jule::Ptr<_220bceecb_Data>&);
inline jule::Bool _220c28420_isValidForSptrType(jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220c286b7_isValidForRef(jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Bool _220c28981_isBuiltinStrConvertable(jule::Ptr<_220c0ae5d_TypeKind>&);
inline jule::Str _220c28c06_buildLinkPathByTokens(jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_220c10baa_Prim> _220c290ad_buildPrimType(jule::Str);
inline jule::Ptr<_21eec3006_Struct> _220c29355_getStructFromKind(jule::Ptr<_220c0ae5d_TypeKind>);
inline jule::Bool _220c295ec_isPrim(jule::Str);
inline void _220c298a5_applyImplicitCast(jule::Ptr<_220c0ae5d_TypeKind>&, jule::Ptr<_220bceecb_Data>&);
inline __jule_tuple_x_220bca1a2_SymbolTable__jule_tuple_s_21d4e511d_Log _220c2c91e_buildSymbols(jule::Ptr<_21ee6c665_Ast>&, jule::Trait<_220b5d6a7_Importer>&, jule::Ptr<_220b3522d_symbolBuilder>);
inline __jule_tuple_x_220b6427e_Package__jule_tuple_s_21d4e511d_Log _220c2cd4d_analyzePackage(jule::Slice<jule::Ptr<_21ee6c665_Ast>>&, jule::Trait<_220b5d6a7_Importer>&, jule::I64&);
inline __jule_tuple_x_220b6427e_Package__jule_tuple_s_21d4e511d_Log _220c2d238_AnalyzePackage(jule::Slice<jule::Ptr<_21ee6c665_Ast>>, jule::Trait<_220b5d6a7_Importer>, jule::I64);
inline jule::Ptr<_220b31a10_FnIns> _220c392ee_findBuiltinFn(jule::Str);
inline jule::Ptr<_220c0a26a_TypeAlias> _220c3ae38_findBuiltinTypeAlias(jule::Str);
inline jule::Any _220c40811_findBuiltinDef(jule::Str);
inline jule::Any _220c3e9b9_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _220c3eaeb_findBuiltinDefStdMem(jule::Str);
inline jule::Any _220c36a7c_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _220c36bae_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_220bceecb_Data> _220cbbd65_builtinCallerCommonPlain(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cbc11d_builtinCallerCommon(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cbc508_builtinCallerCommonMut(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cbc849_builtinCallerError(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&);
inline jule::Ptr<_220bceecb_Data> _220cbcc34_builtinCallerOut(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cbd11e_builtinCallerOutln(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cbd509_builtinCallerNew(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cbd8e4_builtinCallerPanic(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cbe010_builtinCallerMake(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cbe3ea_builtinCallerAppend(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cbe87e_callerCopySlice(jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cbed13_callerCopyStr(jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc01ed_builtinCallerCopy(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc053e_callerLenSlice(jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc0880_callerLenMap(jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc0bc1_callerLenArr(jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc1012_callerLenStr(jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc13ec_builtinCallerLen(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc173d_callerCapSlice(jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc1a7e_callerCapStr(jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc1e69_builtinCallerCap(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc23ed_callerDeleteMap(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc27d8_builtinCallerDelete(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc2bc3_builtinCallerClone(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc3289_builtinCallerAssert(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc35ec_builtinCallerStdMemSizeOf(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc3a1a_builtinCallerStdMemAlignOf(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc3e38_builtinCallerStdMemFree(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc4367_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc4785_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc4bc5_builtinCallerStdDebugOut(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Ptr<_220bceecb_Data> _220cc50b0_builtinCallerStdDebugOutln(jule::Ptr<_220bd1a49_Eval>&, jule::Ptr<_21eeaed17_FnCallExpr>&, jule::Ptr<_220bceecb_Data>&);
inline jule::Bool _220d0089e_FindModuleFile(jule::Slice<jule::Ptr<_21b6d2351_DirEntry>>&);
inline jule::Str _220d00a47_FindModuleFileDeep(jule::Str);
inline jule::Slice<_21d4e511d_Log> _220d00cde_CheckModuleFile(jule::Str);
inline jule::Ptr<_22143b0a5_FileInfo> _22143dbac_ParseFile(jule::Ptr<_21d823acd_File>);
inline __jule_tuple_x_21ee6c665_Ast__jule_tuple_s_21d4e511d_Log _22148560a_parseFileset(jule::Ptr<_21d823acd_File>);
inline jule::Ptr<_21eeb679c_ScopeTree> _221486067_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _221486320_isSt(jule::Ptr<_21d81d743_Token>, jule::Ptr<_21d81d743_Token>);
inline jule::Bool _221486661_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::I64&);
inline __jule_tuple_int__jule_tuple_bool _2214869e6_nextStPos(jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::I64);
inline __jule_tuple_sx_21d81d743_Token__jule_tuple_bool _221486d37_skipSt(jule::I64&, jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Slice<jule::Ptr<_221487134_stmt>> _2214874ca_splitStmts(jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Bool _22149dbb7_isTypeOp(jule::Str&);
inline jule::Bool _22149dea3_isTypeRange(jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Slice<jule::Ptr<_21d81d743_Token>> _22149e24a_getBlockExpr(jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline __jule_tuple_sx_21d81d743_Token__jule_tuple_sx_21d81d743_Token _22149e5d0_splitDelim(jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::U64);
inline jule::I64 _22149e877_findLowestPrecOp(jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Ptr<_21eea7b89_IdentExpr> _22149eb1e_buildIdentExpr(jule::Ptr<_21d81d743_Token>&);
inline __jule_tuple_sx_21d81d743_Token__jule_tuple_int _22149edb6_getRangeExprTokens(jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Bool _2214a0b20_checkAssignTokens(jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline _21d4e511d_Log _2214a1d41_makeErr(jule::I64, jule::I64, jule::Ptr<_21d823acd_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_21d81d743_Token>> _2214a2319_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline __jule_tuple_sx_21d81d743_Token__jule_tuple_sx_21d81d743_Token _2214a25b1_rangeLast(jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline __jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log _2214a299b_partsKind(jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::Str, jule::Bool);
inline __jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log _2214a2d86_parts(jule::Slice<jule::Ptr<_21d81d743_Token>>&, jule::U64, jule::Bool);
inline jule::Str _2214a312d_getCloseKindOfBrace(jule::Str);
inline _21d4e511d_Log _2214a3518_compilerErr(jule::Ptr<_21d81d743_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _2214a3947_pushSuggestion(_21d4e511d_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _2214a3bde_tokstoa(jule::Slice<jule::Ptr<_21d81d743_Token>>&);
inline jule::Bool _2214b3c54_isPub(jule::Str&);
inline jule::Ptr<_21eea19a7_TypeDecl> _2214b4628_buildVoidType(void);
inline jule::Ptr<_21eea19a7_TypeDecl> _2214b4837_buildPrimType(jule::Ptr<_21d81d743_Token>);
inline __jule_tuple_bool__jule_tuple_bool _220cdaed8_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _21ec71cb6_checkArch(jule::Str);
inline jule::Bool _21ec71de8_isPassFileAnnotation(jule::Str);
inline void _220cde8c1_setOsVars(jule::Slice<jule::Str>&);
inline void _220cdeb24_setArchVars(jule::Slice<jule::Str>&);
inline void _220cdedcc_initVars(jule::Slice<jule::Str>&, _220cde5b3_CompileInfo&);
inline jule::Slice<jule::U8> _220d099da_readBuff(jule::Str);
inline _21d4e511d_Log _220dd0a17_flatCompilerErr(jule::Str);
inline void _2210cb839_pushPasses(jule::Ptr<_220b6427e_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _2210de86e_getAllUniquePasses(jule::Ptr<_220b6427e_Package>&, jule::Slice<jule::Ptr<_220b61325_ImportInfo>>);
inline _220cde5b3_CompileInfo _2210ed6d5_buildCompileInfo(void);
inline void _2215b7bc1_EliminateDefines(jule::Ptr<_221064c23_IR>&);
inline jule::Ptr<_21ee6d710_Directive> _2215b8056_findDirective(jule::Slice<jule::Ptr<_21ee6d710_Directive>>&, jule::Str);
inline jule::Bool _2215b8397_hasDirective(jule::Slice<jule::Ptr<_21ee6d710_Directive>>&, jule::Str);
inline void _2215bbee4_eliminateDeadCodeOfScope(jule::Ptr<_220b42b20_Scope>);
inline void _2215bc27a_eliminateScopeFunctions(jule::Slice<jule::Ptr<_220b31636_Fn>>&);
inline void _2215bc4bc_eliminateFunctionsScopePackage(jule::Ptr<_220b6427e_Package>&);
inline void _2215bc764_eliminateScopePackage(jule::Ptr<_220b6427e_Package>&);
inline void _2215bc973_EliminateScopes(jule::Ptr<_221064c23_IR>&);
inline jule::Bool _21da09a61_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _21da29ee3_isConstantValidConditionalCase(jule::Ptr<_220b4301b_If>&);
inline jule::Bool _21da37b38_isUnreachableExpr(jule::Any&);
inline jule::Bool _21db912d0_isConstantValidMatchCase(jule::Ptr<_220b473b6_Case>&);
inline jule::Bool _21db9714e_isUnreachableConditionalCase(jule::Ptr<_220b4301b_If>&);
inline jule::Bool _21db98150_isUnreachableMatchCase(jule::Ptr<_220b473b6_Case>&);
inline __jule_tuple_bool__jule_tuple_u64 _21e145da0_checkForBitShiftOpt(jule::Ptr<_22001ab86_OperandExprModel>&, jule::Ptr<_22001ab86_OperandExprModel>&);
inline void _21e14d957_PushOptLevel(jule::I64);
inline void _221549d40_detectEnabled(void);
inline void _2215ca277_Throw(jule::Str);
inline jule::U64 _202c00426_unix(void);
inline jule::U64 _202c00734_unixYearToSeconds(jule::U64, jule::Bool&);
inline jule::U64 _202c00ab9_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _202b4dce2_isCopyOptimizable(jule::Ptr<_220bceecb_Data>&);
inline jule::Bool _202b4e177_isIterCopyOptimizable(jule::Ptr<_220bceecb_Data>&, jule::Ptr<_220b8746c_Var>&);
inline jule::Str _202b5d142_decomposeCommonEsq(jule::U8);
inline jule::Str _202b5d42d_sbtoa(jule::U8);
inline jule::Str _202b5d6c5_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _202b5d9e4_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _202b5dd02_ftoa(jule::F64, jule::I64);
inline jule::Str _202b5e099_itoa(jule::I64);
inline jule::Str _202b5e341_utoa(jule::U64);
inline jule::Bool _202b5e6e8_isForwarded(jule::Ptr<_220b42b20_Scope>&);
inline jule::Bool _202b5e9b2_isBuiltinCallHasDebuginf(jule::Ptr<_220b2b763_FnCallExprModel>&);
inline jule::Bool _202b5ebe3_isExprComesFromBind(jule::Ptr<_220bceecb_Data>&);
inline jule::Bool _202b5ee8a_isAny(jule::Ptr<_220c0ae5d_TypeKind>&);
inline void _202c09d6a_iterFiles(jule::Ptr<_220b6427e_Package>&, jule::Fn<void(jule::Ptr<_220bca1a2_SymbolTable>&)>);
inline jule::Str _202c0a156_concatAllParts(jule::Slice<jule::Ptr<_21d81d743_Token>>);
inline jule::Ptr<_21ee6d710_Directive> _202c18087_findDirective(jule::Slice<jule::Ptr<_21ee6d710_Directive>>&, jule::Str);
inline jule::Bool _202c1841c_hasDirective(jule::Slice<jule::Ptr<_21ee6d710_Directive>>&, jule::Str);
inline jule::Bool _202c186b4_shouldInitialized(jule::Ptr<_220c0ae5d_TypeKind>&);
inline void _21d4b9169_printErrorMessage(jule::Str);
inline void _21d4c2716_help(jule::Slice<jule::Str>&);
inline void _21d4b6386_version(jule::Slice<jule::Str>&);
inline void _21d4b64b8_toolDistos(void);
inline void _21d4ae280_toolDistarch(void);
inline void _21d4ae3b2_tool(jule::Slice<jule::Str>&);
inline void _21d4c40ca_julenv(jule::Slice<jule::Str>&);
inline void _21d4c420c_mod(jule::Slice<jule::Str>&);
inline jule::Bool _21d4d4d22_processCommand(jule::Slice<jule::Str>&);
inline void _21d4d4e54_showInfo(void);
void entry_point(void);
inline void _202c2dee3_init(void);
inline jule::Ptr<_21b6092ab_File> _202c325ce_openOutput(jule::Str&);
inline void _202c3d71c_clearObjects(void);
inline void _202c2c222_compileIr(jule::Str, jule::Str);
inline jule::Bool _202c4d232_isCppSourceFile(jule::Str);
inline void _202c52324_pushCompCmdClang(jule::Str&);
inline void _202c2a4d9_pushCompCmdGcc(jule::Str&);
inline __jule_tuple_str__jule_tuple_str _202c30467_genCompileCmd(jule::Str, jule::Ptr<_221064c23_IR>&);
inline jule::Str _202c29a6b_getCompilePath(void);
inline void _202c3953c_applyTargetIndependentOptimizations(jule::Ptr<_221064c23_IR>&);
inline void _202c29494_checkCompilerFlag(void);
inline void _202c2d278_checkTargetArch(jule::Str);
inline void _202c2d3aa_checkTargetOs(jule::Str);
inline void _202c64215_checkTargetFlag(jule::Str&);
inline void _202c64347_checkOptFlag(jule::Str&);
inline void _202c646aa_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _202c647dc_checkFlags(jule::Slice<jule::Str>&);
inline void _202c6491e_setupSemaFlags(jule::I64&);
inline jule::Ptr<_221064c23_IR> _202c64a51_buildIr(jule::Slice<jule::Str>&);
inline void _202c64b83_compileCommand(jule::Slice<jule::Str>&);


struct _220b5d6a7_ImporterMptrData {
	void(*_220b5c5b8_SetModPath)(jule::Trait<_220b5d6a7_Importer>, jule::Str);
	jule::Str(*_220b5c81b_GetModPath)(jule::Trait<_220b5d6a7_Importer>);
	jule::Str(*_220b5cb29_ModById)(jule::Trait<_220b5d6a7_Importer>, jule::I64);
	jule::Ptr<_220b61325_ImportInfo>(*_220b5ce37_GetImport)(jule::Trait<_220b5d6a7_Importer>, jule::Str);
	__jule_tuple_sx_21ee6c665_Ast__jule_tuple_s_21d4e511d_Log(*_220b5d2de_ImportPackage)(jule::Trait<_220b5d6a7_Importer>, jule::Str, jule::Bool);
	void(*_220b5d564_Imported)(jule::Trait<_220b5d6a7_Importer>, jule::Ptr<_220b61325_ImportInfo>);
};

struct _220c0aa2e_KindMptrData {
	jule::Str(*_220c0a5cd_Str)(jule::Trait<_220c0aa2e_Kind>);
	jule::Bool(*_220c0a8db_Equal)(jule::Trait<_220c0aa2e_Kind>, jule::Ptr<_220c0ae5d_TypeKind>);
};

struct _220c2bc3c_LookupMptrData {
	jule::Ptr<_220b61325_ImportInfo>(*_220c29de4_FindPackage)(jule::Trait<_220c2bc3c_Lookup>, jule::Str);
	jule::Ptr<_220b61325_ImportInfo>(*_220c2a202_SelectPackage)(jule::Trait<_220c2bc3c_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)>);
	jule::Ptr<_220b8746c_Var>(*_220c2a5a9_FindVar)(jule::Trait<_220c2bc3c_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_220c0a26a_TypeAlias>(*_220c2a961_FindTypeAlias)(jule::Trait<_220c2bc3c_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_21eec3006_Struct>(*_220c2ad18_FindStruct)(jule::Trait<_220c2bc3c_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_220b31636_Fn>(*_220c2b1c0_FindFn)(jule::Trait<_220c2bc3c_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_220b376b4_Trait>(*_220c2b4cd_FindTrait)(jule::Trait<_220c2bc3c_Lookup>, jule::Str);
	jule::Ptr<_220b38374_Enum>(*_220c2b7db_FindEnum)(jule::Trait<_220c2bc3c_Lookup>, jule::Str);
	jule::Ptr<_220b38ae4_TypeEnum>(*_220c2bae9_FindTypeEnum)(jule::Trait<_220c2bc3c_Lookup>, jule::Str);
};

struct _202c5d9b2_CommonFlagMptrData {
	jule::Str(*_202c28e77_Name)(jule::Trait<_202c5d9b2_CommonFlag>);
	jule::I32(*_202c290a9_Short)(jule::Trait<_202c5d9b2_CommonFlag>);
	jule::Str(*_202c291db_What)(jule::Trait<_202c5d9b2_CommonFlag>);
	void(*_202c29362_Reset)(jule::Trait<_202c5d9b2_CommonFlag>);
};



inline void _220b5c5b8_SetModPath_0(jule::Trait<_220b5d6a7_Importer> _self_, jule::Str _1729_path) {
	_220e48909_SetModPath(_self_.safe_ptr<_2213ab795_JuleImporter>(), _1729_path);
}
inline jule::Str _220b5c81b_GetModPath_0(jule::Trait<_220b5d6a7_Importer> _self_) {
	return _220e5a07a_GetModPath(_self_.safe_ptr<_2213ab795_JuleImporter>());
}
inline jule::Str _220b5cb29_ModById_0(jule::Trait<_220b5d6a7_Importer> _self_, jule::I64 _2522_id) {
	return _220e866c2_ModById(_self_.safe_ptr<_2213ab795_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_220b61325_ImportInfo> _220b5ce37_GetImport_0(jule::Trait<_220b5d6a7_Importer> _self_, jule::Str _3128_path) {
	return _220e8ace2_GetImport(_self_.safe_ptr<_2213ab795_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_21ee6c665_Ast__jule_tuple_s_21d4e511d_Log _220b5d2de_ImportPackage_0(jule::Trait<_220b5d6a7_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _22104dbeb_ImportPackage(_self_.safe_ptr<_2213ab795_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _220b5d564_Imported_0(jule::Trait<_220b5d6a7_Importer> _self_, jule::Ptr<_220b61325_ImportInfo> _4131__0) {
	_22105c974_Imported(_self_.safe_ptr<_2213ab795_JuleImporter>(), _4131__0);
}
inline jule::Str _220c0a5cd_Str_0(jule::Trait<_220c0aa2e_Kind> _self_) {
	return _21ee8cd5b_Str(_self_.safe_ptr<_21eec33d0_StructIns>());
}
inline jule::Bool _220c0a8db_Equal_0(jule::Trait<_220c0aa2e_Kind> _self_, jule::Ptr<_220c0ae5d_TypeKind> _5621_other) {
	return _21ee93dc8_Equal(_self_.data.as<_21eec33d0_StructIns>(), _5621_other);
}
inline jule::Str _220c0a5cd_Str_1(jule::Trait<_220c0aa2e_Kind> _self_) {
	return _22000e7d4_Str(_self_.safe_ptr<_220b31a10_FnIns>());
}
inline jule::Bool _220c0a8db_Equal_1(jule::Trait<_220c0aa2e_Kind> _self_, jule::Ptr<_220c0ae5d_TypeKind> _5621_other) {
	return _220b31bec_Equal(_self_.data.as<_220b31a10_FnIns>(), _5621_other);
}
inline jule::Str _220c0a5cd_Str_2(jule::Trait<_220c0aa2e_Kind> _self_) {
	return _220b378a1_Str(_self_.safe_ptr<_220b376b4_Trait>());
}
inline jule::Bool _220c0a8db_Equal_2(jule::Trait<_220c0aa2e_Kind> _self_, jule::Ptr<_220c0ae5d_TypeKind> _5621_other) {
	return _220b379d3_Equal(_self_.data.as<_220b376b4_Trait>(), _5621_other);
}
inline jule::Str _220c0a5cd_Str_3(jule::Trait<_220c0aa2e_Kind> _self_) {
	return _220b38561_Str(_self_.safe_ptr<_220b38374_Enum>());
}
inline jule::Bool _220c0a8db_Equal_3(jule::Trait<_220c0aa2e_Kind> _self_, jule::Ptr<_220c0ae5d_TypeKind> _5621_other) {
	return _220b38693_Equal(_self_.data.as<_220b38374_Enum>(), _5621_other);
}
inline jule::Str _220c0a5cd_Str_4(jule::Trait<_220c0aa2e_Kind> _self_) {
	return _220b38cd1_Str(_self_.safe_ptr<_220b38ae4_TypeEnum>());
}
inline jule::Bool _220c0a8db_Equal_4(jule::Trait<_220c0aa2e_Kind> _self_, jule::Ptr<_220c0ae5d_TypeKind> _5621_other) {
	return _220b38e13_Equal(_self_.data.as<_220b38ae4_TypeEnum>(), _5621_other);
}
inline jule::Str _220c0a5cd_Str_5(jule::Trait<_220c0aa2e_Kind> _self_) {
	return _220c0b359_Str(_self_.safe_ptr<_220c0ae5d_TypeKind>());
}
inline jule::Bool _220c0a8db_Equal_5(jule::Trait<_220c0aa2e_Kind> _self_, jule::Ptr<_220c0ae5d_TypeKind> _5621_other) {
	return _220c0b667_Equal(_self_.data.as<_220c0ae5d_TypeKind>(), _5621_other);
}
inline jule::Str _220c0a5cd_Str_6(jule::Trait<_220c0aa2e_Kind> _self_) {
	return _220c1101d_Str(_self_.safe_ptr<_220c10baa_Prim>());
}
inline jule::Bool _220c0a8db_Equal_6(jule::Trait<_220c0aa2e_Kind> _self_, jule::Ptr<_220c0ae5d_TypeKind> _5621_other) {
	return _220c1132b_Equal(_self_.data.as<_220c10baa_Prim>(), _5621_other);
}
inline jule::Str _220c0a5cd_Str_7(jule::Trait<_220c0aa2e_Kind> _self_) {
	return _220c147a2_Str(_self_.safe_ptr<_220c1443e_Sptr>());
}
inline jule::Bool _220c0a8db_Equal_7(jule::Trait<_220c0aa2e_Kind> _self_, jule::Ptr<_220c0ae5d_TypeKind> _5621_other) {
	return _220c14ab0_Equal(_self_.data.as<_220c1443e_Sptr>(), _5621_other);
}
inline jule::Str _220c0a5cd_Str_8(jule::Trait<_220c0aa2e_Kind> _self_) {
	return _220c153a7_Str(_self_.safe_ptr<_220c14d9b_Slc>());
}
inline jule::Bool _220c0a8db_Equal_8(jule::Trait<_220c0aa2e_Kind> _self_, jule::Ptr<_220c0ae5d_TypeKind> _5621_other) {
	return _220c156b5_Equal(_self_.data.as<_220c14d9b_Slc>(), _5621_other);
}
inline jule::Str _220c0a5cd_Str_9(jule::Trait<_220c0aa2e_Kind> _self_) {
	return _220c15c8c_Str(_self_.safe_ptr<_220c15929_Tuple>());
}
inline jule::Bool _220c0a8db_Equal_9(jule::Trait<_220c0aa2e_Kind> _self_, jule::Ptr<_220c0ae5d_TypeKind> _5621_other) {
	return _220c1609a_Equal(_self_.data.as<_220c15929_Tuple>(), _5621_other);
}
inline jule::Str _220c0a5cd_Str_10(jule::Trait<_220c0aa2e_Kind> _self_) {
	return _220c167b5_Str(_self_.safe_ptr<_220c16452_Map>());
}
inline jule::Bool _220c0a8db_Equal_10(jule::Trait<_220c0aa2e_Kind> _self_, jule::Ptr<_220c0ae5d_TypeKind> _5621_other) {
	return _220c16ac3_Equal(_self_.data.as<_220c16452_Map>(), _5621_other);
}
inline jule::Str _220c0a5cd_Str_11(jule::Trait<_220c0aa2e_Kind> _self_) {
	return _220c173a9_Str(_self_.safe_ptr<_220c17046_Arr>());
}
inline jule::Bool _220c0a8db_Equal_11(jule::Trait<_220c0aa2e_Kind> _self_, jule::Ptr<_220c0ae5d_TypeKind> _5621_other) {
	return _220c176b7_Equal(_self_.data.as<_220c17046_Arr>(), _5621_other);
}
inline jule::Str _220c0a5cd_Str_12(jule::Trait<_220c0aa2e_Kind> _self_) {
	return _220c17d16_Str(_self_.safe_ptr<_220c179a3_Ptr>());
}
inline jule::Bool _220c0a8db_Equal_12(jule::Trait<_220c0aa2e_Kind> _self_, jule::Ptr<_220c0ae5d_TypeKind> _5621_other) {
	return _220c18124_Equal(_self_.data.as<_220c179a3_Ptr>(), _5621_other);
}
inline jule::Str _220c0a5cd_Str_13(jule::Trait<_220c0aa2e_Kind> _self_) {
	return _202c0b0e1_Str(_self_.safe_ptr<_202c0ad05_customType>());
}
inline jule::Bool _220c0a8db_Equal_13(jule::Trait<_220c0aa2e_Kind> _self_, jule::Ptr<_220c0ae5d_TypeKind> _5621_other) {
	return _202c0b3ee_Equal(_self_.data.as<_202c0ad05_customType>(), _5621_other);
}
inline jule::Ptr<_220b61325_ImportInfo> _220c29de4_FindPackage_0(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _930_ident) {
	return _220b49b16_FindPackage(_self_.safe_ptr<_220b49682_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_220b61325_ImportInfo> _220c2a202_SelectPackage_0(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)> _1332_selector) {
	return _220b49e24_SelectPackage(_self_.safe_ptr<_220b49682_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_220b8746c_Var> _220c2a5a9_FindVar_0(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _220b4a2cb_FindVar(_self_.safe_ptr<_220b49682_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_220c0a26a_TypeAlias> _220c2a961_FindTypeAlias_0(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _220b4a683_FindTypeAlias(_self_.safe_ptr<_220b49682_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_21eec3006_Struct> _220c2ad18_FindStruct_0(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _220b4aa3a_FindStruct(_self_.safe_ptr<_220b49682_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_220b31636_Fn> _220c2b1c0_FindFn_0(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _220b4ade2_FindFn(_self_.safe_ptr<_220b49682_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_220b376b4_Trait> _220c2b4cd_FindTrait_0(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _3328_ident) {
	return _220b4b200_FindTrait(_self_.safe_ptr<_220b49682_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_220b38374_Enum> _220c2b7db_FindEnum_0(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _3727_ident) {
	return _220b4b50d_FindEnum(_self_.safe_ptr<_220b49682_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_220b38ae4_TypeEnum> _220c2bae9_FindTypeEnum_0(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _4131_ident) {
	return _220b4b81b_FindTypeEnum(_self_.safe_ptr<_220b49682_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_220b61325_ImportInfo> _220c29de4_FindPackage_1(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _930_ident) {
	return _220b61842_FindPackage(_self_.safe_ptr<_220b61325_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_220b61325_ImportInfo> _220c2a202_SelectPackage_1(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)> _1332_selector) {
	return _220b61b50_SelectPackage(_self_.safe_ptr<_220b61325_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_220b8746c_Var> _220c2a5a9_FindVar_1(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _220b62007_FindVar(_self_.safe_ptr<_220b61325_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_220c0a26a_TypeAlias> _220c2a961_FindTypeAlias_1(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _220b623ae_FindTypeAlias(_self_.safe_ptr<_220b61325_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_21eec3006_Struct> _220c2ad18_FindStruct_1(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _220b62766_FindStruct(_self_.safe_ptr<_220b61325_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_220b31636_Fn> _220c2b1c0_FindFn_1(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _220b62b1d_FindFn(_self_.safe_ptr<_220b61325_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_220b376b4_Trait> _220c2b4cd_FindTrait_1(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _3328_ident) {
	return _220b62e2b_FindTrait(_self_.safe_ptr<_220b61325_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_220b38374_Enum> _220c2b7db_FindEnum_1(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _3727_ident) {
	return _220b63239_FindEnum(_self_.safe_ptr<_220b61325_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_220b38ae4_TypeEnum> _220c2bae9_FindTypeEnum_1(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _4131_ident) {
	return _220b63547_FindTypeEnum(_self_.safe_ptr<_220b61325_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_220b61325_ImportInfo> _220c29de4_FindPackage_2(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _930_ident) {
	return _220b64757_FindPackage(_self_.safe_ptr<_220b6427e_Package>(), _930_ident);
}
inline jule::Ptr<_220b61325_ImportInfo> _220c2a202_SelectPackage_2(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)> _1332_selector) {
	return _220b64a65_SelectPackage(_self_.safe_ptr<_220b6427e_Package>(), _1332_selector);
}
inline jule::Ptr<_220b8746c_Var> _220c2a5a9_FindVar_2(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _220b64e1c_FindVar(_self_.safe_ptr<_220b6427e_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_220c0a26a_TypeAlias> _220c2a961_FindTypeAlias_2(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _220b652c4_FindTypeAlias(_self_.safe_ptr<_220b6427e_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_21eec3006_Struct> _220c2ad18_FindStruct_2(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _220b6567b_FindStruct(_self_.safe_ptr<_220b6427e_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_220b31636_Fn> _220c2b1c0_FindFn_2(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _220b65a33_FindFn(_self_.safe_ptr<_220b6427e_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_220b376b4_Trait> _220c2b4cd_FindTrait_2(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _3328_ident) {
	return _220b65d41_FindTrait(_self_.safe_ptr<_220b6427e_Package>(), _3328_ident);
}
inline jule::Ptr<_220b38374_Enum> _220c2b7db_FindEnum_2(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _3727_ident) {
	return _220b6614e_FindEnum(_self_.safe_ptr<_220b6427e_Package>(), _3727_ident);
}
inline jule::Ptr<_220b38ae4_TypeEnum> _220c2bae9_FindTypeEnum_2(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _4131_ident) {
	return _220b6645c_FindTypeEnum(_self_.safe_ptr<_220b6427e_Package>(), _4131_ident);
}
inline jule::Ptr<_220b61325_ImportInfo> _220c29de4_FindPackage_3(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _930_ident) {
	return _220b6998d_FindPackage(_self_.safe_ptr<_220b69471_Sema>(), _930_ident);
}
inline jule::Ptr<_220b61325_ImportInfo> _220c2a202_SelectPackage_3(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)> _1332_selector) {
	return _220b69c9b_SelectPackage(_self_.safe_ptr<_220b69471_Sema>(), _1332_selector);
}
inline jule::Ptr<_220b8746c_Var> _220c2a5a9_FindVar_3(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _220b6a153_FindVar(_self_.safe_ptr<_220b69471_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_220c0a26a_TypeAlias> _220c2a961_FindTypeAlias_3(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _220b6a50a_FindTypeAlias(_self_.safe_ptr<_220b69471_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_21eec3006_Struct> _220c2ad18_FindStruct_3(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _220b6a8b2_FindStruct(_self_.safe_ptr<_220b69471_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_220b31636_Fn> _220c2b1c0_FindFn_3(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _220b6ac69_FindFn(_self_.safe_ptr<_220b69471_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_220b376b4_Trait> _220c2b4cd_FindTrait_3(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _3328_ident) {
	return _220b6b077_FindTrait(_self_.safe_ptr<_220b69471_Sema>(), _3328_ident);
}
inline jule::Ptr<_220b38374_Enum> _220c2b7db_FindEnum_3(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _3727_ident) {
	return _220b6b385_FindEnum(_self_.safe_ptr<_220b69471_Sema>(), _3727_ident);
}
inline jule::Ptr<_220b38ae4_TypeEnum> _220c2bae9_FindTypeEnum_3(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _4131_ident) {
	return _220b6b693_FindTypeEnum(_self_.safe_ptr<_220b69471_Sema>(), _4131_ident);
}
inline jule::Ptr<_220b61325_ImportInfo> _220c29de4_FindPackage_4(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _930_ident) {
	return _220bca6be_FindPackage(_self_.safe_ptr<_220bca1a2_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_220b61325_ImportInfo> _220c2a202_SelectPackage_4(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)> _1332_selector) {
	return _220bca9cc_SelectPackage(_self_.safe_ptr<_220bca1a2_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_220b8746c_Var> _220c2a5a9_FindVar_4(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _220bcad84_FindVar(_self_.safe_ptr<_220bca1a2_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_220c0a26a_TypeAlias> _220c2a961_FindTypeAlias_4(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _220bcb23b_FindTypeAlias(_self_.safe_ptr<_220bca1a2_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_21eec3006_Struct> _220c2ad18_FindStruct_4(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _220bcb5e3_FindStruct(_self_.safe_ptr<_220bca1a2_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_220b31636_Fn> _220c2b1c0_FindFn_4(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _220bcb99a_FindFn(_self_.safe_ptr<_220bca1a2_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_220b376b4_Trait> _220c2b4cd_FindTrait_4(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _3328_ident) {
	return _220bcbca8_FindTrait(_self_.safe_ptr<_220bca1a2_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_220b38374_Enum> _220c2b7db_FindEnum_4(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _3727_ident) {
	return _220bcc0b6_FindEnum(_self_.safe_ptr<_220bca1a2_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_220b38ae4_TypeEnum> _220c2bae9_FindTypeEnum_4(jule::Trait<_220c2bc3c_Lookup> _self_, jule::Str _4131_ident) {
	return _220bcc3c4_FindTypeEnum(_self_.safe_ptr<_220bca1a2_SymbolTable>(), _4131_ident);
}
inline jule::Str _202c28e77_Name_0(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	return _20702ba06_Name(_self_.safe_ptr<_20702b693_Flag>());
}
inline jule::I32 _202c290a9_Short_0(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	return _20702bdbe_Short(_self_.safe_ptr<_20702b693_Flag>());
}
inline jule::Str _202c291db_What_0(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	return _20702bb38_What(_self_.safe_ptr<_20702b693_Flag>());
}
inline void _202c29362_Reset_0(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	_20702bc7b_Reset(_self_.safe_ptr<_20702b693_Flag>());
}
inline jule::Str _202c28e77_Name_1(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	return _20702ee5a_Name(_self_.safe_ptr<_2070303cd_Flag>());
}
inline jule::I32 _202c290a9_Short_1(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	return _20703092d_Short(_self_.safe_ptr<_2070303cd_Flag>());
}
inline jule::Str _202c291db_What_1(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	return _2070306b9_What(_self_.safe_ptr<_2070303cd_Flag>());
}
inline void _202c29362_Reset_1(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	_2070307eb_Reset(_self_.safe_ptr<_2070303cd_Flag>());
}
inline jule::Str _202c28e77_Name_2(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	return _207033777_Name(_self_.safe_ptr<_207033bea_Flag>());
}
inline jule::I32 _202c290a9_Short_2(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	return _20703424a_Short(_self_.safe_ptr<_207033bea_Flag>());
}
inline jule::Str _202c291db_What_2(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	return _207033ed6_What(_self_.safe_ptr<_207033bea_Flag>());
}
inline void _202c29362_Reset_2(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	_207034118_Reset(_self_.safe_ptr<_207033bea_Flag>());
}
inline jule::Str _202c28e77_Name_3(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	return _2070370d8_Name(_self_.safe_ptr<_20703755b_Flag>());
}
inline jule::I32 _202c290a9_Short_3(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	return _207037aab_Short(_self_.safe_ptr<_20703755b_Flag>());
}
inline jule::Str _202c291db_What_3(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	return _207037847_What(_self_.safe_ptr<_20703755b_Flag>());
}
inline void _202c29362_Reset_3(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	_207037979_Reset(_self_.safe_ptr<_20703755b_Flag>());
}
inline jule::Str _202c28e77_Name_4(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	return _20703a905_Name(_self_.safe_ptr<_20703ad78_Flag>());
}
inline jule::I32 _202c290a9_Short_4(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	return _20703b3c8_Short(_self_.safe_ptr<_20703ad78_Flag>());
}
inline jule::Str _202c291db_What_4(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	return _20703b164_What(_self_.safe_ptr<_20703ad78_Flag>());
}
inline void _202c29362_Reset_4(jule::Trait<_202c5d9b2_CommonFlag> _self_) {
	_20703b296_Reset(_self_.safe_ptr<_20703ad78_Flag>());
}


static _220b5d6a7_ImporterMptrData _220b5d6a7_Importer_mptr_data[] = {
	{
		._220b5c5b8_SetModPath=_220b5c5b8_SetModPath_0,
		._220b5c81b_GetModPath=_220b5c81b_GetModPath_0,
		._220b5cb29_ModById=_220b5cb29_ModById_0,
		._220b5ce37_GetImport=_220b5ce37_GetImport_0,
		._220b5d2de_ImportPackage=_220b5d2de_ImportPackage_0,
		._220b5d564_Imported=_220b5d564_Imported_0,
	},
};
static _220c0aa2e_KindMptrData _220c0aa2e_Kind_mptr_data[] = {
	{
		._220c0a5cd_Str=_220c0a5cd_Str_0,
		._220c0a8db_Equal=_220c0a8db_Equal_0,
	},
	{
		._220c0a5cd_Str=_220c0a5cd_Str_1,
		._220c0a8db_Equal=_220c0a8db_Equal_1,
	},
	{
		._220c0a5cd_Str=_220c0a5cd_Str_2,
		._220c0a8db_Equal=_220c0a8db_Equal_2,
	},
	{
		._220c0a5cd_Str=_220c0a5cd_Str_3,
		._220c0a8db_Equal=_220c0a8db_Equal_3,
	},
	{
		._220c0a5cd_Str=_220c0a5cd_Str_4,
		._220c0a8db_Equal=_220c0a8db_Equal_4,
	},
	{
		._220c0a5cd_Str=_220c0a5cd_Str_5,
		._220c0a8db_Equal=_220c0a8db_Equal_5,
	},
	{
		._220c0a5cd_Str=_220c0a5cd_Str_6,
		._220c0a8db_Equal=_220c0a8db_Equal_6,
	},
	{
		._220c0a5cd_Str=_220c0a5cd_Str_7,
		._220c0a8db_Equal=_220c0a8db_Equal_7,
	},
	{
		._220c0a5cd_Str=_220c0a5cd_Str_8,
		._220c0a8db_Equal=_220c0a8db_Equal_8,
	},
	{
		._220c0a5cd_Str=_220c0a5cd_Str_9,
		._220c0a8db_Equal=_220c0a8db_Equal_9,
	},
	{
		._220c0a5cd_Str=_220c0a5cd_Str_10,
		._220c0a8db_Equal=_220c0a8db_Equal_10,
	},
	{
		._220c0a5cd_Str=_220c0a5cd_Str_11,
		._220c0a8db_Equal=_220c0a8db_Equal_11,
	},
	{
		._220c0a5cd_Str=_220c0a5cd_Str_12,
		._220c0a8db_Equal=_220c0a8db_Equal_12,
	},
	{
		._220c0a5cd_Str=_220c0a5cd_Str_13,
		._220c0a8db_Equal=_220c0a8db_Equal_13,
	},
};
static _220c2bc3c_LookupMptrData _220c2bc3c_Lookup_mptr_data[] = {
	{
		._220c29de4_FindPackage=_220c29de4_FindPackage_0,
		._220c2a202_SelectPackage=_220c2a202_SelectPackage_0,
		._220c2a5a9_FindVar=_220c2a5a9_FindVar_0,
		._220c2a961_FindTypeAlias=_220c2a961_FindTypeAlias_0,
		._220c2ad18_FindStruct=_220c2ad18_FindStruct_0,
		._220c2b1c0_FindFn=_220c2b1c0_FindFn_0,
		._220c2b4cd_FindTrait=_220c2b4cd_FindTrait_0,
		._220c2b7db_FindEnum=_220c2b7db_FindEnum_0,
		._220c2bae9_FindTypeEnum=_220c2bae9_FindTypeEnum_0,
	},
	{
		._220c29de4_FindPackage=_220c29de4_FindPackage_1,
		._220c2a202_SelectPackage=_220c2a202_SelectPackage_1,
		._220c2a5a9_FindVar=_220c2a5a9_FindVar_1,
		._220c2a961_FindTypeAlias=_220c2a961_FindTypeAlias_1,
		._220c2ad18_FindStruct=_220c2ad18_FindStruct_1,
		._220c2b1c0_FindFn=_220c2b1c0_FindFn_1,
		._220c2b4cd_FindTrait=_220c2b4cd_FindTrait_1,
		._220c2b7db_FindEnum=_220c2b7db_FindEnum_1,
		._220c2bae9_FindTypeEnum=_220c2bae9_FindTypeEnum_1,
	},
	{
		._220c29de4_FindPackage=_220c29de4_FindPackage_2,
		._220c2a202_SelectPackage=_220c2a202_SelectPackage_2,
		._220c2a5a9_FindVar=_220c2a5a9_FindVar_2,
		._220c2a961_FindTypeAlias=_220c2a961_FindTypeAlias_2,
		._220c2ad18_FindStruct=_220c2ad18_FindStruct_2,
		._220c2b1c0_FindFn=_220c2b1c0_FindFn_2,
		._220c2b4cd_FindTrait=_220c2b4cd_FindTrait_2,
		._220c2b7db_FindEnum=_220c2b7db_FindEnum_2,
		._220c2bae9_FindTypeEnum=_220c2bae9_FindTypeEnum_2,
	},
	{
		._220c29de4_FindPackage=_220c29de4_FindPackage_3,
		._220c2a202_SelectPackage=_220c2a202_SelectPackage_3,
		._220c2a5a9_FindVar=_220c2a5a9_FindVar_3,
		._220c2a961_FindTypeAlias=_220c2a961_FindTypeAlias_3,
		._220c2ad18_FindStruct=_220c2ad18_FindStruct_3,
		._220c2b1c0_FindFn=_220c2b1c0_FindFn_3,
		._220c2b4cd_FindTrait=_220c2b4cd_FindTrait_3,
		._220c2b7db_FindEnum=_220c2b7db_FindEnum_3,
		._220c2bae9_FindTypeEnum=_220c2bae9_FindTypeEnum_3,
	},
	{
		._220c29de4_FindPackage=_220c29de4_FindPackage_4,
		._220c2a202_SelectPackage=_220c2a202_SelectPackage_4,
		._220c2a5a9_FindVar=_220c2a5a9_FindVar_4,
		._220c2a961_FindTypeAlias=_220c2a961_FindTypeAlias_4,
		._220c2ad18_FindStruct=_220c2ad18_FindStruct_4,
		._220c2b1c0_FindFn=_220c2b1c0_FindFn_4,
		._220c2b4cd_FindTrait=_220c2b4cd_FindTrait_4,
		._220c2b7db_FindEnum=_220c2b7db_FindEnum_4,
		._220c2bae9_FindTypeEnum=_220c2bae9_FindTypeEnum_4,
	},
};
static _202c5d9b2_CommonFlagMptrData _202c5d9b2_CommonFlag_mptr_data[] = {
	{
		._202c28e77_Name=_202c28e77_Name_0,
		._202c290a9_Short=_202c290a9_Short_0,
		._202c291db_What=_202c291db_What_0,
		._202c29362_Reset=_202c29362_Reset_0,
	},
	{
		._202c28e77_Name=_202c28e77_Name_1,
		._202c290a9_Short=_202c290a9_Short_1,
		._202c291db_What=_202c291db_What_1,
		._202c29362_Reset=_202c29362_Reset_1,
	},
	{
		._202c28e77_Name=_202c28e77_Name_2,
		._202c290a9_Short=_202c290a9_Short_2,
		._202c291db_What=_202c291db_What_2,
		._202c29362_Reset=_202c29362_Reset_2,
	},
	{
		._202c28e77_Name=_202c28e77_Name_3,
		._202c290a9_Short=_202c290a9_Short_3,
		._202c291db_What=_202c291db_What_3,
		._202c29362_Reset=_202c29362_Reset_3,
	},
	{
		._202c28e77_Name=_202c28e77_Name_4,
		._202c290a9_Short=_202c290a9_Short_4,
		._202c291db_What=_202c291db_What_4,
		._202c29362_Reset=_202c29362_Reset_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I32*>(alloc) == *static_cast<jule::I32*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U64*>(alloc) == *static_cast<jule::U64*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Bool*>(alloc) == *static_cast<jule::Bool*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type7_eq(void *alloc, void *other) noexcept { return *static_cast<jule::F64*>(alloc) == *static_cast<jule::F64*>(other); }
jule::Str __jule_any_type7_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=__jule_any_type7_eq, .to_str=__jule_any_type7_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type7 && __jule_any_type7_eq(any.data.alloc, (void*)&other); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b31a10_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_220b31a10_FnIns> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b8746c_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_220b8746c_Var> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eec33d0_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_21eec33d0_StructIns> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b376b4_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_220b376b4_Trait> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eec2742_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_21eec2742_Impl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eebcad3_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_21eebcad3_TypeAliasDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eec1a2c_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_21eec1a2c_StructDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeb8293_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_21eeb8293_FnDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eec2137_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_21eec2137_TraitDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeb9272_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_21eeb9272_VarDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eebee6a_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_21eebee6a_EnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eec107b_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_21eec107b_TypeEnumDecl> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea206d_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_21eea206d_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b4535e_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_220b4535e_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b42b20_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_220b42b20_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b30217_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_220b30217_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220bceecb_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_220bceecb_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b30ba7_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_220b30ba7_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2e4e1_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_220b2e4e1_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2da51_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_220b2da51_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2d677_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_220b2d677_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2d864_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_220b2d864_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2de2a_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_220b2de2a_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2e117_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_220b2e117_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b3002a_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_220b3002a_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2c7b9_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_220b2c7b9_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b30d94_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_220b30d94_FreeExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2b763_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_220b2b763_FnCallExprModel> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b4367b_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_220b4367b_Conditional> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b43967_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_220b43967_InfIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeba55e_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_21eeba55e_WhileKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b43dda_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_220b43dda_WhileIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eebae00_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_21eebae00_RangeKind> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b447c0_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_220b447c0_RangeIter> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b44bbb_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_220b44bbb_ContSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b4564a_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_220b4564a_GotoSt> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b45a02_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_220b45a02_Postfix> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b45e75_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_220b45e75_Assign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2bb3c_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_220b2bb3c_IndexingExprModel> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b4632c_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_220b4632c_MultiAssign> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220074816_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_220074816_Const> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b4686b_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_220b4686b_Match> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b4796b_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_220b4796b_FallSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b45073_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_220b45073_BreakSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b47ce0_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_220b47ce0_RetSt> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeb679c_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_21eeb679c_ScopeTree> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea5ec8_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_21eea5ec8_Expr> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eebc40c_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_21eebc40c_Conditional> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeb9c89_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_21eeb9c89_Iter> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eebb65e_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_21eebb65e_ContSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeb3eb4_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_21eeb3eb4_LabelSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeb436b_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_21eeb436b_GotoSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeb52a1_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_21eeb52a1_AssignSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eebd72c_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_21eebd72c_MatchCase> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeb4657_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_21eeb4657_FallSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eebb2a7_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_21eebb2a7_BreakSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeb9629_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_21eeb9629_RetSt> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea6869_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_21eea6869_UseExpr> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b31636_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_220b31636_Fn> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eec3006_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_21eec3006_Struct> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220c0a26a_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_220c0a26a_TypeAlias> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b38374_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_220b38374_Enum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b38ae4_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_220b38ae4_TypeEnum> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2c5cc_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_220b2c5cc_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2c9ea_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_220b2c9ea_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2d0b1_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_220b2d0b1_CommonIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2d29d_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_220b2d29d_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2acc3_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_220b2acc3_UnaryExprModel> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type76_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type76_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=__jule_any_type76_eq, .to_str=__jule_any_type76_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type76 && __jule_any_type76_eq(any.data.alloc, (void*)&other); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea3eb5_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_21eea3eb5_ArrTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea325b_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_21eea325b_SlcTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea3833_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_21eea3833_PtrTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea2d60_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_21eea2d60_SptrTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea4713_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_21eea4713_MapTypeDecl> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea3547_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_21eea3547_TupleTypeDecl> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eead5a7_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_21eead5a7_VariadicExpr> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2b950_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_220b2b950_SliceExprModel> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeb0796_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_21eeb0796_FieldExprPair> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeb1c3c_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_21eeb1c3c_KeyValPair> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea7b89_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_21eea7b89_IdentExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea6b55_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_21eea6b55_TupleExpr> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2d48a_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_220b2d48a_TupleExprModel> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b307cd_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_220b307cd_RuneExprModel> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220c0ae5d_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_220c0ae5d_TypeKind> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2cdc4_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_220b2cdc4_ArrayExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeae289_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_21eeae289_SubIdentExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea26bc_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_21eea26bc_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea8393_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_21eea8393_UnaryExpr> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea19a7_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_21eea19a7_TypeDecl> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeadd16_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_21eeadd16_NsSelectionExpr> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea2a74_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_21eea2a74_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2c3e0_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_220b2c3e0_SlicingExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type100_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type100_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=__jule_any_type100_eq, .to_str=__jule_any_type100_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type100 && __jule_any_type100_eq(any.data.alloc, (void*)&other); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2b576_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_220b2b576_CastingExprModel> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeb2424_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_21eeb2424_SliceExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2b19c_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_220b2b19c_StructLitExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2cbd7_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_220b2cbd7_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2c203_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_220b2c203_MapExprModel> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2bd29_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_220b2bd29_AnonFnExprModel> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea62b4_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_21eea62b4_RangeExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea700c_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_21eea700c_LitExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eea7716_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_21eea7716_UnsafeExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeb2c93_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_21eeb2c93_IndexingExpr> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeb339d_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_21eeb339d_SlicingExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eead95e_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_21eead95e_CastExpr> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeb0ee4_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_21eeb0ee4_StructLit> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeaed17_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_21eeaed17_FnCallExpr> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeb1467_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_21eeb1467_BraceLit> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21eeae70c_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_21eeae70c_BinopExpr> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type117_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type117_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=__jule_any_type117_eq, .to_str=__jule_any_type117_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type117 && __jule_any_type117_eq(any.data.alloc, (void*)&other); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220049577_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_220049577_BinopExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2b389_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_220b2b389_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2dc3d_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_220b2dc3d_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2e304_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_220b2e304_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2e6cd_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_220b2e6cd_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b2e8ba_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_220b2e8ba_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b30404_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_220b30404_SizeofExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b305e1_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_220b305e1_AlignofExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_220b309ba_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_220b309ba_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21e745966_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_21e745966_MutSlicingExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21d88b30a_StrInsertBeginExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_21d88b30a_StrInsertBeginExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21e35075d_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_21e35075d_PushToSliceExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21d84ae02_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_21d84ae02_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21d8d3b38_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_21d8d3b38_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U8*>(alloc) == *static_cast<jule::U8*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *static_cast<jule::F32*>(alloc) == *static_cast<jule::F32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I8*>(alloc) == *static_cast<jule::I8*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
void __jule_any_type137_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I16*>(alloc) == *static_cast<jule::I16*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_any_type137_dealloc, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
void __jule_any_type138_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U16*>(alloc) == *static_cast<jule::U16*>(other); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_any_type138_dealloc, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
void __jule_any_type139_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U32*>(alloc) == *static_cast<jule::U32*>(other); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_any_type139_dealloc, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
jule::Str _202c29cad_OutDir = jule::Str("dist", 4);
jule::Str _202c2a0bb_OutName = jule::Str("ir.cpp", 6);
jule::Str _202c2a220_Out = jule::Str();
jule::Str _21b479659_Compiler = jule::Str();
jule::Str _21b537409_CompilerPath = jule::Str();
jule::Str _21b537629_CppStd = jule::Str("cpp17", 5);
jule::Bool _21b537849_Shadowing = false;
jule::Bool _21b537a9c_Transpilation = false;
jule::Bool _21b537d66_Test = false;
jule::Bool _21b538130_RC = true;
jule::Bool _21b538509_Safety = true;
jule::Bool _21b5387c3_Production = false;
jule::Ptr<_21d3776dc_RangeTable> _21d30d0bd__L = jule::new_ptr<_21d3776dc_RangeTable>(_21d3776dc_RangeTable{._field_R16=jule::Slice<_21d376ce6_Range16>::make({_21d376ce6_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_21d376ce6_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_21d376ce6_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_21d376ce6_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_21d376ce6_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_21d376ce6_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_21d376ce6_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_21d376ce6_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_21d376ce6_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_21d376ce6_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_21d376ce6_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_21d376ce6_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_21d376ce6_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_21d376ce6_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_21d376ce6_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_21d376ce6_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_21d376ce6_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_21d376ce6_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_21d376ce6_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_21d376ce6_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_21d376ce6_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_21d376ce6_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_21d376ce6_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_21d376ce6_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_21d376ce6_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_21d376ce6_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_21d376ce6_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_21d376ce6_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_21d376ce6_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_21d376ce6_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_21d376ce6_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_21d376ce6_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_21d376ce6_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_21d376ce6_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_21d376ce6_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_21d376ce6_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_21d376ce6_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_21d376ce6_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_21d376ce6_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_21d376ce6_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_21d376ce6_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_21d376ce6_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_21d376ce6_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_21d376ce6_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_21d376ce6_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_21d376ce6_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_21d376ce6_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_21d376ce6_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_21d376ce6_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_21d376ce6_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_21d376ce6_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_21d376ce6_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_21d376ce6_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_21d376ce6_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_21d376ce6_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_21d376ce6_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_21d376ce6_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_21d376ce6_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_21d376ce6_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_21d376ce6_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_21d377269_Range32>::make({_21d377269_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_21d377269_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_21d377269_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_21d377269_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_21d377269_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_21d377269_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_21d377269_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_21d377269_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_21d377269_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_21d377269_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_21d377269_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_21d377269_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_21d377269_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_21d377269_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_21d377269_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_21d377269_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_21d377269_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_21d377269_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_21d377269_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_21d377269_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_21d377269_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_21d377269_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_21d377269_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_21d377269_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_21d377269_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_21d377269_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_21d377269_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_21d377269_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_21d377269_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_21d377269_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_21d377269_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_21d377269_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_21d377269_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_21d377269_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_21d377269_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_21d377269_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_21d377269_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_21d377269_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_21d377269_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_21d377269_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_21d377269_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_21d377269_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_21d377269_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_21d3776dc_RangeTable> _21d30e0ad__LU = jule::new_ptr<_21d3776dc_RangeTable>(_21d3776dc_RangeTable{._field_R16=jule::Slice<_21d376ce6_Range16>::make({_21d376ce6_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_21d376ce6_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_21d376ce6_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_21d376ce6_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_21d376ce6_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_21d376ce6_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_21d376ce6_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_21d376ce6_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_21d376ce6_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_21d376ce6_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_21d376ce6_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_21d376ce6_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_21d376ce6_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_21d376ce6_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_21d376ce6_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_21d376ce6_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_21d376ce6_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_21d377269_Range32>::make({_21d377269_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_21d377269_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_21d377269_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_21d377269_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_21d377269_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_21d377269_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_21d377269_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::Str,4> _21b552e3b_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _21d4d62eb_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _21d4d7e46_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _21d52d673_PathStdlib = jule::Str();
jule::Str _21d52e003_PathExec = jule::Str();
jule::Str _21d530224_PathWd = jule::Str();
jule::Str _21d53da90_PathApi = jule::Str();
jule::Array<jule::I32,5> _21d76cbd1_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _21d76ce01_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _21d76d154_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _21d817c48_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _21d818045_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_21d825b35_kindPair,47> _21d826064_keywords = jule::Array<_21d825b35_kindPair,47>({_21d825b35_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_21d825b35_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_21d825b35_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_21d825b35_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_21d825b35_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_21d825b35_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_21d825b35_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_21d825b35_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_21d825b35_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_21d825b35_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_21d825b35_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_21d825b35_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_21d825b35_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_21d825b35_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_21d825b35_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_21d825b35_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_21d825b35_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_21d825b35_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_21d825b35_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_21d825b35_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_21d825b35_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_21d825b35_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_21d825b35_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_21d825b35_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_21d825b35_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_21d825b35_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_21d825b35_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_21d825b35_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_21d825b35_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_21d825b35_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(21LLU)},_21d825b35_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(23LLU)},_21d825b35_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(24LLU)},_21d825b35_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(25LLU)},_21d825b35_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(26LLU)},_21d825b35_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(27LLU)},_21d825b35_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(28LLU)},_21d825b35_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(29LLU)},_21d825b35_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(30LLU)},_21d825b35_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(31LLU)},_21d825b35_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(32LLU)},_21d825b35_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(33LLU)},_21d825b35_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(34LLU)},_21d825b35_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(35LLU)},_21d825b35_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(36LLU)},_21d825b35_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(37LLU)},_21d825b35_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(39LLU)},_21d825b35_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_21d825b35_kindPair,39> _21d8263a5_basicOps = jule::Array<_21d825b35_kindPair,39>({_21d825b35_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(22LLU)},_21d825b35_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_21d825b35_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_21d825b35_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_21d825b35_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_21d825b35_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_21d825b35_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(38LLU)}});
jule::Array<jule::U8,32> _220ad4375__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _220ad493b__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_2206ed720_floatInfo _22055b638_f32info = _2206ed720_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_2206ed720_floatInfo _22055ba9a_f64info = _2206ed720_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _220700887_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _2207abd2d_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _220854403_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _2208722cd_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _2208eee1b_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_220b2225e_leftCheat> _2209de34b_leftCheats = jule::Slice<_220b2225e_leftCheat>::make({_220b2225e_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_220b2225e_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_220b2225e_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_220b2225e_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_220b2225e_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_220b2225e_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_220b2225e_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_220b2225e_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_220b2225e_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_220b2225e_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_220b2225e_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_220b2225e_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_220b2225e_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_220b2225e_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_220b2225e_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_220b2225e_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_220b2225e_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_220b2225e_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_220b2225e_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_220b2225e_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_220b2225e_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_220b2225e_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_220b2225e_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_220b2225e_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_220b2225e_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_220b2225e_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_220b2225e_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_220b2225e_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_220b2225e_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_220b2225e_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_220b2225e_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_220b2225e_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_220b2225e_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_220b2225e_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_220b2225e_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_220b2225e_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_220b2225e_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_220b2225e_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_220b2225e_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_220b2225e_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_220b2225e_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_220b2225e_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_220b2225e_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_220b2225e_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_220b2225e_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_220b2225e_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_220b2225e_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_220b2225e_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_220b2225e_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_220b2225e_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_220b2225e_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_220b2225e_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_220b2225e_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_220b2225e_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_220b2225e_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_220b2225e_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_220b2225e_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_220b2225e_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_220b2225e_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_220b2225e_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_220b2225e_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _2200de62d_BitSize = 0LL;
jule::Str _2200e0e9d_SysInt = jule::Str();
jule::Str _220142340_SysUint = jule::Str();
jule::Slice<jule::Str> _220b3a3ba_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _21d86798a_Copy = false;
jule::Bool _21d88ab34_Deadcode = false;
jule::Bool _21d8bb219_Append = false;
jule::Bool _21d96d9c5_Math = false;
jule::Bool _21d9a03ca_Access = false;
jule::Bool _21da0918c_Inline = false;
jule::Bool _21da39860_Ptr = false;
jule::Bool _21da42e0c_Cond = false;
jule::Bool _2214bb971_exprEnabled = false;
jule::Bool _2214bc5dc_scopeEnabled = false;
jule::Array<jule::U64,12> _202bec379_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _202b4821a_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_21d3776dc_RangeTable> _21d31b7b3_Upper = _21d30e0ad__LU;
jule::Array<jule::U8,256> _21d36b2e6__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _21d43825e_first = jule::Array<jule::U8,256>({240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,19LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,35LLU,3LLU,3LLU,52LLU,4LLU,4LLU,4LLU,68LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU});
jule::Array<_21d4387e2_acceptRange,16> _21d438b00_acceptRanges = jule::Array<_21d4387e2_acceptRange,16>({_21d4387e2_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_21d4387e2_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_21d4387e2_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_21d4387e2_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_21d4387e2_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _21d4b8e9e_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _21d52da08_Os = jule::Str("darwin", 6);
jule::Str _21d506184_Arch = jule::Str("amd64", 5);
jule::Ptr<_21d3776dc_RangeTable> _21d31525c_Letter = _21d30d0bd__L;





std::ostream &operator<<(std::ostream &_Stream, _21d376ce6_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21d377269_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21d3776dc_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21d4387e2_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _21c4a6cb2_index(_21c49a844_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];;
	};
	return (*_self_)._field_path[_5424_i];;
}



inline void _21c4a95de_append(_21c49a844_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len(), (*_self_)._field_path.len(), 0);
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _21c4aae1a_string(_21c49a844_lazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_volAndPath.slice(0LL,((*_self_)._field_volLen + (*_self_)._field_w));;
	};
	return ((*_self_)._field_volAndPath.slice(0LL,(*_self_)._field_volLen) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _21c49a844_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21b6d2351_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_21b6d2351_DirEntry>>> static__21c4123c1_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_21b6d2351_DirEntry>> __jule_func_result;
	DIR* _1617_dir = _21c3a0a35_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_21b6d2351_DirEntry>>>(jule::Any(_21b5dd9aa_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _21c3a0ccc_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_2036e6acb;
			};
			jule::Str _2517_name = _21c381a6b_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_21c3cc820_Status> _2621_stat = ({
				auto except = static__21b5d882e_Of(_21c4e1aee_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_21b6d2351_DirEntry>>>(except.error);
				} jule::Ptr<_21c3cc820_Status>(nullptr);});
			});;
			__jule_func_result = jule::alloc_for_append(__jule_func_result,1);__jule_func_result.__push(jule::new_ptr<_21b6d2351_DirEntry>(_21b6d2351_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat}));;
		}
	_iter_next_2036e6acb:;
	}
	_iter_end_2036e6acb:;;
	_21c3a1074_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_21b6d2351_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__21c43be12_Create(jule::Str _3922_path) {
	if ((_21c3a1904_Mkdir((&(_3922_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_21b5dd9aa_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__21c416c77_Remove(jule::Str _5122_path) {
	if ((_21c3a1b9b_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_21b5dd9aa_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _21b71781a_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_21b6092ab_File>> static__21b60a202_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _1913_handle = _21c3a021b_Open((&(_1820_path[0LL])),static_cast<jule::I64>(_1831_flag),_1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_21b6092ab_File>>(jule::Any(_21b5dd9aa_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_21b6092ab_File>>(jule::Any(), static__21b609498_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));;
}



inline jule::VoidExceptional static__21b60b555_Remove(jule::Str _3022_path) {
	if ((_21c3a1e43_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_21b5dd9aa_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _21b5bcc97_Write(_21b6092ab_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_21c3bd28e_Write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4424_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_21b5dd9aa_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _21b5d7a2b_Read(_21b6092ab_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_21c3bca30_Read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6427_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_21b5dd9aa_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_21b6092ab_File> static__21b609498_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_21b6092ab_File>(_21b6092ab_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_21b6092ab_File>> static__21b5d8eb1_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_21b6092ab_File>>(jule::Any(), ({
		auto except = static__21b60a202_Open(_5522_path,static_cast<jule::I64>(1538LL),438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_21b6092ab_File>>(except.error);
		} jule::Ptr<_21b6092ab_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__21b6d3154_Read(jule::Str _6720_path) {
	jule::Ptr<_21c3cc820_Status> _6813_s = ({
		auto except = static__21b5d882e_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_21c3cc820_Status>(nullptr);});
	});;
	if ((!(_21b718475_IsReg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_6813_s.get()._field_Size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_21b6092ab_File> _7817_f = ({
		auto except = static__21b60a202_Open(_6720_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_21b6092ab_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _21b60a048_Close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_Size), static_cast<jule::I64>(_6813_s.get()._field_Size), 0);;
	jule::I64 _8213_n = ({
		auto except = _21b5d7a2b_Read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8117_buff.slice(0LL,_8213_n));;
}



inline jule::VoidExceptional static__21b6d371a_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_21b6092ab_File> _9217_f = ({
		auto except = static__21b60a202_Open(_9121_path,static_cast<jule::I64>(1537LL),_9146_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_21b6092ab_File>(nullptr);});
	});;
	({
		auto except = _21b5bcc97_Write(_9217_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _21b60a048_Close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _21b5d80e2_Seek(_21b6092ab_File* _self_, jule::I64 _10523_offset, jule::I64 _10536_origin) {
	jule::I64 _10613_pos = _21c3bc645_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10523_offset,static_cast<jule::I64>(_10536_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_21b5dd9aa_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _10613_pos);;
}



inline jule::VoidExceptional _21b60a048_Close(_21b6092ab_File* _self_) {
	if ((_21c3bcda4_Close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_21b5dd9aa_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _21b6092ab_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_21c3cc820_Status>> static__21b5d882e_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_21c3cc820_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _21c39ed31_Stat((&(_1118_path[0LL])),(&(_1517_handle)));;
	if ((_1613_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_21c3cc820_Status>>(jule::Any(), jule::new_ptr<_21c3cc820_Status>(_21c3cc820_Status{._field_Mode=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_mode)), ._field_Size=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_size))}));;
	};
	return jule::Exceptional<jule::Ptr<_21c3cc820_Status>>(jule::Any(_21b5dd9aa_getLastFsError(), &__jule_any_type0));
}



inline jule::Bool _21b6d2a49_IsDir(_21c3cc820_Status* _self_) {
	return (((*_self_)._field_Mode & 16384LLU) == 16384LLU);;
}



inline jule::Bool _21b718475_IsReg(_21c3cc820_Status* _self_) {
	return (((*_self_)._field_Mode & 32768LLU) == 32768LLU);;
}







std::ostream &operator<<(std::ostream &_Stream, _21c3cc820_Status _Src) {
	_Stream << "Status{";
	_Stream << "Mode:" << _Src._field_Mode << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21d5402ab_Cmd> static__21d5406da_New(jule::Str _2019_path) {
	return jule::new_ptr<_21d5402ab_Cmd>(_21d5402ab_Cmd{._field_path=_2019_path, });;
}



inline jule::Exceptional<jule::I64> _21d54094e_Spawn(_21d5402ab_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _21d543820_spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::Exceptional<jule::I64> _21d543820_spawn(_21d5402ab_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type1));
	};
	jule::I64 _4913_pid = fork();;
	{
		auto &_match_expr{ _4913_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_20371ee12:;
			{
				return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(12LL), &__jule_any_type1));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_20372095c:;
			{
				jule::I64 _5421_status = 0LL;;
				if (((*_self_)._field_Env == nullptr)) {
					_5421_status=static_cast<jule::I64>(_21d543149_execvp((*_self_)._field_path,(*_self_)._field_Args));
				} else {
					_5421_status=static_cast<jule::I64>(_21d543534_execve((*_self_)._field_path,(*_self_)._field_Args,(*_self_)._field_Env));
				};
				if ((_5421_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				};
				_21d54414a_Exit(255LL);
			}
		}
		_match_end_2037208b3:;
	};
	jule::I64 _6513_status = 0LL;;
	if ((waitpid(_4913_pid,((signed*)((&(_6513_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_21d53ea2a_getLastProcessError(), &__jule_any_type1));
	};
	if (WIFSIGNALED(_6513_status)) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(12LL), &__jule_any_type1));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(WEXITSTATUS(_6513_status)));;
}







std::ostream &operator<<(std::ostream &_Stream, _21d5402ab_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21d4e511d_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _21d81daea_Prec(_21d81d743_Token* _self_) {
	if (((*_self_)._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_2037c1da4:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_2037c1e1a:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_2037c1b62:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_2037c1bc8:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_2037c1c3e:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_2037c15ac:;
			{
				return 0LLU;;
			}
		}
		_match_end_2037c1557:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _21d81d743_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21d823eda_IsOk(_21d823acd_File* _self_) {
	({
		auto except = static__21b5d882e_Of((*_self_)._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} jule::Ptr<_21c3cc820_Status>(nullptr);});
	});
	return true;;
}



inline void _21d824260_Fill(_21d823acd_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*_self_)._field_Data=_2327_data;
}



inline jule::Str _21d8244c4_Dir(_21d823acd_File* _self_) {
	return _21c4e565d_Dir((*_self_)._field_Path);;
}



inline jule::Str _21d824738_Name(_21d823acd_File* _self_) {
	return _21c4c73ba_Base((*_self_)._field_Path);;
}



inline jule::Uintptr _21d82499c_Addr(_21d823acd_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));;
}



inline jule::Str _21d824caa_GetRow(_21d823acd_File* _self_, jule::I64 _4421_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_Data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_Data[_4717_i] != '\n')) {
				goto _iter_next_2037c6958;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*_self_)._field_Data.slice(_4617_lineStart,_4717_i));;
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_2037c6958:;
	}
	_iter_end_2037c6958:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _21d823acd_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21d825b35_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _21d82bc3a_pushErr(_21d82b696_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_21d8268a0_makeErr((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45826_fmt,_45839_args));;
}



inline void _21d82c059_pushErrTok(_21d82b696_lex* _self_, jule::Ptr<_21d81d743_Token>& _46330_token, jule::Str _46345_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_21d8268a0_makeErr(_46330_token.get()._field_Row,_46330_token.get()._field_Column,(*_self_)._field_file,_46345_fmt,jule::Slice<jule::Any>()));;
}



inline void _21d82c235_lex(_21d82b696_lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_21d82e237_newLine(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_21d81d743_Token> _47321_token = _21d8305ac_token(&(*_self_));;
			if ((_47321_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_20380a3c6:;
	}
	_iter_end_20380a3c6:;;
}



inline jule::Str _21d82c543_id(_21d82b696_lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _48614_r = 0;;
	jule::I64 _48621_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d439381_DecodeRune(_48222_ln);
		_48614_r = __jule_assign_result.__jule_result_arg0;
		_48621_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_48614_r != '_') && (!(_21d821c1e_IsLetter(_48614_r))))) {
		return jule::Str();;
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr = 0;;
			jule::I64 _49222_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d439381_DecodeRune(_48222_ln.slice(_48621_i));
				_49218_pr = __jule_assign_result.__jule_result_arg0;
				_49222_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_49218_pr != '_') && (!(_21d82225d_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_21d821c1e_IsLetter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));;
			};
			_48621_i+=_49222_n;
		}
	_iter_next_20380d5b6:;
	}
	_iter_end_20380d5b6:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);;
}



inline jule::Slice<jule::U8> _21d82c7a7_resume(_21d82b696_lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_Data[_50717_i]);;
			if (_21d8217bd_IsSpace(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_20381308d:;
						{
							_21d82e237_newLine(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_203812d6d:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_20380d52d:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_203812972:;
				};
				goto _iter_next_203811223;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_203811d28;
					};
				}
			_iter_next_203811d28:;
			}
			_iter_end_203811d28:;;
			return (*_self_)._field_file.get()._field_Data.slice(_50717_i,_52421_j);;
		}
	_iter_next_203811223:;
	}
	_iter_end_203811223:;;
	return nullptr;;
}



inline void _21d82ca2c_lexLineComment(_21d82b696_lex* _self_, jule::Ptr<_21d81d743_Token>& _53538_token) {
	jule::I64 _53613_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53917_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_203815876;
			};
		}
	_iter_next_203815876:;
	}
	_iter_end_203815876:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53538_token.get()._field_Id=static_cast<jule::U64>(18LLU);
		_53538_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_53613_start,(*_self_)._field_pos));
	};
}



inline void _21d82cca2_lexRangeComment(_21d82b696_lex* _self_, jule::Ptr<_21d81d743_Token>& _55039_token) {
	jule::I64 _55113_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55417_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_203818bba;
			};
			if ((_55417_r == '\n')) {
				_21d82e237_newLine(&(*_self_));
				goto _iter_next_203818bba;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*_self_)._field_file.get()._field_Data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55039_token.get()._field_Id=static_cast<jule::U64>(18LLU);
					_55039_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_55113_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_203818bba:;
	}
	_iter_end_203818bba:;;
	_21d82bc3a_pushErr(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _21d82d0b0_num(_21d82b696_lex* _self_, jule::Slice<jule::U8>& _57823_txt) {
	jule::Str __jule_func_result;
	if ((_57823_txt[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_21d82a1bc_hexNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_21d829e25_octalNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_21d82886e_binaryNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_21d8285c7_commonNum(_57823_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _21d82d3bd_escapeSeq(_21d82b696_lex* _self_, jule::Slice<jule::U8>& _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if ((_60029_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60029_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_203823b92:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60029_txt.slice(0LL,2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_203823ac6:;
			{
				_60117_seq=_21d82a7a5_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_20382380c:;
			{
				_60117_seq=_21d82aa6e_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_203823873:;
			{
				_60117_seq=_21d82ac28_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_20382309d:;
			{
				_60117_seq=_21d82aeae_byteEscape(_60029_txt);
			}
		}
		_match_end_2038236db:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*_self_)._field_pos)++;
		_21d82bc3a_pushErr(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*_self_)._field_pos+=_60117_seq.len();
	return _60117_seq;;
}



inline jule::Str _21d82d775_getRune(_21d82b696_lex* _self_, jule::Slice<jule::U8>& _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && (_63027_txt[0LL] == '\\'))) {
		return _21d82d3bd_escapeSeq(&(*_self_), _63027_txt);;
	};
	jule::I32 _63414_r = 0;;
	jule::I64 _63417_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d439381_DecodeRune(_63027_txt);
		_63414_r = __jule_assign_result.__jule_result_arg0;
		_63417_n = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_)._field_pos+=_63417_n;
	return static_cast<jule::Str>(_63414_r);;
}



inline jule::Str _21d82da83_lexRune(_21d82b696_lex* _self_, jule::Slice<jule::U8>& _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64217_n = 0LL;;
	jule::I64 _64317_i = 1LL;;
	for (; (_64317_i < _63927_txt.len()); (_64317_i)++) {
		{
			if ((_63927_txt[_64317_i] == '\r')) {
				goto _iter_next_203829ba9;
			};
			if ((_63927_txt[_64317_i] == '\n')) {
				_21d82bc3a_pushErr(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_21d82e237_newLine(&(*_self_));
				return jule::Str();;
			};
			jule::Slice<jule::U8> _65517_part = _63927_txt.slice(_64317_i);;
			jule::Str _65617_r = _21d82d775_getRune(&(*_self_), _65517_part,false);;
			_64017_run+=_65617_r;
			(*_self_)._field_column+=_21d43b075_RuneCountStr(_65617_r);
			if ((_65617_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_203829ba9;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_203829ba9:;
	}
	_iter_end_203829ba9:;;
	if ((_64217_n == 0LL)) {
		_21d82bc3a_pushErr(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_21d82bc3a_pushErr(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64017_run;;
}



inline jule::Str _21d82dce7_lexStr(_21d82b696_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	_67917_s+=static_cast<jule::Str>(_68013_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_2038317a4;
			};
			if ((_68717_ch == '\n')) {
				_21d82e237_newLine(&(*_self_));
				if ((!(_68213_raw))) {
					_21d82bc3a_pushErr(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _69921_part = (*_self_)._field_file.get()._field_Data.slice((*_self_)._field_pos);;
			jule::Str _70017_r = _21d82d775_getRune(&(*_self_), _69921_part,_68213_raw);;
			_67917_s+=_70017_r;
			(*_self_)._field_column+=_21d43b075_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_2038317a4;
			};
		}
	_iter_next_2038317a4:;
	}
	_iter_end_2038317a4:;;
	return _67917_s;;
}



inline jule::Bool _21d82e05b_isFirstTokenOfLine(_21d82b696_lex* _self_) {
	return ((*_self_)._field_column == 1LL);;
}



inline void _21d82e237_newLine(_21d82b696_lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _21d82e732_isOp(_21d82b696_lex* _self_, jule::Slice<jule::U8>& _72024_txt, jule::Str _72037_kind, jule::U64 _72048_id, jule::Ptr<_21d81d743_Token>& _72066_t) {
	if ((!(_21d826c35_bytesHasPrefix(_72024_txt,_72037_kind)))) {
		return false;;
	};
	_72066_t.get()._field_Kind=_72037_kind;
	_72066_t.get()._field_Id=_72048_id;
	(*_self_)._field_pos+=_72037_kind.len();
	return true;;
}



inline jule::Bool _21d82ead9_lexBasicOps(_21d82b696_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_21d81d743_Token>& _73048_tok) {
	{
		auto &expr = _21d8263a5_basicOps;
		auto it = expr.begin();
		_iter_begin_203837986:;
		if (it != expr.end()) {
			_21d825b35_kindPair &_73116_pair = *it;
			{
				if (_21d82e732_isOp(&(*_self_), _73030_txt,_73116_pair._field_kind,_73116_pair._field_id,_73048_tok)) {
					return true;;
				};
			}
			_iter_next_203837986:;
			++it;
			goto _iter_begin_203837986;
		}
		_iter_end_203837986:;
	};
	return false;;
}



inline jule::Bool _21d82ee91_lexId(_21d82b696_lex* _self_, jule::Slice<jule::U8>& _74025_txt, jule::Ptr<_21d81d743_Token>& _74043_t) {
	jule::Str _74113_lex = _21d82c543_id(&(*_self_), _74025_txt);;
	if (_74113_lex.empty()) {
		return false;;
	};
	_74043_t.get()._field_Kind=_74113_lex;
	_74043_t.get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;;
}



inline jule::Bool _21d830348_lexNum(_21d82b696_lex* _self_, jule::Slice<jule::U8>& _75026_txt, jule::Ptr<_21d81d743_Token>& _75044_t) {
	jule::Str _75113_lex = _21d82d0b0_num(&(*_self_), _75026_txt);;
	if (_75113_lex.empty()) {
		return false;;
	};
	_75044_t.get()._field_Kind=_75113_lex;
	_75044_t.get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;;
}



inline jule::Ptr<_21d81d743_Token> _21d8305ac_token(_21d82b696_lex* _self_) {
	jule::Ptr<_21d81d743_Token> _76217_t = jule::new_ptr<_21d81d743_Token>(_21d81d743_Token{._field_File=(*_self_)._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _21d82c7a7_resume(&(*_self_));;
	if ((_76713_txt == nullptr)) {
		return _76217_t;;
	};
	_76217_t.get()._field_Column=(*_self_)._field_column;
	_76217_t.get()._field_Row=(*_self_)._field_row;
	{
		
		if (_21d830348_lexNum(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_20383d89e:;
			{
				goto _match_end_20383ce53;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_20383dabe:;
			{
				_76217_t.get()._field_Kind=_21d82da83_lexRune(&(*_self_), _76713_txt);
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_20383e284:;
			{
				_76217_t.get()._field_Kind=_21d82dce7_lexStr(&(*_self_));
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (_21d826c35_bytesHasPrefix(_76713_txt,jule::Str("//", 2))) {
			_case_begin_20383e5d6:;
			{
				_21d82ca2c_lexLineComment(&(*_self_), _76217_t);
				return _76217_t;;
			}
		}
		else if (_21d826c35_bytesHasPrefix(_76713_txt,jule::Str("/*", 2))) {
			_case_begin_20383e64c:;
			{
				_21d82cca2_lexRangeComment(&(*_self_), _76217_t);
				return _76217_t;;
			}
		}
		else if (_21d82e732_isOp(&(*_self_), _76713_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76217_t) || _21d82e732_isOp(&(*_self_), _76713_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76217_t) || _21d82e732_isOp(&(*_self_), _76713_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76217_t) || _21d82e732_isOp(&(*_self_), _76713_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76217_t) || _21d82e732_isOp(&(*_self_), _76713_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76217_t) || _21d82e732_isOp(&(*_self_), _76713_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76217_t) || _21d82ead9_lexBasicOps(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_20383e6b3:;
			{
				goto _match_end_20383ce53;
			}
		}
		else if (_21d82ee91_lexId(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_20383d041:;
			{
				{
					auto &expr = _21d826064_keywords;
					auto it = expr.begin();
					_iter_begin_203844d5b:;
					if (it != expr.end()) {
						_21d825b35_kindPair &_80520_pair = *it;
						{
							if ((_80520_pair._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=_80520_pair._field_id;
								goto _iter_end_203844d5b;
							};
						}
						_iter_next_203844d5b:;
						++it;
						goto _iter_begin_203844d5b;
					}
					_iter_end_203844d5b:;
				};
			}
		}
		else {
			_case_begin_20383ceca:;
			{
				jule::I32 _81218_r = 0;;
				jule::I64 _81221_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d439381_DecodeRune(_76713_txt);
					_81218_r = __jule_assign_result.__jule_result_arg0;
					_81221_sz = __jule_assign_result.__jule_result_arg1;
				});
				_21d82bc3a_pushErr(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81218_r, &__jule_any_type2)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81221_sz;
				return _76217_t;;
			}
		}
		_match_end_20383ce53:;
	};
	(*_self_)._field_column+=_21d43b075_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _21d82b696_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21ee6c665_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21ee6d314_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21ee6d710_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea19a7_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eea23d1_IsPrim(_21eea206d_IdentTypeDecl* _self_) {
	return ((*_self_)._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea206d_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea26bc_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea2a74_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea2d60_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea325b_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea3547_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eea3b85_IsUnsafe(_21eea3833_PtrTypeDecl* _self_) {
	return ((*_self_)._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea3833_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eea438e_AutoSized(_21eea3eb5_ArrTypeDecl* _self_) {
	return ((*_self_)._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea3eb5_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea4713_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea4aba_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea5ec8_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea62b4_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea6869_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea6b55_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eea735e_IsNil(_21eea700c_LitExpr* _self_) {
	return ((*_self_)._field_Value == jule::Str("nil", 3));;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea700c_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea7716_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eea7edb_IsSelf(_21eea7b89_IdentExpr* _self_) {
	return ((*_self_)._field_Ident == jule::Str("self", 4));;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea7b89_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eea8393_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eead5a7_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eead95e_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeadd16_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeae289_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeae70c_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eeb017a_Unhandled(_21eeaed17_FnCallExpr* _self_) {
	return ((*_self_)._field_Exception == nullptr);;
}



inline jule::Bool _21eeb03de_Ignored(_21eeaed17_FnCallExpr* _self_) {
	return (((*_self_)._field_Exception != nullptr) && (*_self_)._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeaed17_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eeb0ae8_IsTargeted(_21eeb0796_FieldExprPair* _self_) {
	return ((*_self_)._field_Field != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb0796_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb0ee4_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eeb17b9_IsEmpty(_21eeb1467_BraceLit* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb1467_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb1c3c_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eeb2754_IsEmpty(_21eeb2424_SliceExpr* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb2424_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb2c93_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb339d_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb3689_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb3b0c_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb3eb4_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb436b_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb4657_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb4c62_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb52a1_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb6192_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb679c_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eeb72d6_IsSelf(_21eeb6e73_ParamDecl* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));;
}



inline jule::Bool _21eeb754a_IsRef(_21eeb6e73_ParamDecl* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb6e73_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eeb85e5_IsAnon(_21eeb8293_FnDecl* _self_) {
	return ((*_self_)._field_Ident == jule::Str("<anonymous>", 11));;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb8293_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb9272_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb9629_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eeba0db_IsInf(_21eeb9c89_Iter* _self_) {
	return ((*_self_)._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeb9c89_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eeba8b1_IsWhileNext(_21eeba55e_WhileKind* _self_) {
	return ((*_self_)._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _21eeba55e_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eebae00_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eebb2a7_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eebb65e_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eebbad2_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eebbe89_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eebc40c_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eebcad3_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eebd056_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eebd72c_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eebdebe_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eebe794_AutoExpr(_21eebe442_EnumItemDecl* _self_) {
	return ((*_self_)._field_Expr == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _21eebe442_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eec04ed_DefaultTyped(_21eebee6a_EnumDecl* _self_) {
	return ((*_self_)._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _21eebee6a_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eec0971_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eec107b_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eec1279_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eec1a2c_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eec2137_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eec2aa5_IsTraitImpl(_21eec2742_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);;
}



inline jule::Bool _21eec2d19_IsStructImpl(_21eec2742_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _21eec2742_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2206ed720_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220975755_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2225e_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _22054a418_set(_220b2256c_decimal* _self_, jule::Str _23322_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_2055c9506:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_2055c957d:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_2055c9391:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_2055cb6e5:;
					{
						goto _iter_next_2055caeb9;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_2055cb76c:;
					{
						if (_25117_sawdot) {
							return __jule_func_result;;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_2055caeb9;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_2055cb7e4:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_2055caeb9;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_2055caeb9;
					}
				}
				_match_end_2055cb5c4:;
			};
			goto _iter_end_2055caeb9;
		}
	_iter_next_2055caeb9:;
	}
	_iter_end_2055caeb9:;;
	if ((!(_25217_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_22093b089_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_2055d3ed3;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_2055d3ed3:;
		}
		_iter_end_2055d3ed3:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _22054a54a_floatBits(_220b2256c_decimal* _self_, _2206ed720_floatInfo& _32729_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _2207abd2d_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_2207abd2d_powtab[(*_self_)._field_dp];
			};
			_220b2288b_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_2055da902:;
	}
	_iter_end_2055da902:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _2207abd2d_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_2207abd2d_powtab[(-((*_self_)._field_dp))];
			};
			_220b2288b_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_2055db183:;
	}
	_iter_end_2055db183:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32729_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32729_flt._field_bias + 1LL) - _32817_exp);;
		_220b2288b_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_220b2288b_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32729_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_220b22d64_roundedInteger(&(*_self_)));
	if ((_32917_mant == (2LLU << _32729_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32729_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32729_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32729_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32729_flt._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32729_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32729_flt._field_bias) & static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) << _32729_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32729_flt._field_mantbits) << _32729_flt._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _41717_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _220b22759_assign(_220b2256c_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_2055e9119:;
	}
	_iter_end_2055e9119:;;
	(*_self_)._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_33117_buf[_33417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_2055e9a87:;
	}
	_iter_end_2055e9a87:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_220b230c8_trim((*_self_));
}



inline void _220b2288b_shift(_220b2256c_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_2055ebbcc:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_2055ebc54:;
			{
				while ((_35528_k > 60LL)) {
					{
						_220b2346e_leftShift((*_self_),60LLU);
						_35528_k-=60LL;
					}
				_iter_next_2055ec9be:;
				}
				_iter_end_2055ec9be:;;
				_220b2346e_leftShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_2055ebccb:;
			{
				while ((_35528_k < -60LL)) {
					{
						_220b2320a_rightShift((*_self_),60LLU);
						_35528_k+=60LL;
					}
				_iter_next_2055ec936:;
				}
				_iter_end_2055ec936:;;
				_220b2320a_rightShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_2055ebaab:;
	};
}



inline void _220b229bd_roundDown(_220b2256c_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_37528_nd;
	_220b230c8_trim((*_self_));
}



inline void _220b22b00_roundUp(_220b2256c_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*_self_)._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*_self_)._field_d[_39017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_20560163d:;
	}
	_iter_end_20560163d:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _220b22c32_round(_220b2256c_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_220b235a1_shouldRoundUp((*_self_),_41124_nd)) {
		_220b22b00_roundUp(&(*_self_), _41124_nd);
	} else {
		_220b229bd_roundDown(&(*_self_), _41124_nd);
	};
}



inline jule::U64 _220b22d64_roundedInteger(_220b2256c_decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*_self_)._field_dp) && (_42817_i < (*_self_)._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_42817_i] - '0'))));
		}
	_iter_next_2055e802a:;
	}
	_iter_end_2055e802a:;;
	for (; (_42817_i < (*_self_)._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_20560adc8:;
	}
	_iter_end_20560adc8:;;
	if (_220b235a1_shouldRoundUp((*_self_),(*_self_)._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2256c_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_220074816_Const> static__2200b58ac_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_220074816_Const>(_220074816_Const{._field_data=jule::Any(_1622_x, &__jule_any_type3)});;
}



inline jule::Ptr<_220074816_Const> static__22009b8c6_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_220074816_Const>(_220074816_Const{._field_data=jule::Any(_1922_x, &__jule_any_type4)});;
}



inline jule::Ptr<_220074816_Const> static__2200d5e93_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_220074816_Const>(_220074816_Const{._field_data=jule::Any(_2223_x, &__jule_any_type5)});;
}



inline jule::Ptr<_220074816_Const> static__2200dc263_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_220074816_Const>(_220074816_Const{._field_data=jule::Any(_2522_x, &__jule_any_type6)});;
}



inline jule::Ptr<_220074816_Const> static__2200dc395_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_220074816_Const>(_220074816_Const{._field_data=jule::Any(_2822_x, &__jule_any_type7)});;
}



inline jule::Ptr<_220074816_Const> static__220b27572_NewNil(void) {
	return jule::new_ptr<_220074816_Const>(_220074816_Const{._field_data=nullptr});;
}



inline jule::I64 _220b2796d_ReadI64(_220074816_Const* _self_) {
	if ((!(_220b28b5b_IsI64(&(*_self_))))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*_self_)._field_data.cast<jule::I64>(&__jule_any_type3));;
}



inline jule::U64 _220b27aa0_ReadU64(_220074816_Const* _self_) {
	if ((!(_220b28c8d_IsU64(&(*_self_))))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*_self_)._field_data.cast<jule::U64>(&__jule_any_type4));;
}



inline jule::Bool _220b27bd2_ReadBool(_220074816_Const* _self_) {
	if ((!(_220b28dc0_IsBool(&(*_self_))))) {
		return false;;
	};
	return (*_self_)._field_data.cast<jule::Bool>(&__jule_any_type5);;
}



inline jule::Str _220b27d14_ReadStr(_220074816_Const* _self_) {
	if ((!(_220b29002_IsStr(&(*_self_))))) {
		return jule::Str();;
	};
	return (*_self_)._field_data.cast<jule::Str>(&__jule_any_type6);;
}



inline jule::F64 _220b27e46_ReadF64(_220074816_Const* _self_) {
	if ((!(_220b29134_IsF64(&(*_self_))))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*_self_)._field_data.cast<jule::F64>(&__jule_any_type7));;
}



inline jule::I64 _220b28078_AsI64(_220074816_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_2056830d7:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.cast<jule::I64>(&__jule_any_type3));;
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_20568314d:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.cast<jule::U64>(&__jule_any_type4)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_205682a43:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.cast<jule::F64>(&__jule_any_type7)));;
			}
		}
		else {
			_case_begin_205682180:;
			{
				return 0LL;;
			}
		}
		_match_end_2056829cc:;
	};
}



inline jule::U64 _220b281aa_AsU64(_220074816_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_205684a56:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.cast<jule::U64>(&__jule_any_type4));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_205684abc:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.cast<jule::I64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_20568458e:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.cast<jule::F64>(&__jule_any_type7)));;
			}
		}
		else {
			_case_begin_2056831c5:;
			{
				return 0LLU;;
			}
		}
		_match_end_2056844e5:;
	};
}



inline jule::F64 _220b282dc_AsF64(_220074816_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2056864c5:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.cast<jule::F64>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_20568653b:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.cast<jule::I64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_20568600d:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.cast<jule::U64>(&__jule_any_type4)));;
			}
		}
		else {
			_case_begin_205684b44:;
			{
				return 0LL;;
			}
		}
		_match_end_205685e64:;
	};
}



inline void _220b2841e_SetI64(_220074816_Const* _self_, jule::I64 _13825_x) {
	(*_self_)._field_data=jule::Any(_13825_x, &__jule_any_type3);
}



inline void _220b28551_SetU64(_220074816_Const* _self_, jule::U64 _14125_x) {
	(*_self_)._field_data=jule::Any(_14125_x, &__jule_any_type4);
}



inline void _220b28683_SetBool(_220074816_Const* _self_, jule::Bool _14426_x) {
	(*_self_)._field_data=jule::Any(_14426_x, &__jule_any_type5);
}



inline void _220b287b5_SetStr(_220074816_Const* _self_, jule::Str _14725_x) {
	(*_self_)._field_data=jule::Any(_14725_x, &__jule_any_type6);
}



inline void _220b288e7_SetF64(_220074816_Const* _self_, jule::F64 _15025_x) {
	(*_self_)._field_data=jule::Any(_15025_x, &__jule_any_type7);
}



inline void _220b28a29_SetNil(_220074816_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _220b28b5b_IsI64(_220074816_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_205689e9b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_20568a221:;
			{
				return false;;
			}
		}
		_match_end_20568a1bb:;
	};
}



inline jule::Bool _220b28c8d_IsU64(_220074816_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_20568aac3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_20568a441:;
			{
				return false;;
			}
		}
		_match_end_20568a2dc:;
	};
}



inline jule::Bool _220b28dc0_IsBool(_220074816_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_20568ad59:;
			{
				return true;;
			}
		}
		else {
			_case_begin_20568b541:;
			{
				return false;;
			}
		}
		_match_end_20568b4db:;
	};
}



inline jule::Bool _220b29002_IsStr(_220074816_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_20568c069:;
			{
				return true;;
			}
		}
		else {
			_case_begin_20568b94d:;
			{
				return false;;
			}
		}
		_match_end_20568b7e9:;
	};
}



inline jule::Bool _220b29134_IsF64(_220074816_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_20568c300:;
			{
				return true;;
			}
		}
		else {
			_case_begin_20568c9d7:;
			{
				return false;;
			}
		}
		_match_end_20568c982:;
	};
}



inline jule::Bool _220b29266_IsNil(_220074816_Const* _self_) {
	return ((*_self_)._field_data == nullptr);;
}



inline jule::Bool _220b29398_AreSameTypes(_220074816_Const* _self_, _220074816_Const _21327_x) {
	{
		
		if ((_220b28b5b_IsI64(&(*_self_)) == _220b28b5b_IsI64(&_21327_x))) {
			_case_begin_20568e599:;
			{
				return true;;
			}
		}
		else if ((_220b28c8d_IsU64(&(*_self_)) == _220b28c8d_IsU64(&_21327_x))) {
			_case_begin_20568dda1:;
			{
				return true;;
			}
		}
		else if ((_220b29134_IsF64(&(*_self_)) == _220b29134_IsF64(&_21327_x))) {
			_case_begin_20568de28:;
			{
				return true;;
			}
		}
		else if ((_220b28dc0_IsBool(&(*_self_)) == _220b28dc0_IsBool(&_21327_x))) {
			_case_begin_20568dea0:;
			{
				return true;;
			}
		}
		else if ((_220b29002_IsStr(&(*_self_)) == _220b29002_IsStr(&_21327_x))) {
			_case_begin_20568e027:;
			{
				return true;;
			}
		}
		else if ((_220b29266_IsNil(&(*_self_)) == _220b29266_IsNil(&_21327_x))) {
			_case_begin_20568e27a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_20568dd29:;
			{
				return false;;
			}
		}
		_match_end_20568dc5d:;
	};
}



inline jule::Bool _220b294ca_And(_220074816_Const* _self_, _220074816_Const _23818_x) {
	{
		
		if ((_220b28dc0_IsBool(&(*_self_)) && _220b28dc0_IsBool(&_23818_x))) {
			_case_begin_205692877:;
			{
				return (_220b27bd2_ReadBool(&(*_self_)) && _220b27bd2_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_20569217e:;
			{
				return false;;
			}
		}
		_match_end_205691c50:;
	};
}



inline jule::Bool _220b2960c_Or(_220074816_Const* _self_, _220074816_Const _24917_x) {
	{
		
		if ((_220b28dc0_IsBool(&(*_self_)) && _220b28dc0_IsBool(&_24917_x))) {
			_case_begin_205693c30:;
			{
				return (_220b27bd2_ReadBool(&(*_self_)) || _220b27bd2_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_20569356a:;
			{
				return false;;
			}
		}
		_match_end_205692bb8:;
	};
}



inline jule::Bool _220b2973e_Eq(_220074816_Const* _self_, _220074816_Const _26017_x) {
	{
		
		if (_220b29266_IsNil(&(*_self_))) {
			_case_begin_20569514e:;
			{
				return _220b29266_IsNil(&_26017_x);;
			}
		}
		else if (_220b28dc0_IsBool(&(*_self_))) {
			_case_begin_20569499a:;
			{
				return (_220b28dc0_IsBool(&_26017_x) && (_220b27bd2_ReadBool(&(*_self_)) == _220b27bd2_ReadBool(&_26017_x)));;
			}
		}
		else if (_220b29002_IsStr(&(*_self_))) {
			_case_begin_205694a11:;
			{
				return (_220b29002_IsStr(&_26017_x) && (_220b27d14_ReadStr(&(*_self_)) == _220b27d14_ReadStr(&_26017_x)));;
			}
		}
		else if (_220b28b5b_IsI64(&(*_self_))) {
			_case_begin_205694a88:;
			{
				return (_220b2796d_ReadI64(&(*_self_)) == _220b28078_AsI64(&_26017_x));;
			}
		}
		else if (_220b28c8d_IsU64(&(*_self_))) {
			_case_begin_205694b10:;
			{
				return (_220b27aa0_ReadU64(&(*_self_)) == _220b281aa_AsU64(&_26017_x));;
			}
		}
		else if (_220b29134_IsF64(&(*_self_))) {
			_case_begin_205694d52:;
			{
				return (_220b27e46_ReadF64(&(*_self_)) == _220b282dc_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_205694934:;
			{
				return false;;
			}
		}
		_match_end_205694082:;
	};
}



inline jule::Bool _220b29871_Lt(_220074816_Const* _self_, _220074816_Const _28717_x) {
	{
		
		if (_220b29002_IsStr(&(*_self_))) {
			_case_begin_205699098:;
			{
				return (_220b29002_IsStr(&_28717_x) && (_220b27d14_ReadStr(&(*_self_)) < _220b27d14_ReadStr(&_28717_x)));;
			}
		}
		else if (_220b28b5b_IsI64(&(*_self_))) {
			_case_begin_20569895a:;
			{
				return (_220b2796d_ReadI64(&(*_self_)) < _220b28078_AsI64(&_28717_x));;
			}
		}
		else if (_220b28c8d_IsU64(&(*_self_))) {
			_case_begin_2056989c1:;
			{
				return (_220b27aa0_ReadU64(&(*_self_)) < _220b281aa_AsU64(&_28717_x));;
			}
		}
		else if (_220b29134_IsF64(&(*_self_))) {
			_case_begin_205698a37:;
			{
				return (_220b27e46_ReadF64(&(*_self_)) < _220b282dc_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_20569545c:;
			{
				return false;;
			}
		}
		_match_end_205695391:;
	};
}



inline jule::Bool _220b299a3_LtEq(_220074816_Const* _self_, _220074816_Const _31019_x) {
	{
		
		if (_220b29002_IsStr(&(*_self_))) {
			_case_begin_20569be8b:;
			{
				return (_220b29002_IsStr(&_31019_x) && (_220b27d14_ReadStr(&(*_self_)) <= _220b27d14_ReadStr(&_31019_x)));;
			}
		}
		else if (_220b28b5b_IsI64(&(*_self_))) {
			_case_begin_20569b84d:;
			{
				return (_220b2796d_ReadI64(&(*_self_)) <= _220b28078_AsI64(&_31019_x));;
			}
		}
		else if (_220b28c8d_IsU64(&(*_self_))) {
			_case_begin_20569b8b4:;
			{
				return (_220b27aa0_ReadU64(&(*_self_)) <= _220b281aa_AsU64(&_31019_x));;
			}
		}
		else if (_220b29134_IsF64(&(*_self_))) {
			_case_begin_20569b92a:;
			{
				return (_220b27e46_ReadF64(&(*_self_)) <= _220b282dc_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_2056993a6:;
			{
				return false;;
			}
		}
		_match_end_2056992da:;
	};
}



inline jule::Bool _220b29ad5_Gt(_220074816_Const* _self_, _220074816_Const _33317_x) {
	{
		
		if (_220b29002_IsStr(&(*_self_))) {
			_case_begin_20569ed7e:;
			{
				return (_220b29002_IsStr(&_33317_x) && (_220b27d14_ReadStr(&(*_self_)) > _220b27d14_ReadStr(&_33317_x)));;
			}
		}
		else if (_220b28b5b_IsI64(&(*_self_))) {
			_case_begin_20569e741:;
			{
				return (_220b2796d_ReadI64(&(*_self_)) > _220b28078_AsI64(&_33317_x));;
			}
		}
		else if (_220b28c8d_IsU64(&(*_self_))) {
			_case_begin_20569e7a7:;
			{
				return (_220b27aa0_ReadU64(&(*_self_)) > _220b281aa_AsU64(&_33317_x));;
			}
		}
		else if (_220b29134_IsF64(&(*_self_))) {
			_case_begin_20569e81d:;
			{
				return (_220b27e46_ReadF64(&(*_self_)) > _220b282dc_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_20569c299:;
			{
				return false;;
			}
		}
		_match_end_20569c1cd:;
	};
}



inline jule::Bool _220b29c17_GtEq(_220074816_Const* _self_, _220074816_Const _35619_x) {
	{
		
		if (_220b29002_IsStr(&(*_self_))) {
			_case_begin_2056a2c72:;
			{
				return (_220b29002_IsStr(&_35619_x) && (_220b27d14_ReadStr(&(*_self_)) >= _220b27d14_ReadStr(&_35619_x)));;
			}
		}
		else if (_220b28b5b_IsI64(&(*_self_))) {
			_case_begin_2056a2634:;
			{
				return (_220b2796d_ReadI64(&(*_self_)) >= _220b28078_AsI64(&_35619_x));;
			}
		}
		else if (_220b28c8d_IsU64(&(*_self_))) {
			_case_begin_2056a269a:;
			{
				return (_220b27aa0_ReadU64(&(*_self_)) >= _220b281aa_AsU64(&_35619_x));;
			}
		}
		else if (_220b29134_IsF64(&(*_self_))) {
			_case_begin_2056a2711:;
			{
				return (_220b27e46_ReadF64(&(*_self_)) >= _220b282dc_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_2056a018c:;
			{
				return false;;
			}
		}
		_match_end_2056a00c1:;
	};
}



inline jule::Bool _220b29d49_Add(_220074816_Const* _self_, _220074816_Const _37722_x) {
	{
		
		if (_220b29002_IsStr(&(*_self_))) {
			_case_begin_2056a5b65:;
			{
				if ((!(_220b29002_IsStr(&_37722_x)))) {
					return false;;
				};
				_220b287b5_SetStr(&(*_self_), (_220b27d14_ReadStr(&(*_self_)) + _220b27d14_ReadStr(&_37722_x)));
			}
		}
		else if (_220b29134_IsF64(&(*_self_))) {
			_case_begin_2056a5527:;
			{
				_220b288e7_SetF64(&(*_self_), static_cast<jule::F64>((_220b27e46_ReadF64(&(*_self_)) + _220b282dc_AsF64(&_37722_x))));
			}
		}
		else if (_220b28b5b_IsI64(&(*_self_))) {
			_case_begin_2056a558d:;
			{
				if (_220b29134_IsF64(&_37722_x)) {
					_220b288e7_SetF64(&(*_self_), static_cast<jule::F64>((_220b282dc_AsF64(&(*_self_)) + _220b27e46_ReadF64(&_37722_x))));
				} else {
					_220b2841e_SetI64(&(*_self_), static_cast<jule::I64>((_220b2796d_ReadI64(&(*_self_)) + _220b28078_AsI64(&_37722_x))));
				};
			}
		}
		else if (_220b28c8d_IsU64(&(*_self_))) {
			_case_begin_2056a5604:;
			{
				if (_220b29134_IsF64(&_37722_x)) {
					_220b288e7_SetF64(&(*_self_), static_cast<jule::F64>((_220b282dc_AsF64(&(*_self_)) + _220b27e46_ReadF64(&_37722_x))));
				} else {
					_220b28551_SetU64(&(*_self_), static_cast<jule::U64>((_220b27aa0_ReadU64(&(*_self_)) + _220b281aa_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_2056a3080:;
			{
				return false;;
			}
		}
		_match_end_2056a2eb4:;
	};
	return true;;
}



inline jule::Bool _220b29e7b_Sub(_220074816_Const* _self_, _220074816_Const _40622_x) {
	{
		
		if (_220b29134_IsF64(&(*_self_))) {
			_case_begin_2056ab264:;
			{
				_220b288e7_SetF64(&(*_self_), static_cast<jule::F64>((_220b27e46_ReadF64(&(*_self_)) - _220b282dc_AsF64(&_40622_x))));
			}
		}
		else if (_220b28b5b_IsI64(&(*_self_))) {
			_case_begin_2056aaa8d:;
			{
				if (_220b29134_IsF64(&_40622_x)) {
					_220b288e7_SetF64(&(*_self_), static_cast<jule::F64>((_220b282dc_AsF64(&(*_self_)) - _220b27e46_ReadF64(&_40622_x))));
				} else {
					_220b2841e_SetI64(&(*_self_), static_cast<jule::I64>((_220b2796d_ReadI64(&(*_self_)) - _220b28078_AsI64(&_40622_x))));
				};
			}
		}
		else if (_220b28c8d_IsU64(&(*_self_))) {
			_case_begin_2056aab04:;
			{
				if (_220b29134_IsF64(&_40622_x)) {
					_220b288e7_SetF64(&(*_self_), static_cast<jule::F64>((_220b282dc_AsF64(&(*_self_)) - _220b27e46_ReadF64(&_40622_x))));
				} else {
					_220b28551_SetU64(&(*_self_), static_cast<jule::U64>((_220b27aa0_ReadU64(&(*_self_)) - _220b281aa_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_2056aaa27:;
			{
				return false;;
			}
		}
		_match_end_2056aa21e:;
	};
	return true;;
}



inline jule::Bool _220b2a0ad_Mul(_220074816_Const* _self_, _220074816_Const _43022_x) {
	{
		
		if (_220b29134_IsF64(&(*_self_))) {
			_case_begin_2056b0862:;
			{
				_220b288e7_SetF64(&(*_self_), static_cast<jule::F64>((_220b27e46_ReadF64(&(*_self_)) * _220b282dc_AsF64(&_43022_x))));
			}
		}
		else if (_220b28b5b_IsI64(&(*_self_))) {
			_case_begin_2056b018b:;
			{
				if (_220b29134_IsF64(&_43022_x)) {
					_220b288e7_SetF64(&(*_self_), static_cast<jule::F64>((_220b282dc_AsF64(&(*_self_)) * _220b27e46_ReadF64(&_43022_x))));
				} else {
					_220b2841e_SetI64(&(*_self_), static_cast<jule::I64>((_220b2796d_ReadI64(&(*_self_)) * _220b28078_AsI64(&_43022_x))));
				};
			}
		}
		else if (_220b28c8d_IsU64(&(*_self_))) {
			_case_begin_2056b0202:;
			{
				if (_220b29134_IsF64(&_43022_x)) {
					_220b288e7_SetF64(&(*_self_), static_cast<jule::F64>((_220b282dc_AsF64(&(*_self_)) * _220b27e46_ReadF64(&_43022_x))));
				} else {
					_220b28551_SetU64(&(*_self_), static_cast<jule::U64>((_220b27aa0_ReadU64(&(*_self_)) * _220b281aa_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_2056b0125:;
			{
				return false;;
			}
		}
		_match_end_2056ae6c9:;
	};
	return true;;
}



inline jule::Bool _220b2a1e0_Div(_220074816_Const* _self_, _220074816_Const _45822_x) {
	{
		
		if (_220b29134_IsF64(&(*_self_))) {
			_case_begin_2056b4e60:;
			{
				jule::F64 _46117_l = _220b282dc_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_220b288e7_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_220b27e46_ReadF64(&(*_self_)),_46117_l)));
			}
		}
		else if (_220b28b5b_IsI64(&(*_self_))) {
			_case_begin_2056b4789:;
			{
				jule::F64 _46717_l = _220b282dc_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_220b288e7_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_220b282dc_AsF64(&(*_self_)),_46717_l)));
			}
		}
		else if (_220b28c8d_IsU64(&(*_self_))) {
			_case_begin_2056b4800:;
			{
				jule::F64 _47317_l = _220b282dc_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_220b288e7_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_220b282dc_AsF64(&(*_self_)),_47317_l)));
			}
		}
		else {
			_case_begin_2056b4723:;
			{
				return false;;
			}
		}
		_match_end_2056b3cc7:;
	};
	return true;;
}



inline jule::Bool _220b2a322_Mod(_220074816_Const* _self_, _220074816_Const _48722_x) {
	{
		
		if (_220b28b5b_IsI64(&(*_self_))) {
			_case_begin_2056b94b4:;
			{
				jule::I64 _49017_l = _220b28078_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_220b2841e_SetI64(&(*_self_), static_cast<jule::I64>(jule::mod(_220b2796d_ReadI64(&(*_self_)),_49017_l)));
			}
		}
		else if (_220b28c8d_IsU64(&(*_self_))) {
			_case_begin_2056b8cee:;
			{
				jule::U64 _49617_l = _220b281aa_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_220b28551_SetU64(&(*_self_), static_cast<jule::U64>(jule::mod(_220b27aa0_ReadU64(&(*_self_)),_49617_l)));
			}
		}
		else {
			_case_begin_2056b8c88:;
			{
				return false;;
			}
		}
		_match_end_2056b8bde:;
	};
	return true;;
}



inline jule::Bool _220b2a454_BitwiseAnd(_220074816_Const* _self_, _220074816_Const _50929_x) {
	{
		
		if (_220b28b5b_IsI64(&(*_self_))) {
			_case_begin_2056bc671:;
			{
				_220b2841e_SetI64(&(*_self_), static_cast<jule::I64>((_220b2796d_ReadI64(&(*_self_)) & _220b28078_AsI64(&_50929_x))));
			}
		}
		else if (_220b28c8d_IsU64(&(*_self_))) {
			_case_begin_2056bbeab:;
			{
				_220b28551_SetU64(&(*_self_), static_cast<jule::U64>((_220b27aa0_ReadU64(&(*_self_)) & _220b281aa_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_2056bbe45:;
			{
				return false;;
			}
		}
		_match_end_2056bbd9b:;
	};
	return true;;
}



inline jule::Bool _220b2a586_BitwiseOr(_220074816_Const* _self_, _220074816_Const _52328_x) {
	{
		
		if (_220b28b5b_IsI64(&(*_self_))) {
			_case_begin_2056be783:;
			{
				_220b2841e_SetI64(&(*_self_), static_cast<jule::I64>((_220b2796d_ReadI64(&(*_self_)) | _220b28078_AsI64(&_52328_x))));
			}
		}
		else if (_220b28c8d_IsU64(&(*_self_))) {
			_case_begin_2056be0bd:;
			{
				_220b28551_SetU64(&(*_self_), static_cast<jule::U64>((_220b27aa0_ReadU64(&(*_self_)) | _220b281aa_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_2056be057:;
			{
				return false;;
			}
		}
		_match_end_2056bde8b:;
	};
	return true;;
}



inline jule::Bool _220b2a6b8_Xor(_220074816_Const* _self_, _220074816_Const _53722_x) {
	{
		
		if (_220b28b5b_IsI64(&(*_self_))) {
			_case_begin_2056c1895:;
			{
				_220b2841e_SetI64(&(*_self_), static_cast<jule::I64>((_220b2796d_ReadI64(&(*_self_)) ^ _220b28078_AsI64(&_53722_x))));
			}
		}
		else if (_220b28c8d_IsU64(&(*_self_))) {
			_case_begin_2056c11d0:;
			{
				_220b28551_SetU64(&(*_self_), static_cast<jule::U64>((_220b27aa0_ReadU64(&(*_self_)) ^ _220b281aa_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_2056c1169:;
			{
				return false;;
			}
		}
		_match_end_2056c109d:;
	};
	return true;;
}



inline jule::Bool _220b2a7ea_Lshift(_220074816_Const* _self_, _220074816_Const _55125_x) {
	{
		
		if (_220b28b5b_IsI64(&(*_self_))) {
			_case_begin_2056c39a7:;
			{
				jule::I64 _55417_l = _220b28078_AsI64(&(*_self_));;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _220b281aa_AsU64(&_55125_x);;
					_220b2841e_SetI64(&(*_self_), static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_220b2aa5e_lshiftUnsig((*_self_),_55125_x);
				};
			}
		}
		else if (_220b28c8d_IsU64(&(*_self_))) {
			_case_begin_2056c32e2:;
			{
				_220b2aa5e_lshiftUnsig((*_self_),_55125_x);
			}
		}
		else {
			_case_begin_2056c327b:;
			{
				return false;;
			}
		}
		_match_end_2056c31b0:;
	};
	return true;;
}



inline jule::Bool _220b2a92c_Rshift(_220074816_Const* _self_, _220074816_Const _57125_x) {
	{
		
		if (_220b28b5b_IsI64(&(*_self_))) {
			_case_begin_2056c636c:;
			{
				jule::I64 _57417_l = _220b28078_AsI64(&(*_self_));;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _220b281aa_AsU64(&_57125_x);;
					_220b2841e_SetI64(&(*_self_), static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_220b2ab91_rshiftUnsig((*_self_),_57125_x);
				};
			}
		}
		else if (_220b28c8d_IsU64(&(*_self_))) {
			_case_begin_2056c5ba7:;
			{
				_220b2ab91_rshiftUnsig((*_self_),_57125_x);
			}
		}
		else {
			_case_begin_2056c5b41:;
			{
				return false;;
			}
		}
		_match_end_2056c5a75:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _220074816_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21eec31e3_FieldIns> _21ed76371_instance(jule::Ptr<_21ee92206_Field> _self_) {
	return jule::new_ptr<_21eec31e3_FieldIns>(_21eec31e3_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _21ee92206_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21ee9984b_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21eec33d0_StructIns> _21ee7994c_instance(jule::Ptr<_21eec3006_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_21eec33d0_StructIns> _9917_ins = jule::new_ptr<_21eec33d0_StructIns>(_21eec33d0_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_21eec31e3_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_220b8746c_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__220b32b98_new(), });;
	{
		auto &expr = _self_.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_20593a559:;
		if (it != expr.end()) {
			jule::Ptr<_220b8746c_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_220b8746c_Var>((*(_10621_s))));;
			}
			_iter_next_20593a559:;
			++it;
			goto _iter_begin_20593a559;
		}
		_iter_end_20593a559:;
	};
	{
		auto &expr = _self_.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_20593b67b:;
		if (it != expr.end()) {
			jule::Ptr<_21ee92206_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_21ed76371_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _220c0c5d0_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_20593b67b:;
			++it;
			goto _iter_begin_20593b67b;
		}
		_iter_end_20593b67b:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_220b31636_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto &expr = _self_.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_20593e12e:;
			if (it != expr.end()) {
				jule::Ptr<_220b31636_Fn> _12125_f = *it;
				{
					jule::Ptr<_220b31636_Fn> _12225_fins = jule::new_ptr<_220b31636_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_20593e12e:;
				++it;
				goto _iter_begin_20593e12e;
			}
			_iter_end_20593e12e:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_21eec33d0_StructIns> _21ee7d720_appendInstance(_21eec3006_Struct* _self_, jule::Ptr<_21eec33d0_StructIns>& _13338_ins) {
	if ((((*_self_)._field_Generics.len() == 0LL) && ((*_self_)._field_Instances.len() == 1LL))) {
		return (*_self_)._field_Instances[0LL];;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_205941384:;
		if (it != expr.end()) {
			jule::Ptr<_21eec33d0_StructIns> _13921_ains = *it;
			{
				if (_21ee9502d_Same(_13921_ains.ptr(), _13338_ins)) {
					return _13921_ains;;
				};
			}
			_iter_next_205941384:;
			++it;
			goto _iter_begin_205941384;
		}
		_iter_end_205941384:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_13338_ins);;
	return nullptr;;
}



inline jule::Ptr<_220b31636_Fn> _21ee7e479_FindMethod(_21eec3006_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_20594286e:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_20594286e:;
			++it;
			goto _iter_begin_20594286e;
		}
		_iter_end_20594286e:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b8746c_Var> _21ee825d1_FindStatic(_21eec3006_Struct* _self_, jule::Str _16229_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_205943a18:;
		if (it != expr.end()) {
			jule::Ptr<_220b8746c_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_205943a18:;
			++it;
			goto _iter_begin_205943a18;
		}
		_iter_end_205943a18:;
	};
	return nullptr;;
}



inline jule::Ptr<_21ee92206_Field> _21ee81a31_FindField(_21eec3006_Struct* _self_, jule::Str _17328_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_205943e8b:;
		if (it != expr.end()) {
			jule::Ptr<_21ee92206_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_205943e8b:;
			++it;
			goto _iter_begin_205943e8b;
		}
		_iter_end_205943e8b:;
	};
	return nullptr;;
}



inline jule::Bool _21ee83e0c_IsImplements(_21eec3006_Struct* _self_, jule::Ptr<_220b376b4_Trait> _18327_t) {
	{
		auto &expr = (*_self_)._field_Implements;
		auto it = expr.begin();
		_iter_begin_205944db0:;
		if (it != expr.end()) {
			jule::Ptr<_220b376b4_Trait> &_18416_it = *it;
			{
				if ((_18327_t == _18416_it)) {
					return true;;
				};
			}
			_iter_next_205944db0:;
			++it;
			goto _iter_begin_205944db0;
		}
		_iter_end_205944db0:;
	};
	return false;;
}



inline jule::Bool _21ee83208_IsDerives(_21eec3006_Struct* _self_, jule::Str _19324_ident) {
	{
		auto &expr = (*_self_)._field_Directives;
		auto it = expr.begin();
		_iter_begin_205945d39:;
		if (it != expr.end()) {
			jule::Ptr<_21ee6d710_Directive> &_19416_d = *it;
			{
				if ((_19416_d.get()._field_Tag.get()._field_Kind == jule::Str("derive", 6))) {
					if (((_19416_d.get()._field_Args.len() == 1LL) && (_19416_d.get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_205945d39:;
			++it;
			goto _iter_begin_205945d39;
		}
		_iter_end_205945d39:;
	};
	return false;;
}



inline jule::Bool _21ee871c9_IsUses(_21eec3006_Struct* _self_, jule::Ptr<_21eec3006_Struct> _20521_s) {
	{
		auto &expr = (*_self_)._field_Uses;
		auto it = expr.begin();
		_iter_begin_205948556:;
		if (it != expr.end()) {
			jule::Ptr<_21eec3006_Struct> &_20616_u = *it;
			{
				while ((_20521_s == _20616_u)) {
					{
						return true;;
					}
				_iter_next_205948cb5:;
				}
				_iter_end_205948cb5:;;
			}
			_iter_next_205948556:;
			++it;
			goto _iter_begin_205948556;
		}
		_iter_end_205948556:;
	};
	return false;;
}



inline jule::Bool _21ee8788e_HasRefAccessible(_21eec3006_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_205948e80:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> &_21616_m = *it;
			{
				if (((_21616_m.get()._field_Params.len() > 0LL) && _22001b35c_IsRef(_21616_m.get()._field_Params[0LL].ptr()))) {
					return true;;
				};
			}
			_iter_next_205948e80:;
			++it;
			goto _iter_begin_205948e80;
		}
		_iter_end_205948e80:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _21eec3006_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eec31e3_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22001ab86_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220049577_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2acc3_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2aeb0_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2b19c_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2b389_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2b576_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2b763_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2b950_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2bb3c_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2bd29_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2c016_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2c203_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2c3e0_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2c5cc_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2c9ea_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2cbd7_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2cdc4_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2d0b1_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2d29d_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2d48a_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2d677_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2d864_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2da51_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2dc3d_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2de2a_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2e117_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2e304_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2e4e1_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2e6cd_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2e8ba_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b2c7b9_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b3002a_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b30217_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b30404_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b305e1_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b307cd_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b309ba_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b30ba7_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b30d94_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b3125c_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_220b31823_ParamIns> _22000cb12_instance(jule::Ptr<_220b31449_Param> _self_) {
	return jule::new_ptr<_220b31823_ParamIns>(_220b31823_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _22001a45a_IsSelf(_220b31449_Param* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));;
}



inline jule::Bool _22001b35c_IsRef(_220b31449_Param* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _220b31449_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _22001c270_IsVoid(_220b31636_Fn* _self_) {
	return ((*_self_)._field_Result == nullptr);;
}



inline jule::Bool _22004d735_IsMethod(_220b31636_Fn* _self_) {
	return ((*_self_)._field_Owner != nullptr);;
}



inline jule::Bool _220057772_IsEntryPoint(_220b31636_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("main", 4));;
}



inline jule::Bool _22000d34e_IsInit(_220b31636_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("init", 4));;
}



inline jule::Bool _2200105c6_IsAnon(_220b31636_Fn* _self_) {
	return _21d82127e_IsAnonIdent((*_self_)._field_Ident);;
}



inline jule::Bool _220012166_AnyVar(_220b31636_Fn* _self_) {
	return (((*_self_)._field_Result != nullptr) && ((*_self_)._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_220b31a10_FnIns> _220012e14_instanceForce(jule::Ptr<_220b31636_Fn> _self_) {
	jule::Ptr<_220b31a10_FnIns> _10017_ins = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_220b42b20_Scope>(), ._field_Refers=static__220b32b98_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_220b31823_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto &expr = _self_.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_20595ce2d:;
		if (it != expr.end()) {
			jule::Ptr<_220b31449_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_22000cb12_instance(_10721_p));;
			}
			_iter_next_20595ce2d:;
			++it;
			goto _iter_begin_20595ce2d;
		}
		_iter_end_20595ce2d:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_220b31a10_FnIns> _22001c89c_instance(jule::Ptr<_220b31636_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _220012e14_instanceForce(_self_);;
}



inline jule::Ptr<_220b31a10_FnIns> _22000b869_appendInstance(_220b31636_Fn* _self_, jule::Ptr<_220b31a10_FnIns>& _12838_ins) {
	if (((*_self_)._field_Generics.len() == 0LL)) {
		if (((*_self_)._field_Instances.len() == 1LL)) {
			return (*_self_)._field_Instances[0LL];;
		};
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;;
	};
	if (((*_self_)._field_Instances.len() == 0LL)) {
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_2059628d3:;
		if (it != expr.end()) {
			jule::Ptr<_220b31a10_FnIns> _14421_ains = *it;
			{
				if (_220b32439_Same(_14421_ains.ptr(), _12838_ins)) {
					return _14421_ains;;
				};
			}
			_iter_next_2059628d3:;
			++it;
			goto _iter_begin_2059628d3;
		}
		_iter_end_2059628d3:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _220b31636_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _220044c48_Str(_220b31823_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_Decl.get()._field_Reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_22001a45a_IsSelf((*_self_)._field_Decl.ptr())) {
		if (_22001b35c_IsRef((*_self_)._field_Decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;;
	};
	if ((*_self_)._field_Decl.get()._field_Variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_Kind != nullptr)) {
		_16617_s+=_220c0b359_Str((*_self_)._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _220b31823_ParamIns _Src) {
	_Stream << _220044c48_Str(&_Src);
	return _Stream;
}



inline jule::Str _22000e7d4_Str(_220b31a10_FnIns* _self_) {
	;
	return _220b3256b_GetKindStr(&(*_self_), false);;
}



inline jule::Bool _220b31bec_Equal(jule::Ptr<_220b31a10_FnIns> _self_, jule::Ptr<_220c0ae5d_TypeKind> _21721_other) {
	jule::Ptr<_220b31a10_FnIns> _21813_f = _220c0e4d3_Fn(_21721_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _220b31d2e_EqualFn(_self_, _21813_f);;
}



inline jule::Bool _220b31d2e_EqualFn(jule::Ptr<_220b31a10_FnIns> _self_, jule::Ptr<_220b31a10_FnIns>& _22824_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != _22824_f.get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != _22824_f.get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_22001c270_IsVoid(_self_.get()._field_Decl.ptr()) != _22001c270_IsVoid(_22824_f.get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_220b31823_ParamIns>,jule::Ptr<_220b31823_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_220b31823_ParamIns>,jule::Ptr<_220b31823_ParamIns>)>([=](jule::Ptr<_220b31823_ParamIns> _23830_p1, jule::Ptr<_220b31823_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_22001a45a_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_22001a45a_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_22001b35c_IsRef(_23830_p1.get()._field_Decl.ptr()) != _22001b35c_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _220c0b667_Equal(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if ((_22824_f.get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i],_22824_f.get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_205970704:;
	}
	_iter_end_205970704:;;
	if ((!(_22001c270_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_220c0b667_Equal(_self_.get()._field_Result, _22824_f.get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _220b31e61_equalTrait(jule::Ptr<_220b31a10_FnIns> _self_, jule::Ptr<_220b31a10_FnIns>& _28727_other) {
	if ((!(_220b31d2e_EqualFn(_self_, _28727_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != _28727_other.get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>> _220b32093_Types(_220b31a10_FnIns* _self_) {
	{
		
		if (((*_self_)._field_Result == nullptr)) {
			_case_begin_205973c35:;
			{
				return nullptr;;
			}
		}
		else if ((_220c0ee84_Tup((*_self_)._field_Result.ptr()) == nullptr)) {
			_case_begin_205973c9b:;
			{
				return jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>>::make({(*_self_)._field_Result});;
			}
		}
		else {
			_case_begin_205973bbe:;
			{
				return _220c0ee84_Tup((*_self_)._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_205973b03:;
	};
}



inline jule::Bool _220b321c5_IsBuiltin(_220b31a10_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);;
}



inline jule::Bool _220b32307_IsAnon(_220b31a10_FnIns* _self_) {
	return ((*_self_)._field_Anon || (((*_self_)._field_Decl != nullptr) && _2200105c6_IsAnon((*_self_)._field_Decl.ptr())));;
}



inline jule::Bool _220b32439_Same(_220b31a10_FnIns* _self_, jule::Ptr<_220b31a10_FnIns> _32419_f) {
	if ((((*_self_)._field_Decl != _32419_f.get()._field_Decl) || (_32419_f.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_20597760c:;
		if (it != expr.end()) {
			jule::I64 _32913_i = it - expr.begin();
			jule::Ptr<_220c09731_InsGeneric> &_32916_g = *it;
			{
				if ((!(_220c0b667_Equal(_32916_g.get()._field_Kind, _32419_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_20597760c:;
			++it;
			_32913_i++;
			goto _iter_begin_20597760c;
		}
		_iter_end_20597760c:;
	};
	return true;;
}



inline jule::Str _220b3256b_GetKindStr(_220b31a10_FnIns* _self_, jule::Bool _34025_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Unsafety) {
		_34117_s+=jule::Str("unsafe ", 7);
	};
	_34117_s+=jule::Str("fn", 2);
	if ((_34025_ident && ((*_self_)._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*_self_)._field_Decl.get()._field_Ident);
	};
	_34117_s+=jule::Str("(", 1);
	jule::I64 _35413_n = (*_self_)._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_Params;
			auto it = expr.begin();
			_iter_begin_20597b446:;
			if (it != expr.end()) {
				jule::Ptr<_220b31823_ParamIns> &_35620_p = *it;
				{
					_34117_s+=_220044c48_Str(_35620_p.ptr());
					_34117_s+=jule::Str(",", 1);
				}
				_iter_next_20597b446:;
				++it;
				goto _iter_begin_20597b446;
			}
			_iter_end_20597b446:;
		};
		(_34117_s).mut_slice(0LL,(_34117_s.len() - 1LL));;
	};
	_34117_s+=jule::Str(")", 1);
	if ((*_self_)._field_Decl.get()._field_Exceptional) {
		_34117_s+=jule::Str("!", 1);
	};
	if ((!(_22001c270_IsVoid((*_self_)._field_Decl.ptr())))) {
		_34117_s+=jule::Str(":", 1);
		_34117_s+=_220c0b359_Str((*_self_)._field_Result.ptr());
	};
	return _34117_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _220b31a10_FnIns _Src) {
	_Stream << _22000e7d4_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_220b329ab_ReferenceStack> static__220b32b98_new(void) {
	return jule::new_ptr<_220b329ab_ReferenceStack>(_220b329ab_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _220b32cca_Len(_220b329ab_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());;
}



inline jule::Any _220b32e0c_At(_220b329ab_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*_self_)._field_buffer[_6821_i];;
}



inline void _220b3303e_Push(_220b329ab_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(_7327_ref);;
}



inline jule::Bool _206058319_Exist(_220b329ab_ReferenceStack* _self_, jule::Ptr<_220b31a10_FnIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_206059639:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((__jule_any_type8_compare(_7916_ref, _7823_t))) {
					return true;;
				};
			}
			_iter_next_206059639:;
			++it;
			goto _iter_begin_206059639;
		}
		_iter_end_206059639:;
	};
	return false;;
}

inline jule::Bool _20606c2c8_Exist(_220b329ab_ReferenceStack* _self_, jule::Ptr<_220b8746c_Var> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_20606d5a4:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((__jule_any_type9_compare(_7916_ref, _7823_t))) {
					return true;;
				};
			}
			_iter_next_20606d5a4:;
			++it;
			goto _iter_begin_20606d5a4;
		}
		_iter_end_20606d5a4:;
	};
	return false;;
}

inline jule::Bool _20611431a_Exist(_220b329ab_ReferenceStack* _self_, jule::Ptr<_21eec33d0_StructIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_20611563a:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((__jule_any_type10_compare(_7916_ref, _7823_t))) {
					return true;;
				};
			}
			_iter_next_20611563a:;
			++it;
			goto _iter_begin_20611563a;
		}
		_iter_end_20611563a:;
	};
	return false;;
}

inline jule::Bool _20638aae1_Exist(_220b329ab_ReferenceStack* _self_, jule::Ptr<_220b376b4_Trait> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_20638bd45:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((__jule_any_type11_compare(_7916_ref, _7823_t))) {
					return true;;
				};
			}
			_iter_next_20638bd45:;
			++it;
			goto _iter_begin_20638bd45;
		}
		_iter_end_20638bd45:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _220b329ab_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b332a3_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_220b3522d_symbolBuilder> _220b355d5_getRoot(jule::Ptr<_220b3522d_symbolBuilder> _self_) {
	jule::Ptr<_220b3522d_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_205993eb9:;
	}
	_iter_end_205993eb9:;;
	return _31617_root;;
}



inline void _220b35717_pushErr(_220b3522d_symbolBuilder* _self_, jule::Ptr<_21d81d743_Token>& _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_220b67a57_compilerErr(_32327_token,true,_32342_fmt,_32355_args));;
}



inline void _220b35849_pushErrText(_220b3522d_symbolBuilder* _self_, jule::Ptr<_21d81d743_Token>& _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_220b67a57_compilerErr(_32731_token,false,_32746_fmt,_32759_args));;
}



inline void _220b3597b_pushSuggestion(_220b3522d_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_220b68edc_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33233_fmt,_33246_args);
	};
}



inline jule::Bool _220b35aad_checkCppUseDeclPath(_220b3522d_symbolBuilder* _self_, jule::Ptr<_21eebdebe_UseDecl>& _33639_decl, jule::Str _33655_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _33713_ext = _21c4e30b7_Ext(_33655_path);;
	if (((!(_21d4d8265_IsValidHeaderExt(_33713_ext))) && (!(_21d4d850c_IsValidCppExt(_33713_ext))))) {
		_220b35717_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext, &__jule_any_type6)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_21c3cc820_Status> _34413_info = ({
		auto except = static__21b5d882e_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_220b35717_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath, &__jule_any_type6)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_21c3cc820_Status>(nullptr);});
	});;
	if (_21b6d2a49_IsDir(_34413_info.ptr())) {
		_220b35717_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath, &__jule_any_type6)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_220b61325_ImportInfo> _220b35be0_buildCppHeaderImport(_220b3522d_symbolBuilder* _self_, jule::Ptr<_21eebdebe_UseDecl>& _35644_decl) {
	jule::Str _35717_path = _35644_decl.get()._field_LinkPath;;
	if ((!(_21d4d8045_IsStdHeaderPath(_35644_decl.get()._field_LinkPath)))) {
		_35717_path=_21c4e1aee_Join(jule::Slice<jule::Str>::make({_21d8244c4_Dir(_35644_decl.get()._field_Token.get()._field_File.ptr()),_35644_decl.get()._field_LinkPath}));
		jule::Bool _36121_ok = _220b35aad_checkCppUseDeclPath(&(*_self_), _35644_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21c4ab327_Abs(_35717_path);
			_35717_path = __jule_assign_result.__jule_result_arg0;
			_36121_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_36121_ok))) {
			_220b35717_pushErr(&(*_self_), _35644_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35644_decl.get()._field_LinkPath, &__jule_any_type6)}));
		};
	};
	return jule::new_ptr<_220b61325_ImportInfo>(_220b61325_ImportInfo{._field_Token=_35644_decl.get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=_35644_decl.get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_220b61325_ImportInfo> _220b35d22_buildStdImport(_220b3522d_symbolBuilder* _self_, jule::Ptr<_21eebdebe_UseDecl>& _38438_decl) {
	jule::Str _38517_path = _38438_decl.get()._field_LinkPath.slice(5LL);;
	_38517_path=_21d46e1eb_Replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38517_path=_21c4e1aee_Join(jule::Slice<jule::Str>::make({_21d52d673_PathStdlib,_38517_path}));
	jule::Bool _38820_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21c4ab327_Abs(_38517_path);
		_38517_path = __jule_assign_result.__jule_result_arg0;
		_38820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_38820_ok))) {
		_220b35717_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath, &__jule_any_type6)}));
		return nullptr;;
	};
	jule::Ptr<_21c3cc820_Status> _39513_info = ({
		auto except = static__21b5d882e_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_220b35717_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath, &__jule_any_type6)}));
			return nullptr;;
		} jule::Ptr<_21c3cc820_Status>(nullptr);});
	});;
	if ((!(_21b6d2a49_IsDir(_39513_info.ptr())))) {
		_220b35717_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath, &__jule_any_type6)}));
		return nullptr;;
	};
	jule::I64 _40513_i = (_21d464763_FindLast(_38438_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38438_decl.get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_220b61325_ImportInfo>(_220b61325_ImportInfo{._field_Token=_38438_decl.get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=_38438_decl.get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=_38438_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=_38438_decl.get()._field_Full, ._field_Package=jule::new_ptr<_220b6427e_Package>(_220b6427e_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_220b61325_ImportInfo> _220b35e54_buildIdentImport(jule::Ptr<_220b3522d_symbolBuilder> _self_, jule::Ptr<_21eebdebe_UseDecl>& _42341_decl) {
	jule::Str _42413_modPath = _220b5d6a7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._220b5c81b_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_220b35717_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_220b3597b_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _43117_path = _42341_decl.get()._field_LinkPath;;
	_43117_path=_21d46e1eb_Replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_43117_path=_21c4e1aee_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21c4ab327_Abs(_43117_path);
		_43117_path = __jule_assign_result.__jule_result_arg0;
		_43520_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_43520_ok))) {
		_220b35717_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath, &__jule_any_type6)}));
		return nullptr;;
	};
	jule::Ptr<_21c3cc820_Status> _44213_info = ({
		auto except = static__21b5d882e_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_220b35717_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath, &__jule_any_type6)}));
			return nullptr;;
		} jule::Ptr<_21c3cc820_Status>(nullptr);});
	});;
	if ((!(_21b6d2a49_IsDir(_44213_info.ptr())))) {
		_220b35717_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath, &__jule_any_type6)}));
		return nullptr;;
	};
	jule::I64 _45213_i = (_21d464763_FindLast(_42341_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42341_decl.get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_220b61325_ImportInfo>(_220b61325_ImportInfo{._field_Token=_42341_decl.get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=_42341_decl.get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=_42341_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=_42341_decl.get()._field_Full, ._field_Package=jule::new_ptr<_220b6427e_Package>(_220b6427e_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_220b61325_ImportInfo> _220b36086_buildImport(jule::Ptr<_220b3522d_symbolBuilder> _self_, jule::Ptr<_21eebdebe_UseDecl>& _47036_decl) {
	{
		
		if (_47036_decl.get()._field_CppLinked) {
			_case_begin_2059ab960:;
			{
				return _220b35be0_buildCppHeaderImport(_self_.ptr(), _47036_decl);;
			}
		}
		else if (_47036_decl.get()._field_Std) {
			_case_begin_2059abbb3:;
			{
				return _220b35d22_buildStdImport(_self_.ptr(), _47036_decl);;
			}
		}
		else {
			_case_begin_2059ab267:;
			{
				return _220b35e54_buildIdentImport(_self_, _47036_decl);;
			}
		}
		_match_end_2059ab19b:;
	};
}



inline jule::Bool _220b361b8_checkDuplicateUseDecl(_220b3522d_symbolBuilder* _self_, jule::Ptr<_220b61325_ImportInfo>& _48141_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_220b61325_ImportInfo> _48313_lpkg = _220bca9cc_SelectPackage((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)>([=](jule::Ptr<_220b61325_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return (_48141_pkg.get()._field_Path == _48348_spkg.get()._field_Path);;
	}));;
	if ((_48313_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_220b35717_pushErr(&(*_self_), _48141_pkg.get()._field_Token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48141_pkg.get()._field_LinkPath, &__jule_any_type6)}));
	_220b3597b_pushSuggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _220b362ea_implImportSelections(_220b3522d_symbolBuilder* _self_, jule::Ptr<_220b61325_ImportInfo>& _49544_imp, jule::Ptr<_21eebdebe_UseDecl>& _49567_decl) {
	_49544_imp.get()._field_Selected=_49567_decl.get()._field_Selected;
	{
		auto &expr = _49544_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_2059b0656:;
		if (it != expr.end()) {
			jule::Ptr<_21d81d743_Token> _49716_item = *it;
			{
				{
					auto &expr = _49544_imp.get()._field_Selected;
					auto it = expr.begin();
					_iter_begin_2059b0d93:;
					if (it != expr.end()) {
						jule::Ptr<_21d81d743_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_2059b0d93;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_220b35717_pushErr(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind, &__jule_any_type6)}));
								_220b3597b_pushSuggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_2059b0d93;
							};
						}
						_iter_next_2059b0d93:;
						++it;
						goto _iter_begin_2059b0d93;
					}
					_iter_end_2059b0d93:;
				};
			}
			_iter_next_2059b0656:;
			++it;
			goto _iter_begin_2059b0656;
		}
		_iter_end_2059b0656:;
	};
}



inline jule::Str _220b3642c_getAsLinkPath(jule::Ptr<_220b3522d_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_21d440134_HasPrefix(_51037_path,_21d52d673_PathStdlib)) {
		(_51037_path).mut_slice(_21d52d673_PathStdlib.len());;
		return (jule::Str("std", 3) + _21d46e1eb_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));;
	};
	jule::Str _51614_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21c4ab327_Abs(_220b5d6a7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._220b5c81b_GetModPath(_self_.get()._field_importer));
		_51614_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 47LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _21d46e1eb_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);;
}



inline void _220b3655e_pushCycleError(jule::Ptr<_220b3522d_symbolBuilder> _self_, jule::Ptr<_220b3522d_symbolBuilder>& _52435_sb, jule::Str _52455_path, jule::Str& _52471_message) {
	;
	jule::Str _52613_refersTo = _21d4e555d_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_220b3642c_getAsLinkPath(_self_, _21d8244c4_Dir(_52435_sb.get()._field_table.get()._field_File.ptr())), &__jule_any_type6),jule::Any(_220b3642c_getAsLinkPath(_self_, _52455_path), &__jule_any_type6)}));;
	(_52471_message).buffer.insert(0, (((_21d4409e7_Repeat(jule::Str(" ", 1),4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _220b36691_pushCrossCycleError(jule::Ptr<_220b3522d_symbolBuilder> _self_, jule::Ptr<_220b3522d_symbolBuilder>& _53340_target, jule::Ptr<_220b61325_ImportInfo>& _53365_imp, jule::Ptr<_21d81d743_Token>& _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_220b3655e_pushCycleError(_self_, _self_,_53365_imp.get()._field_Path,_53417_message);
	jule::Ptr<_220b3522d_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_220b3522d_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_220b3655e_pushCycleError(_self_, _53917_old.get()._field_owner,_21d8244c4_Dir(_53917_old.get()._field_table.get()._field_File.ptr()),_53417_message);
			if ((_53817_owner.get()._field_owner == _53340_target)) {
				_220b3655e_pushCycleError(_self_, _53340_target,_21d8244c4_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()),_53417_message);
				goto _iter_end_2059b884b;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_2059b884b:;
	}
	_iter_end_2059b884b:;;
	_220b35717_pushErr(_self_.ptr(), _53384_errorToken,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53417_message, &__jule_any_type6)}));
}



inline jule::Bool _220b367c3_checkImportCycles(jule::Ptr<_220b3522d_symbolBuilder> _self_, jule::Ptr<_220b61325_ImportInfo> _55637_imp, jule::Ptr<_21eebdebe_UseDecl>& _55656_decl) {
	if ((_55637_imp.get()._field_Path == _21d8244c4_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_220b35717_pushErr(_self_.ptr(), _55656_decl.get()._field_Token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_220b3642c_getAsLinkPath(_self_, _55637_imp.get()._field_Path), &__jule_any_type6)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_21d8244c4_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_220b36691_pushCrossCycleError(_self_, _self_.get()._field_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;;
	};
	jule::Ptr<_220b3522d_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_21d8244c4_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_220b36691_pushCrossCycleError(_self_, _57117_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _220b36905_checkPackageAccessibility(_220b3522d_symbolBuilder* _self_, jule::Ptr<_21eebdebe_UseDecl>& _59245_decl, jule::Str& _59262_mod, jule::Str& _59273_path) {
	if (((_220b5d6a7_Importer_mptr_data[((*_self_)._field_importer).type_offset]._220b5c81b_GetModPath((*_self_)._field_importer) != _59262_mod) && _21d46ce53_Contains(_59273_path,jule::Str("internal", 8)))) {
		_220b35717_pushErr(&(*_self_), _59245_decl.get()._field_Token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _220b36a37_importPackage(jule::Ptr<_220b3522d_symbolBuilder> _self_, jule::Ptr<_220b61325_ImportInfo>& _59838_imp, jule::Ptr<_21eebdebe_UseDecl>& _59861_decl) {
	jule::Bool __jule_func_result = false;
	if (_59838_imp.get()._field_CppLinked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_220b61325_ImportInfo> _60317_port = _220b5d6a7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._220b5ce37_GetImport(_self_.get()._field_importer, _59838_imp.get()._field_Path);;
	if ((_60317_port != nullptr)) {
		_59838_imp.get()._field_Package=_60317_port.get()._field_Package;
		_59838_imp.get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _220b5d6a7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._220b5c81b_GetModPath(_self_.get()._field_importer);;
		_220b5d6a7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._220b5c5b8_SetModPath(_self_.get()._field_importer, _220b5d6a7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._220b5cb29_ModById(_self_.get()._field_importer, _59838_imp.get()._field_ModId));
		_220b36905_checkPackageAccessibility(_self_.ptr(), _59861_decl,_60817_oldMod,_60317_port.get()._field_Path);
		_220b5d6a7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._220b5c5b8_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_220b367c3_checkImportCycles(_self_, _59838_imp,_59861_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _61717_oldMod = _220b5d6a7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._220b5c81b_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_220b5d6a7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._220b5c5b8_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if (_59838_imp.get()._field_Std) {
			_220b5d6a7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._220b5c5b8_SetModPath(_self_.get()._field_importer, _21d52d673_PathStdlib);
		};
		jule::Slice<jule::Ptr<_21ee6c665_Ast>> _62222_asts;;
		jule::Slice<_21d4e511d_Log> _62232_errors;;
		({
			__jule_tuple_sx_21ee6c665_Ast__jule_tuple_s_21d4e511d_Log __jule_assign_result = _220b5d6a7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._220b5d2de_ImportPackage(_self_.get()._field_importer, _59838_imp.get()._field_Path,(!(_59838_imp.get()._field_Std)));
			_62222_asts = __jule_assign_result.__jule_result_arg0;
			_62232_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_220b36905_checkPackageAccessibility(_self_.ptr(), _59861_decl,_61717_oldMod,_59838_imp.get()._field_Path);
		{
			auto &expr = _62222_asts;
			auto it = expr.begin();
			_iter_begin_2059c83b6:;
			if (it != expr.end()) {
				jule::Ptr<_21ee6c665_Ast> _63025_ast = *it;
				{
					jule::Ptr<_220bca1a2_SymbolTable> _63125_table = nullptr;;
					({
						__jule_tuple_x_220bca1a2_SymbolTable__jule_tuple_s_21d4e511d_Log __jule_assign_result = _220c2c91e_buildSymbols(_63025_ast,_self_.get()._field_importer,_self_);
						_63125_table = __jule_assign_result.__jule_result_arg0;
						_62232_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					_59838_imp.get()._field_Package.get()._field_Files = jule::alloc_for_append(_59838_imp.get()._field_Package.get()._field_Files,1);_59838_imp.get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_2059c83b6:;
				++it;
				goto _iter_begin_2059c83b6;
			}
			_iter_end_2059c83b6:;
		};
	};
	_220b362ea_implImportSelections(_self_.ptr(), _59838_imp,_59861_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_220b61325_ImportInfo> _220b36b69_importUseDecl(jule::Ptr<_220b3522d_symbolBuilder> _self_, jule::Ptr<_21eebdebe_UseDecl>& _64538_decl) {
	jule::Ptr<_220b61325_ImportInfo> _64617_imp = _220b36086_buildImport(_self_, _64538_decl);;
	if ((_64617_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _65217_ok = _220b361b8_checkDuplicateUseDecl(_self_.ptr(), _64617_imp);;
	if ((!(_65217_ok))) {
		return nullptr;;
	};
	_65217_ok=_220b36a37_importPackage(_self_, _64617_imp,_64538_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_64617_imp);;
	if (_65217_ok) {
		_220b5d6a7_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._220b5d564_Imported(_self_.get()._field_importer, _64617_imp);
		return _64617_imp;;
	};
	return nullptr;;
}



inline void _220b36c9b_importUseDecls(jule::Ptr<_220b3522d_symbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_UseDecls;
		auto it = expr.begin();
		_iter_begin_2059cc893:;
		if (it != expr.end()) {
			jule::Ptr<_21eebdebe_UseDecl> _66721_decl = *it;
			{
				_220b36b69_importUseDecl(_self_, _66721_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_2059cc893;
				};
			}
			_iter_next_2059cc893:;
			++it;
			goto _iter_begin_2059cc893;
		}
		_iter_end_2059cc893:;
	};
}



inline void _220b36dcd_appendNode(_220b3522d_symbolBuilder* _self_, _21ee6d314_Node& _67634_node) {
	{
		auto &_match_expr{ _67634_node._field_Data };
		
		if (_match_expr.type == &__jule_any_type12) {
			_case_begin_2059cd08b:;
			{
				(*_self_)._field_table.get()._field_Impls = jule::alloc_for_append((*_self_)._field_table.get()._field_Impls,1);(*_self_)._field_table.get()._field_Impls.__push(_220b350eb_buildImpl(_67634_node._field_Data.cast_ptr<_21eec2742_Impl>(&__jule_any_type12)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_2059cde8d:;
			{
				jule::Ptr<_220c0a26a_TypeAlias> _68121_ta = _220b33704_buildTypeAlias(_67634_node._field_Data.cast_ptr<_21eebcad3_TypeAliasDecl>(&__jule_any_type13));;
				(*_self_)._field_table.get()._field_TypeAliases = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeAliases,1);(*_self_)._field_table.get()._field_TypeAliases.__push(_68121_ta);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_2059ce004:;
			{
				jule::Ptr<_21eec3006_Struct> _68421_srct = _220b33a9a_buildStruct(_67634_node._field_Data.cast_ptr<_21eec1a2c_StructDecl>(&__jule_any_type14));;
				(*_self_)._field_table.get()._field_Structs = jule::alloc_for_append((*_self_)._field_table.get()._field_Structs,1);(*_self_)._field_table.get()._field_Structs.__push(_68421_srct);;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_2059ce06a:;
			{
				jule::Ptr<_220b31636_Fn> _68721_f = _220b34073_buildFn(_67634_node._field_Data.cast_ptr<_21eeb8293_FnDecl>(&__jule_any_type15));;
				(*_self_)._field_table.get()._field_Funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_Funcs,1);(*_self_)._field_table.get()._field_Funcs.__push(_68721_f);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_2059ce7da:;
			{
				jule::Ptr<_220b376b4_Trait> _69021_t = _220b342d7_buildTrait(_67634_node._field_Data.cast_ptr<_21eec2137_TraitDecl>(&__jule_any_type16));;
				(*_self_)._field_table.get()._field_Traits = jule::alloc_for_append((*_self_)._field_table.get()._field_Traits,1);(*_self_)._field_table.get()._field_Traits.__push(_69021_t);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_2059ce851:;
			{
				jule::Ptr<_220b8746c_Var> _69321_v = _220b34d87_buildVar(_67634_node._field_Data.cast_ptr<_21eeb9272_VarDecl>(&__jule_any_type17));;
				(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_69321_v);;
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_2059ce8b7:;
			{
				jule::Ptr<_220b38374_Enum> _69621_e = _220b3467d_buildEnum(_67634_node._field_Data.cast_ptr<_21eebee6a_EnumDecl>(&__jule_any_type18));;
				(*_self_)._field_table.get()._field_Enums = jule::alloc_for_append((*_self_)._field_table.get()._field_Enums,1);(*_self_)._field_table.get()._field_Enums.__push(_69621_e);;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_2059ce92d:;
			{
				jule::Ptr<_220b38ae4_TypeEnum> _69921_e = _220b34c55_buildTypeEnum(_67634_node._field_Data.cast_ptr<_21eec107b_TypeEnumDecl>(&__jule_any_type19));;
				(*_self_)._field_table.get()._field_TypeEnums = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeEnums,1);(*_self_)._field_table.get()._field_TypeEnums.__push(_69921_e);;
			}
		}
		else {
			_case_begin_2059cdd7d:;
			{
				_220b35717_pushErr(&(*_self_), _67634_node._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_2059cdd28:;
	};
}



inline void _220b37010_appendNodes(_220b3522d_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_Nodes;
		auto it = expr.begin();
		_iter_begin_2059d7eca:;
		if (it != expr.end()) {
			_21ee6d314_Node _70721_node = *it;
			{
				_220b36dcd_appendNode(&(*_self_), _70721_node);
			}
			_iter_next_2059d7eca:;
			++it;
			goto _iter_begin_2059d7eca;
		}
		_iter_end_2059d7eca:;
	};
}



inline void _220b37142_pushDirectivePass(_220b3522d_symbolBuilder* _self_, jule::Ptr<_21ee6d710_Directive>& _71241_d) {
	if ((_71241_d.get()._field_Args.len() == 0LL)) {
		_220b35717_pushErr(&(*_self_), _71241_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71241_d.get()._field_Args.len() > 1LL)) {
		jule::Ptr<_21d81d743_Token> _71717_arg = _71241_d.get()._field_Args[1LL];;
		_220b35717_pushErr(&(*_self_), _71717_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_21d81d743_Token> _72113_arg = _71241_d.get()._field_Args[0LL];;
	if ((_72113_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_220b35717_pushErr(&(*_self_), _72113_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72113_arg.get()._field_Kind[0LL] != '\"')) {
		_220b35717_pushErr(&(*_self_), _72113_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_Passes = jule::alloc_for_append((*_self_)._field_table.get()._field_Passes,1);(*_self_)._field_table.get()._field_Passes.__push(_220b332a3_Pass{._field_Token=_71241_d.get()._field_Tag, ._field_Text=_72113_arg.get()._field_Kind.slice(1LL,(_72113_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _220b37274_appendTopDirectives(_220b3522d_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_2059dd0bd:;
		if (it != expr.end()) {
			jule::Ptr<_21ee6d710_Directive> _73921_d = *it;
			{
				{
					auto &_match_expr{ _73921_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_2059ddc7d:;
						{
							_220b37142_pushDirectivePass(&(*_self_), _73921_d);
						}
					}
					_match_end_2059ddbe5:;
				};
			}
			_iter_next_2059dd0bd:;
			++it;
			goto _iter_begin_2059dd0bd;
		}
		_iter_end_2059dd0bd:;
	};
}



inline void _220b373a6_build(jule::Ptr<_220b3522d_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_220bca1a2_SymbolTable>(_220bca1a2_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_220b37274_appendTopDirectives(_self_.ptr());
	_220b36c9b_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_220b37010_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _220b3522d_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _220b378a1_Str(_220b376b4_Trait* _self_) {
	return (*_self_)._field_Ident;;
}



inline jule::Bool _220b379d3_Equal(jule::Ptr<_220b376b4_Trait> _self_, jule::Ptr<_220c0ae5d_TypeKind> _2521_other) {
	jule::Ptr<_220b376b4_Trait> _2613_trt = _220c0e9ab_Trait(_2521_other.ptr());;
	return (_self_ == _2613_trt);;
}



inline jule::Bool _220b37b15_IsBuiltin(_220b376b4_Trait* _self_) {
	return ((*_self_)._field_Token == nullptr);;
}



inline jule::Ptr<_220b31636_Fn> _220b37c47_FindMethod(_220b376b4_Trait* _self_, jule::Str _3929_ident) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_2059e2a95:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;;
				};
			}
			_iter_next_2059e2a95:;
			++it;
			goto _iter_begin_2059e2a95;
		}
		_iter_end_2059e2a95:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _220b376b4_Trait _Src) {
	_Stream << _220b378a1_Str(&_Src);
	return _Stream;
}



inline jule::Bool _220b38242_AutoExpr(_220b38055_EnumItem* _self_) {
	return ((*_self_)._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _220b38055_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _220b38561_Str(_220b38374_Enum* _self_) {
	return (*_self_)._field_Ident;;
}



inline jule::Bool _220b38693_Equal(jule::Ptr<_220b38374_Enum> _self_, jule::Ptr<_220c0ae5d_TypeKind> _3821_other) {
	jule::Ptr<_220b38374_Enum> _3913_enm = _220c0da32_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_220b38055_EnumItem> _220b387c5_FindItem(_220b38374_Enum* _self_, jule::Str _4727_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_2059e524b:;
		if (it != expr.end()) {
			jule::Ptr<_220b38055_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_2059e524b:;
			++it;
			goto _iter_begin_2059e524b;
		}
		_iter_end_2059e524b:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _220b38374_Enum _Src) {
	_Stream << _220b38561_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b38907_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _220b38cd1_Str(_220b38ae4_TypeEnum* _self_) {
	return (*_self_)._field_Ident;;
}



inline jule::Bool _220b38e13_Equal(jule::Ptr<_220b38ae4_TypeEnum> _self_, jule::Ptr<_220c0ae5d_TypeKind> _8021_other) {
	jule::Ptr<_220b38ae4_TypeEnum> _8113_tenm = _220c0dc96_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_220b38907_TypeEnumItem> _220b39188_FindItem(_220b38ae4_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_2059e735d:;
		if (it != expr.end()) {
			jule::Ptr<_220b38907_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_2059e735d:;
			++it;
			goto _iter_begin_2059e735d;
		}
		_iter_end_2059e735d:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _220b38ae4_TypeEnum _Src) {
	_Stream << _220b38cd1_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_220b69471_Sema>&,jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>&)> _220b3b0ad_readyFn(jule::Ptr<_220b3ab7e_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_220b69471_Sema>&,jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>&)>([=](jule::Ptr<_220b69471_Sema>& _6321_sema, jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>& _6339_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_genericsD;
			auto it = expr.begin();
			_iter_begin_205a047bb:;
			if (it != expr.end()) {
				jule::I64 _6418_i = it - expr.begin();
				jule::Ptr<_21eeb3b0c_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_220c09731_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_205a047bb;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto &expr = _6425_g.get()._field_Constraint.get()._field_Mask;
						auto it = expr.begin();
						_iter_begin_205a07071:;
						if (it != expr.end()) {
							jule::Ptr<_21eea19a7_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = _6321_sema.get()._field_errors.len();;
								jule::Ptr<_220c0ae5d_TypeKind> _7229_kind = _220b71775_buildTypeWithRefers(_6321_sema, _7029_mask,jule::Trait<_220c2bc3c_Lookup>(_6321_sema, 3),_6339_generics,nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_205a08acd:;
											{
												jule::Ptr<_21eea206d_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_21eea206d_IdentTypeDecl>(&__jule_any_type20);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _220b3c246_isBuiltinConstraint(_7637_itd.get()._field_Ident))) {
													_7229_kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													_6321_sema.get()._field_errors=_6321_sema.get()._field_errors.slice(0LL,_7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_205a08a45:;
									};
									return false;;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_205a07071:;
							++it;
							goto _iter_begin_205a07071;
						}
						_iter_end_205a07071:;
					};
				}
				_iter_next_205a047bb:;
				++it;
				_6418_i++;
				goto _iter_begin_205a047bb;
			}
			_iter_end_205a047bb:;
		};
		return true;;
	});;
}



inline jule::Bool _220b3b322_readyFi(jule::Ptr<_220b3ab7e_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _220b75d51_fnEnvironment(_self_.get()._field_s, _self_.get()._field_fi,_220b3b0ad_readyFn(_self_)));;
}



inline jule::Bool _220b3b586_readySi(jule::Ptr<_220b3ab7e_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _220b3b0ad_readyFn(_self_)(_self_.get()._field_s,_self_.get()._field_genericsA));;
}



inline jule::Bool _220b3b7ea_ready(jule::Ptr<_220b3ab7e_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _220b3b322_readyFi(_self_);;
	};
	return _220b3b586_readySi(_self_);;
}



inline jule::Bool _220b3ba5e_check(jule::Ptr<_220b3ab7e_constraintChecker> _self_) {
	if ((!(_220b3b7ea_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_205a109c5:;
		if (it != expr.end()) {
			jule::I64 _11914_i = it - expr.begin();
			jule::Ptr<_220c09731_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_205a109c5;
				};
				{
					auto &expr = _11921_g.get()._field_Constraint;
					auto it = expr.begin();
					_iter_begin_205a119c6:;
					if (it != expr.end()) {
						jule::Ptr<_220c0ae5d_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_220c10baa_Prim> _12425_prim = _220c0d2e5_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _220c1179e_IsConstraint(_12425_prim.ptr()))) {
								if (_220b3be5a_matchConstraint(_12425_prim.get()._field_Kind,_11921_g.get()._field_Kind)) {
									goto _iter_next_205a109c5;
								};
								goto _iter_next_205a119c6;
							};
							if (_220c0b667_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_205a109c5;
							};
						}
						_iter_next_205a119c6:;
						++it;
						goto _iter_begin_205a119c6;
					}
					_iter_end_205a119c6:;
				};
				_220b6c133_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type6)}));
				return false;;
			}
			_iter_next_205a109c5:;
			++it;
			_11914_i++;
			goto _iter_begin_205a109c5;
		}
		_iter_end_205a109c5:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _220b3ab7e_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _220b3ceb1_IsTraitImpl(_220b3cab5_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);;
}



inline jule::Bool _220b3d225_IsStructImpl(_220b3cab5_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _220b3cab5_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b42b20_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b4301b_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b43307_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b4367b_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b43967_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _220b44281_IsWhileNext(_220b43dda_WhileIter* _self_) {
	return ((*_self_)._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _220b43dda_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b447c0_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b44bbb_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b45073_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b4535e_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b4564a_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b45a02_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b45e75_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b4632c_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _220b46d77_IsGenericTypeMatch(_220b4686b_Match* _self_) {
	return (((*_self_)._field_TypeMatch && ((*_self_)._field_Expr != nullptr)) && (*_self_)._field_Expr.get()._field_Kind.get()._field_Generic);;
}







std::ostream &operator<<(std::ostream &_Stream, _220b4686b_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _220b47680_isDefault(_220b473b6_Case* _self_) {
	return ((*_self_)._field_Exprs == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _220b473b6_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b4796b_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b47ce0_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b483ea_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b4886d_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_220b61325_ImportInfo> _220b49b16_FindPackage(_220b49682_scopeChecker* _self_, jule::Str _45430_ident) {
	return _220b6998d_FindPackage((*_self_)._field_s.ptr(), _45430_ident);;
}



inline jule::Ptr<_220b61325_ImportInfo> _220b49e24_SelectPackage(_220b49682_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)> _46432_selector) {
	return _220b69c9b_SelectPackage((*_self_)._field_s.ptr(), _46432_selector);;
}



inline jule::Ptr<_220b8746c_Var> _220b4a2cb_FindVar(_220b49682_scopeChecker* _self_, jule::Str _47526_ident, jule::Bool _47538_cpp_linked) {
	;
	jule::Ptr<_220b8746c_Var> _47817_v = _220bcc946_findVar((*_self_)._field_table.ptr(), _47526_ident,_47538_cpp_linked,true);;
	if ((_47817_v != nullptr)) {
		return _47817_v;;
	};
	jule::Ptr<_220b49682_scopeChecker> _48317_parent = (*_self_)._field_parent;;
	while ((_48317_parent != nullptr)) {
		{
			_47817_v=_220bcc946_findVar(_48317_parent.get()._field_table.ptr(), _47526_ident,_47538_cpp_linked,true);
			if ((_47817_v != nullptr)) {
				return _47817_v;;
			};
			_48317_parent=_48317_parent.get()._field_parent;
		}
	_iter_next_205a4095b:;
	}
	_iter_end_205a4095b:;;
	return _220b6a153_FindVar((*_self_)._field_s.ptr(), _47526_ident,_47538_cpp_linked);;
}



inline jule::Ptr<_220c0a26a_TypeAlias> _220b4a683_FindTypeAlias(_220b49682_scopeChecker* _self_, jule::Str _50232_ident, jule::Bool _50244_cppLinked) {
	;
	jule::Ptr<_220c0a26a_TypeAlias> _50517_ta = _220bccd97_findTypeAlias((*_self_)._field_table.ptr(), _50232_ident,_50244_cppLinked,true);;
	if ((_50517_ta != nullptr)) {
		return _50517_ta;;
	};
	jule::Ptr<_220b49682_scopeChecker> _51017_parent = (*_self_)._field_parent;;
	while ((_51017_parent != nullptr)) {
		{
			_50517_ta=_220bccd97_findTypeAlias(_51017_parent.get()._field_table.ptr(), _50232_ident,_50244_cppLinked,true);
			if ((_50517_ta != nullptr)) {
				return _50517_ta;;
			};
			_51017_parent=_51017_parent.get()._field_parent;
		}
	_iter_next_205a43651:;
	}
	_iter_end_205a43651:;;
	return _220b6a50a_FindTypeAlias((*_self_)._field_s.ptr(), _50232_ident,_50244_cppLinked);;
}



inline jule::Ptr<_21eec3006_Struct> _220b4aa3a_FindStruct(_220b49682_scopeChecker* _self_, jule::Str _52729_ident, jule::Bool _52741_cppLinked) {
	return _220b6a8b2_FindStruct((*_self_)._field_s.ptr(), _52729_ident,_52741_cppLinked);;
}



inline jule::Ptr<_220b31636_Fn> _220b4ade2_FindFn(_220b49682_scopeChecker* _self_, jule::Str _53625_ident, jule::Bool _53637_cppLinked) {
	return _220b6ac69_FindFn((*_self_)._field_s.ptr(), _53625_ident,_53637_cppLinked);;
}



inline jule::Ptr<_220b376b4_Trait> _220b4b200_FindTrait(_220b49682_scopeChecker* _self_, jule::Str _54528_ident) {
	return _220b6b077_FindTrait((*_self_)._field_s.ptr(), _54528_ident);;
}



inline jule::Ptr<_220b38374_Enum> _220b4b50d_FindEnum(_220b49682_scopeChecker* _self_, jule::Str _55427_ident) {
	return _220b6b385_FindEnum((*_self_)._field_s.ptr(), _55427_ident);;
}



inline jule::Ptr<_220b38ae4_TypeEnum> _220b4b81b_FindTypeEnum(_220b49682_scopeChecker* _self_, jule::Str _56331_ident) {
	return _220b6b693_FindTypeEnum((*_self_)._field_s.ptr(), _56331_ident);;
}



inline jule::Bool _220b4bb4b_isUnsafe(jule::Ptr<_220b49682_scopeChecker> _self_) {
	jule::Ptr<_220b49682_scopeChecker> _57117_scope = _self_;;
	_julec_label_iter:;
	if (_57117_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_57117_scope.get()._field_parent != nullptr)) {
		_57117_scope=_57117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _220b4bdb0_isRoot(_220b49682_scopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));;
}



inline void _220b4c08b_stop(_220b49682_scopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _220b4c300_stopped(_220b49682_scopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);;
}



inline jule::Bool _220b4c564_isDeferred(jule::Ptr<_220b49682_scopeChecker> _self_) {
	jule::Ptr<_220b49682_scopeChecker> _60417_scope = _self_;;
	_julec_label_iter:;
	if (_60417_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_60417_scope.get()._field_parent != nullptr)) {
		_60417_scope=_60417_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_220b49682_scopeChecker> _220b4c7c8_getRoot(jule::Ptr<_220b49682_scopeChecker> _self_) {
	jule::Ptr<_220b49682_scopeChecker> _62217_root = _self_;;
	while (((_62217_root.get()._field_parent != nullptr) && (_62217_root.get()._field_owner == nullptr))) {
		{
			_62217_root=_62217_root.get()._field_parent;
		}
	_iter_next_205a4cca9:;
	}
	_iter_end_205a4cca9:;;
	return _62217_root;;
}



inline jule::Ptr<_220b49682_scopeChecker> _220b4ca3c_getHardRoot(jule::Ptr<_220b49682_scopeChecker> _self_) {
	jule::Ptr<_220b49682_scopeChecker> _63217_root = _self_;;
	while ((_63217_root.get()._field_parent != nullptr)) {
		{
			_63217_root=_63217_root.get()._field_parent;
		}
	_iter_next_205a4e00d:;
	}
	_iter_end_205a4e00d:;;
	return _63217_root;;
}



inline jule::Ptr<_220b4535e_Label> _220b4cd4a_findLabel(_220b49682_scopeChecker* _self_, jule::Str _64228_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_205a4ea69:;
		if (it != expr.end()) {
			jule::Any _64321_st = *it;
			{
				{
					auto &_match_expr{ _64321_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_205a505a3:;
						{
							jule::Ptr<_220b4535e_Label> _64625_label = _64321_st.cast_ptr<_220b4535e_Label>(&__jule_any_type21);;
							if ((_64625_label.get()._field_Ident == _64228_ident)) {
								return _64625_label;;
							};
						}
					}
					_match_end_205a504a4:;
				};
			}
			_iter_next_205a4ea69:;
			++it;
			goto _iter_begin_205a4ea69;
		}
		_iter_end_205a4ea69:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b483ea_scopeLabel> _220b4d158_findLabelScope(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Str _65834_ident) {
	jule::Ptr<_220b483ea_scopeLabel> _65917_label = _220b4d466_findLabelAll(_self_.ptr(), _65834_ident);;
	if (((_65917_label != nullptr) && (_65917_label.get()._field_scope == _self_))) {
		return _65917_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_220b483ea_scopeLabel> _220b4d466_findLabelAll(_220b49682_scopeChecker* _self_, jule::Str _67031_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_205a52819:;
		if (it != expr.end()) {
			jule::Ptr<_220b483ea_scopeLabel> _67121_lbl = *it;
			{
				if ((_67121_lbl.get()._field_label.get()._field_Ident == _67031_ident)) {
					return _67121_lbl;;
				};
			}
			_iter_next_205a52819:;
			++it;
			goto _iter_begin_205a52819;
		}
		_iter_end_205a52819:;
	};
	return nullptr;;
}



inline jule::Bool _220b4d81d_isDuplicatedIdent(_220b49682_scopeChecker* _self_, jule::Uintptr _68236_itself, jule::Str _68253_ident) {
	jule::Ptr<_220b8746c_Var> _68313_v = _220b4a2cb_FindVar(&(*_self_), _68253_ident,false);;
	if (((_68313_v != nullptr) && (static_cast<jule::Uintptr>(_68313_v) != _68236_itself))) {
		if ((_68313_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_v.get()._field_Scope == (*_self_)._field_scope) || (!(_220b6b9e5_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_220c0a26a_TypeAlias> _69113_ta = _220b4a683_FindTypeAlias(&(*_self_), _68253_ident,false);;
	if (((_69113_ta != nullptr) && (static_cast<jule::Uintptr>(_69113_ta) != _68236_itself))) {
		if ((_69113_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_69113_ta.get()._field_Scope == (*_self_)._field_tree) || (!(_220b6b9e5_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _220b4da93_checkVarDecl(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb9272_VarDecl> _70236_decl) {
	jule::Ptr<_220b8746c_Var> _70317_v = _220b34d87_buildVar(_70236_decl);;
	_70317_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70317_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_70317_v, &__jule_any_type9));;
	});;
	if (_220b4d81d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70317_v)),_70317_v.get()._field_Ident)) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _70317_v.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70317_v.get()._field_Ident, &__jule_any_type6)}));
		_220b6c452_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_220b4c08b_stop(_self_.ptr());
		return;;
	};
	_220b7b7c4_checkVarDecl(_self_.get()._field_s, _70317_v,jule::Trait<_220c2bc3c_Lookup>(_self_, 0));
	if (((!(_220b87a99_IsTypeInferred(_70317_v.ptr()))) && ((_70317_v.get()._field_Kind == nullptr) || (_70317_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_220b7ee15_checkTypeVar(_self_.get()._field_s, _70317_v,jule::Trait<_220c2bc3c_Lookup>(_self_, 0));
}



inline void _220b4dd18_checkTypeAliasDecl(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eebcad3_TypeAliasDecl> _72642_decl) {
	jule::Ptr<_220c0a26a_TypeAlias> _72717_ta = _220b33704_buildTypeAlias(_72642_decl);;
	if (_220b4d81d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72717_ta)),_72717_ta.get()._field_Ident)) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _72717_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72717_ta.get()._field_Ident, &__jule_any_type6)}));
		_220b6c452_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_220b4c08b_stop(_self_.ptr());
		return;;
	};
	_220b77616_checkTypeAliasDecl(_self_.get()._field_s, _72717_ta,jule::Trait<_220c2bc3c_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72717_ta);;
	if ((_72717_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_220b4c08b_stop(_self_.ptr());
	};
}



inline jule::Ptr<_220b42b20_Scope> _220b4e07c_getChild(_220b49682_scopeChecker* _self_) {
	return jule::new_ptr<_220b42b20_Scope>(_220b42b20_Scope{._field_Parent=(*_self_)._field_scope, });;
}



inline void _220b4e445_checkChildSsc(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb679c_ScopeTree>& _75038_tree, jule::Ptr<_220b42b20_Scope>& _75061_s, jule::Ptr<_220b49682_scopeChecker>& _75077_ssc) {
	_75077_ssc.get()._field_parent=_self_;
	_220b59483_check(_75077_ssc, _75038_tree,_75061_s);
}



inline jule::Ptr<_220b42b20_Scope> _220b4e7ec_checkChildSc(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb679c_ScopeTree>& _75537_tree, jule::Ptr<_220b49682_scopeChecker>& _75560_ssc) {
	jule::Ptr<_220b42b20_Scope> _75617_s = _220b4e07c_getChild(_self_.ptr());;
	_220b4e445_checkChildSsc(_self_, _75537_tree,_75617_s,_75560_ssc);
	return _75617_s;;
}



inline jule::Ptr<_220b42b20_Scope> _220b4eb0a_checkChild(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb679c_ScopeTree>& _76135_tree) {
	jule::Ptr<_220b49682_scopeChecker> _76217_ssc = _220b596e7_newChildChecker(_self_);;
	return _220b4e7ec_checkChildSc(_self_, _76135_tree,_76217_ssc);;
}



inline void _220b4ed80_checkAnonScope(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb679c_ScopeTree> _76638_tree) {
	jule::Ptr<_220b42b20_Scope> _76717_s = _220b4eb0a_checkChild(_self_, _76638_tree);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_76717_s, &__jule_any_type22));;
}



inline void _220b5019e_processErrorCall(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_220b30217_BuiltinErrorCallExprModel>& _77141_m, jule::Ptr<_21d81d743_Token> _77172_err) {
	if (_220b4c564_isDeferred(_self_)) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _77172_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220b49682_scopeChecker> _77617_root = _220b4c7c8_getRoot(_self_);;
	if ((!(_77617_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _77172_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_220b6c452_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77141_m.get()._field_Func=_77617_root.get()._field_owner;
}



inline void _220b50424_checkExpr(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eea5ec8_Expr> _78433_expr) {
	jule::Ptr<_220bd1a49_Eval> _78517_eval = _220b73a1e_eval(_self_.get()._field_s, jule::Trait<_220c2bc3c_Lookup>(_self_, 0));;
	_78517_eval.get()._field_ignored=true;
	jule::Ptr<_220bceecb_Data> _78717_d = _220bec46b_evalExpr(_78517_eval, _78433_expr);;
	if ((_78717_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78717_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_205a68995:;
			{
				jule::Ptr<_220b30217_BuiltinErrorCallExprModel> _79421_m = _78717_d.get()._field_Model.cast_ptr<_220b30217_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_220b5019e_processErrorCall(_self_, _79421_m,_78433_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type24));;
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35) {
			_case_begin_205a68bc6:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type24));;
			}
		}
		else {
			_case_begin_205a68b60:;
			{
				_220b6c133_pushErr(_self_.get()._field_s.ptr(), _78433_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_205a68b0a:;
	};
}



inline jule::Ptr<_220b4301b_If> _220b50732_checkIf(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eebbad2_If> _81431_i) {
	jule::Ptr<_220b42b20_Scope> _81517_s = _220b4eb0a_checkChild(_self_, _81431_i.get()._field_Scope);;
	jule::Ptr<_220bceecb_Data> _81717_d = _220bec46b_evalExpr(_220b73a1e_eval(_self_.get()._field_s, jule::Trait<_220c2bc3c_Lookup>(_self_, 0)), _81431_i.get()._field_Expr);;
	if ((_81717_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_220c10baa_Prim> _82217_prim = _220c0d2e5_Prim(_81717_d.get()._field_Kind.ptr());;
	if (((_82217_prim == nullptr) || (!(_220c13b7a_IsBool(_82217_prim.ptr()))))) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _81431_i.get()._field_Expr.get()._field_Token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_220b4301b_If>(_220b4301b_If{._field_Expr=_81717_d.get()._field_Model, ._field_Scope=_81517_s});;
}



inline jule::Ptr<_220b43307_Else> _220b50a40_checkElse(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eebbe89_Else> _83433_e) {
	return jule::new_ptr<_220b43307_Else>(_220b43307_Else{._field_Scope=_220b4eb0a_checkChild(_self_, _83433_e.get()._field_Scope)});;
}



inline void _220b50cb5_checkConditional(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eebc40c_Conditional> _84040_conditional) {
	jule::Ptr<_220b4367b_Conditional> _84117_c = jule::new_ptr<_220b4367b_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_84117_c, &__jule_any_type36));;
	_84117_c.get()._field_Elifs=jule::Slice<jule::Ptr<_220b4301b_If>>::alloc(0LL, (_84040_conditional.get()._field_Tail.len() + 1LL));
	_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_220b50732_checkIf(_self_, _84040_conditional.get()._field_Head));;
	{
		auto &expr = _84040_conditional.get()._field_Tail;
		auto it = expr.begin();
		_iter_begin_205a71d11:;
		if (it != expr.end()) {
			jule::Ptr<_21eebbad2_If> _84721_elif = *it;
			{
				_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_220b50732_checkIf(_self_, _84721_elif));;
			}
			_iter_next_205a71d11:;
			++it;
			goto _iter_begin_205a71d11;
		}
		_iter_end_205a71d11:;
	};
	if ((_84040_conditional.get()._field_Default != nullptr)) {
		_84117_c.get()._field_Default=_220b50a40_checkElse(_self_, _84040_conditional.get()._field_Default);
	};
}



inline void _220b51227_checkIterScopeSsc(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Uintptr _85637_it, jule::Ptr<_21eeb679c_ScopeTree> _85654_tree, jule::Ptr<_220b42b20_Scope>& _85677_s, jule::Ptr<_220b49682_scopeChecker> _85692_ssc) {
	_85692_ssc.get()._field_it=_85637_it;
	_220b4e445_checkChildSsc(_self_, _85654_tree,_85677_s,_85692_ssc);
}



inline jule::Ptr<_220b42b20_Scope> _220b51678_checkIterScopeSc(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Uintptr _86136_it, jule::Ptr<_21eeb679c_ScopeTree> _86153_tree, jule::Ptr<_220b49682_scopeChecker> _86175_ssc) {
	jule::Ptr<_220b42b20_Scope> _86217_scope = _220b4e07c_getChild(_self_.ptr());;
	_220b51227_checkIterScopeSsc(_self_, _86136_it,_86153_tree,_86217_scope,_86175_ssc);
	return _86217_scope;;
}



inline jule::Ptr<_220b42b20_Scope> _220b51a30_checkIterScope(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Uintptr _86734_it, jule::Ptr<_21eeb679c_ScopeTree>& _86752_tree) {
	jule::Ptr<_220b49682_scopeChecker> _86817_ssc = _220b596e7_newChildChecker(_self_);;
	return _220b51678_checkIterScopeSc(_self_, _86734_it,_86752_tree,_86817_ssc);;
}



inline void _220b51ca5_checkInfIter(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb9c89_Iter>& _87237_it) {
	jule::Ptr<_220b43967_InfIter> _87317_kind = jule::new_ptr<_220b43967_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_87317_kind, &__jule_any_type37));;
	_87317_kind.get()._field_Scope=_220b51a30_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87317_kind)),_87237_it.get()._field_Scope);
}



inline void _220b5202a_checkWhileIter(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb9c89_Iter>& _87839_it) {
	jule::Ptr<_21eeba55e_WhileKind> _87917_wh = _87839_it.get()._field_Kind.cast_ptr<_21eeba55e_WhileKind>(&__jule_any_type38);;
	if (((_87917_wh.get()._field_Expr == nullptr) && (_87917_wh.get()._field_Next == nullptr))) {
		_220b51ca5_checkInfIter(_self_, _87839_it);
		return;;
	};
	jule::Ptr<_220b43dda_WhileIter> _88517_kind = jule::new_ptr<_220b43dda_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_88517_kind, &__jule_any_type39));;
	_88517_kind.get()._field_Scope=_220b51a30_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_88517_kind)),_87839_it.get()._field_Scope);
	if ((_87917_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_220bceecb_Data> _89021_d = _220bec46b_evalExpr(_220b73a1e_eval(_self_.get()._field_s, jule::Trait<_220c2bc3c_Lookup>(_self_, 0)), _87917_wh.get()._field_Expr);;
		if ((_89021_d == nullptr)) {
			return;;
		};
		jule::Ptr<_220c10baa_Prim> _89517_prim = _220c0d2e5_Prim(_89021_d.get()._field_Kind.ptr());;
		if ((_89517_prim == nullptr)) {
			_220b6c133_pushErr(_self_.get()._field_s.ptr(), _87839_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_220c13b7a_IsBool(_89517_prim.ptr())))) {
			_220b6c133_pushErr(_self_.get()._field_s.ptr(), _87839_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_88517_kind.get()._field_Expr=_89021_d.get()._field_Model;
	};
	if (_21eeba8b1_IsWhileNext(_87917_wh.ptr())) {
		if ((!(_220b4214c_isValidAstStForNextSt(_87917_wh.get()._field_Next)))) {
			_220b6c133_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _91517_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_220b5822e_checkNode(_self_, _87917_wh.get()._field_Next);
		if ((_91517_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91825_st = _self_.get()._field_scope.get()._field_Stmts[_91517_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL,_91517_n);
			if ((!(_220b423e4_isValidStForNextSt(_91825_st)))) {
				_220b6c133_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_88517_kind.get()._field_Next=_91825_st;
		};
	};
}



inline void _220b522a0_checkRangeIter(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb9c89_Iter>& _92839_it) {
	jule::Ptr<_21eebae00_RangeKind> _92917_rang = _92839_it.get()._field_Kind.cast_ptr<_21eebae00_RangeKind>(&__jule_any_type40);;
	jule::Ptr<_220bceecb_Data> _93117_d = _220bec46b_evalExpr(_220b73a1e_eval(_self_.get()._field_s, jule::Trait<_220c2bc3c_Lookup>(_self_, 0)), _92917_rang.get()._field_Expr);;
	if ((_93117_d == nullptr)) {
		return;;
	};
	jule::Ptr<_220b447c0_RangeIter> _93617_kind = jule::new_ptr<_220b447c0_RangeIter>(_220b447c0_RangeIter{._field_Expr=_93117_d, });;
	_220bc6258_rangeChecker _94017_rc = _220bc6258_rangeChecker{._field_sc=_self_, ._field_rang=_92917_rang, ._field_Kind=_93617_kind, ._field_d=_93117_d};;
	jule::Bool _94613_ok = _220bc7b1c_check(&_94017_rc);;
	if ((!(_94613_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_93617_kind, &__jule_any_type41));;
	jule::Ptr<_220b49682_scopeChecker> _95317_ssc = _220b596e7_newChildChecker(_self_);;
	jule::Ptr<_220b42b20_Scope> _95417_scope = _220b4e07c_getChild(_self_.ptr());;
	if ((_93617_kind.get()._field_KeyA != nullptr)) {
		if (((!(_220b6b9e5_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _220b4d81d_isDuplicatedIdent(_self_.ptr(), 0LLU,_93617_kind.get()._field_KeyA.get()._field_Ident))) {
			_220b6c133_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyA.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type6)}));
			_220b6c452_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyA.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyA);;
	};
	if ((_93617_kind.get()._field_KeyB != nullptr)) {
		if (((!(_220b6b9e5_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _220b4d81d_isDuplicatedIdent(_self_.ptr(), 0LLU,_93617_kind.get()._field_KeyB.get()._field_Ident))) {
			_220b6c133_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyB.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type6)}));
			_220b6c452_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyB.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyB);;
	};
	_220b51227_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_93617_kind)),_92839_it.get()._field_Scope,_95417_scope,_95317_ssc);
	_93617_kind.get()._field_Scope=_95417_scope;
}



inline void _220b52525_checkIter(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb9c89_Iter> _97833_it) {
	if (_21eeba0db_IsInf(_97833_it.ptr())) {
		_220b51ca5_checkInfIter(_self_, _97833_it);
		return;;
	};
	{
		auto &_match_expr{ _97833_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type38) {
			_case_begin_205a8e713:;
			{
				_220b5202a_checkWhileIter(_self_, _97833_it);
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_205a8db63:;
			{
				_220b522a0_checkRangeIter(_self_, _97833_it);
			}
		}
		else {
			_case_begin_205a8d9ed:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_205a8d987:;
	};
}



inline jule::Bool _220b52833_checkValidContLabel(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Uintptr _99439_it) {
	jule::Ptr<_220b49682_scopeChecker> _99517_scope = _self_;;
	_julec_label_iter:;
	if ((_99517_scope.get()._field_it == _99439_it)) {
		return true;;
	};
	if ((_99517_scope.get()._field_parent != nullptr)) {
		_99517_scope=_99517_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _220b52b41_checkValidBreakLabel(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Uintptr _101040_ptr) {
	jule::Ptr<_220b49682_scopeChecker> _101117_scope = _self_;;
	_julec_label_iter:;
	if ((_101117_scope.get()._field_it == _101040_ptr)) {
		return true;;
	};
	if ((_101117_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _101917_mtch = static_cast<jule::Uintptr>(((_220b473b6_Case*)(_101117_scope.get()._field_cse))->_field_Owner);;
		if ((_101917_mtch == _101040_ptr)) {
			return true;;
		};
	};
	if ((_101117_scope.get()._field_parent != nullptr)) {
		_101117_scope=_101117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_220b44bbb_ContSt> _220b52e4e_checkContValidScope(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eebb65e_ContSt> _103339_c) {
	if (_220b4c564_isDeferred(_self_)) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_103339_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_220b44bbb_ContSt>();;
	};
	jule::Ptr<_220b49682_scopeChecker> _104317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_104317_scope.get()._field_it == 0LLU) && (_104317_scope.get()._field_parent != nullptr)) && (_104317_scope.get()._field_owner == nullptr))) {
			_case_begin_205a96a4a:;
			{
				_104317_scope=_104317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_104317_scope.get()._field_it != 0LLU)) {
			_case_begin_205a96ac2:;
			{
				return jule::new_ptr<_220b44bbb_ContSt>(_220b44bbb_ContSt{._field_It=_104317_scope.get()._field_it});;
			}
		}
		_match_end_205a96990:;
	};
	_220b6c133_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _220b531c4_checkCont(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eebb65e_ContSt> _105729_c) {
	jule::Ptr<_220b44bbb_ContSt> _105817_cont = _220b52e4e_checkContValidScope(_self_, _105729_c);;
	if ((_105817_cont == nullptr)) {
		return;;
	};
	if ((_105729_c.get()._field_Label != nullptr)) {
		jule::Ptr<_220b483ea_scopeLabel> _106421_label = _220b40326_findLabelParent(_105729_c.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
		if ((_106421_label == nullptr)) {
			_220b6c133_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
			return;;
		};
		_106421_label.get()._field_used=true;
		if (((_106421_label.get()._field_pos + 1LL) >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_220b6c133_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
			return;;
		};
		jule::I64 _107717_i = (_106421_label.get()._field_pos + 1LL);;
		if ((_107717_i >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_220b6c133_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _108125_st = _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_107717_i];;
			{
				auto &_match_expr{ _108125_st };
				
				if (_match_expr.type == &__jule_any_type37) {
					_case_begin_205a9d964:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_220b43967_InfIter>(&__jule_any_type37)));
					}
				}
				else if (_match_expr.type == &__jule_any_type41) {
					_case_begin_205aa03e4:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_220b447c0_RangeIter>(&__jule_any_type41)));
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_205aa045a:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_220b43dda_WhileIter>(&__jule_any_type39)));
					}
				}
				else {
					_case_begin_205aa026d:;
					{
						_220b6c133_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
					}
				}
				_match_end_205aa0207:;
			};
		};
	};
	if ((_105817_cont.get()._field_It != 0LLU)) {
		if ((!(_220b52833_checkValidContLabel(_self_, _105817_cont.get()._field_It)))) {
			_220b6c133_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_105817_cont, &__jule_any_type42));;
}



inline void _220b53449_checkLabel(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb3eb4_LabelSt> _110434_l) {
	if ((_220b4cd4a_findLabel(_self_.ptr(), _110434_l.get()._field_Ident) != nullptr)) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _110434_l.get()._field_Token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_110434_l.get()._field_Ident, &__jule_any_type6)}));
		return;;
	};
	jule::Ptr<_220b4535e_Label> _111017_label = jule::new_ptr<_220b4535e_Label>(_220b4535e_Label{._field_Ident=_110434_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_111017_label, &__jule_any_type21));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_220b483ea_scopeLabel>>::make({jule::new_ptr<_220b483ea_scopeLabel>(_220b483ea_scopeLabel{._field_token=_110434_l.get()._field_Token, ._field_label=_111017_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _220b536be_pushGoto(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb436b_GotoSt> _112332_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_220b4564a_GotoSt>(_220b4564a_GotoSt{._field_Ident=_112332_gt.get()._field_Label.get()._field_Kind}), &__jule_any_type43));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_220b4886d_scopeGoto>>::make({jule::new_ptr<_220b4886d_scopeGoto>(_220b4886d_scopeGoto{._field_gt=_112332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _220b53944_checkPostfix(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb52a1_AssignSt> _113536_a) {
	if ((_113536_a.get()._field_Left.len() > 1LL)) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_21eea5ec8_Expr> _114117_expr = _113536_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_220bceecb_Data> _114217_d = _220bec46b_evalExpr(_220b73a1e_eval(_self_.get()._field_s, jule::Trait<_220c2bc3c_Lookup>(_self_, 0)), _114117_expr);;
	if ((_114217_d == nullptr)) {
		return;;
	};
	_220b41da5_checkAssign(_self_.get()._field_s,_114217_d,nullptr,_113536_a.get()._field_Setter);
	if ((_220c0d7bd_Ptr(_114217_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_220c179a3_Ptr> _115021_ptr = _220c0d7bd_Ptr(_114217_d.get()._field_Kind.ptr());;
		if (_220c18476_IsUnsafe(_115021_ptr.ptr())) {
			_220b6c133_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
			return;;
		};
	} else {
		if (((_220c0d2e5_Prim(_114217_d.get()._field_Kind.ptr()) == nullptr) || (!(_220b2730d_IsNum(_220c0d2e5_Prim(_114217_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_220b6c133_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_220b45a02_Postfix>(_220b45a02_Postfix{._field_Expr=_114217_d.get()._field_Model, ._field_Op=_113536_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type44));;
}



inline jule::Bool _220b53c52_isNewAssignIdent(_220b49682_scopeChecker* _self_, jule::Str _116835_ident) {
	if ((_21d820ed7_IsIgnoreIdent(_116835_ident) || _116835_ident.empty())) {
		return false;;
	};
	return (_220bcd24e_defByIdent((*_self_)._field_table.ptr(), _116835_ident,false) == nullptr);;
}



inline jule::Bool _220b541a3_checkStructureAssignOp(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eec33d0_StructIns>& _117547_s, jule::Ptr<_21eeb52a1_AssignSt>& _117567_a, jule::Ptr<_220bceecb_Data>& _117586_r) {
	jule::Ptr<_220b31a10_FnIns> _117817_overload = nullptr;;
	{
		auto &_match_expr{ _117567_a.get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_205ab2758:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_205ab3b55:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_205ab3bbb:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_205ab3c32:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_205ab2c0e:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_205ab2c75:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_205ab2cdb:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_205ab2d52:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_205ab3e1e:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_205ab3e85:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_205ab2b98:;
			{
				_220b6c133_pushErr(_self_.get()._field_s.ptr(), _117567_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117567_a.get()._field_Setter.get()._field_Kind, &__jule_any_type6),jule::Any(_21ee8cd5b_Str(_117547_s.ptr()), &__jule_any_type6)}));
				return false;;
			}
		}
		_match_end_205ab258d:;
	};
	if ((_117817_overload == nullptr)) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _117567_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117567_a.get()._field_Setter.get()._field_Kind, &__jule_any_type6),jule::Any(_21ee8cd5b_Str(_117547_s.ptr()), &__jule_any_type6)}));
		return false;;
	};
	jule::Ptr<_220b31823_ParamIns> _121017_p = _117817_overload.get()._field_Params[1LL];;
	return _220b74019_checkAssignType(_self_.get()._field_s, _121017_p.get()._field_Decl.get()._field_Reference,_121017_p.get()._field_Kind,_117586_r,_117567_a.get()._field_Setter);;
}



inline void _220b54428_checkSingleAssign(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb52a1_AssignSt>& _121442_a) {
	jule::Ptr<_220bceecb_Data> _121517_l = nullptr;;
	if ((!(_21d820ed7_IsIgnoreIdent(_121442_a.get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_21eea5ec8_Expr> _121821_expr = _121442_a.get()._field_Left[0LL].get()._field_Expr;;
		_121517_l=_220bec46b_evalExpr(_220b73a1e_eval(_self_.get()._field_s, jule::Trait<_220c2bc3c_Lookup>(_self_, 0)), _121821_expr);
		if ((_121517_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_220bd1a49_Eval> _122517_eval = nullptr;;
	if ((_121517_l != nullptr)) {
		_122517_eval=_220b73711_evalp(_self_.get()._field_s, jule::Trait<_220c2bc3c_Lookup>(_self_, 0),_121517_l.get()._field_Kind);
	} else {
		_122517_eval=_220b73a1e_eval(_self_.get()._field_s, jule::Trait<_220c2bc3c_Lookup>(_self_, 0));
	};
	_122517_eval.get()._field_unsafety=_220b4bb4b_isUnsafe(_self_);
	jule::Ptr<_220bceecb_Data> _123217_r = _220bec46b_evalExpr(_122517_eval, _121442_a.get()._field_Right);;
	if ((_123217_r == nullptr)) {
		return;;
	};
	if ((_121517_l == nullptr)) {
		if (_220c0c107_Void(_123217_r.get()._field_Kind.ptr())) {
			_220b6c133_pushErr(_self_.get()._field_s.ptr(), _121442_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_123217_r, &__jule_any_type24));;
		return;;
	};
	if ((!(_220b41da5_checkAssign(_self_.get()._field_s,_121517_l,_123217_r,_121442_a.get()._field_Setter)))) {
		return;;
	};
	if ((_220c0ee84_Tup(_123217_r.get()._field_Kind.ptr()) != nullptr)) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _121442_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_22001ab86_OperandExprModel> _125417_lm = jule::new_ptr<_22001ab86_OperandExprModel>(_22001ab86_OperandExprModel{._field_Kind=_121517_l.get()._field_Kind, ._field_Model=_121517_l.get()._field_Model});;
	jule::Ptr<_22001ab86_OperandExprModel> _125817_rm = jule::new_ptr<_22001ab86_OperandExprModel>(_22001ab86_OperandExprModel{._field_Kind=_123217_r.get()._field_Kind, ._field_Model=_123217_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_220b45e75_Assign>(_220b45e75_Assign{._field_L=_125417_lm, ._field_R=_125817_rm, ._field_Op=_121442_a.get()._field_Setter}), &__jule_any_type45));;
	if ((_121442_a.get()._field_Setter.get()._field_Kind != jule::Str("=", 1))) {
		jule::Ptr<_21eec33d0_StructIns> _126521_strct = _220c0e747_Struct(_121517_l.get()._field_Kind.ptr());;
		if ((_126521_strct != nullptr)) {
			_220b541a3_checkStructureAssignOp(_self_, _126521_strct,_121442_a,_123217_r);
			return;;
		};
		_121442_a.get()._field_Setter.get()._field_Kind=_121442_a.get()._field_Setter.get()._field_Kind.slice(0LL,(_121442_a.get()._field_Setter.get()._field_Kind.len() - 1LL));
		_220bee67c_binaryEval _127221_solver = static__220c00095_new(_122517_eval,_121442_a.get()._field_Setter);;
		_123217_r=_220c04e02_solveExplicit(&_127221_solver, _121517_l,_123217_r);
		if ((_123217_r == nullptr)) {
			return;;
		};
		_121442_a.get()._field_Setter.get()._field_Kind+=jule::Str("=", 1);
		return;;
	};
	_220bba8bd_assignTypeChecker _128117_checker = _220bba8bd_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_121517_l.get()._field_Kind, ._field_d=_123217_r, ._field_errorToken=_121442_a.get()._field_Setter};;
	if (_220bbba45_check(&_128117_checker)) {
		_125817_rm.get()._field_Model=_123217_r.get()._field_Model;
		_125417_lm.get()._field_Model=_121517_l.get()._field_Model;
	};
}



inline void _220b54956_processEndPartOfMultiAssign(_220b49682_scopeChecker* _self_, jule::Ptr<_220b4632c_MultiAssign>& _129351_st, jule::Ptr<_21eeb52a1_AssignSt>& _129414_a, jule::Ptr<_21eeb4c62_AssignLeft>& _129433_lexpr, jule::Ptr<_220bceecb_Data>& _129458_l, jule::Ptr<_220bceecb_Data>& _129473_r) {
	if (_21d820ed7_IsIgnoreIdent(_129433_lexpr.get()._field_Ident)) {
		if (_220c0c107_Void(_129473_r.get()._field_Kind.ptr())) {
			_220b6c133_pushErr((*_self_)._field_s.ptr(), _129414_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_129351_st.get()._field_L = jule::alloc_for_append(_129351_st.get()._field_L,1);_129351_st.get()._field_L.__push(nullptr);;
		return;;
	};
	if ((_129414_a.get()._field_Declarative && _220b53c52_isNewAssignIdent(&(*_self_), _129433_lexpr.get()._field_Ident))) {
		if (_220b4d81d_isDuplicatedIdent(&(*_self_), 0LLU,_129433_lexpr.get()._field_Ident)) {
			_220b6c133_pushErr((*_self_)._field_s.ptr(), _129433_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129433_lexpr.get()._field_Ident, &__jule_any_type6)}));
			_220b6c452_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_220b4c08b_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_220b8746c_Var> _131221_v = jule::new_ptr<_220b8746c_Var>(_220b8746c_Var{._field_Scope=(*_self_)._field_scope, ._field_Token=_129433_lexpr.get()._field_Token, ._field_Ident=_129433_lexpr.get()._field_Ident, ._field_Mutable=_129433_lexpr.get()._field_Mutable, ._field_Reference=_129433_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_220bd1054_Value>(_220bd1054_Value{._field_Expr=_129414_a.get()._field_Right, ._field_Data=_129473_r}), });;
		_220b7eae6_checkVar((*_self_)._field_s, _131221_v);
		_131221_v.get()._field_Value=nullptr;
		_129351_st.get()._field_L = jule::alloc_for_append(_129351_st.get()._field_L,1);_129351_st.get()._field_L.__push(jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=_131221_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_131221_v.get()._field_Mutable, ._field_Reference=_131221_v.get()._field_Reference, ._field_Lvalue=(!(_131221_v.get()._field_Constant)), ._field_Model=jule::Any(_131221_v, &__jule_any_type9), }));;
		(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_131221_v);;
		(*_self_)._field_scope.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_Stmts,1);(*_self_)._field_scope.get()._field_Stmts.__push(jule::Any(_131221_v, &__jule_any_type9));;
		return;;
	};
	if ((_129433_lexpr.get()._field_Mutable || _129433_lexpr.get()._field_Reference)) {
		_220b6c133_pushErr((*_self_)._field_s.ptr(), _129433_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129433_lexpr.get()._field_Ident, &__jule_any_type6)}));
		_220b6c452_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_220b41da5_checkAssign((*_self_)._field_s,_129458_l,_129473_r,_129414_a.get()._field_Setter)))) {
		return;;
	};
	;
	_220b76e2e_checkValidityForInitExpr((*_self_)._field_s, _129458_l.get()._field_Mutable,false,_129458_l.get()._field_Kind,_129473_r,_129414_a.get()._field_Setter);
	_220bba8bd_assignTypeChecker _135517_checker = _220bba8bd_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_129458_l.get()._field_Kind, ._field_d=_129473_r, ._field_errorToken=_129414_a.get()._field_Setter};;
	_220bbba45_check(&_135517_checker);
	_129351_st.get()._field_L = jule::alloc_for_append(_129351_st.get()._field_L,1);_129351_st.get()._field_L.__push(_129458_l);;
}



inline void _220b54bdc_checkMultiAssign(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb52a1_AssignSt>& _136541_a) {
	jule::Ptr<_220bceecb_Data> _136617_rd = _220bec46b_evalExpr(_220b73a1e_eval(_self_.get()._field_s, jule::Trait<_220c2bc3c_Lookup>(_self_, 0)), _136541_a.get()._field_Right);;
	if ((_136617_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_220bceecb_Data>> _137017_right = _220b410d5_getDatasFromTupleData(_136617_rd);;
	if ((_137017_right.len() == 1LL)) {
		{
			auto &_match_expr{ _137017_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type46) {
				_case_begin_205ad45d2:;
				{
					jule::Ptr<_220b2bb3c_IndexingExprModel> _137425_iem = _137017_right[0LL].get()._field_Model.cast_ptr<_220b2bb3c_IndexingExprModel>(&__jule_any_type46);;
					if ((_220c0ec20_Map(_137425_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_137017_right=jule::Slice<jule::Ptr<_220bceecb_Data>>::make({jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=_220c0ec20_Map(_137425_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), })});
					};
				}
			}
			_match_end_205ad457c:;
		};
	};
	{
		
		if ((_136541_a.get()._field_Left.len() > _137017_right.len())) {
			_case_begin_205ad4912:;
			{
				_220b6c133_pushErr(_self_.get()._field_s.ptr(), _136541_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_136541_a.get()._field_Left.len() < _137017_right.len())) {
			_case_begin_205ad4978:;
			{
				_220b6c133_pushErr(_self_.get()._field_s.ptr(), _136541_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_205ad3cc9:;
	};
	jule::Ptr<_220b4632c_MultiAssign> _139317_st = jule::new_ptr<_220b4632c_MultiAssign>(_220b4632c_MultiAssign{._field_R=_136617_rd.get()._field_Model});;
	{
		auto &expr = _136541_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_205ad8c35:;
		if (it != expr.end()) {
			jule::I64 _139613_i = it - expr.begin();
			{
				jule::Ptr<_21eeb4c62_AssignLeft> _139721_lexpr = _136541_a.get()._field_Left[_139613_i];;
				jule::Ptr<_220bceecb_Data> _139821_l = nullptr;;
				if (((!(_21d820ed7_IsIgnoreIdent(_139721_lexpr.get()._field_Ident))) && ((!(_136541_a.get()._field_Declarative)) || (!(_220b53c52_isNewAssignIdent(_self_.ptr(), _139721_lexpr.get()._field_Ident)))))) {
					_139821_l=_220bec46b_evalExpr(_220b73a1e_eval(_self_.get()._field_s, jule::Trait<_220c2bc3c_Lookup>(_self_, 0)), _139721_lexpr.get()._field_Expr);
					if ((_139821_l == nullptr)) {
						goto _iter_next_205ad8c35;
					};
				};
				jule::Ptr<_220bceecb_Data> _140621_r = _137017_right[_139613_i];;
				_220b54956_processEndPartOfMultiAssign(_self_.ptr(), _139317_st,_136541_a,_139721_lexpr,_139821_l,_140621_r);
			}
			_iter_next_205ad8c35:;
			++it;
			_139613_i++;
			goto _iter_begin_205ad8c35;
		}
		_iter_end_205ad8c35:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_139317_st, &__jule_any_type47));;
}



inline void _220b54e62_checkAssignSt(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb52a1_AssignSt> _141237_a) {
	{
		
		if (_21d823083_IsPostfixOp(_141237_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_205adcdb0:;
			{
				_220b53944_checkPostfix(_self_, _141237_a);
			}
		}
		else if (((_141237_a.get()._field_Left.len() == 1LL) && (!(_141237_a.get()._field_Declarative)))) {
			_case_begin_205add300:;
			{
				_220b54428_checkSingleAssign(_self_, _141237_a);
			}
		}
		else {
			_case_begin_205adc563:;
			{
				_220b54bdc_checkMultiAssign(_self_, _141237_a);
			}
		}
		_match_end_205adc497:;
	};
}



inline jule::Ptr<_220b42b20_Scope> _220b55319_checkCaseScope(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_220b473b6_Case>& _142335_c, jule::Ptr<_21eeb679c_ScopeTree>& _142350_tree) {
	jule::Ptr<_220b49682_scopeChecker> _142417_ssc = _220b596e7_newChildChecker(_self_);;
	_142417_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_142335_c));
	return _220b4e7ec_checkChildSc(_self_, _142350_tree,_142417_ssc);;
}



inline jule::Ptr<_220b473b6_Case> _220b55814_checkCase(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_220b4686b_Match> _142933_m, jule::I64 _142944_i, jule::Ptr<_21eebd056_Case> _142956_c, jule::Ptr<_220bceecb_Data> _142975_expr) {
	jule::Ptr<_220b473b6_Case> _143017_case = _142933_m.get()._field_Cases[_142944_i];;
	_143017_case.get()._field_Exprs=jule::Slice<jule::Ptr<_220bceecb_Data>>::alloc(0LL, _142956_c.get()._field_Exprs.len());
	jule::Bool _143217_genericMatched = false;;
	jule::Ptr<_220bd1a49_Eval> _143317_eval = _220b73a1e_eval(_self_.get()._field_s, jule::Trait<_220c2bc3c_Lookup>(_self_, 0));;
	{
		auto &expr = _142956_c.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_205ae2c72:;
		if (it != expr.end()) {
			jule::Ptr<_21eea5ec8_Expr> _143421_e = *it;
			{
				jule::Ptr<_220bceecb_Data> _143521_d = _220bebd50_evalExprKind(_143317_eval, _143421_e.get()._field_Kind);;
				if ((_143521_d == nullptr)) {
					goto _iter_next_205ae2c72;
				};
				if (_142933_m.get()._field_TypeMatch) {
					_143017_case.get()._field_Exprs = jule::alloc_for_append(_143017_case.get()._field_Exprs,1);_143017_case.get()._field_Exprs.__push(_143521_d);;
					if ((_220b40d3d_countMatchType(_142933_m,_143521_d.get()._field_Kind) > 1LL)) {
						_220b6c133_pushErr(_self_.get()._field_s.ptr(), _143421_e.get()._field_Token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_143521_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
					};
					if (_142975_expr.get()._field_Kind.get()._field_Generic) {
						_143217_genericMatched=(_143217_genericMatched || _220c0b667_Equal(_142975_expr.get()._field_Kind, _143521_d.get()._field_Kind));
					} else {
						if ((_220c0dc96_TypeEnum(_142975_expr.get()._field_Kind.ptr()) != nullptr)) {
							_220b7446a_checkTypeCompatibility(_self_.get()._field_s, _142975_expr.get()._field_Kind,_143521_d.get()._field_Kind,_143421_e.get()._field_Token);
						} else {
							jule::Ptr<_220b376b4_Trait> _145029_trt = _220c0e9ab_Trait(_142975_expr.get()._field_Kind.ptr());;
							if ((_145029_trt != nullptr)) {
								_220b7446a_checkTypeCompatibility(_self_.get()._field_s, _142975_expr.get()._field_Kind,_143521_d.get()._field_Kind,_143421_e.get()._field_Token);
							};
						};
					};
					goto _iter_next_205ae2c72;
				};
				if (_143521_d.get()._field_Decl) {
					_220b6c133_pushErr(_self_.get()._field_s.ptr(), _143421_e.get()._field_Token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_220b6c452_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_205ae2c72;
				};
				_143017_case.get()._field_Exprs = jule::alloc_for_append(_143017_case.get()._field_Exprs,1);_143017_case.get()._field_Exprs.__push(_143521_d);;
				_220bba8bd_assignTypeChecker _146821_checker = _220bba8bd_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_142975_expr.get()._field_Kind, ._field_d=_143521_d, ._field_errorToken=_143421_e.get()._field_Token};;
				_220bbba45_check(&_146821_checker);
			}
			_iter_next_205ae2c72:;
			++it;
			goto _iter_begin_205ae2c72;
		}
		_iter_end_205ae2c72:;
	};
	if ((((!(_142933_m.get()._field_TypeMatch)) || (!(_142975_expr.get()._field_Kind.get()._field_Generic))) || _143217_genericMatched)) {
		_143017_case.get()._field_Scope=_220b55319_checkCaseScope(_self_, _143017_case,_142956_c.get()._field_Scope);
	};
	return _143017_case;;
}



inline void _220b55bcc_checkCases(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eebd72c_MatchCase>& _148235_m, jule::Ptr<_220b4686b_Match> _148254_rm, jule::Ptr<_220bceecb_Data> _148270_expr) {
	_148254_rm.get()._field_Cases=jule::Slice<jule::Ptr<_220b473b6_Case>>::alloc(0LL, _148235_m.get()._field_Cases.len());
	{
		auto &expr = _148235_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_205aebb49:;
		if (it != expr.end()) {
			jule::I64 _148413_i = it - expr.begin();
			{
				jule::Ptr<_220b473b6_Case> _148521_case = jule::new_ptr<_220b473b6_Case>(_220b473b6_Case{._field_Owner=_148254_rm, });;
				if ((_148413_i > 0LL)) {
					_148254_rm.get()._field_Cases[(_148413_i - 1LL)].get()._field_Next=_148521_case;
				};
				_148254_rm.get()._field_Cases = jule::alloc_for_append(_148254_rm.get()._field_Cases,1);_148254_rm.get()._field_Cases.__push(_148521_case);;
			}
			_iter_next_205aebb49:;
			++it;
			_148413_i++;
			goto _iter_begin_205aebb49;
		}
		_iter_end_205aebb49:;
	};
	if (((_148254_rm.get()._field_Default != nullptr) && (_148235_m.get()._field_Cases.len() > 0LL))) {
		_148254_rm.get()._field_Cases[(_148254_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_148254_rm.get()._field_Default;
	};
	{
		auto &expr = _148235_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_205aee7c8:;
		if (it != expr.end()) {
			jule::I64 _149814_i = it - expr.begin();
			jule::Ptr<_21eebd056_Case> _149821_c = *it;
			{
				_220b55814_checkCase(_self_, _148254_rm,_149814_i,_149821_c,_148270_expr);
			}
			_iter_next_205aee7c8:;
			++it;
			_149814_i++;
			goto _iter_begin_205aee7c8;
		}
		_iter_end_205aee7c8:;
	};
}



inline jule::Ptr<_220b473b6_Case> _220b56084_checkDefault(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_220b4686b_Match> _150336_m, jule::Ptr<_21eebbe89_Else> _150351_d) {
	jule::Ptr<_220b473b6_Case> _150417_def = jule::new_ptr<_220b473b6_Case>(_220b473b6_Case{._field_Owner=_150336_m, });;
	_150417_def.get()._field_Scope=_220b55319_checkCaseScope(_self_, _150417_def,_150351_d.get()._field_Scope);
	return _150417_def;;
}



inline void _220b56309_checkComptimePanic(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_220b42b20_Scope>& _151139_s) {
	if ((_151139_s.get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _151613_stmt = _151139_s.get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _151613_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_205b02a1d:;
			{
				jule::Ptr<_220bceecb_Data> _151917_d = _151613_stmt.cast_ptr<_220bceecb_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ _151917_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_205b03810:;
						{
							jule::Ptr<_220b2de2a_BuiltinPanicCallExprModel> _152221_m = _151917_d.get()._field_Model.cast_ptr<_220b2de2a_BuiltinPanicCallExprModel>(&__jule_any_type30);;
							{
								auto &_match_expr{ _152221_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type48) {
									_case_begin_205b047ab:;
									{
										jule::Ptr<_220074816_Const> _152525_c = _152221_m.get()._field_Expr.cast_ptr<_220074816_Const>(&__jule_any_type48);;
										if (_220b29002_IsStr(_152525_c.ptr())) {
											jule::Ptr<_220b49682_scopeChecker> _152733_root = _220b4ca3c_getHardRoot(_self_);;
											_220b6c133_pushErr(_self_.get()._field_s.ptr(), _152733_root.get()._field_calledFrom,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_220b27d14_ReadStr(_152525_c.ptr()), &__jule_any_type6)}));
										};
									}
								}
								_match_end_205b0459c:;
							};
						}
					}
					_match_end_205b03403:;
				};
			}
		}
		_match_end_205b029b8:;
	};
}



inline void _220b56628_pushTypeMatch(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_220b4686b_Match> _153537_tm, jule::Ptr<_21eebd72c_MatchCase>& _153554_m) {
	if (_153537_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto &expr = _153537_tm.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_205b03c3e:;
			if (it != expr.end()) {
				jule::Ptr<_220b473b6_Case> _153925_c = *it;
				{
					if ((_153925_c.get()._field_Scope != nullptr)) {
						_220b56309_checkComptimePanic(_self_, _153925_c.get()._field_Scope);
						_153537_tm.get()._field_Default=_153925_c;
						_153537_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_205b03c3e:;
				++it;
				goto _iter_begin_205b03c3e;
			}
			_iter_end_205b03c3e:;
		};
		if ((_153554_m.get()._field_Default != nullptr)) {
			_153537_tm.get()._field_Cases=nullptr;
			_153537_tm.get()._field_Default=_220b56084_checkDefault(_self_, _153537_tm,_153554_m.get()._field_Default);
			if ((_153537_tm.get()._field_Default != nullptr)) {
				_220b56309_checkComptimePanic(_self_, _153537_tm.get()._field_Default.get()._field_Scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_153537_tm, &__jule_any_type49));;
}



inline void _220b5689d_checkTypeMatch(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eebd72c_MatchCase>& _155939_m) {
	jule::Ptr<_220bceecb_Data> _156017_d = _220bec15d_eval(_220b73a1e_eval(_self_.get()._field_s, jule::Trait<_220c2bc3c_Lookup>(_self_, 0)), _155939_m.get()._field_Expr);;
	if ((_156017_d == nullptr)) {
		return;;
	};
	if (((!(_156017_d.get()._field_Kind.get()._field_Generic)) && (!(((((_220c0d2e5_Prim(_156017_d.get()._field_Kind.ptr()) != nullptr) && _220c14153_IsAny(_220c0d2e5_Prim(_156017_d.get()._field_Kind.ptr()).ptr())) || (_220c0e9ab_Trait(_156017_d.get()._field_Kind.ptr()) != nullptr)) || (_220c0dc96_TypeEnum(_156017_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _155939_m.get()._field_Expr.get()._field_Token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_220b4686b_Match> _157117_tm = jule::new_ptr<_220b4686b_Match>(_220b4686b_Match{._field_Expr=_156017_d, ._field_TypeMatch=true, });;
	if (((!(_157117_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && (_155939_m.get()._field_Default != nullptr))) {
		_157117_tm.get()._field_Default=_220b56084_checkDefault(_self_, _157117_tm,_155939_m.get()._field_Default);
	};
	_220b55bcc_checkCases(_self_, _155939_m,_157117_tm,_156017_d);
	_220b56628_pushTypeMatch(_self_, _157117_tm,_155939_m);
}



inline void _220b56b23_checkCommonMatch(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eebd72c_MatchCase>& _158441_m) {
	jule::Ptr<_220bceecb_Data> _158517_d = nullptr;;
	if ((_158441_m.get()._field_Expr == nullptr)) {
		_158517_d=jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__2200d5e93_NewBool(true)});
		_158517_d.get()._field_Model=jule::Any(_158517_d.get()._field_Constant, &__jule_any_type48);
	} else {
		_158517_d=_220bec46b_evalExpr(_220b73a1e_eval(_self_.get()._field_s, jule::Trait<_220c2bc3c_Lookup>(_self_, 0)), _158441_m.get()._field_Expr);
		if ((_158517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_220b4686b_Match> _159917_mc = jule::new_ptr<_220b4686b_Match>(_220b4686b_Match{._field_Expr=_158517_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_159917_mc, &__jule_any_type49));;
	if ((_158441_m.get()._field_Default != nullptr)) {
		_159917_mc.get()._field_Default=_220b56084_checkDefault(_self_, _159917_mc,_158441_m.get()._field_Default);
	};
	_220b55bcc_checkCases(_self_, _158441_m,_159917_mc,_158517_d);
}



inline void _220b56d98_checkMatch(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eebd72c_MatchCase> _161134_m) {
	if (_161134_m.get()._field_TypeMatch) {
		_220b5689d_checkTypeMatch(_self_, _161134_m);
		return;;
	};
	_220b56b23_checkCommonMatch(_self_, _161134_m);
}



inline void _220b5711d_checkFall(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb4657_FallSt> _161929_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _220b4c564_isDeferred(_self_))) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _161929_f.get()._field_Token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_220b473b6_Case* _162717_case = ((_220b473b6_Case*)(_self_.get()._field_cse));;
	if ((_162717_case->_field_Next == nullptr)) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _161929_f.get()._field_Token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_220b6c452_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_220b4796b_FallSt>(_220b4796b_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_162717_case->_field_Next))}), &__jule_any_type50));;
}



inline jule::Ptr<_220b45073_BreakSt> _220b5742b_checkBreakWithLabel(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eebb2a7_BreakSt> _163939_b) {
	jule::Ptr<_220b45073_BreakSt> _164017_brk = _220b57739_checkPlainBreak(_self_, _163939_b);;
	if ((_164017_brk == nullptr)) {
		return nullptr;;
	};
	_164017_brk.get()._field_It=0LLU;
	_164017_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_220b483ea_scopeLabel> _165017_label = _220b40326_findLabelParent(_163939_b.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
	if ((_165017_label == nullptr)) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
		return nullptr;;
	};
	_165017_label.get()._field_used=true;
	if (((_165017_label.get()._field_pos + 1LL) >= _165017_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
		return nullptr;;
	};
	jule::I64 _166313_i = (_165017_label.get()._field_pos + 1LL);;
	if ((_166313_i >= _165017_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
	} else {
		jule::Any _166721_st = _165017_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_166313_i];;
		{
			auto &_match_expr{ _166721_st };
			
			if (_match_expr.type == &__jule_any_type37) {
				_case_begin_205b1e496:;
				{
					_164017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.cast_ptr<_220b43967_InfIter>(&__jule_any_type37)));
				}
			}
			else if (_match_expr.type == &__jule_any_type41) {
				_case_begin_205b211bd:;
				{
					_164017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.cast_ptr<_220b447c0_RangeIter>(&__jule_any_type41)));
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_205b21234:;
				{
					_164017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.cast_ptr<_220b43dda_WhileIter>(&__jule_any_type39)));
				}
			}
			else if (_match_expr.type == &__jule_any_type49) {
				_case_begin_205b2129a:;
				{
					_164017_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.cast_ptr<_220b4686b_Match>(&__jule_any_type49)));
				}
			}
			else {
				_case_begin_205b21047:;
				{
					_220b6c133_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
				}
			}
			_match_end_205b20ed1:;
		};
	};
	if ((_164017_brk.get()._field_It != 0LLU)) {
		if ((!(_220b52b41_checkValidBreakLabel(_self_, _164017_brk.get()._field_It)))) {
			_220b6c133_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
		};
	};
	if ((_164017_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_220b52b41_checkValidBreakLabel(_self_, _164017_brk.get()._field_Mtch)))) {
			_220b6c133_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
		};
	};
	return _164017_brk;;
}



inline jule::Ptr<_220b45073_BreakSt> _220b57739_checkPlainBreak(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eebb2a7_BreakSt> _169735_b) {
	if (_220b4c564_isDeferred(_self_)) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _169735_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_220b49682_scopeChecker> _170317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_170317_scope.get()._field_it == 0LLU) && (_170317_scope.get()._field_cse == 0LLU)) && (_170317_scope.get()._field_parent != nullptr)) && (_170317_scope.get()._field_owner == nullptr))) {
			_case_begin_205b2749e:;
			{
				_170317_scope=_170317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_170317_scope.get()._field_it != 0LLU)) {
			_case_begin_205b27526:;
			{
				return jule::new_ptr<_220b45073_BreakSt>(_220b45073_BreakSt{._field_It=_170317_scope.get()._field_it, });;
			}
		}
		else if ((_170317_scope.get()._field_cse != 0LLU)) {
			_case_begin_205b2759d:;
			{
				return jule::new_ptr<_220b45073_BreakSt>(_220b45073_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_220b473b6_Case*)(_170317_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_205b273d3:;
	};
	_220b6c133_pushErr(_self_.get()._field_s.ptr(), _169735_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _220b579ae_checkBreak(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eebb2a7_BreakSt> _171930_b) {
	if ((_171930_b.get()._field_Label != nullptr)) {
		jule::Ptr<_220b45073_BreakSt> _172121_brk = _220b5742b_checkBreakWithLabel(_self_, _171930_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172121_brk, &__jule_any_type51));;
		return;;
	};
	jule::Ptr<_220b45073_BreakSt> _172617_brk = _220b57739_checkPlainBreak(_self_, _171930_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172617_brk, &__jule_any_type51));;
}



inline void _220b57c34_checkRet(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb9629_RetSt> _173032_r) {
	if (_220b4c564_isDeferred(_self_)) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _173032_r.get()._field_Token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220b47ce0_RetSt> _173517_rt = jule::new_ptr<_220b47ce0_RetSt>(_220b47ce0_RetSt{._field_Func=_220b4c7c8_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_173517_rt, &__jule_any_type52));;
	jule::Ptr<_220bc82e3_retTypeChecker> _174017_rtc = jule::new_ptr<_220bc82e3_retTypeChecker>(_220bc82e3_retTypeChecker{._field_sc=_self_, ._field_f=_173517_rt.get()._field_Func, ._field_errorToken=_173032_r.get()._field_Token, });;
	jule::Bool _174513_ok = _220bc8ee7_check(_174017_rtc.ptr(), _173032_r.get()._field_Expr);;
	if ((!(_174513_ok))) {
		return;;
	};
	if ((_173032_r.get()._field_Expr != nullptr)) {
		_173517_rt.get()._field_Expr=_174017_rtc.get()._field_model;
	};
}



inline void _220b57ea9_checkUseExpr(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eea6869_UseExpr> _175532_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _175532_ue.get()._field_Token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_220b4c564_isDeferred(_self_)) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _175532_ue.get()._field_Token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_220b6c133_pushErr(_self_.get()._field_s.ptr(), _175532_ue.get()._field_Token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _220b5822e_checkNode(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Any& _177134_node) {
	{
		auto &_match_expr{ _177134_node };
		
		if (_match_expr.type == &__jule_any_type53) {
			_case_begin_205b34610:;
			{
				_220b4ed80_checkAnonScope(_self_, _177134_node.cast_ptr<_21eeb679c_ScopeTree>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_205b34a0b:;
			{
				_220b4da93_checkVarDecl(_self_, _177134_node.cast_ptr<_21eeb9272_VarDecl>(&__jule_any_type17));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_205b34d2a:;
			{
				_220b4dd18_checkTypeAliasDecl(_self_, _177134_node.cast_ptr<_21eebcad3_TypeAliasDecl>(&__jule_any_type13));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_205b34d91:;
			{
				_220b50424_checkExpr(_self_, _177134_node.cast_ptr<_21eea5ec8_Expr>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_205b3504a:;
			{
				_220b50cb5_checkConditional(_self_, _177134_node.cast_ptr<_21eebc40c_Conditional>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_205b350b1:;
			{
				_220b52525_checkIter(_self_, _177134_node.cast_ptr<_21eeb9c89_Iter>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_205b35127:;
			{
				_220b531c4_checkCont(_self_, _177134_node.cast_ptr<_21eebb65e_ContSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_205b3518d:;
			{
				_220b53449_checkLabel(_self_, _177134_node.cast_ptr<_21eeb3eb4_LabelSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_205b35204:;
			{
				_220b536be_pushGoto(_self_, _177134_node.cast_ptr<_21eeb436b_GotoSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_205b3526a:;
			{
				_220b54e62_checkAssignSt(_self_, _177134_node.cast_ptr<_21eeb52a1_AssignSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_205b352d1:;
			{
				_220b56d98_checkMatch(_self_, _177134_node.cast_ptr<_21eebd72c_MatchCase>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_205b35347:;
			{
				_220b5711d_checkFall(_self_, _177134_node.cast_ptr<_21eeb4657_FallSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_205b353ad:;
			{
				_220b579ae_checkBreak(_self_, _177134_node.cast_ptr<_21eebb2a7_BreakSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_205b35424:;
			{
				_220b57c34_checkRet(_self_, _177134_node.cast_ptr<_21eeb9629_RetSt>(&__jule_any_type64));
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_205b3548a:;
			{
				_220b57ea9_checkUseExpr(_self_, _177134_node.cast_ptr<_21eea6869_UseExpr>(&__jule_any_type65));
			}
		}
		else {
			_case_begin_205b34786:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_205b346a9:;
	};
}



inline void _220b5840a_checkResult(jule::Ptr<_220b49682_scopeChecker> _self_) {
	_21eeb6192_Stmt _180917_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _180917_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_205b3d99e:;
			{
				jule::Ptr<_21eea6869_UseExpr> _181221_ue = _180917_stmt._field_Data.cast_ptr<_21eea6869_UseExpr>(&__jule_any_type65);;
				jule::Ptr<_220bceecb_Data> _181321_d = _220bec46b_evalExpr(_220b73a1e_eval(_self_.get()._field_s, jule::Trait<_220c2bc3c_Lookup>(_self_, 0)), _181221_ue.get()._field_Expr);;
				if ((_181321_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_181321_d, &__jule_any_type24));;
				jule::Ptr<_220bc82e3_retTypeChecker> _181821_rtc = jule::new_ptr<_220bc82e3_retTypeChecker>(_220bc82e3_retTypeChecker{._field_sc=_self_, ._field_types=_220b32093_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_181221_ue.get()._field_Expr.get()._field_Token, });;
				_220bc8ee7_check(_181821_rtc.ptr(), _181221_ue.get()._field_Expr);
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_205b3d185:;
			{
				jule::Ptr<_21eea5ec8_Expr> _182521_expr = _180917_stmt._field_Data.cast_ptr<_21eea5ec8_Expr>(&__jule_any_type54);;
				jule::Ptr<_220bceecb_Data> _182621_d = _220bec46b_evalExpr(_220b73a1e_eval(_self_.get()._field_s, jule::Trait<_220c2bc3c_Lookup>(_self_, 0)), _182521_expr);;
				if ((_182621_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _182621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_205b42a2a:;
						{
							jule::Ptr<_220b30217_BuiltinErrorCallExprModel> _183225_m = _182621_d.get()._field_Model.cast_ptr<_220b30217_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_220b5019e_processErrorCall(_self_, _183225_m,_182521_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_182621_d, &__jule_any_type24));;
						}
					}
					else {
						_case_begin_205b42dc1:;
						{
							return;;
						}
					}
					_match_end_205b42d6b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type59 || _match_expr.type == &__jule_any_type63 || _match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type64) {
			_case_begin_205b3d1eb:;
			{
				_220b5822e_checkNode(_self_, _180917_stmt._field_Data);
			}
		}
		else {
			_case_begin_205b3d11e:;
			{
				_220b5822e_checkNode(_self_, _180917_stmt._field_Data);
				return;;
			}
		}
		_match_end_205b3ce87:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _220b585d6_checkTree(jule::Ptr<_220b49682_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _185417_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_185417_n)--;
	};
	for (; (_self_.get()._field_i < _185417_n); (_self_.get()._field_i)++) {
		{
			_21eeb6192_Stmt _186221_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_220b5822e_checkNode(_self_, _186221_stmt._field_Data);
			if (_220b4c300_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_205b45522:;
	}
	_iter_end_205b45522:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_220b5840a_checkResult(_self_);
	};
}



inline void _220b58905_checkGoto(_220b49682_scopeChecker* _self_, jule::Ptr<_220b4886d_scopeGoto>& _187333_gt, jule::Ptr<_220b483ea_scopeLabel>& _187354_label) {
	jule::Ptr<_220b49682_scopeChecker> _187417_gtsc = _187333_gt.get()._field_scope;;
	while (((_187417_gtsc.get()._field_childIndex - 1LL) > _187354_label.get()._field_scope.get()._field_childIndex)) {
		{
			_187417_gtsc=_187417_gtsc.get()._field_parent;
		}
	_iter_next_205b493a0:;
	}
	_iter_end_205b493a0:;;
	jule::I64 _187917_n = 0LL;;
	if ((_187417_gtsc.get()._field_scope == _187354_label.get()._field_scope.get()._field_scope)) {
		if ((_187333_gt.get()._field_pos > _187354_label.get()._field_pos)) {
			return;;
		};
		_187917_n=_187333_gt.get()._field_pos;
	};
	jule::I64 _189217_i = (_187354_label.get()._field_pos - 1LL);;
	if ((_187917_n == 0LL)) {
		{
			auto &expr = _187354_label.get()._field_scope.get()._field_scope.get()._field_Stmts;
			auto it = expr.begin();
			_iter_begin_205b4b9ac:;
			if (it != expr.end()) {
				jule::I64 _189517_j = it - expr.begin();
				jule::Any _189520_stmt = *it;
				{
					if (_220b409ec_stmtIsGotoScope(_189520_stmt,_187417_gtsc.get()._field_scope)) {
						_187917_n=_189517_j;
						goto _iter_end_205b4b9ac;
					};
				}
				_iter_next_205b4b9ac:;
				++it;
				_189517_j++;
				goto _iter_begin_205b4b9ac;
			}
			_iter_end_205b4b9ac:;
		};
	};
	for (; (_189217_i >= _187917_n); (_189217_i)--) {
		{
			jule::Any _190521_stmt = _187354_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_189217_i];;
			if (_220b4268b_stmtIsDef(_190521_stmt)) {
				_220b6c133_pushErr((*_self_)._field_s.ptr(), _187333_gt.get()._field_gt.get()._field_Token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_187333_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
				return;;
			};
		}
	_iter_next_205b4c89d:;
	}
	_iter_end_205b4c89d:;;
}



inline void _220b58ad1_checkGotos(_220b49682_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_205b4ccee:;
		if (it != expr.end()) {
			jule::Ptr<_220b4886d_scopeGoto> _191421_gt = *it;
			{
				jule::Ptr<_220b483ea_scopeLabel> _191521_label = _220b4d466_findLabelAll(&(*_self_), _191421_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_191521_label == nullptr)) {
					_220b6c133_pushErr((*_self_)._field_s.ptr(), _191421_gt.get()._field_gt.get()._field_Token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_191421_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
					goto _iter_next_205b4ccee;
				};
				_191521_label.get()._field_used=true;
				_220b58905_checkGoto(&(*_self_), _191421_gt,_191521_label);
			}
			_iter_next_205b4ccee:;
			++it;
			goto _iter_begin_205b4ccee;
		}
		_iter_end_205b4ccee:;
	};
}



inline void _220b58cac_checkLabels(_220b49682_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_205b4e98d:;
		if (it != expr.end()) {
			jule::Ptr<_220b483ea_scopeLabel> _192716_l = *it;
			{
				if ((!(_192716_l.get()._field_used))) {
					_220b6c133_pushErr((*_self_)._field_s.ptr(), _192716_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_192716_l.get()._field_label.get()._field_Ident, &__jule_any_type6)}));
				};
			}
			_iter_next_205b4e98d:;
			++it;
			goto _iter_begin_205b4e98d;
		}
		_iter_end_205b4e98d:;
	};
}



inline void _220b58e88_checkVars(_220b49682_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_205b53288:;
		if (it != expr.end()) {
			jule::Ptr<_220b8746c_Var> _193516_v = *it;
			{
				if (((((!(_193516_v.get()._field_Used)) && (!(_21d820ed7_IsIgnoreIdent(_193516_v.get()._field_Ident)))) && (!(_21d82127e_IsAnonIdent(_193516_v.get()._field_Ident)))) && (_193516_v.get()._field_Ident != jule::Str("self", 4)))) {
					_220b6c133_pushErr((*_self_)._field_s.ptr(), _193516_v.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_193516_v.get()._field_Ident, &__jule_any_type6)}));
				};
			}
			_iter_next_205b53288:;
			++it;
			goto _iter_begin_205b53288;
		}
		_iter_end_205b53288:;
	};
}



inline void _220b59164_checkAliases(_220b49682_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_205b55213:;
		if (it != expr.end()) {
			jule::Ptr<_220c0a26a_TypeAlias> _194316_a = *it;
			{
				if ((((!(_194316_a.get()._field_Used)) && (!(_21d820ed7_IsIgnoreIdent(_194316_a.get()._field_Ident)))) && (!(_21d82127e_IsAnonIdent(_194316_a.get()._field_Ident))))) {
					_220b6c133_pushErr((*_self_)._field_s.ptr(), _194316_a.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_194316_a.get()._field_Ident, &__jule_any_type6)}));
				};
			}
			_iter_next_205b55213:;
			++it;
			goto _iter_begin_205b55213;
		}
		_iter_end_205b55213:;
	};
}



inline void _220b59483_check(jule::Ptr<_220b49682_scopeChecker> _self_, jule::Ptr<_21eeb679c_ScopeTree>& _195130_tree, jule::Ptr<_220b42b20_Scope>& _195153_s) {
	_195153_s.get()._field_Deferred=_195130_tree.get()._field_Deferred;
	_195153_s.get()._field_Unsafety=_195130_tree.get()._field_Unsafety;
	jule::I64 _195513_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_195130_tree;
	_self_.get()._field_scope=_195153_s;
	_220b585d6_checkTree(_self_);
	if ((_195513_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_220b58e88_checkVars(_self_.ptr());
		_220b59164_checkAliases(_self_.ptr());
		if (_220b4bdb0_isRoot(_self_.ptr())) {
			_220b58ad1_checkGotos(_self_.ptr());
			_220b58cac_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_220b49682_scopeChecker> _220b596e7_newChildChecker(jule::Ptr<_220b49682_scopeChecker> _self_) {
	jule::Ptr<_220b49682_scopeChecker> _197517_base = _220b3eb50_newScopeCheckerBase(_self_.get()._field_s,nullptr);;
	_197517_base.get()._field_parent=_self_;
	_197517_base.get()._field_labels=_self_.get()._field_labels;
	_197517_base.get()._field_gotos=_self_.get()._field_gotos;
	_197517_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _197517_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _220b49682_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _220b5a6d7_checkCdef(_220b5a297_directiveChecker* _self_, jule::Ptr<_21ee6d710_Directive>& _1629_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_205b5b5c1:;
			{
				if ((*_self_)._field_o.cast_ptr<_220b31636_Fn>(&__jule_any_type66).get()._field_CppLinked) {
					goto _match_end_205b5b813;
				};
				goto _case_begin_205b5b868;
			}
		}
		else {
			_case_begin_205b5b868:;
			{
				_220b6c133_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1629_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
			}
		}
		_match_end_205b5b813:;
	};
	if ((_1629_d.get()._field_Args.len() > 0LL)) {
		_220b6c133_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _220b5a95c_checkTypedef(_220b5a297_directiveChecker* _self_, jule::Ptr<_21ee6d710_Directive>& _3232_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_205b5dd76:;
			{
				if ((*_self_)._field_o.cast_ptr<_21eec3006_Struct>(&__jule_any_type67).get()._field_CppLinked) {
					goto _match_end_205b5e0a7;
				};
				goto _case_begin_205b5e10c;
			}
		}
		else {
			_case_begin_205b5e10c:;
			{
				_220b6c133_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3232_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
			}
		}
		_match_end_205b5e0a7:;
	};
	if ((_3232_d.get()._field_Args.len() > 0LL)) {
		_220b6c133_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _220b5abd2_checkDerive(_220b5a297_directiveChecker* _self_, jule::Ptr<_21ee6d710_Directive>& _4831_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_205b6164d:;
			{
				if ((!((*_self_)._field_o.cast_ptr<_21eec3006_Struct>(&__jule_any_type67).get()._field_CppLinked))) {
					goto _match_end_205b6187e;
				};
				goto _case_begin_205b618d4;
			}
		}
		else {
			_case_begin_205b618d4:;
			{
				_220b6c133_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_205b6187e:;
	};
	if ((_4831_d.get()._field_Args.len() == 0LL)) {
		_220b6c133_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_220b6c452_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4831_d.get()._field_Args.len() > 1LL)) {
		_220b6c133_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4831_d.get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_205b65311:;
		}
		else {
			_case_begin_205b625c7:;
			{
				_220b6c133_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4831_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type6)}));
			}
		}
		_match_end_205b64e48:;
	};
}



inline void _220b5ae57_checkNamespace(_220b5a297_directiveChecker* _self_, jule::Ptr<_21ee6d710_Directive>& _7438_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_205b65245:;
			{
				if ((!((*_self_)._field_o.cast_ptr<_21eec3006_Struct>(&__jule_any_type67).get()._field_CppLinked))) {
					_220b6c133_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_205b66884:;
			{
				if ((!((*_self_)._field_o.cast_ptr<_220b31636_Fn>(&__jule_any_type66).get()._field_CppLinked))) {
					_220b6c133_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_205b668ea:;
			{
				if ((!((*_self_)._field_o.cast_ptr<_220b8746c_Var>(&__jule_any_type9).get()._field_CppLinked))) {
					_220b6c133_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
				};
			}
		}
		else {
			_case_begin_205b667c9:;
			{
				_220b6c133_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
			}
		}
		_match_end_205b66774:;
	};
	if ((_7438_d.get()._field_Args.len() == 0LL)) {
		_220b6c133_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7438_d.get()._field_Args.len() > 1LL)) {
		_220b6c133_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_21d81d743_Token> _9913_arg = _7438_d.get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_220b6c133_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_220b6c133_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7438_d.get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL,(_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_205b6eedb:;
			{
				if ((_220c0560b_findDirective((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_21ee6d710_Directive> _11625_typedef = jule::new_ptr<_21ee6d710_Directive>(_21ee6d710_Directive{._field_Tag=_7438_d.get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_21ee6d710_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_205b6d6b0:;
	};
}



inline void _220b5b1cc_checkDeprecated(_220b5a297_directiveChecker* _self_, jule::Ptr<_21ee6d710_Directive>& _12539_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_205b707d3:;
			{
				if ((*_self_)._field_o.cast_ptr<_21eec3006_Struct>(&__jule_any_type67).get()._field_CppLinked) {
					_220b6c133_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_205b72296:;
			{
				if ((*_self_)._field_o.cast_ptr<_220b31636_Fn>(&__jule_any_type66).get()._field_CppLinked) {
					_220b6c133_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_205b7230c:;
			{
				if ((*_self_)._field_o.cast_ptr<_220b8746c_Var>(&__jule_any_type9).get()._field_CppLinked) {
					_220b6c133_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
				};
			}
		}
		else {
			_case_begin_205b71b8b:;
			{
				_220b6c133_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
			}
		}
		_match_end_205b719d2:;
	};
	if ((_12539_d.get()._field_Args.len() == 0LL)) {
		return;;
	};
	if ((_12539_d.get()._field_Args.len() > 1LL)) {
		_220b6c133_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_21d81d743_Token> _15013_arg = _12539_d.get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_220b6c133_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_220b6c133_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12539_d.get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL,(_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _220b5b452_checkTest(_220b5a297_directiveChecker* _self_, jule::Ptr<_21ee6d710_Directive>& _16429_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_205b79aea:;
			{
				jule::Ptr<_220b31636_Fn> _16717_f = (*_self_)._field_o.cast_ptr<_220b31636_Fn>(&__jule_any_type66);;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_22000d34e_IsInit(_16717_f.ptr())))) && (!(_220057772_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_205b7a414;
				};
				if (_22004d735_IsMethod(_16717_f.ptr())) {
					_220b6c133_pushErr((*_self_)._field_s.ptr(), _16717_f.get()._field_Token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_205b7a414;
				};
				goto _case_begin_205b7a568;
			}
		}
		else {
			_case_begin_205b7a568:;
			{
				_220b6c133_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16429_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
			}
		}
		_match_end_205b7a414:;
	};
	if ((_16429_d.get()._field_Args.len() > 0LL)) {
		_220b6c133_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _220b5b6c7_checkDirective(_220b5a297_directiveChecker* _self_, jule::Ptr<_21ee6d710_Directive>& _18538_d) {
	{
		auto &_match_expr{ _18538_d.get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_205b7e490:;
			{
				_220b5a6d7_checkCdef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_205b7e506:;
			{
				_220b5a95c_checkTypedef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_205b7e56c:;
			{
				_220b5abd2_checkDerive(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_205b7e5d3:;
			{
				_220b5ae57_checkNamespace(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_205b80260:;
			{
				_220b5b1cc_checkDeprecated(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_205b802c6:;
			{
				_220b5b452_checkTest(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_205b8033c:;
			{
				_220b6c133_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
			}
		}
		else {
			_case_begin_205b7e429:;
			{
				_220b6c133_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
			}
		}
		_match_end_205b7e3c4:;
	};
}



inline void _220b5b8a3_check(_220b5a297_directiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_205b8771d:;
		if (it != expr.end()) {
			jule::Ptr<_21ee6d710_Directive> _20821_d = *it;
			{
				_220b5b6c7_checkDirective(&(*_self_), _20821_d);
			}
			_iter_next_205b8771d:;
			++it;
			goto _iter_begin_205b8771d;
		}
		_iter_end_205b8771d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _220b5a297_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_220b61325_ImportInfo> _220b61842_FindPackage(_220b61325_ImportInfo* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_220b61325_ImportInfo> _220b61b50_SelectPackage(_220b61325_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_220b8746c_Var> _220b62007_FindVar(_220b61325_ImportInfo* _self_, jule::Str _19226_ident, jule::Bool ) {
	if ((!(_220b638dd_isLookupable(&(*_self_), _19226_ident)))) {
		return nullptr;;
	};
	return _220b5da3c_findVarInPackage((*_self_)._field_Package.get()._field_Files,_19226_ident,false);;
}



inline jule::Ptr<_220c0a26a_TypeAlias> _220b623ae_FindTypeAlias(_220b61325_ImportInfo* _self_, jule::Str _20432_ident, jule::Bool ) {
	if ((!(_220b638dd_isLookupable(&(*_self_), _20432_ident)))) {
		return nullptr;;
	};
	return _220b5de6b_findTypeAliasInPackage((*_self_)._field_Package.get()._field_Files,_20432_ident,false);;
}



inline jule::Ptr<_21eec3006_Struct> _220b62766_FindStruct(_220b61325_ImportInfo* _self_, jule::Str _21629_ident, jule::Bool ) {
	if ((!(_220b638dd_isLookupable(&(*_self_), _21629_ident)))) {
		return nullptr;;
	};
	return _220b5e356_findStructInPackage((*_self_)._field_Package.get()._field_Files,_21629_ident,false);;
}



inline jule::Ptr<_220b31636_Fn> _220b62b1d_FindFn(_220b61325_ImportInfo* _self_, jule::Str _22825_ident, jule::Bool ) {
	if ((!(_220b638dd_isLookupable(&(*_self_), _22825_ident)))) {
		return nullptr;;
	};
	return _220b5e7b8_findFnInPackage((*_self_)._field_Package.get()._field_Files,_22825_ident,false);;
}



inline jule::Ptr<_220b376b4_Trait> _220b62e2b_FindTrait(_220b61325_ImportInfo* _self_, jule::Str _23928_ident) {
	if ((!(_220b638dd_isLookupable(&(*_self_), _23928_ident)))) {
		return nullptr;;
	};
	return _220b5eac6_findTraitInPackage((*_self_)._field_Package.get()._field_Files,_23928_ident);;
}



inline jule::Ptr<_220b38374_Enum> _220b63239_FindEnum(_220b61325_ImportInfo* _self_, jule::Str _25027_ident) {
	if ((!(_220b638dd_isLookupable(&(*_self_), _25027_ident)))) {
		return nullptr;;
	};
	return _220b5ee17_findEnumInPackage((*_self_)._field_Package.get()._field_Files,_25027_ident);;
}



inline jule::Ptr<_220b38ae4_TypeEnum> _220b63547_FindTypeEnum(_220b61325_ImportInfo* _self_, jule::Str _26131_ident) {
	if ((!(_220b638dd_isLookupable(&(*_self_), _26131_ident)))) {
		return nullptr;;
	};
	return _220b60258_findTypeEnumInPackage((*_self_)._field_Package.get()._field_Files,_26131_ident);;
}



inline jule::Bool _220b638dd_isLookupable(_220b61325_ImportInfo* _self_, jule::Str _27027_ident) {
	if ((*_self_)._field_CppLinked) {
		return false;;
	};
	if ((!((*_self_)._field_ImportAll))) {
		if ((((*_self_)._field_Alias.len() != 0LL) || _220b63beb_existIdent(&(*_self_), jule::Str("self", 4)))) {
			return true;;
		};
		if (((*_self_)._field_Selected.len() > 0LL)) {
			if ((!(_220b63beb_existIdent(&(*_self_), _27027_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _220b63beb_existIdent(_220b61325_ImportInfo* _self_, jule::Str _29025_ident) {
	{
		auto &expr = (*_self_)._field_Selected;
		auto it = expr.begin();
		_iter_begin_205b9cd0a:;
		if (it != expr.end()) {
			jule::Ptr<_21d81d743_Token> &_29116_sident = *it;
			{
				if ((_29116_sident.get()._field_Kind == _29025_ident)) {
					return true;;
				};
			}
			_iter_next_205b9cd0a:;
			++it;
			goto _iter_begin_205b9cd0a;
		}
		_iter_end_205b9cd0a:;
	};
	return false;;
}



inline jule::Bool _220b63e82_isAccessibleViaSelection(_220b61325_ImportInfo* _self_) {
	return (((*_self_)._field_ImportAll || ((*_self_)._field_Selected.len() == 0LL)) || _220b63beb_existIdent(&(*_self_), jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _220b61325_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_220b61325_ImportInfo> _220b64757_FindPackage(_220b6427e_Package* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_220b61325_ImportInfo> _220b64a65_SelectPackage(_220b6427e_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_220b8746c_Var> _220b64e1c_FindVar(_220b6427e_Package* _self_, jule::Str _32026_ident, jule::Bool _32038_cpp_linked) {
	return _220b5da3c_findVarInPackage((*_self_)._field_Files,_32026_ident,_32038_cpp_linked);;
}



inline jule::Ptr<_220c0a26a_TypeAlias> _220b652c4_FindTypeAlias(_220b6427e_Package* _self_, jule::Str _32632_ident, jule::Bool _32644_cpp_linked) {
	return _220b5de6b_findTypeAliasInPackage((*_self_)._field_Files,_32632_ident,_32644_cpp_linked);;
}



inline jule::Ptr<_21eec3006_Struct> _220b6567b_FindStruct(_220b6427e_Package* _self_, jule::Str _33229_ident, jule::Bool _33241_cpp_linked) {
	return _220b5e356_findStructInPackage((*_self_)._field_Files,_33229_ident,_33241_cpp_linked);;
}



inline jule::Ptr<_220b31636_Fn> _220b65a33_FindFn(_220b6427e_Package* _self_, jule::Str _33825_ident, jule::Bool _33837_cpp_linked) {
	return _220b5e7b8_findFnInPackage((*_self_)._field_Files,_33825_ident,_33837_cpp_linked);;
}



inline jule::Ptr<_220b376b4_Trait> _220b65d41_FindTrait(_220b6427e_Package* _self_, jule::Str _34428_ident) {
	return _220b5eac6_findTraitInPackage((*_self_)._field_Files,_34428_ident);;
}



inline jule::Ptr<_220b38374_Enum> _220b6614e_FindEnum(_220b6427e_Package* _self_, jule::Str _35027_ident) {
	return _220b5ee17_findEnumInPackage((*_self_)._field_Files,_35027_ident);;
}



inline jule::Ptr<_220b38ae4_TypeEnum> _220b6645c_FindTypeEnum(_220b6427e_Package* _self_, jule::Str _35631_ident) {
	return _220b60258_findTypeEnumInPackage((*_self_)._field_Files,_35631_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _220b6427e_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_220b61325_ImportInfo> _220b6998d_FindPackage(_220b69471_Sema* _self_, jule::Str _22330_ident) {
	return _220bca6be_FindPackage((*_self_)._field_file.ptr(), _22330_ident);;
}



inline jule::Ptr<_220b61325_ImportInfo> _220b69c9b_SelectPackage(_220b69471_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)> _23332_selector) {
	return _220bca9cc_SelectPackage((*_self_)._field_file.ptr(), _23332_selector);;
}



inline jule::Ptr<_220b8746c_Var> _220b6a153_FindVar(_220b69471_Sema* _self_, jule::Str _24326_ident, jule::Bool _24338_cpp_linked) {
	jule::Ptr<_220b8746c_Var> _24517_v = _220b5da3c_findVarInPackage((*_self_)._field_files,_24326_ident,_24338_cpp_linked);;
	if ((_24517_v != nullptr)) {
		return _24517_v;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_205bc1416:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _25121_imp = *it;
			{
				if ((!(_220b67d98_impIsLookupable(_25121_imp,_24326_ident)))) {
					goto _iter_next_205bc1416;
				};
				_24517_v=_220b62007_FindVar(_25121_imp.ptr(), _24326_ident,_24338_cpp_linked);
				if (((_24517_v != nullptr) && _220b6c809_isAccessibleDefine(&(*_self_), _24517_v.get()._field_Public,_24517_v.get()._field_Token))) {
					return _24517_v;;
				};
			}
			_iter_next_205bc1416:;
			++it;
			goto _iter_begin_205bc1416;
		}
		_iter_end_205bc1416:;
	};
	return nullptr;;
}



inline jule::Ptr<_220c0a26a_TypeAlias> _220b6a50a_FindTypeAlias(_220b69471_Sema* _self_, jule::Str _27032_ident, jule::Bool _27044_cpp_linked) {
	jule::Ptr<_220c0a26a_TypeAlias> _27217_ta = _220b5de6b_findTypeAliasInPackage((*_self_)._field_files,_27032_ident,_27044_cpp_linked);;
	if ((_27217_ta != nullptr)) {
		return _27217_ta;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_205bc3c21:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _27821_imp = *it;
			{
				if ((!(_220b67d98_impIsLookupable(_27821_imp,_27032_ident)))) {
					goto _iter_next_205bc3c21;
				};
				_27217_ta=_220b623ae_FindTypeAlias(_27821_imp.ptr(), _27032_ident,_27044_cpp_linked);
				if (((_27217_ta != nullptr) && _220b6c809_isAccessibleDefine(&(*_self_), _27217_ta.get()._field_Public,_27217_ta.get()._field_Token))) {
					return _27217_ta;;
				};
			}
			_iter_next_205bc3c21:;
			++it;
			goto _iter_begin_205bc3c21;
		}
		_iter_end_205bc3c21:;
	};
	return nullptr;;
}



inline jule::Ptr<_21eec3006_Struct> _220b6a8b2_FindStruct(_220b69471_Sema* _self_, jule::Str _29729_ident, jule::Bool _29741_cppLinked) {
	jule::Ptr<_21eec3006_Struct> _29917_s = _220b5e356_findStructInPackage((*_self_)._field_files,_29729_ident,_29741_cppLinked);;
	if ((_29917_s != nullptr)) {
		return _29917_s;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_205bc652b:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _30421_imp = *it;
			{
				if ((!(_220b67d98_impIsLookupable(_30421_imp,_29729_ident)))) {
					goto _iter_next_205bc652b;
				};
				_29917_s=_220b62766_FindStruct(_30421_imp.ptr(), _29729_ident,_29741_cppLinked);
				if (((_29917_s != nullptr) && _220b6c809_isAccessibleDefine(&(*_self_), _29917_s.get()._field_Public,_29917_s.get()._field_Token))) {
					return _29917_s;;
				};
			}
			_iter_next_205bc652b:;
			++it;
			goto _iter_begin_205bc652b;
		}
		_iter_end_205bc652b:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b31636_Fn> _220b6ac69_FindFn(_220b69471_Sema* _self_, jule::Str _32225_ident, jule::Bool _32237_cpp_linked) {
	jule::Ptr<_220b31636_Fn> _32417_f = _220b5e7b8_findFnInPackage((*_self_)._field_files,_32225_ident,_32237_cpp_linked);;
	if ((_32417_f != nullptr)) {
		return _32417_f;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_205bc8d36:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _33021_imp = *it;
			{
				if ((!(_220b67d98_impIsLookupable(_33021_imp,_32225_ident)))) {
					goto _iter_next_205bc8d36;
				};
				_32417_f=_220b62b1d_FindFn(_33021_imp.ptr(), _32225_ident,_32237_cpp_linked);
				if (((_32417_f != nullptr) && _220b6c809_isAccessibleDefine(&(*_self_), _32417_f.get()._field_Public,_32417_f.get()._field_Token))) {
					return _32417_f;;
				};
			}
			_iter_next_205bc8d36:;
			++it;
			goto _iter_begin_205bc8d36;
		}
		_iter_end_205bc8d36:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b376b4_Trait> _220b6b077_FindTrait(_220b69471_Sema* _self_, jule::Str _34928_ident) {
	jule::Ptr<_220b376b4_Trait> _35117_t = _220b5eac6_findTraitInPackage((*_self_)._field_files,_34928_ident);;
	if ((_35117_t != nullptr)) {
		return _35117_t;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_205bcb784:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _35721_imp = *it;
			{
				if ((!(_220b67d98_impIsLookupable(_35721_imp,_34928_ident)))) {
					goto _iter_next_205bcb784;
				};
				_35117_t=_220b62e2b_FindTrait(_35721_imp.ptr(), _34928_ident);
				if (((_35117_t != nullptr) && _220b6c809_isAccessibleDefine(&(*_self_), _35117_t.get()._field_Public,_35117_t.get()._field_Token))) {
					return _35117_t;;
				};
			}
			_iter_next_205bcb784:;
			++it;
			goto _iter_begin_205bcb784;
		}
		_iter_end_205bcb784:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b38374_Enum> _220b6b385_FindEnum(_220b69471_Sema* _self_, jule::Str _37627_ident) {
	jule::Ptr<_220b38374_Enum> _37817_e = _220b5ee17_findEnumInPackage((*_self_)._field_files,_37627_ident);;
	if ((_37817_e != nullptr)) {
		return _37817_e;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_205bcdd3b:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _38421_imp = *it;
			{
				if ((!(_220b67d98_impIsLookupable(_38421_imp,_37627_ident)))) {
					goto _iter_next_205bcdd3b;
				};
				_37817_e=_220b63239_FindEnum(_38421_imp.ptr(), _37627_ident);
				if (((_37817_e != nullptr) && _220b6c809_isAccessibleDefine(&(*_self_), _37817_e.get()._field_Public,_37817_e.get()._field_Token))) {
					return _37817_e;;
				};
			}
			_iter_next_205bcdd3b:;
			++it;
			goto _iter_begin_205bcdd3b;
		}
		_iter_end_205bcdd3b:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b38ae4_TypeEnum> _220b6b693_FindTypeEnum(_220b69471_Sema* _self_, jule::Str _40331_ident) {
	jule::Ptr<_220b38ae4_TypeEnum> _40517_e = _220b60258_findTypeEnumInPackage((*_self_)._field_files,_40331_ident);;
	if ((_40517_e != nullptr)) {
		return _40517_e;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_205bd13e3:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _41121_imp = *it;
			{
				if ((!(_220b67d98_impIsLookupable(_41121_imp,_40331_ident)))) {
					goto _iter_next_205bd13e3;
				};
				_40517_e=_220b63547_FindTypeEnum(_41121_imp.ptr(), _40331_ident);
				if (((_40517_e != nullptr) && _220b6c809_isAccessibleDefine(&(*_self_), _40517_e.get()._field_Public,_40517_e.get()._field_Token))) {
					return _40517_e;;
				};
			}
			_iter_next_205bd13e3:;
			++it;
			goto _iter_begin_205bd13e3;
		}
		_iter_end_205bd13e3:;
	};
	return nullptr;;
}



inline jule::Bool _220b6b9e5_isFlag(_220b69471_Sema* _self_, jule::I64 _42721_flags) {
	return (((*_self_)._field_flags & _42721_flags) == _42721_flags);;
}



inline void _220b6bc6a_setCurrentFile(_220b69471_Sema* _self_, jule::Ptr<_220bca1a2_SymbolTable> _42937_f) {
	(*_self_)._field_file=_42937_f;
}



inline void _220b6c133_pushErr(_220b69471_Sema* _self_, jule::Ptr<_21d81d743_Token> _43126_token, jule::Str _43141_fmt, jule::Slice<jule::Any> _43154_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_220b67a57_compilerErr(_43126_token,true,_43141_fmt,_43154_args));;
}



inline void _220b6c452_pushSugggestion(_220b69471_Sema* _self_, jule::Str _43634_fmt, jule::Slice<jule::Any> _43647_args) {
	{
		_220b68edc_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43634_fmt,_43647_args);
	};
}



inline jule::Bool _220b6c809_isAccessibleDefine(_220b69471_Sema* _self_, jule::Bool _44133_public, jule::Ptr<_21d81d743_Token> _44147_token) {
	return ((_44133_public || (_44147_token.get()._field_File == nullptr)) || (_21d8244c4_Dir((*_self_)._field_file.get()._field_File.ptr()) == _21d8244c4_Dir(_44147_token.get()._field_File.ptr())));;
}



inline jule::Bool _220b6cc5a_isDuplicatedIdent(_220b69471_Sema* _self_, jule::Uintptr _44832_itself, jule::Str _44849_ident, jule::Bool _44861_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_205bd787d:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> &_44916_f = *it;
			{
				if (_220bcd6a0_isDuplicatedIdent(_44916_f.ptr(), _44832_itself,_44849_ident,_44861_cpp_linked)) {
					return true;;
				};
				{
					auto &expr = _44916_f.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_205bd8708:;
					if (it != expr.end()) {
						jule::Ptr<_220b61325_ImportInfo> &_45420_imp = *it;
						{
							{
								auto &expr = _45420_imp.get()._field_Selected;
								auto it = expr.begin();
								_iter_begin_205bd8ebc:;
								if (it != expr.end()) {
									jule::Ptr<_21d81d743_Token> &_45524_selected = *it;
									{
										if ((_45524_selected.get()._field_Kind == _44849_ident)) {
											return true;;
										};
									}
									_iter_next_205bd8ebc:;
									++it;
									goto _iter_begin_205bd8ebc;
								}
								_iter_end_205bd8ebc:;
							};
						}
						_iter_next_205bd8708:;
						++it;
						goto _iter_begin_205bd8708;
					}
					_iter_end_205bd8708:;
				};
			}
			_iter_next_205bd787d:;
			++it;
			goto _iter_begin_205bd787d;
		}
		_iter_end_205bd787d:;
	};
	return false;;
}



inline void _220b6d079_checkDirectives(jule::Ptr<_220b69471_Sema> _self_, jule::Slice<jule::Ptr<_21ee6d710_Directive>>& _46540_d, jule::Any _46566_o) {
	_220b5a297_directiveChecker _46617_dc = _220b5a297_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_21ee6d710_Directive>>>)((&(_46540_d)))), ._field_o=_46566_o};;
	_220b5b8a3_check(&_46617_dc);
}



inline jule::Bool _220b6d4ca_checkGenericQuantity(_220b69471_Sema* _self_, jule::I64 _47439_required, jule::I64 _47454_given, jule::Ptr<_21d81d743_Token> _47466_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_47439_required == 0LL) && (_47454_given > 0LL))) {
			_case_begin_205bdbbe5:;
			{
				_220b6c133_pushErr(&(*_self_), _47466_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_47439_required > 0LL) && (_47454_given == 0LL))) {
			_case_begin_205bdb50d:;
			{
				_220b6c133_pushErr(&(*_self_), _47466_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required < _47454_given)) {
			_case_begin_205bdb574:;
			{
				_220b6c133_pushErr(&(*_self_), _47466_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required > _47454_given)) {
			_case_begin_205bdb5eb:;
			{
				_220b6c133_pushErr(&(*_self_), _47466_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_205bdb497:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_205bdb3cb:;
	};
}



inline jule::Bool _220b6d8a4_isDuplicatedImportSelection(_220b69471_Sema* _self_, jule::Uintptr _49342_itself, jule::Str _49359_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_205bdcee3:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> &_49416_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49416_imp) == _49342_itself)) {
					goto _iter_end_205bdcee3;
				};
				if (_220b63beb_existIdent(_49416_imp.ptr(), _49359_ident)) {
					return true;;
				};
			}
			_iter_next_205bdcee3:;
			++it;
			goto _iter_begin_205bdcee3;
		}
		_iter_end_205bdcee3:;
	};
	return false;;
}



inline jule::Any _220b6dc6c_getImportDef(_220b69471_Sema* _self_, jule::Str _50627_ident, jule::Ptr<_220b61325_ImportInfo>& _50644_imp) {
	if ((_220c36bae_findPackageBuiltinDef(_50644_imp.get()._field_LinkPath,_50627_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type5);;
	};
	{
		auto &expr = _50644_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_205be10b2:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _51021_f = *it;
			{
				;
				jule::Any _51321_def = _220bcd24e_defByIdent(_51021_f.ptr(), _50627_ident,false);;
				if ((_51321_def != nullptr)) {
					return _51321_def;;
				};
			}
			_iter_next_205be10b2:;
			++it;
			goto _iter_begin_205be10b2;
		}
		_iter_end_205be10b2:;
	};
	return nullptr;;
}



inline jule::Bool _205be7b46_checkImportSelection(_220b69471_Sema* _self_, jule::Ptr<_21d81d743_Token>& _52143_ident, jule::Ptr<_220b8746c_Var>& _52159_s) {
	if ((!(_220b6c809_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_220b6c133_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type6)}));
		_220b6c452_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_220b60753_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_220b6c133_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type6)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _205bebb17_checkImportSelection(_220b69471_Sema* _self_, jule::Ptr<_21d81d743_Token>& _52143_ident, jule::Ptr<_220c0a26a_TypeAlias>& _52159_s) {
	if ((!(_220b6c809_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_220b6c133_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type6)}));
		_220b6c452_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_220b60753_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_220b6c133_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type6)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _205c00aa5_checkImportSelection(_220b69471_Sema* _self_, jule::Ptr<_21d81d743_Token>& _52143_ident, jule::Ptr<_21eec3006_Struct>& _52159_s) {
	if ((!(_220b6c809_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_220b6c133_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type6)}));
		_220b6c452_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_220b60753_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_220b6c133_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type6)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _205c04bca_checkImportSelection(_220b69471_Sema* _self_, jule::Ptr<_21d81d743_Token>& _52143_ident, jule::Ptr<_220b376b4_Trait>& _52159_s) {
	if ((!(_220b6c809_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_220b6c133_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type6)}));
		_220b6c452_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_220b60753_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_220b6c133_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type6)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _205c08b68_checkImportSelection(_220b69471_Sema* _self_, jule::Ptr<_21d81d743_Token>& _52143_ident, jule::Ptr<_220b38374_Enum>& _52159_s) {
	if ((!(_220b6c809_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_220b6c133_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type6)}));
		_220b6c452_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_220b60753_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_220b6c133_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type6)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _205c0cb06_checkImportSelection(_220b69471_Sema* _self_, jule::Ptr<_21d81d743_Token>& _52143_ident, jule::Ptr<_220b38ae4_TypeEnum>& _52159_s) {
	if ((!(_220b6c809_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_220b6c133_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type6)}));
		_220b6c452_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_220b60753_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_220b6c133_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type6)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _205c11a94_checkImportSelection(_220b69471_Sema* _self_, jule::Ptr<_21d81d743_Token>& _52143_ident, jule::Ptr<_220b31636_Fn>& _52159_s) {
	if ((!(_220b6c809_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_220b6c133_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type6)}));
		_220b6c452_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_220b60753_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_220b6c133_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type6)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _220b6e454_checkImportSelectedSelections(_220b69471_Sema* _self_, jule::Ptr<_220b61325_ImportInfo>& _53553_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _53553_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_205be3438:;
		if (it != expr.end()) {
			jule::Ptr<_21d81d743_Token> _53716_ident = *it;
			{
				if ((_53716_ident.get()._field_Kind == jule::Str("self", 4))) {
					goto _iter_next_205be3438;
				};
				if (_220b6d8a4_isDuplicatedImportSelection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_53553_imp)),_53716_ident.get()._field_Kind)) {
					_220b6c133_pushErr(&(*_self_), _53716_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type6)}));
					_220b6c452_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_205be3438;
				};
				jule::Any _54921_def = _220b6dc6c_getImportDef(&(*_self_), _53716_ident.get()._field_Kind,_53553_imp);;
				{
					auto &_match_expr{ _54921_def };
					
					if (_match_expr.type == &__jule_any_type5) {
						_case_begin_205be6705:;
						{
							goto _iter_next_205be3438;
						}
					}
					else if (_match_expr.type == &__jule_any_type9) {
						_case_begin_205be3b42:;
						{
							jule::Ptr<_220b8746c_Var> _55525_v = _54921_def.cast_ptr<_220b8746c_Var>(&__jule_any_type9);;
							__jule_func_result=(_205be7b46_checkImportSelection(&(*_self_), _53716_ident,_55525_v) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_205be5c76:;
						{
							jule::Ptr<_220c0a26a_TypeAlias> _55825_ta = _54921_def.cast_ptr<_220c0a26a_TypeAlias>(&__jule_any_type68);;
							__jule_func_result=(_205bebb17_checkImportSelection(&(*_self_), _53716_ident,_55825_ta) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_205be5ced:;
						{
							jule::Ptr<_21eec3006_Struct> _56125_s = _54921_def.cast_ptr<_21eec3006_Struct>(&__jule_any_type67);;
							__jule_func_result=(_205c00aa5_checkImportSelection(&(*_self_), _53716_ident,_56125_s) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type11) {
						_case_begin_205be5d75:;
						{
							jule::Ptr<_220b376b4_Trait> _56425_t = _54921_def.cast_ptr<_220b376b4_Trait>(&__jule_any_type11);;
							__jule_func_result=(_205c04bca_checkImportSelection(&(*_self_), _53716_ident,_56425_t) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_205be5dec:;
						{
							jule::Ptr<_220b38374_Enum> _56725_e = _54921_def.cast_ptr<_220b38374_Enum>(&__jule_any_type69);;
							__jule_func_result=(_205c08b68_checkImportSelection(&(*_self_), _53716_ident,_56725_e) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type70) {
						_case_begin_205be6925:;
						{
							jule::Ptr<_220b38ae4_TypeEnum> _57025_e = _54921_def.cast_ptr<_220b38ae4_TypeEnum>(&__jule_any_type70);;
							__jule_func_result=(_205c0cb06_checkImportSelection(&(*_self_), _53716_ident,_57025_e) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_205be699c:;
						{
							jule::Ptr<_220b31636_Fn> _57325_f = _54921_def.cast_ptr<_220b31636_Fn>(&__jule_any_type66);;
							__jule_func_result=(_205c11a94_checkImportSelection(&(*_self_), _53716_ident,_57325_f) && __jule_func_result);
						}
					}
					else {
						_case_begin_205be5b11:;
						{
							_220b6c133_pushErr(&(*_self_), _53716_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type6)}));
							__jule_func_result=false;
							goto _iter_next_205be3438;
						}
					}
					_match_end_205be5aab:;
				};
			}
			_iter_next_205be3438:;
			++it;
			goto _iter_begin_205be3438;
		}
		_iter_end_205be3438:;
	};
	return __jule_func_result;;
}



inline jule::Bool _205c1602c_checkImportsAllSelectionsFromCollection(_220b69471_Sema* _self_, jule::Slice<jule::Ptr<_220b8746c_Var>>& _58462_s, jule::Ptr<_21d81d743_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_205c17c10:;
		if (it != expr.end()) {
			jule::Ptr<_220b8746c_Var> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_205be7b46_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_205c17c10:;
			++it;
			goto _iter_begin_205c17c10;
		}
		_iter_end_205c17c10:;
	};
	return _58517_ok;;
}

inline jule::Bool _205c195b3_checkImportsAllSelectionsFromCollection(_220b69471_Sema* _self_, jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>& _58462_s, jule::Ptr<_21d81d743_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_205c1a97c:;
		if (it != expr.end()) {
			jule::Ptr<_220c0a26a_TypeAlias> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_205bebb17_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_205c1a97c:;
			++it;
			goto _iter_begin_205c1a97c;
		}
		_iter_end_205c1a97c:;
	};
	return _58517_ok;;
}

inline jule::Bool _205c19bbd_checkImportsAllSelectionsFromCollection(_220b69471_Sema* _self_, jule::Slice<jule::Ptr<_21eec3006_Struct>>& _58462_s, jule::Ptr<_21d81d743_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_205c1d6d8:;
		if (it != expr.end()) {
			jule::Ptr<_21eec3006_Struct> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_205c00aa5_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_205c1d6d8:;
			++it;
			goto _iter_begin_205c1d6d8;
		}
		_iter_end_205c1d6d8:;
	};
	return _58517_ok;;
}

inline jule::Bool _205c2008b_checkImportsAllSelectionsFromCollection(_220b69471_Sema* _self_, jule::Slice<jule::Ptr<_220b31636_Fn>>& _58462_s, jule::Ptr<_21d81d743_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_205c21466:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_205c11a94_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_205c21466:;
			++it;
			goto _iter_begin_205c21466;
		}
		_iter_end_205c21466:;
	};
	return _58517_ok;;
}

inline jule::Bool _205c206a7_checkImportsAllSelectionsFromCollection(_220b69471_Sema* _self_, jule::Slice<jule::Ptr<_220b376b4_Trait>>& _58462_s, jule::Ptr<_21d81d743_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_205c2417d:;
		if (it != expr.end()) {
			jule::Ptr<_220b376b4_Trait> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_205c04bca_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_205c2417d:;
			++it;
			goto _iter_begin_205c2417d;
		}
		_iter_end_205c2417d:;
	};
	return _58517_ok;;
}

inline jule::Bool _205c233be_checkImportsAllSelectionsFromCollection(_220b69471_Sema* _self_, jule::Slice<jule::Ptr<_220b38374_Enum>>& _58462_s, jule::Ptr<_21d81d743_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_205c26d95:;
		if (it != expr.end()) {
			jule::Ptr<_220b38374_Enum> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_205c08b68_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_205c26d95:;
			++it;
			goto _iter_begin_205c26d95;
		}
		_iter_end_205c26d95:;
	};
	return _58517_ok;;
}

inline jule::Bool _205c260d6_checkImportsAllSelectionsFromCollection(_220b69471_Sema* _self_, jule::Slice<jule::Ptr<_220b38ae4_TypeEnum>>& _58462_s, jule::Ptr<_21d81d743_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_205c29b45:;
		if (it != expr.end()) {
			jule::Ptr<_220b38ae4_TypeEnum> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_205c0cb06_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_205c29b45:;
			++it;
			goto _iter_begin_205c29b45;
		}
		_iter_end_205c29b45:;
	};
	return _58517_ok;;
}



inline jule::Bool _220b6eb80_checkImportAllSelections(_220b69471_Sema* _self_, jule::Ptr<_220b61325_ImportInfo>& _59444_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _59444_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_205be70b8:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> &_59616_file = *it;
			{
				__jule_func_result=(_205c1602c_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Vars,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_205c195b3_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_TypeAliases,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_205c19bbd_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Structs,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_205c2008b_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Funcs,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_205c206a7_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Traits,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_205c233be_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Enums,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_205c260d6_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_TypeEnums,_59444_imp.get()._field_Token) && __jule_func_result);
			}
			_iter_next_205be70b8:;
			++it;
			goto _iter_begin_205be70b8;
		}
		_iter_end_205be70b8:;
	};
	return __jule_func_result;;
}



inline jule::Bool _220b6ee9e_checkImportSelections(_220b69471_Sema* _self_, jule::Ptr<_220b61325_ImportInfo>& _60845_imp) {
	jule::Bool __jule_func_result = false;
	if ((_60845_imp.get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _220b6e454_checkImportSelectedSelections(&(*_self_), _60845_imp);
		return __jule_func_result;;
	} else if (_60845_imp.get()._field_ImportAll) {
		__jule_func_result = _220b6eb80_checkImportAllSelections(&(*_self_), _60845_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _220b702ac_isUseAliasDuplication(_220b69471_Sema* _self_, jule::Ptr<_220b61325_ImportInfo>& _61741_imp) {
	if ((_61741_imp.get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_205c2c461:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _62221_imp2 = *it;
			{
				if ((_62221_imp2 == _61741_imp)) {
					goto _iter_end_205c2c461;
				};
				if ((_62221_imp2.get()._field_Alias == _61741_imp.get()._field_Alias)) {
					return true;;
				};
				if (((_62221_imp2.get()._field_Ident == _62221_imp2.get()._field_LinkPath) && (_62221_imp2.get()._field_Ident == _61741_imp.get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_205c2c461:;
			++it;
			goto _iter_begin_205c2c461;
		}
		_iter_end_205c2c461:;
	};
	return false;;
}



inline jule::Bool _220b705ba_checkImport(_220b69471_Sema* _self_, jule::Ptr<_220b61325_ImportInfo>& _63735_imp) {
	if ((_63735_imp.get()._field_CppLinked || (_63735_imp.get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_220b702ac_isUseAliasDuplication(&(*_self_), _63735_imp)) {
		_220b6c133_pushErr(&(*_self_), _63735_imp.get()._field_Token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_63735_imp.get()._field_Alias, &__jule_any_type6)}));
		_220b6c452_pushSugggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_63735_imp.get()._field_Duplicate))) {
		jule::Ptr<_220b69471_Sema> _64821_sema = jule::new_ptr<_220b69471_Sema>(_220b69471_Sema{._field_flags=(*_self_)._field_flags});;
		_220b843c0_check(_64821_sema, _63735_imp.get()._field_Package.get()._field_Files);
		if ((_64821_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_64821_sema.get()._field_errors);
			_64821_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _220b6ee9e_checkImportSelections(&(*_self_), _63735_imp);;
}



inline void _220b70796_checkImports(_220b69471_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_205c3306b:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _66221_file = *it;
			{
				_220b6bc6a_setCurrentFile(&(*_self_), _66221_file);
				{
					auto &expr = _66221_file.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_205c33bc6:;
					if (it != expr.end()) {
						jule::Ptr<_220b61325_ImportInfo> _66425_imp = *it;
						{
							jule::Bool _66521_ok = _220b705ba_checkImport(&(*_self_), _66425_imp);;
							if ((!(_66521_ok))) {
								return;;
							};
						}
						_iter_next_205c33bc6:;
						++it;
						goto _iter_begin_205c33bc6;
					}
					_iter_end_205c33bc6:;
				};
			}
			_iter_next_205c3306b:;
			++it;
			goto _iter_begin_205c3306b;
		}
		_iter_end_205c3306b:;
	};
}



inline void _220b70972_implFileImpls(jule::Ptr<_220b69471_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Impls;
		auto it = expr.begin();
		_iter_begin_205c33797:;
		if (it != expr.end()) {
			jule::Ptr<_220b3cab5_Impl> _67521_imp = *it;
			{
				_220b7b4a5_implImpl(_self_, _67521_imp);
			}
			_iter_next_205c33797:;
			++it;
			goto _iter_begin_205c33797;
		}
		_iter_end_205c33797:;
	};
}



inline void _220b70b4d_implImpls(jule::Ptr<_220b69471_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_205c357aa:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _68121_file = *it;
			{
				_220b6bc6a_setCurrentFile(_self_.ptr(), _68121_file);
				_220b70972_implFileImpls(_self_);
			}
			_iter_next_205c357aa:;
			++it;
			goto _iter_begin_205c357aa;
		}
		_iter_end_205c357aa:;
	};
}



inline void _220b70d29_checkEnums(jule::Ptr<_220b69471_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_205c36833:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _68821_file = *it;
			{
				_220b6bc6a_setCurrentFile(_self_.ptr(), _68821_file);
				_220b78ace_checkEnumDecls(_self_);
			}
			_iter_next_205c36833:;
			++it;
			goto _iter_begin_205c36833;
		}
		_iter_end_205c36833:;
	};
}



inline _220c197c9_typeChecker _220b7127a_typeChecker(jule::Ptr<_220b69471_Sema> _self_, jule::Trait<_220c2bc3c_Lookup> _69435_l, jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>> _69450_generics, jule::Ptr<_220c188e9_referencer> _69513_referencer) {
	_220c197c9_typeChecker _69617_tc = _220c197c9_typeChecker{._field_s=_self_, ._field_rootLookup=_69435_l, ._field_lookup=_69435_l, ._field_referencer=_69513_referencer, ._field_useGenerics=_69450_generics, };;
	{
		auto &_match_expr{ _69435_l };
		
		if (_match_expr.type_is<jule::Ptr<_220b49682_scopeChecker>>()) {
			_case_begin_205c382c4:;
			{
				jule::Ptr<_220b49682_scopeChecker> _70521_hard = _220b4ca3c_getHardRoot(_69435_l.operator jule::Ptr<_220b49682_scopeChecker>());;
				_69617_tc._field_refers=_70521_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_205c381d6:;
	};
	if (((_69513_referencer != nullptr) && (_69513_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _69513_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type68) {
				_case_begin_205c39726:;
				{
					_69617_tc._field_ownerAlias=_69513_referencer.get()._field_owner.cast_ptr<_220c0a26a_TypeAlias>(&__jule_any_type68);
				}
			}
			_match_end_205c396c1:;
		};
	};
	return _69617_tc;;
}



inline jule::Ptr<_220c0ae5d_TypeKind> _220b71775_buildTypeWithRefers(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eea19a7_TypeDecl>& _72144_t, jule::Trait<_220c2bc3c_Lookup> _72167_l, jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>> _72213_generics, jule::Ptr<_220c188e9_referencer> _72241_referencer) {
	return ({ auto _wrap_copy = _220b7127a_typeChecker(_self_, _72167_l,_72213_generics,_72241_referencer); _220c268a2_checkDecl(&_wrap_copy, _72144_t); });;
}



inline jule::Bool _220b71c70_checkTypeWithRefers(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220c1033b_TypeSymbol>& _72844_t, jule::Trait<_220c2bc3c_Lookup> _72864_l, jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>> _72913_generics, jule::Ptr<_220c188e9_referencer> _72941_referencer) {
	jule::Bool __jule_func_result = false;
	if (_220c106e3_checked(_72844_t.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_72844_t.get()._field_Kind=_220b71775_buildTypeWithRefers(_self_, _72844_t.get()._field_Decl,_72864_l,_72913_generics,_72941_referencer);
	__jule_func_result = _220c106e3_checked(_72844_t.ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_220b3ab7e_constraintChecker> _220b71ed4_constraintChecker(jule::Ptr<_220b69471_Sema> _self_) {
	return jule::new_ptr<_220b3ab7e_constraintChecker>(_220b3ab7e_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _220b7238b_checkType(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220c1033b_TypeSymbol>& _74334_t, jule::Trait<_220c2bc3c_Lookup> _74354_l) {
	return _220b71c70_checkTypeWithRefers(_self_, _74334_t,_74354_l,nullptr,nullptr);;
}



inline jule::Ptr<_220c0ae5d_TypeKind> _220b727dc_buildTypeWithGenerics(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eea19a7_TypeDecl>& _74946_t, jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>> _75013_generics, jule::Ptr<_220b329ab_ReferenceStack> _75041_refers) {
	jule::Ptr<_220c197c9_typeChecker> _75117_tc = jule::new_ptr<_220c197c9_typeChecker>(_220c197c9_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_220c2bc3c_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_220c2bc3c_Lookup>(_self_, 3), ._field_refers=_75041_refers, ._field_useGenerics=_75013_generics, });;
	return _220c268a2_checkDecl(_75117_tc.ptr(), _74946_t);;
}



inline jule::Ptr<_220c0ae5d_TypeKind> _220b72aea_buildType(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eea19a7_TypeDecl>& _76234_t) {
	return _220b727dc_buildTypeWithGenerics(_self_, _76234_t,nullptr,nullptr);;
}



inline jule::Ptr<_220c0ae5d_TypeKind> _220b72e08_selectType(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eea19a7_TypeDecl>& _76735_t) {
	jule::Ptr<_220c197c9_typeChecker> _76817_tc = jule::new_ptr<_220c197c9_typeChecker>(_220c197c9_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_220c2bc3c_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_220c2bc3c_Lookup>(_self_, 3), ._field_selection=true, });;
	return _220c268a2_checkDecl(_76817_tc.ptr(), _76735_t);;
}



inline jule::Ptr<_220bd1a49_Eval> _220b73359_evalpd(jule::Ptr<_220b69471_Sema> _self_, jule::Trait<_220c2bc3c_Lookup> _77930_l, jule::Ptr<_220c0ae5d_TypeKind> _77945_p, jule::Ptr<_220b8746c_Var> _77963_owner) {
	jule::Ptr<_220bd1a49_Eval> _78017_e = jule::new_ptr<_220bd1a49_Eval>(_220bd1a49_Eval{._field_s=_self_, ._field_lookup=_77930_l, ._field_owner=_77963_owner, });;
	{
		auto &_match_expr{ _77930_l };
		
		if (_match_expr.type_is<jule::Ptr<_220b49682_scopeChecker>>()) {
			_case_begin_205c42960:;
			{
				_78017_e.get()._field_unsafety=_220b4bb4b_isUnsafe(_77930_l.operator jule::Ptr<_220b49682_scopeChecker>());
			}
		}
		_match_end_205c428e9:;
	};
	_78017_e.get()._field_prefix=_77945_p;
	return _78017_e;;
}



inline jule::Ptr<_220bd1a49_Eval> _220b73711_evalp(jule::Ptr<_220b69471_Sema> _self_, jule::Trait<_220c2bc3c_Lookup> _79429_l, jule::Ptr<_220c0ae5d_TypeKind> _79444_p) {
	return _220b73359_evalpd(_self_, _79429_l,_79444_p,nullptr);;
}



inline jule::Ptr<_220bd1a49_Eval> _220b73a1e_eval(jule::Ptr<_220b69471_Sema> _self_, jule::Trait<_220c2bc3c_Lookup> _79928_l) {
	return _220b73711_evalp(_self_, _79928_l,nullptr);;
}



inline jule::Bool _220b74019_checkAssignType(jule::Ptr<_220b69471_Sema> _self_, jule::Bool _80335_destIsRef, jule::Ptr<_220c0ae5d_TypeKind>& _80357_dest, jule::Ptr<_220bceecb_Data>& _80414_d, jule::Ptr<_21d81d743_Token> _80428_errorToken) {
	if (_80414_d.get()._field_Decl) {
		_220b6c133_pushErr(_self_.ptr(), _80428_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;;
	};
	if (_80335_destIsRef) {
		if ((!(_220c0b667_Equal(_80357_dest, _80414_d.get()._field_Kind)))) {
			_220b6c133_pushErr(_self_.ptr(), _80428_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_80357_dest.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_80414_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
			return false;;
		};
	} else {
		jule::Ptr<_220bba8bd_assignTypeChecker> _81521_atc = jule::new_ptr<_220bba8bd_assignTypeChecker>(_220bba8bd_assignTypeChecker{._field_s=_self_, ._field_dest=_80357_dest, ._field_d=_80414_d, ._field_errorToken=_80428_errorToken});;
		jule::Bool _82117_ok = _220bbba45_check(_81521_atc.ptr());;
		if ((!(_82117_ok))) {
			return false;;
		};
	};
	if (((!(_220bd088e_IsConst(_80414_d.ptr()))) || (_220c0d2e5_Prim(_80357_dest.ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _83117_kind = _220c0d2e5_Prim(_80357_dest.ptr()).get()._field_Kind;;
	{
		
		if (_220b26d35_IsSigInt(_83117_kind)) {
			_case_begin_205c490c6:;
			{
				_220b2841e_SetI64(_80414_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_220b28078_AsI64(_80414_d.get()._field_Constant.ptr())));
			}
		}
		else if (_220b26e67_IsUnsigInt(_83117_kind)) {
			_case_begin_205c4914d:;
			{
				_220b28551_SetU64(_80414_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_220b281aa_AsU64(_80414_d.get()._field_Constant.ptr())));
			}
		}
		else if (_220b271cb_IsFloat(_83117_kind)) {
			_case_begin_205c491c5:;
			{
				_220b288e7_SetF64(_80414_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_220b282dc_AsF64(_80414_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_205c4900a:;
	};
	return true;;
}



inline jule::Bool _220b7446a_checkTypeCompatibility(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220c0ae5d_TypeKind>& _84547_dest, jule::Ptr<_220c0ae5d_TypeKind>& _84614_src, jule::Ptr<_21d81d743_Token>& _84635_errorToken) {
	if ((_84614_src == nullptr)) {
		_220b6c133_pushErr(_self_.ptr(), _84635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_84547_dest.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_84614_src.ptr()), &__jule_any_type6)}));
		return false;;
	};
	if ((_220c0ee84_Tup(_84614_src.ptr()) != nullptr)) {
		_220b6c133_pushErr(_self_.ptr(), _84635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_84547_dest.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_84614_src.ptr()), &__jule_any_type6)}));
		return false;;
	};
	_220bb8c95_typeCompatibilityChecker _86017_tcc = _220bb8c95_typeCompatibilityChecker{._field_s=_self_, ._field_dest=_84547_dest, ._field_src=_84614_src, ._field_errorToken=_84635_errorToken};;
	if (_220bba37e_check(&_86017_tcc)) {
		return true;;
	};
	_220b6c133_pushErr(_self_.ptr(), _84635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_84547_dest.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_84614_src.ptr()), &__jule_any_type6)}));
	return false;;
}



inline jule::Ptr<_220c0ae5d_TypeKind> _220b748dd_buildNonGenericTypeKind(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eea19a7_TypeDecl>& _88148_ast, jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>>& _88214_generics, jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>>& _88250_ignored) {
	jule::Ptr<_220c197c9_typeChecker> _88317_tc = jule::new_ptr<_220c197c9_typeChecker>(_220c197c9_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_220c2bc3c_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_220c2bc3c_Lookup>(_self_, 3), ._field_ignoreGenerics=_88214_generics, ._field_ignoredGenerics=(&(_88250_ignored)), });;
	return _220c268a2_checkDecl(_88317_tc.ptr(), _88148_ast);;
}



inline jule::Bool _220b74cc8_buildFnNonGenericTypeKinds(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b31a10_FnIns>& _89351_f, jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>>& _89367_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>> _89517_generics = nullptr;;
	if (_22004d735_IsMethod(_89351_f.get()._field_Decl.ptr())) {
		_89517_generics=jule::append(_89351_f.get()._field_Decl.get()._field_Generics,_89351_f.get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_89517_generics=_89351_f.get()._field_Decl.get()._field_Generics;
	};
	{
		auto &expr = _89351_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_205c5273e:;
		if (it != expr.end()) {
			jule::Ptr<_220b31823_ParamIns> _90221_p = *it;
			{
				if ((!(_22001a45a_IsSelf(_90221_p.get()._field_Decl.ptr())))) {
					_90221_p.get()._field_Kind=_220b748dd_buildNonGenericTypeKind(_self_, _90221_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_89517_generics,_89367_ignored);
					__jule_func_result=(__jule_func_result && (_90221_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_205c5273e:;
			++it;
			goto _iter_begin_205c5273e;
		}
		_iter_end_205c5273e:;
	};
	if ((!(_22001c270_IsVoid(_89351_f.get()._field_Decl.ptr())))) {
		_89351_f.get()._field_Result=_220b748dd_buildNonGenericTypeKind(_self_, _89351_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_89517_generics,_89367_ignored);
		__jule_func_result=(__jule_func_result && (_89351_f.get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_220b31a10_FnIns> _220b750e7_getTraitCheckFnKind(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b31636_Fn>& _91544_f) {
	if ((_91544_f.get()._field_Instances.len() == 1LL)) {
		return _91544_f.get()._field_Instances[0LL];;
	};
	jule::Ptr<_220b31a10_FnIns> _91917_ins = _220012e14_instanceForce(_91544_f);;
	jule::Ptr<_220c197c9_typeChecker> _92117_tc = jule::new_ptr<_220c197c9_typeChecker>(_220c197c9_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_220c2bc3c_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_220c2bc3c_Lookup>(_self_, 3), });;
	{
		auto &expr = _91917_ins.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_205c5606c:;
		if (it != expr.end()) {
			jule::Ptr<_220b31823_ParamIns> _92621_p = *it;
			{
				if ((!(_22001a45a_IsSelf(_92621_p.get()._field_Decl.ptr())))) {
					_92621_p.get()._field_Kind=_220c268a2_checkDecl(_92117_tc.ptr(), _92621_p.get()._field_Decl.get()._field_Kind.get()._field_Decl);
				};
			}
			_iter_next_205c5606c:;
			++it;
			goto _iter_begin_205c5606c;
		}
		_iter_end_205c5606c:;
	};
	if ((!(_22001c270_IsVoid(_91544_f.ptr())))) {
		_91917_ins.get()._field_Result=_220c268a2_checkDecl(_92117_tc.ptr(), _91544_f.get()._field_Result.get()._field_Kind.get()._field_Decl);
	};
	return _91917_ins;;
}



inline jule::Bool _220b75548_checkConstraintsFn(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b31a10_FnIns>& _93843_f, jule::Ptr<_21d81d743_Token>& _93859_et, jule::Ptr<_220b31a10_FnIns> _93875_exist) {
	jule::Ptr<_220b3ab7e_constraintChecker> _93917_cc = _220b71ed4_constraintChecker(_self_);;
	_93917_cc.get()._field_et=_93859_et;
	_93917_cc.get()._field_fi=_93843_f;
	if ((_93875_exist != nullptr)) {
		{
			auto &expr = _93875_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_205c5abed:;
			if (it != expr.end()) {
				jule::I64 _94318_i = it - expr.begin();
				jule::Ptr<_220c09731_InsGeneric> _94325_g = *it;
				{
					_93843_f.get()._field_Generics[_94318_i].get()._field_Constraint=_94325_g.get()._field_Constraint;
				}
				_iter_next_205c5abed:;
				++it;
				_94318_i++;
				goto _iter_begin_205c5abed;
			}
			_iter_end_205c5abed:;
		};
	} else {
		_93917_cc.get()._field_uniq=true;
	};
	return _220b3ba5e_check(_93917_cc);;
}



inline jule::Bool _220b75999_checkConstraintsStruct(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eec33d0_StructIns>& _95247_s, jule::Ptr<_21d81d743_Token>& _95267_et, jule::Ptr<_21eec33d0_StructIns> _95283_exist) {
	jule::Ptr<_220b3ab7e_constraintChecker> _95317_cc = _220b71ed4_constraintChecker(_self_);;
	_95317_cc.get()._field_et=_95267_et;
	_95317_cc.get()._field_si=_95247_s;
	if ((_95283_exist != nullptr)) {
		{
			auto &expr = _95283_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_205c5d706:;
			if (it != expr.end()) {
				jule::I64 _95718_i = it - expr.begin();
				jule::Ptr<_220c09731_InsGeneric> _95725_g = *it;
				{
					_95247_s.get()._field_Generics[_95718_i].get()._field_Constraint=_95725_g.get()._field_Constraint;
				}
				_iter_next_205c5d706:;
				++it;
				_95718_i++;
				goto _iter_begin_205c5d706;
			}
			_iter_end_205c5d706:;
		};
	} else {
		_95317_cc.get()._field_uniq=true;
	};
	return _220b3ba5e_check(_95317_cc);;
}



inline jule::Bool _220b75d51_fnEnvironment(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b31a10_FnIns>& _96938_f, jule::Fn<jule::Bool(jule::Ptr<_220b69471_Sema>&,jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>&)> _96949_algo) {
	jule::Ptr<_220b69471_Sema> _97017_sema = _96938_f.get()._field_Decl.get()._field_sema;;
	jule::Ptr<_220bca1a2_SymbolTable> _97117_old = _96938_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_220b6bc6a_setCurrentFile(_96938_f.get()._field_Decl.get()._field_sema.ptr(), _97117_old);
	});;
	jule::Ptr<_220bca1a2_SymbolTable> _97317_file = _220b68a7a_findFile(_96938_f.get()._field_Decl.get()._field_sema.get()._field_files,_96938_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_97317_file != nullptr)) {
		_220b6bc6a_setCurrentFile(_96938_f.get()._field_Decl.get()._field_sema.ptr(), _97317_file);
	};
	jule::I64 _97817_size = _96938_f.get()._field_Generics.len();;
	if (((_96938_f.get()._field_Decl != nullptr) && (_96938_f.get()._field_Decl.get()._field_Owner != nullptr))) {
		_97817_size+=_96938_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>> _98317_generics = jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>::alloc(0LL, _97817_size);;
	_220b68728_appendGenericTypeAliases(_98317_generics,_96938_f);
	jule::Bool _98613_ok = _96949_algo(_97017_sema,_98317_generics);;
	if ((_97017_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_97017_sema.get()._field_errors);
		_97017_sema.get()._field_errors=nullptr;
	};
	return _98613_ok;;
}



inline void _220b760c6_checkFnParamKind(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b31823_ParamIns>& _99641_p) {
	_99641_p.get()._field_Kind.get()._field_Variadic=_99641_p.get()._field_Decl.get()._field_Variadic;
	if ((_99641_p.get()._field_Decl.get()._field_Reference && (!(_220c286b7_isValidForRef(_99641_p.get()._field_Kind))))) {
		_220b6c133_pushErr(_self_.ptr(), _99641_p.get()._field_Decl.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_99641_p.get()._field_Kind.ptr()), &__jule_any_type6)}));
	};
}



inline jule::Bool _220b763d4_reloadFnInsTypes(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b31a10_FnIns> _100340_f) {
	if ((_220b321c5_IsBuiltin(_100340_f.ptr()) || _220b32307_IsAnon(_100340_f.ptr()))) {
		return true;;
	};
	return _220b75d51_fnEnvironment(_self_, _100340_f,jule::Fn<jule::Bool(jule::Ptr<_220b69471_Sema>&,jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>&)>([=](jule::Ptr<_220b69471_Sema>& _100743_sema, jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>& _100761_generics) mutable -> jule::Bool {
		jule::Bool _100821_ok = true;;
		{
			auto &expr = _100340_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_205c69910:;
			if (it != expr.end()) {
				jule::Ptr<_220b31823_ParamIns> _100925_p = *it;
				{
					if (_22001a45a_IsSelf(_100925_p.get()._field_Decl.ptr())) {
						if (_22001b35c_IsRef(_100925_p.get()._field_Decl.ptr())) {
							_100925_p.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(jule::new_ptr<_220c1443e_Sptr>(_220c1443e_Sptr{._field_Elem=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_100340_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_100925_p.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_100340_f.get()._field_Owner, 0)});
						};
					} else {
						_100925_p.get()._field_Kind=_220b727dc_buildTypeWithGenerics(_100743_sema, _100925_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_100761_generics,_100340_f.get()._field_Refers);
						if ((_100925_p.get()._field_Kind != nullptr)) {
							_220b760c6_checkFnParamKind(_self_, _100925_p);
						} else {
							_100821_ok=false;
						};
					};
				}
				_iter_next_205c69910:;
				++it;
				goto _iter_begin_205c69910;
			}
			_iter_end_205c69910:;
		};
		if ((!(_22001c270_IsVoid(_100340_f.get()._field_Decl.ptr())))) {
			_100340_f.get()._field_Result=_220b727dc_buildTypeWithGenerics(_100743_sema, _100340_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_100761_generics,_100340_f.get()._field_Refers);
			_100821_ok=((_100340_f.get()._field_Result != nullptr) && _100821_ok);
		};
		return _100821_ok;;
	}));;
}



inline jule::Bool _220b76857_checkRefValidityForInitExpr(jule::Ptr<_220b69471_Sema> _self_, jule::Bool _103947_leftMut, jule::Ptr<_220bceecb_Data>& _103967_d, jule::Ptr<_21d81d743_Token>& _103982_errorToken) {
	{
		auto &_match_expr{ _103967_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_205c70097:;
			{
				goto _match_end_205c68d0a;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_205c7010d:;
			{
				jule::Ptr<_220b2c5cc_TraitSubIdentExprModel> _104421_model = _103967_d.get()._field_Model.cast_ptr<_220b2c5cc_TraitSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_220b67639_isValidModelForRef(_104421_model.get()._field_Expr)))) {
					_220b6c133_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_104421_model.get()._field_Method.get()._field_Ident, &__jule_any_type6)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_205c6edee:;
			{
				jule::Ptr<_220b2c9ea_StructSubIdentExprModel> _105021_model = _103967_d.get()._field_Model.cast_ptr<_220b2c9ea_StructSubIdentExprModel>(&__jule_any_type72);;
				if ((!(_220b67639_isValidModelForRef(_105021_model.get()._field_Expr.get()._field_Model)))) {
					_220b6c133_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_105021_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type6)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73 || _match_expr.type == &__jule_any_type74) {
			_case_begin_205c6ee65:;
			{
				_220b6c133_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_205c6e607:;
			{
				jule::Ptr<_220b2acc3_UnaryExprModel> _106021_unary = _103967_d.get()._field_Model.cast_ptr<_220b2acc3_UnaryExprModel>(&__jule_any_type75);;
				if ((_106021_unary.get()._field_Op.get()._field_Kind == jule::Str("*", 1))) {
					if ((!(_220b67639_isValidModelForRef(_103967_d.get()._field_Model)))) {
						_220b6c133_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type6)}));
						return false;;
					};
					goto _match_end_205c68d0a;
				};
				goto _case_begin_205c6e56e;
			}
		}
		else {
			_case_begin_205c6e56e:;
			{
				_220b6c133_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_205c68d0a:;
	};
	if ((_103947_leftMut && (!(_103967_d.get()._field_Mutable)))) {
		_220b6c133_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _220b76e2e_checkValidityForInitExpr(jule::Ptr<_220b69471_Sema> _self_, jule::Bool _108044_leftMut, jule::Bool _108059_leftRef, jule::Ptr<_220c0ae5d_TypeKind>& _108110_leftKind, jule::Ptr<_220bceecb_Data>& _108136_d, jule::Ptr<_21d81d743_Token>& _108151_errorToken) {
	if (((_108044_leftMut && (!(_108136_d.get()._field_Mutable))) && _220c0c5d0_Mutable(_108136_d.get()._field_Kind.ptr()))) {
		_220b6c133_pushErr(_self_.ptr(), _108151_errorToken,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_108136_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
		return false;;
	};
	if (_108059_leftRef) {
		if ((!(_220b76857_checkRefValidityForInitExpr(_self_, _108044_leftMut,_108136_d,_108151_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_220bba8bd_assignTypeChecker> _109117_atc = jule::new_ptr<_220bba8bd_assignTypeChecker>(_220bba8bd_assignTypeChecker{._field_s=_self_, ._field_d=_108136_d, ._field_errorToken=_108151_errorToken});;
	return _220bbb094_checkValidity(_109117_atc.ptr());;
}



inline jule::Bool _220b772e7_checkTypeAliasDeclKind(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220c0a26a_TypeAlias>& _109947_ta, jule::Trait<_220c2bc3c_Lookup> _109967_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_220bca1a2_SymbolTable> _110017_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_220b6bc6a_setCurrentFile(_self_.ptr(), _110017_old);
	});;
	if ((_109947_ta.get()._field_Token != nullptr)) {
		jule::Ptr<_220bca1a2_SymbolTable> _110521_file = _220b68a7a_findFile(_self_.get()._field_files,_109947_ta.get()._field_Token.get()._field_File);;
		if ((_110521_file != nullptr)) {
			_220b6bc6a_setCurrentFile(_self_.ptr(), _110521_file);
		};
	};
	__jule_func_result=_220b71c70_checkTypeWithRefers(_self_, _109947_ta.get()._field_Kind,_109967_l,nullptr,jule::new_ptr<_220c188e9_referencer>(_220c188e9_referencer{._field_ident=_109947_ta.get()._field_Ident, ._field_owner=jule::Any(_109947_ta, &__jule_any_type68), ._field_refs=(&(_109947_ta.get()._field_Refers))}));
	if (((__jule_func_result && (_220c0e00a_Arr(_109947_ta.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _220c0e00a_Arr(_109947_ta.get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_220b6c133_pushErr(_self_.ptr(), _109947_ta.get()._field_Kind.get()._field_Decl.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _220b77616_checkTypeAliasDecl(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220c0a26a_TypeAlias>& _112243_ta, jule::Trait<_220c2bc3c_Lookup> _112263_l) {
	if (_21d820ed7_IsIgnoreIdent(_112243_ta.get()._field_Ident)) {
		_220b6c133_pushErr(_self_.ptr(), _112243_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_220b772e7_checkTypeAliasDeclKind(_self_, _112243_ta,_112263_l);
}



inline void _220b7788b_checkTypeAliasDeclDup(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220c0a26a_TypeAlias>& _113046_ta) {
	if (_21d820ed7_IsIgnoreIdent(_113046_ta.get()._field_Ident)) {
		_220b6c133_pushErr(_self_.ptr(), _113046_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_220b6cc5a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113046_ta)),_113046_ta.get()._field_Ident,_113046_ta.get()._field_CppLinked)) {
		_220b6c133_pushErr(_self_.ptr(), _113046_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_113046_ta.get()._field_Ident, &__jule_any_type6)}));
		_220b6c452_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_220b772e7_checkTypeAliasDeclKind(_self_, _113046_ta,jule::Trait<_220c2bc3c_Lookup>(_self_, 3));
}



inline jule::Bool _220b77b00_checkTypeAliasDecls(jule::Ptr<_220b69471_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_205c81cbd:;
		if (it != expr.end()) {
			jule::Ptr<_220c0a26a_TypeAlias> _114321_ta = *it;
			{
				_220b7788b_checkTypeAliasDeclDup(_self_, _114321_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_205c81cbd:;
			++it;
			goto _iter_begin_205c81cbd;
		}
		_iter_end_205c81cbd:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _205c92bbe_checkEnumItemsDup(_220b69471_Sema* _self_, jule::Slice<jule::Ptr<_220b38055_EnumItem>> _115439_items) {
	{
		auto &expr = _115439_items;
		auto it = expr.begin();
		_iter_begin_205c93e01:;
		if (it != expr.end()) {
			jule::Ptr<_220b38055_EnumItem> &_115516_item = *it;
			{
				if (_115516_item.get()._field_Ident.empty()) {
					goto _iter_next_205c93e01;
				} else if (_21d820ed7_IsIgnoreIdent(_115516_item.get()._field_Ident)) {
					_220b6c133_pushErr(&(*_self_), _115516_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _115439_items;
						auto it = expr.begin();
						_iter_begin_205c94b8d:;
						if (it != expr.end()) {
							jule::Ptr<_220b38055_EnumItem> &_116124_citem = *it;
							{
								if ((_115516_item == _116124_citem)) {
									goto _iter_end_205c94b8d;
								} else if ((_115516_item.get()._field_Ident == _116124_citem.get()._field_Ident)) {
									_220b6c133_pushErr(&(*_self_), _115516_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_115516_item.get()._field_Ident, &__jule_any_type6)}));
									_220b6c452_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_205c94b8d;
								};
							}
							_iter_next_205c94b8d:;
							++it;
							goto _iter_begin_205c94b8d;
						}
						_iter_end_205c94b8d:;
					};
				};
			}
			_iter_next_205c93e01:;
			++it;
			goto _iter_begin_205c93e01;
		}
		_iter_end_205c93e01:;
	};
}

inline void _205c9d13b_checkEnumItemsDup(_220b69471_Sema* _self_, jule::Slice<jule::Ptr<_220b38907_TypeEnumItem>> _115439_items) {
	{
		auto &expr = _115439_items;
		auto it = expr.begin();
		_iter_begin_205c9e329:;
		if (it != expr.end()) {
			jule::Ptr<_220b38907_TypeEnumItem> &_115516_item = *it;
			{
				if (_115516_item.get()._field_Ident.empty()) {
					goto _iter_next_205c9e329;
				} else if (_21d820ed7_IsIgnoreIdent(_115516_item.get()._field_Ident)) {
					_220b6c133_pushErr(&(*_self_), _115516_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _115439_items;
						auto it = expr.begin();
						_iter_begin_205ca00b6:;
						if (it != expr.end()) {
							jule::Ptr<_220b38907_TypeEnumItem> &_116124_citem = *it;
							{
								if ((_115516_item == _116124_citem)) {
									goto _iter_end_205ca00b6;
								} else if ((_115516_item.get()._field_Ident == _116124_citem.get()._field_Ident)) {
									_220b6c133_pushErr(&(*_self_), _115516_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_115516_item.get()._field_Ident, &__jule_any_type6)}));
									_220b6c452_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_205ca00b6;
								};
							}
							_iter_next_205ca00b6:;
							++it;
							goto _iter_begin_205ca00b6;
						}
						_iter_end_205ca00b6:;
					};
				};
			}
			_iter_next_205c9e329:;
			++it;
			goto _iter_begin_205c9e329;
		}
		_iter_end_205c9e329:;
	};
}



inline void _220b780ea_checkEnumItemsStr(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b38374_Enum>& _117442_e) {
	jule::Ptr<_220bd1a49_Eval> _117517_eval = _220b73a1e_eval(_self_, jule::Trait<_220c2bc3c_Lookup>(_self_, 3));;
	{
		auto &expr = _117442_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_205c8385d:;
		if (it != expr.end()) {
			jule::Ptr<_220b38055_EnumItem> _117621_item = *it;
			{
				if (_220b38242_AutoExpr(_117621_item.ptr())) {
					_117621_item.get()._field_Value=jule::new_ptr<_220bd1054_Value>(_220bd1054_Value{._field_Data=jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Constant=static__2200dc263_NewStr(_117621_item.get()._field_Ident)})});
					_117621_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_117621_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type48);
				} else {
					jule::Ptr<_220bceecb_Data> _118525_d = _220bec46b_evalExpr(_117517_eval, _117621_item.get()._field_Value.get()._field_Expr);;
					if ((_118525_d == nullptr)) {
						goto _iter_next_205c8385d;
					};
					if ((!(_220bd088e_IsConst(_118525_d.ptr())))) {
						_220b6c133_pushErr(_self_.ptr(), _117621_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_220b74019_checkAssignType(_self_, false,_117442_e.get()._field_Kind.get()._field_Kind,_118525_d,_117621_item.get()._field_Token);
					_117621_item.get()._field_Value.get()._field_Data=_118525_d;
				};
			}
			_iter_next_205c8385d:;
			++it;
			goto _iter_begin_205c8385d;
		}
		_iter_end_205c8385d:;
	};
}



inline void _220b78370_checkEnumItemsInt(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b38374_Enum>& _120042_e) {
	jule::Ptr<_220c10baa_Prim> _120113_prim = _220c0d2e5_Prim(_120042_e.get()._field_Kind.get()._field_Kind.ptr());;
	jule::U64 _120217_max = static_cast<jule::U64>(_220b24ad0_Max(_220c1101d_Str(_120113_prim.ptr())));;
	jule::Ptr<_220bd1a49_Eval> _120317_eval = _220b73a1e_eval(_self_, jule::Trait<_220c2bc3c_Lookup>(_self_, 3));;
	{
		auto &expr = _120042_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_205c87c91:;
		if (it != expr.end()) {
			jule::I64 _120414_i = it - expr.begin();
			jule::Ptr<_220b38055_EnumItem> _120421_item = *it;
			{
				if ((_120217_max == 0LLU)) {
					_220b6c133_pushErr(_self_.ptr(), _120421_item.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_120217_max)--;
				};
				if (_220b38242_AutoExpr(_120421_item.ptr())) {
					_120421_item.get()._field_Value=jule::new_ptr<_220bd1054_Value>(_220bd1054_Value{._field_Data=jule::new_ptr<_220bceecb_Data>()});
					{
						
						if (_220b26d35_IsSigInt(_220c1101d_Str(_120113_prim.ptr()))) {
							_case_begin_205c8b0c4:;
							{
								_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__2200b58ac_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((_120217_max - (_120217_max - static_cast<jule::U64>(_120414_i))))));
							}
						}
						else {
							_case_begin_205c8ac61:;
							{
								_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__22009b8c6_NewU64(static_cast<jule::U64>((_120217_max - (_120217_max - static_cast<jule::U64>(_120414_i)))));
							}
						}
						_match_end_205c8ac0b:;
					};
					_120421_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type48);
				} else {
					jule::Ptr<_220bceecb_Data> _122225_d = _220bec46b_evalExpr(_120317_eval, _120421_item.get()._field_Value.get()._field_Expr);;
					if ((_122225_d == nullptr)) {
						goto _iter_next_205c87c91;
					};
					if ((!(_220bd088e_IsConst(_122225_d.ptr())))) {
						_220b6c133_pushErr(_self_.ptr(), _120421_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_220b74019_checkAssignType(_self_, false,_120042_e.get()._field_Kind.get()._field_Kind,_122225_d,_120421_item.get()._field_Token);
					_120421_item.get()._field_Value.get()._field_Data=_122225_d;
				};
			}
			_iter_next_205c87c91:;
			++it;
			_120414_i++;
			goto _iter_begin_205c87c91;
		}
		_iter_end_205c87c91:;
	};
}



inline void _220b785e5_checkEnumDecl(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b38374_Enum>& _123538_e) {
	if (_21d820ed7_IsIgnoreIdent(_123538_e.get()._field_Ident)) {
		_220b6c133_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_220b6cc5a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_123538_e)),_123538_e.get()._field_Ident,false)) {
		_220b6c133_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_123538_e.get()._field_Ident, &__jule_any_type6)}));
		_220b6c452_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_123538_e.get()._field_Items.len() == 0LL)) {
		_220b6c133_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_123538_e.get()._field_Ident, &__jule_any_type6)}));
	};
	_205c92bbe_checkEnumItemsDup(_self_.ptr(), _123538_e.get()._field_Items);
	if ((_123538_e.get()._field_Kind != nullptr)) {
		if ((!(_220b7238b_checkType(_self_, _123538_e.get()._field_Kind,jule::Trait<_220c2bc3c_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_123538_e.get()._field_Kind=jule::new_ptr<_220c1033b_TypeSymbol>(_220c1033b_TypeSymbol{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_220c10baa_Prim> _126217_t = _220c0d2e5_Prim(_123538_e.get()._field_Kind.get()._field_Kind.ptr());;
	if ((_126217_t == nullptr)) {
		_220b6c133_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_220c13dde_IsStr(_126217_t.ptr())) {
			_case_begin_205c98e39:;
			{
				_220b780ea_checkEnumItemsStr(_self_, _123538_e);
			}
		}
		else if (_220b27099_IsInt(_220c1101d_Str(_126217_t.ptr()))) {
			_case_begin_205c98b3c:;
			{
				_220b78370_checkEnumItemsInt(_self_, _123538_e);
			}
		}
		else {
			_case_begin_205c980c0:;
			{
				_220b6c133_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_205c9806a:;
	};
}



inline void _220b7886a_checkTypeEnumDecl(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b38ae4_TypeEnum>& _127942_e) {
	if (_21d820ed7_IsIgnoreIdent(_127942_e.get()._field_Ident)) {
		_220b6c133_pushErr(_self_.ptr(), _127942_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_220b6cc5a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_127942_e)),_127942_e.get()._field_Ident,false)) {
		_220b6c133_pushErr(_self_.ptr(), _127942_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_127942_e.get()._field_Ident, &__jule_any_type6)}));
		_220b6c452_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_127942_e.get()._field_Items.len() == 0LL)) {
		_220b6c133_pushErr(_self_.ptr(), _127942_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_127942_e.get()._field_Ident, &__jule_any_type6)}));
		return;;
	};
	_205c9d13b_checkEnumItemsDup(_self_.ptr(), _127942_e.get()._field_Items);
	{
		auto &expr = _127942_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_205ca1590:;
		if (it != expr.end()) {
			jule::Ptr<_220b38907_TypeEnumItem> _129321_item = *it;
			{
				if ((_129321_item.get()._field_Kind == nullptr)) {
					_220b6c133_pushErr(_self_.ptr(), _129321_item.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_205ca1590;
				};
				jule::Bool _129817_ok = _220b7238b_checkType(_self_, _129321_item.get()._field_Kind,jule::Trait<_220c2bc3c_Lookup>(_self_, 3));;
				if ((!(_129817_ok))) {
					goto _iter_next_205ca1590;
				};
				jule::Ptr<_220c10baa_Prim> _130217_p = _220c0d2e5_Prim(_129321_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_130217_p != nullptr) && _220c14153_IsAny(_130217_p.ptr()))) {
					_220b6c133_pushErr(_self_.ptr(), _129321_item.get()._field_Token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_205ca1590:;
			++it;
			goto _iter_begin_205ca1590;
		}
		_iter_end_205ca1590:;
	};
	if ((_127942_e.get()._field_Items.len() == 1LL)) {
		jule::Ptr<_220b38907_TypeEnumItem> _130821_item = _127942_e.get()._field_Items[0LL];;
		_220c0ae5d_TypeKind _130917_tk = _220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_127942_e, 4)};;
		if (((_130821_item.get()._field_Kind.get()._field_Kind != nullptr) && _220c0b667_Equal(_130821_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_220c0ae5d_TypeKind>)((&(_130917_tk))))))) {
			_220b6c133_pushErr(_self_.ptr(), _130821_item.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_220b38cd1_Str(_127942_e.ptr()), &__jule_any_type6)}));
		};
	};
}



inline jule::Bool _220b78ace_checkEnumDecls(jule::Ptr<_220b69471_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Enums;
		auto it = expr.begin();
		_iter_begin_205ca7442:;
		if (it != expr.end()) {
			jule::Ptr<_220b38374_Enum> _132021_e = *it;
			{
				_220b785e5_checkEnumDecl(_self_, _132021_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_205ca7442:;
			++it;
			goto _iter_begin_205ca7442;
		}
		_iter_end_205ca7442:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _220b78d43_checkTypeEnumDecls(jule::Ptr<_220b69471_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_205ca7a91:;
		if (it != expr.end()) {
			jule::Ptr<_220b38ae4_TypeEnum> _133221_e = *it;
			{
				_220b7886a_checkTypeEnumDecl(_self_, _133221_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_205ca7a91:;
			++it;
			goto _iter_begin_205ca7a91;
		}
		_iter_end_205ca7a91:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _220b79151_checkDeclGenerics(_220b69471_Sema* _self_, jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>>& _134237_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _134237_generics;
		auto it = expr.begin();
		_iter_begin_205ca9ed3:;
		if (it != expr.end()) {
			jule::I64 _134413_i = it - expr.begin();
			jule::Ptr<_21eeb3b0c_GenericDecl> &_134416_g = *it;
			{
				if (_21d820ed7_IsIgnoreIdent(_134416_g.get()._field_Ident)) {
					_220b6c133_pushErr(&(*_self_), _134416_g.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_205ca9ed3;
				};
				_julec_label_duplicationLookup:;
				{
					auto &expr = _134237_generics;
					auto it = expr.begin();
					_iter_begin_205cab006:;
					if (it != expr.end()) {
						jule::I64 _135317_j = it - expr.begin();
						jule::Ptr<_21eeb3b0c_GenericDecl> &_135320_ct = *it;
						{
							{
								
								if ((_135317_j >= _134413_i)) {
									_case_begin_205cac667:;
									{
										goto _iter_end_205cab006;
									}
								}
								else if ((_134416_g.get()._field_Ident == _135320_ct.get()._field_Ident)) {
									_case_begin_205cac6de:;
									{
										_220b6c133_pushErr(&(*_self_), _134416_g.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_134416_g.get()._field_Ident, &__jule_any_type6)}));
										_220b6c452_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_205cab006;
									}
								}
								_match_end_205cac557:;
							};
						}
						_iter_next_205cab006:;
						++it;
						_135317_j++;
						goto _iter_begin_205cab006;
					}
					_iter_end_205cab006:;
				};
			}
			_iter_next_205ca9ed3:;
			++it;
			_134413_i++;
			goto _iter_begin_205ca9ed3;
		}
		_iter_end_205ca9ed3:;
	};
	return __jule_func_result;;
}



inline jule::Bool _220b7945e_checkFnDeclParamsDup(_220b69471_Sema* _self_, jule::Ptr<_220b31636_Fn>& _136940_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto &expr = _136940_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_205cae9dd:;
		if (it != expr.end()) {
			jule::I64 _137213_i = it - expr.begin();
			jule::Ptr<_220b31449_Param> &_137216_p = *it;
			{
				{
					auto &expr = _136940_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_205cb067b:;
					if (it != expr.end()) {
						jule::Ptr<_21eeb3b0c_GenericDecl> &_137420_g = *it;
						{
							if ((_137216_p.get()._field_Ident == _137420_g.get()._field_Ident)) {
								__jule_func_result=false;
								_220b6c133_pushErr(&(*_self_), _137216_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_137216_p.get()._field_Ident, &__jule_any_type6)}));
								_220b6c452_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_205cae9dd;
							};
						}
						_iter_next_205cb067b:;
						++it;
						goto _iter_begin_205cb067b;
					}
					_iter_end_205cb067b:;
				};
				_julec_label_paramsLookup:;
				{
					auto &expr = _136940_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_205cb0add:;
					if (it != expr.end()) {
						jule::I64 _138417_j = it - expr.begin();
						jule::Ptr<_220b31449_Param> &_138420_jp = *it;
						{
							{
								
								if ((_138417_j >= _137213_i)) {
									_case_begin_205cb2d32:;
									{
										goto _iter_end_205cb0add;
									}
								}
								else if ((_21d82127e_IsAnonIdent(_137216_p.get()._field_Ident) || _21d82127e_IsAnonIdent(_138420_jp.get()._field_Ident))) {
									_case_begin_205cb2da9:;
									{
										goto _iter_end_205cb0add;
									}
								}
								else if ((_137216_p.get()._field_Ident == _138420_jp.get()._field_Ident)) {
									_case_begin_205cb2e31:;
									{
										__jule_func_result=false;
										_220b6c133_pushErr(&(*_self_), _137216_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_137216_p.get()._field_Ident, &__jule_any_type6)}));
										_220b6c452_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_205cae9dd;
									}
								}
								_match_end_205cb2c11:;
							};
						}
						_iter_next_205cb0add:;
						++it;
						_138417_j++;
						goto _iter_begin_205cb0add;
					}
					_iter_end_205cb0add:;
				};
			}
			_iter_next_205cae9dd:;
			++it;
			_137213_i++;
			goto _iter_begin_205cae9dd;
		}
		_iter_end_205cae9dd:;
	};
	return __jule_func_result;;
}



inline jule::Bool _220b7976c_checkFnDeclResultDup(_220b69471_Sema* _self_, jule::Ptr<_220b31636_Fn>& _140340_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_22001c270_IsVoid(_140340_f.ptr())) {
		return __jule_func_result;;
	};
	{
		auto &expr = _140340_f.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_205cb5be2:;
		if (it != expr.end()) {
			jule::I64 _141013_i = it - expr.begin();
			jule::Ptr<_21d81d743_Token> &_141016_v = *it;
			{
				if ((_21d820ed7_IsIgnoreIdent(_141016_v.get()._field_Kind) || _21d82127e_IsAnonIdent(_141016_v.get()._field_Kind))) {
					goto _iter_next_205cb5be2;
				};
				{
					auto &expr = _140340_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_205cb7078:;
					if (it != expr.end()) {
						jule::Ptr<_21eeb3b0c_GenericDecl> &_141520_g = *it;
						{
							if ((_141016_v.get()._field_Kind == _141520_g.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_205cb7078:;
						++it;
						goto _iter_begin_205cb7078;
					}
					_iter_end_205cb7078:;
				};
				{
					auto &expr = _140340_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_205cb82aa:;
					if (it != expr.end()) {
						jule::Ptr<_220b31449_Param> &_142120_p = *it;
						{
							if ((_141016_v.get()._field_Kind == _142120_p.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_205cb82aa:;
						++it;
						goto _iter_begin_205cb82aa;
					}
					_iter_end_205cb82aa:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _140340_f.get()._field_Result.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_205cb94a9:;
					if (it != expr.end()) {
						jule::I64 _142917_j = it - expr.begin();
						jule::Ptr<_21d81d743_Token> &_142920_jv = *it;
						{
							{
								
								if ((_142917_j >= _141013_i)) {
									_case_begin_205cba224:;
									{
										goto _iter_end_205cb94a9;
									}
								}
								else if ((_142920_jv.get()._field_Kind == _141016_v.get()._field_Kind)) {
									_case_begin_205cba29b:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_205cba114:;
							};
						}
						_iter_next_205cb94a9:;
						++it;
						_142917_j++;
						goto _iter_begin_205cb94a9;
					}
					_iter_end_205cb94a9:;
				};
				goto _iter_next_205cb5be2;
				_julec_label_exist:;
				_220b6c133_pushErr(&(*_self_), _141016_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_141016_v.get()._field_Kind, &__jule_any_type6)}));
				_220b6c452_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_205cb5be2:;
			++it;
			_141013_i++;
			goto _iter_begin_205cb5be2;
		}
		_iter_end_205cb5be2:;
	};
	return __jule_func_result;;
}



inline void _220b799e2_checkFnDeclPrototype(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b31636_Fn>& _145045_f) {
	if ((_145045_f.get()._field_Exceptional && _145045_f.get()._field_CppLinked)) {
		_220b6c133_pushErr(_self_.ptr(), _145045_f.get()._field_Token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_145045_f.get()._field_Exceptional) {
		if (_220057772_IsEntryPoint(_145045_f.ptr())) {
			_220b6c133_pushErr(_self_.ptr(), _145045_f.get()._field_Token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_22000d34e_IsInit(_145045_f.ptr())) {
			_220b6c133_pushErr(_self_.ptr(), _145045_f.get()._field_Token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_220b79151_checkDeclGenerics(_self_.ptr(), _145045_f.get()._field_Generics)))) {
			_case_begin_205cbd436:;
		}
		else if ((!(_220b7945e_checkFnDeclParamsDup(_self_.ptr(), _145045_f)))) {
			_case_begin_205cbd4ad:;
		}
		else if ((!(_220b7976c_checkFnDeclResultDup(_self_.ptr(), _145045_f)))) {
			_case_begin_205cbe7de:;
		}
		_match_end_205cbd304:;
	};
}



inline void _220b79c67_checkTraitDeclMethod(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b31636_Fn>& _147145_f) {
	if (_21d820ed7_IsIgnoreIdent(_147145_f.get()._field_Ident)) {
		_220b6c133_pushErr(_self_.ptr(), _147145_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_147145_f.get()._field_sema=_self_;
	_220b799e2_checkFnDeclPrototype(_self_, _147145_f);
	jule::Ptr<_220b31a10_FnIns> _147817_ins = _22001c89c_instance(_147145_f);;
	_220b763d4_reloadFnInsTypes(_self_, _147817_ins);
	_147817_ins.get()._field_reloaded=true;
	_22000b869_appendInstance(_147145_f.ptr(), _147817_ins);
}



inline void _220b79edc_checkTraitDeclMethods(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b376b4_Trait>& _148446_t) {
	{
		auto &expr = _148446_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_205cc2ccb:;
		if (it != expr.end()) {
			jule::I64 _148514_i = it - expr.begin();
			jule::Ptr<_220b31636_Fn> _148521_f = *it;
			{
				_220b79c67_checkTraitDeclMethod(_self_, _148521_f);
				_148446_t.get()._field_Mutable=(_148446_t.get()._field_Mutable || _148521_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto &expr = _148446_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_205cc4d11:;
					if (it != expr.end()) {
						jule::I64 _149617_j = it - expr.begin();
						jule::Ptr<_220b31636_Fn> _149620_jf = *it;
						{
							{
								
								if ((_149617_j >= _148514_i)) {
									_case_begin_205cc5a9d:;
									{
										goto _iter_end_205cc4d11;
									}
								}
								else if ((_148521_f.get()._field_Ident == _149620_jf.get()._field_Ident)) {
									_case_begin_205cc5b25:;
									{
										_220b6c133_pushErr(_self_.ptr(), _148521_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_148521_f.get()._field_Ident, &__jule_any_type6)}));
										_220b6c452_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_205cc4d11;
									}
								}
								_match_end_205cc598d:;
							};
						}
						_iter_next_205cc4d11:;
						++it;
						_149617_j++;
						goto _iter_begin_205cc4d11;
					}
					_iter_end_205cc4d11:;
				};
			}
			_iter_next_205cc2ccb:;
			++it;
			_148514_i++;
			goto _iter_begin_205cc2ccb;
		}
		_iter_end_205cc2ccb:;
	};
}



inline void _220b7a262_checkTraitDecl(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b376b4_Trait>& _151539_t) {
	if (_21d820ed7_IsIgnoreIdent(_151539_t.get()._field_Ident)) {
		_220b6c133_pushErr(_self_.ptr(), _151539_t.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_220b6cc5a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_151539_t)),_151539_t.get()._field_Ident,false)) {
		_220b6c133_pushErr(_self_.ptr(), _151539_t.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_151539_t.get()._field_Ident, &__jule_any_type6)}));
		_220b6c452_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_220b79edc_checkTraitDeclMethods(_self_, _151539_t);
}



inline jule::Bool _220b7a4c6_checkTraitDecls(jule::Ptr<_220b69471_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_205cc9a4c:;
		if (it != expr.end()) {
			jule::Ptr<_220b376b4_Trait> _152821_t = *it;
			{
				_220b7a262_checkTraitDecl(_self_, _152821_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_205cc9a4c:;
			++it;
			goto _iter_begin_205cc9a4c;
		}
		_iter_end_205cc9a4c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _220b7a87d_checkTraitImplMethods(_220b69471_Sema* _self_, jule::Ptr<_220b376b4_Trait>& _153845_base, jule::Ptr<_220b3cab5_Impl>& _153860_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _153860_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_205ccb543:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> &_154016_f = *it;
			{
				if ((_220b37c47_FindMethod(_153845_base.ptr(), _154016_f.get()._field_Ident) == nullptr)) {
					_220b6c133_pushErr(&(*_self_), _154016_f.get()._field_Token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_153845_base.get()._field_Ident, &__jule_any_type6),jule::Any(_154016_f.get()._field_Ident, &__jule_any_type6)}));
					__jule_func_result=false;
				};
			}
			_iter_next_205ccb543:;
			++it;
			goto _iter_begin_205ccb543;
		}
		_iter_end_205ccb543:;
	};
	return __jule_func_result;;
}



inline jule::Bool _220b7ac35_implToStruct(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eec3006_Struct>& _154937_dest, jule::Ptr<_220b3cab5_Impl>& _154957_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _154957_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_205ccd80e:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> _155321_f = *it;
			{
				if (((_21ee7e479_FindMethod(_154937_dest.ptr(), _155321_f.get()._field_Ident,_155321_f.get()._field_Statically) != nullptr) || (_21ee81a31_FindField(_154937_dest.ptr(), _155321_f.get()._field_Ident) != nullptr))) {
					_220b6c133_pushErr(_self_.ptr(), _155321_f.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154937_dest.get()._field_Ident, &__jule_any_type6),jule::Any(_155321_f.get()._field_Ident, &__jule_any_type6)}));
					__jule_func_result=false;
					goto _iter_next_205ccd80e;
				};
				if (((_154937_dest.get()._field_Generics.len() > 0LL) && (_155321_f.get()._field_Generics.len() > 0LL))) {
					{
						auto &expr = _155321_f.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_205cd0dc7:;
						if (it != expr.end()) {
							jule::Ptr<_21eeb3b0c_GenericDecl> _156124_fg = *it;
							{
								{
									auto &expr = _154937_dest.get()._field_Generics;
									auto it = expr.begin();
									_iter_begin_205cd16be:;
									if (it != expr.end()) {
										jule::Ptr<_21eeb3b0c_GenericDecl> _156228_dg = *it;
										{
											if ((_156124_fg.get()._field_Ident == _156228_dg.get()._field_Ident)) {
												_220b6c133_pushErr(_self_.ptr(), _156124_fg.get()._field_Token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_205cd16be:;
										++it;
										goto _iter_begin_205cd16be;
									}
									_iter_end_205cd16be:;
								};
							}
							_iter_next_205cd0dc7:;
							++it;
							goto _iter_begin_205cd0dc7;
						}
						_iter_end_205cd0dc7:;
					};
				};
				_220b6d079_checkDirectives(_self_, _155321_f.get()._field_Directives,jule::Any(_155321_f, &__jule_any_type66));
				_155321_f.get()._field_sema=_self_;
				_155321_f.get()._field_Owner=_154937_dest;
				_154937_dest.get()._field_Methods = jule::alloc_for_append(_154937_dest.get()._field_Methods,1);_154937_dest.get()._field_Methods.__push(_155321_f);;
			}
			_iter_next_205ccd80e:;
			++it;
			goto _iter_begin_205ccd80e;
		}
		_iter_end_205ccd80e:;
	};
	{
		auto &expr = _154957_ipl.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_205cd3dec:;
		if (it != expr.end()) {
			jule::Ptr<_220b8746c_Var> _157821_v = *it;
			{
				;
				if (((_21ee7e479_FindMethod(_154937_dest.ptr(), _157821_v.get()._field_Ident,true) != nullptr) || (_21ee825d1_FindStatic(_154937_dest.ptr(), _157821_v.get()._field_Ident) != nullptr))) {
					_220b6c133_pushErr(_self_.ptr(), _157821_v.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154937_dest.get()._field_Ident, &__jule_any_type6),jule::Any(_157821_v.get()._field_Ident, &__jule_any_type6)}));
					__jule_func_result=false;
					goto _iter_next_205cd3dec;
				};
				_154937_dest.get()._field_Statics = jule::alloc_for_append(_154937_dest.get()._field_Statics,1);_154937_dest.get()._field_Statics.__push(_157821_v);;
			}
			_iter_next_205cd3dec:;
			++it;
			goto _iter_begin_205cd3dec;
		}
		_iter_end_205cd3dec:;
	};
	return __jule_func_result;;
}



inline void _220b7aeaa_implTrait(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b3cab5_Impl>& _159134_decl) {
	jule::Ptr<_220c0ae5d_TypeKind> _159217_base_t = _220b72e08_selectType(_self_, _159134_decl.get()._field_Base);;
	if ((_159217_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_220b376b4_Trait> _159617_base = _220c0e9ab_Trait(_159217_base_t.ptr());;
	if ((_159617_base == nullptr)) {
		_220b6c133_pushErr(_self_.ptr(), _159134_decl.get()._field_Base.get()._field_Token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_159217_base_t.ptr()), &__jule_any_type6)}));
		_220b6c452_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_220c0ae5d_TypeKind> _160317_destT = _220b72e08_selectType(_self_, _159134_decl.get()._field_Dest);;
	if ((_160317_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_21eec33d0_StructIns> _160717_destS = _220c0e747_Struct(_160317_destT.ptr());;
	if ((_160717_destS == nullptr)) {
		_220b6c133_pushErr(_self_.ptr(), _159134_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_160317_destT.ptr()), &__jule_any_type6)}));
		_220b6c452_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_21eec3006_Struct> _161417_dest = _160717_destS.get()._field_Decl;;
	if ((_21d8244c4_Dir(_161417_dest.get()._field_Token.get()._field_File.ptr()) != _21d8244c4_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_220b6c133_pushErr(_self_.ptr(), _159134_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_159617_base.get()._field_Implemented = jule::alloc_for_append(_159617_base.get()._field_Implemented,1);_159617_base.get()._field_Implemented.__push(_161417_dest);;
	_161417_dest.get()._field_Implements = jule::alloc_for_append(_161417_dest.get()._field_Implements,1);_161417_dest.get()._field_Implements.__push(_159617_base);;
	if ((_159134_decl.get()._field_Statics.len() > 0LL)) {
		_220b6c133_pushErr(_self_.ptr(), _159134_decl.get()._field_Statics[0LL].get()._field_Token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_220b7a87d_checkTraitImplMethods(_self_.ptr(), _159617_base,_159134_decl)))) {
			_case_begin_205ce3291:;
			{
				return;;
			}
		}
		else if ((!(_220b7ac35_implToStruct(_self_, _161417_dest,_159134_decl)))) {
			_case_begin_205ce3318:;
			{
				return;;
			}
		}
		_match_end_205cdc895:;
	};
}



inline void _220b7b230_implStruct(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b3cab5_Impl>& _163635_decl) {
	jule::Ptr<_220c0ae5d_TypeKind> _163717_destT = _220b72e08_selectType(_self_, _163635_decl.get()._field_Dest);;
	if ((_163717_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_21eec33d0_StructIns> _164117_destS = _220c0e747_Struct(_163717_destT.ptr());;
	if ((_164117_destS == nullptr)) {
		_220b6c133_pushErr(_self_.ptr(), _163635_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_163717_destT.ptr()), &__jule_any_type6)}));
		_220b6c452_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_21eec3006_Struct> _164817_dest = _164117_destS.get()._field_Decl;;
	if ((_21d8244c4_Dir(_164817_dest.get()._field_Token.get()._field_File.ptr()) != _21d8244c4_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_220b6c133_pushErr(_self_.ptr(), _163635_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_220b7ac35_implToStruct(_self_, _164817_dest,_163635_decl)))) {
			_case_begin_205ce7ae2:;
			{
				return;;
			}
		}
		_match_end_205ce533c:;
	};
}



inline void _220b7b4a5_implImpl(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b3cab5_Impl>& _166133_decl) {
	{
		
		if (_220b3ceb1_IsTraitImpl(_166133_decl.ptr())) {
			_case_begin_205ce86e7:;
			{
				_220b7aeaa_implTrait(_self_, _166133_decl);
			}
		}
		else if (_220b3d225_IsStructImpl(_166133_decl.ptr())) {
			_case_begin_205ce876e:;
			{
				_220b7b230_implStruct(_self_, _166133_decl);
			}
		}
		_match_end_205ce85d7:;
	};
}



inline void _220b7b7c4_checkVarDecl(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b8746c_Var>& _167237_decl, jule::Trait<_220c2bc3c_Lookup> _167253_l) {
	if (_21d820ed7_IsIgnoreIdent(_167237_decl.get()._field_Ident)) {
		_220b6c133_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_220b87a99_IsTypeInferred(_167237_decl.ptr())) {
		if ((!(_220b87835_IsInitialized(_167237_decl.ptr())))) {
			_220b6c133_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_220b7238b_checkType(_self_, _167237_decl.get()._field_Kind,_167253_l);
	};
	if ((_167237_decl.get()._field_Constant && _167237_decl.get()._field_Reference)) {
		_220b6c133_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_220b87835_IsInitialized(_167237_decl.ptr())))) {
		if (_167237_decl.get()._field_Constant) {
			_220b6c133_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_167237_decl.get()._field_Statically) {
			_220b6c133_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_167237_decl.get()._field_Reference) {
			_220b6c133_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _220b7ba49_checkGlobalVarDecl(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b8746c_Var>& _170443_decl) {
	if (_220b6cc5a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170443_decl)),_170443_decl.get()._field_Ident,_170443_decl.get()._field_CppLinked)) {
		_220b6c133_pushErr(_self_.ptr(), _170443_decl.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_170443_decl.get()._field_Ident, &__jule_any_type6)}));
		_220b6c452_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_170443_decl.get()._field_CppLinked && _170443_decl.get()._field_Constant)) {
		_220b6c133_pushErr(_self_.ptr(), _170443_decl.get()._field_Token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_170443_decl.get()._field_CppLinked)) && (!(_170443_decl.get()._field_Constant))) && (!(_170443_decl.get()._field_Statically)))) {
		_220b6c133_pushErr(_self_.ptr(), _170443_decl.get()._field_Token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_220b6c452_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_220b6d079_checkDirectives(_self_, _170443_decl.get()._field_Directives,jule::Any(_170443_decl, &__jule_any_type9));
	_220b7b7c4_checkVarDecl(_self_, _170443_decl,jule::Trait<_220c2bc3c_Lookup>(_self_, 3));
}



inline jule::Bool _220b7bcad_checkGlobalDecls(jule::Ptr<_220b69471_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_205d030a3:;
		if (it != expr.end()) {
			jule::Ptr<_220b8746c_Var> _172221_decl = *it;
			{
				_220b7ba49_checkGlobalVarDecl(_self_, _172221_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_205d030a3:;
			++it;
			goto _iter_begin_205d030a3;
		}
		_iter_end_205d030a3:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _220b7c165_checkStructTraitImpl(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eec3006_Struct>& _173245_strct, jule::Ptr<_220b376b4_Trait>& _173266_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _173266_trt.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_205d04846:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> _173321_tf = *it;
			{
				jule::Bool _173421_exist = false;;
				jule::Ptr<_220b31636_Fn> _173521_sf = _21ee7e479_FindMethod(_173245_strct.ptr(), _173321_tf.get()._field_Ident,_173321_tf.get()._field_Statically);;
				jule::Ptr<_220b31a10_FnIns> _173617_tfK = _220b750e7_getTraitCheckFnKind(_self_, _173321_tf);;
				if ((_173521_sf != nullptr)) {
					jule::Ptr<_220b31a10_FnIns> _173825_sfK = _220b750e7_getTraitCheckFnKind(_self_, _173521_sf);;
					_173421_exist=(((_173617_tfK.get()._field_Decl.get()._field_Public == _173825_sfK.get()._field_Decl.get()._field_Public) && (_173617_tfK.get()._field_Decl.get()._field_Ident == _173825_sfK.get()._field_Decl.get()._field_Ident)) && _220b31e61_equalTrait(_173617_tfK, _173825_sfK));
				};
				if (_173421_exist) {
					jule::Ptr<_21ee6d710_Directive> _174421_d = _220c0560b_findDirective(_173521_sf.get()._field_Directives,jule::Str("deprecated", 10));;
					if ((_174421_d != nullptr)) {
						_220b6c133_pushErr(_self_.ptr(), _174421_d.get()._field_Tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					jule::Str _175125_s = _220b3256b_GetKindStr(_173617_tfK.ptr(), true);;
					if (_173321_tf.get()._field_Public) {
						(_175125_s).buffer.insert(0, (jule::Str()));;
					};
					_220b6c133_pushErr(_self_.ptr(), _173245_strct.get()._field_Token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_173266_trt.get()._field_Ident, &__jule_any_type6),jule::Any(_175125_s, &__jule_any_type6)}));
					__jule_func_result=false;
				};
			}
			_iter_next_205d04846:;
			++it;
			goto _iter_begin_205d04846;
		}
		_iter_end_205d04846:;
	};
	return __jule_func_result;;
}



inline jule::Bool _220b7c473_checkStructImpls(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eec3006_Struct>& _176241_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _176241_s.get()._field_Implements;
		auto it = expr.begin();
		_iter_begin_205d0b243:;
		if (it != expr.end()) {
			jule::Ptr<_220b376b4_Trait> _176421_trt = *it;
			{
				__jule_func_result=(_220b7c165_checkStructTraitImpl(_self_, _176241_s,_176421_trt) && __jule_func_result);
			}
			_iter_next_205d0b243:;
			++it;
			goto _iter_begin_205d0b243;
		}
		_iter_end_205d0b243:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _220b7c781_checkStructFields(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eec3006_Struct>& _177042_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _177042_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_205d0c5c9:;
		if (it != expr.end()) {
			jule::Ptr<_21ee92206_Field> _177221_f = *it;
			{
				_177221_f.get()._field_Owner=_177042_st;
				{
					auto &expr = _177042_st.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_205d0d157:;
					if (it != expr.end()) {
						jule::Ptr<_21ee92206_Field> _177420_cf = *it;
						{
							if ((_177221_f == _177420_cf)) {
								goto _iter_end_205d0d157;
							} else if ((_177221_f.get()._field_Ident == _177420_cf.get()._field_Ident)) {
								_220b6c133_pushErr(_self_.ptr(), _177221_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_177221_f.get()._field_Ident, &__jule_any_type6)}));
								_220b6c452_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_205d0d157:;
						++it;
						goto _iter_begin_205d0d157;
					}
					_iter_end_205d0d157:;
				};
			}
			_iter_next_205d0c5c9:;
			++it;
			goto _iter_begin_205d0c5c9;
		}
		_iter_end_205d0c5c9:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _220b7ca06_checkStructDecl(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eec3006_Struct>& _178740_s) {
	if (_21d820ed7_IsIgnoreIdent(_178740_s.get()._field_Ident)) {
		_220b6c133_pushErr(_self_.ptr(), _178740_s.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_220b6cc5a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_178740_s)),_178740_s.get()._field_Ident,_178740_s.get()._field_CppLinked)) {
		_220b6c133_pushErr(_self_.ptr(), _178740_s.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_178740_s.get()._field_Ident, &__jule_any_type6)}));
		_220b6c452_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_220b6d079_checkDirectives(_self_, _178740_s.get()._field_Directives,jule::Any(_178740_s, &__jule_any_type67));
	{
		
		if ((!(_220b79151_checkDeclGenerics(_self_.ptr(), _178740_s.get()._field_Generics)))) {
			_case_begin_205d10027:;
		}
		else if ((!(_220b7c781_checkStructFields(_self_, _178740_s)))) {
			_case_begin_205d11e5d:;
		}
		else if ((!(_220b7c473_checkStructImpls(_self_, _178740_s)))) {
			_case_begin_205d11ec4:;
		}
		_match_end_205d11d4d:;
	};
}



inline jule::Bool _220b7cc6a_checkStructDecls(jule::Ptr<_220b69471_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_205d1324a:;
		if (it != expr.end()) {
			jule::Ptr<_21eec3006_Struct> _180621_s = *it;
			{
				_220b7ca06_checkStructDecl(_self_, _180621_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_205d1324a:;
			++it;
			goto _iter_begin_205d1324a;
		}
		_iter_end_205d1324a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _220b7cee0_checkFnDecl(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b31636_Fn>& _181636_f) {
	if (_21d820ed7_IsIgnoreIdent(_181636_f.get()._field_Ident)) {
		_220b6c133_pushErr(_self_.ptr(), _181636_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_220b6d079_checkDirectives(_self_, _181636_f.get()._field_Directives,jule::Any(_181636_f, &__jule_any_type66));
	_181636_f.get()._field_sema=_self_;
	_220b799e2_checkFnDeclPrototype(_self_, _181636_f);
	if (_220b6cc5a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_181636_f)),_181636_f.get()._field_Ident,_181636_f.get()._field_CppLinked)) {
		if ((_181636_f.get()._field_Ident == jule::Str("init", 4))) {
			jule::Ptr<_220b31636_Fn> _182821_init = _220b6ac69_FindFn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_182821_init != nullptr)) {
				return;;
			};
		};
		_220b6c133_pushErr(_self_.ptr(), _181636_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_181636_f.get()._field_Ident, &__jule_any_type6)}));
		_220b6c452_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _220b7d254_checkFnDecls(jule::Ptr<_220b69471_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_205d18195:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> _184021_f = *it;
			{
				_220b7cee0_checkFnDecl(_self_, _184021_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_205d18195:;
			++it;
			goto _iter_begin_205d18195;
		}
		_iter_end_205d18195:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _220b7d61c_pushCycleError(_220b69471_Sema* _self_, jule::Ptr<_21eec3006_Struct>& _185030_st1, jule::Ptr<_21eec3006_Struct>& _185045_st2, jule::Str& _185064_message) {
	;
	jule::Str _185213_refers_to = _21d4e555d_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_185030_st1.get()._field_Ident, &__jule_any_type6),jule::Any(_185045_st2.get()._field_Ident, &__jule_any_type6)}));;
	(_185064_message).buffer.insert(0, (((_21d4409e7_Repeat(jule::Str(" ", 1),4LL) + _185213_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _220b7da6d_checkCrossCycle(_220b69471_Sema* _self_, jule::Ptr<_21eec3006_Struct>& _185631_st1, jule::Ptr<_21eec3006_Struct>& _185646_st2, jule::Str& _185665_message) {
	{
		auto &expr = _185646_st2.get()._field_Uses;
		auto it = expr.begin();
		_iter_begin_205d1b440:;
		if (it != expr.end()) {
			jule::Ptr<_21eec3006_Struct> &_185716_u = *it;
			{
				if ((_185716_u == _185631_st1)) {
					_220b7d61c_pushCycleError(&(*_self_), _185646_st2,_185716_u,_185665_message);
					return false;;
				};
				if ((!(_220b7da6d_checkCrossCycle(&(*_self_), _185631_st1,_185716_u,_185665_message)))) {
					_220b7d61c_pushCycleError(&(*_self_), _185646_st2,_185716_u,_185665_message);
					return false;;
				};
			}
			_iter_next_205d1b440:;
			++it;
			goto _iter_begin_205d1b440;
		}
		_iter_end_205d1b440:;
	};
	return true;;
}



inline jule::Bool _220b7dee1_checkStructDeriveIllegalCycles(_220b69471_Sema* _self_, jule::Str _187149_derive, jule::Ptr<_21eec3006_Struct>& _187163_st1, jule::Ptr<_220c0ae5d_TypeKind>& _187182_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_21eec3006_Struct> _187217_st2 = _220c29355_getStructFromKind(_187182_k);;
	if ((_187217_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((_187163_st1 == _187217_st2)) {
		_220b6c133_pushErr(&(*_self_), _187163_st1.get()._field_Token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_187149_derive, &__jule_any_type6),jule::Any(_187163_st1.get()._field_Ident, &__jule_any_type6)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _188417_message = jule::Str();;
	if ((!(_220b7da6d_checkCrossCycle(&(*_self_), _187163_st1,_187217_st2,_188417_message)))) {
		jule::Str _188621_errMsg = _188417_message;;
		_188417_message=jule::Str();
		_220b7d61c_pushCycleError(&(*_self_), _187163_st1,_187217_st2,_188417_message);
		_188621_errMsg+=_188417_message;
		_220b6c133_pushErr(&(*_self_), _187163_st1.get()._field_Token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_187149_derive, &__jule_any_type6),jule::Any(_188621_errMsg, &__jule_any_type6)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _220b7e332_checkStructInsDeriveClone(_220b69471_Sema* _self_, jule::Ptr<_21eec33d0_StructIns> _189648_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_21ee83208_IsDerives(_189648_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &expr = _189648_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_205d21cb4:;
		if (it != expr.end()) {
			jule::Ptr<_21eec31e3_FieldIns> _190021_f = *it;
			{
				if ((_190021_f.get()._field_Kind == nullptr)) {
					goto _iter_next_205d21cb4;
				};
				if ((!(_220c0cd1c_SupportsCloning(_190021_f.get()._field_Kind.ptr())))) {
					_220b6c133_pushErr(&(*_self_), _189648_st.get()._field_Decl.get()._field_Token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_190021_f.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(jule::Str("Clone", 5), &__jule_any_type76)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_220b7dee1_checkStructDeriveIllegalCycles(&(*_self_), jule::Str("Clone", 5),_189648_st.get()._field_Decl,_190021_f.get()._field_Kind)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_205d21cb4:;
			++it;
			goto _iter_begin_205d21cb4;
		}
		_iter_end_205d21cb4:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _220b7e51e_checkPackageDecls(jule::Ptr<_220b69471_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_205d21b0a:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _191821_f = *it;
			{
				_220b6bc6a_setCurrentFile(_self_.ptr(), _191821_f);
				if ((!(_220b78d43_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_220b77b00_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_205d21b0a:;
			++it;
			goto _iter_begin_205d21b0a;
		}
		_iter_end_205d21b0a:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_205d202ce:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _192821_f = *it;
			{
				_220b6bc6a_setCurrentFile(_self_.ptr(), _192821_f);
				if ((!(_220b7a4c6_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_205d202ce:;
			++it;
			goto _iter_begin_205d202ce;
		}
		_iter_end_205d202ce:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_205d25c0d:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _193521_f = *it;
			{
				_220b6bc6a_setCurrentFile(_self_.ptr(), _193521_f);
				if ((!(_220b7bcad_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_205d25c0d:;
			++it;
			goto _iter_begin_205d25c0d;
		}
		_iter_end_205d25c0d:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_205d26208:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _194221_f = *it;
			{
				_220b6bc6a_setCurrentFile(_self_.ptr(), _194221_f);
				{
					
					if ((!(_220b7d254_checkFnDecls(_self_)))) {
						_case_begin_205d282a4:;
					}
					else if ((!(_220b7cc6a_checkStructDecls(_self_)))) {
						_case_begin_205d2831a:;
					}
					else {
						_case_begin_205d2823d:;
						{
							goto _iter_next_205d26208;
						}
					}
					_match_end_205d281c7:;
				};
				return;;
			}
			_iter_next_205d26208:;
			++it;
			goto _iter_begin_205d26208;
		}
		_iter_end_205d26208:;
	};
}



inline void _220b7e860_checkDataForTypeInference(_220b69471_Sema* _self_, jule::Ptr<_220bceecb_Data>& _195445_d, jule::Ptr<_21d81d743_Token>& _195456_err_token) {
	{
		
		if (_220bd03b6_IsNil(_195445_d.ptr())) {
			_case_begin_205d29261:;
			{
				_220b6c133_pushErr(&(*_self_), _195456_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_220bd062a_IsVoid(_195445_d.ptr())) {
			_case_begin_205d292d8:;
			{
				_220b6c133_pushErr(&(*_self_), _195456_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_195445_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_205d29360:;
			{
				_220b6c133_pushErr(&(*_self_), _195456_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_205d29140:;
	};
}



inline void _220b7eae6_checkVar(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b8746c_Var>& _196533_v) {
	if (_196533_v.get()._field_CppLinked) {
		return;;
	};
	if (_220b87a99_IsTypeInferred(_196533_v.ptr())) {
		_196533_v.get()._field_Kind=jule::new_ptr<_220c1033b_TypeSymbol>(_220c1033b_TypeSymbol{._field_Kind=_196533_v.get()._field_Value.get()._field_Data.get()._field_Kind});
		_220b7e860_checkDataForTypeInference(_self_.ptr(), _196533_v.get()._field_Value.get()._field_Data,_196533_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		_220b76e2e_checkValidityForInitExpr(_self_, _196533_v.get()._field_Mutable,_196533_v.get()._field_Reference,_196533_v.get()._field_Kind.get()._field_Kind,_196533_v.get()._field_Value.get()._field_Data,_196533_v.get()._field_Value.get()._field_Expr.get()._field_Token);
	} else {
		jule::Ptr<_220c17046_Arr> _198221_arr = _220c0e00a_Arr(_196533_v.get()._field_Kind.get()._field_Kind.ptr());;
		if ((_198221_arr != nullptr)) {
			if (_198221_arr.get()._field_Auto) {
				jule::Ptr<_220c17046_Arr> _198525_dataArr = _220c0e00a_Arr(_196533_v.get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_198525_dataArr != nullptr)) {
					_198221_arr.get()._field_N=_198525_dataArr.get()._field_N;
				};
			};
		};
		if (_220b74019_checkAssignType(_self_, _196533_v.get()._field_Reference,_196533_v.get()._field_Kind.get()._field_Kind,_196533_v.get()._field_Value.get()._field_Data,_196533_v.get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_220b76e2e_checkValidityForInitExpr(_self_, _196533_v.get()._field_Mutable,_196533_v.get()._field_Reference,_196533_v.get()._field_Kind.get()._field_Kind,_196533_v.get()._field_Value.get()._field_Data,_196533_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		};
	};
	if ((_196533_v.get()._field_Reference && (!(_220c286b7_isValidForRef(_196533_v.get()._field_Kind.get()._field_Kind))))) {
		_220b6c133_pushErr(_self_.ptr(), _196533_v.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_196533_v.get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type6)}));
	};
	if (_196533_v.get()._field_Constant) {
		if ((!(_220bd088e_IsConst(_196533_v.get()._field_Value.get()._field_Data.ptr())))) {
			_220b6c133_pushErr(_self_.ptr(), _196533_v.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_196533_v.get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_220c0ee84_Tup(_196533_v.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		_196533_v.get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _220b7ee15_checkTypeVar(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b8746c_Var>& _202037_decl, jule::Trait<_220c2bc3c_Lookup> _202053_l) {
	if ((_202037_decl.get()._field_CppLinked || (!(_220b87835_IsInitialized(_202037_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_220bd1a49_Eval> _202517_eval = nullptr;;
	if ((_202037_decl.get()._field_Kind != nullptr)) {
		_202517_eval=_220b73359_evalpd(_self_, _202053_l,_202037_decl.get()._field_Kind.get()._field_Kind,_202037_decl);
	} else {
		_202517_eval=_220b73359_evalpd(_self_, _202053_l,nullptr,_202037_decl);
	};
	_202517_eval.get()._field_immutable=(!(_202037_decl.get()._field_Mutable));
	_202037_decl.get()._field_Value.get()._field_Data=_220bec46b_evalExpr(_202517_eval, _202037_decl.get()._field_Value.get()._field_Expr);
	if ((_202037_decl.get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_220b7eae6_checkVar(_self_, _202037_decl);
}



inline void _220b800e1_checkGlobalTypes(jule::Ptr<_220b69471_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_205d383b3:;
		if (it != expr.end()) {
			jule::Ptr<_220b8746c_Var> _204121_decl = *it;
			{
				if (((_220b87835_IsInitialized(_204121_decl.ptr()) && (_204121_decl.get()._field_Value.get()._field_Data == nullptr)) || (_220b87a99_IsTypeInferred(_204121_decl.ptr()) && (_204121_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_220b7ee15_checkTypeVar(_self_, _204121_decl,jule::Trait<_220c2bc3c_Lookup>(_self_, 3));
				};
			}
			_iter_next_205d383b3:;
			++it;
			goto _iter_begin_205d383b3;
		}
		_iter_end_205d383b3:;
	};
}



inline jule::Ptr<_220b31a10_FnIns> _220b80498_readyToCheckFn(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eec33d0_StructIns>& _205239_s, jule::Ptr<_220b31636_Fn>& _205259_f) {
	jule::Ptr<_220b31a10_FnIns> _205317_ins = _22001c89c_instance(_205259_f);;
	if ((_205259_f.get()._field_Instances.len() != 0LL)) {
		return _205317_ins;;
	};
	_205317_ins.get()._field_Owner=_205239_s;
	_22000b869_appendInstance(_205259_f.ptr(), _205317_ins);
	_205317_ins.get()._field_reloaded=true;
	if (_220b763d4_reloadFnInsTypes(_self_, _205317_ins)) {
		return _205317_ins;;
	};
	return nullptr;;
}



inline void _220b807b7_checkTypeMethod(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eec33d0_StructIns>& _206640_s, jule::Ptr<_220b31636_Fn>& _206660_f) {
	if ((_206660_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_220b31a10_FnIns> _207117_ins = _206660_f.get()._field_Instances[0LL];;
	if ((_207117_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_220b82e90_checkFnIns(_self_, _207117_ins);
}



inline jule::Ptr<_220b31a10_FnIns> _220b80c18_checkStructInsOp(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eec33d0_StructIns>& _207941_s, jule::Ptr<_220b31636_Fn>& _207961_f, jule::Fn<jule::Bool(jule::Ptr<_220b31636_Fn>)> _207969_p) {
	if ((((_207961_f == nullptr) || (_207961_f.get()._field_Generics.len() > 0LL)) || (!(_207969_p(_207961_f))))) {
		return nullptr;;
	};
	return _207961_f.get()._field_Instances[0LL];;
}



inline jule::Bool _220b810c0_checkStructEnv(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eec33d0_StructIns>& _208939_s, jule::Ptr<_21d81d743_Token> _208958_errorToken) {
	jule::Bool __jule_func_result = false;
	_220c197c9_typeChecker _209017_tc = _220c197c9_typeChecker{._field_s=_208939_s.get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_220c2bc3c_Lookup>(_208939_s.get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_220c2bc3c_Lookup>(_208939_s.get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_220c188e9_referencer>(_220c188e9_referencer{._field_ident=_208939_s.get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any(_208939_s.get()._field_Decl, &__jule_any_type67), }), ._field_refers=_208939_s.get()._field_Refers, };;
	if ((_208939_s.get()._field_Generics.len() > 0LL)) {
		_209017_tc._field_useGenerics=jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>::alloc(0LL, _208939_s.get()._field_Generics.len());
		{
			auto &expr = _208939_s.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_205d42983:;
			if (it != expr.end()) {
				jule::I64 _210318_i = it - expr.begin();
				jule::Ptr<_220c09731_InsGeneric> _210325_g = *it;
				{
					jule::Ptr<_21eeb3b0c_GenericDecl> _210425_decl = _208939_s.get()._field_Decl.get()._field_Generics[_210318_i];;
					_209017_tc._field_useGenerics = jule::alloc_for_append(_209017_tc._field_useGenerics,1);_209017_tc._field_useGenerics.__push(jule::new_ptr<_220c0a26a_TypeAlias>(_220c0a26a_TypeAlias{._field_Token=_210425_decl.get()._field_Token, ._field_Ident=_210425_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_220c1033b_TypeSymbol>(_220c1033b_TypeSymbol{._field_Kind=_210325_g.get()._field_Kind}), }));;
				}
				_iter_next_205d42983:;
				++it;
				_210318_i++;
				goto _iter_begin_205d42983;
			}
			_iter_end_205d42983:;
		};
	};
	jule::Ptr<_220bca1a2_SymbolTable> _211317_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_220b6bc6a_setCurrentFile(_self_.ptr(), _211317_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != _208939_s.get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_220bca1a2_SymbolTable> _211721_file = _220b68a7a_findFile(_self_.get()._field_files,_208939_s.get()._field_Decl.get()._field_Token.get()._field_File);;
		if ((_211721_file != nullptr)) {
			_220b6bc6a_setCurrentFile(_self_.ptr(), _211721_file);
		};
	};
	if ((_208939_s.get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_220b3ab7e_constraintChecker> _212421_cc = _220b71ed4_constraintChecker(_self_);;
		_212421_cc.get()._field_et=_208958_errorToken;
		_212421_cc.get()._field_si=_208939_s;
		_212421_cc.get()._field_genericsA=_209017_tc._field_useGenerics;
		_212421_cc.get()._field_uniq=true;
		if ((!(_220b3ba5e_check(_212421_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if ((_208939_s.get()._field_Statics.len() > 0LL)) {
		jule::I64 _213721_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_209017_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto &expr = _208939_s.get()._field_Statics;
			auto it = expr.begin();
			_iter_begin_205d49858:;
			if (it != expr.end()) {
				jule::Ptr<_220b8746c_Var> _213925_v = *it;
				{
					_220b7b7c4_checkVarDecl(_self_, _213925_v,jule::Trait<_220c2bc3c_Lookup>(_self_, 3));
					_220b7ee15_checkTypeVar(_self_, _213925_v,jule::Trait<_220c2bc3c_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _213721_n) == 0LL) && __jule_func_result);
				}
				_iter_next_205d49858:;
				++it;
				goto _iter_begin_205d49858;
			}
			_iter_end_205d49858:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_209017_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_220bd1a49_Eval> _215017_eval = _220b73a1e_eval(_self_, jule::Trait<_220c2bc3c_Lookup>(_self_, 3));;
	_208939_s.get()._field_Comparable=true;
	{
		auto &expr = _208939_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_205d4c66e:;
		if (it != expr.end()) {
			jule::Ptr<_21eec31e3_FieldIns> _215221_f = *it;
			{
				jule::Ptr<_220c0ae5d_TypeKind> _215321_kind = _220c268a2_checkDecl(&_209017_tc, _215221_f.get()._field_Decl.get()._field_Kind.get()._field_Decl);;
				__jule_func_result=((_215321_kind != nullptr) && __jule_func_result);
				if ((_215321_kind == nullptr)) {
					if (((_self_ != _208939_s.get()._field_Decl.get()._field_sema) && (_208939_s.get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_208939_s.get()._field_Decl.get()._field_sema.get()._field_errors);
						_208939_s.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_205d4c66e;
				};
				_215221_f.get()._field_Kind=_215321_kind;
				_208939_s.get()._field_Mutable=(_208939_s.get()._field_Mutable || ((!(_215221_f.get()._field_Decl.get()._field_Mutable)) && _220c0c5d0_Mutable(_215221_f.get()._field_Kind.ptr())));
				_208939_s.get()._field_Comparable=(_208939_s.get()._field_Comparable && _220c0c36b_Comparable(_215221_f.get()._field_Kind.ptr()));
				_220b7e332_checkStructInsDeriveClone(_self_.ptr(), _208939_s);
				if ((_215221_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_205d4c66e;
				};
				_215017_eval.get()._field_prefix=_215221_f.get()._field_Kind;
				_215017_eval.get()._field_field=_215221_f;
				_215221_f.get()._field_Default=_220bec46b_evalExpr(_215017_eval, _215221_f.get()._field_Decl.get()._field_Default);
				if ((_215221_f.get()._field_Default == nullptr)) {
					goto _iter_next_205d4c66e;
				};
				;
				_220b74019_checkAssignType(_self_, false,_215221_f.get()._field_Kind,_215221_f.get()._field_Default,_215221_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_205d4c66e:;
			++it;
			goto _iter_begin_205d4c66e;
		}
		_iter_end_205d4c66e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _220b81477_precheckStructIns(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eec33d0_StructIns>& _218742_s, jule::Ptr<_21d81d743_Token> _218761_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_220b810c0_checkStructEnv(_self_, _218742_s,_218761_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &expr = _218742_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_205d548a7:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> _219221_f = *it;
			{
				if ((_219221_f.get()._field_Generics.len() == 0LL)) {
					if ((_220b80498_readyToCheckFn(_self_, _218742_s,_219221_f) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_205d548a7:;
			++it;
			goto _iter_begin_205d548a7;
		}
		_iter_end_205d548a7:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _220b816ec_checkStructIns(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eec33d0_StructIns>& _220239_s) {
	{
		auto &expr = _220239_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_205d56249:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> _220321_f = *it;
			{
				_220b807b7_checkTypeMethod(_self_, _220239_s,_220321_f);
			}
			_iter_next_205d56249:;
			++it;
			goto _iter_begin_205d56249;
		}
		_iter_end_205d56249:;
	};
}



inline void _220b81972_checkTypeStruct(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eec3006_Struct>& _220840_s) {
	if (_220840_s.get()._field_CppLinked) {
		return;;
	};
	if ((_220840_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _220840_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_205d57998:;
		if (it != expr.end()) {
			jule::Ptr<_21eec33d0_StructIns> _222121_ins = *it;
			{
				_220b816ec_checkStructIns(_self_, _222121_ins);
			}
			_iter_next_205d57998:;
			++it;
			goto _iter_begin_205d57998;
		}
		_iter_end_205d57998:;
	};
}



inline void _220b81b4d_checkStructTypes(jule::Ptr<_220b69471_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_205d581b3:;
		if (it != expr.end()) {
			jule::Ptr<_21eec3006_Struct> _222721_s = *it;
			{
				_220b81972_checkTypeStruct(_self_, _222721_s);
			}
			_iter_next_205d581b3:;
			++it;
			goto _iter_begin_205d581b3;
		}
		_iter_end_205d581b3:;
	};
}



inline void _220b81de5_checkStructInsOperators(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eec33d0_StructIns> _223247_s) {
	{
		auto &expr = _223247_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_205d59549:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> _223321_m = *it;
			{
				{
					auto &_match_expr{ _223321_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_205d5a2b4:;
						{
							_223247_s.get()._field_Operators._field_Eq=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8921b_Eq);
							_223247_s.get()._field_Comparable=(_223247_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_205d5a32a:;
						{
							_223247_s.get()._field_Operators._field_Gt=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b894b3_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_205d5a3a2:;
						{
							_223247_s.get()._field_Operators._field_GtEq=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8975a_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_205d5a429:;
						{
							_223247_s.get()._field_Operators._field_Lt=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b89a02_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_205d5a4a1:;
						{
							_223247_s.get()._field_Operators._field_LtEq=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b89c99_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_205d5a528:;
						{
							_223247_s.get()._field_Operators._field_Shl=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8a382_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_205d5a5a0:;
						{
							_223247_s.get()._field_Operators._field_Shr=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8a629_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_205d5a627:;
						{
							_223247_s.get()._field_Operators._field_Add=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8a8c1_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_205d5a69e:;
						{
							_223247_s.get()._field_Operators._field_Sub=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8ab68_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_205d5a726:;
						{
							_223247_s.get()._field_Operators._field_Div=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8ae10_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_205d5a79d:;
						{
							_223247_s.get()._field_Operators._field_Mul=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8b1a7_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_205d5a825:;
						{
							_223247_s.get()._field_Operators._field_Mod=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8b44e_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_205d5a89c:;
						{
							_223247_s.get()._field_Operators._field_BitAnd=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8b6e6_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_205d5a924:;
						{
							_223247_s.get()._field_Operators._field_BitOr=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8b98d_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_205d5a99b:;
						{
							_223247_s.get()._field_Operators._field_BitXor=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8bc35_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_205d5aa23:;
						{
							_223247_s.get()._field_Operators._field_Neg=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8c31d_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_205d5aa9a:;
						{
							_223247_s.get()._field_Operators._field_Pos=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8c5b5_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_205d5ab22:;
						{
							_223247_s.get()._field_Operators._field_BitNot=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8c85c_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_205d5ab99:;
						{
							_223247_s.get()._field_Operators._field_AddAssign=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8ce45_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_205d5ac21:;
						{
							_223247_s.get()._field_Operators._field_SubAssign=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8d1dc_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_205d5ac98:;
						{
							_223247_s.get()._field_Operators._field_DivAssign=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8d484_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_205d5ad20:;
						{
							_223247_s.get()._field_Operators._field_MulAssign=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8d72b_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_205d5ad97:;
						{
							_223247_s.get()._field_Operators._field_ModAssign=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8d9c3_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_205d5ae1e:;
						{
							_223247_s.get()._field_Operators._field_ShlAssign=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8dc6a_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_205d5ae96:;
						{
							_223247_s.get()._field_Operators._field_ShrAssign=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8e012_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_205d5b01d:;
						{
							_223247_s.get()._field_Operators._field_BitOrAssign=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8e2a9_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_205d5b095:;
						{
							_223247_s.get()._field_Operators._field_BitAndAssign=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8e551_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_205d5b11c:;
						{
							_223247_s.get()._field_Operators._field_BitXorAssign=_220b80c18_checkStructInsOp(_self_, _223247_s,_223321_m,static__220b8e7e8_BitXorAssign);
						}
					}
					_match_end_205d59d96:;
				};
			}
			_iter_next_205d59549:;
			++it;
			goto _iter_begin_205d59549;
		}
		_iter_end_205d59549:;
	};
}



inline void _220b8217b_precheckStructType(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_21eec3006_Struct>& _229643_s) {
	if (_229643_s.get()._field_CppLinked) {
		return;;
	};
	if ((_229643_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_229643_s.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_21eec33d0_StructIns> _230721_ins = _21ee7994c_instance(_229643_s);;
		_230721_ins.get()._field_Checked=true;
		_21ee7d720_appendInstance(_229643_s.ptr(), _230721_ins);
		_220b81477_precheckStructIns(_self_, _230721_ins,nullptr);
	};
	_220b81de5_checkStructInsOperators(_self_, _229643_s.get()._field_Instances[0LL]);
}



inline void _220b82357_precheckStructTypes(jule::Ptr<_220b69471_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_205d6dbce:;
		if (it != expr.end()) {
			jule::Ptr<_21eec3006_Struct> _231721_s = *it;
			{
				_220b8217b_precheckStructType(_self_, _231721_s);
			}
			_iter_next_205d6dbce:;
			++it;
			goto _iter_begin_205d6dbce;
		}
		_iter_end_205d6dbce:;
	};
}



inline void _220b825cc_checkRets(_220b69471_Sema* _self_, jule::Ptr<_220b31a10_FnIns>& _232233_f) {
	if (_22001c270_IsVoid(_232233_f.get()._field_Decl.ptr())) {
		return;;
	};
	_220b84777_missingRetChecker _232613_mrc = static__220b84b40_new();;
	jule::Bool _232713_ok = _220b85b52_check(&_232613_mrc, _232233_f.get()._field_Scope);;
	if ((!(_232713_ok))) {
		_220b6c133_pushErr(&(*_self_), _232233_f.get()._field_Decl.get()._field_Token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _220b828eb_checkFnInsSc(_220b69471_Sema* _self_, jule::Ptr<_220b31a10_FnIns>& _233336_f, jule::Ptr<_220b49682_scopeChecker>& _233352_sc) {
	_220b68195_appendRetVars(_233352_sc.get()._field_table.get()._field_Vars,_233336_f);
	_220b6844d_appendParamVars(_233352_sc.get()._field_table.get()._field_Vars,_233336_f);
	_220b68728_appendGenericTypeAliases(_233352_sc.get()._field_table.get()._field_TypeAliases,_233336_f);
	_220b59483_check(_233352_sc, _233336_f.get()._field_Decl.get()._field_Scope,_233336_f.get()._field_Scope);
	if ((!(_220b4c300_stopped(_233352_sc.ptr())))) {
		_220b825cc_checkRets(&(*_self_), _233336_f);
	};
}



inline void _220b82c1a_checkFnInsCaller(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b31a10_FnIns>& _234641_f, jule::Ptr<_21d81d743_Token> _234656_caller) {
	if (_234641_f.get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_220bca1a2_SymbolTable> _235117_old = _234641_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_220b6bc6a_setCurrentFile(_234641_f.get()._field_Decl.get()._field_sema.ptr(), _235117_old);
	});;
	jule::Ptr<_220bca1a2_SymbolTable> _235317_file = _220b68a7a_findFile(_234641_f.get()._field_Decl.get()._field_sema.get()._field_files,_234641_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_235317_file != nullptr)) {
		_220b6bc6a_setCurrentFile(_234641_f.get()._field_Decl.get()._field_sema.ptr(), _235317_file);
	};
	jule::Ptr<_220b49682_scopeChecker> _235817_sc = _220b3eed5_newScopeChecker(_234641_f.get()._field_Decl.get()._field_sema,_234641_f);;
	_235817_sc.get()._field_calledFrom=_234656_caller;
	_220b828eb_checkFnInsSc(_self_.ptr(), _234641_f,_235817_sc);
	if ((_234641_f.get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_234641_f.get()._field_Decl.get()._field_sema.get()._field_errors);
		_234641_f.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _220b82e90_checkFnIns(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b31a10_FnIns>& _236835_f) {
	_220b82c1a_checkFnInsCaller(_self_, _236835_f,nullptr);
}



inline void _220b83215_checkTypeFn(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b31636_Fn>& _237236_f) {
	if (_237236_f.get()._field_CppLinked) {
		return;;
	};
	if ((_237236_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _237236_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_205d79459:;
		if (it != expr.end()) {
			jule::Ptr<_220b31a10_FnIns> _238221_ins = *it;
			{
				_220b82e90_checkFnIns(_self_, _238221_ins);
			}
			_iter_next_205d79459:;
			++it;
			goto _iter_begin_205d79459;
		}
		_iter_end_205d79459:;
	};
}



inline void _220b8348a_checkTestFn(_220b69471_Sema* _self_, jule::Ptr<_220b31a10_FnIns>& _238735_f) {
	if (_238735_f.get()._field_Decl.get()._field_Public) {
		_220b6c133_pushErr(&(*_self_), _238735_f.get()._field_Decl.get()._field_Token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_220b6c452_pushSugggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_238735_f.get()._field_Params.len() != 1LL) || (_238735_f.get()._field_Result != nullptr))) {
		_220b6c133_pushErr(&(*_self_), _238735_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_220b6c452_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_220c1443e_Sptr> _240017_sptr = _220c0d559_Sptr(_238735_f.get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_240017_sptr == nullptr)) {
		_220b6c133_pushErr(&(*_self_), _238735_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_220b6c452_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_21eec33d0_StructIns> _240713_s = _220c0e747_Struct(_240017_sptr.get()._field_Elem.ptr());;
	if (((_240713_s == nullptr) || (!(_220b66858_isStdPackage(_240713_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("testing", 7)))))) {
		_220b6c133_pushErr(&(*_self_), _238735_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_220b6c452_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _220b83710_precheckTypeFn(jule::Ptr<_220b69471_Sema> _self_, jule::Ptr<_220b31636_Fn>& _241539_f) {
	if (_241539_f.get()._field_CppLinked) {
		return;;
	};
	if ((_241539_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_241539_f.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_220b31a10_FnIns> _242621_ins = _220012e14_instanceForce(_241539_f);;
		_241539_f.get()._field_Instances = jule::alloc_for_append(_241539_f.get()._field_Instances,1);_241539_f.get()._field_Instances.__push(_242621_ins);;
		_220b763d4_reloadFnInsTypes(_self_, _242621_ins);
		_242621_ins.get()._field_reloaded=true;
		if (_220c27d59_hasDirective(_241539_f.get()._field_Directives,jule::Str("test", 4))) {
			_220b8348a_checkTestFn(_self_.ptr(), _242621_ins);
		};
	};
}



inline void _220b838db_precheckFnTypes(jule::Ptr<_220b69471_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_205d839e6:;
		if (it != expr.end()) {
			jule::Ptr<_220b376b4_Trait> _243921_decl = *it;
			{
				{
					auto &expr = _243921_decl.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_205d84376:;
					if (it != expr.end()) {
						jule::Ptr<_220b31636_Fn> _244025_m = *it;
						{
							_220b83710_precheckTypeFn(_self_, _244025_m);
						}
						_iter_next_205d84376:;
						++it;
						goto _iter_begin_205d84376;
					}
					_iter_end_205d84376:;
				};
			}
			_iter_next_205d839e6:;
			++it;
			goto _iter_begin_205d839e6;
		}
		_iter_end_205d839e6:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_205d84046:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> _244421_decl = *it;
			{
				_220b83710_precheckTypeFn(_self_, _244421_decl);
			}
			_iter_next_205d84046:;
			++it;
			goto _iter_begin_205d84046;
		}
		_iter_end_205d84046:;
	};
}



inline void _220b83ab7_checkFnTypes(jule::Ptr<_220b69471_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_205d858a5:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> _245121_decl = *it;
			{
				_220b83215_checkTypeFn(_self_, _245121_decl);
			}
			_iter_next_205d858a5:;
			++it;
			goto _iter_begin_205d858a5;
		}
		_iter_end_205d858a5:;
	};
}



inline void _220b83c93_checkPackageTypes(jule::Ptr<_220b69471_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_205d86433:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _245921_f = *it;
			{
				_220b6bc6a_setCurrentFile(_self_.ptr(), _245921_f);
				_220b800e1_checkGlobalTypes(_self_);
				_220b838db_precheckFnTypes(_self_);
				_220b82357_precheckStructTypes(_self_);
			}
			_iter_next_205d86433:;
			++it;
			goto _iter_begin_205d86433;
		}
		_iter_end_205d86433:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_205d87c3c:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _247021_f = *it;
			{
				_220b6bc6a_setCurrentFile(_self_.ptr(), _247021_f);
				_220b83ab7_checkFnTypes(_self_);
				_220b81b4d_checkStructTypes(_self_);
			}
			_iter_next_205d87c3c:;
			++it;
			goto _iter_begin_205d87c3c;
		}
		_iter_end_205d87c3c:;
	};
}



inline void _220b83e6e_setFileSemaFields(jule::Ptr<_220b69471_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_205d8907e:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> _247821_f = *it;
			{
				_247821_f.get()._field_sema=_self_;
			}
			_iter_next_205d8907e:;
			++it;
			goto _iter_begin_205d8907e;
		}
		_iter_end_205d8907e:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_205d8937b:;
		if (it != expr.end()) {
			jule::Ptr<_21eec3006_Struct> _248121_st = *it;
			{
				_248121_st.get()._field_sema=_self_;
			}
			_iter_next_205d8937b:;
			++it;
			goto _iter_begin_205d8937b;
		}
		_iter_end_205d8937b:;
	};
}



inline void _220b8414a_setSemaFields(jule::Ptr<_220b69471_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_205d89dc6:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _248721_file = *it;
			{
				_220b6bc6a_setCurrentFile(_self_.ptr(), _248721_file);
				_220b83e6e_setFileSemaFields(_self_);
			}
			_iter_next_205d89dc6:;
			++it;
			goto _iter_begin_205d89dc6;
		}
		_iter_end_205d89dc6:;
	};
}



inline void _220b843c0_check(jule::Ptr<_220b69471_Sema> _self_, jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>& _249330_files) {
	_self_.get()._field_files=_249330_files;
	_220b70796_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_220b8414a_setSemaFields(_self_);
	_220b70d29_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_220b70b4d_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_220b7e51e_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_220b83c93_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _220b69471_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _220b84777_missingRetChecker static__220b84b40_new(void) {
	return _220b84777_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _220b84e1a_checkConditional(_220b84777_missingRetChecker* _self_, jule::Ptr<_220b4367b_Conditional> _253635_c) {
	{
		auto &expr = _253635_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_205d8e86a:;
		if (it != expr.end()) {
			jule::Ptr<_220b4301b_If> _253721_elif = *it;
			{
				if ((_253721_elif == nullptr)) {
					return false;;
				};
				if ((!(_220b85844_checkScope(&(*_self_), _253721_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_205d8e86a:;
			++it;
			goto _iter_begin_205d8e86a;
		}
		_iter_end_205d8e86a:;
	};
	return ((_253635_c.get()._field_Default != nullptr) && _220b85844_checkScope(&(*_self_), _253635_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _220b85228_checkMatch(_220b84777_missingRetChecker* _self_, jule::Ptr<_220b4686b_Match> _254829_m) {
	{
		auto &expr = _254829_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_205d9154d:;
		if (it != expr.end()) {
			jule::Ptr<_220b473b6_Case> _254921_c = *it;
			{
				if ((_254921_c == nullptr)) {
					return false;;
				};
				jule::I64 _255317_n = (*_self_)._field_breaked.len();;
				jule::Bool _255417_ok = _220b85844_checkScope(&(*_self_), _254921_c.get()._field_Scope);;
				{
					
					if ((_255317_n != (*_self_)._field_breaked.len())) {
						_case_begin_205d931cb:;
						{
							return false;;
						}
					}
					else if ((!(_255417_ok))) {
						_case_begin_205d93253:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;;
							};
							goto _case_begin_205d932ca;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_205d932ca:;
						{
							(*_self_)._field_falled=false;
							if ((_254921_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_205d9154d;
						}
					}
					_match_end_205d93154:;
				};
			}
			_iter_next_205d9154d:;
			++it;
			goto _iter_begin_205d9154d;
		}
		_iter_end_205d9154d:;
	};
	return ((_254829_m.get()._field_Default != nullptr) && _220b85844_checkScope(&(*_self_), _254829_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _220b85536_checkInfIter(_220b84777_missingRetChecker* _self_, jule::Ptr<_220b43967_InfIter> _257431_it) {
	jule::I64 _257513_n = (*_self_)._field_breaked.len();;
	if (_220b85844_checkScope(&(*_self_), _257431_it.get()._field_Scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_257513_n);
		return true;;
	};
	if ((_257513_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _258117_itaddr = static_cast<jule::Uintptr>(_257431_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_257513_n);
			auto it = expr.begin();
			_iter_begin_205d97114:;
			if (it != expr.end()) {
				jule::Uintptr _258220_addr = *it;
				{
					if ((_258117_itaddr == _258220_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_257513_n);
						return false;;
					};
				}
				_iter_next_205d97114:;
				++it;
				goto _iter_begin_205d97114;
			}
			_iter_end_205d97114:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_257513_n);
	};
	return true;;
}



inline jule::Bool _220b85844_checkScope(_220b84777_missingRetChecker* _self_, jule::Ptr<_220b42b20_Scope> _259329_s) {
	if ((_259329_s == nullptr)) {
		return false;;
	};
	{
		auto &expr = _259329_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_205d98a83:;
		if (it != expr.end()) {
			jule::Any _259721_st = *it;
			{
				{
					auto &_match_expr{ _259721_st };
					
					if (_match_expr.type == &__jule_any_type50) {
						_case_begin_205d99468:;
						{
							(*_self_)._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_205d99512:;
						{
							jule::Uintptr _260321_addr = _259721_st.cast_ptr<_220b45073_BreakSt>(&__jule_any_type51).get()._field_It;;
							if ((_260321_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_260321_addr);;
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_205d99578:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_205d995de:;
						{
							if (_220b85536_checkInfIter(&(*_self_), _259721_st.cast_ptr<_220b43967_InfIter>(&__jule_any_type37))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type52) {
						_case_begin_205d99655:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_205d996bb:;
						{
							if (_220b85844_checkScope(&(*_self_), _259721_st.cast_ptr<_220b42b20_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_205d99743:;
						{
							{
								auto &_match_expr{ _259721_st.cast_ptr<_220bceecb_Data>(&__jule_any_type24).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type23) {
									_case_begin_205d9d1d6:;
									{
										return true;;
									}
								}
								_match_end_205d9ce2d:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_205d997ba:;
						{
							if (_220b84e1a_checkConditional(&(*_self_), _259721_st.cast_ptr<_220b4367b_Conditional>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_205d99842:;
						{
							if (_220b85228_checkMatch(&(*_self_), _259721_st.cast_ptr<_220b4686b_Match>(&__jule_any_type49))) {
								return true;;
							};
						}
					}
					_match_end_205d992c0:;
				};
			}
			_iter_next_205d98a83:;
			++it;
			goto _iter_begin_205d98a83;
		}
		_iter_end_205d98a83:;
	};
	return false;;
}



inline jule::Bool _220b85b52_check(_220b84777_missingRetChecker* _self_, jule::Ptr<_220b42b20_Scope> _263924_s) {
	return _220b85844_checkScope(&(*_self_), _263924_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _220b84777_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220b86438_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _220b87835_IsInitialized(_220b8746c_Var* _self_) {
	return ((*_self_)._field_Value != nullptr);;
}



inline jule::Bool _220b87a99_IsTypeInferred(_220b8746c_Var* _self_) {
	return (((*_self_)._field_Kind == nullptr) || ((*_self_)._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _220b87d0d_untypedConstant(_220b8746c_Var* _self_) {
	return (_220b87a99_IsTypeInferred(&(*_self_)) && (*_self_)._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _220b8746c_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__220b8888b_Dispose(jule::Ptr<_220b31636_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && (_1023_f.get()._field_Ident == jule::Str("Dispose", 7))) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _22001c270_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_22001b35c_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__220b88b33_Str(jule::Ptr<_220b31636_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (_2419_f.get()._field_Ident != jule::Str("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _22001c270_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _22001b35c_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_220b31a10_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_220c10baa_Prim> _3913_prim = _220c0d2e5_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _220c13dde_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__220b88e74_logical(jule::Ptr<_220b31636_Fn>& _4624_f, jule::Str _4632_ident) {
	if ((((((((((((((_4624_f == nullptr) || (_4624_f.get()._field_Ident != _4632_ident)) || (_4624_f.get()._field_Owner == nullptr)) || (_4624_f.get()._field_Instances.len() == 0LL)) || _4624_f.get()._field_Statically) || _4624_f.get()._field_Unsafety) || _22001c270_IsVoid(_4624_f.ptr())) || (_4624_f.get()._field_Generics.len() != 0LL)) || (_4624_f.get()._field_Params.len() != 2LL)) || _4624_f.get()._field_Params[0LL].get()._field_Mutable) || _22001b35c_IsRef(_4624_f.get()._field_Params[0LL].ptr())) || _4624_f.get()._field_Params[1LL].get()._field_Mutable) || _4624_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_220b31a10_FnIns> _6317_ins = _4624_f.get()._field_Instances[0LL];;
	jule::Ptr<_220c10baa_Prim> _6413_prim = _220c0d2e5_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_220c13b7a_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _220c0e747_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__220b8921b_Eq(jule::Ptr<_220b31636_Fn> _7218_f) {
	return static__220b88e74_logical(_7218_f,jule::Str("Eq", 2));;
}



inline jule::Bool static__220b894b3_Gt(jule::Ptr<_220b31636_Fn> _7718_f) {
	return static__220b88e74_logical(_7718_f,jule::Str("Gt", 2));;
}



inline jule::Bool static__220b8975a_GtEq(jule::Ptr<_220b31636_Fn> _8220_f) {
	return static__220b88e74_logical(_8220_f,jule::Str("GtEq", 4));;
}



inline jule::Bool static__220b89a02_Lt(jule::Ptr<_220b31636_Fn> _8718_f) {
	return static__220b88e74_logical(_8718_f,jule::Str("Lt", 2));;
}



inline jule::Bool static__220b89c99_LtEq(jule::Ptr<_220b31636_Fn> _9220_f) {
	return static__220b88e74_logical(_9220_f,jule::Str("LtEq", 4));;
}



inline jule::Bool static__220b8a0da_result(jule::Ptr<_220b31636_Fn>& _9623_f, jule::Str _9631_ident) {
	if ((((((((((((((_9623_f == nullptr) || (_9623_f.get()._field_Ident != _9631_ident)) || (_9623_f.get()._field_Owner == nullptr)) || (_9623_f.get()._field_Instances.len() == 0LL)) || _9623_f.get()._field_Statically) || _9623_f.get()._field_Unsafety) || _22001c270_IsVoid(_9623_f.ptr())) || (_9623_f.get()._field_Generics.len() != 0LL)) || (_9623_f.get()._field_Params.len() != 2LL)) || _9623_f.get()._field_Params[0LL].get()._field_Mutable) || _22001b35c_IsRef(_9623_f.get()._field_Params[0LL].ptr())) || _9623_f.get()._field_Params[1LL].get()._field_Mutable) || _9623_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_220b31a10_FnIns> _11317_ins = _9623_f.get()._field_Instances[0LL];;
	return (_220c0e747_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__220b8a382_Shl(jule::Ptr<_220b31636_Fn> _11819_f) {
	return static__220b8a0da_result(_11819_f,jule::Str("Shl", 3));;
}



inline jule::Bool static__220b8a629_Shr(jule::Ptr<_220b31636_Fn> _12319_f) {
	return static__220b8a0da_result(_12319_f,jule::Str("Shr", 3));;
}



inline jule::Bool static__220b8a8c1_Add(jule::Ptr<_220b31636_Fn> _12819_f) {
	return static__220b8a0da_result(_12819_f,jule::Str("Add", 3));;
}



inline jule::Bool static__220b8ab68_Sub(jule::Ptr<_220b31636_Fn> _13319_f) {
	return static__220b8a0da_result(_13319_f,jule::Str("Sub", 3));;
}



inline jule::Bool static__220b8ae10_Div(jule::Ptr<_220b31636_Fn> _13819_f) {
	return static__220b8a0da_result(_13819_f,jule::Str("Div", 3));;
}



inline jule::Bool static__220b8b1a7_Mul(jule::Ptr<_220b31636_Fn> _14319_f) {
	return static__220b8a0da_result(_14319_f,jule::Str("Mul", 3));;
}



inline jule::Bool static__220b8b44e_Mod(jule::Ptr<_220b31636_Fn> _14819_f) {
	return static__220b8a0da_result(_14819_f,jule::Str("Mod", 3));;
}



inline jule::Bool static__220b8b6e6_BitAnd(jule::Ptr<_220b31636_Fn> _15322_f) {
	return static__220b8a0da_result(_15322_f,jule::Str("BitAnd", 6));;
}



inline jule::Bool static__220b8b98d_BitOr(jule::Ptr<_220b31636_Fn> _15821_f) {
	return static__220b8a0da_result(_15821_f,jule::Str("BitOr", 5));;
}



inline jule::Bool static__220b8bc35_BitXor(jule::Ptr<_220b31636_Fn> _16322_f) {
	return static__220b8a0da_result(_16322_f,jule::Str("BitXor", 6));;
}



inline jule::Bool static__220b8c076_unary(jule::Ptr<_220b31636_Fn>& _16722_f, jule::Str _16730_ident) {
	if ((((((((((((_16722_f == nullptr) || (_16722_f.get()._field_Ident != _16730_ident)) || (_16722_f.get()._field_Owner == nullptr)) || (_16722_f.get()._field_Instances.len() == 0LL)) || _16722_f.get()._field_Statically) || _16722_f.get()._field_Unsafety) || _22001c270_IsVoid(_16722_f.ptr())) || (_16722_f.get()._field_Generics.len() != 0LL)) || (_16722_f.get()._field_Params.len() != 1LL)) || _16722_f.get()._field_Params[0LL].get()._field_Mutable) || _22001b35c_IsRef(_16722_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_220b31a10_FnIns> _18217_ins = _16722_f.get()._field_Instances[0LL];;
	return (_220c0e747_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__220b8c31d_Neg(jule::Ptr<_220b31636_Fn> _18719_f) {
	return static__220b8c076_unary(_18719_f,jule::Str("Neg", 3));;
}



inline jule::Bool static__220b8c5b5_Pos(jule::Ptr<_220b31636_Fn> _19219_f) {
	return static__220b8c076_unary(_19219_f,jule::Str("Pos", 3));;
}



inline jule::Bool static__220b8c85c_BitNot(jule::Ptr<_220b31636_Fn> _19722_f) {
	return static__220b8c076_unary(_19722_f,jule::Str("BitNot", 6));;
}



inline jule::Bool static__220b8cb9d_assign(jule::Ptr<_220b31636_Fn>& _20123_f, jule::Str _20131_ident) {
	if ((((((((((((((_20123_f == nullptr) || (_20123_f.get()._field_Ident != _20131_ident)) || (_20123_f.get()._field_Owner == nullptr)) || (_20123_f.get()._field_Instances.len() == 0LL)) || _20123_f.get()._field_Statically) || _20123_f.get()._field_Unsafety) || (!(_22001c270_IsVoid(_20123_f.ptr())))) || (_20123_f.get()._field_Generics.len() != 0LL)) || (_20123_f.get()._field_Params.len() != 2LL)) || (!(_20123_f.get()._field_Params[0LL].get()._field_Mutable))) || _22001b35c_IsRef(_20123_f.get()._field_Params[0LL].ptr())) || _20123_f.get()._field_Params[1LL].get()._field_Mutable) || _20123_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__220b8ce45_AddAssign(jule::Ptr<_220b31636_Fn> _22125_f) {
	return static__220b8cb9d_assign(_22125_f,jule::Str("AddAssign", 9));;
}



inline jule::Bool static__220b8d1dc_SubAssign(jule::Ptr<_220b31636_Fn> _22625_f) {
	return static__220b8cb9d_assign(_22625_f,jule::Str("SubAssign", 9));;
}



inline jule::Bool static__220b8d484_DivAssign(jule::Ptr<_220b31636_Fn> _23125_f) {
	return static__220b8cb9d_assign(_23125_f,jule::Str("DivAssign", 9));;
}



inline jule::Bool static__220b8d72b_MulAssign(jule::Ptr<_220b31636_Fn> _23625_f) {
	return static__220b8cb9d_assign(_23625_f,jule::Str("MulAssign", 9));;
}



inline jule::Bool static__220b8d9c3_ModAssign(jule::Ptr<_220b31636_Fn> _24125_f) {
	return static__220b8cb9d_assign(_24125_f,jule::Str("ModAssign", 9));;
}



inline jule::Bool static__220b8dc6a_ShlAssign(jule::Ptr<_220b31636_Fn> _24625_f) {
	return static__220b8cb9d_assign(_24625_f,jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__220b8e012_ShrAssign(jule::Ptr<_220b31636_Fn> _25125_f) {
	return static__220b8cb9d_assign(_25125_f,jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__220b8e2a9_BitOrAssign(jule::Ptr<_220b31636_Fn> _25627_f) {
	return static__220b8cb9d_assign(_25627_f,jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__220b8e551_BitAndAssign(jule::Ptr<_220b31636_Fn> _26128_f) {
	return static__220b8cb9d_assign(_26128_f,jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__220b8e7e8_BitXorAssign(jule::Ptr<_220b31636_Fn> _26628_f) {
	return static__220b8cb9d_assign(_26628_f,jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _220b8821a_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _220bb92b2_pushErr(_220bb8c95_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_220b6c133_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_11726_fmt,_11739_args);
}



inline jule::Bool _220bb9526_checkTrait(_220bb8c95_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_220c0bd93_IsNil((*_self_)._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_220b376b4_Trait> _12513_trt = _220c0e9ab_Trait((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_220c0d559_Sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_205dd6c36:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_220c0d559_Sptr((*_self_)._field_src.ptr()).get()._field_Elem;
				if ((_220c0e747_Struct((*_self_)._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_205dd65a4;
			}
		}
		else if ((_220c0e747_Struct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_205dd65a4:;
			{
				jule::Ptr<_21eec33d0_StructIns> _13617_s = _220c0e747_Struct((*_self_)._field_src.ptr());;
				if ((!(_21ee83e0c_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _220ba0dd1_traitHasReferenceReceiver(_12513_trt))) {
					_220bb92b2_pushErr(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_220c0e9ab_Trait((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_205dd661a:;
			{
				__jule_func_result = (_12513_trt == _220c0e9ab_Trait((*_self_)._field_src.ptr()));
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_205dd653d:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_205dd64c7:;
	};
}



inline jule::Bool _220bb978a_checkPtr(_220bb8c95_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_220c0bd93_IsNil((*_self_)._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_220c179a3_Ptr> _15617_dest = _220c0d7bd_Ptr((*_self_)._field_dest.ptr());;
	if (_220c18476_IsUnsafe(_15617_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _220c0b667_Equal((*_self_)._field_dest, (*_self_)._field_src);
	return __jule_func_result;;
}



inline jule::Bool _220bb99ee_checkPrim(_220bb8c95_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*_self_)._field_dest.get()._field_Variadic))) {
		jule::Ptr<_220c10baa_Prim> _16517_prim = _220c0d2e5_Prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _220c14153_IsAny(_16517_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _220c0b667_Equal((*_self_)._field_dest, (*_self_)._field_src);
	return __jule_func_result;;
}



inline jule::Bool _220bb9da6_typeEnum(_220bb8c95_typeCompatibilityChecker* _self_, jule::Ptr<_220b38ae4_TypeEnum>& _17328_e, jule::Ptr<_220c0ae5d_TypeKind>& _17347_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _17328_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_205dddce8:;
		if (it != expr.end()) {
			jule::Ptr<_220b38907_TypeEnumItem> _17421_item = *it;
			{
				if (_220c0b667_Equal(_17421_item.get()._field_Kind.get()._field_Kind, _17347_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_220b38ae4_TypeEnum> _17821_ke = _220c0dc96_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_205dddce8;
				};
				if (_220bb9da6_typeEnum(&(*_self_), _17821_ke,_17347_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_205dddce8:;
			++it;
			goto _iter_begin_205dddce8;
		}
		_iter_end_205dddce8:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _220bba11a_checkTypeEnum(_220bb8c95_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_220c0b667_Equal((*_self_)._field_dest, (*_self_)._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_220b38ae4_TypeEnum> _19317_e = _220c0dc96_TypeEnum((*_self_)._field_dest.ptr());;
	__jule_func_result = _220bb9da6_typeEnum(&(*_self_), _19317_e,(*_self_)._field_src);
	return __jule_func_result;;
}



inline jule::Bool _220bba37e_check(_220bb8c95_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_220c0d7bd_Ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _220bb978a_checkPtr(&(*_self_));
		return __jule_func_result;;
	};
	if (_220c0c844_NilCompatible((*_self_)._field_dest.ptr())) {
		if (_220c0bd93_IsNil((*_self_)._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_220c0d2e5_Prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_205de3e30:;
			{
				__jule_func_result = _220bb99ee_checkPrim(&(*_self_));
				return __jule_func_result;;
			}
		}
		else if ((_220c0dc96_TypeEnum((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_205de3c76:;
			{
				__jule_func_result = _220bba11a_checkTypeEnum(&(*_self_));
				return __jule_func_result;;
			}
		}
		else if ((_220c0e9ab_Trait((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_205de345c:;
			{
				__jule_func_result = _220bb9526_checkTrait(&(*_self_));
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_205de2e84:;
			{
				__jule_func_result = _220c0b667_Equal((*_self_)._field_dest, (*_self_)._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_205de2d74:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _220bb8c95_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _220bbad30_pushErr(_220bba8bd_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_220b6c133_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_22926_fmt,_22939_args);
}



inline jule::Bool _220bbb094_checkValidity(_220bba8bd_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_220c0e4d3_Fn((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205de6b58:;
			{
				jule::Ptr<_220b31a10_FnIns> _23717_f = _220c0e4d3_Fn((*_self_)._field_d.get()._field_Kind.ptr());;
				{
					
					if (_220b321c5_IsBuiltin(_23717_f.ptr())) {
						_case_begin_205de8242:;
						{
							_220bbad30_pushErr(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_205de82b9:;
						{
							_220bbad30_pushErr(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _22004d735_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_205de8341:;
						{
							_220bbad30_pushErr(&(*_self_), jule::Str("non-static methods cannot use as anonymous function", 51),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_205de83b8:;
						{
							_220bbad30_pushErr(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_220b6c452_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_205de8165:;
				};
			}
		}
		else if ((_220c0ee84_Tup((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205de6bd0:;
			{
				_220bbad30_pushErr(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_205de6a9d:;
	};
	return _23417_valid;;
}



inline jule::Bool _220bbb308_checkConst(_220bba8bd_assignTypeChecker* _self_) {
	if (((((!(_220bd088e_IsConst((*_self_)._field_d.ptr()))) || (_220c0d2e5_Prim((*_self_)._field_dest.ptr()) == nullptr)) || (_220c0d2e5_Prim((*_self_)._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_220b2730d_IsNum(_220c0d2e5_Prim((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type48_compare((*_self_)._field_d.get()._field_Model, (*_self_)._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _27413_kind = _220c0d2e5_Prim((*_self_)._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_220b271cb_IsFloat(_27413_kind)) {
			_case_begin_205e00ac9:;
			{
				if ((!(_220ba1013_floatAssignable(_27413_kind,(*_self_)._field_d)))) {
					_220bbad30_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;;
				};
				(*_self_)._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else if (_220b27099_IsInt(_27413_kind)) {
			_case_begin_205e00458:;
			{
				if ((!(_220bb8ab9_intAssignable(_27413_kind,(*_self_)._field_d)))) {
					_220bbad30_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;;
				};
				(*_self_)._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else {
			_case_begin_205e003e2:;
			{
				return false;;
			}
		}
		_match_end_205e0037b:;
	};
	return true;;
}



inline jule::Bool _220bbb56c_isPrim(_220bba8bd_assignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_Variadic || (*_self_)._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_220c0bb2e_CppLinked((*_self_)._field_dest.ptr()) || _220c0bb2e_CppLinked((*_self_)._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_220c0d2e5_Prim((*_self_)._field_dest.ptr()) != nullptr) && (_220c0d2e5_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _220bbb7d1_checkCompatibility(_220bba8bd_assignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_205e04cdc:;
			{
				return false;;
			}
		}
		else if ((!(_220bbb094_checkValidity(&(*_self_))))) {
			_case_begin_205e04d64:;
			{
				return false;;
			}
		}
		else if (_220bbb308_checkConst(&(*_self_))) {
			_case_begin_205e04ddb:;
			{
				return true;;
			}
		}
		else if ((_220c0da32_Enum((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205e04e63:;
			{
				jule::Ptr<_220c0ae5d_TypeKind> _31821_dkind = (*_self_)._field_dest;;
				if ((_220c0da32_Enum((*_self_)._field_dest.ptr()) != nullptr)) {
					_31821_dkind=_220c0da32_Enum((*_self_)._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_220c0d2e5_Prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_205e04b99;
				};
				if (_220b25ad1_TypesAreCompatible(_220c0d2e5_Prim(_220c0da32_Enum((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind,_220c0d2e5_Prim(_31821_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_220bbb56c_isPrim(&(*_self_))) {
			_case_begin_205e04eda:;
			{
				jule::Ptr<_220c10baa_Prim> _32817_dest = _220c0d2e5_Prim((*_self_)._field_dest.ptr());;
				if (_220c14153_IsAny(_32817_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_220c10baa_Prim> _33221_src = _220c0d2e5_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_220b25ad1_TypesAreCompatible(_32817_dest.get()._field_Kind,_33221_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_205e04b99:;
	};
	return _220b7446a_checkTypeCompatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_Kind,(*_self_)._field_errorToken);;
}



inline jule::Bool _220bbba45_check(_220bba8bd_assignTypeChecker* _self_) {
	jule::Bool _34113_ok = _220bbb7d1_checkCompatibility(&(*_self_));;
	if ((_34113_ok && (!((*_self_)._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_220c298a5_applyImplicitCast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _34113_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _220bba8bd_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _205e1ceae_annotateConstraintElem(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _36149_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_205e1e5a9:;
			{
				jule::Ptr<_220c0ae5d_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_205e203e0:;
						{
							_36421_elem=_220c0e00a_Arr(_36149_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_205e1ee5b:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.cast_ptr<_21eea3eb5_ArrTypeDecl>(&__jule_any_type77).get()._field_Elem;
				return _220bbda03_annotateConstraint(&(*_self_), _36421_elem);;
			}
		}
		_match_end_205e1e521:;
	};
	return false;;
}

inline jule::Bool _205e1c6a6_annotateConstraintElem(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _36149_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_205e22b1d:;
			{
				jule::Ptr<_220c0ae5d_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_205e239dc:;
						{
							_36421_elem=_220c0e26e_Slc(_36149_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_205e234c0:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.cast_ptr<_21eea325b_SlcTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _220bbda03_annotateConstraint(&(*_self_), _36421_elem);;
			}
		}
		_match_end_205e22a85:;
	};
	return false;;
}

inline jule::Bool _205e221b1_annotateConstraintElem(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _36149_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_205e26182:;
			{
				jule::Ptr<_220c0ae5d_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_205e270b7:;
						{
							_36421_elem=_220c0d7bd_Ptr(_36149_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_205e26a34:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.cast_ptr<_21eea3833_PtrTypeDecl>(&__jule_any_type79).get()._field_Elem;
				return _220bbda03_annotateConstraint(&(*_self_), _36421_elem);;
			}
		}
		_match_end_205e260e9:;
	};
	return false;;
}

inline jule::Bool _205e1ca3b_annotateConstraintElem(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _36149_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_205e293c7:;
			{
				jule::Ptr<_220c0ae5d_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_205e2a384:;
						{
							_36421_elem=_220c0d559_Sptr(_36149_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_205e29c79:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.cast_ptr<_21eea2d60_SptrTypeDecl>(&__jule_any_type80).get()._field_Elem;
				return _220bbda03_annotateConstraint(&(*_self_), _36421_elem);;
			}
		}
		_match_end_205e2933e:;
	};
	return false;;
}



inline jule::Bool _220bbcc88_annotateConstraintMap(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _38145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_205e0ca4d:;
			{
				jule::Ptr<_220c16452_Map> _38421_m = _220c0ec20_Map(_38145_k.ptr());;
				jule::Ptr<_21eea4713_MapTypeDecl> _38521_m2 = (*_self_)._field_c.get()._field_Kind.cast_ptr<_21eea4713_MapTypeDecl>(&__jule_any_type81);;
				(*_self_)._field_c=_38521_m2.get()._field_Key;
				if ((!(_220bbda03_annotateConstraint(&(*_self_), _38421_m.get()._field_Key)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*_self_)._field_c=_38521_m2.get()._field_Val;
				__jule_func_result = _220bbda03_annotateConstraint(&(*_self_), _38421_m.get()._field_Val);
				return __jule_func_result;;
			}
		}
		_match_end_205e0c9e8:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _220bbd096_annotateConstraintTup(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _39645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_205e10237:;
			{
				jule::Ptr<_21eea3547_TupleTypeDecl> _39921_tup = (*_self_)._field_c.get()._field_Kind.cast_ptr<_21eea3547_TupleTypeDecl>(&__jule_any_type82);;
				jule::Ptr<_220c15929_Tuple> _40021_tup2 = _220c0ee84_Tup(_39645_k.ptr());;
				{
					auto &expr = _40021_tup2.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_205e11755:;
					if (it != expr.end()) {
						jule::Ptr<_220c0ae5d_TypeKind> _40125_t2 = *it;
						{
							{
								auto &expr = _39921_tup.get()._field_Types;
								auto it = expr.begin();
								_iter_begin_205e11ea3:;
								if (it != expr.end()) {
									jule::Ptr<_21eea19a7_TypeDecl> _40229_t = *it;
									{
										(*_self_)._field_c=_40229_t;
										if (_220bbda03_annotateConstraint(&(*_self_), _40125_t2)) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_205e11ea3:;
									++it;
									goto _iter_begin_205e11ea3;
								}
								_iter_end_205e11ea3:;
							};
						}
						_iter_next_205e11755:;
						++it;
						goto _iter_begin_205e11755;
					}
					_iter_end_205e11755:;
				};
			}
		}
		_match_end_205e101b0:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _220bbd3a4_annotateConstraintFn(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _41344_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_205e11c83:;
			{
				jule::Ptr<_21eeb8293_FnDecl> _41621_pf = (*_self_)._field_c.get()._field_Kind.cast_ptr<_21eeb8293_FnDecl>(&__jule_any_type15);;
				jule::Ptr<_220b31a10_FnIns> _41721_f = _220c0e4d3_Fn(_41344_k.ptr());;
				{
					auto &expr = _41721_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_205e141d6:;
					if (it != expr.end()) {
						jule::I64 _41818_i = it - expr.begin();
						jule::Ptr<_220b31823_ParamIns> _41825_fp = *it;
						{
							(*_self_)._field_c=_41621_pf.get()._field_Params[_41818_i].get()._field_Kind;
							if (_220bbda03_annotateConstraint(&(*_self_), _41825_fp.get()._field_Kind)) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_205e141d6:;
						++it;
						_41818_i++;
						goto _iter_begin_205e141d6;
					}
					_iter_end_205e141d6:;
				};
				if ((_41621_pf.get()._field_Result != nullptr)) {
					(*_self_)._field_c=_41621_pf.get()._field_Result.get()._field_Kind;
					if (_220bbda03_annotateConstraint(&(*_self_), _41721_f.get()._field_Result)) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_205e11c2d:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _220bbd6d4_annotateConstraintIdent(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _43447_k) {
	jule::Ptr<_21eea206d_IdentTypeDecl> _43517_ident = (*_self_)._field_c.get()._field_Kind.cast_ptr<_21eea206d_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_21eec33d0_StructIns> _43617_s = _220c0e747_Struct(_43447_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_205e170c9:;
		if (it != expr.end()) {
			jule::I64 _43713_i = it - expr.begin();
			jule::Ptr<_21eeb3b0c_GenericDecl> _43716_g = *it;
			{
				if ((_43716_g.get()._field_Ident == _43517_ident.get()._field_Ident)) {
					jule::Ptr<_220c09731_InsGeneric> _43925_fg = (*_self_)._field_f.get()._field_Generics[_43713_i];;
					if ((_43925_fg != nullptr)) {
						return false;;
					};
					_220bbdd22_pushGeneric(&(*_self_), _43447_k,_43713_i);
					return true;;
				};
				if ((_43617_s == nullptr)) {
					goto _iter_next_205e170c9;
				};
				jule::Ptr<_21eea19a7_TypeDecl> _44921_c = (*_self_)._field_c;;
				{
					auto &expr = _43517_ident.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_205e19384:;
					if (it != expr.end()) {
						jule::Ptr<_21eea19a7_TypeDecl> _45025_ig = *it;
						{
							(*_self_)._field_c=_45025_ig;
							{
								auto &expr = _43617_s.get()._field_Generics;
								auto it = expr.begin();
								_iter_begin_205e1a62c:;
								if (it != expr.end()) {
									jule::Ptr<_220c09731_InsGeneric> _45229_sg = *it;
									{
										if (_220bbda03_annotateConstraint(&(*_self_), _45229_sg.get()._field_Kind)) {
											return true;;
										};
									}
									_iter_next_205e1a62c:;
									++it;
									goto _iter_begin_205e1a62c;
								}
								_iter_end_205e1a62c:;
							};
						}
						_iter_next_205e19384:;
						++it;
						goto _iter_begin_205e19384;
					}
					_iter_end_205e19384:;
				};
				(*_self_)._field_c=_44921_c;
			}
			_iter_next_205e170c9:;
			++it;
			_43713_i++;
			goto _iter_begin_205e170c9;
		}
		_iter_end_205e170c9:;
	};
	return false;;
}



inline jule::Bool _220bbda03_annotateConstraint(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _46342_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_205e1aa17:;
			{
				return _220bbd6d4_annotateConstraintIdent(&(*_self_), _46342_k);;
			}
		}
		_match_end_205e1a9b2:;
	};
	{
		
		if ((_220c0e00a_Arr(_46342_k.ptr()) != nullptr)) {
			_case_begin_205e1ba7e:;
			{
				return _205e1ceae_annotateConstraintElem(&(*_self_), _46342_k);;
			}
		}
		else if ((_220c0e26e_Slc(_46342_k.ptr()) != nullptr)) {
			_case_begin_205e1c057:;
			{
				return _205e1c6a6_annotateConstraintElem(&(*_self_), _46342_k);;
			}
		}
		else if ((_220c0d7bd_Ptr(_46342_k.ptr()) != nullptr)) {
			_case_begin_205e1c0bd:;
			{
				return _205e221b1_annotateConstraintElem(&(*_self_), _46342_k);;
			}
		}
		else if ((_220c0d559_Sptr(_46342_k.ptr()) != nullptr)) {
			_case_begin_205e1c19a:;
			{
				return _205e1ca3b_annotateConstraintElem(&(*_self_), _46342_k);;
			}
		}
		else if ((_220c0ec20_Map(_46342_k.ptr()) != nullptr)) {
			_case_begin_205e1c211:;
			{
				return _220bbcc88_annotateConstraintMap(&(*_self_), _46342_k);;
			}
		}
		else if ((_220c0e4d3_Fn(_46342_k.ptr()) != nullptr)) {
			_case_begin_205e1b650:;
			{
				return _220bbd3a4_annotateConstraintFn(&(*_self_), _46342_k);;
			}
		}
		else if ((_220c0ee84_Tup(_46342_k.ptr()) != nullptr)) {
			_case_begin_205e1b6b6:;
			{
				return _220bbd096_annotateConstraintTup(&(*_self_), _46342_k);;
			}
		}
		else {
			_case_begin_205e1be69:;
			{
				return false;;
			}
		}
		_match_end_205e1be14:;
	};
}



inline void _220bbdd22_pushGeneric(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _48835_k, jule::I64 _48849_i) {
	(*_self_)._field_f.get()._field_Generics[_48849_i]=jule::new_ptr<_220c09731_InsGeneric>(_220c09731_InsGeneric{._field_Kind=_48835_k, });
	jule::Ptr<_21eeb3b0c_GenericDecl> _49017_gd = (*_self_)._field_f.get()._field_Decl.get()._field_Generics[_48849_i];;
	{
		auto &expr = (*_self_)._field_ignored;
		auto it = expr.begin();
		_iter_begin_205e2cd7b:;
		if (it != expr.end()) {
			jule::Ptr<_220c0ae5d_TypeKind> _49121_ignored = *it;
			{
				if ((_49017_gd.get()._field_Ident == _220c0b359_Str(_49121_ignored.ptr()))) {
					_49121_ignored.get()._field_Kind=_48835_k.get()._field_Kind;
				};
			}
			_iter_next_205e2cd7b:;
			++it;
			goto _iter_begin_205e2cd7b;
		}
		_iter_end_205e2cd7b:;
	};
	if (((_49017_gd.get()._field_Constraint == nullptr) || (_49017_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_49017_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_220bbda03_annotateConstraint(&(*_self_), _48835_k);
}



inline jule::Bool _220bbe130_annotatePrim(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _50343_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _220bc0e56_annotateAny(&(*_self_), _50343_k);
	return __jule_func_result;;
}



inline jule::Bool _220bbe43d_annotateArr(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _50742_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_220c17046_Arr> _50817_parr = _220c0e00a_Arr((*((*_self_)._field_k)).ptr());;
	if ((_50817_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_220c17046_Arr> _51217_arr = _220c0e00a_Arr(_50742_k.ptr());;
	(*_self_)._field_k=(&(_50817_parr.get()._field_Elem));
	__jule_func_result = _220bc1264_annotateKind(&(*_self_), _51217_arr.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _220bbe74b_annotateSlc(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _51742_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_220c14d9b_Slc> _51817_pslc = _220c0e26e_Slc((*((*_self_)._field_k)).ptr());;
	if ((_51817_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_220c14d9b_Slc> _52217_slc = _220c0e26e_Slc(_51742_k.ptr());;
	(*_self_)._field_k=(&(_51817_pslc.get()._field_Elem));
	__jule_func_result = _220bc1264_annotateKind(&(*_self_), _52217_slc.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _220bbeb03_checkMapKey(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>* _52741_k, jule::Ptr<_220c0ae5d_TypeKind>& _52761_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_220c0ae5d_TypeKind>* _52817_old = (*_self_)._field_k;;
	(*_self_)._field_k=_52741_k;
	__jule_func_result=_220bc1264_annotateKind(&(*_self_), _52761_ck);
	(*_self_)._field_k=_52817_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _220bbee11_annotateMap(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _53542_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_220c16452_Map> _53617_pmap = _220c0ec20_Map((*((*_self_)._field_k)).ptr());;
	if ((_53617_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_220c16452_Map> _54017_m = _220c0ec20_Map(_53542_k.ptr());;
	__jule_func_result = (_220bbeb03_checkMapKey(&(*_self_), (&(_53617_pmap.get()._field_Key)),_54017_m.get()._field_Key) && _220bbeb03_checkMapKey(&(*_self_), (&(_53617_pmap.get()._field_Val)),_54017_m.get()._field_Val));
	return __jule_func_result;;
}



inline jule::Bool _220bc021e_annotateFn(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _54541_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_220b31a10_FnIns> _54617_pf = _220c0e4d3_Fn((*((*_self_)._field_k)).ptr());;
	if ((_54617_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_220b31a10_FnIns> _55017_f = _220c0e4d3_Fn(_54541_k.ptr());;
	{
		
		if ((_54617_pf.get()._field_Params.len() != _55017_f.get()._field_Params.len())) {
			_case_begin_205e39283:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_22001c270_IsVoid(_54617_pf.get()._field_Decl.ptr()) != _22001c270_IsVoid(_55017_f.get()._field_Decl.ptr()))) {
			_case_begin_205e3930a:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_205e391ea:;
	};
	__jule_func_result=true;
	jule::Ptr<_220c0ae5d_TypeKind>* _55917_old = (*_self_)._field_k;;
	{
		auto &expr = _55017_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_205e3ab03:;
		if (it != expr.end()) {
			jule::I64 _56014_i = it - expr.begin();
			jule::Ptr<_220b31823_ParamIns> _56021_fp = *it;
			{
				(*_self_)._field_k=(&(_54617_pf.get()._field_Params[_56014_i].get()._field_Kind));
				__jule_func_result=(_220bc1264_annotateKind(&(*_self_), _56021_fp.get()._field_Kind) && __jule_func_result);
			}
			_iter_next_205e3ab03:;
			++it;
			_56014_i++;
			goto _iter_begin_205e3ab03;
		}
		_iter_end_205e3ab03:;
	};
	if ((!(_22001c270_IsVoid(_54617_pf.get()._field_Decl.ptr())))) {
		(*_self_)._field_k=(&(_54617_pf.get()._field_Result));
		__jule_func_result=(_220bc1264_annotateKind(&(*_self_), _55017_f.get()._field_Result) && __jule_func_result);
	};
	(*_self_)._field_k=_55917_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _220bc052c_annotatePtr(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _57442_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_220c179a3_Ptr> _57517_pptr = _220c0d7bd_Ptr((*((*_self_)._field_k)).ptr());;
	if ((_57517_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_220c179a3_Ptr> _57917_ptr = _220c0d7bd_Ptr(_57442_k.ptr());;
	(*_self_)._field_k=(&(_57517_pptr.get()._field_Elem));
	__jule_func_result = _220bc1264_annotateKind(&(*_self_), _57917_ptr.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _220bc083a_annotateSptr(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _58443_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_220c1443e_Sptr> _58517_ssptr = _220c0d559_Sptr((*((*_self_)._field_k)).ptr());;
	if ((_58517_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_220c1443e_Sptr> _58917_sptr = _220c0d559_Sptr(_58443_k.ptr());;
	(*_self_)._field_k=(&(_58517_ssptr.get()._field_Elem));
	__jule_func_result = _220bc1264_annotateKind(&(*_self_), _58917_sptr.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _220bc0b48_annotateStruct(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _59445_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_21eec33d0_StructIns> _59517_s = _220c0e747_Struct((*((*_self_)._field_k)).ptr());;
	if ((_59517_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_21eec33d0_StructIns> _59917_s2 = _220c0e747_Struct(_59445_k.ptr());;
	if ((_59517_s.get()._field_Generics.len() != _59917_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &expr = _59517_s.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_205e43c3d:;
		if (it != expr.end()) {
			jule::I64 _60314_i = it - expr.begin();
			jule::Ptr<_220c09731_InsGeneric> _60321_g = *it;
			{
				jule::Ptr<_220c09731_InsGeneric> _60421_g2 = _59917_s2.get()._field_Generics[_60314_i];;
				if (_220c0b667_Equal(_60321_g.get()._field_Kind, _60421_g2.get()._field_Kind)) {
					goto _iter_next_205e43c3d;
				};
				(*_self_)._field_k=(&(_60321_g.get()._field_Kind));
				if ((!(_220bc1264_annotateKind(&(*_self_), _60421_g2.get()._field_Kind)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_205e43c3d:;
			++it;
			_60314_i++;
			goto _iter_begin_205e43c3d;
		}
		_iter_end_205e43c3d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _220bc0e56_annotateAny(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _61642_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _61713_kind = _220c0b359_Str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_205e4669c:;
		if (it != expr.end()) {
			jule::I64 _61813_i = it - expr.begin();
			jule::Ptr<_21eeb3b0c_GenericDecl> _61816_g = *it;
			{
				if ((_61713_kind != _61816_g.get()._field_Ident)) {
					goto _iter_next_205e4669c;
				};
				jule::Ptr<_220c09731_InsGeneric> _62217_t = (*_self_)._field_f.get()._field_Generics[_61813_i];;
				{
					
					if ((_62217_t == nullptr) || (_62217_t.get()._field_Kind == nullptr)) {
						_case_begin_205e4833b:;
						{
							_220bbdd22_pushGeneric(&(*_self_), _61642_k,_61813_i);
						}
					}
					else if ((!(_220c0b667_Equal(_62217_t.get()._field_Kind, _61642_k)))) {
						_case_begin_205e483b3:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_205e481d7:;
				};
				(*((*_self_)._field_k)).get()._field_Kind=_61642_k.get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_205e4669c:;
			++it;
			_61813_i++;
			goto _iter_begin_205e4669c;
		}
		_iter_end_205e4669c:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _220bc1264_annotateKind(_220bbc3a3_dynamicTypeAnnotation* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _63743_k) {
	jule::Bool __jule_func_result = false;
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_220bc0e56_annotateAny(&(*_self_), _63743_k)) {
			_case_begin_205e50761:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_220c0d2e5_Prim(_63743_k.ptr()) != nullptr)) {
			_case_begin_205e507c7:;
			{
				__jule_func_result = _220bbe130_annotatePrim(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_220c0e00a_Arr(_63743_k.ptr()) != nullptr)) {
			_case_begin_205e5083d:;
			{
				__jule_func_result = _220bbe43d_annotateArr(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_220c0e26e_Slc(_63743_k.ptr()) != nullptr)) {
			_case_begin_205e508a4:;
			{
				__jule_func_result = _220bbe74b_annotateSlc(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_220c0ec20_Map(_63743_k.ptr()) != nullptr)) {
			_case_begin_205e50b29:;
			{
				__jule_func_result = _220bbee11_annotateMap(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_220c0e4d3_Fn(_63743_k.ptr()) != nullptr)) {
			_case_begin_205e50b90:;
			{
				__jule_func_result = _220bc021e_annotateFn(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_220c0d7bd_Ptr(_63743_k.ptr()) != nullptr)) {
			_case_begin_205e50c06:;
			{
				__jule_func_result = _220bc052c_annotatePtr(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_220c0d559_Sptr(_63743_k.ptr()) != nullptr)) {
			_case_begin_205e50c6c:;
			{
				__jule_func_result = _220bc083a_annotateSptr(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_220c0e747_Struct(_63743_k.ptr()) != nullptr)) {
			_case_begin_205e50ec0:;
			{
				__jule_func_result = _220bc0b48_annotateStruct(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_205e506ea:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_205e50695:;
	};
}



inline jule::Bool _220bc14c8_annotate(_220bbc3a3_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_Kind));
	__jule_func_result = _220bc1264_annotateKind(&(*_self_), (*_self_)._field_a.get()._field_Kind);
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _220bbc3a3_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _220bc22ba_pushErrToken(_220bc1c6a_fnCallArgChecker* _self_, jule::Ptr<_21d81d743_Token> _68231_token, jule::Str _68246_fmt, jule::Slice<jule::Any> _68259_args) {
	_220b6c133_pushErr((*_self_)._field_e.get()._field_s.ptr(), _68231_token,_68246_fmt,_68259_args);
}



inline void _220bc25d9_pushErr(_220bc1c6a_fnCallArgChecker* _self_, jule::Str _68626_fmt, jule::Slice<jule::Any> _68639_args) {
	_220bc22ba_pushErrToken(&(*_self_), (*_self_)._field_errorToken,_68626_fmt,_68639_args);
}



inline jule::Slice<jule::Ptr<_220b31823_ParamIns>> _220bc284d_getParams(_220bc1c6a_fnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_Params.len() > 0LL) && ((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _22001a45a_IsSelf((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*_self_)._field_f.get()._field_Params.slice(1LL);;
	};
	return (*_self_)._field_f.get()._field_Params;;
}



inline jule::Bool _220bc2b5b_checkCounts(_220bc1c6a_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_220b31823_ParamIns>>& _69931_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _70017_n = _69931_params.len();;
	if (((_70017_n > 0LL) && _22001a45a_IsSelf(_69931_params[0LL].get()._field_Decl.ptr()))) {
		(_70017_n)--;
	};
	jule::I64 _70517_diff = (_70017_n - (*_self_)._field_args.len());;
	{
		
		if ((_70517_diff == 0LL)) {
			_case_begin_205e5b97b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70017_n > 0LL) && _69931_params[(_70017_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_205e5ba03:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70517_diff < 0LL) || (_70517_diff > _69931_params.len()))) {
			_case_begin_205e5ba7a:;
			{
				_220bc25d9_pushErr(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_205e5b904:;
	};
	jule::Str _71617_idents = jule::Str();;
	for (; (_70517_diff > 0LL); (_70517_diff)--) {
		{
			_71617_idents+=(jule::Str(", ", 2) + _69931_params[(_70017_n - _70517_diff)].get()._field_Decl.get()._field_Ident);
		}
	_iter_next_205e5d52c:;
	}
	_iter_end_205e5d52c:;;
	(_71617_idents).mut_slice(2LL);;
	_220bc25d9_pushErr(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_71617_idents, &__jule_any_type6)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _220bc30ac_checkArg(_220bc1c6a_fnCallArgChecker* _self_, jule::Ptr<_220b31823_ParamIns>& _72632_p, jule::Ptr<_220bceecb_Data>& _72651_arg, jule::Ptr<_21d81d743_Token>& _72668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*_self_)._field_dynamicAnnotation && _220b3269d_parameterUsesGenerics(_72632_p,(*_self_)._field_f.get()._field_Decl.get()._field_Generics))) {
		__jule_func_result=(!(_72632_p.get()._field_Decl.get()._field_Variadic));
		if (__jule_func_result) {
			_220bbc3a3_dynamicTypeAnnotation _73025_dta = _220bbc3a3_dynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_72632_p, ._field_a=_72651_arg, ._field_errorToken=_72668_errorToken, ._field_ignored=(*_self_)._field_ignored};;
			__jule_func_result=_220bc14c8_annotate(&_73025_dta);
		};
		if ((!(__jule_func_result))) {
			_220bc22ba_pushErrToken(&(*_self_), _72668_errorToken,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_220b76e2e_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, _72632_p.get()._field_Decl.get()._field_Mutable,_72632_p.get()._field_Decl.get()._field_Reference,_72632_p.get()._field_Kind,_72651_arg,_72668_errorToken)) {
		_220b74019_checkAssignType((*_self_)._field_e.get()._field_s, _72632_p.get()._field_Decl.get()._field_Reference,_72632_p.get()._field_Kind,_72651_arg,_72668_errorToken);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _220bc3464_push(_220bc1c6a_fnCallArgChecker* _self_, jule::Ptr<_220b31823_ParamIns>& _75428_p, jule::Ptr<_21eea5ec8_Expr> _75446_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_220c0ae5d_TypeKind> _75517_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _75613_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_220bceecb_Data> _75717_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_75428_p.get()._field_Decl.get()._field_Mutable));
	if (((!((*_self_)._field_dynamicAnnotation)) && (!(_75428_p.get()._field_Decl.get()._field_Variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_75428_p.get()._field_Kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_75717_d=_220bebd50_evalExprKind((*_self_)._field_e, _75446_arg.get()._field_Kind);
	(*_self_)._field_e.get()._field_prefix=_75517_old;
	(*_self_)._field_e.get()._field_immutable=_75613_old_immut;
	if ((_75717_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_220bc30ac_checkArg(&(*_self_), _75428_p,_75717_d,_75446_arg.get()._field_Token);
	(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_75717_d.get()._field_Model);;
	return __jule_func_result;;
}



inline jule::Bool _220bc381b_pushVariadic(_220bc1c6a_fnCallArgChecker* _self_, jule::Ptr<_220b31823_ParamIns>& _77936_p, jule::I64 _77954_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _78117_variadiced = false;;
	jule::Bool _78213_more = ((_77954_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_220b2b950_SliceExprModel> _78317_model = jule::new_ptr<_220b2b950_SliceExprModel>(_220b2b950_SliceExprModel{._field_ElemKind=_77936_p.get()._field_Kind, });;
	jule::Ptr<_220c0ae5d_TypeKind> _78717_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _79213_variadic = _77936_p.get()._field_Kind.get()._field_Variadic;;
	_77936_p.get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		_77936_p.get()._field_Kind.get()._field_Variadic=_79213_variadic;
	});;
	for (; (_77954_i < (*_self_)._field_args.len()); (_77954_i)++) {
		{
			jule::Ptr<_21eea5ec8_Expr> _79921_arg = (*_self_)._field_args[_77954_i];;
			{
				auto &_match_expr{ _79921_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type83) {
					_case_begin_205e6bda9:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(jule::new_ptr<_220c14d9b_Slc>(_220c14d9b_Slc{._field_Elem=_77936_p.get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_205e6c706:;
					{
						(*_self_)._field_e.get()._field_prefix=_77936_p.get()._field_Kind;
					}
				}
				_match_end_205e6c56e:;
			};
			jule::Ptr<_220bceecb_Data> _81221_d = _220bec15d_eval((*_self_)._field_e, _79921_arg);;
			if ((_81221_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_205e6b32b;
			};
			if (_81221_d.get()._field_Kind.get()._field_Variadic) {
				_78117_variadiced=true;
				_77936_p.get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _220bc30ac_checkArg(&(*_self_), _77936_p,_81221_d,_79921_arg.get()._field_Token));
				{
					auto &_match_expr{ _81221_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_205e6e8b2:;
						{
							_78317_model=_81221_d.get()._field_Model.cast_ptr<_220b2b950_SliceExprModel>(&__jule_any_type84);
							_78317_model.get()._field_ElemKind=_77936_p.get()._field_Kind;
						}
					}
					else {
						_case_begin_205e70693:;
						{
							_78317_model=nullptr;
							(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_81221_d.get()._field_Model);;
						}
					}
					_match_end_205e70792:;
				};
				(_77954_i)++;
				goto _iter_end_205e6b32b;
			};
			__jule_func_result=(__jule_func_result && _220bc30ac_checkArg(&(*_self_), _77936_p,_81221_d,_79921_arg.get()._field_Token));
			_78317_model.get()._field_Elems = jule::alloc_for_append(_78317_model.get()._field_Elems,1);_78317_model.get()._field_Elems.__push(_81221_d.get()._field_Model);;
		}
	_iter_next_205e6b32b:;
	}
	_iter_end_205e6b32b:;;
	(*_self_)._field_e.get()._field_prefix=_78717_old;
	if ((_78117_variadiced && _78213_more)) {
		_220bc22ba_pushErrToken(&(*_self_), (*_self_)._field_args[_77954_i].get()._field_Token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_78317_model != nullptr)) {
		(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(jule::Any(_78317_model, &__jule_any_type84));;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _220bc3b29_checkArgs(_220bc1c6a_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_220b31823_ParamIns>>& _85533_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _85613_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I64 _86017_i = 0LL;;
	if (((_85533_params.len() > 0LL) && _22001a45a_IsSelf(_85533_params[0LL].get()._field_Decl.ptr()))) {
		(_86017_i)++;
	};
	_julec_label_iter:;
	while ((_86017_i < _85533_params.len())) {
		{
			jule::Ptr<_220b31823_ParamIns> _86721_p = _85533_params[_86017_i];;
			{
				
				if (_86721_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_205e77469:;
					{
						__jule_func_result=(_220bc381b_pushVariadic(&(*_self_), _86721_p,_86017_i) && __jule_func_result);
						goto _iter_end_205e7529c;
					}
				}
				else if (((*_self_)._field_args.len() <= _86017_i)) {
					_case_begin_205e76c1b:;
					{
						__jule_func_result=false;
						goto _iter_end_205e7529c;
					}
				}
				else {
					_case_begin_205e76875:;
					{
						__jule_func_result=(_220bc3464_push(&(*_self_), _86721_p,(*_self_)._field_args[_86017_i]) && __jule_func_result);
					}
				}
				_match_end_205e7680e:;
			};
			(_86017_i)++;
		}
	_iter_next_205e7529c:;
	}
	_iter_end_205e7529c:;;
	(*_self_)._field_e.get()._field_arg=_85613_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _220bc3db0_checkDynamicTypeAnnotation(_220bc1c6a_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = (*_self_)._field_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_205e78c2e:;
		if (it != expr.end()) {
			jule::Ptr<_220c09731_InsGeneric> _88716_g = *it;
			{
				if ((_88716_g == nullptr)) {
					_220bc25d9_pushErr(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_205e78c2e:;
			++it;
			goto _iter_begin_205e78c2e;
		}
		_iter_end_205e78c2e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _220bc4135_check(_220bc1c6a_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_220b31823_ParamIns>> _89717_params = _220bc284d_getParams(&(*_self_));;
	__jule_func_result=_220bc2b5b_checkCounts(&(*_self_), _89717_params);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_220bc3b29_checkArgs(&(*_self_), _89717_params);
	if ((__jule_func_result && (*_self_)._field_dynamicAnnotation)) {
		__jule_func_result=_220bc3db0_checkDynamicTypeAnnotation(&(*_self_));
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _220bc1c6a_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _220bc4b80_pushErr(_220bc4674_structLitChecker* _self_, jule::Ptr<_21d81d743_Token> _91826_token, jule::Str _91841_fmt, jule::Slice<jule::Any> _91854_args) {
	_220bd2055_pushErr((*_self_)._field_e.ptr(), _91826_token,_91841_fmt,_91854_args);
}



inline void _220bc4e9e_pushSugggestion(_220bc4674_structLitChecker* _self_, jule::Str _92334_fmt, jule::Slice<jule::Any> _92347_args) {
	_220bd2374_pushSugggestion((*_self_)._field_e.ptr(), _92334_fmt,_92347_args);
}



inline void _220bc5367_pushMatch(_220bc4674_structLitChecker* _self_, jule::Ptr<_21eec31e3_FieldIns>& _92733_f, jule::Ptr<_220bceecb_Data>& _92752_d, jule::Ptr<_21d81d743_Token>& _92767_errorToken) {
	;
	if (_220b76e2e_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_92733_f.get()._field_Kind,_92752_d,_92767_errorToken)) {
		_220b74019_checkAssignType((*_self_)._field_e.get()._field_s, false,_92733_f.get()._field_Kind,_92752_d,_92767_errorToken);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_220b2aeb0_StructArgExprModel>(_220b2aeb0_StructArgExprModel{._field_Field=_92733_f, ._field_Expr=_92752_d.get()._field_Model}));;
}



inline void _220bc5686_checkPair(_220bc4674_structLitChecker* _self_, jule::Ptr<_21eeb0796_FieldExprPair>& _94033_pair, jule::Slice<jule::Ptr<_21eea5ec8_Expr>>& _94060_exprs) {
	jule::Ptr<_21eec31e3_FieldIns> _94217_f = _21ee986a2_FindField((*_self_)._field_s.ptr(), _94033_pair.get()._field_Field.get()._field_Kind);;
	if ((_94217_f == nullptr)) {
		_220bc4b80_pushErr(&(*_self_), _94033_pair.get()._field_Field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_94033_pair.get()._field_Field.get()._field_Kind, &__jule_any_type6)}));
		return;;
	};
	if ((!(_220b6c809_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _94217_f.get()._field_Decl.get()._field_Public,_94217_f.get()._field_Decl.get()._field_Token)))) {
		_220bc4b80_pushErr(&(*_self_), _94033_pair.get()._field_Field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_94033_pair.get()._field_Field.get()._field_Kind, &__jule_any_type6)}));
		_220bc4e9e_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _94060_exprs;
		auto it = expr.begin();
		_iter_begin_205e8373e:;
		if (it != expr.end()) {
			jule::Ptr<_21eea5ec8_Expr> _95421_expr = *it;
			{
				{
					auto &_match_expr{ _95421_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_205e84113:;
						{
							jule::Ptr<_21eeb0796_FieldExprPair> _95725_dpair = _95421_expr.get()._field_Kind.cast_ptr<_21eeb0796_FieldExprPair>(&__jule_any_type85);;
							{
								
								if ((_94033_pair == _95725_dpair)) {
									_case_begin_205e85048:;
									{
										goto _iter_end_205e8373e;
									}
								}
								else if ((_94033_pair.get()._field_Field.get()._field_Kind == _95725_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_205e850c0:;
									{
										_220bc4b80_pushErr(&(*_self_), _94033_pair.get()._field_Field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_94033_pair.get()._field_Field.get()._field_Kind, &__jule_any_type6)}));
										goto _iter_end_205e8373e;
									}
								}
								_match_end_205e84e8d:;
							};
						}
					}
					_match_end_205e83de3:;
				};
			}
			_iter_next_205e8373e:;
			++it;
			goto _iter_begin_205e8373e;
		}
		_iter_end_205e8373e:;
	};
	jule::Ptr<_220c0ae5d_TypeKind> _96817_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_96817_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_94217_f.get()._field_Kind;
	jule::Ptr<_220bceecb_Data> _97217_d = _220bebd50_evalExprKind((*_self_)._field_e, _94033_pair.get()._field_Expr.get()._field_Kind);;
	if ((_97217_d == nullptr)) {
		return;;
	};
	_220bc5367_pushMatch(&(*_self_), _94217_f,_97217_d,_94033_pair.get()._field_Field);
}



inline jule::Bool _220bc5994_readyExprs(_220bc4674_structLitChecker* _self_, jule::Slice<jule::Ptr<_21eea5ec8_Expr>>& _97934_exprs) {
	jule::Bool _98017_ok = true;;
	{
		auto &expr = _97934_exprs;
		auto it = expr.begin();
		_iter_begin_205e88953:;
		if (it != expr.end()) {
			jule::I64 _98114_i = it - expr.begin();
			jule::Ptr<_21eea5ec8_Expr> _98121_expr = *it;
			{
				{
					auto &_match_expr{ _98121_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type86) {
						_case_begin_205e89712:;
						{
							jule::Ptr<_21eeb1c3c_KeyValPair> _98425_pair = _98121_expr.get()._field_Kind.cast_ptr<_21eeb1c3c_KeyValPair>(&__jule_any_type86);;
							{
								auto &_match_expr{ _98425_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type87) {
									_case_begin_205e89ed7:;
									{
										goto _match_end_205e8a46b;
									}
								}
								else {
									_case_begin_205e8a6e1:;
									{
										_220bc4b80_pushErr(&(*_self_), _98425_pair.get()._field_Colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_98017_ok=false;
										goto _iter_next_205e88953;
									}
								}
								_match_end_205e8a46b:;
							};
							_97934_exprs[_98114_i].get()._field_Kind=jule::Any(jule::new_ptr<_21eeb0796_FieldExprPair>(_21eeb0796_FieldExprPair{._field_Field=_98425_pair.get()._field_Key.get()._field_Token, ._field_Expr=_98425_pair.get()._field_Val}), &__jule_any_type85);
						}
					}
					_match_end_205e894e2:;
				};
			}
			_iter_next_205e88953:;
			++it;
			_98114_i++;
			goto _iter_begin_205e88953;
		}
		_iter_end_205e88953:;
	};
	return _98017_ok;;
}



inline void _220bc5c19_check(_220bc4674_structLitChecker* _self_, jule::Slice<jule::Ptr<_21eea5ec8_Expr>>& _100329_exprs) {
	if ((_100329_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_220bc5994_readyExprs(&(*_self_), _100329_exprs)))) {
		return;;
	};
	jule::Bool _101017_paired = false;;
	{
		auto &expr = _100329_exprs;
		auto it = expr.begin();
		_iter_begin_205e89437:;
		if (it != expr.end()) {
			jule::I64 _101114_i = it - expr.begin();
			jule::Ptr<_21eea5ec8_Expr> _101121_expr = *it;
			{
				{
					auto &_match_expr{ _101121_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_205e92de1:;
						{
							jule::Ptr<_21eeb0796_FieldExprPair> _101425_pair = _101121_expr.get()._field_Kind.cast_ptr<_21eeb0796_FieldExprPair>(&__jule_any_type85);;
							if (((_101114_i > 0LL) && (!(_101017_paired)))) {
								_220bc4b80_pushErr(&(*_self_), _101425_pair.get()._field_Field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_101017_paired=true;
							_220bc5686_checkPair(&(*_self_), _101425_pair,_100329_exprs);
						}
					}
					else {
						_case_begin_205e8d7c1:;
						{
							if (_101017_paired) {
								_220bc4b80_pushErr(&(*_self_), _101121_expr.get()._field_Token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_101114_i >= (*_self_)._field_s.get()._field_Fields.len())) {
								_220bc4b80_pushErr(&(*_self_), _101121_expr.get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_205e89437;
							};
							jule::Ptr<_21eec31e3_FieldIns> _102925_field = (*_self_)._field_s.get()._field_Fields[_101114_i];;
							if ((!(_220b6c809_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _102925_field.get()._field_Decl.get()._field_Public,_102925_field.get()._field_Decl.get()._field_Token)))) {
								_220bc4b80_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_220bc4e9e_pushSugggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_220c0ae5d_TypeKind> _103725_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_103725_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102925_field.get()._field_Kind;
							jule::Ptr<_220bceecb_Data> _104125_d = _220bebd50_evalExprKind((*_self_)._field_e, _101121_expr.get()._field_Kind);;
							if ((_104125_d == nullptr)) {
								goto _iter_next_205e89437;
							};
							_220bc5367_pushMatch(&(*_self_), _102925_field,_104125_d,_101121_expr.get()._field_Token);
						}
					}
					_match_end_205e8d639:;
				};
			}
			_iter_next_205e89437:;
			++it;
			_101114_i++;
			goto _iter_begin_205e89437;
		}
		_iter_end_205e89437:;
	};
	if ((!(_101017_paired))) {
		jule::I64 _105217_n = (*_self_)._field_s.get()._field_Fields.len();;
		jule::I64 _105321_diff = (_105217_n - _100329_exprs.len());;
		{
			
			if ((_105321_diff <= 0LL)) {
				_case_begin_205e9609d:;
				{
					return;;
				}
			}
			_match_end_205e95e7c:;
		};
		jule::Str _105921_idents = jule::Str();;
		for (; (_105321_diff > 0LL); (_105321_diff)--) {
			{
				_105921_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_Fields[(_105217_n - _105321_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_205e96994:;
		}
		_iter_end_205e96994:;;
		(_105921_idents).mut_slice(2LL);;
		_220bc4b80_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105921_idents, &__jule_any_type6)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _220bc4674_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_220b8746c_Var> _220bc66ed_buildVar(_220bc6258_rangeChecker* _self_, jule::Ptr<_21eeb9272_VarDecl>& _107828_decl) {
	jule::Ptr<_220b8746c_Var> _107917_v = _220b34d87_buildVar(_107828_decl);;
	return _107917_v;;
}



inline void _220bc68c9_setSizeKey(_220bc6258_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _21d820ed7_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyA=_220bc66ed_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_220c1033b_TypeSymbol>(_220c1033b_TypeSymbol{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_205e9a613:;
			{
				(*_self_)._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_220b86438_IterRelation>(_220b86438_IterRelation{._field_Range=(*_self_)._field_d.get()._field_Model.cast_ptr<_220b8746c_Var>(&__jule_any_type9)});
			}
		}
		_match_end_205e9a5ad:;
	};
}



inline void _220bc6c92_checkRangeExprValidity(_220bc6258_rangeChecker* _self_, jule::Ptr<_220bceecb_Data>& _110946_d, jule::Ptr<_220b8746c_Var>& _110957_key, jule::Ptr<_220c0ae5d_TypeKind>& _110973_k) {
	jule::Bool _111017__mut = _110957_key.get()._field_Mutable;;
	if ((_111017__mut && (!(_220c0c5d0_Mutable(_110973_k.ptr()))))) {
		_111017__mut=false;
	};
	_220b76e2e_checkValidityForInitExpr((*_self_)._field_sc.get()._field_s, _111017__mut,_110957_key.get()._field_Reference,_110957_key.get()._field_Kind.get()._field_Kind,_110946_d,(*_self_)._field_rang.get()._field_InToken);
}



inline void _220bc6e6d_checkSlice(_220bc6258_rangeChecker* _self_) {
	_220bc68c9_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _21d820ed7_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_220c14d9b_Slc> _112817_slc = _220c0e26e_Slc((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_220bc66ed_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_220c1033b_TypeSymbol>(_220c1033b_TypeSymbol{._field_Kind=_112817_slc.get()._field_Elem});
	_220bc6c92_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_112817_slc.get()._field_Elem);
}



inline void _220bc7149_checkArray(_220bc6258_rangeChecker* _self_) {
	_220bc68c9_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _21d820ed7_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_220c17046_Arr> _114117_arr = _220c0e00a_Arr((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_220bc66ed_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_220c1033b_TypeSymbol>(_220c1033b_TypeSymbol{._field_Kind=_114117_arr.get()._field_Elem});
	_220bc6c92_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_114117_arr.get()._field_Elem);
}



inline void _220bc7325_checkMapKeyA(_220bc6258_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _21d820ed7_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_220c16452_Map> _115317_m = _220c0ec20_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyA=_220bc66ed_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_220c1033b_TypeSymbol>(_220c1033b_TypeSymbol{._field_Kind=_115317_m.get()._field_Key});
	jule::Ptr<_220bceecb_Data> _115717_d = jule::new_ptr<_220bceecb_Data>((*((*_self_)._field_d)));;
	_115717_d.get()._field_Kind=_115317_m.get()._field_Key;
	_220bc6c92_checkRangeExprValidity(&(*_self_), _115717_d,(*_self_)._field_Kind.get()._field_KeyA,_115317_m.get()._field_Key);
}



inline void _220bc7501_checkMapKeyB(_220bc6258_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _21d820ed7_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_220c16452_Map> _116817_m = _220c0ec20_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_220bc66ed_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_220c1033b_TypeSymbol>(_220c1033b_TypeSymbol{._field_Kind=_116817_m.get()._field_Val});
	jule::Ptr<_220bceecb_Data> _117217_d = jule::new_ptr<_220bceecb_Data>((*((*_self_)._field_d)));;
	_117217_d.get()._field_Kind=_116817_m.get()._field_Val;
	_220bc6c92_checkRangeExprValidity(&(*_self_), _117217_d,(*_self_)._field_Kind.get()._field_KeyB,_116817_m.get()._field_Val);
}



inline void _220bc76cc_checkMap(_220bc6258_rangeChecker* _self_) {
	_220bc7325_checkMapKeyA(&(*_self_));
	_220bc7501_checkMapKeyB(&(*_self_));
}



inline void _220bc78a8_checkStr(_220bc6258_rangeChecker* _self_) {
	_220bc68c9_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _21d820ed7_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyB=_220bc66ed_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_220c1033b_TypeSymbol>(_220c1033b_TypeSymbol{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _220bc7b1c_check(_220bc6258_rangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_205eadbcb:;
		}
		else if ((_220c0e26e_Slc((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205ead5c1:;
			{
				_220bc6e6d_checkSlice(&(*_self_));
				return true;;
			}
		}
		else if ((_220c0e00a_Arr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205ead637:;
			{
				_220bc7149_checkArray(&(*_self_));
				return true;;
			}
		}
		else if ((_220c0ec20_Map((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205ead69d:;
			{
				_220bc76cc_checkMap(&(*_self_));
				return true;;
			}
		}
		else {
			_case_begin_205ead55a:;
			{
				jule::Ptr<_220c10baa_Prim> _121017_prim = _220c0d2e5_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (((_121017_prim != nullptr) && _220c13dde_IsStr(_121017_prim.ptr()))) {
					_220bc78a8_checkStr(&(*_self_));
					return true;;
				};
			}
		}
		_match_end_205ead48e:;
	};
	_220b6c133_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_InToken,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _220bc6258_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _220bc8788_prepareTypes(_220bc82e3_retTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_220b32093_Types((*_self_)._field_f.ptr());
	};
}



inline void _220bc8a0d_prepareExprs(_220bc82e3_retTypeChecker* _self_, jule::Ptr<_21eea5ec8_Expr>& _123836_e) {
	if ((_123836_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123836_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_205eb3e12:;
			{
				(*_self_)._field_exprs=_123836_e.get()._field_Kind.cast_ptr<_21eea6b55_TupleExpr>(&__jule_any_type88).get()._field_Expr;
			}
		}
		else {
			_case_begin_205eb4110:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123836_e);;
			}
		}
		_match_end_205eb3c58:;
	};
}



inline void _220bc8bd9_checkExprs(_220bc82e3_retTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_220bceecb_Data>> _125417_datas = jule::Slice<jule::Ptr<_220bceecb_Data>>::alloc(0LL, (*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_205eb6057:;
		if (it != expr.end()) {
			jule::I64 _125514_i = it - expr.begin();
			jule::Ptr<_21eea5ec8_Expr> _125521_expr = *it;
			{
				if ((_125514_i >= (*_self_)._field_types.len())) {
					goto _iter_end_205eb6057;
				};
				jule::Ptr<_220c0ae5d_TypeKind> _126021_t = (*_self_)._field_types[_125514_i];;
				jule::Ptr<_220bceecb_Data> _126221_d = _220bec46b_evalExpr(_220b73711_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_220c2bc3c_Lookup>((*_self_)._field_sc, 0),_126021_t), _125521_expr);;
				if ((_126221_d == nullptr)) {
					goto _iter_next_205eb6057;
				};
				_125417_datas = jule::alloc_for_append(_125417_datas,1);_125417_datas.__push(_126221_d);;
				if (((!(_126221_d.get()._field_Mutable)) && _220c0c5d0_Mutable(_126221_d.get()._field_Kind.ptr()))) {
					_220b6c133_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_220bba8bd_assignTypeChecker _127421_ac = _220bba8bd_assignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_126021_t, ._field_d=_126221_d, ._field_errorToken=(*_self_)._field_errorToken};;
				_220bbba45_check(&_127421_ac);
			}
			_iter_next_205eb6057:;
			++it;
			_125514_i++;
			goto _iter_begin_205eb6057;
		}
		_iter_end_205eb6057:;
	};
	if ((_125417_datas.len() > 1LL)) {
		(*_self_)._field_model=jule::Any(jule::new_ptr<_220b2d48a_TupleExprModel>(_220b2d48a_TupleExprModel{._field_Datas=_125417_datas}), &__jule_any_type89);
	} else if ((_125417_datas.len() == 1LL)) {
		(*_self_)._field_model=_125417_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _220bc8ee7_check(_220bc82e3_retTypeChecker* _self_, jule::Ptr<_21eea5ec8_Expr>& _129329_e) {
	_220bc8788_prepareTypes(&(*_self_));
	_220bc8a0d_prepareExprs(&(*_self_), _129329_e);
	jule::I64 _129713_n = (*_self_)._field_exprs.len();;
	if (((_129713_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_220012166_AnyVar((*_self_)._field_f.get()._field_Decl.ptr())))) {
			_220b6c133_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_129713_n > 0LL) && ((*_self_)._field_f != nullptr)) && _22001c270_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		_220b6c133_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;;
	};
	if ((_129713_n > (*_self_)._field_types.len())) {
		_220b6c133_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_129713_n < (*_self_)._field_types.len())) {
		_220b6c133_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_220bc8bd9_checkExprs(&(*_self_));
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _220bc82e3_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_220b61325_ImportInfo> _220bca6be_FindPackage(_220bca1a2_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_205ec21d9:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;;
				};
			}
			_iter_next_205ec21d9:;
			++it;
			goto _iter_begin_205ec21d9;
		}
		_iter_end_205ec21d9:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b61325_ImportInfo> _220bca9cc_SelectPackage(_220bca1a2_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_205ec3383:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;;
				};
			}
			_iter_next_205ec3383:;
			++it;
			goto _iter_begin_205ec3383;
		}
		_iter_end_205ec3383:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b8746c_Var> _220bcad84_FindVar(_220bca1a2_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _220bcc946_findVar(&(*_self_), _5226_ident,_5238_cppLinked,false);;
}



inline jule::Ptr<_220c0a26a_TypeAlias> _220bcb23b_FindTypeAlias(_220bca1a2_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _220bccd97_findTypeAlias(&(*_self_), _5832_ident,_5844_cppLinked,false);;
}



inline jule::Ptr<_21eec3006_Struct> _220bcb5e3_FindStruct(_220bca1a2_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_205ec59e5:;
		if (it != expr.end()) {
			jule::Ptr<_21eec3006_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;;
				};
			}
			_iter_next_205ec59e5:;
			++it;
			goto _iter_begin_205ec59e5;
		}
		_iter_end_205ec59e5:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b31636_Fn> _220bcb99a_FindFn(_220bca1a2_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_205ec6e25:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;;
				};
			}
			_iter_next_205ec6e25:;
			++it;
			goto _iter_begin_205ec6e25;
		}
		_iter_end_205ec6e25:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b376b4_Trait> _220bcbca8_FindTrait(_220bca1a2_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_205ec8157:;
		if (it != expr.end()) {
			jule::Ptr<_220b376b4_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;;
				};
			}
			_iter_next_205ec8157:;
			++it;
			goto _iter_begin_205ec8157;
		}
		_iter_end_205ec8157:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b38374_Enum> _220bcc0b6_FindEnum(_220bca1a2_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_205ec85ca:;
		if (it != expr.end()) {
			jule::Ptr<_220b38374_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_205ec85ca:;
			++it;
			goto _iter_begin_205ec85ca;
		}
		_iter_end_205ec85ca:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b38ae4_TypeEnum> _220bcc3c4_FindTypeEnum(_220bca1a2_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_205ec94ee:;
		if (it != expr.end()) {
			jule::Ptr<_220b38ae4_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;;
				};
			}
			_iter_next_205ec94ee:;
			++it;
			goto _iter_begin_205ec94ee;
		}
		_iter_end_205ec94ee:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b8746c_Var> _220bcc946_findVar(_220bca1a2_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*_self_)._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_220b8746c_Var> _12325_v = (*_self_)._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;;
				};
			}
		_iter_next_205ecbe2a:;
		}
		_iter_end_205ecbe2a:;;
	} else {
		{
			auto &expr = (*_self_)._field_Vars;
			auto it = expr.begin();
			_iter_begin_205ecb4ce:;
			if (it != expr.end()) {
				jule::Ptr<_220b8746c_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;;
					};
				}
				_iter_next_205ecb4ce:;
				++it;
				goto _iter_begin_205ecb4ce;
			}
			_iter_end_205ecb4ce:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_220c0a26a_TypeAlias> _220bccd97_findTypeAlias(_220bca1a2_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*_self_)._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_220c0a26a_TypeAlias> _14225_ta = (*_self_)._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;;
				};
			}
		_iter_next_205ed00c6:;
		}
		_iter_end_205ed00c6:;;
	} else {
		{
			auto &expr = (*_self_)._field_TypeAliases;
			auto it = expr.begin();
			_iter_begin_205ece67a:;
			if (it != expr.end()) {
				jule::Ptr<_220c0a26a_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;;
					};
				}
				_iter_next_205ece67a:;
				++it;
				goto _iter_begin_205ece67a;
			}
			_iter_end_205ece67a:;
		};
	};
	return nullptr;;
}



inline jule::Any _220bcd24e_defByIdent(_220bca1a2_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_205ed23c5:;
		if (it != expr.end()) {
			jule::Ptr<_220b8746c_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v, &__jule_any_type9);;
				};
			}
			_iter_next_205ed23c5:;
			++it;
			goto _iter_begin_205ed23c5;
		}
		_iter_end_205ed23c5:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_205ed2d76:;
		if (it != expr.end()) {
			jule::Ptr<_220c0a26a_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta, &__jule_any_type68);;
				};
			}
			_iter_next_205ed2d76:;
			++it;
			goto _iter_begin_205ed2d76;
		}
		_iter_end_205ed2d76:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_205ed3618:;
		if (it != expr.end()) {
			jule::Ptr<_21eec3006_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s, &__jule_any_type67);;
				};
			}
			_iter_next_205ed3618:;
			++it;
			goto _iter_begin_205ed3618;
		}
		_iter_end_205ed3618:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_205ed48e4:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f, &__jule_any_type66);;
				};
			}
			_iter_next_205ed48e4:;
			++it;
			goto _iter_begin_205ed48e4;
		}
		_iter_end_205ed48e4:;
	};
	if (_15941_cppLinked) {
		return nullptr;;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_205ed5ac1:;
		if (it != expr.end()) {
			jule::Ptr<_220b376b4_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t, &__jule_any_type11);;
				};
			}
			_iter_next_205ed5ac1:;
			++it;
			goto _iter_begin_205ed5ac1;
		}
		_iter_end_205ed5ac1:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_205ed68b3:;
		if (it != expr.end()) {
			jule::Ptr<_220b38374_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e, &__jule_any_type69);;
				};
			}
			_iter_next_205ed68b3:;
			++it;
			goto _iter_begin_205ed68b3;
		}
		_iter_end_205ed68b3:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_205ed762d:;
		if (it != expr.end()) {
			jule::Ptr<_220b38ae4_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te, &__jule_any_type70);;
				};
			}
			_iter_next_205ed762d:;
			++it;
			goto _iter_begin_205ed762d;
		}
		_iter_end_205ed762d:;
	};
	return nullptr;;
}



inline jule::Bool _220bcd6a0_isDuplicatedIdent(_220bca1a2_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_205ed83dc:;
		if (it != expr.end()) {
			jule::Ptr<_220b8746c_Var> &_21316_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21316_v) != _21232_itself) && (_21316_v.get()._field_Ident == _21249_ident)) && (_21316_v.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_205ed83dc:;
			++it;
			goto _iter_begin_205ed83dc;
		}
		_iter_end_205ed83dc:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_205ed9795:;
		if (it != expr.end()) {
			jule::Ptr<_220c0a26a_TypeAlias> &_21916_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21916_ta) != _21232_itself) && (_21916_ta.get()._field_Ident == _21249_ident)) && (_21916_ta.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_205ed9795:;
			++it;
			goto _iter_begin_205ed9795;
		}
		_iter_end_205ed9795:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_205ed93dd:;
		if (it != expr.end()) {
			jule::Ptr<_21eec3006_Struct> &_22516_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22516_s) != _21232_itself) && (_22516_s.get()._field_Ident == _21249_ident)) && (_22516_s.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_205ed93dd:;
			++it;
			goto _iter_begin_205ed93dd;
		}
		_iter_end_205ed93dd:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_205edb9d9:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> &_23116_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23116_f) != _21232_itself) && (_23116_f.get()._field_Ident == _21249_ident)) && (_23116_f.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_205edb9d9:;
			++it;
			goto _iter_begin_205edb9d9;
		}
		_iter_end_205edb9d9:;
	};
	if (_21261_cppLinked) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_205edd04b:;
		if (it != expr.end()) {
			jule::Ptr<_220b376b4_Trait> &_24116_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24116_t) != _21232_itself) && (_24116_t.get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_205edd04b:;
			++it;
			goto _iter_begin_205edd04b;
		}
		_iter_end_205edd04b:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_205edd4be:;
		if (it != expr.end()) {
			jule::Ptr<_220b38374_Enum> &_24716_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24716_e) != _21232_itself) && (_24716_e.get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_205edd4be:;
			++it;
			goto _iter_begin_205edd4be;
		}
		_iter_end_205edd4be:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_205ede855:;
		if (it != expr.end()) {
			jule::Ptr<_220b38ae4_TypeEnum> &_25316_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25316_te) != _21232_itself) && (_25316_te.get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_205ede855:;
			++it;
			goto _iter_begin_205ede855;
		}
		_iter_end_205ede855:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _220bca1a2_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _220bd03b6_IsNil(_220bceecb_Data* _self_) {
	return _220c0bd93_IsNil((*_self_)._field_Kind.ptr());;
}



inline jule::Bool _220bd062a_IsVoid(_220bceecb_Data* _self_) {
	return _220c0c107_Void((*_self_)._field_Kind.ptr());;
}



inline jule::Bool _220bd088e_IsConst(_220bceecb_Data* _self_) {
	return ((*_self_)._field_Constant != nullptr);;
}



inline jule::Bool _220bd0b9c_GoodOperand(_220bceecb_Data* _self_, jule::Ptr<_220bceecb_Data>& _10031_other) {
	if ((_220c0dc96_TypeEnum(_10031_other.get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_220c0d2e5_Prim(_10031_other.get()._field_Kind.ptr()) == nullptr) || (!(_220c14153_IsAny(_220c0d2e5_Prim(_10031_other.get()._field_Kind.ptr()).ptr())))) && (_220c0e9ab_Trait(_10031_other.get()._field_Kind.ptr()) == nullptr)) && (!(_220c0bd93_IsNil((*_self_)._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _220bceecb_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220bd1054_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _220bd2055_pushErr(_220bd1a49_Eval* _self_, jule::Ptr<_21d81d743_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_220b6c133_pushErr((*_self_)._field_s.ptr(), _13126_token,_13141_fmt,_13154_args);
}



inline void _220bd2374_pushSugggestion(_220bd1a49_Eval* _self_, jule::Str _13634_fmt, jule::Slice<jule::Any> _13647_args) {
	_220b6c452_pushSugggestion((*_self_)._field_s.ptr(), _13634_fmt,_13647_args);
}



inline void _220bd2550_allowBuiltin(_220bd1a49_Eval* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _220bd272b_disallowBuiltin(_220bd1a49_Eval* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Bool _220bd2990_isUnsafe(_220bd1a49_Eval* _self_) {
	return (*_self_)._field_unsafety;;
}



inline jule::Bool _220bd2c04_isGlobal(_220bd1a49_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_220b69471_Sema>>()) {
			_case_begin_20601e09e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_20601e5cc:;
			{
				return false;;
			}
		}
		_match_end_20601e577:;
	};
}



inline jule::Bool _220bd2ece_applyNumericPrefix(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data>& _16342_d) {
	if (((((_16342_d == nullptr) || (!(_220bd088e_IsConst(_16342_d.ptr())))) || (_220c0d2e5_Prim(_16342_d.get()._field_Kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_220c10baa_Prim> _17013_prim = _220c0d2e5_Prim((*_self_)._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_220b271cb_IsFloat(_220c1101d_Str(_17013_prim.ptr()))) {
			_case_begin_206021e81:;
			{
				_16342_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>((*((*_self_)._field_prefix)));
				_220b288e7_SetF64(_16342_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_220b282dc_AsF64(_16342_d.get()._field_Constant.ptr())));
			}
		}
		else if (_220b26d35_IsSigInt(_220c1101d_Str(_17013_prim.ptr()))) {
			_case_begin_206021ee7:;
			{
				if ((!(_220bb78dc_sigAssignable(_220c1101d_Str(_17013_prim.ptr()),_16342_d)))) {
					return false;;
				};
				_16342_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>((*((*_self_)._field_prefix)));
				_220b2841e_SetI64(_16342_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_220b28078_AsI64(_16342_d.get()._field_Constant.ptr())));
			}
		}
		else if (_220b26e67_IsUnsigInt(_220c1101d_Str(_17013_prim.ptr()))) {
			_case_begin_20602205d:;
			{
				if ((!(_220bb7a1e_unsigAssignable(_220c1101d_Str(_17013_prim.ptr()),_16342_d)))) {
					return false;;
				};
				_16342_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>((*((*_self_)._field_prefix)));
				_220b28551_SetU64(_16342_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_220b281aa_AsU64(_16342_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_206021c83:;
	};
	return true;;
}



inline jule::Ptr<_220bceecb_Data> _220bd3243_litNil(_220bd1a49_Eval* _self_) {
	jule::Ptr<_220074816_Const> _19917_constant = static__220b27572_NewNil();;
	return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=jule::Any(_19917_constant, &__jule_any_type48), ._field_Constant=_19917_constant});;
}



inline jule::Ptr<_220bceecb_Data> _220bd3551_litStr(_220bd1a49_Eval* _self_, jule::Ptr<_21eea700c_LitExpr>& _20822_l) {
	jule::Str _20917_s = _20822_l.get()._field_Value.slice(1LL,(_20822_l.get()._field_Value.len() - 1LL));;
	if (_21d81ea96_IsRawStr(_20822_l.get()._field_Value)) {
		_20917_s=_220bb7b73_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20917_s));
	} else {
		_20917_s=_220bb7e70_ToStr(static_cast<jule::Slice<jule::U8>>(_20917_s));
	};
	jule::Ptr<_220074816_Const> _21517_constant = static__2200dc263_NewStr(_20917_s);;
	return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_21517_constant, &__jule_any_type48), ._field_Constant=_21517_constant});;
}



inline jule::Ptr<_220bceecb_Data> _220bd385e_litBool(_220bd1a49_Eval* _self_, jule::Ptr<_21eea700c_LitExpr>& _22723_l) {
	jule::Ptr<_220074816_Const> _22817_constant = static__2200d5e93_NewBool((_22723_l.get()._field_Value == jule::Str("true", 4)));;
	return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_22817_constant, &__jule_any_type48), ._field_Constant=_22817_constant});;
}



inline jule::Ptr<_220bceecb_Data> _220bd3b6c_litRune(_220bd1a49_Eval* _self_, jule::Ptr<_21eea700c_LitExpr>& _23923_l) {
	;
	;
	jule::Str _24413_lt = _23923_l.get()._field_Value.slice(1LL,(_23923_l.get()._field_Value.len() - 1LL));;
	jule::I32 _24513_r = _220ba0b39_ToRune(static_cast<jule::Slice<jule::U8>>(_24413_lt));;
	jule::Ptr<_220bceecb_Data> _24617_data = jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Constant=static__2200b58ac_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24513_r)))});;
	jule::Bool _25013_isAscii = _220ba09b3_IsAscii(_24513_r);;
	if (_25013_isAscii) {
		_24617_data.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_24617_data.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_24617_data.get()._field_Mutable=true;
	_24617_data.get()._field_Model=jule::Any(jule::new_ptr<_220b307cd_RuneExprModel>(_220b307cd_RuneExprModel{._field_Code=_24513_r}), &__jule_any_type90);
	_24617_data.get()._field_IsRune=true;
	_24617_data.get()._field_untyped=true;
	return _24617_data;;
}



inline jule::Ptr<_220bceecb_Data> _220bd3e7a_litFloat(_220bd1a49_Eval* _self_, jule::Ptr<_21eea700c_LitExpr>& _26824_l) {
	;
	jule::F64 _27013_f = ({
		auto except = _220b20636_ParseFloat(_26824_l.get()._field_Value,64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_220074816_Const> _27117_constant = static__2200dc395_NewF64(_27013_f);;
	return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_untyped=true, ._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_27117_constant, &__jule_any_type48), ._field_Constant=_27117_constant});;
}



inline jule::Ptr<_220bceecb_Data> _220bd4288_litInt(_220bd1a49_Eval* _self_, jule::Ptr<_21eea700c_LitExpr>& _28326_l) {
	;
	jule::Str _28617_lit = _28326_l.get()._field_Value;;
	jule::I64 _28717_base = 0LL;;
	{
		
		if (_21d440134_HasPrefix(_28617_lit,jule::Str("0x", 2))) {
			_case_begin_206032e1a:;
			{
				(_28617_lit).mut_slice(2LL);;
				_28717_base=16LLU;
			}
		}
		else if (_21d440134_HasPrefix(_28617_lit,jule::Str("0b", 2))) {
			_case_begin_206032e81:;
			{
				(_28617_lit).mut_slice(2LL);;
				_28717_base=2LLU;
			}
		}
		else if (_21d440134_HasPrefix(_28617_lit,jule::Str("0o", 2))) {
			_case_begin_206032b2e:;
			{
				(_28617_lit).mut_slice(2LL);;
				_28717_base=8LLU;
			}
		}
		else if (((_28617_lit[0LL] == '0') && (_28617_lit.len() > 1LL))) {
			_case_begin_206032b95:;
			{
				(_28617_lit).mut_slice(1LL);;
				_28717_base=8LLU;
			}
		}
		else {
			_case_begin_206032ab8:;
			{
				_28717_base=10LLU;
			}
		}
		_match_end_206032a52:;
	};
	jule::Ptr<_220bceecb_Data> _30717_d = jule::new_ptr<_220bceecb_Data>();;
	jule::Bool _30917_ok = true;;
	jule::I64 _31013_sig = ({
		auto except = _22055d052_ParseInt(_28617_lit,_28717_base,64LL);
		(except.ok()) ? (except.result) : ({
			_30917_ok=false;

			0LL;
		});
	});;
	if (_30917_ok) {
		_30717_d.get()._field_Constant=static__2200b58ac_NewI64(_31013_sig);
		_30717_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _32017_unsig = ({
			auto except = _220702515_ParseUint(_28617_lit,_28717_base,64LL);
			(except.ok()) ? (except.result) : ({
				_220bd2055_pushErr(&(*_self_), _28326_l.get()._field_Token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_220bd2374_pushSugggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_30717_d.get()._field_Constant=static__22009b8c6_NewU64(_32017_unsig);
		_30717_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_30717_d.get()._field_Model=jule::Any(_30717_d.get()._field_Constant, &__jule_any_type48);
	if ((!(_220bd2ece_applyNumericPrefix(&(*_self_), _30717_d)))) {
		_220c05ba0_fitBitsize(_30717_d);
	};
	_30717_d.get()._field_Mutable=true;
	_30717_d.get()._field_untyped=true;
	return _30717_d;;
}



inline jule::Ptr<_220bceecb_Data> _220bd4596_litNum(_220bd1a49_Eval* _self_, jule::Ptr<_21eea700c_LitExpr>& _34326_l) {
	{
		
		if (_21d820701_IsFloat(_34326_l.get()._field_Value)) {
			_case_begin_20603b011:;
			{
				return _220bd3e7a_litFloat(&(*_self_), _34326_l);;
			}
		}
		else {
			_case_begin_20603a818:;
			{
				return _220bd4288_litInt(&(*_self_), _34326_l);;
			}
		}
		_match_end_20603a74c:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220bd48a4_evalLit(_220bd1a49_Eval* _self_, jule::Ptr<_21eea700c_LitExpr> _35226_lit) {
	{
		
		if (_21eea735e_IsNil(_35226_lit.ptr())) {
			_case_begin_20603c155:;
			{
				return _220bd3243_litNil(&(*_self_));;
			}
		}
		else if (_21d81e7ee_IsStr(_35226_lit.get()._field_Value)) {
			_case_begin_20603ba5b:;
			{
				return _220bd3551_litStr(&(*_self_), _35226_lit);;
			}
		}
		else if (_21d820459_IsBool(_35226_lit.get()._field_Value)) {
			_case_begin_20603bad3:;
			{
				return _220bd385e_litBool(&(*_self_), _35226_lit);;
			}
		}
		else if (_21d81ed3d_IsRune(_35226_lit.get()._field_Value)) {
			_case_begin_20603bb5a:;
			{
				return _220bd3b6c_litRune(&(*_self_), _35226_lit);;
			}
		}
		else if (_21d820998_IsNum(_35226_lit.get()._field_Value)) {
			_case_begin_20603bd8b:;
			{
				return _220bd4596_litNum(&(*_self_), _35226_lit);;
			}
		}
		else {
			_case_begin_20603b594:;
			{
				return nullptr;;
			}
		}
		_match_end_20603b4c8:;
	};
}



inline jule::Any _220bd4bb2_findBuiltins(_220bd1a49_Eval* _self_, jule::Str _36931_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_220b61325_ImportInfo>>()) {
			_case_begin_20603e047:;
			{
				jule::Any _37221_def = _220c05991_findBuiltinsImport(_36931_ident,(*_self_)._field_lookup.operator jule::Ptr<_220b61325_ImportInfo>());;
				if ((_37221_def != nullptr)) {
					return _37221_def;;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220b69471_Sema>>()) {
			_case_begin_20603e498:;
			{
				jule::Any _37721_def = _220c0662e_findBuiltinsSema(_36931_ident,(*_self_)._field_lookup.operator jule::Ptr<_220b69471_Sema>());;
				if ((_37721_def != nullptr)) {
					return _37721_def;;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220b49682_scopeChecker>>()) {
			_case_begin_20603e50e:;
			{
				jule::Any _38221_def = _220c0662e_findBuiltinsSema(_36931_ident,(*_self_)._field_lookup.operator jule::Ptr<_220b49682_scopeChecker>().get()._field_s);;
				if ((_38221_def != nullptr)) {
					return _38221_def;;
				};
			}
		}
		_match_end_20603dee2:;
	};
	if ((*_self_)._field_disBuiltin) {
		return nullptr;;
	};
	return _220c40811_findBuiltinDef(_36931_ident);;
}



inline jule::Any _220bd5069_getDef(_220bd1a49_Eval* _self_, jule::Str _39325_ident, jule::Bool _39337_cppLinked) {
	jule::Ptr<_220b8746c_Var> _39817_v = _220c2bc3c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._220c2a5a9_FindVar((*_self_)._field_lookup, _39325_ident,_39337_cppLinked);;
	if ((_39817_v != nullptr)) {
		return jule::Any(_39817_v, &__jule_any_type9);;
	};
	jule::Ptr<_220c0a26a_TypeAlias> _40317_ta = _220c2bc3c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._220c2a961_FindTypeAlias((*_self_)._field_lookup, _39325_ident,_39337_cppLinked);;
	if ((_40317_ta != nullptr)) {
		return jule::Any(_40317_ta, &__jule_any_type68);;
	};
	if ((!(_39337_cppLinked))) {
		jule::Ptr<_220b38374_Enum> _40921_enm = _220c2bc3c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._220c2b7db_FindEnum((*_self_)._field_lookup, _39325_ident);;
		if ((_40921_enm != nullptr)) {
			return jule::Any(_40921_enm, &__jule_any_type69);;
		};
		jule::Ptr<_220b38ae4_TypeEnum> _41421_tenm = _220c2bc3c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._220c2bae9_FindTypeEnum((*_self_)._field_lookup, _39325_ident);;
		if ((_41421_tenm != nullptr)) {
			return jule::Any(_41421_tenm, &__jule_any_type70);;
		};
	};
	jule::Ptr<_220b31636_Fn> _42017_f = _220c2bc3c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._220c2b1c0_FindFn((*_self_)._field_lookup, _39325_ident,_39337_cppLinked);;
	if ((_42017_f != nullptr)) {
		return jule::Any(_42017_f, &__jule_any_type66);;
	};
	jule::Ptr<_21eec3006_Struct> _42517_s = _220c2bc3c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._220c2ad18_FindStruct((*_self_)._field_lookup, _39325_ident,_39337_cppLinked);;
	if ((_42517_s != nullptr)) {
		return jule::Any(_42517_s, &__jule_any_type67);;
	};
	return _220bd4bb2_findBuiltins(&(*_self_), _39325_ident);;
}



inline void _206055aca_pushReference(_220bd1a49_Eval* _self_, jule::Ptr<_220b31a10_FnIns>& _43340_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_220b49682_scopeChecker>>()) {
			_case_begin_20605a41a:;
			{
				jule::Ptr<_220b49682_scopeChecker> _43621_sc = _220b4ca3c_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_220b49682_scopeChecker>());;
				if ((!(_206058319_Exist(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), _43340_ref)))) {
					_220b3303e_Push(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_206056ee9:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_206058319_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43340_ref))))) {
					_220b3303e_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type8));
				};
			}
		}
		_match_end_206056e94:;
	};
}

inline void _206069acd_pushReference(_220bd1a49_Eval* _self_, jule::Ptr<_220b8746c_Var>& _43340_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_220b49682_scopeChecker>>()) {
			_case_begin_20606e231:;
			{
				jule::Ptr<_220b49682_scopeChecker> _43621_sc = _220b4ca3c_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_220b49682_scopeChecker>());;
				if ((!(_20606c2c8_Exist(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), _43340_ref)))) {
					_220b3303e_Push(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_20606aea8:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_20606c2c8_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43340_ref))))) {
					_220b3303e_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type9));
				};
			}
		}
		_match_end_20606ae53:;
	};
}

inline void _206111acb_pushReference(_220bd1a49_Eval* _self_, jule::Ptr<_21eec33d0_StructIns>& _43340_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_220b49682_scopeChecker>>()) {
			_case_begin_206112c64:;
			{
				jule::Ptr<_220b49682_scopeChecker> _43621_sc = _220b4ca3c_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_220b49682_scopeChecker>());;
				if ((!(_20611431a_Exist(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), _43340_ref)))) {
					_220b3303e_Push(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type10));
				};
			}
		}
		else {
			_case_begin_206112eea:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_20611431a_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43340_ref))))) {
					_220b3303e_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type10));
				};
			}
		}
		_match_end_206112e95:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220bd55ec__evalEnum(_220bd1a49_Eval* _self_, jule::Ptr<_220b38374_Enum> _44728_enm) {
	return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_44728_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_220bceecb_Data> _220bd59a4_evalEnum(_220bd1a49_Eval* _self_, jule::Ptr<_220b38374_Enum> _45631_enm, jule::Ptr<_21d81d743_Token> _45643_errorToken) {
	if ((!(_220b6c809_isAccessibleDefine((*_self_)._field_s.ptr(), _45631_enm.get()._field_Public,_45631_enm.get()._field_Token)))) {
		_220bd2055_pushErr(&(*_self_), _45643_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_45631_enm.get()._field_Ident, &__jule_any_type6)}));
		_220bd2374_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _220bd55ec__evalEnum(&(*_self_), _45631_enm);;
}



inline jule::Ptr<_220bceecb_Data> _220bd5cb2__evalTypeEnum(_220bd1a49_Eval* _self_, jule::Ptr<_220b38ae4_TypeEnum> _46532_enm) {
	return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_46532_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_220bceecb_Data> _220bd6169_evalTypeEnum(_220bd1a49_Eval* _self_, jule::Ptr<_220b38ae4_TypeEnum> _47435_enm, jule::Ptr<_21d81d743_Token> _47451_errorToken) {
	if ((!(_220b6c809_isAccessibleDefine((*_self_)._field_s.ptr(), _47435_enm.get()._field_Public,_47435_enm.get()._field_Token)))) {
		_220bd2055_pushErr(&(*_self_), _47451_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_47435_enm.get()._field_Ident, &__jule_any_type6)}));
		_220bd2374_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _220bd5cb2__evalTypeEnum(&(*_self_), _47435_enm);;
}



inline jule::Ptr<_220bceecb_Data> _220bd6477__evalStruct(_220bd1a49_Eval* _self_, jule::Ptr<_21eec33d0_StructIns> _48330_s) {
	jule::Ptr<_220bceecb_Data> _48417_d = jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_48330_s, 0)}), ._field_Model=jule::Any(_48330_s, &__jule_any_type10), ._field_Decl=true, });;
	if (((_48330_s.get()._field_Decl != nullptr) && _48330_s.get()._field_Decl.get()._field_CppLinked)) {
		_48417_d.get()._field_Kind.get()._field_CppIdent=_48330_s.get()._field_Decl.get()._field_Ident;
	};
	return _48417_d;;
}



inline jule::Ptr<_220bceecb_Data> _220bd682e_evalStruct(_220bd1a49_Eval* _self_, jule::Ptr<_21eec33d0_StructIns> _49733_s, jule::Ptr<_21d81d743_Token> _49748_errorToken) {
	if ((!(_220b6c809_isAccessibleDefine((*_self_)._field_s.ptr(), _49733_s.get()._field_Decl.get()._field_Public,_49733_s.get()._field_Decl.get()._field_Token)))) {
		_220bd2055_pushErr(&(*_self_), _49748_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_49733_s.get()._field_Decl.get()._field_Ident, &__jule_any_type6)}));
		_220bd2374_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_220bd6e5b_checkDeprecated(&(*_self_), _49733_s.get()._field_Decl.get()._field_Directives,_49748_errorToken);
	return _220bd6477__evalStruct(&(*_self_), _49733_s);;
}



inline jule::Ptr<_220bceecb_Data> _220bd6b3c_evalFnIns(_220bd1a49_Eval* _self_, jule::Ptr<_220b31a10_FnIns> _50728_f) {
	return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_50728_f, 1)}), ._field_Model=jule::Any(_50728_f, &__jule_any_type8), });;
}



inline void _220bd6e5b_checkDeprecated(_220bd1a49_Eval* _self_, jule::Slice<jule::Ptr<_21ee6d710_Directive>>& _51639_directives, jule::Ptr<_21d81d743_Token> _51670_tok) {
	if (_220bd2990_isUnsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_21ee6d710_Directive> _52113_d = _220c0560b_findDirective(_51639_directives,jule::Str("deprecated", 10));;
	if ((_52113_d != nullptr)) {
		if ((_52113_d.get()._field_Args.len() == 0LL)) {
			_220bd2055_pushErr(&(*_self_), _51670_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type6)}));
		} else {
			_220bd2055_pushErr(&(*_self_), _51670_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_52113_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type6)}));
		};
		_220bd2374_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_220bceecb_Data> _220bd7313_evalFn(_220bd1a49_Eval* _self_, jule::Ptr<_220b31636_Fn> _53229_f, jule::Ptr<_21d81d743_Token> _53237_errorToken) {
	if ((!(_220b6c809_isAccessibleDefine((*_self_)._field_s.ptr(), _53229_f.get()._field_Public,_53229_f.get()._field_Token)))) {
		_220bd2055_pushErr(&(*_self_), _53237_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_53229_f.get()._field_Ident, &__jule_any_type6)}));
		_220bd2374_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_220bd6e5b_checkDeprecated(&(*_self_), _53229_f.get()._field_Directives,_53237_errorToken);
	jule::Ptr<_220b31a10_FnIns> _54117_ins = _22001c89c_instance(_53229_f);;
	_206055aca_pushReference(&(*_self_), _54117_ins);
	return _220bd6b3c_evalFnIns(&(*_self_), _54117_ins);;
}



inline void _220bd76cb_pushIllegalCycleError(_220bd1a49_Eval* _self_, jule::Ptr<_220b8746c_Var>& _54641_v1, jule::Ptr<_220b8746c_Var>& _54652_v2, jule::Str& _54667_message) {
	;
	jule::Str _54813_refers_to = _21d4e555d_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_54641_v1.get()._field_Ident, &__jule_any_type6),jule::Any(_54652_v2.get()._field_Ident, &__jule_any_type6)}));;
	(_54667_message).buffer.insert(0, (((_21d4409e7_Repeat(jule::Str(" ", 1),4LL) + _54813_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _220bd7a83_checkCrossCycle(_220bd1a49_Eval* _self_, jule::Ptr<_220b8746c_Var>& _55235_v, jule::Str& _55249_message) {
	{
		auto &expr = _55235_v.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_20605d3c9:;
		if (it != expr.end()) {
			jule::Ptr<_220b8746c_Var> &_55316_d = *it;
			{
				if ((_55316_d == (*_self_)._field_owner)) {
					_220bd76cb_pushIllegalCycleError(&(*_self_), _55235_v,_55316_d,_55249_message);
					return false;;
				};
				if ((!(_220bd7a83_checkCrossCycle(&(*_self_), _55316_d,_55249_message)))) {
					_220bd76cb_pushIllegalCycleError(&(*_self_), _55235_v,_55316_d,_55249_message);
					return false;;
				};
			}
			_iter_next_20605d3c9:;
			++it;
			goto _iter_begin_20605d3c9;
		}
		_iter_end_20605d3c9:;
	};
	return true;;
}



inline jule::Bool _220bd7e3a_checkIllegalCycles(_220bd1a49_Eval* _self_, jule::Ptr<_220b8746c_Var>& _57142_v, jule::Ptr<_21d81d743_Token> _57151_decl_token) {
	jule::Bool __jule_func_result = false;
	if (((*_self_)._field_owner == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*_self_)._field_owner == _57142_v)) {
		_220bd2055_pushErr(&(*_self_), (*_self_)._field_owner.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_Ident, &__jule_any_type6)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _58317_message = jule::Str();;
	if ((!(_220bd7a83_checkCrossCycle(&(*_self_), _57142_v,_58317_message)))) {
		jule::Str _58621_errMsg = _58317_message;;
		_58317_message=jule::Str();
		_220bd76cb_pushIllegalCycleError(&(*_self_), (*_self_)._field_owner,_57142_v,_58317_message);
		_58621_errMsg+=_58317_message;
		_220bd2055_pushErr(&(*_self_), _57151_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_58621_errMsg, &__jule_any_type6)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*_self_)._field_owner.get()._field_Depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_Depends,1);(*_self_)._field_owner.get()._field_Depends.__push(_57142_v);;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_220bceecb_Data> _220bd82e2_evalVar(_220bd1a49_Eval* _self_, jule::Ptr<_220b8746c_Var> _59830_v, jule::Ptr<_21d81d743_Token> _59839_errorToken) {
	if ((!(_220b6c809_isAccessibleDefine((*_self_)._field_s.ptr(), _59830_v.get()._field_Public,_59830_v.get()._field_Token)))) {
		_220bd2055_pushErr(&(*_self_), _59839_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_59830_v.get()._field_Ident, &__jule_any_type6)}));
		_220bd2374_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_220bd6e5b_checkDeprecated(&(*_self_), _59830_v.get()._field_Directives,_59839_errorToken);
	_59830_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_220b69471_Sema>>()) {
			_case_begin_206065942:;
			{
				jule::Bool _61217_ok = _220bd7e3a_checkIllegalCycles(&(*_self_), _59830_v,_59839_errorToken);;
				if ((!(_61217_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220b49682_scopeChecker>>()) {
			_case_begin_2060659db:;
			{
				if (((!(_59830_v.get()._field_Reference)) || _220bd2990_isUnsafe(&(*_self_)))) {
					goto _match_end_2060658dc;
				};
				jule::Ptr<_220b49682_scopeChecker> _62021_s = (*_self_)._field_lookup.operator jule::Ptr<_220b49682_scopeChecker>();;
				while (((_62021_s.get()._field_owner == nullptr) && (_62021_s.get()._field_parent != nullptr))) {
					{
						_62021_s=_62021_s.get()._field_parent;
					}
				_iter_next_20606778a:;
				}
				_iter_end_20606778a:;;
				if ((((_62021_s.get()._field_owner != nullptr) && _62021_s.get()._field_owner.get()._field_Anon) && (_59830_v.get()._field_Scope != _62021_s.get()._field_owner.get()._field_Scope))) {
					_220bd2055_pushErr(&(*_self_), _59839_errorToken,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_59830_v.get()._field_Ident, &__jule_any_type6)}));
				};
			}
		}
		_match_end_2060658dc:;
	};
	if ((_59830_v.get()._field_Scope == nullptr)) {
		_206069acd_pushReference(&(*_self_), _59830_v);
	};
	if (((!(_59830_v.get()._field_CppLinked)) && ((_59830_v.get()._field_Value == nullptr) || (_59830_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_59830_v.get()._field_Constant) {
			_220b7ee15_checkTypeVar((*_self_)._field_s, _59830_v,jule::Trait<_220c2bc3c_Lookup>((*_self_)._field_s, 3));
			if ((_59830_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;;
			};
		};
	};
	if (((_59830_v.get()._field_Kind == nullptr) || (_59830_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_59830_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_220b7ee15_checkTypeVar((*_self_)._field_s, _59830_v,(*_self_)._field_lookup);
		if (((_59830_v.get()._field_Kind == nullptr) || (_59830_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_220bceecb_Data> _66317_d = jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=_59830_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_59830_v.get()._field_Mutable, ._field_Reference=_59830_v.get()._field_Reference, ._field_Lvalue=(!(_59830_v.get()._field_Constant)), ._field_Model=jule::Any(_59830_v, &__jule_any_type9), });;
	if ((((!(_59830_v.get()._field_CppLinked)) && _220b87835_IsInitialized(_59830_v.ptr())) && (_59830_v.get()._field_Value.get()._field_Data != nullptr))) {
		_66317_d.get()._field_IsRune=_59830_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_59830_v.get()._field_Constant && (_59830_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_66317_d.get()._field_Constant=jule::new_ptr<_220074816_Const>((*(_59830_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_66317_d.get()._field_Model=jule::Any(_66317_d.get()._field_Constant, &__jule_any_type48);
		if (_220b87d0d_untypedConstant(_59830_v.ptr())) {
			_220bd2ece_applyNumericPrefix(&(*_self_), _66317_d);
			_66317_d.get()._field_untyped=true;
		};
	};
	return _66317_d;;
}



inline jule::Ptr<_220bceecb_Data> _220bd8699_evalTypeAlias(_220bd1a49_Eval* _self_, jule::Ptr<_220c0a26a_TypeAlias> _68736_ta, jule::Ptr<_21d81d743_Token> _68752_errorToken) {
	if ((!(_220b6c809_isAccessibleDefine((*_self_)._field_s.ptr(), _68736_ta.get()._field_Public,_68736_ta.get()._field_Token)))) {
		_220bd2055_pushErr(&(*_self_), _68752_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_68736_ta.get()._field_Ident, &__jule_any_type6)}));
		_220bd2374_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_68736_ta.get()._field_Used=true;
	jule::Trait<_220c0aa2e_Kind> _69617_kind = _68736_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_220bceecb_Data> _69717_d = nullptr;;
	{
		auto &_match_expr{ _69617_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21eec33d0_StructIns>>()) {
			_case_begin_20607ab00:;
			{
				_69717_d=_220bd6477__evalStruct(&(*_self_), _69617_kind.operator jule::Ptr<_21eec33d0_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220b38374_Enum>>()) {
			_case_begin_20607b33c:;
			{
				_69717_d=_220bd55ec__evalEnum(&(*_self_), _69617_kind.operator jule::Ptr<_220b38374_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220b38ae4_TypeEnum>>()) {
			_case_begin_206079dc9:;
			{
				_69717_d=_220bd5cb2__evalTypeEnum(&(*_self_), _69617_kind.operator jule::Ptr<_220b38ae4_TypeEnum>());
			}
		}
		else {
			_case_begin_206079ca8:;
			{
				_69717_d=jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=_68736_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_68736_ta.get()._field_CppLinked) {
					_69717_d.get()._field_Kind.get()._field_CppIdent=_68736_ta.get()._field_Ident;
				} else {
					_69717_d.get()._field_Kind.get()._field_CppIdent=_68736_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_69717_d.get()._field_Model=jule::Any(_69717_d.get()._field_Kind, &__jule_any_type91);
			}
		}
		_match_end_206079c53:;
	};
	_69717_d.get()._field_Kind.get()._field_Generic=_68736_ta.get()._field_Generic;
	return _69717_d;;
}



inline jule::Ptr<_220bceecb_Data> _220bd8a51_evalDef(_220bd1a49_Eval* _self_, jule::Any _72330_def, jule::Ptr<_21d81d743_Token> _72340_ident) {
	{
		auto &_match_expr{ _72330_def };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_20607dbd0:;
			{
				return _220bd82e2_evalVar(&(*_self_), _72330_def.cast_ptr<_220b8746c_Var>(&__jule_any_type9),_72340_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_20607dc46:;
			{
				return _220bd59a4_evalEnum(&(*_self_), _72330_def.cast_ptr<_220b38374_Enum>(&__jule_any_type69),_72340_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_20607dcac:;
			{
				return _220bd6169_evalTypeEnum(&(*_self_), _72330_def.cast_ptr<_220b38ae4_TypeEnum>(&__jule_any_type70),_72340_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_20607dd34:;
			{
				return _220bd682e_evalStruct(&(*_self_), _21ee7994c_instance(_72330_def.cast_ptr<_21eec3006_Struct>(&__jule_any_type67)),_72340_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_20607dd9a:;
			{
				jule::Ptr<_220b31636_Fn> _73421_f = _72330_def.cast_ptr<_220b31636_Fn>(&__jule_any_type66);;
				if ((_73421_f.get()._field_Ident != jule::Str("init", 4))) {
					return _220bd7313_evalFn(&(*_self_), _73421_f,_72340_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20607de22:;
			{
				return _220bd6b3c_evalFnIns(&(*_self_), _72330_def.cast_ptr<_220b31a10_FnIns>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_20607de99:;
			{
				return _220bd8699_evalTypeAlias(&(*_self_), _72330_def.cast_ptr<_220c0a26a_TypeAlias>(&__jule_any_type68),_72340_ident);;
			}
		}
		_match_end_20607dae2:;
	};
	_220bd2055_pushErr(&(*_self_), _72340_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_72340_ident.get()._field_Kind, &__jule_any_type6)}));
	return nullptr;;
}



inline jule::Ptr<_220bceecb_Data> _220bd8d5e_evalIdent(_220bd1a49_Eval* _self_, jule::Ptr<_21eea7b89_IdentExpr> _74728_ident) {
	jule::Any _74817_def = _220bd5069_getDef(&(*_self_), _74728_ident.get()._field_Ident,_74728_ident.get()._field_CppLinked);;
	return _220bd8a51_evalDef(&(*_self_), _74817_def,_74728_ident.get()._field_Token);;
}



inline jule::Ptr<_220bceecb_Data> _220bd916c_evalUnary(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eea8393_UnaryExpr> _75233_u) {
	_220bec8de_unaryEval _75317_unary = static__220becd95_new(_self_);;
	return _220bee13d_eval(&_75317_unary, _75233_u);;
}



inline jule::Ptr<_220bceecb_Data> _220bd947a_evalVariadic(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eead5a7_VariadicExpr> _75736_v) {
	if ((_75736_v.get()._field_Expr == nullptr)) {
		_220bd2055_pushErr(_self_.ptr(), _75736_v.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_220c0ae5d_TypeKind> _76317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_76317_prefix;
	});;
	jule::Ptr<_220bceecb_Data> _76717_d = _220bebd50_evalExprKind(_self_, _75736_v.get()._field_Expr.get()._field_Kind);;
	if ((_76717_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_220c0d081_Variadicable(_76717_d.get()._field_Kind.ptr())))) {
		_220bd2055_pushErr(_self_.ptr(), _75736_v.get()._field_Token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_76717_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
		return nullptr;;
	};
	jule::Ptr<_220c14d9b_Slc> _77713_slc = _220c0e26e_Slc(_76717_d.get()._field_Kind.ptr());;
	_76717_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_CppIdent=_77713_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_77713_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_77713_slc.get()._field_Elem.get()._field_Kind});
	return _76717_d;;
}



inline jule::Ptr<_220bceecb_Data> _220bd9788_evalUnsafe(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eea7716_UnsafeExpr> _78734_u) {
	jule::Bool _78813_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_220bceecb_Data> _79017_d = _220bebd50_evalExprKind(_self_, _78734_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_78813_unsafety;
	return _79017_d;;
}



inline jule::Ptr<_220bceecb_Data> _220bd9a96_evalArr(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eeb2424_SliceExpr> _79531_s) {
	jule::Ptr<_220c17046_Arr> _79717_pt = _220c0e00a_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_220c17046_Arr> _79917_arr = jule::new_ptr<_220c17046_Arr>(_220c17046_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_79717_pt.get()._field_Elem});;
	jule::Bool _80517_filled = false;;
	if ((_79531_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _79531_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type83) {
				_case_begin_20608cd87:;
				{
					if ((_79531_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_21eead5a7_VariadicExpr>(&__jule_any_type83).get()._field_Expr != nullptr)) {
						goto _match_end_20608cd32;
					};
					if (_79717_pt.get()._field_Auto) {
						_220bd2055_pushErr(_self_.ptr(), _79531_s.get()._field_Token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;;
					};
					_80517_filled=true;
					_79531_s.get()._field_Exprs=_79531_s.get()._field_Exprs.slice(0LL,1LL);
				}
			}
			_match_end_20608cd32:;
		};
	};
	_79917_arr.get()._field_N=static_cast<jule::I64>(_79531_s.get()._field_Exprs.len());
	if ((!(_79717_pt.get()._field_Auto))) {
		if ((_79917_arr.get()._field_N > _79717_pt.get()._field_N)) {
			_220bd2055_pushErr(_self_.ptr(), _79531_s.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_79917_arr.get()._field_N < _79717_pt.get()._field_N)) {
			_79917_arr.get()._field_N=_79717_pt.get()._field_N;
		};
	};
	jule::Ptr<_220b2cdc4_ArrayExprModel> _83417_model = jule::new_ptr<_220b2cdc4_ArrayExprModel>(_220b2cdc4_ArrayExprModel{._field_Kind=_79917_arr, });;
	if (_80517_filled) {
		_83417_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_83417_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _79531_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_220c0ae5d_TypeKind> _84317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_79917_arr.get()._field_Elem;
	{
		auto &expr = _79531_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_206092be4:;
		if (it != expr.end()) {
			jule::Ptr<_21eea5ec8_Expr> _84521_elem = *it;
			{
				jule::Ptr<_220bceecb_Data> _84621_d = _220bebd50_evalExprKind(_self_, _84521_elem.get()._field_Kind);;
				if ((_84621_d == nullptr)) {
					goto _iter_next_206092be4;
				};
				_220b74019_checkAssignType(_self_.get()._field_s, false,_79917_arr.get()._field_Elem,_84621_d,_79531_s.get()._field_Token);
				_83417_model.get()._field_Elems = jule::alloc_for_append(_83417_model.get()._field_Elems,1);_83417_model.get()._field_Elems.__push(_84621_d.get()._field_Model);;
			}
			_iter_next_206092be4:;
			++it;
			goto _iter_begin_206092be4;
		}
		_iter_end_206092be4:;
	};
	_self_.get()._field_prefix=_84317_prefix;
	if (_80517_filled) {
		_83417_model.get()._field_Elems = jule::alloc_for_append(_83417_model.get()._field_Elems,1);_83417_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_79917_arr, 11)}), ._field_Mutable=true, ._field_Model=jule::Any(_83417_model, &__jule_any_type92), });;
}



inline jule::Ptr<_220bceecb_Data> _220bd9ee7_evalExpSlc(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eeb2424_SliceExpr> _87034_s, jule::Ptr<_220c0ae5d_TypeKind> _87053_t, jule::Any _87071_first) {
	jule::Ptr<_220c14d9b_Slc> _87117_slc = jule::new_ptr<_220c14d9b_Slc>(_220c14d9b_Slc{._field_Elem=_87053_t});;
	jule::Ptr<_220b2b950_SliceExprModel> _87517_model = jule::new_ptr<_220b2b950_SliceExprModel>(_220b2b950_SliceExprModel{._field_ElemKind=_87053_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _87034_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_87071_first != nullptr)) {
		_87517_model.get()._field_Elems = jule::alloc_for_append(_87517_model.get()._field_Elems,1);_87517_model.get()._field_Elems.__push(_87071_first);;
		_87034_s.get()._field_Exprs=_87034_s.get()._field_Exprs.slice(1LL);
	};
	jule::Ptr<_220c0ae5d_TypeKind> _88417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_87117_slc.get()._field_Elem;
	{
		auto &expr = _87034_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_206098656:;
		if (it != expr.end()) {
			jule::Ptr<_21eea5ec8_Expr> _88621_elem = *it;
			{
				jule::Ptr<_220bceecb_Data> _88721_d = _220bebd50_evalExprKind(_self_, _88621_elem.get()._field_Kind);;
				if ((_88721_d == nullptr)) {
					goto _iter_next_206098656;
				};
				_220b74019_checkAssignType(_self_.get()._field_s, false,_87117_slc.get()._field_Elem,_88721_d,_87034_s.get()._field_Token);
				_87517_model.get()._field_Elems = jule::alloc_for_append(_87517_model.get()._field_Elems,1);_87517_model.get()._field_Elems.__push(_88721_d.get()._field_Model);;
			}
			_iter_next_206098656:;
			++it;
			goto _iter_begin_206098656;
		}
		_iter_end_206098656:;
	};
	_self_.get()._field_prefix=_88417_prefix;
	return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_87117_slc, 8)}), ._field_Mutable=true, ._field_Model=jule::Any(_87517_model, &__jule_any_type84), });;
}



inline jule::Ptr<_220bceecb_Data> _220bda305_evalSliceExpr(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eeb2424_SliceExpr> _90537_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_220c0e00a_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_20609b2c4:;
				{
					return _220bd9a96_evalArr(_self_, _90537_s);;
				}
			}
			else if ((_220c0e26e_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_20609b34b:;
				{
					jule::Ptr<_220c14d9b_Slc> _91125_pt = _220c0e26e_Slc(_self_.get()._field_prefix.ptr());;
					return _220bd9ee7_evalExpSlc(_self_, _90537_s,_91125_pt.get()._field_Elem,nullptr);;
				}
			}
			_match_end_20609b1b4:;
		};
	};
	jule::Ptr<_220c0ae5d_TypeKind> _91617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_90537_s.get()._field_Exprs.len() == 0LL)) {
		_220bd2055_pushErr(_self_.ptr(), _90537_s.get()._field_Token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_220bceecb_Data> _92417_first_elem = _220bebd50_evalExprKind(_self_, _90537_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_92417_first_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_220bceecb_Data> _92917_d = _220bd9ee7_evalExpSlc(_self_, _90537_s,_92417_first_elem.get()._field_Kind,_92417_first_elem.get()._field_Model);;
	_self_.get()._field_prefix=_91617_prefix;
	return _92917_d;;
}



inline void _220bda646_checkIntegerIndexingByData(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data>& _93550_d, jule::Ptr<_21d81d743_Token> _93560_token) {
	jule::Str _93613_err_key = _220c07aa3_checkDataForIntegerIndexing(_93550_d);;
	{
		auto &_match_expr{ _93613_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_2060a13c8:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_2060a18b2:;
			{
				_220bd2055_pushErr(&(*_self_), _93560_token,_93613_err_key,jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_93550_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
			}
		}
		else {
			_case_begin_2060a174c:;
			{
				_220bd2055_pushErr(&(*_self_), _93560_token,_93613_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_2060a1670:;
	};
}



inline void _220bdaa20_indexingPtr(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data>& _94735_d, jule::Ptr<_220bceecb_Data>& _94750_index, jule::Ptr<_21eeb2c93_IndexingExpr>& _94765_i) {
	_220bda646_checkIntegerIndexingByData(&(*_self_), _94750_index,_94765_i.get()._field_Token);
	jule::Ptr<_220c179a3_Ptr> _95017_ptr = _220c0d7bd_Ptr(_94735_d.get()._field_Kind.ptr());;
	{
		
		if (_220c18476_IsUnsafe(_95017_ptr.ptr())) {
			_case_begin_2060a40ce:;
			{
				_220bd2055_pushErr(&(*_self_), _94765_i.get()._field_Token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_220bd2990_isUnsafe(&(*_self_))))) {
			_case_begin_2060a4145:;
			{
				_220bd2055_pushErr(&(*_self_), _94765_i.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_2060a3ead:;
	};
	_94735_d.get()._field_Kind=_95017_ptr.get()._field_Elem;
}



inline void _220bdadd8_indexingArr(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data>& _96235_d, jule::Ptr<_220bceecb_Data>& _96250_index, jule::Ptr<_21eeb2c93_IndexingExpr>& _96265_i) {
	jule::Ptr<_220c17046_Arr> _96317_arr = _220c0e00a_Arr(_96235_d.get()._field_Kind.ptr());;
	_96235_d.get()._field_Kind=_96317_arr.get()._field_Elem;
	_220bda646_checkIntegerIndexingByData(&(*_self_), _96250_index,_96265_i.get()._field_Token);
	if ((_220bd088e_IsConst(_96250_index.ptr()) && (_220b282dc_AsF64(_96250_index.get()._field_Constant.ptr()) >= static_cast<jule::F64>(_96317_arr.get()._field_N)))) {
		_220bd2055_pushErr(&(*_self_), _96265_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _220bdb2a1_indexingSlc(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data>& _97135_d, jule::Ptr<_220bceecb_Data>& _97150_index, jule::Ptr<_21eeb2c93_IndexingExpr>& _97165_i) {
	jule::Ptr<_220c14d9b_Slc> _97217_slc = _220c0e26e_Slc(_97135_d.get()._field_Kind.ptr());;
	_97135_d.get()._field_Kind=_97217_slc.get()._field_Elem;
	_220bda646_checkIntegerIndexingByData(&(*_self_), _97150_index,_97165_i.get()._field_Token);
	if ((!(_220bd088e_IsConst(_97150_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _97135_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_2060ae86a:;
			{
				jule::Ptr<_220b2b950_SliceExprModel> _98221_m = _97135_d.get()._field_Model.cast_ptr<_220b2b950_SliceExprModel>(&__jule_any_type84);;
				jule::F64 _98317_indx = _220b282dc_AsF64(_97150_index.get()._field_Constant.ptr());;
				if ((_98317_indx >= static_cast<jule::F64>(_98221_m.get()._field_Elems.len()))) {
					_220bd2055_pushErr(&(*_self_), _97165_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_97135_d.get()._field_Model=_98221_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_98317_indx))];
					_97135_d.get()._field_Decl=true;
				};
			}
		}
		_match_end_2060ae7c1:;
	};
}



inline void _220bdb669_indexingMap(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data>& _99335_d, jule::Ptr<_220bceecb_Data>& _99350_index, jule::Ptr<_21eeb2c93_IndexingExpr>& _99369_i) {
	if ((_99350_index == nullptr)) {
		return;;
	};
	jule::Ptr<_220c16452_Map> _99717_m = _220c0ec20_Map(_99335_d.get()._field_Kind.ptr());;
	_220bba8bd_assignTypeChecker _99817_atc = _220bba8bd_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_99717_m.get()._field_Key, ._field_d=_99350_index, ._field_errorToken=_99369_i.get()._field_Token};;
	_220bbba45_check(&_99817_atc);
	_99335_d.get()._field_Kind=_99717_m.get()._field_Val;
}



inline void _220bdba32_indexingStr(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data>& _100835_d, jule::Ptr<_220bceecb_Data>& _100850_index, jule::Ptr<_21eeb2c93_IndexingExpr>& _100865_i) {
	;
	_100835_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("u8", 2)), 6)});
	if ((_100850_index == nullptr)) {
		return;;
	};
	_220bda646_checkIntegerIndexingByData(&(*_self_), _100850_index,_100865_i.get()._field_Token);
	if ((!(_220bd088e_IsConst(_100850_index.ptr())))) {
		_100835_d.get()._field_Constant=nullptr;
		return;;
	};
	if (_220bd088e_IsConst(_100835_d.ptr())) {
		jule::Ptr<_21d81d743_Token> _102417_errorToken = _100865_i.get()._field_Token;;
		jule::I64 _102517_j = _220b28078_AsI64(_100850_index.get()._field_Constant.ptr());;
		jule::Str _102617_s = _220b27d14_ReadStr(_100835_d.get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_102517_j) >= _102617_s.len())) {
			_220bd2055_pushErr(&(*_self_), _102417_errorToken,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_220b28551_SetU64(_100835_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_102617_s[_102517_j])));
		};
	};
}



inline void _220bdbdea_toIndexing(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data>& _103534_d, jule::Ptr<_220bceecb_Data>& _103549_index, jule::Ptr<_21eeb2c93_IndexingExpr>& _103568_i) {
	{
		
		if ((_220c0d7bd_Ptr(_103534_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2060b9512:;
			{
				_220bdaa20_indexingPtr(&(*_self_), _103534_d,_103549_index,_103568_i);
				return;;
			}
		}
		else if ((_220c0e00a_Arr(_103534_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2060b9589:;
			{
				_220bdadd8_indexingArr(&(*_self_), _103534_d,_103549_index,_103568_i);
				return;;
			}
		}
		else if ((_220c0e26e_Slc(_103534_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2060b9611:;
			{
				_220bdb2a1_indexingSlc(&(*_self_), _103534_d,_103549_index,_103568_i);
				return;;
			}
		}
		else if ((_220c0ec20_Map(_103534_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2060b9688:;
			{
				_220bdb669_indexingMap(&(*_self_), _103534_d,_103549_index,_103568_i);
				return;;
			}
		}
		else if ((_220c0d2e5_Prim(_103534_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2060b9710:;
			{
				jule::Ptr<_220c10baa_Prim> _105017_prim = _220c0d2e5_Prim(_103534_d.get()._field_Kind.ptr());;
				{
					
					if (_220c13dde_IsStr(_105017_prim.ptr())) {
						_case_begin_2060bd637:;
						{
							_220bdba32_indexingStr(&(*_self_), _103534_d,_103549_index,_103568_i);
							return;;
						}
					}
					_match_end_2060bd58d:;
				};
			}
		}
		_match_end_2060b93be:;
	};
	_220bd2055_pushErr(&(*_self_), _103568_i.get()._field_Token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_103534_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
}



inline jule::Bool _220bdc36d_pushGenericsFromExprSubIdent(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eeae289_SubIdentExpr>& _106053_sexpr, jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>>& _106114_generics, jule::Ptr<_21eea5ec8_Expr>& _106142_expr) {
	jule::Ptr<_21eea26bc_SubIdentTypeDecl> _106217_t = jule::new_ptr<_21eea26bc_SubIdentTypeDecl>();;
	if ((!(_220c08873_pushSubIdentFromExpr(jule::Any(_106053_sexpr, &__jule_any_type93),_106217_t)))) {
		_220bd2055_pushErr(_self_.ptr(), _106142_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;;
	};
	_106114_generics = jule::alloc_for_append(_106114_generics,1);_106114_generics.__push(jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Kind=jule::Any(_106217_t, &__jule_any_type94)}));;
	return true;;
}



inline jule::Bool _220bdc736_pushGenericsFromData(jule::Ptr<_220bd1a49_Eval> _self_, jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>>& _107145_generics, jule::Ptr<_21eea5ec8_Expr>& _107173_expr) {
	{
		auto &_match_expr{ _107173_expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_2060c251a:;
			{
				jule::Ptr<_21eea8393_UnaryExpr> _107421_u = _107173_expr.get()._field_Kind.cast_ptr<_21eea8393_UnaryExpr>(&__jule_any_type95);;
				{
					auto &_match_expr{ _107421_u.get()._field_Op.get()._field_Kind };
					
					if (_match_expr == jule::Str("*", 1)) {
						_case_begin_2060c4022:;
						{
							jule::Ptr<_21eea3833_PtrTypeDecl> _107725_kind = jule::new_ptr<_21eea3833_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>> _107825__generics = jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>>::alloc(0LL, 1LL);;
							_220bdc736_pushGenericsFromData(_self_, _107825__generics,_107421_u.get()._field_Expr);
							_107725_kind.get()._field_Elem=_107825__generics[0LL];
							_107145_generics = jule::alloc_for_append(_107145_generics,1);_107145_generics.__push(jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Token=_107173_expr.get()._field_Token, ._field_Kind=jule::Any(_107725_kind, &__jule_any_type79)}));;
						}
					}
					else if (_match_expr == jule::Str("&", 1)) {
						_case_begin_2060c4088:;
						{
							jule::Ptr<_21eea2d60_SptrTypeDecl> _108625_kind = jule::new_ptr<_21eea2d60_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>> _108725__generics = jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>>::alloc(0LL, 1LL);;
							_220bdc736_pushGenericsFromData(_self_, _108725__generics,_107421_u.get()._field_Expr);
							_108625_kind.get()._field_Elem=_108725__generics[0LL];
							_107145_generics = jule::alloc_for_append(_107145_generics,1);_107145_generics.__push(jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Token=_107173_expr.get()._field_Token, ._field_Kind=jule::Any(_108625_kind, &__jule_any_type80)}));;
						}
					}
					else {
						_case_begin_2060c340b:;
						{
							_220bd2055_pushErr(_self_.ptr(), _107421_u.get()._field_Op,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_2060c3186:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_2060c2581:;
			{
				_107145_generics = jule::alloc_for_append(_107145_generics,1);_107145_generics.__push(_107173_expr.get()._field_Kind.cast_ptr<_21eea19a7_TypeDecl>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_2060c2372:;
			{
				jule::Ptr<_21eeae289_SubIdentExpr> _110121_sexpr = _107173_expr.get()._field_Kind.cast_ptr<_21eeae289_SubIdentExpr>(&__jule_any_type93);;
				return _220bdc36d_pushGenericsFromExprSubIdent(_self_, _110121_sexpr,_107145_generics,_107173_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_2060c23d8:;
			{
				jule::Ptr<_21eea7b89_IdentExpr> _110421_ident = _107173_expr.get()._field_Kind.cast_ptr<_21eea7b89_IdentExpr>(&__jule_any_type87);;
				_107145_generics = jule::alloc_for_append(_107145_generics,1);_107145_generics.__push(jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_21eea206d_IdentTypeDecl>(_21eea206d_IdentTypeDecl{._field_Token=_110421_ident.get()._field_Token, ._field_Ident=_110421_ident.get()._field_Ident, ._field_CppLinked=_110421_ident.get()._field_CppLinked, }), &__jule_any_type20)}));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_2060c19ae:;
			{
				{
					auto &expr = _107173_expr.get()._field_Kind.cast_ptr<_21eea6b55_TupleExpr>(&__jule_any_type88).get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_2060c9137:;
					if (it != expr.end()) {
						jule::Ptr<_21eea5ec8_Expr> _111325_texpr = *it;
						{
							if ((!(_220bdc736_pushGenericsFromData(_self_, _107145_generics,_111325_texpr)))) {
								return false;;
							};
						}
						_iter_next_2060c9137:;
						++it;
						goto _iter_begin_2060c9137;
					}
					_iter_end_2060c9137:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_2060c1a25:;
			{
				jule::Ptr<_21eeadd16_NsSelectionExpr> _111921_ns = _107173_expr.get()._field_Kind.cast_ptr<_21eeadd16_NsSelectionExpr>(&__jule_any_type97);;
				jule::Ptr<_21eea206d_IdentTypeDecl> _112021_decl = jule::new_ptr<_21eea206d_IdentTypeDecl>(_21eea206d_IdentTypeDecl{._field_Token=_111921_ns.get()._field_Ident, ._field_Ident=_111921_ns.get()._field_Ident.get()._field_Kind, });;
				_107145_generics = jule::alloc_for_append(_107145_generics,1);_107145_generics.__push(jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Token=_112021_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_21eea2a74_NamespaceTypeDecl>(_21eea2a74_NamespaceTypeDecl{._field_Idents=_111921_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Token=_112021_decl.get()._field_Token, ._field_Kind=jule::Any(_112021_decl, &__jule_any_type20)})}), &__jule_any_type98)}));;
			}
		}
		else {
			_case_begin_2060c1948:;
			{
				_220bd2055_pushErr(_self_.ptr(), _107173_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_2060c18e3:;
	};
	return true;;
}



inline void _220bdca77_evalIdentDeclFromIndexing(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_220bceecb_Data>& _114150_d, jule::Ptr<_21eeb2c93_IndexingExpr>& _114165_i) {
	jule::Ptr<_21eec33d0_StructIns> _114217_s = _220c0e747_Struct(_114150_d.get()._field_Kind.ptr());;
	if ((_114217_s == nullptr)) {
		_220bd2055_pushErr(_self_.ptr(), _114165_i.get()._field_Expr.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_114150_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
		_114150_d=nullptr;
		return;;
	};
	jule::Ptr<_21eea206d_IdentTypeDecl> _114917_decl = nullptr;;
	{
		auto &_match_expr{ _114165_i.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_2060ce516:;
			{
				jule::Ptr<_21eea7b89_IdentExpr> _115221_expr = _114165_i.get()._field_Expr.get()._field_Kind.cast_ptr<_21eea7b89_IdentExpr>(&__jule_any_type87);;
				_114917_decl=jule::new_ptr<_21eea206d_IdentTypeDecl>(_21eea206d_IdentTypeDecl{._field_Token=_115221_expr.get()._field_Token, ._field_Ident=_115221_expr.get()._field_Ident, ._field_CppLinked=_115221_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_2060d05d3:;
			{
				jule::Ptr<_21eeadd16_NsSelectionExpr> _115921_expr = _114165_i.get()._field_Expr.get()._field_Kind.cast_ptr<_21eeadd16_NsSelectionExpr>(&__jule_any_type97);;
				_114917_decl=jule::new_ptr<_21eea206d_IdentTypeDecl>(_21eea206d_IdentTypeDecl{._field_Token=_115921_expr.get()._field_Ident, ._field_Ident=_115921_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_2060ce923:;
			{
				_220bd2055_pushErr(_self_.ptr(), _114165_i.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_114150_d=nullptr;
				return;;
			}
		}
		_match_end_2060ce8bd:;
	};
	if ((!(_220bdc736_pushGenericsFromData(_self_, _114917_decl.get()._field_Generics,_114165_i.get()._field_Index)))) {
		_114150_d=nullptr;
		return;;
	};
	_114217_s=({ auto _wrap_copy = _220be3cd1_typeChecker(_self_.ptr()); _220c1d657_fromStruct(&_wrap_copy, _114917_decl,_114217_s.get()._field_Decl); });
	if ((_114217_s == nullptr)) {
		_114150_d=nullptr;
		return;;
	};
	_114150_d.get()._field_Kind.get()._field_Kind=jule::Trait<_220c0aa2e_Kind>(_114217_s, 0);
}



inline jule::Bool _220bdced9_checkGenericFn(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_220b31a10_FnIns>& _118439_f, jule::Ptr<_21d81d743_Token>& _118455_et, jule::Any& _118472_model) {
	jule::Bool _118513_ok = _220b763d4_reloadFnInsTypes(_self_.get()._field_s, _118439_f);;
	_118439_f.get()._field_reloaded=true;
	if ((!(_118513_ok))) {
		return false;;
	};
	jule::Ptr<_220b31a10_FnIns> _119017_existInstance = _22000b869_appendInstance(_118439_f.get()._field_Decl.ptr(), _118439_f);;
	if ((!(_220b75548_checkConstraintsFn(_self_.get()._field_s, _118439_f,_118455_et,_119017_existInstance)))) {
		return false;;
	};
	if ((_119017_existInstance != nullptr)) {
		_118439_f=_119017_existInstance;
		_220c08631_updateModelToGenericIns(_118472_model,_119017_existInstance);
	} else {
		_220b82c1a_checkFnInsCaller(_self_.get()._field_s, _118439_f,_118455_et);
	};
	return true;;
}



inline void _220bdd32a_evalFnGenericFromIndexing(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_220bceecb_Data>& _120950_d, jule::Ptr<_21eeb2c93_IndexingExpr>& _120965_i) {
	jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>> _121017_generics = jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_220bdc736_pushGenericsFromData(_self_, _121017_generics,_120965_i.get()._field_Index)))) {
		_120950_d=nullptr;
		return;;
	};
	jule::Ptr<_220b31a10_FnIns> _121617_f = _220c0e4d3_Fn(_120950_d.get()._field_Kind.ptr());;
	jule::I64 _121717_genericsLen = 0LL;;
	if ((_121617_f.get()._field_Decl != nullptr)) {
		_121717_genericsLen=static_cast<jule::I64>(_121617_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_220b6d4ca_checkGenericQuantity(_self_.get()._field_s.ptr(), _121717_genericsLen,static_cast<jule::I64>(_121017_generics.len()),_120965_i.get()._field_Expr.get()._field_Token)))) {
		_120950_d=nullptr;
		return;;
	};
	_121617_f.get()._field_Generics=jule::Slice<jule::Ptr<_220c09731_InsGeneric>>::alloc(0LL, _121617_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto &expr = _121017_generics;
		auto it = expr.begin();
		_iter_begin_2060d98c8:;
		if (it != expr.end()) {
			jule::Ptr<_21eea19a7_TypeDecl> _122821_g = *it;
			{
				jule::Ptr<_220bceecb_Data> _122921_k = _220be40de_evalType(_self_.ptr(), _122821_g);;
				if ((_122921_k == nullptr)) {
					_120950_d=nullptr;
					return;;
				};
				_121617_f.get()._field_Generics = jule::alloc_for_append(_121617_f.get()._field_Generics,1);_121617_f.get()._field_Generics.__push(jule::new_ptr<_220c09731_InsGeneric>(_220c09731_InsGeneric{._field_Kind=_122921_k.get()._field_Kind, }));;
			}
			_iter_next_2060d98c8:;
			++it;
			goto _iter_begin_2060d98c8;
		}
		_iter_end_2060d98c8:;
	};
	if (_220b321c5_IsBuiltin(_121617_f.ptr())) {
		return;;
	};
	if (_220bdced9_checkGenericFn(_self_, _121617_f,_120965_i.get()._field_Expr.get()._field_Token,_120950_d.get()._field_Model)) {
		_120950_d.get()._field_Kind.get()._field_Kind=jule::Trait<_220c0aa2e_Kind>(_121617_f, 1);
	} else {
		_120950_d=nullptr;
	};
}



inline jule::Ptr<_220bceecb_Data> _220bdd649_evalIndexing(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eeb2c93_IndexingExpr> _124836_i) {
	jule::Ptr<_220c0ae5d_TypeKind> _124917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_124917_prefix;
	});;
	jule::Ptr<_220bceecb_Data> _125317_d = _220bebd50_evalExprKind(_self_, _124836_i.get()._field_Expr.get()._field_Kind);;
	if ((_125317_d == nullptr)) {
		return nullptr;;
	};
	if (_125317_d.get()._field_Decl) {
		_220bdca77_evalIdentDeclFromIndexing(_self_, _125317_d,_124836_i);
		return _125317_d;;
	};
	if ((_220c0e4d3_Fn(_125317_d.get()._field_Kind.ptr()) != nullptr)) {
		_220bdd32a_evalFnGenericFromIndexing(_self_, _125317_d,_124836_i);
		return _125317_d;;
	};
	_220bceecb_Data _126917_old_d = (*(_125317_d));;
	jule::Ptr<_220bceecb_Data> _127117_index = _220bebd50_evalExprKind(_self_, _124836_i.get()._field_Index.get()._field_Kind);;
	if ((_127117_index == nullptr)) {
		return nullptr;;
	};
	_125317_d.get()._field_Decl=false;
	_220bdbdea_toIndexing(_self_.ptr(), _125317_d,_127117_index,_124836_i);
	if (_220bd088e_IsConst(_125317_d.ptr())) {
		_125317_d.get()._field_Decl=false;
		_125317_d.get()._field_Model=jule::Any(_125317_d.get()._field_Constant, &__jule_any_type48);
	} else if (_125317_d.get()._field_Decl) {
		_125317_d.get()._field_Decl=false;
	} else {
		_125317_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2bb3c_IndexingExprModel>(_220b2bb3c_IndexingExprModel{._field_Token=_124836_i.get()._field_Token, ._field_Expr=jule::new_ptr<_220bceecb_Data>(_126917_old_d), ._field_Index=_127117_index}), &__jule_any_type46);
	};
	return _125317_d;;
}



inline __jule_tuple_x_220bceecb_Data__jule_tuple_x_220bceecb_Data _220bdd957_evalSlicingExprs(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eeb339d_SlicingExpr>& _130241_s) {
	__jule_tuple_x_220bceecb_Data__jule_tuple_x_220bceecb_Data __jule_func_result;
	jule::Ptr<_220c0ae5d_TypeKind> _130317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_130317_prefix;
	});;
	jule::Ptr<_220bceecb_Data> _130717_l = nullptr;;
	jule::Ptr<_220bceecb_Data> _130817_r = nullptr;;
	if ((_130241_s.get()._field_Start != nullptr)) {
		_130717_l=_220bebd50_evalExprKind(_self_, _130241_s.get()._field_Start.get()._field_Kind);
		if ((_130717_l != nullptr)) {
			_220bda646_checkIntegerIndexingByData(_self_.ptr(), _130717_l,_130241_s.get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_130717_l=jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__2200b58ac_NewI64(0LL)});
		_130717_l.get()._field_Model=jule::Any(_130717_l.get()._field_Constant, &__jule_any_type48);
	};
	if ((_130241_s.get()._field_To != nullptr)) {
		_130817_r=_220bebd50_evalExprKind(_self_, _130241_s.get()._field_To.get()._field_Kind);
		if ((_130817_r != nullptr)) {
			_220bda646_checkIntegerIndexingByData(_self_.ptr(), _130817_r,_130241_s.get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _130717_l;
	__jule_func_result.__jule_result_arg1 = _130817_r;
	return __jule_func_result;;
}



inline void _220bddbcc_slicingArr(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data>& _133730_d) {
	jule::Ptr<_220c0ae5d_TypeKind> _133817_elemType = _220c0e00a_Arr(_133730_d.get()._field_Kind.ptr()).get()._field_Elem;;
	_133730_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(jule::new_ptr<_220c14d9b_Slc>(_220c14d9b_Slc{._field_Elem=_133817_elemType}), 8)});
	_133730_d.get()._field_Lvalue=false;
	_133730_d.get()._field_Mutable=(_133730_d.get()._field_Mutable || (!(_220c0c5d0_Mutable(_133817_elemType.ptr()))));
}



inline void _220bde095_slicingStr(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data>& _135230_d, jule::Ptr<_220bceecb_Data>& _135241_l, jule::Ptr<_220bceecb_Data>& _135252_r) {
	_135230_d.get()._field_Lvalue=false;
	_135230_d.get()._field_Mutable=true;
	if ((!(_220bd088e_IsConst(_135230_d.ptr())))) {
		return;;
	};
	if (((_135241_l == nullptr) || (_135252_r == nullptr))) {
		_135230_d.get()._field_Constant=nullptr;
		return;;
	};
	if ((_220bd088e_IsConst(_135241_l.ptr()) && _220bd088e_IsConst(_135252_r.ptr()))) {
		jule::I64 _136517_left = _220b28078_AsI64(_135241_l.get()._field_Constant.ptr());;
		if ((_136517_left < 0LL)) {
			return;;
		};
		jule::Str _137017_s = _220b27d14_ReadStr(_135230_d.get()._field_Constant.ptr());;
		jule::I64 _137121_right = 0LL;;
		if ((_135252_r == nullptr)) {
			_137121_right=static_cast<jule::I64>(static_cast<jule::I64>(_137017_s.len()));
		} else {
			_137121_right=static_cast<jule::I64>(_220b28078_AsI64(_135252_r.get()._field_Constant.ptr()));
		};
		if ((_136517_left > _137121_right)) {
			return;;
		};
		_220b287b5_SetStr(_135230_d.get()._field_Constant.ptr(), _137017_s.slice(_136517_left,_137121_right));
		_135230_d.get()._field_Decl=true;
	} else {
		_135230_d.get()._field_Constant=nullptr;
	};
}



inline void _220bde507_checkSlicing(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data>& _138836_d, jule::Ptr<_220bceecb_Data>& _138847_l, jule::Ptr<_220bceecb_Data>& _138858_r, jule::Ptr<_21eeb339d_SlicingExpr>& _138869_s) {
	{
		
		if ((_220c0e00a_Arr(_138836_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2061019bc:;
			{
				_220bddbcc_slicingArr(&(*_self_), _138836_d);
				return;;
			}
		}
		else if ((_220c0e26e_Slc(_138836_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206101a44:;
			{
				return;;
			}
		}
		else if ((_220c0d2e5_Prim(_138836_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206101abb:;
			{
				jule::Ptr<_220c10baa_Prim> _139617_prim = _220c0d2e5_Prim(_138836_d.get()._field_Kind.ptr());;
				{
					
					if (_220c13dde_IsStr(_139617_prim.ptr())) {
						_case_begin_206104052:;
						{
							_220bde095_slicingStr(&(*_self_), _138836_d,_138847_l,_138858_r);
							return;;
						}
					}
					_match_end_206103ea8:;
				};
			}
		}
		_match_end_20610189b:;
	};
	_220bd2055_pushErr(&(*_self_), _138869_s.get()._field_Token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_138836_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
}



inline jule::Ptr<_220bceecb_Data> _220bde815_evalSlicing(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eeb339d_SlicingExpr> _140735_s) {
	jule::Ptr<_220bceecb_Data> _140817_d = _220bebd50_evalExprKind(_self_, _140735_s.get()._field_Expr.get()._field_Kind);;
	if ((_140817_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_220bceecb_Data> _141318_l;;
	jule::Ptr<_220bceecb_Data> _141325_r;;
	({
		__jule_tuple_x_220bceecb_Data__jule_tuple_x_220bceecb_Data __jule_assign_result = _220bdd957_evalSlicingExprs(_self_, _140735_s);
		_141318_l = __jule_assign_result.__jule_result_arg0;
		_141325_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_141318_l == nullptr)) {
		return _140817_d;;
	};
	_140817_d.get()._field_Decl=false;
	_220bde507_checkSlicing(_self_.ptr(), _140817_d,_141318_l,_141325_r,_140735_s);
	if (_220bd088e_IsConst(_140817_d.ptr())) {
		_140817_d.get()._field_Decl=false;
		_140817_d.get()._field_Model=jule::Any(_140817_d.get()._field_Constant, &__jule_any_type48);
	} else if (_140817_d.get()._field_Decl) {
		_140817_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_220b2c3e0_SlicingExprModel> _143121_model = jule::new_ptr<_220b2c3e0_SlicingExprModel>(_220b2c3e0_SlicingExprModel{._field_Token=_140735_s.get()._field_Token, ._field_Expr=_140817_d.get()._field_Model, ._field_Left=_141318_l.get()._field_Model, });;
		if ((_141325_r != nullptr)) {
			_143121_model.get()._field_Right=_141325_r.get()._field_Model;
		};
		_140817_d.get()._field_Model=jule::Any(_143121_model, &__jule_any_type99);
	};
	return _140817_d;;
}



inline void _220bdebcd_castPtr(_220bd1a49_Eval* _self_, jule::Ptr<_220c0ae5d_TypeKind> _144430_t, jule::Ptr<_220bceecb_Data> _144448_d, jule::Ptr<_21d81d743_Token> _144458_errorToken) {
	_144448_d.get()._field_Constant=nullptr;
	jule::Ptr<_220c1443e_Sptr> _144613_sptr = _220c0d559_Sptr(_144448_d.get()._field_Kind.ptr());;
	if ((_144613_sptr != nullptr)) {
		if ((!(_220c0b667_Equal(_220c0d7bd_Ptr(_144430_t.ptr()).get()._field_Elem, _144613_sptr.get()._field_Elem)))) {
			_220bd2055_pushErr(&(*_self_), _144458_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_144448_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_144430_t.ptr()), &__jule_any_type6)}));
		};
		return;;
	};
	if ((!(_220bd2990_isUnsafe(&(*_self_))))) {
		_220bd2055_pushErr(&(*_self_), _144458_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_220c10baa_Prim> _145913_prim = _220c0d2e5_Prim(_144448_d.get()._field_Kind.ptr());;
	if (((_220c0d7bd_Ptr(_144448_d.get()._field_Kind.ptr()) == nullptr) && ((_145913_prim == nullptr) || (!(_220b27099_IsInt(_220c1101d_Str(_145913_prim.ptr()))))))) {
		_220bd2055_pushErr(&(*_self_), _144458_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_144448_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_144430_t.ptr()), &__jule_any_type6)}));
	};
}



inline void _220be0096_castStruct(_220bd1a49_Eval* _self_, jule::Ptr<_220c0ae5d_TypeKind> _146533_t, jule::Ptr<_220bceecb_Data> _146551_d, jule::Ptr<_21d81d743_Token> _146561_errorToken) {
	_146551_d.get()._field_Constant=nullptr;
	jule::Ptr<_220b376b4_Trait> _146717_tr = _220c0e9ab_Trait(_146551_d.get()._field_Kind.ptr());;
	if ((_146717_tr == nullptr)) {
		_220bd2055_pushErr(&(*_self_), _146561_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_146551_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_146533_t.ptr()), &__jule_any_type6)}));
		return;;
	};
	jule::Ptr<_21eec33d0_StructIns> _147317_s = _220c0e747_Struct(_146533_t.ptr());;
	_206111acb_pushReference(&(*_self_), _147317_s);
	if ((!(_21ee83e0c_IsImplements(_147317_s.get()._field_Decl.ptr(), _146717_tr)))) {
		_220bd2055_pushErr(&(*_self_), _146561_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_146551_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_146533_t.ptr()), &__jule_any_type6)}));
	};
}



inline void _220be045e_castRef(_220bd1a49_Eval* _self_, jule::Ptr<_220c0ae5d_TypeKind> _148130_t, jule::Ptr<_220bceecb_Data> _148148_d, jule::Ptr<_21d81d743_Token> _148158_errorToken) {
	_148148_d.get()._field_Constant=nullptr;
	jule::Ptr<_220c1443e_Sptr> _148317_sptr = _220c0d559_Sptr(_148130_t.ptr());;
	jule::Ptr<_220c179a3_Ptr> _148517_ptr = _220c0d7bd_Ptr(_148148_d.get()._field_Kind.ptr());;
	if (((_148517_ptr != nullptr) && _220c0b667_Equal(_148317_sptr.get()._field_Elem, _148517_ptr.get()._field_Elem))) {
		if ((!(_220bd2990_isUnsafe(&(*_self_))))) {
			_220bd2055_pushErr(&(*_self_), _148158_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_220c0e747_Struct(_148317_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_220be0096_castStruct(&(*_self_), _148317_sptr.get()._field_Elem,_148148_d,_148158_errorToken);
		return;;
	};
	_220bd2055_pushErr(&(*_self_), _148158_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_148148_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_148130_t.ptr()), &__jule_any_type6)}));
}



inline void _220be0827_castSlc(_220bd1a49_Eval* _self_, jule::Ptr<_220c0ae5d_TypeKind> _150330_t, jule::Ptr<_220bceecb_Data> _150348_d, jule::Ptr<_21d81d743_Token> _150358_errorToken) {
	_150348_d.get()._field_Constant=nullptr;
	if ((_220c0da32_Enum(_150348_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_220c0d2e5_Prim(_220c0da32_Enum(_150348_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_220c13dde_IsStr(_220c0d2e5_Prim(_220c0da32_Enum(_150348_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_220bd2055_pushErr(&(*_self_), _150358_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_150348_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_150330_t.ptr()), &__jule_any_type6)}));
			return;;
		};
	} else if (((_220c0d2e5_Prim(_150348_d.get()._field_Kind.ptr()) == nullptr) || (!(_220c13dde_IsStr(_220c0d2e5_Prim(_150348_d.get()._field_Kind.ptr()).ptr()))))) {
		_220bd2055_pushErr(&(*_self_), _150358_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_150348_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_150330_t.ptr()), &__jule_any_type6)}));
		return;;
	};
	_150330_t=_220c0e26e_Slc(_150330_t.ptr()).get()._field_Elem;
	jule::Ptr<_220c10baa_Prim> _151613_prim = _220c0d2e5_Prim(_150330_t.ptr());;
	if (((_151613_prim == nullptr) || ((!(_220c124b4_IsU8(_151613_prim.ptr()))) && (!(_220c11edb_IsI32(_151613_prim.ptr())))))) {
		_220bd2055_pushErr(&(*_self_), _150358_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_150348_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_150330_t.ptr()), &__jule_any_type6)}));
	};
}



inline void _220be0b46_castStr(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data> _152230_d, jule::Ptr<_21d81d743_Token> _152240_errorToken) {
	_152230_d.get()._field_Constant=nullptr;
	if ((_220c0da32_Enum(_152230_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_220b38374_Enum> _152521_e = _220c0da32_Enum(_152230_d.get()._field_Kind.ptr());;
		if (((_220c0d2e5_Prim(_152521_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _220c13dde_IsStr(_220c0d2e5_Prim(_152521_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_220c0d2e5_Prim(_152230_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_220c10baa_Prim> _153217_prim = _220c0d2e5_Prim(_152230_d.get()._field_Kind.ptr());;
		if (((!(_220c124b4_IsU8(_153217_prim.ptr()))) && (!(_220c11edb_IsI32(_153217_prim.ptr()))))) {
			_220bd2055_pushErr(&(*_self_), _152240_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type100),jule::Any(_220c0b359_Str(_152230_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
		};
		return;;
	};
	if ((_220c0e26e_Slc(_152230_d.get()._field_Kind.ptr()) == nullptr)) {
		_220bd2055_pushErr(&(*_self_), _152240_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type100),jule::Any(_220c0b359_Str(_152230_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
		return;;
	};
	jule::Ptr<_220c0ae5d_TypeKind> _154417_t = _220c0e26e_Slc(_152230_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_220c10baa_Prim> _154513_prim = _220c0d2e5_Prim(_154417_t.ptr());;
	if (((_154513_prim == nullptr) || ((!(_220c124b4_IsU8(_154513_prim.ptr()))) && (!(_220c11edb_IsI32(_154513_prim.ptr())))))) {
		_220bd2055_pushErr(&(*_self_), _152240_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type100),jule::Any(_220c0b359_Str(_152230_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
	};
}



inline void _220be100e_castInt(_220bd1a49_Eval* _self_, jule::Ptr<_220c0ae5d_TypeKind> _155130_t, jule::Ptr<_220bceecb_Data> _155148_d, jule::Ptr<_21d81d743_Token> _155158_errorToken) {
	if (_220bd088e_IsConst(_155148_d.ptr())) {
		jule::Ptr<_220c10baa_Prim> _155317_prim = _220c0d2e5_Prim(_155130_t.ptr());;
		{
			
			if (_220b26d35_IsSigInt(_155317_prim.get()._field_Kind)) {
				_case_begin_20612b91a:;
				{
					_220b2841e_SetI64(_155148_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_220b28078_AsI64(_155148_d.get()._field_Constant.ptr())));
				}
			}
			else if (_220b26e67_IsUnsigInt(_155317_prim.get()._field_Kind)) {
				_case_begin_20612b992:;
				{
					_220b28551_SetU64(_155148_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_220b281aa_AsU64(_155148_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_20612b860:;
		};
	} else {
		_155148_d.get()._field_Constant=nullptr;
	};
	if ((_220c0da32_Enum(_155148_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_220b38374_Enum> _156517_e = _220c0da32_Enum(_155148_d.get()._field_Kind.ptr());;
		if (_220b2730d_IsNum(_220c0b359_Str(_156517_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_220c0d559_Sptr(_155148_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_220c10baa_Prim> _157217_prim = _220c0d2e5_Prim(_155130_t.ptr());;
		if ((!(_220c13916_IsUintptr(_157217_prim.ptr())))) {
			_220bd2055_pushErr(&(*_self_), _155158_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_155148_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_155130_t.ptr()), &__jule_any_type6)}));
		};
		return;;
	};
	if ((_220c0d7bd_Ptr(_155148_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_220c10baa_Prim> _157917_prim = _220c0d2e5_Prim(_155130_t.ptr());;
		if (_220c13916_IsUintptr(_157917_prim.ptr())) {
		} else if ((!(_220bd2990_isUnsafe(&(*_self_))))) {
			_220bd2055_pushErr(&(*_self_), _155158_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_220c10baa_Prim> _158813_prim = _220c0d2e5_Prim(_155148_d.get()._field_Kind.ptr());;
	if (((_158813_prim != nullptr) && _220b2730d_IsNum(_220c1101d_Str(_158813_prim.ptr())))) {
		return;;
	};
	_220bd2055_pushErr(&(*_self_), _155158_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_155148_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_155130_t.ptr()), &__jule_any_type6)}));
}



inline void _220be13c7_castNum(_220bd1a49_Eval* _self_, jule::Ptr<_220c0ae5d_TypeKind> _159630_t, jule::Ptr<_220bceecb_Data> _159648_d, jule::Ptr<_21d81d743_Token> _159658_errorToken) {
	if (_220bd088e_IsConst(_159648_d.ptr())) {
		jule::Ptr<_220c10baa_Prim> _159817_prim = _220c0d2e5_Prim(_159630_t.ptr());;
		{
			
			if (_220b271cb_IsFloat(_159817_prim.get()._field_Kind)) {
				_case_begin_206135649:;
				{
					_220b288e7_SetF64(_159648_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_220b282dc_AsF64(_159648_d.get()._field_Constant.ptr())));
				}
			}
			else if (_220b26d35_IsSigInt(_159817_prim.get()._field_Kind)) {
				_case_begin_2061356c1:;
				{
					_220b2841e_SetI64(_159648_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_220b28078_AsI64(_159648_d.get()._field_Constant.ptr())));
				}
			}
			else if (_220b26e67_IsUnsigInt(_159817_prim.get()._field_Kind)) {
				_case_begin_206135748:;
				{
					_220b28551_SetU64(_159648_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_220b281aa_AsU64(_159648_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_20613557d:;
		};
	} else {
		_159648_d.get()._field_Constant=nullptr;
	};
	if ((_220c0da32_Enum(_159648_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_220b38374_Enum> _161217_e = _220c0da32_Enum(_159648_d.get()._field_Kind.ptr());;
		if (_220b2730d_IsNum(_220c0b359_Str(_161217_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_220c10baa_Prim> _161813_prim = _220c0d2e5_Prim(_159648_d.get()._field_Kind.ptr());;
	if (((_161813_prim != nullptr) && _220b2730d_IsNum(_220c1101d_Str(_161813_prim.ptr())))) {
		return;;
	};
	_220bd2055_pushErr(&(*_self_), _159658_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_159648_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_159630_t.ptr()), &__jule_any_type6)}));
}



inline void _220be1790_castPrim(_220bd1a49_Eval* _self_, jule::Ptr<_220c0ae5d_TypeKind> _162631_t, jule::Ptr<_220bceecb_Data> _162649_d, jule::Ptr<_21d81d743_Token> _162659_errorToken) {
	jule::Ptr<_220c10baa_Prim> _162713_prim = _220c0d2e5_Prim(_162631_t.ptr());;
	{
		
		if (_220c14153_IsAny(_162713_prim.ptr())) {
			_case_begin_20613b298:;
			{
				_162649_d.get()._field_Constant=nullptr;
			}
		}
		else if (_220c13dde_IsStr(_162713_prim.ptr())) {
			_case_begin_20613b81a:;
			{
				_220be0b46_castStr(&(*_self_), _162649_d,_162659_errorToken);
			}
		}
		else if (_220b27099_IsInt(_220c1101d_Str(_162713_prim.ptr()))) {
			_case_begin_20613b881:;
			{
				_220be100e_castInt(&(*_self_), _162631_t,_162649_d,_162659_errorToken);
			}
		}
		else if (_220b2730d_IsNum(_220c1101d_Str(_162713_prim.ptr()))) {
			_case_begin_20613b8e7:;
			{
				_220be13c7_castNum(&(*_self_), _162631_t,_162649_d,_162659_errorToken);
			}
		}
		else {
			_case_begin_20613b7a4:;
			{
				_220bd2055_pushErr(&(*_self_), _162659_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_162631_t.ptr()), &__jule_any_type6)}));
			}
		}
		_match_end_20613b73d:;
	};
}



inline void _220be1aae_castConstant(_220bd1a49_Eval* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _164336_t, jule::Ptr<_220bceecb_Data>& _164355_d) {
	if (((_164355_d == nullptr) || (!(_220bd088e_IsConst(_164355_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_220c10baa_Prim> _164713_prim = _220c0d2e5_Prim(_164336_t.ptr());;
	_220c08125_castConstByType(_164713_prim.get()._field_Kind,_164355_d);
	_164355_d.get()._field_Model=jule::Any(_164355_d.get()._field_Constant, &__jule_any_type48);
}



inline void _220be1e77_castTypeEnum(_220bd1a49_Eval* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _165236_t, jule::Ptr<_220bceecb_Data>& _165255_d, jule::Ptr<_21d81d743_Token>& _165270_errorToken) {
	jule::I64 _165313_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_220b7446a_checkTypeCompatibility((*_self_)._field_s, _165255_d.get()._field_Kind,_165236_t,_165270_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_165313_n);
		_220bd2055_pushErr(&(*_self_), _165270_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_165255_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_165236_t.ptr()), &__jule_any_type6)}));
	};
	_165255_d.get()._field_Constant=nullptr;
}



inline void _220be2340_castTypeEnumT(_220bd1a49_Eval* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _166137_t, jule::Ptr<_220bceecb_Data>& _166156_d, jule::Ptr<_21d81d743_Token>& _166171_errorToken) {
	jule::I64 _166213_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_220b7446a_checkTypeCompatibility((*_self_)._field_s, _166137_t,_166156_d.get()._field_Kind,_166171_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_166213_n);
		_220bd2055_pushErr(&(*_self_), _166171_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_166156_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_166137_t.ptr()), &__jule_any_type6)}));
	};
	_166156_d.get()._field_Constant=nullptr;
}



inline jule::Ptr<_220bceecb_Data> _220be2791_evalCastByTypeNData(_220bd1a49_Eval* _self_, jule::Ptr<_220c0ae5d_TypeKind> _167042_t, jule::Ptr<_220bceecb_Data> _167060_d, jule::Ptr<_21d81d743_Token> _167074_errorToken) {
	if (((_167060_d != nullptr) && _167060_d.get()._field_Decl)) {
		_220bd2055_pushErr(&(*_self_), _167074_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_220bd03b6_IsNil(_167060_d.ptr())) {
			_case_begin_20614746e:;
			{
				if ((!(_220c0c844_NilCompatible(_167042_t.ptr())))) {
					_220bd2055_pushErr(&(*_self_), _167074_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type6),jule::Any(_220c0b359_Str(_167042_t.ptr()), &__jule_any_type6)}));
				};
				_167060_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_220c0d2e5_Prim(_167060_d.get()._field_Kind.ptr()) != nullptr) && _220c14153_IsAny(_220c0d2e5_Prim(_167060_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2061471e9:;
			{
				if ((_220c0da32_Enum(_167042_t.ptr()) != nullptr)) {
					_220bd2055_pushErr(&(*_self_), _167074_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_220bd2374_pushSugggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_220c0dc96_TypeEnum(_167042_t.ptr()) != nullptr)) {
					_220bd2055_pushErr(&(*_self_), _167074_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
				_167060_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_220c0dc96_TypeEnum(_167060_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206147260:;
			{
				_220be1e77_castTypeEnum(&(*_self_), _167042_t,_167060_d,_167074_errorToken);
			}
		}
		else if ((_220c0dc96_TypeEnum(_167042_t.ptr()) != nullptr)) {
			_case_begin_2061472c6:;
			{
				_220be2340_castTypeEnumT(&(*_self_), _167042_t,_167060_d,_167074_errorToken);
			}
		}
		else if ((_220c0d7bd_Ptr(_167042_t.ptr()) != nullptr)) {
			_case_begin_206147e75:;
			{
				_220bdebcd_castPtr(&(*_self_), _167042_t,_167060_d,_167074_errorToken);
			}
		}
		else if ((_220c0d559_Sptr(_167042_t.ptr()) != nullptr)) {
			_case_begin_206147edb:;
			{
				_220be045e_castRef(&(*_self_), _167042_t,_167060_d,_167074_errorToken);
			}
		}
		else if ((_220c0e26e_Slc(_167042_t.ptr()) != nullptr)) {
			_case_begin_206148052:;
			{
				_220be0827_castSlc(&(*_self_), _167042_t,_167060_d,_167074_errorToken);
			}
		}
		else if ((_220c0e747_Struct(_167042_t.ptr()) != nullptr)) {
			_case_begin_2061480b8:;
			{
				_220be0096_castStruct(&(*_self_), _167042_t,_167060_d,_167074_errorToken);
			}
		}
		else if ((_220c0d2e5_Prim(_167042_t.ptr()) != nullptr)) {
			_case_begin_20614812e:;
			{
				_220be1790_castPrim(&(*_self_), _167042_t,_167060_d,_167074_errorToken);
				_220be1aae_castConstant(&(*_self_), _167042_t,_167060_d);
			}
		}
		else {
			_case_begin_2061470c8:;
			{
				_220bd2055_pushErr(&(*_self_), _167074_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_167042_t.ptr()), &__jule_any_type6)}));
				_167060_d=nullptr;
			}
		}
		_match_end_206147062:;
	};
	if ((_167060_d == nullptr)) {
		return nullptr;;
	};
	_167060_d.get()._field_Mutable=(_167060_d.get()._field_Mutable || ((!(_220c0c5d0_Mutable(_167060_d.get()._field_Kind.ptr()))) && _220c0c5d0_Mutable(_167042_t.ptr())));
	_167060_d.get()._field_Lvalue=false;
	_167060_d.get()._field_Decl=false;
	if (((_220c0da32_Enum(_167060_d.get()._field_Kind.ptr()) == nullptr) || (!(_220c0b667_Equal(_220c0da32_Enum(_167060_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _167042_t))))) {
		_220c075db_applyCastKind(_167060_d,_167042_t);
		_167060_d.get()._field_Model.cast_ptr<_220b2b576_CastingExprModel>(&__jule_any_type101).get()._field_Token=_167074_errorToken;
	} else {
		_167060_d.get()._field_Kind=_167042_t;
	};
	_167060_d.get()._field_untyped=false;
	if (_220bd088e_IsConst(_167060_d.ptr())) {
		_167060_d.get()._field_Constant.get()._field_Kind=_220c0d2e5_Prim(_167042_t.ptr()).get()._field_Kind;
	};
	return _167060_d;;
}



inline jule::Ptr<_220bceecb_Data> _220be2be2_evalCastT(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_220c0ae5d_TypeKind>& _173534_t, jule::Ptr<_21eea5ec8_Expr>& _173553_e, jule::Ptr<_21d81d743_Token>& _173568_et) {
	jule::Ptr<_220c0ae5d_TypeKind> _173617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_173617_prefix;
	});;
	if ((_220c0e26e_Slc(_173534_t.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _173553_e.get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type102) {
				_case_begin_206155d1d:;
				{
					_self_.get()._field_prefix=_173534_t;
				}
			}
			_match_end_206155b64:;
		};
	};
	jule::Ptr<_220bceecb_Data> _174517_d = _220bebd50_evalExprKind(_self_, _173553_e.get()._field_Kind);;
	if (((_174517_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _174517_d;;
	};
	return _220be2791_evalCastByTypeNData(_self_.ptr(), _173534_t,_174517_d,_173568_et);;
}



inline jule::Ptr<_220bceecb_Data> _220be3000_evalCast(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eead95e_CastExpr> _175232_c) {
	jule::Ptr<_220c1033b_TypeSymbol> _175317_t = _220b33490_buildType(_175232_c.get()._field_Kind);;
	jule::Bool _175413_ok = _220b7238b_checkType(_self_.get()._field_s, _175317_t,_self_.get()._field_lookup);;
	if ((!(_175413_ok))) {
		return nullptr;;
	};
	return _220be2be2_evalCastT(_self_, _175317_t.get()._field_Kind,_175232_c.get()._field_Expr,_175232_c.get()._field_Kind.get()._field_Token);;
}



inline jule::Ptr<_220bceecb_Data> _220be330d_evalNsSelection(_220bd1a49_Eval* _self_, jule::Ptr<_21eeadd16_NsSelectionExpr> _176134_s) {
	jule::Str _176213_path = _220c28c06_buildLinkPathByTokens(_176134_s.get()._field_Ns);;
	jule::Ptr<_220b61325_ImportInfo> _176317_imp = _220c2bc3c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._220c2a202_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)>([=](jule::Ptr<_220b61325_ImportInfo> _176352_imp) mutable -> jule::Bool {
		if (((_176134_s.get()._field_Ns.len() == 1LL) && (_176352_imp.get()._field_Alias == _176213_path))) {
			return true;;
		};
		return ((_176352_imp.get()._field_LinkPath == _176213_path) && _220b63e82_isAccessibleViaSelection(_176352_imp.ptr()));;
	}));;
	if ((_176317_imp == nullptr)) {
		_220bd2055_pushErr(&(*_self_), _176134_s.get()._field_Ns[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_176213_path, &__jule_any_type6)}));
		return nullptr;;
	};
	jule::Trait<_220c2bc3c_Lookup> _177517_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_220c2bc3c_Lookup>(_176317_imp, 1);
	;
	_220bd272b_disallowBuiltin(&(*_self_));
	jule::Any _178017_def = _220bd5069_getDef(&(*_self_), _176134_s.get()._field_Ident.get()._field_Kind,false);;
	_220bd2550_allowBuiltin(&(*_self_));
	(*_self_)._field_lookup=_177517_lookup;
	jule::Ptr<_220bceecb_Data> _178317_d = _220bd8a51_evalDef(&(*_self_), _178017_def,_176134_s.get()._field_Ident);;
	return _178317_d;;
}



inline jule::Ptr<_220bceecb_Data> _220be375e_evalStructLitExplicit(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eec33d0_StructIns> _178745_s, jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _178813_exprs, jule::Ptr<_21d81d743_Token> _178833_errorToken) {
	jule::Bool _178913_ok = _220b6d4ca_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_178745_s.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_178745_s.get()._field_Generics.len()),_178833_errorToken);;
	if ((!(_178913_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _178745_s.get()._field_Decl))) {
		_220bd2055_pushErr(_self_.ptr(), _178833_errorToken,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_178745_s.get()._field_Decl.get()._field_Ident, &__jule_any_type6)}));
	};
	_206111acb_pushReference(_self_.ptr(), _178745_s);
	_220bd6e5b_checkDeprecated(_self_.ptr(), _178745_s.get()._field_Decl.get()._field_Directives,_178833_errorToken);
	_220bc4674_structLitChecker _180217_slc = _220bc4674_structLitChecker{._field_e=_self_, ._field_errorToken=_178833_errorToken, ._field_s=_178745_s, };;
	_220bc5c19_check(&_180217_slc, _178813_exprs);
	jule::Ptr<_220bceecb_Data> _180917_d = jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_178745_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_220b2b19c_StructLitExprModel>(_220b2b19c_StructLitExprModel{._field_Strct=_178745_s, ._field_Args=_180217_slc._field_args}), &__jule_any_type103), });;
	if (_178745_s.get()._field_Decl.get()._field_CppLinked) {
		_180917_d.get()._field_Kind.get()._field_CppIdent=_178745_s.get()._field_Decl.get()._field_Ident;
	};
	return _180917_d;;
}



inline jule::Ptr<_220bceecb_Data> _220be3a6c_evalStructLit(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eeb0ee4_StructLit> _182537_lit) {
	jule::Ptr<_220c1033b_TypeSymbol> _182617_t = _220b33490_buildType(_182537_lit.get()._field_Kind);;
	jule::Bool _182713_ok = _220b7238b_checkType(_self_.get()._field_s, _182617_t,_self_.get()._field_lookup);;
	if ((!(_182713_ok))) {
		return nullptr;;
	};
	jule::Ptr<_21eec33d0_StructIns> _183217_s = _220c0e747_Struct(_182617_t.get()._field_Kind.ptr());;
	if ((_183217_s == nullptr)) {
		if ((_220c0d559_Sptr(_182617_t.get()._field_Kind.ptr()) != nullptr)) {
			_183217_s=_220c0e747_Struct(_220c0d559_Sptr(_182617_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_183217_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_220bd2055_pushErr(_self_.ptr(), _182537_lit.get()._field_Kind.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_220bceecb_Data> _184517_d = _220be375e_evalStructLitExplicit(_self_, _183217_s,_182537_lit.get()._field_Exprs,_182537_lit.get()._field_Kind.get()._field_Token);;
	if ((_220c0d559_Sptr(_182617_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_220b2b19c_StructLitExprModel> _184721_model = _184517_d.get()._field_Model.cast_ptr<_220b2b19c_StructLitExprModel>(&__jule_any_type103);;
		_220c05e9c_makeStructLitAlloc(_184517_d,_184721_model);
	};
	return _184517_d;;
}



inline _220c197c9_typeChecker _220be3cd1_typeChecker(_220bd1a49_Eval* _self_) {
	return _220b7127a_typeChecker((*_self_)._field_s, (*_self_)._field_lookup,nullptr,nullptr);;
}



inline jule::Ptr<_220bceecb_Data> _220be40de_evalType(_220bd1a49_Eval* _self_, jule::Ptr<_21eea19a7_TypeDecl> _185731_t) {
	jule::Ptr<_220c1033b_TypeSymbol> _185817_tk = _220b33490_buildType(_185731_t);;
	jule::Bool _185913_ok = _220b7238b_checkType((*_self_)._field_s, _185817_tk,(*_self_)._field_lookup);;
	if ((!(_185913_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=_185817_tk.get()._field_Kind, ._field_Model=jule::Any(_185817_tk.get()._field_Kind, &__jule_any_type91), ._field_Decl=true, });;
}



inline void _220be440d_callTypeFn(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eeaed17_FnCallExpr>& _187035_fc, jule::Ptr<_220bceecb_Data>& _187057_d) {
	if ((_187035_fc.get()._field_Args.len() < 1LL)) {
		_220bd2055_pushErr(_self_.ptr(), _187035_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type6)}));
	} else if ((_187035_fc.get()._field_Args.len() > 1LL)) {
		_220bd2055_pushErr(_self_.ptr(), _187035_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	} else if (_187035_fc.get()._field_IsCo) {
		_220bd2055_pushErr(_self_.ptr(), _187035_fc.get()._field_Token,jule::Str("concurrent calls are not allowed for type-cast calls", 52),jule::Slice<jule::Any>());
		_187057_d=nullptr;
		return;;
	} else if ((_187035_fc.get()._field_Exception != nullptr)) {
		_220bd2055_pushErr(_self_.ptr(), _187035_fc.get()._field_Token,jule::Str("exceptionals are not supported for type-cast call", 49),jule::Slice<jule::Any>());
		_187057_d=nullptr;
		return;;
	};
	if ((_187035_fc.get()._field_Args.len() > 0LL)) {
		jule::Ptr<_21eea5ec8_Expr> _188621_arg = _187035_fc.get()._field_Args[0LL];;
		_187057_d=_220be2be2_evalCastT(_self_, _187057_d.get()._field_Kind,_188621_arg,_188621_arg.get()._field_Token);
		return;;
	};
	if ((_187057_d != nullptr)) {
		_187057_d.get()._field_Decl=false;
	};
}



inline void _220be472c_callBuiltinFn(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eeaed17_FnCallExpr>& _189638_fc, jule::Ptr<_220bceecb_Data>& _189660_d) {
	_189660_d=_220c0e4d3_Fn(_189660_d.get()._field_Kind.ptr()).get()._field_caller(_self_,_189638_fc,_189660_d);
	if ((_189660_d == nullptr)) {
		return;;
	};
	_189660_d.get()._field_Mutable=true;
}



inline void _220be4a6d_checkFnOfConcurrentCall(_220bd1a49_Eval* _self_, jule::Ptr<_220b31a10_FnIns>& _190443_f, jule::Ptr<_21d81d743_Token> _190454_errorToken) {
	if (_220bd2990_isUnsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _190443_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_206175bd9:;
		if (it != expr.end()) {
			jule::Ptr<_220b31823_ParamIns> &_190816_p = *it;
			{
				if (_22001a45a_IsSelf(_190816_p.get()._field_Decl.ptr())) {
					if ((!(_22001b35c_IsRef(_190816_p.get()._field_Decl.ptr())))) {
						_220bd2055_pushErr(&(*_self_), _190454_errorToken,jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97),jule::Slice<jule::Any>());
						_220bd2374_pushSugggestion(&(*_self_), jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99),jule::Slice<jule::Any>());
					};
				};
				if (_190816_p.get()._field_Decl.get()._field_Reference) {
					_220bd2055_pushErr(&(*_self_), _190454_errorToken,jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96),jule::Slice<jule::Any>());
					_220bd2374_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_206175bd9:;
			++it;
			goto _iter_begin_206175bd9;
		}
		_iter_end_206175bd9:;
	};
}



inline void _220be4e69_processExceptionalHandler(_220bd1a49_Eval* _self_, jule::Ptr<_220b31a10_FnIns>& _192349_f, jule::Ptr<_21eeaed17_FnCallExpr>& _192365_fc, jule::Ptr<_220bceecb_Data>& _192387_d) {
	jule::Bool _192413_resultNeeded = ((!(_22001c270_IsVoid(_192349_f.get()._field_Decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_220b49682_scopeChecker> _192517_csc = nullptr;;
	jule::Ptr<_220b42b20_Scope> _192617_ch = nullptr;;
	jule::Ptr<_220b2b763_FnCallExprModel> _192817_model = _192387_d.get()._field_Model.cast_ptr<_220b2b763_FnCallExprModel>(&__jule_any_type35);;
	jule::Ptr<_220b49682_scopeChecker> _193217_sc = (*_self_)._field_lookup.operator jule::Ptr<_220b49682_scopeChecker>();;
	_192517_csc=_220b596e7_newChildChecker(_193217_sc);
	if (_192413_resultNeeded) {
		_192517_csc.get()._field_result=_192349_f;
	};
	_192617_ch=_220b4e07c_getChild(_193217_sc.ptr());
	_192365_fc.get()._field_Exception.get()._field_Parent=_193217_sc.get()._field_tree;
	_192517_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_192517_csc.get()._field_table.get()._field_Vars,1);_192517_csc.get()._field_table.get()._field_Vars.__push(_220c062dd_buildErrorVar(_192617_ch,_192365_fc));;
	_220b4e445_checkChildSsc(_193217_sc, _192365_fc.get()._field_Exception,_192617_ch,_192517_csc);
	_192817_model.get()._field_Assigned=_192413_resultNeeded;
	_192817_model.get()._field_Except=_192617_ch;
	if ((_192413_resultNeeded && (_192517_csc.get()._field_result != nullptr))) {
		_220bd2055_pushErr(&(*_self_), _192365_fc.get()._field_Token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _220be5299_callFn(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eeaed17_FnCallExpr>& _195031_fc, jule::Ptr<_220bceecb_Data>& _195053_d) {
	jule::Ptr<_220b31a10_FnIns> _195117_f = _220c0e4d3_Fn(_195053_d.get()._field_Kind.ptr());;
	if (_220b321c5_IsBuiltin(_195117_f.ptr())) {
		_220be472c_callBuiltinFn(_self_, _195031_fc,_195053_d);
		return;;
	};
	if ((_220bd2c04_isGlobal(_self_.ptr()) && _195117_f.get()._field_Decl.get()._field_Exceptional)) {
		_220bd2055_pushErr(_self_.ptr(), _195031_fc.get()._field_Token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_220bd2374_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_195053_d=nullptr;
		return;;
	};
	if (((!(_22004d735_IsMethod(_195117_f.get()._field_Decl.ptr()))) && _220c27d59_hasDirective(_195117_f.get()._field_Decl.get()._field_Directives,jule::Str("test", 4)))) {
		_220bd2055_pushErr(_self_.ptr(), _195031_fc.get()._field_Token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_195053_d=nullptr;
		return;;
	};
	if (((((!(_195053_d.get()._field_Mutable)) && _22004d735_IsMethod(_195117_f.get()._field_Decl.ptr())) && (!(_195117_f.get()._field_Decl.get()._field_Statically))) && _195117_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_220bd2055_pushErr(_self_.ptr(), _195031_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_220bd2990_isUnsafe(_self_.ptr()))) && _195117_f.get()._field_Decl.get()._field_Unsafety)) {
		_220bd2055_pushErr(_self_.ptr(), _195031_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _197517_dynamicAnnotation = (((_195117_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_195117_f.get()._field_Generics.len() == 0LL)) && (_195117_f.get()._field_Params.len() > 0LL));;
	if (_197517_dynamicAnnotation) {
		_195117_f.get()._field_Generics=jule::Slice<jule::Ptr<_220c09731_InsGeneric>>::alloc(_195117_f.get()._field_Decl.get()._field_Generics.len(), _195117_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_195117_f.get()._field_Generics.len() != _195117_f.get()._field_Decl.get()._field_Generics.len())) {
		_220b6d4ca_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_195117_f.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_195117_f.get()._field_Generics.len()),_195031_fc.get()._field_Token);
		_195053_d=nullptr;
		return;;
	};
	jule::Ptr<_220b69471_Sema> _198417_old = _self_.get()._field_s;;
	if ((_195117_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_195117_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_198417_old != _self_.get()._field_s)) {
			_198417_old.get()._field_errors=jule::append(_198417_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_198417_old;
	});;
	_220bc1c6a_fnCallArgChecker _199717_fcac = _220bc1c6a_fnCallArgChecker{._field_e=_self_, ._field_args=_195031_fc.get()._field_Args, ._field_errorToken=_195031_fc.get()._field_Token, ._field_dynamicAnnotation=_197517_dynamicAnnotation, };;
	if ((!(_197517_dynamicAnnotation))) {
		if ((!(_195117_f.get()._field_reloaded))) {
			jule::Bool _200621_ok = _220b763d4_reloadFnInsTypes(_self_.get()._field_s, _195117_f);;
			_195117_f.get()._field_reloaded=true;
			if ((!(_200621_ok))) {
				_195053_d=nullptr;
				return;;
			};
		};
		jule::Ptr<_220b31a10_FnIns> _201321_existInstance = _22000b869_appendInstance(_195117_f.get()._field_Decl.ptr(), _195117_f);;
		if ((_201321_existInstance != nullptr)) {
			_195117_f=_201321_existInstance;
		};
	} else if ((!(_220b74cc8_buildFnNonGenericTypeKinds(_self_.get()._field_s, _195117_f,_199717_fcac._field_ignored)))) {
		_195053_d=nullptr;
		return;;
	};
	_199717_fcac._field_f=_195117_f;
	jule::Bool _202417_ok = false;;
	if ((_195117_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_220b69471_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_220b69471_Sema> _1___jule_assign_arg = _198417_old;
			_198417_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_202417_ok=_220bc4135_check(&_199717_fcac);
		({
			jule::Ptr<_220b69471_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_220b69471_Sema> _1___jule_assign_arg = _198417_old;
			_198417_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_202417_ok=_220bc4135_check(&_199717_fcac);
	};
	if (_197517_dynamicAnnotation) {
		if ((!(_202417_ok))) {
			_195053_d=nullptr;
			return;;
		};
		if ((!(_220bdced9_checkGenericFn(_self_, _195117_f,_195031_fc.get()._field_Token,_195053_d.get()._field_Model)))) {
			_195053_d=nullptr;
			return;;
		};
	};
	jule::Any _204417_callModel = _195053_d.get()._field_Model;;
	if (_22001c270_IsVoid(_195117_f.get()._field_Decl.ptr())) {
		_195053_d=_220c077d9_buildVoidData();
	} else {
		_195053_d.get()._field_Kind=_195117_f.get()._field_Result;
		_195053_d.get()._field_Lvalue=false;
	};
	jule::Ptr<_220b2b763_FnCallExprModel> _205317_model = jule::new_ptr<_220b2b763_FnCallExprModel>(_220b2b763_FnCallExprModel{._field_Token=_195031_fc.get()._field_Token, ._field_Func=_195117_f, ._field_IsCo=_195031_fc.get()._field_IsCo, ._field_Expr=_204417_callModel, ._field_Args=_199717_fcac._field_argModels, });;
	_195053_d.get()._field_Model=jule::Any(_205317_model, &__jule_any_type35);
	_195053_d.get()._field_Mutable=true;
	if (_195117_f.get()._field_Decl.get()._field_Exceptional) {
		if (_195031_fc.get()._field_IsCo) {
			_220b6c133_pushErr(_self_.get()._field_s.ptr(), _195031_fc.get()._field_Token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
			_220b6c452_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
		};
		{
			
			if (_21eeb017a_Unhandled(_195031_fc.ptr())) {
				_case_begin_2061939c6:;
				{
					_220bd2055_pushErr(_self_.ptr(), _195031_fc.get()._field_Token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_220bd2374_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_21eeb03de_Ignored(_195031_fc.ptr())) {
				_case_begin_20619391b:;
				{
					goto _match_end_2061929a3;
				}
			}
			else {
				_case_begin_206192a19:;
				{
					_220be4e69_processExceptionalHandler(_self_.ptr(), _195117_f,_195031_fc,_195053_d);
				}
			}
			_match_end_2061929a3:;
		};
	} else if ((!(_21eeb017a_Unhandled(_195031_fc.ptr())))) {
		_220bd2055_pushErr(_self_.ptr(), _195031_fc.get()._field_Token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
	if (_195031_fc.get()._field_IsCo) {
		_220be4a6d_checkFnOfConcurrentCall(_self_.ptr(), _205317_model.get()._field_Func,_195031_fc.get()._field_Token);
	};
}



inline jule::Ptr<_220bceecb_Data> _220be55a7_evalFnCall(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eeaed17_FnCallExpr> _208834_fc) {
	jule::Ptr<_220c0ae5d_TypeKind> _208917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_208917_prefix;
	});;
	{
		auto &_match_expr{ _208834_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_206196a40:;
			{
				if ((_208834_fc.get()._field_Expr.get()._field_Token.get()._field_Kind == jule::Str("error", 5))) {
					return _220cbc849_builtinCallerError(_self_,_208834_fc);;
				};
			}
		}
		_match_end_2061969da:;
	};
	jule::Ptr<_220bceecb_Data> _210217_d = _220bebd50_evalExprKind(_self_, _208834_fc.get()._field_Expr.get()._field_Kind);;
	if ((_210217_d == nullptr)) {
		return nullptr;;
	};
	if (_210217_d.get()._field_Decl) {
		_220be440d_callTypeFn(_self_, _208834_fc,_210217_d);
		return _210217_d;;
	};
	if ((_220c0e4d3_Fn(_210217_d.get()._field_Kind.ptr()) == nullptr)) {
		_220bd2055_pushErr(_self_.ptr(), _208834_fc.get()._field_Token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_220be5299_callFn(_self_, _208834_fc,_210217_d);
	return _210217_d;;
}



inline jule::Ptr<_220bceecb_Data> _220be595e_evalEnumStatic(_220bd1a49_Eval* _self_, jule::Ptr<_220b38374_Enum> _212137_enm, jule::Ptr<_21d81d743_Token> _212149_ident) {
	jule::Ptr<_220bceecb_Data> _212217_d = jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_212137_enm, 3)}), });;
	jule::Ptr<_220b38055_EnumItem> _212817_item = _220b387c5_FindItem(_212137_enm.ptr(), _212149_ident.get()._field_Kind);;
	if ((_212817_item == nullptr)) {
		_220bd2055_pushErr(&(*_self_), _212149_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_212137_enm.get()._field_Ident, &__jule_any_type6),jule::Any(_212149_ident.get()._field_Kind, &__jule_any_type6)}));
	} else {
		_212217_d.get()._field_Constant=jule::new_ptr<_220074816_Const>((*(_212817_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_212217_d.get()._field_Model=jule::Any(_212217_d.get()._field_Constant, &__jule_any_type48);
		_220c07d6c_applyCastModelByEnum(_212217_d,_212137_enm);
	};
	return _212217_d;;
}



inline jule::Ptr<_220bceecb_Data> _220be5d16_evalTypeEnumStatic(_220bd1a49_Eval* _self_, jule::Ptr<_220b38ae4_TypeEnum> _214041_enm, jule::Ptr<_21d81d743_Token> _214057_ident) {
	jule::Ptr<_220b38907_TypeEnumItem> _214117_item = _220b39188_FindItem(_214041_enm.ptr(), _214057_ident.get()._field_Kind);;
	if ((_214117_item == nullptr)) {
		_220bd2055_pushErr(&(*_self_), _214057_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_214041_enm.get()._field_Ident, &__jule_any_type6),jule::Any(_214057_ident.get()._field_Kind, &__jule_any_type6)}));
		return nullptr;;
	};
	{
		
		if ((_220c0da32_Enum(_214117_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20619ea9d:;
			{
				return _220bd55ec__evalEnum(&(*_self_), _220c0da32_Enum(_214117_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_220c0dc96_TypeEnum(_214117_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2061a0263:;
			{
				return _220bd5cb2__evalTypeEnum(&(*_self_), _220c0dc96_TypeEnum(_214117_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_220c0e747_Struct(_214117_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20619e5c5:;
			{
				return _220bd6477__evalStruct(&(*_self_), _220c0e747_Struct(_214117_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_20619d23e:;
			{
				jule::Ptr<_220bceecb_Data> _215421_d = jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=_214117_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_215421_d.get()._field_Model=jule::Any(_215421_d.get()._field_Kind, &__jule_any_type91);
				return _215421_d;;
			}
		}
		_match_end_20619e43d:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220be61bd_evalStructStatic(_220bd1a49_Eval* _self_, jule::Ptr<_21eec33d0_StructIns> _216339_s, jule::Ptr<_21d81d743_Token> _216354_ident) {
	jule::Ptr<_220bceecb_Data> _216417_d = jule::new_ptr<_220bceecb_Data>();;
	;
	jule::Ptr<_220b31636_Fn> _216817_method = _21ee97382_FindMethod(_216339_s.ptr(), _216354_ident.get()._field_Kind,true);;
	if ((_216817_method != nullptr)) {
		if ((!(_220b6c809_isAccessibleDefine((*_self_)._field_s.ptr(), _216817_method.get()._field_Public,_216817_method.get()._field_Token)))) {
			_220bd2055_pushErr(&(*_self_), _216354_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_216354_ident.get()._field_Kind, &__jule_any_type6)}));
			_220bd2374_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_220b31a10_FnIns> _217521_ins = _22001c89c_instance(_216817_method);;
		_217521_ins.get()._field_Owner=_216339_s;
		_206055aca_pushReference(&(*_self_), _217521_ins);
		_216417_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2cbd7_StructStaticIdentExprModel>(_220b2cbd7_StructStaticIdentExprModel{._field_Structure=_216339_s, ._field_Expr=_216417_d.get()._field_Model, ._field_Method=_217521_ins}), &__jule_any_type104);
		_216417_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_217521_ins, 1)});
		return _216417_d;;
	};
	jule::Ptr<_220b8746c_Var> _218917_sttc = _21ee4067c_FindStatic(_216339_s.ptr(), _216354_ident.get()._field_Kind);;
	if ((_218917_sttc != nullptr)) {
		return _220bd82e2_evalVar(&(*_self_), _218917_sttc,_216354_ident);;
	};
	_220bd2055_pushErr(&(*_self_), _216354_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_216339_s.get()._field_Decl.get()._field_Ident, &__jule_any_type6),jule::Any(_216354_ident.get()._field_Kind, &__jule_any_type6)}));
	return nullptr;;
}



inline jule::Ptr<_220bceecb_Data> _220be661e_evalTraitSubIdent(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data> _219840_d, jule::Ptr<_220b376b4_Trait> _219854_trt, jule::Ptr<_21d81d743_Token> _219871_ident) {
	jule::Ptr<_220b31636_Fn> _219917_f = _220b37c47_FindMethod(_219854_trt.ptr(), _219871_ident.get()._field_Kind);;
	if ((_219917_f == nullptr)) {
		_220bd2055_pushErr(&(*_self_), _219871_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_219854_trt.get()._field_Ident, &__jule_any_type6),jule::Any(_219871_ident.get()._field_Kind, &__jule_any_type6)}));
		return nullptr;;
	};
	return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_22001c89c_instance(_219917_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_220b2c5cc_TraitSubIdentExprModel>(_220b2c5cc_TraitSubIdentExprModel{._field_Token=_219871_ident, ._field_Expr=_219840_d.get()._field_Model, ._field_Method=_219917_f, ._field_Trt=_219854_trt}), &__jule_any_type71), });;
}



inline jule::Ptr<_220bceecb_Data> _220be6b19_evalStructSubIdent(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data> _221741_d, jule::Ptr<_21eec33d0_StructIns> _221755_s, jule::Ptr<_21eeae289_SubIdentExpr> _221774_si, jule::Bool _221793_ref) {
	jule::Ptr<_21eec31e3_FieldIns> _221817_f = _21ee986a2_FindField(_221755_s.ptr(), _221774_si.get()._field_Ident.get()._field_Kind);;
	if ((_221817_f != nullptr)) {
		if ((!(_220b6c809_isAccessibleDefine((*_self_)._field_s.ptr(), _221817_f.get()._field_Decl.get()._field_Public,_221817_f.get()._field_Decl.get()._field_Token)))) {
			_220bd2055_pushErr(&(*_self_), _221774_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_221817_f.get()._field_Decl.get()._field_Ident, &__jule_any_type6)}));
			_220bd2374_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_220b2c9ea_StructSubIdentExprModel> _222521_model = jule::new_ptr<_220b2c9ea_StructSubIdentExprModel>(_220b2c9ea_StructSubIdentExprModel{._field_Token=_221774_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_220bceecb_Data>((*(_221741_d))), ._field_ExprKind=_221741_d.get()._field_Kind, ._field_Field=_221817_f, ._field_Owner=_221755_s});;
		_221741_d.get()._field_Model=jule::Any(_222521_model, &__jule_any_type72);
		_221741_d.get()._field_Kind=_221817_f.get()._field_Kind;
		_221741_d.get()._field_Lvalue=true;
		if ((_221817_f.get()._field_Decl.get()._field_Mutable && (!(_221741_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_220b49682_scopeChecker>>()) {
					_case_begin_2061b0c13:;
					{
						jule::Ptr<_220b49682_scopeChecker> _224025_scope = _220b4c7c8_getRoot((*_self_)._field_lookup.operator jule::Ptr<_220b49682_scopeChecker>());;
						_221741_d.get()._field_Mutable=((_224025_scope.get()._field_owner != nullptr) && (_224025_scope.get()._field_owner.get()._field_Owner == _221755_s));
					}
				}
				_match_end_2061b0bad:;
			};
		};
		return _221741_d;;
	};
	;
	jule::Ptr<_220b31636_Fn> _224917_m = _21ee97382_FindMethod(_221755_s.ptr(), _221774_si.get()._field_Ident.get()._field_Kind,false);;
	if ((_224917_m == nullptr)) {
		_220bd2055_pushErr(&(*_self_), _221774_si.get()._field_Ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_221755_s.get()._field_Decl.get()._field_Ident, &__jule_any_type6),jule::Any(_221774_si.get()._field_Ident.get()._field_Kind, &__jule_any_type6)}));
		return nullptr;;
	};
	if ((!(_220b6c809_isAccessibleDefine((*_self_)._field_s.ptr(), _224917_m.get()._field_Public,_224917_m.get()._field_Token)))) {
		_220bd2055_pushErr(&(*_self_), _221774_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_224917_m.get()._field_Ident, &__jule_any_type6)}));
		_220bd2374_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_22001b35c_IsRef(_224917_m.get()._field_Params[0LL].ptr()) && (!(_221793_ref)))) {
		_220bd2055_pushErr(&(*_self_), _221774_si.get()._field_Ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_220bd6e5b_checkDeprecated(&(*_self_), _224917_m.get()._field_Directives,_221774_si.get()._field_Ident);
	jule::Ptr<_220b31a10_FnIns> _226517_ins = _22001c89c_instance(_224917_m);;
	_226517_ins.get()._field_Owner=_221755_s;
	_206055aca_pushReference(&(*_self_), _226517_ins);
	jule::Ptr<_220bceecb_Data> _226817_model = jule::new_ptr<_220bceecb_Data>((*(_221741_d)));;
	_221741_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2c9ea_StructSubIdentExprModel>(_220b2c9ea_StructSubIdentExprModel{._field_Token=_221774_si.get()._field_Ident, ._field_Expr=_226817_model, ._field_ExprKind=_221741_d.get()._field_Kind, ._field_Method=_226517_ins, ._field_Owner=_221755_s}), &__jule_any_type72);
	_221741_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_226517_ins, 1)});
	return _221741_d;;
}



inline jule::Ptr<_220bceecb_Data> _220be6ec1_evalSliceSubIdent(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data> _228040_d, jule::Ptr<_21d81d743_Token> _228054_ident) {
	{
		auto &_match_expr{ _228054_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_2061b9205:;
			{
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_Params=jule::Slice<jule::Ptr<_220b31823_ParamIns>>::make({jule::new_ptr<_220b31823_ParamIns>(_220b31823_ParamIns{._field_Decl=jule::new_ptr<_220b31449_Param>(_220b31449_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_220b31823_ParamIns>(_220b31823_ParamIns{._field_Decl=jule::new_ptr<_220b31449_Param>(_220b31449_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cbc508_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_228040_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_220b2d29d_CommonSubIdentExprModel>(_220b2d29d_CommonSubIdentExprModel{._field_ExprKind=_228040_d.get()._field_Kind, ._field_Expr=_228040_d.get()._field_Model, ._field_Token=_228054_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type74), });;
			}
		}
		else {
			_case_begin_2061b94d0:;
			{
				_220bd2055_pushErr(&(*_self_), _228054_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_228040_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_228054_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2061b928d:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220be7378_evalArraySubIdent(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data> _231740_d, jule::Ptr<_21d81d743_Token> _231754_ident) {
	{
		auto &_match_expr{ _231754_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_2061ba79a:;
			{
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_Params=jule::Slice<jule::Ptr<_220b31823_ParamIns>>::make({jule::new_ptr<_220b31823_ParamIns>(_220b31823_ParamIns{._field_Decl=jule::new_ptr<_220b31449_Param>(_220b31449_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_220b31823_ParamIns>(_220b31823_ParamIns{._field_Decl=jule::new_ptr<_220b31449_Param>(_220b31449_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cbc508_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_231740_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_220b2d29d_CommonSubIdentExprModel>(_220b2d29d_CommonSubIdentExprModel{._field_ExprKind=_231740_d.get()._field_Kind, ._field_Expr=_231740_d.get()._field_Model, ._field_Token=_231754_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type74), });;
			}
		}
		else {
			_case_begin_2061bc802:;
			{
				_220bd2055_pushErr(&(*_self_), _231754_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_231740_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_231754_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2061bc769:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220be7686_evalIntTypeStatic(_220bd1a49_Eval* _self_, jule::Ptr<_21d81d743_Token> _235436_ident) {
	;
	{
		auto &_match_expr{ _235436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2061c1b58:;
			{
				jule::Ptr<_220074816_Const> _235821_c = static__2200b58ac_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_220b24ad0_Max(jule::Str("int", 3)))));;
				_235821_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_235821_c, &__jule_any_type48), ._field_Constant=_235821_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_2061c1bbe:;
			{
				jule::Ptr<_220074816_Const> _236621_c = static__2200b58ac_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_220b2499d_Min(jule::Str("int", 3)))));;
				_236621_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_236621_c, &__jule_any_type48), ._field_Constant=_236621_c});;
			}
		}
		else {
			_case_begin_2061c0ddd:;
			{
				_220bd2055_pushErr(&(*_self_), _235436_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type6),jule::Any(_235436_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2061c0c34:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220be7994_evalUintTypeStatic(_220bd1a49_Eval* _self_, jule::Ptr<_21d81d743_Token> _237937_ident) {
	;
	{
		auto &_match_expr{ _237937_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2061c48d6:;
			{
				jule::Ptr<_220074816_Const> _238321_c = static__22009b8c6_NewU64(static_cast<jule::U64>(static_cast<jule::U64>(_220b24ad0_Max(jule::Str("uint", 4)))));;
				_238321_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=jule::Any(_238321_c, &__jule_any_type48), ._field_Constant=_238321_c});;
			}
		}
		else {
			_case_begin_2061c4ad4:;
			{
				_220bd2055_pushErr(&(*_self_), _237937_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type6),jule::Any(_237937_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2061c4a7e:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220be7ca2_evalI8TypeStatic(_220bd1a49_Eval* _self_, jule::Ptr<_21d81d743_Token> _239635_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _239635_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2061c88b8:;
			{
				jule::Ptr<_220074816_Const> _240221_c = static__2200b58ac_NewI64(127LL);;
				_240221_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_240221_c, &__jule_any_type48), ._field_Constant=_240221_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_2061c892e:;
			{
				jule::Ptr<_220074816_Const> _241021_c = static__2200b58ac_NewI64(-128LL);;
				_241021_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_241021_c, &__jule_any_type48), ._field_Constant=_241021_c});;
			}
		}
		else {
			_case_begin_2061c7bc5:;
			{
				_220bd2055_pushErr(&(*_self_), _239635_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type6),jule::Any(_239635_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2061c7ad7:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220be80b0_evalI16TypeStatic(_220bd1a49_Eval* _self_, jule::Ptr<_21d81d743_Token> _242336_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _242336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2061cc867:;
			{
				jule::Ptr<_220074816_Const> _242921_c = static__2200b58ac_NewI64(32767LL);;
				_242921_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_242921_c, &__jule_any_type48), ._field_Constant=_242921_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_2061cc8cd:;
			{
				jule::Ptr<_220074816_Const> _243721_c = static__2200b58ac_NewI64(-32768LL);;
				_243721_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_243721_c, &__jule_any_type48), ._field_Constant=_243721_c});;
			}
		}
		else {
			_case_begin_2061cbb74:;
			{
				_220bd2055_pushErr(&(*_self_), _242336_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type6),jule::Any(_242336_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2061cba86:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220be83bd_evalI32TypeStatic(_220bd1a49_Eval* _self_, jule::Ptr<_21d81d743_Token> _245036_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _245036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2061d1816:;
			{
				jule::Ptr<_220074816_Const> _245621_c = static__2200b58ac_NewI64(2147483647LL);;
				_245621_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_245621_c, &__jule_any_type48), ._field_Constant=_245621_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_2061d187c:;
			{
				jule::Ptr<_220074816_Const> _246421_c = static__2200b58ac_NewI64(-2147483648LL);;
				_246421_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_246421_c, &__jule_any_type48), ._field_Constant=_246421_c});;
			}
		}
		else {
			_case_begin_2061d0b23:;
			{
				_220bd2055_pushErr(&(*_self_), _245036_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type6),jule::Any(_245036_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2061d0a35:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220be86cb_evalI64TypeStatic(_220bd1a49_Eval* _self_, jule::Ptr<_21d81d743_Token> _247736_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _247736_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2061d57b5:;
			{
				jule::Ptr<_220074816_Const> _248321_c = static__2200b58ac_NewI64(jule::MAX_I64);;
				_248321_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_248321_c, &__jule_any_type48), ._field_Constant=_248321_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_2061d582b:;
			{
				jule::Ptr<_220074816_Const> _249121_c = static__2200b58ac_NewI64(jule::MIN_I64);;
				_249121_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_249121_c, &__jule_any_type48), ._field_Constant=_249121_c});;
			}
		}
		else {
			_case_begin_2061d4ac2:;
			{
				_220bd2055_pushErr(&(*_self_), _247736_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type6),jule::Any(_247736_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2061d49d4:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220be89d9_evalU8TypeStatic(_220bd1a49_Eval* _self_, jule::Ptr<_21d81d743_Token> _250435_ident) {
	;
	;
	{
		auto &_match_expr{ _250435_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2061d893e:;
			{
				jule::Ptr<_220074816_Const> _250921_c = static__22009b8c6_NewU64(255LLU);;
				_250921_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=jule::Any(_250921_c, &__jule_any_type48), ._field_Constant=_250921_c});;
			}
		}
		else {
			_case_begin_2061d82ac:;
			{
				_220bd2055_pushErr(&(*_self_), _250435_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type6),jule::Any(_250435_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2061d8510:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220be8ce7_evalU16TypeStatic(_220bd1a49_Eval* _self_, jule::Ptr<_21d81d743_Token> _252236_ident) {
	;
	;
	{
		auto &_match_expr{ _252236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2061db48b:;
			{
				jule::Ptr<_220074816_Const> _252721_c = static__22009b8c6_NewU64(65535LLU);;
				_252721_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=jule::Any(_252721_c, &__jule_any_type48), ._field_Constant=_252721_c});;
			}
		}
		else {
			_case_begin_2061dac71:;
			{
				_220bd2055_pushErr(&(*_self_), _252236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type6),jule::Any(_252236_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2061daed5:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220be9105_evalU32TypeStatic(_220bd1a49_Eval* _self_, jule::Ptr<_21d81d743_Token> _254036_ident) {
	;
	;
	{
		auto &_match_expr{ _254036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2061dde61:;
			{
				jule::Ptr<_220074816_Const> _254521_c = static__22009b8c6_NewU64(4294967295LLU);;
				_254521_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=jule::Any(_254521_c, &__jule_any_type48), ._field_Constant=_254521_c});;
			}
		}
		else {
			_case_begin_2061dd746:;
			{
				_220bd2055_pushErr(&(*_self_), _254036_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type6),jule::Any(_254036_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2061dd9aa:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220be9413_evalU64TypeStatic(_220bd1a49_Eval* _self_, jule::Ptr<_21d81d743_Token> _255836_ident) {
	;
	;
	{
		auto &_match_expr{ _255836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2061e1936:;
			{
				jule::Ptr<_220074816_Const> _256321_c = static__22009b8c6_NewU64(jule::MAX_U64);;
				_256321_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=jule::Any(_256321_c, &__jule_any_type48), ._field_Constant=_256321_c});;
			}
		}
		else {
			_case_begin_2061e121b:;
			{
				_220bd2055_pushErr(&(*_self_), _255836_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type6),jule::Any(_255836_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2061e1480:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220be9721_evalF32TypeStatic(_220bd1a49_Eval* _self_, jule::Ptr<_21d81d743_Token> _257636_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _257636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2061e54b7:;
			{
				jule::Ptr<_220074816_Const> _258321_c = static__2200dc395_NewF64(340282346638528860000000000000000000000.0);;
				_258321_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_258321_c, &__jule_any_type48), ._field_Constant=_258321_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_2061e552d:;
			{
				jule::Ptr<_220074816_Const> _259121_c = static__2200dc395_NewF64(-340282346638528860000000000000000000000.0);;
				_259121_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_259121_c, &__jule_any_type48), ._field_Constant=_259121_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_2061e5363:;
			{
				jule::Ptr<_220074816_Const> _259921_c = static__2200dc395_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_259921_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_259921_c, &__jule_any_type48), ._field_Constant=_259921_c});;
			}
		}
		else {
			_case_begin_2061e472a:;
			{
				_220bd2055_pushErr(&(*_self_), _257636_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type100),jule::Any(_257636_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2061e46c5:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220be9a2e_evalF64TypeStatic(_220bd1a49_Eval* _self_, jule::Ptr<_21d81d743_Token> _261236_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2061ea896:;
			{
				jule::Ptr<_220074816_Const> _261921_c = static__2200dc395_NewF64(jule::MAX_F64);;
				_261921_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_261921_c, &__jule_any_type48), ._field_Constant=_261921_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_2061ea90c:;
			{
				jule::Ptr<_220074816_Const> _262721_c = static__2200dc395_NewF64(jule::MIN_F64);;
				_262721_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_262721_c, &__jule_any_type48), ._field_Constant=_262721_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_2061ea742:;
			{
				jule::Ptr<_220074816_Const> _263521_c = static__2200dc395_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_263521_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_263521_c, &__jule_any_type48), ._field_Constant=_263521_c});;
			}
		}
		else {
			_case_begin_2061e9b09:;
			{
				_220bd2055_pushErr(&(*_self_), _261236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type100),jule::Any(_261236_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2061e9aa4:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220be9dd6_evalPrimStatic(_220bd1a49_Eval* _self_, jule::Str _264833_kind, jule::Ptr<_21d81d743_Token> _264844_ident) {
	{
		auto &_match_expr{ _264833_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_2061ed811:;
			{
				return _220be7686_evalIntTypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_2061eec85:;
			{
				return _220be7994_evalUintTypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_2061eeceb:;
			{
				return _220be7ca2_evalI8TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_2061ee207:;
			{
				return _220be80b0_evalI16TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_2061ee26d:;
			{
				return _220be83bd_evalI32TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_2061ee2d4:;
			{
				return _220be86cb_evalI64TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_2061ee34a:;
			{
				return _220be89d9_evalU8TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_2061eed62:;
			{
				return _220be8ce7_evalU16TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_2061eedc8:;
			{
				return _220be9105_evalU32TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_2061eee3e:;
			{
				return _220be9413_evalU64TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_2061eeea5:;
			{
				return _220be9721_evalF32TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_20620001b:;
			{
				return _220be9a2e_evalF64TypeStatic(&(*_self_), _264844_ident);;
			}
		}
		else {
			_case_begin_2061e9cb3:;
			{
				_220bd2055_pushErr(&(*_self_), _264844_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_264833_kind, &__jule_any_type6),jule::Any(_264844_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2061eaa72:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220bea28d_evalTypeStatic(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data> _268037_d, jule::Ptr<_21eeae289_SubIdentExpr> _268051_si) {
	{
		
		if ((_220c0d2e5_Prim(_268037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206205076:;
			{
				return _220be9dd6_evalPrimStatic(&(*_self_), _220c1101d_Str(_220c0d2e5_Prim(_268037_d.get()._field_Kind.ptr()).ptr()),_268051_si.get()._field_Ident);;
			}
		}
		else if ((_220c0da32_Enum(_268037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062050dc:;
			{
				return _220be595e_evalEnumStatic(&(*_self_), _220c0da32_Enum(_268037_d.get()._field_Kind.ptr()),_268051_si.get()._field_Ident);;
			}
		}
		else if ((_220c0dc96_TypeEnum(_268037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206204dcd:;
			{
				return _220be5d16_evalTypeEnumStatic(&(*_self_), _220c0dc96_TypeEnum(_268037_d.get()._field_Kind.ptr()),_268051_si.get()._field_Ident);;
			}
		}
		else if ((_220c0e747_Struct(_268037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206204e44:;
			{
				return _220be61bd_evalStructStatic(&(*_self_), _220c0e747_Struct(_268037_d.get()._field_Kind.ptr()),_268051_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_206204086:;
			{
				_220bd2055_pushErr(&(*_self_), _268051_si.get()._field_Ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_268037_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_206203eba:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220bea645_evalObjSubIdent(_220bd1a49_Eval* _self_, jule::Ptr<_220bceecb_Data> _269638_d, jule::Ptr<_21eeae289_SubIdentExpr> _269652_si) {
	if (_21d820ed7_IsIgnoreIdent(_269652_si.get()._field_Ident.get()._field_Kind)) {
		_220bd2055_pushErr(&(*_self_), _269652_si.get()._field_Ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_220c0ae5d_TypeKind> _270217_kind = _269638_d.get()._field_Kind;;
	{
		
		if ((_220c0d7bd_Ptr(_269638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206209b80:;
			{
				jule::Ptr<_220c179a3_Ptr> _270517_ptr = _220c0d7bd_Ptr(_269638_d.get()._field_Kind.ptr());;
				if (_220c18476_IsUnsafe(_270517_ptr.ptr())) {
					goto _match_end_206209a5e;
				};
				if (((!(_269652_si.get()._field_IsSelf)) && (!(_220bd2990_isUnsafe(&(*_self_)))))) {
					_220bd2055_pushErr(&(*_self_), _269652_si.get()._field_Ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_270217_kind=_220c0d7bd_Ptr(_269638_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_220c0d559_Sptr(_269638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206209be6:;
			{
				_270217_kind=_220c0d559_Sptr(_269638_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_206209a5e:;
	};
	{
		
		if ((_220c0e9ab_Trait(_269638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20620c644:;
			{
				return _220be661e_evalTraitSubIdent(&(*_self_), _269638_d,_220c0e9ab_Trait(_269638_d.get()._field_Kind.ptr()),_269652_si.get()._field_Ident);;
			}
		}
		else if ((_220c0e747_Struct(_270217_kind.ptr()) != nullptr)) {
			_case_begin_20620c6bb:;
			{
				jule::Ptr<_21eec33d0_StructIns> _272117_s = _220c0e747_Struct(_270217_kind.ptr());;
				if (_220c06c7d_isInstancedStruct(_272117_s)) {
					jule::Bool _272325_usedReferenceElem = (_220c0d559_Sptr(_269638_d.get()._field_Kind.ptr()) != nullptr);;
					return _220be6b19_evalStructSubIdent(&(*_self_), _269638_d,_220c0e747_Struct(_270217_kind.ptr()),_269652_si,_272325_usedReferenceElem);;
				};
			}
		}
		else if ((_220c0e26e_Slc(_270217_kind.ptr()) != nullptr)) {
			_case_begin_20620c743:;
			{
				return _220be6ec1_evalSliceSubIdent(&(*_self_), _269638_d,_269652_si.get()._field_Ident);;
			}
		}
		else if ((_220c0e00a_Arr(_270217_kind.ptr()) != nullptr)) {
			_case_begin_20620c7ba:;
			{
				return _220be7378_evalArraySubIdent(&(*_self_), _269638_d,_269652_si.get()._field_Ident);;
			}
		}
		_match_end_20620c567:;
	};
	_220bd2055_pushErr(&(*_self_), _269652_si.get()._field_Ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_269638_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
	return nullptr;;
}



inline jule::Ptr<_220bceecb_Data> _220bea953_evalSubIdent(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eeae289_SubIdentExpr> _273536_si) {
	jule::Ptr<_220c0ae5d_TypeKind> _273617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_273617_prefix;
	});;
	jule::Ptr<_220bceecb_Data> _274017_d = _220bebd50_evalExprKind(_self_, _273536_si.get()._field_Expr.get()._field_Kind);;
	if ((_274017_d == nullptr)) {
		return nullptr;;
	};
	if (_274017_d.get()._field_Decl) {
		return _220bea28d_evalTypeStatic(_self_.ptr(), _274017_d,_273536_si);;
	};
	return _220bea645_evalObjSubIdent(_self_.ptr(), _274017_d,_273536_si);;
}



inline jule::Ptr<_220bceecb_Data> _220beac61_evalTuple(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eea6b55_TupleExpr> _275233_tup) {
	jule::Ptr<_220c15929_Tuple> _275317_tupT = jule::new_ptr<_220c15929_Tuple>();;
	_275317_tupT.get()._field_Types=jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>>::alloc(0LL, _275233_tup.get()._field_Expr.len());
	jule::Ptr<_220b2d48a_TupleExprModel> _275617_model = jule::new_ptr<_220b2d48a_TupleExprModel>(_220b2d48a_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_220bceecb_Data>>::alloc(0LL, _275233_tup.get()._field_Expr.len())});;
	jule::Bool _276017_ok = true;;
	{
		auto &expr = _275233_tup.get()._field_Expr;
		auto it = expr.begin();
		_iter_begin_20621b4ee:;
		if (it != expr.end()) {
			jule::Ptr<_21eea5ec8_Expr> _276121_expr = *it;
			{
				jule::Ptr<_220bceecb_Data> _276221_d = _220bebd50_evalExprKind(_self_, _276121_expr.get()._field_Kind);;
				if ((_276221_d == nullptr)) {
					_276017_ok=false;
					goto _iter_next_20621b4ee;
				};
				_275317_tupT.get()._field_Types = jule::alloc_for_append(_275317_tupT.get()._field_Types,1);_275317_tupT.get()._field_Types.__push(_276221_d.get()._field_Kind);;
				_275617_model.get()._field_Datas = jule::alloc_for_append(_275617_model.get()._field_Datas,1);_275617_model.get()._field_Datas.__push(_276221_d);;
			}
			_iter_next_20621b4ee:;
			++it;
			goto _iter_begin_20621b4ee;
		}
		_iter_end_20621b4ee:;
	};
	if ((!(_276017_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_275317_tupT, 9)}), ._field_Model=jule::Any(_275617_model, &__jule_any_type89), });;
}



inline jule::Ptr<_220bceecb_Data> _220beb118_evalMap(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_220c16452_Map> _278131_m, jule::Ptr<_21eeb1467_BraceLit> _278144_lit) {
	jule::Ptr<_220b2c203_MapExprModel> _278217_model = jule::new_ptr<_220b2c203_MapExprModel>(_220b2c203_MapExprModel{._field_KeyKind=_278131_m.get()._field_Key, ._field_ValKind=_278131_m.get()._field_Val, });;
	{
		auto &expr = _278144_lit.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_20621e634:;
		if (it != expr.end()) {
			jule::Ptr<_21eea5ec8_Expr> _278721_expr = *it;
			{
				{
					auto &_match_expr{ _278721_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type86) {
						_case_begin_20621ed4e:;
						{
							goto _match_end_20621ee09;
						}
					}
					else {
						_case_begin_206220091:;
						{
							_220bd2055_pushErr(_self_.ptr(), _278144_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_20621ee09:;
				};
				jule::Ptr<_21eeb1c3c_KeyValPair> _279721_pair = _278721_expr.get()._field_Kind.cast_ptr<_21eeb1c3c_KeyValPair>(&__jule_any_type86);;
				jule::Ptr<_220bceecb_Data> _279921_key = _220bebd50_evalExprKind(_self_, _279721_pair.get()._field_Key.get()._field_Kind);;
				if ((_279921_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_220bceecb_Data> _280421_val = _220bebd50_evalExprKind(_self_, _279721_pair.get()._field_Val.get()._field_Kind);;
				if ((_280421_val == nullptr)) {
					return nullptr;;
				};
				_220b74019_checkAssignType(_self_.get()._field_s, false,_278131_m.get()._field_Key,_279921_key,_279721_pair.get()._field_Colon);
				_220b74019_checkAssignType(_self_.get()._field_s, false,_278131_m.get()._field_Val,_280421_val,_279721_pair.get()._field_Colon);
				_278217_model.get()._field_Entries = jule::alloc_for_append(_278217_model.get()._field_Entries,1);_278217_model.get()._field_Entries.__push(jule::new_ptr<_220b2c016_KeyValPairExprModel>(_220b2c016_KeyValPairExprModel{._field_Key=_279921_key.get()._field_Model, ._field_Val=_280421_val.get()._field_Model}));;
			}
			_iter_next_20621e634:;
			++it;
			goto _iter_begin_20621e634;
		}
		_iter_end_20621e634:;
	};
	return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_278131_m, 10)}), ._field_Mutable=true, ._field_Model=jule::Any(_278217_model, &__jule_any_type105), });;
}



inline jule::Ptr<_220bceecb_Data> _220beb426_evalBraceLit(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eeb1467_BraceLit> _282536_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_20622534e:;
			{
				_220bd2055_pushErr(_self_.ptr(), _282536_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_220c0ec20_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_2062253b5:;
			{
				return _220beb118_evalMap(_self_, _220c0ec20_Map(_self_.get()._field_prefix.ptr()),_282536_lit);;
			}
		}
		else if ((_220c0e747_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_2062251c8:;
			{
				return _220be375e_evalStructLitExplicit(_self_, _220c0e747_Struct(_self_.get()._field_prefix.ptr()),_282536_lit.get()._field_Exprs,_282536_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_2062246a0:;
			{
				_220bd2055_pushErr(_self_.ptr(), _282536_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2062245d4:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220beb734_evalAnonFn(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eeb8293_FnDecl> _284034_decl) {
	_220c197c9_typeChecker _284117_tc = _220c197c9_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_220b31a10_FnIns> _284617_ins = _220c25e78_buildFn(&_284117_tc, _284034_decl);;
	if ((_284617_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_220b49682_scopeChecker>>()) {
			_case_begin_20622981a:;
			{
				jule::Ptr<_220b49682_scopeChecker> _285221_sc = _self_.get()._field_lookup.operator jule::Ptr<_220b49682_scopeChecker>();;
				jule::Ptr<_220b49682_scopeChecker> _285321_scc = _220b596e7_newChildChecker(_285221_sc);;
				_285321_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_220b483ea_scopeLabel>>>(nullptr);
				_285321_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_220b4886d_scopeGoto>>>(nullptr);
				_285321_scc.get()._field_owner=nullptr;
				_285321_scc.get()._field_childIndex=0LL;
				_285321_scc.get()._field_it=0LLU;
				_285321_scc.get()._field_cse=0LLU;
				_285321_scc.get()._field_owner=_284617_ins;
				_220b828eb_checkFnInsSc(_self_.get()._field_s.ptr(), _284617_ins,_285321_scc);
			}
		}
		else {
			_case_begin_206228dad:;
			{
				_220b82e90_checkFnIns(_self_.get()._field_s, _284617_ins);
			}
		}
		_match_end_206228b05:;
	};
	return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_284617_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_220b2bd29_AnonFnExprModel>(_220b2bd29_AnonFnExprModel{._field_Func=_284617_ins, ._field_Global=_220bd2c04_isGlobal(_self_.ptr())}), &__jule_any_type106), });;
}



inline jule::Ptr<_220bceecb_Data> _220beba42_evalBinop(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eeae70c_BinopExpr> _287533_op) {
	_220bee67c_binaryEval _287617_bs = static__220beec54_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_220c10baa_Prim> _287917_prim = _220c0d2e5_Prim(_self_.get()._field_prefix.ptr());;
		if (((_287917_prim == nullptr) || (!(_220b2730d_IsNum(_220c1101d_Str(_287917_prim.ptr())))))) {
			jule::Ptr<_220c0ae5d_TypeKind> _288125_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_288125_prefix;
			});;
			return _220c05210_eval(&_287617_bs, _287533_op);;
		};
	};
	return _220c05210_eval(&_287617_bs, _287533_op);;
}



inline jule::Ptr<_220bceecb_Data> _220bebd50_evalExprKind(jule::Ptr<_220bd1a49_Eval> _self_, jule::Any _289036_kind) {
	{
		auto &_match_expr{ _289036_kind };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_20622d3ce:;
			{
				jule::Ptr<_21eea62b4_RangeExpr> _289321_e = _289036_kind.cast_ptr<_21eea62b4_RangeExpr>(&__jule_any_type107);;
				return _220bebd50_evalExprKind(_self_, _289321_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_20623127d:;
			{
				return _220bd48a4_evalLit(_self_.ptr(), _289036_kind.cast_ptr<_21eea700c_LitExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_2062312e4:;
			{
				return _220bd8d5e_evalIdent(_self_.ptr(), _289036_kind.cast_ptr<_21eea7b89_IdentExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_206230ce9:;
			{
				return _220bd916c_evalUnary(_self_, _289036_kind.cast_ptr<_21eea8393_UnaryExpr>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_206230d60:;
			{
				return _220bd947a_evalVariadic(_self_, _289036_kind.cast_ptr<_21eead5a7_VariadicExpr>(&__jule_any_type83));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_206230dd7:;
			{
				return _220bd9788_evalUnsafe(_self_, _289036_kind.cast_ptr<_21eea7716_UnsafeExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_206230e5e:;
			{
				return _220bda305_evalSliceExpr(_self_, _289036_kind.cast_ptr<_21eeb2424_SliceExpr>(&__jule_any_type102));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_20623136b:;
			{
				return _220bdd649_evalIndexing(_self_, _289036_kind.cast_ptr<_21eeb2c93_IndexingExpr>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_2062313e3:;
			{
				return _220bde815_evalSlicing(_self_, _289036_kind.cast_ptr<_21eeb339d_SlicingExpr>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_20623146a:;
			{
				return _220be3000_evalCast(_self_, _289036_kind.cast_ptr<_21eead95e_CastExpr>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_2062314e2:;
			{
				return _220be330d_evalNsSelection(_self_.ptr(), _289036_kind.cast_ptr<_21eeadd16_NsSelectionExpr>(&__jule_any_type97));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_206231569:;
			{
				return _220be3a6c_evalStructLit(_self_, _289036_kind.cast_ptr<_21eeb0ee4_StructLit>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_2062315e1:;
			{
				return _220be40de_evalType(_self_.ptr(), _289036_kind.cast_ptr<_21eea19a7_TypeDecl>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_206231668:;
			{
				return _220be55a7_evalFnCall(_self_, _289036_kind.cast_ptr<_21eeaed17_FnCallExpr>(&__jule_any_type114));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_2062316e0:;
			{
				return _220bea953_evalSubIdent(_self_, _289036_kind.cast_ptr<_21eeae289_SubIdentExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_206231767:;
			{
				return _220beac61_evalTuple(_self_, _289036_kind.cast_ptr<_21eea6b55_TupleExpr>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_2062317de:;
			{
				return _220beb426_evalBraceLit(_self_, _289036_kind.cast_ptr<_21eeb1467_BraceLit>(&__jule_any_type115));;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_206231866:;
			{
				return _220beb734_evalAnonFn(_self_, _289036_kind.cast_ptr<_21eeb8293_FnDecl>(&__jule_any_type15));;
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_2062318dd:;
			{
				return _220beba42_evalBinop(_self_, _289036_kind.cast_ptr<_21eeae70c_BinopExpr>(&__jule_any_type116));;
			}
		}
		else {
			_case_begin_206230bea:;
			{
				return nullptr;;
			}
		}
		_match_end_206230b95:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220bec15d_eval(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eea5ec8_Expr> _293828_expr) {
	jule::Ptr<_220bceecb_Data> _293917_d = _220bebd50_evalExprKind(_self_, _293828_expr.get()._field_Kind);;
	if (((_293917_d == nullptr) || (_293917_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_220c0e4d3_Fn(_293917_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20623ae69:;
			{
				jule::Ptr<_220b31a10_FnIns> _294621_f = _220c0e4d3_Fn(_293917_d.get()._field_Kind.ptr());;
				if (_220b321c5_IsBuiltin(_294621_f.ptr())) {
					goto _match_end_20623ad37;
				};
				if ((_294621_f.get()._field_Generics.len() != _294621_f.get()._field_Decl.get()._field_Generics.len())) {
					_220b6c133_pushErr(_self_.get()._field_s.ptr(), _293828_expr.get()._field_Token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (((!(_294621_f.get()._field_Decl.get()._field_Statically)) && _22004d735_IsMethod(_294621_f.get()._field_Decl.ptr()))) {
					_220b6c133_pushErr(_self_.get()._field_s.ptr(), _293828_expr.get()._field_Token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_20623ad37:;
	};
	return _293917_d;;
}



inline jule::Ptr<_220bceecb_Data> _220bec46b_evalExpr(jule::Ptr<_220bd1a49_Eval> _self_, jule::Ptr<_21eea5ec8_Expr> _296432_expr) {
	jule::Ptr<_220bceecb_Data> _296517_d = _220bec15d_eval(_self_, _296432_expr);;
	{
		
		if ((_296517_d == nullptr)) {
			_case_begin_20623ea94:;
			{
				return nullptr;;
			}
		}
		else if (_296517_d.get()._field_Decl) {
			_case_begin_20623eb1b:;
			{
				_220bd2055_pushErr(_self_.ptr(), _296432_expr.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_20623e9d9:;
			{
				return _296517_d;;
			}
		}
		_match_end_20623e984:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _220bd1a49_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _220bec8de_unaryEval static__220becd95_new(jule::Ptr<_220bd1a49_Eval> _298523_e) {
	return _220bec8de_unaryEval{._field_e=_298523_e, };;
}



inline void _220bed071_minus(_220bec8de_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_206241601:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_220c0d2e5_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062412c1:;
			{
				if ((!(_220b2730d_IsNum(_220c0b359_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_220c0e747_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206241337:;
			{
				if ((_220c0e747_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_20624125a:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_206241128:;
	};
	if (_220bd088e_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_220b29134_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_206244cca:;
				{
					_220b288e7_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_220b27e46_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_220b28b5b_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_206244d52:;
				{
					_220b2841e_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_220b2796d_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_220b28c8d_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_206244dc9:;
				{
					_220b2841e_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_220b28078_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_206244bdc:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2acc3_UnaryExprModel>(_220b2acc3_UnaryExprModel{._field_Expr=jule::new_ptr<_220bceecb_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type75);
}



inline void _220bed24c_plus(_220bec8de_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_20624943e:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_220c0d2e5_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20624910e:;
			{
				if ((!(_220b2730d_IsNum(_220c0b359_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_220c0e747_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206249175:;
			{
				if ((_220c0e747_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_206249098:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_206248ecc:;
	};
	if (_220bd088e_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_220b29134_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_20624cb18:;
				{
					_220b288e7_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_220b27e46_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_220b28b5b_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_20624cb90:;
				{
					_220b2841e_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_220b2796d_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_220b28c8d_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_20624cc17:;
				{
					_220b2841e_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_220b28078_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_20624ca2a:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2acc3_UnaryExprModel>(_220b2acc3_UnaryExprModel{._field_Expr=jule::new_ptr<_220bceecb_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type75);
}



inline void _220bed428_caret(_220bec8de_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_20625227c:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_220c0d2e5_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206251e4c:;
			{
				if ((!(_220b27099_IsInt(_220c0b359_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_220c0e747_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206251eb3:;
			{
				if ((_220c0e747_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_206251dd6:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_206251d1a:;
	};
	if (_220bd088e_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_220b28b5b_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_206255945:;
				{
					_220b2841e_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_220b2796d_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_220b28c8d_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_2062559bc:;
				{
					_220b28551_SetU64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_220b27aa0_ReadU64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_206255868:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2acc3_UnaryExprModel>(_220b2acc3_UnaryExprModel{._field_Expr=jule::new_ptr<_220bceecb_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type75);
}



inline void _220bed604_excl(_220bec8de_unaryEval* _self_) {
	jule::Ptr<_220c10baa_Prim> _310413_t = _220c0d2e5_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
	if (((_310413_t == nullptr) || (!(_220c13b7a_IsBool(_310413_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_220bd088e_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_220b28dc0_IsBool((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_20625a3a6:;
				{
					_220b28683_SetBool((*_self_)._field_d.get()._field_Constant.ptr(), (!(_220b27bd2_ReadBool((*_self_)._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_20625a2a7:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2acc3_UnaryExprModel>(_220b2acc3_UnaryExprModel{._field_Expr=jule::new_ptr<_220bceecb_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type75);
}



inline void _220bed7d0_star(_220bec8de_unaryEval* _self_) {
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2acc3_UnaryExprModel>(_220b2acc3_UnaryExprModel{._field_Expr=jule::new_ptr<_220bceecb_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type75);
	{
		
		if ((_220c0d7bd_Ptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20625d3ed:;
			{
				if ((!(_220bd2990_isUnsafe((*_self_)._field_e.ptr())))) {
					_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_220c179a3_Ptr> _313621_t = _220c0d7bd_Ptr((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_220c18476_IsUnsafe(_313621_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_Kind=_313621_t.get()._field_Elem;
			}
		}
		else if ((_220c0d559_Sptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20625d0bd:;
			{
				(*_self_)._field_d.get()._field_Kind=_220c0d559_Sptr((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_20625d057:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_20625cee1:;
	};
	(*_self_)._field_d.get()._field_Constant=nullptr;
	(*_self_)._field_d.get()._field_Lvalue=true;
}



inline void _220bed9ab_amper(_220bec8de_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type103) {
			_case_begin_206262e80:;
			{
				jule::Ptr<_220b2b19c_StructLitExprModel> _315621_lit = (*_self_)._field_d.get()._field_Model.cast_ptr<_220b2b19c_StructLitExprModel>(&__jule_any_type103);;
				_220c05e9c_makeStructLitAlloc((*_self_)._field_d,_315621_lit);
			}
		}
		else {
			_case_begin_206262853:;
			{
				{
					
					if (_220c28101_canGetPtr((*_self_)._field_d)) {
						_case_begin_2062634d0:;
						{
							(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(jule::new_ptr<_220c179a3_Ptr>(_220c179a3_Ptr{._field_Elem=(*_self_)._field_d.get()._field_Kind}), 12)});
							(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2acc3_UnaryExprModel>(_220b2acc3_UnaryExprModel{._field_Expr=jule::new_ptr<_220bceecb_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type75);
						}
					}
					else {
						_case_begin_206262e19:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_206262d4d:;
				};
			}
		}
		_match_end_2062627ed:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_Constant=nullptr;
		(*_self_)._field_d.get()._field_Lvalue=false;
	};
}



inline void _220bedb87_typeDecl(_220bec8de_unaryEval* _self_) {
	_220c197c9_typeChecker _318017_tc = _220c197c9_typeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_rootLookup=(*_self_)._field_e.get()._field_lookup, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_errorToken=(*_self_)._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_20626667b:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c24817_buildPtrFromType(&_318017_tc, (*_self_)._field_d.get()._field_Kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_206268ddc:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c1e38e_buildSptrFromType(&_318017_tc, (*_self_)._field_d.get()._field_Kind), 7)});
			}
		}
		else {
			_case_begin_2062676c1:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str((*_self_)._field_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_20626766b:;
	};
	(*_self_)._field_d.get()._field_Decl=true;
}



inline void _220bedd63_evalData(_220bec8de_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_20626b351:;
			{
				jule::Ptr<_220c0ae5d_TypeKind> _320321_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_220bebd50_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
				(*_self_)._field_e.get()._field_prefix=_320321_prefix;
			}
		}
		else {
			_case_begin_20626ae11:;
			{
				(*_self_)._field_d=_220bebd50_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_20626ad89:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220bee13d_eval(_220bec8de_unaryEval* _self_, jule::Ptr<_21eea8393_UnaryExpr> _321227_u) {
	(*_self_)._field_u=_321227_u;
	_220bedd63_evalData(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*_self_)._field_d.get()._field_Decl) {
		_220bedb87_typeDecl(&(*_self_));
		return (*_self_)._field_d;;
	};
	jule::Ptr<_220c0ae5d_TypeKind> _322313_kind = (*_self_)._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_20627071d:;
			{
				_220bed071_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_206270201:;
			{
				_220bed24c_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_206270267:;
			{
				_220bed428_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_2062702cd:;
			{
				_220bed604_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_206270344:;
			{
				_220bed7d0_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2062708b6:;
			{
				_220bed9ab_amper(&(*_self_));
			}
		}
		else {
			_case_begin_20627018a:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_206270135:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_206272742:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str(_322313_kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		else if (_220bd088e_IsConst((*_self_)._field_d.ptr())) {
			_case_begin_20627093d:;
			{
				(*_self_)._field_d.get()._field_Model=jule::Any((*_self_)._field_d.get()._field_Constant, &__jule_any_type48);
			}
		}
		_match_end_2062726dc:;
	};
	(*_self_)._field_d.get()._field_Mutable=true;
	return (*_self_)._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _220bec8de_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _220bee67c_binaryEval static__220beec54_newPlain(jule::Ptr<_220bd1a49_Eval> _326128_e) {
	return _220bee67c_binaryEval{._field_e=_326128_e, };;
}



inline _220bee67c_binaryEval static__220c00095_new(jule::Ptr<_220bd1a49_Eval> _326723_e, jule::Ptr<_21d81d743_Token> _326737_op) {
	return _220bee67c_binaryEval{._field_e=_326723_e, ._field_op=_326737_op};;
}



inline jule::Bool _220c00309_checkTypeCompatibility(_220bee67c_binaryEval* _self_) {
	return _220b7446a_checkTypeCompatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_Kind,(*_self_)._field_r.get()._field_Kind,(*_self_)._field_op);;
}



inline jule::Bool _220c005a1_checkStructCommonOperatorCompatibility(_220bee67c_binaryEval* _self_) {
	jule::Ptr<_220b31a10_FnIns> _328117_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_206276acb:;
			{
				_328117_overload=_220c0e747_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_206278209:;
			{
				_328117_overload=_220c0e747_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_206277060:;
			{
				_328117_overload=_220c0e747_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_2062770c6:;
			{
				_328117_overload=_220c0e747_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_20627713c:;
			{
				_328117_overload=_220c0e747_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2062771a3:;
			{
				_328117_overload=_220c0e747_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_20627843a:;
			{
				_328117_overload=_220c0e747_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2062784a1:;
			{
				_328117_overload=_220c0e747_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_206278517:;
			{
				_328117_overload=_220c0e747_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_20627857d:;
			{
				_328117_overload=_220c0e747_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_206276ee9:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return false;;
			}
		}
		_match_end_206276e94:;
	};
	if ((_328117_overload == nullptr)) {
		_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
		return false;;
	};
	jule::Ptr<_220b31823_ParamIns> _331317_p = _328117_overload.get()._field_Params[1LL];;
	return _220b74019_checkAssignType((*_self_)._field_e.get()._field_s, _331317_p.get()._field_Decl.get()._field_Reference,_331317_p.get()._field_Kind,(*_self_)._field_r,(*_self_)._field_op);;
}



inline jule::Ptr<_220bceecb_Data> _220c00848_evalNil(_220bee67c_binaryEval* _self_) {
	if ((!(_220c0c844_NilCompatible((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type117),jule::Any(_220c0b359_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type6)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_206281498:;
			{
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_20628270d:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(jule::Str("nil", 3), &__jule_any_type117)}));
				return nullptr;;
			}
		}
		_match_end_2062826a8:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220c00aac_evalEnum(_220bee67c_binaryEval* _self_) {
	jule::Ptr<_220b38374_Enum> _333817_enm = _220c0da32_Enum((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_206284886:;
			{
				jule::Ptr<_220c0ae5d_TypeKind> _334221_rkind = (*_self_)._field_r.get()._field_Kind;;
				if ((_220c0da32_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_334221_rkind=_220c0da32_Enum((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_220b7446a_checkTypeCompatibility((*_self_)._field_e.get()._field_s, _333817_enm.get()._field_Kind.get()._field_Kind,_334221_rkind,(*_self_)._field_op)))) {
					return nullptr;;
				};
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_206284831:;
	};
	if (((_220c0da32_Enum((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr) || (_333817_enm != _220c0da32_Enum((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_333817_enm.get()._field_Ident, &__jule_any_type6),jule::Any(_220c0b359_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type6)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_2062841d2:;
			{
				if ((!(_220b2730d_IsNum(_220c0b359_Str(_333817_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_333817_enm.get()._field_Ident, &__jule_any_type6)}));
					return nullptr;;
				};
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_206289d97:;
			{
				if (((_220c0d2e5_Prim(_333817_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_220b27099_IsInt(_220c1101d_Str(_220c0d2e5_Prim(_333817_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_333817_enm.get()._field_Ident, &__jule_any_type6)}));
				};
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_206288cdb:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_333817_enm.get()._field_Ident, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_206288c20:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220c00d21_evalTypeEnum(_220bee67c_binaryEval* _self_) {
	jule::Ptr<_220b38ae4_TypeEnum> _338917_enm = _220c0dc96_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr());;
	if ((!(_220c00309_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_20628ee46:;
			{
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_20628e9a1:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_220b38cd1_Str(_338917_enm.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_20628ea7d:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220c01085_evalSptr(_220bee67c_binaryEval* _self_) {
	if ((!(_220c00309_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_206291a3b:;
			{
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_206291b5c:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_206291189:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220c012e9_evalPtr(_220bee67c_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_20629390b:;
			{
				if ((!(_220c00309_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;;
				};
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_206294b3d:;
			{
				if ((_220c0d7bd_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_220bceecb_Data> ___jule_assign_arg = (*_self_)._field_r;
						jule::Ptr<_220bceecb_Data> _1___jule_assign_arg = (*_self_)._field_l;
						(*_self_)._field_l = ___jule_assign_arg;
						(*_self_)._field_r = _1___jule_assign_arg;
					});
				};
				if (_220c18476_IsUnsafe(_220c0d7bd_Ptr((*_self_)._field_l.get()._field_Kind.ptr()).ptr())) {
					_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				};
				if ((!(_220c070e1_isPtrArithmeticCompatible((*_self_)._field_l,(*_self_)._field_r)))) {
					_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type6)}));
					return nullptr;;
				};
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_206293389:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_206291d6b:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220c0155d_evalArr(_220bee67c_binaryEval* _self_) {
	if ((!(_220c00309_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_206299c53:;
			{
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_206299dc9:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_206299d74:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220c017c2_evalSlc(_220bee67c_binaryEval* _self_) {
	if ((!(_220c00309_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_20629be53:;
			{
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_20629c074:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_20629b5a1:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220c01a36_evalFn(_220bee67c_binaryEval* _self_) {
	if ((!(_220c00309_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_20629e153:;
			{
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_20629e274:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_20629d7a1:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220c01c9a_evalStruct(_220bee67c_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_2062a0a17:;
			{
				if ((_220c0e747_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
					return nullptr;;
				};
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_2062a0a7d:;
			{
				if ((_220c0e747_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
					return nullptr;;
				};
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_2062a1177:;
			{
				if ((_220c0e747_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
					return nullptr;;
				};
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_2062a11dd:;
			{
				if ((_220c0e747_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
					return nullptr;;
				};
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2062a1254:;
			{
				if ((!(_220c00309_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;;
				};
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_20629e483:;
	};
	if ((!(_220c005a1_checkStructCommonOperatorCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	return (*_self_)._field_l;;
}



inline jule::Ptr<_220bceecb_Data> _220c0200e_evalTrait(_220bee67c_binaryEval* _self_) {
	if ((!(_220c00309_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2062aa47d:;
			{
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_2062aa59e:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2062a9ec7:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220c02273_evalAny(_220bee67c_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2062ac34d:;
			{
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_2062abccb:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(jule::Str("any", 3), &__jule_any_type100)}));
				return nullptr;;
			}
		}
		_match_end_2062aa7ad:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220c024d7_evalBool(_220bee67c_binaryEval* _self_) {
	if ((!(_220c00309_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_2062ac5b2:;
			{
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_2062ae295:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_220c0b359_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2062ad7c2:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220c0274b_evalStr(_220bee67c_binaryEval* _self_) {
	jule::Str _363117_rk = _220c0b359_Str((*_self_)._field_r.get()._field_Kind.ptr());;
	if ((_363117_rk != jule::Str("str", 3))) {
		_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type100),jule::Any(_363117_rk, &__jule_any_type6)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_2062b273d:;
			{
				return (*_self_)._field_l;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_2062b340e:;
			{
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_2062b0cbe:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(jule::Str("str", 3), &__jule_any_type100)}));
				return nullptr;;
			}
		}
		_match_end_2062b2375:;
	};
}



inline void _220c02927_setTypeToGreater(_220bee67c_binaryEval* _self_) {
	jule::Ptr<_220c10baa_Prim> _365813_lp = _220c0d2e5_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_220c10baa_Prim> _365913_rp = _220c0d2e5_Prim((*_self_)._field_r.get()._field_Kind.ptr());;
	if (_220bd088e_IsConst((*_self_)._field_l.ptr())) {
		if ((!(_220bd088e_IsConst((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_365913_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_220bd088e_IsConst((*_self_)._field_r.ptr())) {
		(*_self_)._field_r.get()._field_Constant.get()._field_Kind=_365813_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*_self_)._field_l.get()._field_untyped && (!((*_self_)._field_r.get()._field_untyped)))) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
		if (_220bd088e_IsConst((*_self_)._field_l.ptr())) {
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_365913_rp.get()._field_Kind;
		};
		(*_self_)._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*_self_)._field_l.get()._field_untyped)) && (*_self_)._field_r.get()._field_untyped)) {
		return;;
	};
	if (_220b268e5_IsGreater(_365913_rp.get()._field_Kind,_365813_lp.get()._field_Kind)) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
		if (_220bd088e_IsConst((*_self_)._field_l.ptr())) {
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_365913_rp.get()._field_Kind;
		};
	};
}



inline void _220c02b69_checkModData(_220bee67c_binaryEval* _self_, jule::Ptr<_220bceecb_Data>& _369136_d) {
	if ((!(_220bd088e_IsConst(_369136_d.ptr())))) {
		if (((_220c0d2e5_Prim(_369136_d.get()._field_Kind.ptr()) == nullptr) || (!(_220b27099_IsInt(_220c0d2e5_Prim(_369136_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_220bb78dc_sigAssignable(jule::Str("i64", 3),_369136_d)) {
			_case_begin_2062bd040:;
			{
				_220b2841e_SetI64(_369136_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_220b28078_AsI64(_369136_d.get()._field_Constant.ptr())));
			}
		}
		else if (_220bb7a1e_unsigAssignable(jule::Str("u64", 3),_369136_d)) {
			_case_begin_2062bcc10:;
			{
				_220b28551_SetU64(_369136_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_220b281aa_AsU64(_369136_d.get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_2062bcb99:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_2062bb57c:;
	};
}



inline void _220c02d45_mod(_220bee67c_binaryEval* _self_) {
	_220c02b69_checkModData(&(*_self_), (*_self_)._field_l);
	_220c02b69_checkModData(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _220c031ec_numbersAreCompatibile(_220bee67c_binaryEval* _self_, jule::Str& _371337_lk, jule::Str& _371347_rk) {
	if ((!(_220b2730d_IsNum(_371347_rk)))) {
		return false;;
	};
	if ((_220bd088e_IsConst((*_self_)._field_l.ptr()) && (*_self_)._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((_371337_lk == jule::Str("f32", 3))) {
		if ((_220bd088e_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;;
		};
		return (_371347_rk == jule::Str("f32", 3));;
	};
	if ((_371337_lk == jule::Str("f64", 3))) {
		if ((_220bd088e_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;;
		};
		return (_371347_rk == jule::Str("f64", 3));;
	};
	if ((_220bd088e_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
		return true;;
	};
	return (_371337_lk == _371347_rk);;
}



inline jule::Ptr<_220bceecb_Data> _220c03461_evalFloat(_220bee67c_binaryEval* _self_) {
	jule::Str _373913_lk = _220c0d2e5_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _374013_rk = _220c0d2e5_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_220c031ec_numbersAreCompatibile(&(*_self_), _373913_lk,_374013_rk)))) {
		_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_373913_lk, &__jule_any_type6),jule::Any(_374013_rk, &__jule_any_type6)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_2062c61be:;
			{
				if (((!(_220bd088e_IsConst((*_self_)._field_l.ptr()))) || (!(_220bb8ab9_intAssignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_373913_lk, &__jule_any_type6),jule::Any(_374013_rk, &__jule_any_type6)}));
					return nullptr;;
				};
				if (((!(_220bd088e_IsConst((*_self_)._field_r.ptr()))) || (!(_220bb8ab9_intAssignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_373913_lk, &__jule_any_type6),jule::Any(_374013_rk, &__jule_any_type6)}));
					return nullptr;;
				};
				_220b2841e_SetI64((*_self_)._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_220b28078_AsI64((*_self_)._field_l.get()._field_Constant.ptr())));
				_220b28551_SetU64((*_self_)._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_220b281aa_AsU64((*_self_)._field_r.get()._field_Constant.ptr())));
				if ((!(_220c068c6_isOkForShifting((*_self_)._field_r)))) {
					_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*_self_)._field_l;;
			}
		}
		_match_end_2062c5531:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_2062caca6:;
			{
				_220c02927_setTypeToGreater(&(*_self_));
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_2062cac51:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_2062c53bb:;
			{
				_220c02927_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2062cce2e:;
			{
				if ((!(_220b27099_IsInt(_374013_rk)))) {
					_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_373913_lk, &__jule_any_type6),jule::Any(_374013_rk, &__jule_any_type6)}));
					return nullptr;;
				};
				_220c02d45_mod(&(*_self_));
				_220c02927_setTypeToGreater(&(*_self_));
				return (*_self_)._field_r;;
			}
		}
		else {
			_case_begin_2062cb801:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2062cbcc9:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220c036c5_evalInt(_220bee67c_binaryEval* _self_) {
	jule::Str _380513_lk = _220c0d2e5_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _380613_rk = _220c0d2e5_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_2062cd418:;
			{
				if (((!(_220b27099_IsInt(_380513_lk))) || (!(_220b27099_IsInt(_380613_rk))))) {
					_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380513_lk, &__jule_any_type6),jule::Any(_380613_rk, &__jule_any_type6)}));
					return nullptr;;
				};
				if ((!(_220c068c6_isOkForShifting((*_self_)._field_r)))) {
					_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*_self_)._field_l;;
			}
		}
		_match_end_2062d1174:;
	};
	if ((!(_220c031ec_numbersAreCompatibile(&(*_self_), _380513_lk,_380613_rk)))) {
		_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380513_lk, &__jule_any_type6),jule::Any(_380613_rk, &__jule_any_type6)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_2062d4122:;
			{
				return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_2062d185b:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_2062d1284:;
			{
				_220c02927_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2062d6135:;
			{
				_220c02d45_mod(&(*_self_));
				_220c02927_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_2062d4e14:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2062d4221:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220c03939_evalPrim(_220bee67c_binaryEval* _self_) {
	jule::Ptr<_220c10baa_Prim> _386413_prim = _220c0d2e5_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		
		if (_220c13b7a_IsBool(_386413_prim.ptr())) {
			_case_begin_2062d81ae:;
			{
				return _220c024d7_evalBool(&(*_self_));;
			}
		}
		else if (_220c13dde_IsStr(_386413_prim.ptr())) {
			_case_begin_2062d8236:;
			{
				return _220c0274b_evalStr(&(*_self_));;
			}
		}
		_match_end_2062d8104:;
	};
	if ((_220c0d2e5_Prim((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_220c1101d_Str(_386413_prim.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type6)}));
		return nullptr;;
	};
	{
		
		if (_220b271cb_IsFloat(_386413_prim.get()._field_Kind)) {
			_case_begin_2062daa1e:;
			{
				return _220c03461_evalFloat(&(*_self_));;
			}
		}
		else if (_220b27099_IsInt(_386413_prim.get()._field_Kind)) {
			_case_begin_2062da3e2:;
			{
				return _220c036c5_evalInt(&(*_self_));;
			}
		}
		else {
			_case_begin_2062da37b:;
			{
				return nullptr;;
			}
		}
		_match_end_2062d49d5:;
	};
}



inline void _220c03b15_checkSpecialCases(_220bee67c_binaryEval* _self_) {
	if (((!(_220c0c36b_Comparable((*_self_)._field_l.get()._field_Kind.ptr()))) && (!(_220c0bd93_IsNil((*_self_)._field_r.get()._field_Kind.ptr()))))) {
		_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is not comparable", 24),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
	} else if (((!(_220c0c36b_Comparable((*_self_)._field_r.get()._field_Kind.ptr()))) && (!(_220c0bd93_IsNil((*_self_)._field_l.get()._field_Kind.ptr()))))) {
		_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is not comparable", 24),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type6)}));
	};
}



inline jule::Ptr<_220bceecb_Data> _220c03d79_evalOp(_220bee67c_binaryEval* _self_) {
	_220c03b15_checkSpecialCases(&(*_self_));
	{
		
		if (_220c0c107_Void((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_2062de391:;
			{
				_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(jule::Str("void", 4), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		else if (((_220c0d2e5_Prim((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr) && _220c14153_IsAny(_220c0d2e5_Prim((*_self_)._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2062e002e:;
			{
				({
					jule::Ptr<_220bceecb_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_220bceecb_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2062e0095;
			}
		}
		else if (((_220c0d2e5_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr) && _220c14153_IsAny(_220c0d2e5_Prim((*_self_)._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2062e0095:;
			{
				return _220c02273_evalAny(&(*_self_));;
			}
		}
		else if ((_220c0dc96_TypeEnum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062de98a:;
			{
				({
					jule::Ptr<_220bceecb_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_220bceecb_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2062dea12;
			}
		}
		else if ((_220c0dc96_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062dea12:;
			{
				return _220c00d21_evalTypeEnum(&(*_self_));;
			}
		}
		else if (_220c0bd93_IsNil((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_2062dea89:;
			{
				return _220c00848_evalNil(&(*_self_));;
			}
		}
		else if ((_220c0da32_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062deb11:;
			{
				({
					jule::Ptr<_220bceecb_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_220bceecb_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2062e011c;
			}
		}
		else if ((_220c0da32_Enum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062e011c:;
			{
				return _220c00aac_evalEnum(&(*_self_));;
			}
		}
		else if ((_220c0d559_Sptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062e0194:;
			{
				({
					jule::Ptr<_220bceecb_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_220bceecb_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2062e021b;
			}
		}
		else if ((_220c0d559_Sptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062e021b:;
			{
				return _220c01085_evalSptr(&(*_self_));;
			}
		}
		else if ((_220c0d7bd_Ptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062e0293:;
			{
				({
					jule::Ptr<_220bceecb_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_220bceecb_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2062e031a;
			}
		}
		else if ((_220c0d7bd_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062e031a:;
			{
				return _220c012e9_evalPtr(&(*_self_));;
			}
		}
		else if ((_220c0e00a_Arr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062e0392:;
			{
				return _220c0155d_evalArr(&(*_self_));;
			}
		}
		else if ((_220c0e26e_Slc((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062e0419:;
			{
				return _220c017c2_evalSlc(&(*_self_));;
			}
		}
		else if ((_220c0e4d3_Fn((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062e0491:;
			{
				return _220c01a36_evalFn(&(*_self_));;
			}
		}
		else if ((_220c0e9ab_Trait((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062e0518:;
			{
				({
					jule::Ptr<_220bceecb_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_220bceecb_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2062e0590;
			}
		}
		else if ((_220c0e9ab_Trait((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062e0590:;
			{
				return _220c0200e_evalTrait(&(*_self_));;
			}
		}
		else if ((_220c0e747_Struct((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062e0617:;
			{
				return _220c01c9a_evalStruct(&(*_self_));;
			}
		}
		else if ((_220c0d2e5_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2062e068e:;
			{
				return _220c03939_evalPrim(&(*_self_));;
			}
		}
		else {
			_case_begin_2062de913:;
			{
				return nullptr;;
			}
		}
		_match_end_2062de89c:;
	};
}



inline void _220c040ee_evalConst(_220bee67c_binaryEval* _self_, jule::Ptr<_220bceecb_Data>& _394833_d) {
	{
		
		if ((_394833_d == nullptr)) {
			_case_begin_20630000b:;
			{
				return;;
			}
		}
		else if ((!(_220bd088e_IsConst((*_self_)._field_l.ptr()))) || (!(_220bd088e_IsConst((*_self_)._field_r.ptr())))) {
			_case_begin_206300072:;
			{
				_394833_d.get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_2062ee88a:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_206300e52:;
			{
				_394833_d.get()._field_Constant=static__2200d5e93_NewBool(_220b2973e_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_206300ec9:;
			{
				_394833_d.get()._field_Constant=static__2200d5e93_NewBool((!(_220b2973e_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_2063016a0:;
			{
				_394833_d.get()._field_Constant=static__2200d5e93_NewBool(_220b2960c_Or((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_206301716:;
			{
				_394833_d.get()._field_Constant=static__2200d5e93_NewBool(_220b294ca_And((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_20630177c:;
			{
				_394833_d.get()._field_Constant=static__2200d5e93_NewBool(_220b29ad5_Gt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_2063017e3:;
			{
				_394833_d.get()._field_Constant=static__2200d5e93_NewBool(_220b29871_Lt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_206301859:;
			{
				_394833_d.get()._field_Constant=static__2200d5e93_NewBool(_220b29c17_GtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_2063018d1:;
			{
				_394833_d.get()._field_Constant=static__2200d5e93_NewBool(_220b299a3_LtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_206301958:;
			{
				_220b29d49_Add((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_2063019d0:;
			{
				_220b29e7b_Sub((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_206301a57:;
			{
				_220b2a0ad_Mul((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_206301ace:;
			{
				jule::Bool _398517_ok = _220b2a1e0_Div((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_398517_ok)) && (_220b282dc_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
				jule::Ptr<_220c10baa_Prim> _399021_prim = _220c0d2e5_Prim(_394833_d.get()._field_Kind.ptr());;
				{
					
					if (_220b26d35_IsSigInt(_399021_prim.get()._field_Kind)) {
						_case_begin_20630d756:;
						{
							_220b2841e_SetI64(_394833_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_220b28078_AsI64(_394833_d.get()._field_Constant.ptr())));
						}
					}
					else if (_220b26e67_IsUnsigInt(_399021_prim.get()._field_Kind)) {
						_case_begin_20630d7cd:;
						{
							_220b28551_SetU64(_394833_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_220b281aa_AsU64(_394833_d.get()._field_Constant.ptr())));
						}
					}
					_match_end_20630d69b:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_206301b56:;
			{
				jule::Bool _399817_ok = _220b2a322_Mod((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_399817_ok)) && (_220b282dc_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_206301bcd:;
			{
				_220b2a586_BitwiseOr((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_206301c55:;
			{
				_220b2a454_BitwiseAnd((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_206301ccc:;
			{
				_220b2a6b8_Xor((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_206301d54:;
			{
				_220b2a7ea_Lshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_206301dcb:;
			{
				_220b2a92c_Rshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394833_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		_match_end_20630110b:;
	};
	_394833_d.get()._field_Model=jule::Any(_394833_d.get()._field_Constant, &__jule_any_type48);
	_220c07d6c_applyCastModelByEnum(_394833_d,_220c0da32_Enum(_394833_d.get()._field_Kind.ptr()));
}



inline void _220c04374_checkData(_220bee67c_binaryEval* _self_, jule::Ptr<_220bceecb_Data>& _402333_d) {
	jule::Ptr<_220b31a10_FnIns> _402413_f = _220c0e4d3_Fn(_402333_d.get()._field_Kind.ptr());;
	if ((((_402413_f != nullptr) && (_402413_f.get()._field_Decl != nullptr)) && _22004d735_IsMethod(_402413_f.get()._field_Decl.ptr()))) {
		_220bd2055_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _220c04550_checkDatas(_220bee67c_binaryEval* _self_) {
	_220c04374_checkData(&(*_self_), (*_self_)._field_l);
	_220c04374_checkData(&(*_self_), (*_self_)._field_r);
}



inline void _220c047c5_setModel(_220bee67c_binaryEval* _self_, jule::Ptr<_220bceecb_Data>& _403532_d) {
	if (_220bd088e_IsConst(_403532_d.ptr())) {
		if ((_220bd088e_IsConst((*_self_)._field_l.ptr()) && _220bd088e_IsConst((*_self_)._field_r.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_220bceecb_Data> _404318_l;;
	jule::Ptr<_220bceecb_Data> _404325_r;;
	({
		jule::Ptr<_220bceecb_Data> ___jule_assign_arg = (*_self_)._field_l;
		jule::Ptr<_220bceecb_Data> _1___jule_assign_arg = (*_self_)._field_r;
		_404318_l = ___jule_assign_arg;
		_404325_r = _1___jule_assign_arg;
	});
	if ((!(_220bd0b9c_GoodOperand(_404318_l.ptr(), _404325_r)))) {
		({
			jule::Ptr<_220bceecb_Data> ___jule_assign_arg = _404325_r;
			jule::Ptr<_220bceecb_Data> _1___jule_assign_arg = _404318_l;
			_404318_l = ___jule_assign_arg;
			_404325_r = _1___jule_assign_arg;
		});
	};
	_403532_d.get()._field_Model=jule::Any(jule::new_ptr<_220049577_BinopExprModel>(_220049577_BinopExprModel{._field_Left=jule::new_ptr<_22001ab86_OperandExprModel>(_22001ab86_OperandExprModel{._field_Kind=_404318_l.get()._field_Kind, ._field_Model=_404318_l.get()._field_Model}), ._field_Right=jule::new_ptr<_22001ab86_OperandExprModel>(_22001ab86_OperandExprModel{._field_Kind=_404325_r.get()._field_Kind, ._field_Model=_404325_r.get()._field_Model}), ._field_Op=(*_self_)._field_op}), &__jule_any_type118);
}



inline void _220c04a4a_postEval(_220bee67c_binaryEval* _self_, jule::Ptr<_220bceecb_Data>& _406132_d) {
	_406132_d.get()._field_Lvalue=false;
	_220c047c5_setModel(&(*_self_), _406132_d);
}



inline jule::Ptr<_220bceecb_Data> _220c04e02_solveExplicit(_220bee67c_binaryEval* _self_, jule::Ptr<_220bceecb_Data>& _406637_l, jule::Ptr<_220bceecb_Data>& _406652_r) {
	({
		jule::Ptr<_220bceecb_Data> ___jule_assign_arg = _406637_l;
		jule::Ptr<_220bceecb_Data> _1___jule_assign_arg = _406652_r;
		(*_self_)._field_l = ___jule_assign_arg;
		(*_self_)._field_r = _1___jule_assign_arg;
	});
	_220c04550_checkDatas(&(*_self_));
	jule::Ptr<_220bceecb_Data> _407117_d = _220c03d79_evalOp(&(*_self_));;
	({
		jule::Ptr<_220bceecb_Data> ___jule_assign_arg = _406637_l;
		jule::Ptr<_220bceecb_Data> _1___jule_assign_arg = _406652_r;
		(*_self_)._field_l = ___jule_assign_arg;
		(*_self_)._field_r = _1___jule_assign_arg;
	});
	_220c040ee_evalConst(&(*_self_), _407117_d);
	if ((_407117_d != nullptr)) {
		_407117_d.get()._field_Mutable=true;
		_220c04a4a_postEval(&(*_self_), _407117_d);
	};
	return _407117_d;;
}



inline jule::Ptr<_220bceecb_Data> _220c05210_eval(_220bee67c_binaryEval* _self_, jule::Ptr<_21eeae70c_BinopExpr>& _408628_op) {
	if ((_408628_op.get()._field_Op.get()._field_Kind == jule::Str("=", 1))) {
		_220bd2055_pushErr((*_self_)._field_e.ptr(), _408628_op.get()._field_Op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_220bd2374_pushSugggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_220bceecb_Data> _409317_l = _220bebd50_evalExprKind((*_self_)._field_e, _408628_op.get()._field_Left.get()._field_Kind);;
	if (((_409317_l == nullptr) || (_409317_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_220c0ae5d_TypeKind> _409817_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_409317_l.get()._field_Kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_409817_prefix;
	});;
	jule::Ptr<_220bceecb_Data> _410117_r = _220bebd50_evalExprKind((*_self_)._field_e, _408628_op.get()._field_Right.get()._field_Kind);;
	if (((_410117_r == nullptr) || (_410117_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*_self_)._field_op=_408628_op.get()._field_Op;
	jule::Ptr<_220bceecb_Data> _410817_d = _220c04e02_solveExplicit(&(*_self_), _409317_l,_410117_r);;
	if ((((_410817_d != nullptr) && _409317_l.get()._field_IsRune) && _410117_r.get()._field_IsRune)) {
		_410817_d.get()._field_IsRune=true;
	};
	return _410817_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _220bee67c_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220c09731_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220c0a26a_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _220c0b359_Str(_220c0ae5d_TypeKind* _self_) {
	if (_220c0bd93_IsNil(&(*_self_))) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_Variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_220c0bb2e_CppLinked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_CppIdent;
	} else {
		_7417_kind+=_220c0aa2e_Kind_mptr_data[((*_self_)._field_Kind).type_offset]._220c0a5cd_Str((*_self_)._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _220c0b667_Equal(jule::Ptr<_220c0ae5d_TypeKind> _self_, jule::Ptr<_220c0ae5d_TypeKind> _9021_other) {
	if (_220c0bd93_IsNil(_self_.ptr())) {
		return _220c0bd93_IsNil(_9021_other.ptr());;
	};
	if (_220c0bb2e_CppLinked(_self_.ptr())) {
		return (_220c0bb2e_CppLinked(_9021_other.ptr()) && (_self_.get()._field_CppIdent == _9021_other.get()._field_CppIdent));;
	};
	return _220c0aa2e_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._220c0a8db_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _220c0bb2e_CppLinked(_220c0ae5d_TypeKind* _self_) {
	return ((*_self_)._field_CppIdent.len() != 0LL);;
}



inline jule::Bool _220c0bd93_IsNil(_220c0ae5d_TypeKind* _self_) {
	return ((*_self_)._field_Kind == nullptr);;
}



inline jule::Bool _220c0c107_Void(_220c0ae5d_TypeKind* _self_) {
	jule::Ptr<_220c10baa_Prim> _11113_prim = _220c0d2e5_Prim(&(*_self_));;
	return ((_11113_prim != nullptr) && (_11113_prim.get()._field_Kind == jule::Str("void", 4)));;
}



inline jule::Bool _220c0c36b_Comparable(_220c0ae5d_TypeKind* _self_) {
	if (_220c0bb2e_CppLinked(&(*_self_))) {
		return false;;
	};
	{
		_220c0ae5d_TypeKind* _12121__self = (&((*_self_)));;
		if ((_220c0e747_Struct(_12121__self) != nullptr)) {
			return _220c0e747_Struct(_12121__self).get()._field_Comparable;;
		};
		return (((_220c0ec20_Map(_12121__self) == nullptr) && (_220c0e26e_Slc(_12121__self) == nullptr)) && (_220c0e4d3_Fn(_12121__self) == nullptr));;
	};
}



inline jule::Bool _220c0c5d0_Mutable(_220c0ae5d_TypeKind* _self_) {
	{
		_220c0ae5d_TypeKind* _13221__self = (&((*_self_)));;
		if ((_220c0e747_Struct(_13221__self) != nullptr)) {
			return _220c0e747_Struct(_13221__self).get()._field_Mutable;;
		};
		if ((_220c0e9ab_Trait(_13221__self) != nullptr)) {
			return _220c0e9ab_Trait(_13221__self).get()._field_Mutable;;
		};
		if ((_220c0d2e5_Prim(_13221__self) != nullptr)) {
			jule::Ptr<_220c10baa_Prim> _14021_p = _220c0d2e5_Prim(_13221__self);;
			return _220c14153_IsAny(_14021_p.ptr());;
		};
		if ((_220c0e00a_Arr(_13221__self) != nullptr)) {
			return _220c0c5d0_Mutable(_220c0e00a_Arr(_13221__self).get()._field_Elem.ptr());;
		};
		return (((_220c0e26e_Slc(_13221__self) != nullptr) || (_220c0d7bd_Ptr(_13221__self) != nullptr)) || (_220c0d559_Sptr(_13221__self) != nullptr));;
	};
}



inline jule::Bool _220c0c844_NilCompatible(_220c0ae5d_TypeKind* _self_) {
	{
		_220c0ae5d_TypeKind* _15521__self = (&((*_self_)));;
		jule::Ptr<_220c10baa_Prim> _15717_prim = _220c0d2e5_Prim(_15521__self);;
		if (((_15717_prim != nullptr) && _220c14153_IsAny(_15717_prim.ptr()))) {
			return true;;
		};
		return (((((((_220c0bd93_IsNil(_15521__self) || (_220c0e4d3_Fn(_15521__self) != nullptr)) || (_220c0d559_Sptr(_15521__self) != nullptr)) || (_220c0d7bd_Ptr(_15521__self) != nullptr)) || (_220c0e9ab_Trait(_15521__self) != nullptr)) || (_220c0e26e_Slc(_15521__self) != nullptr)) || (_220c0ec20_Map(_15521__self) != nullptr)) || (_220c0dc96_TypeEnum(_15521__self) != nullptr));;
	};
}



inline jule::Bool _220c0caa8_PerformsRC(_220c0ae5d_TypeKind* _self_) {
	{
		_220c0ae5d_TypeKind* _17621__self = (&((*_self_)));;
		jule::Ptr<_220c10baa_Prim> _17717_prim = _220c0d2e5_Prim(_17621__self);;
		if ((_17717_prim != nullptr)) {
			return _220c14153_IsAny(_17717_prim.ptr());;
		};
		return (((_220c0d559_Sptr(_17621__self) != nullptr) || (_220c0e26e_Slc(_17621__self) != nullptr)) || (_220c0e9ab_Trait(_17621__self) != nullptr));;
	};
}



inline jule::Bool _220c0cd1c_SupportsCloning(_220c0ae5d_TypeKind* _self_) {
	{
		_220c0ae5d_TypeKind* _18821__self = (&((*_self_)));;
		{
			
			if ((_220c0d2e5_Prim(_18821__self) != nullptr)) {
				_case_begin_20634beae:;
				{
					return (!(_220c14153_IsAny(_220c0d2e5_Prim(_18821__self).ptr())));;
				}
			}
			else if ((_220c0da32_Enum(_18821__self) != nullptr)) {
				_case_begin_20634dd18:;
				{
					return true;;
				}
			}
			else if ((_220c0e4d3_Fn(_18821__self) != nullptr)) {
				_case_begin_20634dd7e:;
				{
					return true;;
				}
			}
			else if ((_220c0d7bd_Ptr(_18821__self) != nullptr)) {
				_case_begin_20634dde5:;
				{
					return true;;
				}
			}
			else if ((_220c0e26e_Slc(_18821__self) != nullptr)) {
				_case_begin_20634d93e:;
				{
					return _220c0cd1c_SupportsCloning(_220c0e26e_Slc(_18821__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_220c0ec20_Map(_18821__self) != nullptr)) {
				_case_begin_20634d9a5:;
				{
					jule::Ptr<_220c16452_Map> _20121_m = _220c0ec20_Map(_18821__self);;
					return (_220c0cd1c_SupportsCloning(_20121_m.get()._field_Key.ptr()) && _220c0cd1c_SupportsCloning(_20121_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_220c0e00a_Arr(_18821__self) != nullptr)) {
				_case_begin_20634da1b:;
				{
					return _220c0cd1c_SupportsCloning(_220c0e00a_Arr(_18821__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_220c0d559_Sptr(_18821__self) != nullptr)) {
				_case_begin_20634da82:;
				{
					return _220c0cd1c_SupportsCloning(_220c0d559_Sptr(_18821__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_220c0e747_Struct(_18821__self) != nullptr)) {
				_case_begin_20634e126:;
				{
					jule::Ptr<_21eec33d0_StructIns> _20825_s = _220c0e747_Struct(_18821__self);;
					return (((_20825_s.get()._field_Decl != nullptr) && (!(_20825_s.get()._field_Decl.get()._field_CppLinked))) && _21ee83208_IsDerives(_20825_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_20634d8c8:;
				{
					return false;;
				}
			}
			_match_end_20634d862:;
		};
	};
}



inline jule::Bool _220c0d081_Variadicable(_220c0ae5d_TypeKind* _self_) {
	{
		_220c0ae5d_TypeKind* _22121__self = (&((*_self_)));;
		return (_220c0e26e_Slc(_22121__self) != nullptr);;
	};
}



inline jule::Ptr<_220c10baa_Prim> _220c0d2e5_Prim(_220c0ae5d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_220c10baa_Prim>>()) {
			_case_begin_20634bcc2:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_220c10baa_Prim>();;
			}
		}
		else {
			_case_begin_20634d202:;
			{
				return nullptr;;
			}
		}
		_match_end_20634d19c:;
	};
}



inline jule::Ptr<_220c1443e_Sptr> _220c0d559_Sptr(_220c0ae5d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_220c1443e_Sptr>>()) {
			_case_begin_20634d279:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_220c1443e_Sptr>();;
			}
		}
		else {
			_case_begin_206356b56:;
			{
				return nullptr;;
			}
		}
		_match_end_206356b01:;
	};
}



inline jule::Ptr<_220c179a3_Ptr> _220c0d7bd_Ptr(_220c0ae5d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_220c179a3_Ptr>>()) {
			_case_begin_2063571b7:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_220c179a3_Ptr>();;
			}
		}
		else {
			_case_begin_206357838:;
			{
				return nullptr;;
			}
		}
		_match_end_2063577d3:;
	};
}



inline jule::Ptr<_220b38374_Enum> _220c0da32_Enum(_220c0ae5d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_220b38374_Enum>>()) {
			_case_begin_206357daa:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_220b38374_Enum>();;
			}
		}
		else {
			_case_begin_20635852b:;
			{
				return nullptr;;
			}
		}
		_match_end_2063584c6:;
	};
}



inline jule::Ptr<_220b38ae4_TypeEnum> _220c0dc96_TypeEnum(_220c0ae5d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_220b38ae4_TypeEnum>>()) {
			_case_begin_206358a9d:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_220b38ae4_TypeEnum>();;
			}
		}
		else {
			_case_begin_20635921e:;
			{
				return nullptr;;
			}
		}
		_match_end_2063591b9:;
	};
}



inline jule::Ptr<_220c17046_Arr> _220c0e00a_Arr(_220c0ae5d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_220c17046_Arr>>()) {
			_case_begin_206359791:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_220c17046_Arr>();;
			}
		}
		else {
			_case_begin_206359e12:;
			{
				return nullptr;;
			}
		}
		_match_end_206359dac:;
	};
}



inline jule::Ptr<_220c14d9b_Slc> _220c0e26e_Slc(_220c0ae5d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_220c14d9b_Slc>>()) {
			_case_begin_20635a484:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_220c14d9b_Slc>();;
			}
		}
		else {
			_case_begin_20635ab05:;
			{
				return nullptr;;
			}
		}
		_match_end_20635aaa0:;
	};
}



inline jule::Ptr<_220b31a10_FnIns> _220c0e4d3_Fn(_220c0ae5d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_220b31a10_FnIns>>()) {
			_case_begin_20635b177:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_220b31a10_FnIns>();;
			}
		}
		else {
			_case_begin_20635b7e8:;
			{
				return nullptr;;
			}
		}
		_match_end_20635b793:;
	};
}



inline jule::Ptr<_21eec33d0_StructIns> _220c0e747_Struct(_220c0ae5d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_21eec33d0_StructIns>>()) {
			_case_begin_20635bd6a:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_21eec33d0_StructIns>();;
			}
		}
		else {
			_case_begin_20635c4db:;
			{
				return nullptr;;
			}
		}
		_match_end_20635c486:;
	};
}



inline jule::Ptr<_220b376b4_Trait> _220c0e9ab_Trait(_220c0ae5d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_220b376b4_Trait>>()) {
			_case_begin_20635ca5d:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_220b376b4_Trait>();;
			}
		}
		else {
			_case_begin_20635d1ce:;
			{
				return nullptr;;
			}
		}
		_match_end_20635d179:;
	};
}



inline jule::Ptr<_220c16452_Map> _220c0ec20_Map(_220c0ae5d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_220c16452_Map>>()) {
			_case_begin_20635d751:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_220c16452_Map>();;
			}
		}
		else {
			_case_begin_20635ddc2:;
			{
				return nullptr;;
			}
		}
		_match_end_20635dd6c:;
	};
}



inline jule::Ptr<_220c15929_Tuple> _220c0ee84_Tup(_220c0ae5d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_220c15929_Tuple>>()) {
			_case_begin_20635e444:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_220c15929_Tuple>();;
			}
		}
		else {
			_case_begin_20635eab5:;
			{
				return nullptr;;
			}
		}
		_match_end_20635ea60:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _220c0ae5d_TypeKind _Src) {
	_Stream << _220c0b359_Str(&_Src);
	return _Stream;
}



inline jule::Bool _220c106e3_checked(_220c1033b_TypeSymbol* _self_) {
	return ((*_self_)._field_Kind != nullptr);;
}



inline void _220c108be_removeKind(_220c1033b_TypeSymbol* _self_) {
	(*_self_)._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _220c1033b_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _220c1101d_Str(_220c10baa_Prim* _self_) {
	return (*_self_)._field_Kind;;
}



inline jule::Bool _220c1132b_Equal(jule::Ptr<_220c10baa_Prim> _self_, jule::Ptr<_220c0ae5d_TypeKind> _37421_other) {
	jule::Ptr<_220c10baa_Prim> _37513_prim = _220c0d2e5_Prim(_37421_other.ptr());;
	if ((_37513_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _37513_prim.get()._field_Kind);;
}



inline jule::Bool _220c1179e_IsConstraint(_220c10baa_Prim* _self_) {
	return ((((!(_220c13dde_IsStr(&(*_self_)))) && (!(_220c14153_IsAny(&(*_self_))))) && (!(_220c13b7a_IsBool(&(*_self_))))) && (!(_220b2730d_IsNum((*_self_)._field_Kind))));;
}



inline jule::Bool _220c11a13_IsI8(_220c10baa_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i8", 2));;
}



inline jule::Bool _220c11c77_IsI16(_220c10baa_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i16", 3));;
}



inline jule::Bool _220c11edb_IsI32(_220c10baa_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i32", 3));;
}



inline jule::Bool _220c12250_IsI64(_220c10baa_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i64", 3));;
}



inline jule::Bool _220c124b4_IsU8(_220c10baa_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u8", 2));;
}



inline jule::Bool _220c12728_IsU16(_220c10baa_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u16", 3));;
}



inline jule::Bool _220c1298c_IsU32(_220c10baa_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u32", 3));;
}



inline jule::Bool _220c12c01_IsU64(_220c10baa_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u64", 3));;
}



inline jule::Bool _220c12e65_IsF32(_220c10baa_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f32", 3));;
}



inline jule::Bool _220c131c9_IsF64(_220c10baa_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f64", 3));;
}



inline jule::Bool _220c1343d_IsInt(_220c10baa_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("int", 3));;
}



inline jule::Bool _220c136a2_IsUint(_220c10baa_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uint", 4));;
}



inline jule::Bool _220c13916_IsUintptr(_220c10baa_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uintptr", 7));;
}



inline jule::Bool _220c13b7a_IsBool(_220c10baa_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("bool", 4));;
}



inline jule::Bool _220c13dde_IsStr(_220c10baa_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("str", 3));;
}



inline jule::Bool _220c14153_IsAny(_220c10baa_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("any", 3));;
}







std::ostream &operator<<(std::ostream &_Stream, _220c10baa_Prim _Src) {
	_Stream << _220c1101d_Str(&_Src);
	return _Stream;
}



inline jule::Str _220c147a2_Str(_220c1443e_Sptr* _self_) {
	return (jule::Str("&", 1) + _220c0b359_Str((*_self_)._field_Elem.ptr()));;
}



inline jule::Bool _220c14ab0_Equal(jule::Ptr<_220c1443e_Sptr> _self_, jule::Ptr<_220c0ae5d_TypeKind> _45121_other) {
	jule::Ptr<_220c1443e_Sptr> _45213_sptr = _220c0d559_Sptr(_45121_other.ptr());;
	if ((_45213_sptr == nullptr)) {
		return false;;
	};
	return _220c0b667_Equal(_self_.get()._field_Elem, _45213_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _220c1443e_Sptr _Src) {
	_Stream << _220c147a2_Str(&_Src);
	return _Stream;
}



inline jule::Str _220c153a7_Str(_220c14d9b_Slc* _self_) {
	return (jule::Str("[]", 2) + _220c0b359_Str((*_self_)._field_Elem.ptr()));;
}



inline jule::Bool _220c156b5_Equal(jule::Ptr<_220c14d9b_Slc> _self_, jule::Ptr<_220c0ae5d_TypeKind> _47021_other) {
	jule::Ptr<_220c14d9b_Slc> _47113_slc = _220c0e26e_Slc(_47021_other.ptr());;
	if ((_47113_slc == nullptr)) {
		return false;;
	};
	return _220c0b667_Equal(_self_.get()._field_Elem, _47113_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _220c14d9b_Slc _Src) {
	_Stream << _220c153a7_Str(&_Src);
	return _Stream;
}



inline jule::Str _220c15c8c_Str(_220c15929_Tuple* _self_) {
	jule::Str _48717_s = jule::Str("(", 1);;
	_48717_s+=_220c0b359_Str((*_self_)._field_Types[0LL].ptr());
	{
		auto expr = (*_self_)._field_Types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_20637416d:;
		if (it != expr.end()) {
			jule::Ptr<_220c0ae5d_TypeKind> &_48916_t = *it;
			{
				_48717_s+=jule::Str(",", 1);
				_48717_s+=_220c0b359_Str(_48916_t.ptr());
			}
			_iter_next_20637416d:;
			++it;
			goto _iter_begin_20637416d;
		}
		_iter_end_20637416d:;
	};
	_48717_s+=jule::Str(")", 1);
	return _48717_s;;
}



inline jule::Bool _220c1609a_Equal(jule::Ptr<_220c15929_Tuple> _self_, jule::Ptr<_220c0ae5d_TypeKind> _49821_other) {
	jule::Ptr<_220c15929_Tuple> _49913_tup = _220c0ee84_Tup(_49821_other.ptr());;
	if ((_49913_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _49913_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I64 _50617_i = 0LL;;
	for (; (_50617_i < _self_.get()._field_Types.len()); (_50617_i)++) {
		{
			if ((!(_220c0b667_Equal(_self_.get()._field_Types[_50617_i], _49913_tup.get()._field_Types[_50617_i])))) {
				return false;;
			};
		}
	_iter_next_206376b10:;
	}
	_iter_end_206376b10:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _220c15929_Tuple _Src) {
	_Stream << _220c15c8c_Str(&_Src);
	return _Stream;
}



inline jule::Str _220c167b5_Str(_220c16452_Map* _self_) {
	jule::Str _52617_s = jule::Str("[", 1);;
	_52617_s+=_220c0b359_Str((*_self_)._field_Key.ptr());
	_52617_s+=jule::Str(":", 1);
	_52617_s+=_220c0b359_Str((*_self_)._field_Val.ptr());
	_52617_s+=jule::Str("]", 1);
	return _52617_s;;
}



inline jule::Bool _220c16ac3_Equal(jule::Ptr<_220c16452_Map> _self_, jule::Ptr<_220c0ae5d_TypeKind> _53521_other) {
	jule::Ptr<_220c16452_Map> _53613_m = _220c0ec20_Map(_53521_other.ptr());;
	if ((_53613_m == nullptr)) {
		return false;;
	};
	return (_220c0b667_Equal(_self_.get()._field_Key, _53613_m.get()._field_Key) && _220c0b667_Equal(_self_.get()._field_Val, _53613_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _220c16452_Map _Src) {
	_Stream << _220c167b5_Str(&_Src);
	return _Stream;
}



inline jule::Str _220c173a9_Str(_220c17046_Arr* _self_) {
	jule::Str _55417_s = jule::Str("[", 1);;
	_55417_s+=_220b244c5_Itoa((*_self_)._field_N);
	_55417_s+=jule::Str("]", 1);
	_55417_s+=_220c0b359_Str((*_self_)._field_Elem.ptr());
	return _55417_s;;
}



inline jule::Bool _220c176b7_Equal(jule::Ptr<_220c17046_Arr> _self_, jule::Ptr<_220c0ae5d_TypeKind> _56221_other) {
	jule::Ptr<_220c17046_Arr> _56313_arr = _220c0e00a_Arr(_56221_other.ptr());;
	if ((_56313_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _56313_arr.get()._field_N) && _220c0b667_Equal(_self_.get()._field_Elem, _56313_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _220c17046_Arr _Src) {
	_Stream << _220c173a9_Str(&_Src);
	return _Stream;
}



inline jule::Str _220c17d16_Str(_220c179a3_Ptr* _self_) {
	if (_220c18476_IsUnsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _220c0b359_Str((*_self_)._field_Elem.ptr()));;
}



inline jule::Bool _220c18124_Equal(jule::Ptr<_220c179a3_Ptr> _self_, jule::Ptr<_220c0ae5d_TypeKind> _58621_other) {
	jule::Ptr<_220c179a3_Ptr> _58713_ptr = _220c0d7bd_Ptr(_58621_other.ptr());;
	if ((_58713_ptr == nullptr)) {
		return false;;
	};
	return _220c0b667_Equal(_self_.get()._field_Elem, _58713_ptr.get()._field_Elem);;
}



inline jule::Bool _220c18476_IsUnsafe(_220c179a3_Ptr* _self_) {
	return ((*_self_)._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _220c179a3_Ptr _Src) {
	_Stream << _220c17d16_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220c188e9_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _220c19ed3_pushErr(_220c197c9_typeChecker* _self_, jule::Ptr<_21d81d743_Token> _67226_token, jule::Str _67241_fmt, jule::Slice<jule::Any> _67254_args) {
	_220b6c133_pushErr((*_self_)._field_s.ptr(), _67226_token,_67241_fmt,_67254_args);
}



inline void _220c1a1ae_allowBuiltin(_220c197c9_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _220c1a38a_disallowBuiltin(_220c197c9_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Ptr<_220c10baa_Prim> _220c1a698_buildPrim(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea206d_IdentTypeDecl>& _68429_decl) {
	if ((!(_220c295ec_isPrim(_68429_decl.get()._field_Ident)))) {
		_220c19ed3_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_68429_decl.get()._field_Generics.len() > 0LL)) {
		_220c19ed3_pushErr(&(*_self_), _68429_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_68429_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	return _220c290ad_buildPrimType(_68429_decl.get()._field_Ident);;
}



inline void _20638603c_pushReference(_220c197c9_typeChecker* _self_, jule::Ptr<_21eec33d0_StructIns>& _69840_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_20611431a_Exist((*_self_)._field_refers.ptr(), _69840_t)) {
		return;;
	};
	_220b3303e_Push((*_self_)._field_refers.ptr(), jule::Any(_69840_t, &__jule_any_type10));
}

inline void _206388e30_pushReference(_220c197c9_typeChecker* _self_, jule::Ptr<_220b376b4_Trait>& _69840_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_20638aae1_Exist((*_self_)._field_refers.ptr(), _69840_t)) {
		return;;
	};
	_220b3303e_Push((*_self_)._field_refers.ptr(), jule::Any(_69840_t, &__jule_any_type11));
}



inline void _220c1ab93_pushReferenceByKind(_220c197c9_typeChecker* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _70843_k) {
	{
		
		if ((_220c0e747_Struct(_70843_k.ptr()) != nullptr)) {
			_case_begin_206384bd9:;
			{
				jule::Ptr<_21eec33d0_StructIns> _71121_t = _220c0e747_Struct(_70843_k.ptr());;
				_20638603c_pushReference(&(*_self_), _71121_t);
			}
		}
		else if ((_220c0e9ab_Trait(_70843_k.ptr()) != nullptr)) {
			_case_begin_206384c61:;
			{
				jule::Ptr<_220b376b4_Trait> _71421_t = _220c0e9ab_Trait(_70843_k.ptr());;
				_206388e30_pushReference(&(*_self_), _71421_t);
			}
		}
		_match_end_206384ac9:;
	};
}



inline void _220c1b05b_pushCycleError(_220c197c9_typeChecker* _self_, jule::Any _71929_def1, jule::Any _71940_def2, jule::Str& _71956_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _72113_getIdent = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _72128_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _72128_def };
			
			if (_match_expr.type == &__jule_any_type68) {
				_case_begin_20638e166:;
				{
					return _72128_def.cast_ptr<_220c0a26a_TypeAlias>(&__jule_any_type68).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type67) {
				_case_begin_20638e1cc:;
				{
					return _72128_def.cast_ptr<_21eec3006_Struct>(&__jule_any_type67).get()._field_Ident;;
				}
			}
			else {
				_case_begin_20638da28:;
				{
					return jule::Str();;
				}
			}
			_match_end_20638d94b:;
		};
	});;
	jule::Str _73113_def1Ident = _72113_getIdent(_71929_def1);;
	jule::Str _73213_def2Ident = _72113_getIdent(_71940_def2);;
	jule::Str _73313_refersTo = _21d4e555d_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_73113_def1Ident, &__jule_any_type6),jule::Any(_73213_def2Ident, &__jule_any_type6)}));;
	(_71956_message).buffer.insert(0, (((_21d4409e7_Repeat(jule::Str(" ", 1),4LL) + _73313_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _220c1b413_checkCrossCycle(_220c197c9_typeChecker* _self_, jule::Any _73730_decl, jule::Str& _73746_message) {
	{
		auto &_match_expr{ _73730_decl };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_206391300:;
			{
				jule::Ptr<_220c0a26a_TypeAlias> _74017_ta = _73730_decl.cast_ptr<_220c0a26a_TypeAlias>(&__jule_any_type68);;
				{
					auto &expr = _74017_ta.get()._field_Refers;
					auto it = expr.begin();
					_iter_begin_206391cb2:;
					if (it != expr.end()) {
						jule::Any &_74120_d = *it;
						{
							{
								
								if ((_74120_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_2063929b6:;
									{
										_220c1b05b_pushCycleError(&(*_self_), jule::Any(_74017_ta, &__jule_any_type68),_74120_d,_73746_message);
										return false;;
									}
								}
								else if ((!(_220c1b413_checkCrossCycle(&(*_self_), _74120_d,_73746_message)))) {
									_case_begin_206392a3d:;
									{
										_220c1b05b_pushCycleError(&(*_self_), jule::Any(_74017_ta, &__jule_any_type68),_74120_d,_73746_message);
										return false;;
									}
								}
								_match_end_2063928a6:;
							};
						}
						_iter_next_206391cb2:;
						++it;
						goto _iter_begin_206391cb2;
					}
					_iter_end_206391cb2:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_206391366:;
			{
				jule::Ptr<_21eec3006_Struct> _75217_s = _73730_decl.cast_ptr<_21eec3006_Struct>(&__jule_any_type67);;
				{
					auto &expr = _75217_s.get()._field_Depends;
					auto it = expr.begin();
					_iter_begin_206393456:;
					if (it != expr.end()) {
						jule::Ptr<_21eec3006_Struct> &_75320_d = *it;
						{
							{
								
								if ((__jule_any_type67_compare((*_self_)._field_referencer.get()._field_owner, _75320_d))) {
									_case_begin_206394d09:;
									{
										_220c1b05b_pushCycleError(&(*_self_), jule::Any(_75217_s, &__jule_any_type67),jule::Any(_75320_d, &__jule_any_type67),_73746_message);
										return false;;
									}
								}
								else if ((!(_220c1b413_checkCrossCycle(&(*_self_), jule::Any(_75320_d, &__jule_any_type67),_73746_message)))) {
									_case_begin_206394d81:;
									{
										_220c1b05b_pushCycleError(&(*_self_), jule::Any(_75217_s, &__jule_any_type67),jule::Any(_75320_d, &__jule_any_type67),_73746_message);
										return false;;
									}
								}
								_match_end_206394be9:;
							};
						}
						_iter_next_206393456:;
						++it;
						goto _iter_begin_206393456;
					}
					_iter_end_206393456:;
				};
			}
		}
		_match_end_206391212:;
	};
	return true;;
}



inline jule::Bool _220c1b7ba_checkIllegalCycles(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea206d_IdentTypeDecl>& _77138_ident, jule::Any _77165_decl) {
	jule::Bool __jule_func_result = false;
	if (((*_self_)._field_referencer == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _77165_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_206396c84:;
			{
				if (((*_self_)._field_notPlain || _77165_decl.cast_ptr<_21eec3006_Struct>(&__jule_any_type67).get()._field_CppLinked)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_206396cea:;
			{
				if (_77165_decl.cast_ptr<_220c0a26a_TypeAlias>(&__jule_any_type68).get()._field_CppLinked) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_2063948a8:;
	};
	if ((_77165_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_220c19ed3_pushErr(&(*_self_), _77138_ident.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident, &__jule_any_type6)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _79417_message = jule::Str();;
	if ((!(_220c1b413_checkCrossCycle(&(*_self_), _77165_decl,_79417_message)))) {
		jule::Str _79721_errMsg = _79417_message;;
		_79417_message=jule::Str();
		_220c1b05b_pushCycleError(&(*_self_), (*_self_)._field_referencer.get()._field_owner,_77165_decl,_79417_message);
		_79721_errMsg+=_79417_message;
		_220c19ed3_pushErr(&(*_self_), _77138_ident.get()._field_Token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_79721_errMsg, &__jule_any_type6)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_206399418:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({_77165_decl}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_20639ac99:;
			{
				{
					auto &_match_expr{ _77165_decl };
					
					if (_match_expr.type == &__jule_any_type67) {
						_case_begin_20639b492:;
						{
							jule::Ptr<_21eec3006_Struct> _81325_s = (*_self_)._field_referencer.get()._field_owner.cast_ptr<_21eec3006_Struct>(&__jule_any_type67);;
							_81325_s.get()._field_Depends = jule::alloc_for_append(_81325_s.get()._field_Depends,1);_81325_s.get()._field_Depends.__push(_77165_decl.cast_ptr<_21eec3006_Struct>(&__jule_any_type67));;
						}
					}
					_match_end_20639b3a4:;
				};
			}
		}
		_match_end_206399380:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_220c0aa2e_Kind> _220c1bb72_fromTypeAlias(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea206d_IdentTypeDecl>& _82133_decl, jule::Ptr<_220c0a26a_TypeAlias>& _82160_ta) {
	if ((!(_220b6c809_isAccessibleDefine((*_self_)._field_s.ptr(), _82160_ta.get()._field_Public,_82160_ta.get()._field_Token)))) {
		_220c19ed3_pushErr(&(*_self_), _82133_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_82133_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	_82160_ta.get()._field_Used=true;
	if ((_82133_decl.get()._field_Generics.len() > 0LL)) {
		_220c19ed3_pushErr(&(*_self_), _82133_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_82133_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_bannedGenerics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_2063a0a5c:;
			if (it != expr.end()) {
				jule::Ptr<_220c0a26a_TypeAlias> _83820_bg = *it;
				{
					if (((_83820_bg == _82160_ta) || ((_82160_ta.get()._field_Kind.get()._field_Kind != nullptr) && _220c0b667_Equal(_82160_ta.get()._field_Kind.get()._field_Kind, _83820_bg.get()._field_Kind.get()._field_Kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_2063a0a5c;
					};
				}
				_iter_next_2063a0a5c:;
				++it;
				goto _iter_begin_2063a0a5c;
			}
			_iter_end_2063a0a5c:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_2063a291b:;
			if (it != expr.end()) {
				jule::Ptr<_220c0a26a_TypeAlias> _84920_bg = *it;
				{
					if ((_84920_bg == _82160_ta)) {
						_220c19ed3_pushErr(&(*_self_), _82133_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_82133_decl.get()._field_Ident, &__jule_any_type6)}));
						return nullptr;;
					};
					{
						auto &expr = _82160_ta.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_2063a3565:;
						if (it != expr.end()) {
							jule::Ptr<_220c0a26a_TypeAlias> _85424_dg = *it;
							{
								if ((_84920_bg == _85424_dg)) {
									_220c19ed3_pushErr(&(*_self_), _82133_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_82133_decl.get()._field_Ident, &__jule_any_type6)}));
									return nullptr;;
								};
							}
							_iter_next_2063a3565:;
							++it;
							goto _iter_begin_2063a3565;
						}
						_iter_end_2063a3565:;
					};
				}
				_iter_next_2063a291b:;
				++it;
				goto _iter_begin_2063a291b;
			}
			_iter_end_2063a291b:;
		};
	};
	jule::Bool _86317_ok = _220c1b7ba_checkIllegalCycles(&(*_self_), _82133_decl,jule::Any(_82160_ta, &__jule_any_type68));;
	if ((!(_86317_ok))) {
		return nullptr;;
	};
	if ((_82160_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_86317_ok=_220b772e7_checkTypeAliasDeclKind((*_self_)._field_s, _82160_ta,(*_self_)._field_lookup);
		if ((!(_86317_ok))) {
			return nullptr;;
		};
	};
	if ((_82160_ta.get()._field_Generic && ((*_self_)._field_ownerAlias != nullptr))) {
		(*_self_)._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*_self_)._field_ownerAlias.get()._field_Generics,1);(*_self_)._field_ownerAlias.get()._field_Generics.__push(_82160_ta);;
	};
	jule::Ptr<_220c0ae5d_TypeKind> _88217_tk = jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Generic=_82160_ta.get()._field_Generic, ._field_Kind=_82160_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_220c1ab93_pushReferenceByKind(&(*_self_), _88217_tk);
	if (_82160_ta.get()._field_CppLinked) {
		_88217_tk.get()._field_CppIdent=_82160_ta.get()._field_Ident;
	} else {
		_88217_tk.get()._field_CppIdent=_82160_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_220c0aa2e_Kind>(_88217_tk, 5);;
}



inline jule::Ptr<_220b38374_Enum> _220c1c029_fromEnum(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea206d_IdentTypeDecl>& _89528_decl, jule::Ptr<_220b38374_Enum>& _89555_e) {
	if ((!(_220b6c809_isAccessibleDefine((*_self_)._field_s.ptr(), _89555_e.get()._field_Public,_89555_e.get()._field_Token)))) {
		_220c19ed3_pushErr(&(*_self_), _89528_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_89528_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_89528_decl.get()._field_Generics.len() > 0LL)) {
		_220c19ed3_pushErr(&(*_self_), _89528_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_89528_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	return _89555_e;;
}



inline jule::Ptr<_220b38ae4_TypeEnum> _220c1c3d1_fromTypeEnum(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea206d_IdentTypeDecl>& _90732_decl, jule::Ptr<_220b38ae4_TypeEnum>& _90759_e) {
	if ((!(_220b6c809_isAccessibleDefine((*_self_)._field_s.ptr(), _90759_e.get()._field_Public,_90759_e.get()._field_Token)))) {
		_220c19ed3_pushErr(&(*_self_), _90732_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_90732_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_90732_decl.get()._field_Generics.len() > 0LL)) {
		_220c19ed3_pushErr(&(*_self_), _90732_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_90732_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	return _90759_e;;
}



inline jule::Ptr<_220b376b4_Trait> _220c1c788_fromTrait(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea206d_IdentTypeDecl>& _91929_decl, jule::Ptr<_220b376b4_Trait>& _91956_t) {
	if ((!(_220b6c809_isAccessibleDefine((*_self_)._field_s.ptr(), _91956_t.get()._field_Public,_91956_t.get()._field_Token)))) {
		_220c19ed3_pushErr(&(*_self_), _91929_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_91929_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_91929_decl.get()._field_Generics.len() > 0LL)) {
		_220c19ed3_pushErr(&(*_self_), _91929_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_91929_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	_206388e30_pushReference(&(*_self_), _91956_t);
	return _91956_t;;
}



inline jule::Bool _220c1cb40_checkStructIns(_220c197c9_typeChecker* _self_, jule::Ptr<_21eec33d0_StructIns>& _93238_ins, jule::Ptr<_21d81d743_Token>& _93260_errorToken) {
	jule::Bool __jule_func_result = false;
	if (_93238_ins.get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_93238_ins.get()._field_Checked=true;
	if ((((*_self_)._field_referencer != nullptr) && (__jule_any_type67_compare((*_self_)._field_referencer.get()._field_owner, _93238_ins.get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_220b81477_precheckStructIns((*_self_)._field_s, _93238_ins,_93260_errorToken)))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((_93238_ins.get()._field_Generics.len() > 0LL)) {
		_220b81de5_checkStructInsOperators((*_self_)._field_s, _93238_ins);
		_220b816ec_checkStructIns((*_self_)._field_s, _93238_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _220c1cdd7_appendUsedStructReference(_220c197c9_typeChecker* _self_, jule::Ptr<_21eec3006_Struct>& _95349_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_2063b45a9:;
			{
				jule::Ptr<_21eec3006_Struct> _95921_refS = (*_self_)._field_referencer.get()._field_owner.cast_ptr<_21eec3006_Struct>(&__jule_any_type67);;
				if ((!(_21ee871c9_IsUses(_95921_refS.ptr(), _95349_s)))) {
					_95921_refS.get()._field_Uses = jule::alloc_for_append(_95921_refS.get()._field_Uses,1);_95921_refS.get()._field_Uses.__push(_95349_s);;
				};
			}
		}
		_match_end_2063b4554:;
	};
}



inline jule::Ptr<_21eec33d0_StructIns> _220c1d2a0_buildStructInstance(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea206d_IdentTypeDecl>& _96643_decl, jule::Ptr<_21eec3006_Struct>& _96670_s) {
	jule::Ptr<_220c188e9_referencer> _96817_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>> _97017_bannedGenerics = (*_self_)._field_bannedGenerics;;
	if (((*_self_)._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_220b49682_scopeChecker>>()) {
				_case_begin_2063b725a:;
				{
					jule::Ptr<_220b49682_scopeChecker> _97725_sc = (*_self_)._field_lookup.operator jule::Ptr<_220b49682_scopeChecker>();;
					jule::Ptr<_220b49682_scopeChecker> _97825_hard = _220b4ca3c_getHardRoot(_97725_sc);;
					if (((_97825_hard.get()._field_owner.get()._field_Owner == nullptr) || (_97825_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != _96670_s))) {
						goto _match_end_2063b7205;
					};
					jule::I64 _98221_n = (_97825_hard.get()._field_owner.get()._field_Generics.len() + _97825_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*_self_)._field_bannedGenerics=_97825_hard.get()._field_table.get()._field_TypeAliases.slice(0LL,_98221_n);
				}
			}
			_match_end_2063b7205:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Trait<_220c2bc3c_Lookup> _99217_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=(*_self_)._field_rootLookup;
	jule::Ptr<_21eec33d0_StructIns> _99617_ins = _21ee7994c_instance(_96670_s);;
	_99617_ins.get()._field_Generics=jule::Slice<jule::Ptr<_220c09731_InsGeneric>>::alloc(0LL, _96643_decl.get()._field_Generics.len());
	{
		auto &expr = _96643_decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_2063bb65a:;
		if (it != expr.end()) {
			jule::Ptr<_21eea19a7_TypeDecl> _99821_g = *it;
			{
				jule::Ptr<_220c0ae5d_TypeKind> _99921_kind = _220c26594_build(&(*_self_), _99821_g.get()._field_Kind);;
				if ((_99921_kind == nullptr)) {
					return nullptr;;
				};
				_99617_ins.get()._field_Generics = jule::alloc_for_append(_99617_ins.get()._field_Generics,1);_99617_ins.get()._field_Generics.__push(jule::new_ptr<_220c09731_InsGeneric>(_220c09731_InsGeneric{._field_Kind=_99921_kind, }));;
			}
			_iter_next_2063bb65a:;
			++it;
			goto _iter_begin_2063bb65a;
		}
		_iter_end_2063bb65a:;
	};
	(*_self_)._field_lookup=_99217_lookup;
	(*_self_)._field_bannedGenerics=_97017_bannedGenerics;
	(*_self_)._field_referencer=_96817_referencer;
	return _99617_ins;;
}



inline jule::Ptr<_21eec33d0_StructIns> _220c1d657_fromStruct(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea206d_IdentTypeDecl>& _101434_decl, jule::Ptr<_21eec3006_Struct>& _101461_s) {
	if ((!(_220b6c809_isAccessibleDefine((*_self_)._field_s.ptr(), _101461_s.get()._field_Public,_101461_s.get()._field_Token)))) {
		_220c19ed3_pushErr(&(*_self_), _101434_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_101434_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	if ((*_self_)._field_selection) {
		if ((_101434_decl.get()._field_Generics.len() > 0LL)) {
			_220c19ed3_pushErr(&(*_self_), _101434_decl.get()._field_Token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_21eec33d0_StructIns>(_21eec33d0_StructIns{._field_Decl=_101461_s, });;
	};
	jule::Bool _103217_ok = ((*_self_)._field_notPlain || _220c1b7ba_checkIllegalCycles(&(*_self_), _101434_decl,jule::Any(_101461_s, &__jule_any_type67)));;
	if ((!(_103217_ok))) {
		return nullptr;;
	};
	_220c1cdd7_appendUsedStructReference(&(*_self_), _101461_s);
	jule::Ptr<_21eec33d0_StructIns> _103817_ins = _220c1d2a0_buildStructInstance(&(*_self_), _101434_decl,_101461_s);;
	if ((_103817_ins == nullptr)) {
		return nullptr;;
	};
	_103217_ok=_220b6d4ca_checkGenericQuantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_103817_ins.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_103817_ins.get()._field_Generics.len()),_101434_decl.get()._field_Token);
	if ((!(_103217_ok))) {
		return nullptr;;
	};
	jule::Ptr<_21eec33d0_StructIns> _104817_existInstance = _21ee7d720_appendInstance(_101461_s.ptr(), _103817_ins);;
	if ((_104817_existInstance != nullptr)) {
		if ((!(_220b75999_checkConstraintsStruct((*_self_)._field_s, _103817_ins,_101434_decl.get()._field_Token,_104817_existInstance)))) {
			return nullptr;;
		};
		_20638603c_pushReference(&(*_self_), _104817_existInstance);
		return _104817_existInstance;;
	};
	if ((!(_220c1cb40_checkStructIns(&(*_self_), _103817_ins,_101434_decl.get()._field_Token)))) {
		return nullptr;;
	};
	_20638603c_pushReference(&(*_self_), _103817_ins);
	return _103817_ins;;
}



inline jule::Trait<_220c0aa2e_Kind> _220c1d965_getDef(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea206d_IdentTypeDecl>& _107230_decl) {
	{
		auto &expr = (*_self_)._field_ignoreGenerics;
		auto it = expr.begin();
		_iter_begin_2063c5ca2:;
		if (it != expr.end()) {
			jule::Ptr<_21eeb3b0c_GenericDecl> _107316_g = *it;
			{
				if ((_107316_g.get()._field_Ident == _107230_decl.get()._field_Ident)) {
					return jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(_107316_g.get()._field_Ident), 6);;
				};
			}
			_iter_next_2063c5ca2:;
			++it;
			goto _iter_begin_2063c5ca2;
		}
		_iter_end_2063c5ca2:;
	};
	{
		auto &expr = (*_self_)._field_useGenerics;
		auto it = expr.begin();
		_iter_begin_2063c5e39:;
		if (it != expr.end()) {
			jule::Ptr<_220c0a26a_TypeAlias> _107921_g = *it;
			{
				if ((_107921_g.get()._field_Ident == _107230_decl.get()._field_Ident)) {
					if ((_107230_decl.get()._field_Generics.len() > 0LL)) {
						_220c19ed3_pushErr(&(*_self_), _107230_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_107230_decl.get()._field_Ident, &__jule_any_type6)}));
						return nullptr;;
					};
					jule::Ptr<_21eec33d0_StructIns> _108525_st = _220c0e747_Struct(_107921_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_108525_st != nullptr)) {
						jule::Bool _108725_ok = _220c1b7ba_checkIllegalCycles(&(*_self_), _107230_decl,jule::Any(_108525_st.get()._field_Decl, &__jule_any_type67));;
						if ((!(_108725_ok))) {
							return nullptr;;
						};
					};
					return _107921_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_2063c5e39:;
			++it;
			goto _iter_begin_2063c5e39;
		}
		_iter_end_2063c5e39:;
	};
	if ((!(_107230_decl.get()._field_CppLinked))) {
		jule::Ptr<_220b38374_Enum> _109721_e = _220c2bc3c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._220c2b7db_FindEnum((*_self_)._field_lookup, _107230_decl.get()._field_Ident);;
		if ((_109721_e != nullptr)) {
			return jule::Trait<_220c0aa2e_Kind>(_220c1c029_fromEnum(&(*_self_), _107230_decl,_109721_e), 3);;
		};
		jule::Ptr<_220b38ae4_TypeEnum> _110221_te = _220c2bc3c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._220c2bae9_FindTypeEnum((*_self_)._field_lookup, _107230_decl.get()._field_Ident);;
		if ((_110221_te != nullptr)) {
			return jule::Trait<_220c0aa2e_Kind>(_220c1c3d1_fromTypeEnum(&(*_self_), _107230_decl,_110221_te), 4);;
		};
		jule::Ptr<_220b376b4_Trait> _110721_t = _220c2bc3c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._220c2b4cd_FindTrait((*_self_)._field_lookup, _107230_decl.get()._field_Ident);;
		if ((_110721_t != nullptr)) {
			return jule::Trait<_220c0aa2e_Kind>(_220c1c788_fromTrait(&(*_self_), _107230_decl,_110721_t), 2);;
		};
	} else if ((*_self_)._field_selection) {
		_220c19ed3_pushErr(&(*_self_), _107230_decl.get()._field_Token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_21eec3006_Struct> _111617_s = _220c2bc3c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._220c2ad18_FindStruct((*_self_)._field_lookup, _107230_decl.get()._field_Ident,_107230_decl.get()._field_CppLinked);;
	if ((_111617_s != nullptr)) {
		return jule::Trait<_220c0aa2e_Kind>(_220c1d657_fromStruct(&(*_self_), _107230_decl,_111617_s), 0);;
	};
	jule::Ptr<_220c0a26a_TypeAlias> _112117_ta = _220c2bc3c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._220c2a961_FindTypeAlias((*_self_)._field_lookup, _107230_decl.get()._field_Ident,_107230_decl.get()._field_CppLinked);;
	if (((_112117_ta == nullptr) && (!((*_self_)._field_disBuiltin)))) {
		_112117_ta=_220c3ae38_findBuiltinTypeAlias(_107230_decl.get()._field_Ident);
	};
	if ((_112117_ta != nullptr)) {
		return _220c1bb72_fromTypeAlias(&(*_self_), _107230_decl,_112117_ta);;
	};
	_220c19ed3_pushErr(&(*_self_), _107230_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_107230_decl.get()._field_Ident, &__jule_any_type6)}));
	return nullptr;;
}



inline jule::Trait<_220c0aa2e_Kind> _220c1dc73_buildIdent(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea206d_IdentTypeDecl> _113333_decl) {
	{
		
		if (_220c295ec_isPrim(_113333_decl.get()._field_Ident)) {
			_case_begin_2063d1cbe:;
			{
				return jule::Trait<_220c0aa2e_Kind>(_220c1a698_buildPrim(&(*_self_), _113333_decl), 6);;
			}
		}
		else {
			_case_begin_2063d15c6:;
			{
				return _220c1d965_getDef(&(*_self_), _113333_decl);;
			}
		}
		_match_end_2063d150a:;
	};
}



inline jule::Trait<_220c0aa2e_Kind> _220c1e081_buildSubIdent(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea26bc_SubIdentTypeDecl> _114236_decl) {
	jule::Trait<_220c0aa2e_Kind> _114317_ident = _220c1dc73_buildIdent(&(*_self_), _114236_decl.get()._field_Idents[0LL]);;
	if ((_114317_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _114317_ident };
		
		if (_match_expr.type_is<jule::Ptr<_220b38ae4_TypeEnum>>()) {
			_case_begin_2063d35ea:;
			{
				goto _match_end_2063d350c;
			}
		}
		else {
			_case_begin_2063d33ca:;
			{
				_220c19ed3_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2063d350c:;
	};
	jule::Ptr<_220b38ae4_TypeEnum> _115417_t = _114317_ident.operator jule::Ptr<_220b38ae4_TypeEnum>();;
	jule::Slice<jule::Ptr<_21eea206d_IdentTypeDecl>> _115517_idents = _114236_decl.get()._field_Idents.slice(1LL);;
	{
		auto &expr = _115517_idents;
		auto it = expr.begin();
		_iter_begin_2063d49c5:;
		if (it != expr.end()) {
			jule::I64 _115613_i = it - expr.begin();
			jule::Ptr<_21eea206d_IdentTypeDecl> _115616_id = *it;
			{
				jule::Ptr<_220b38907_TypeEnumItem> _115721_item = _220b39188_FindItem(_115417_t.ptr(), _115616_id.get()._field_Ident);;
				if ((_115721_item == nullptr)) {
					_220c19ed3_pushErr(&(*_self_), _115616_id.get()._field_Token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_115417_t.get()._field_Ident, &__jule_any_type6),jule::Any(_115616_id.get()._field_Ident, &__jule_any_type6)}));
					return nullptr;;
				};
				if (((_115517_idents.len() - _115613_i) == 1LL)) {
					_220c1ab93_pushReferenceByKind(&(*_self_), _115721_item.get()._field_Kind.get()._field_Kind);
					return jule::Trait<_220c0aa2e_Kind>(_115721_item.get()._field_Kind.get()._field_Kind, 5);;
				};
				_115417_t=_220c0dc96_TypeEnum(_115721_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_115417_t == nullptr)) {
					_220c19ed3_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_2063d49c5:;
			++it;
			_115613_i++;
			goto _iter_begin_2063d49c5;
		}
		_iter_end_2063d49c5:;
	};
	return nullptr;;
}



inline jule::Ptr<_220c1443e_Sptr> _220c1e38e_buildSptrFromType(_220c197c9_typeChecker* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _117641_elem) {
	{
		
		if ((_117641_elem == nullptr)) {
			_case_begin_2063d8886:;
			{
				return nullptr;;
			}
		}
		else if ((_220c0e747_Struct(_117641_elem.ptr()) != nullptr)) {
			_case_begin_2063d890d:;
			{
				jule::Ptr<_21eec33d0_StructIns> _118217_s = _220c0e747_Struct(_117641_elem.ptr());;
				if (((_118217_s.get()._field_Decl != nullptr) && _118217_s.get()._field_Decl.get()._field_CppLinked)) {
					_220c19ed3_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_220c0e00a_Arr(_117641_elem.ptr()) != nullptr) && _220c0e00a_Arr(_117641_elem.ptr()).get()._field_Auto)) {
			_case_begin_2063d8985:;
			{
				_220c19ed3_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2063d7ed4:;
	};
	return jule::new_ptr<_220c1443e_Sptr>(_220c1443e_Sptr{._field_Elem=_117641_elem});;
}



inline jule::Ptr<_220c1443e_Sptr> _220c1e69c_buildSptr(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea2d60_SptrTypeDecl> _119632_decl) {
	jule::Bool _119713_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_119713_notPlain;
	});;
	jule::Ptr<_220c0ae5d_TypeKind> _120117_elem = _220c268a2_checkDecl(&(*_self_), _119632_decl.get()._field_Elem);;
	return _220c1e38e_buildSptrFromType(&(*_self_), _120117_elem);;
}



inline jule::Ptr<_220c179a3_Ptr> _220c24817_buildPtrFromType(_220c197c9_typeChecker* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _120540_elem) {
	{
		
		if ((_120540_elem == nullptr)) {
			_case_begin_2063dd78c:;
			{
				return nullptr;;
			}
		}
		else if (((_220c0e00a_Arr(_120540_elem.ptr()) != nullptr) && _220c0e00a_Arr(_120540_elem.ptr()).get()._field_Auto)) {
			_case_begin_2063dd814:;
			{
				_220c19ed3_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_220c179a3_Ptr>();;
			}
		}
		_match_end_2063dd67c:;
	};
	return jule::new_ptr<_220c179a3_Ptr>(_220c179a3_Ptr{._field_Elem=_120540_elem});;
}



inline jule::Ptr<_220c179a3_Ptr> _220c24b25_buildPtr(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea3833_PtrTypeDecl> _122031_decl) {
	jule::Bool _122113_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_122113_notPlain;
	});;
	jule::Ptr<_220c0ae5d_TypeKind> _122517_elem = nullptr;;
	if ((!(_21eea3b85_IsUnsafe(_122031_decl.ptr())))) {
		_122517_elem=_220c268a2_checkDecl(&(*_self_), _122031_decl.get()._field_Elem);
		return _220c24817_buildPtrFromType(&(*_self_), _122517_elem);;
	};
	return jule::new_ptr<_220c179a3_Ptr>(_220c179a3_Ptr{._field_Elem=_122517_elem});;
}



inline jule::Ptr<_220c14d9b_Slc> _220c24e33_buildSlc(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea325b_SlcTypeDecl> _123731_decl) {
	jule::Bool _123813_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_123813_notPlain;
	});;
	jule::Ptr<_220c0ae5d_TypeKind> _124217_elem = _220c268a2_checkDecl(&(*_self_), _123731_decl.get()._field_Elem);;
	{
		
		if ((_124217_elem == nullptr)) {
			_case_begin_2063e385d:;
			{
				return nullptr;;
			}
		}
		else if (((_220c0e00a_Arr(_124217_elem.ptr()) != nullptr) && _220c0e00a_Arr(_124217_elem.ptr()).get()._field_Auto)) {
			_case_begin_2063e38d5:;
			{
				_220c19ed3_pushErr(&(*_self_), _123731_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2063e37a3:;
	};
	return jule::new_ptr<_220c14d9b_Slc>(_220c14d9b_Slc{._field_Elem=_124217_elem});;
}



inline jule::Ptr<_220c17046_Arr> _220c25241_buildArr(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea3eb5_ArrTypeDecl> _125831_decl) {
	jule::Bool _125913_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_125913_notPlain;
	});;
	jule::I64 _126317_n = 0LL;;
	if ((!(_21eea438e_AutoSized(_125831_decl.ptr())))) {
		jule::Ptr<_220bceecb_Data> _126621_size = _220bec46b_evalExpr(_220b73a1e_eval((*_self_)._field_s, (*_self_)._field_lookup), _125831_decl.get()._field_Size);;
		if ((_126621_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_220bd088e_IsConst(_126621_size.ptr())))) {
			_220c19ed3_pushErr(&(*_self_), _125831_decl.get()._field_Size.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_220c0d2e5_Prim(_126621_size.get()._field_Kind.ptr()) == nullptr) || (!(_220b27099_IsInt(_220c0d2e5_Prim(_126621_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_220c19ed3_pushErr(&(*_self_), _125831_decl.get()._field_Size.get()._field_Token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_126317_n=static_cast<jule::I64>(static_cast<jule::I64>(_220b28078_AsI64(_126621_size.get()._field_Constant.ptr())));
		if ((_126317_n < 0LL)) {
			_220c19ed3_pushErr(&(*_self_), _125831_decl.get()._field_Elem.get()._field_Token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_2200de62d_BitSize != 64LL) && (static_cast<jule::F64>(_126317_n) > _220b24ad0_Max(jule::Str("int", 3))))) {
			_220c19ed3_pushErr(&(*_self_), _125831_decl.get()._field_Size.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_220c0ae5d_TypeKind> _128917_elem = _220c268a2_checkDecl(&(*_self_), _125831_decl.get()._field_Elem);;
	{
		
		if ((_128917_elem == nullptr)) {
			_case_begin_2063ec070:;
			{
				return nullptr;;
			}
		}
		else if (((_220c0e00a_Arr(_128917_elem.ptr()) != nullptr) && _220c0e00a_Arr(_128917_elem.ptr()).get()._field_Auto)) {
			_case_begin_2063ec0d6:;
			{
				_220c19ed3_pushErr(&(*_self_), _125831_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2063ebd72:;
	};
	return jule::new_ptr<_220c17046_Arr>(_220c17046_Arr{._field_Auto=_21eea438e_AutoSized(_125831_decl.ptr()), ._field_N=_126317_n, ._field_Elem=_128917_elem});;
}



inline jule::Ptr<_220c16452_Map> _220c2554e_buildMap(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea4713_MapTypeDecl> _130731_decl) {
	jule::Bool _130813_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_130813_notPlain;
	});;
	jule::Ptr<_220c0ae5d_TypeKind> _131217_key = _220c268a2_checkDecl(&(*_self_), _130731_decl.get()._field_Key);;
	if ((_131217_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_220c0ae5d_TypeKind> _131717_val = _220c268a2_checkDecl(&(*_self_), _130731_decl.get()._field_Val);;
	if ((_131717_val == nullptr)) {
		return nullptr;;
	};
	if ((_220c0da32_Enum(_131717_val.ptr()) != nullptr)) {
		_220c19ed3_pushErr(&(*_self_), _130731_decl.get()._field_Val.get()._field_Token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_220c16452_Map>(_220c16452_Map{._field_Key=_131217_key, ._field_Val=_131717_val});;
}



inline jule::Ptr<_220c15929_Tuple> _220c2585c_buildTuple(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea3547_TupleTypeDecl> _133133_decl) {
	jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>> _133217_types = jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>>::alloc(0LL, _133133_decl.get()._field_Types.len());;
	{
		auto &expr = _133133_decl.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_20640274b:;
		if (it != expr.end()) {
			jule::Ptr<_21eea19a7_TypeDecl> _133321_t = *it;
			{
				jule::Ptr<_220c0ae5d_TypeKind> _133421_kind = _220c268a2_checkDecl(&(*_self_), _133321_t);;
				if ((_133421_kind == nullptr)) {
					return nullptr;;
				};
				_133217_types = jule::alloc_for_append(_133217_types,1);_133217_types.__push(_133421_kind);;
			}
			_iter_next_20640274b:;
			++it;
			goto _iter_begin_20640274b;
		}
		_iter_end_20640274b:;
	};
	return jule::new_ptr<_220c15929_Tuple>(_220c15929_Tuple{._field_Types=_133217_types});;
}



inline jule::Bool _220c25b6a_checkFnTypes(_220c197c9_typeChecker* _self_, jule::Ptr<_220b31a10_FnIns>& _134436_f) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _134436_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_206404341:;
		if (it != expr.end()) {
			jule::Ptr<_220b31823_ParamIns> _134521_p = *it;
			{
				_134521_p.get()._field_Kind=_220c26594_build(&(*_self_), _134521_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind);
				__jule_func_result=(_134521_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_220b760c6_checkFnParamKind((*_self_)._field_s, _134521_p);
			}
			_iter_next_206404341:;
			++it;
			goto _iter_begin_206404341;
		}
		_iter_end_206404341:;
	};
	if ((!(_22001c270_IsVoid(_134436_f.get()._field_Decl.ptr())))) {
		_134436_f.get()._field_Result=_220c26594_build(&(*_self_), _134436_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind);
		__jule_func_result = (_134436_f.get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_220b31a10_FnIns> _220c25e78_buildFn(_220c197c9_typeChecker* _self_, jule::Ptr<_21eeb8293_FnDecl> _136230_decl) {
	if ((_136230_decl.get()._field_Generics.len() > 0LL)) {
		_220c19ed3_pushErr(&(*_self_), _136230_decl.get()._field_Token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_220b31636_Fn> _136817_f = _220b34073_buildFn(_136230_decl);;
	jule::I64 _137013_n = (*_self_)._field_s.get()._field_errors.len();;
	_220b7cee0_checkFnDecl((*_self_)._field_s, _136817_f);
	if ((_137013_n != (*_self_)._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_220b31a10_FnIns> _137617_ins = _220012e14_instanceForce(_136817_f);;
	_137617_ins.get()._field_Anon=true;
	jule::Bool _137913_ok = _220c25b6a_checkFnTypes(&(*_self_), _137617_ins);;
	if ((!(_137913_ok))) {
		return nullptr;;
	};
	return _137617_ins;;
}



inline jule::Trait<_220c0aa2e_Kind> _220c26286_buildByNamespace(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea2a74_NamespaceTypeDecl> _138739_decl) {
	jule::Str _138813_path = _220c28c06_buildLinkPathByTokens(_138739_decl.get()._field_Idents);;
	jule::Ptr<_220b61325_ImportInfo> _138917_imp = _220c2bc3c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._220c2a202_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_220b61325_ImportInfo>)>([=](jule::Ptr<_220b61325_ImportInfo> _138952_imp) mutable -> jule::Bool {
		if (((_138739_decl.get()._field_Idents.len() == 1LL) && (_138952_imp.get()._field_Alias == _138813_path))) {
			return true;;
		};
		return ((_138952_imp.get()._field_LinkPath == _138813_path) && _220b63e82_isAccessibleViaSelection(_138952_imp.ptr()));;
	}));;
	if (((_138917_imp == nullptr) || (!(_220b638dd_isLookupable(_138917_imp.ptr(), jule::Str("self", 4)))))) {
		_220c19ed3_pushErr(&(*_self_), _138739_decl.get()._field_Idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_138813_path, &__jule_any_type6)}));
		return nullptr;;
	};
	_220c1a38a_disallowBuiltin(&(*_self_));
	jule::Trait<_220c2bc3c_Lookup> _140217_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_220c2bc3c_Lookup>(_138917_imp, 1);
	jule::Ptr<_220c0ae5d_TypeKind> _140417_kind = _220c268a2_checkDecl(&(*_self_), _138739_decl.get()._field_Kind);;
	(*_self_)._field_lookup=_140217_lookup;
	_220c1a1ae_allowBuiltin(&(*_self_));
	return jule::Trait<_220c0aa2e_Kind>(_140417_kind, 5);;
}



inline jule::Ptr<_220c0ae5d_TypeKind> _220c26594_build(_220c197c9_typeChecker* _self_, jule::Any& _141029_declKind) {
	jule::Trait<_220c0aa2e_Kind> _141117_kind = nullptr;;
	{
		auto &_match_expr{ _141029_declKind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_206411381:;
			{
				jule::Trait<_220c0aa2e_Kind> _141421_t = _220c1dc73_buildIdent(&(*_self_), _141029_declKind.cast_ptr<_21eea206d_IdentTypeDecl>(&__jule_any_type20));;
				if ((_141421_t != nullptr)) {
					_141117_kind=_141421_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_206412184:;
			{
				jule::Trait<_220c0aa2e_Kind> _141921_t = _220c1e081_buildSubIdent(&(*_self_), _141029_declKind.cast_ptr<_21eea26bc_SubIdentTypeDecl>(&__jule_any_type94));;
				if ((_141921_t != nullptr)) {
					_141117_kind=_141921_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_2064121ea:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_220c1443e_Sptr> _142521_t = _220c1e69c_buildSptr(&(*_self_), _141029_declKind.cast_ptr<_21eea2d60_SptrTypeDecl>(&__jule_any_type80));;
				if ((_142521_t != nullptr)) {
					_141117_kind=jule::Trait<_220c0aa2e_Kind>(_142521_t, 7);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_206411859:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_220c179a3_Ptr> _143121_t = _220c24b25_buildPtr(&(*_self_), _141029_declKind.cast_ptr<_21eea3833_PtrTypeDecl>(&__jule_any_type79));;
				if ((_143121_t != nullptr)) {
					_141117_kind=jule::Trait<_220c0aa2e_Kind>(_143121_t, 12);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_2064118c0:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_220c14d9b_Slc> _143721_t = _220c24e33_buildSlc(&(*_self_), _141029_declKind.cast_ptr<_21eea325b_SlcTypeDecl>(&__jule_any_type78));;
				if ((_143721_t != nullptr)) {
					_141117_kind=jule::Trait<_220c0aa2e_Kind>(_143721_t, 8);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_206411936:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_220c17046_Arr> _144321_t = _220c25241_buildArr(&(*_self_), _141029_declKind.cast_ptr<_21eea3eb5_ArrTypeDecl>(&__jule_any_type77));;
				if ((_144321_t != nullptr)) {
					_141117_kind=jule::Trait<_220c0aa2e_Kind>(_144321_t, 11);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_20641199c:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_220c16452_Map> _144921_t = _220c2554e_buildMap(&(*_self_), _141029_declKind.cast_ptr<_21eea4713_MapTypeDecl>(&__jule_any_type81));;
				if ((_144921_t != nullptr)) {
					_141117_kind=jule::Trait<_220c0aa2e_Kind>(_144921_t, 10);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_2064123a4:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_220c15929_Tuple> _145521_t = _220c2585c_buildTuple(&(*_self_), _141029_declKind.cast_ptr<_21eea3547_TupleTypeDecl>(&__jule_any_type82));;
				if ((_145521_t != nullptr)) {
					_141117_kind=jule::Trait<_220c0aa2e_Kind>(_145521_t, 9);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_20641241a:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_220b31a10_FnIns> _146121_t = _220c25e78_buildFn(&(*_self_), _141029_declKind.cast_ptr<_21eeb8293_FnDecl>(&__jule_any_type15));;
				if ((_146121_t != nullptr)) {
					_141117_kind=jule::Trait<_220c0aa2e_Kind>(_146121_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_206412481:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_220c0aa2e_Kind> _146721_t = _220c26286_buildByNamespace(&(*_self_), _141029_declKind.cast_ptr<_21eea2a74_NamespaceTypeDecl>(&__jule_any_type98));;
				if ((_146721_t != nullptr)) {
					_141117_kind=_146721_t;
				};
			}
		}
		else {
			_case_begin_206411705:;
			{
				_220c19ed3_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_206411617:;
	};
	if ((_141117_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _141117_kind };
		
		if (_match_expr.type_is<jule::Ptr<_220c0ae5d_TypeKind>>()) {
			_case_begin_20641d437:;
			{
				return _141117_kind.operator jule::Ptr<_220c0ae5d_TypeKind>();;
			}
		}
		else {
			_case_begin_20641d4d1:;
			{
				jule::Ptr<_220c0ae5d_TypeKind> _148221_tk = jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=_141117_kind});;
				{
					auto &_match_expr{ _141117_kind };
					
					if (_match_expr.type_is<jule::Ptr<_220c10baa_Prim>>()) {
						_case_begin_20641de1b:;
						{
							if (((*_self_)._field_ignoredGenerics != nullptr)) {
								{
									(*((*_self_)._field_ignoredGenerics))=jule::append((*((*_self_)._field_ignoredGenerics)),jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>>::make({_148221_tk}));
								};
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_21eec33d0_StructIns>>()) {
						_case_begin_20641de93:;
						{
							jule::Ptr<_21eec33d0_StructIns> _148921_s = _141117_kind.operator jule::Ptr<_21eec33d0_StructIns>();;
							if (((_148921_s.get()._field_Decl != nullptr) && _148921_s.get()._field_Decl.get()._field_CppLinked)) {
								_148221_tk.get()._field_CppIdent=_148921_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_20641dd0b:;
				};
				return _148221_tk;;
			}
		}
		_match_end_20641d107:;
	};
}



inline jule::Ptr<_220c0ae5d_TypeKind> _220c268a2_checkDecl(_220c197c9_typeChecker* _self_, jule::Ptr<_21eea19a7_TypeDecl>& _149833_decl) {
	jule::Ptr<_21d81d743_Token> _150017_errorToken = (*_self_)._field_errorToken;;
	(*_self_)._field_errorToken=_149833_decl.get()._field_Token;
	jule::Ptr<_220c0ae5d_TypeKind> _150317_kind = _220c26594_build(&(*_self_), _149833_decl.get()._field_Kind);;
	(*_self_)._field_errorToken=_150017_errorToken;
	return _150317_kind;;
}



inline void _220c26b27_check(_220c197c9_typeChecker* _self_, jule::Ptr<_220c1033b_TypeSymbol>& _150929_t) {
	if ((_150929_t.get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_220c0ae5d_TypeKind> _151317_kind = _220c268a2_checkDecl(&(*_self_), _150929_t.get()._field_Decl);;
	if ((_151317_kind == nullptr)) {
		_220c108be_removeKind(_150929_t.ptr());
		return;;
	};
	_150929_t.get()._field_Kind=_151317_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _220c197c9_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__220c27287_prim(jule::Str& _152521_ident, jule::Ptr<_220c10baa_Prim> _152533_t) {
	return (_152533_t.get()._field_Kind == _152521_ident);;
}



inline jule::Bool static__220c275c8_exist(jule::Str& _152922_ident, jule::Ptr<_220c0ae5d_TypeKind>& _152939_k) {
	{
		
		if ((_220c0d2e5_Prim(_152939_k.ptr()) != nullptr)) {
			_case_begin_206424d89:;
			{
				return static__220c27287_prim(_152922_ident,_220c0d2e5_Prim(_152939_k.ptr()));;
			}
		}
		else if ((_220c0d559_Sptr(_152939_k.ptr()) != nullptr)) {
			_case_begin_206424e00:;
			{
				jule::Ptr<_220c1443e_Sptr> _153421_sptr = _220c0d559_Sptr(_152939_k.ptr());;
				return static__220c275c8_exist(_152922_ident,_153421_sptr.get()._field_Elem);;
			}
		}
		else if ((_220c0d7bd_Ptr(_152939_k.ptr()) != nullptr)) {
			_case_begin_206424e66:;
			{
				jule::Ptr<_220c179a3_Ptr> _153721_ptr = _220c0d7bd_Ptr(_152939_k.ptr());;
				return static__220c275c8_exist(_152922_ident,_153721_ptr.get()._field_Elem);;
			}
		}
		else if ((_220c0e26e_Slc(_152939_k.ptr()) != nullptr)) {
			_case_begin_206424ecc:;
			{
				jule::Ptr<_220c14d9b_Slc> _154021_slc = _220c0e26e_Slc(_152939_k.ptr());;
				return static__220c275c8_exist(_152922_ident,_154021_slc.get()._field_Elem);;
			}
		}
		else if ((_220c0e00a_Arr(_152939_k.ptr()) != nullptr)) {
			_case_begin_206425263:;
			{
				jule::Ptr<_220c17046_Arr> _154321_arr = _220c0e00a_Arr(_152939_k.ptr());;
				return static__220c275c8_exist(_152922_ident,_154321_arr.get()._field_Elem);;
			}
		}
		else if ((_220c0ec20_Map(_152939_k.ptr()) != nullptr)) {
			_case_begin_2064252c9:;
			{
				jule::Ptr<_220c16452_Map> _154621_m = _220c0ec20_Map(_152939_k.ptr());;
				return (static__220c275c8_exist(_152922_ident,_154621_m.get()._field_Key) || static__220c275c8_exist(_152922_ident,_154621_m.get()._field_Val));;
			}
		}
		else if ((_220c0e747_Struct(_152939_k.ptr()) != nullptr)) {
			_case_begin_206425340:;
			{
				jule::Ptr<_21eec33d0_StructIns> _155021_s = _220c0e747_Struct(_152939_k.ptr());;
				{
					auto &expr = _155021_s.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_20642b4ab:;
					if (it != expr.end()) {
						jule::Ptr<_220c09731_InsGeneric> _155125_g = *it;
						{
							if (static__220c275c8_exist(_152922_ident,_155125_g.get()._field_Kind)) {
								return true;;
							};
						}
						_iter_next_20642b4ab:;
						++it;
						goto _iter_begin_20642b4ab;
					}
					_iter_end_20642b4ab:;
				};
				return false;;
			}
		}
		else if ((_220c0e4d3_Fn(_152939_k.ptr()) != nullptr)) {
			_case_begin_2064253a6:;
			{
				jule::Ptr<_220b31a10_FnIns> _155821_f = _220c0e4d3_Fn(_152939_k.ptr());;
				{
					auto &expr = _155821_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_20642cbe9:;
					if (it != expr.end()) {
						jule::Ptr<_220b31823_ParamIns> _155925_p = *it;
						{
							if (_22001a45a_IsSelf(_155925_p.get()._field_Decl.ptr())) {
								goto _iter_next_20642cbe9;
							};
							if (static__220c275c8_exist(_152922_ident,_155925_p.get()._field_Kind)) {
								return true;;
							};
						}
						_iter_next_20642cbe9:;
						++it;
						goto _iter_begin_20642cbe9;
					}
					_iter_end_20642cbe9:;
				};
				if ((_155821_f.get()._field_Result != nullptr)) {
					return static__220c275c8_exist(_152922_ident,_155821_f.get()._field_Result);;
				};
				return false;;
			}
		}
		else if ((_220c0ee84_Tup(_152939_k.ptr()) != nullptr)) {
			_case_begin_206425609:;
			{
				jule::Ptr<_220c15929_Tuple> _157221_tup = _220c0ee84_Tup(_152939_k.ptr());;
				{
					auto &expr = _157221_tup.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_20642edb6:;
					if (it != expr.end()) {
						jule::Ptr<_220c0ae5d_TypeKind> _157325_t = *it;
						{
							if (static__220c275c8_exist(_152922_ident,_157325_t)) {
								return true;;
							};
						}
						_iter_next_20642edb6:;
						++it;
						goto _iter_begin_20642edb6;
					}
					_iter_end_20642edb6:;
				};
				return false;;
			}
		}
		else {
			_case_begin_206424d23:;
			{
				return false;;
			}
		}
		_match_end_206424c57:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _220c26d47_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22143b0a5_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221487134_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _2214880e1_stop(_22148795e_scopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _221488355_stopped(_22148795e_scopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);;
}



inline jule::Bool _2214885b9_finished(_22148795e_scopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());;
}



inline jule::Bool _22148882d_isLastSt(_22148795e_scopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());;
}



inline void _221488b4c_pushErr(_22148795e_scopeParser* _self_, jule::Ptr<_21d81d743_Token> _19126_token, jule::Str _19141_fmt) {
	_2214a4a14_pushErr((*_self_)._field_p.ptr(), _19126_token,_19141_fmt,jule::Slice<jule::Any>());
}



inline void _221488e6b_pushSuggestion(_22148795e_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_2214a4d33_pushSuggestion((*_self_)._field_p.ptr(), _19633_fmt,_19646_args);
}



inline void _2214891e1_insertAsNext(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _20036_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_221487134_stmt>(_221487134_stmt{._field_tokens=_20036_tokens, });
}



inline jule::Ptr<_221487134_stmt> _221489455_next(_22148795e_scopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];;
}



inline jule::Ptr<_21eeb679c_ScopeTree> _22148980c_buildScope(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _21034_tokens, jule::Ptr<_21d81d743_Token> _21056_end) {
	jule::Ptr<_21eeb679c_ScopeTree> _21117_s = _221486067_newScope();;
	_21117_s.get()._field_Parent=(*_self_)._field_s;
	_21117_s.get()._field_End=_21056_end;
	_22148795e_scopeParser _21417_ssp = _22148795e_scopeParser{._field_p=(*_self_)._field_p, };;
	_2214934e7_build(&_21417_ssp, _21034_tokens,_21117_s);
	return _21117_s;;
}



inline jule::Ptr<_21eeb9272_VarDecl> _221489b1a_buildVarSt(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _22134_tokens) {
	jule::Ptr<_21eeb9272_VarDecl> _22217_v = _2214a7550_buildVar((*_self_)._field_p, _22134_tokens);;
	_22217_v.get()._field_Scope=(*_self_)._field_s;
	return _22217_v;;
}



inline jule::Ptr<_21eeb9629_RetSt> _221489e28_buildRetSt(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _22733_tokens) {
	jule::Ptr<_21eeb9629_RetSt> _22817_st = jule::new_ptr<_21eeb9629_RetSt>(_21eeb9629_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_2214a5141_buildExpr((*_self_)._field_p, _22733_tokens);
	};
	return _22817_st;;
}



inline jule::Ptr<_21eeb9c89_Iter> _22148a236_buildWhileNextIter(_22148795e_scopeParser* _self_, jule::Ptr<_221487134_stmt>& _23842_s) {
	jule::Ptr<_21eeb9c89_Iter> _23917_it = jule::new_ptr<_21eeb9c89_Iter>(_21eeb9c89_Iter{._field_Token=_23842_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _24217_tokens = _23842_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_21eeba55e_WhileKind> _24317_kind = jule::new_ptr<_21eeba55e_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_2214a5141_buildExpr((*_self_)._field_p, _24217_tokens);
	};
	if (_22148882d_isLastSt(&(*_self_))) {
		_221488b4c_pushErr(&(*_self_), _23917_it.get()._field_Token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24217_tokens=_221489455_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _25517_stTokens = _22149e24a_getBlockExpr(_24217_tokens);;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_221487134_stmt> _25721_stmt = jule::new_ptr<_221487134_stmt>(_221487134_stmt{._field_tokens=_25517_stTokens, ._field_terminated=_23842_s.get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_2214931c8_buildSt(&(*_self_), _25721_stmt);
	};
	jule::I64 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _26617_blockTokens = _2214a2319_range(_26517_i,jule::Str("{", 1),jule::Str("}", 1),_24217_tokens);;
	if ((_26617_blockTokens == nullptr)) {
		_2214880e1_stop(&(*_self_));
		_221488b4c_pushErr(&(*_self_), _23917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_221488e6b_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_221488b4c_pushErr(&(*_self_), _24217_tokens[_26517_i],jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_22148980c_buildScope(&(*_self_), _26617_blockTokens,_24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=jule::Any(_24317_kind, &__jule_any_type38);
	return _23917_it;;
}



inline jule::Ptr<_21eeba55e_WhileKind> _22148a544_buildWhileIterKind(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _28342_tokens) {
	return jule::new_ptr<_21eeba55e_WhileKind>(_21eeba55e_WhileKind{._field_Expr=_2214a5141_buildExpr((*_self_)._field_p, _28342_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _22148a852_getRangeKindKeysTokens(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _29018_vars;;
	jule::Slice<_21d4e511d_Log> _29024_errs;;
	({
		__jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log __jule_assign_result = _2214a2d86_parts(_28946_toks,static_cast<jule::U64>(8LLU),true);
		_29018_vars = __jule_assign_result.__jule_result_arg0;
		_29024_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29024_errs);
	return _29018_vars;;
}



inline jule::Ptr<_21eeb9272_VarDecl> _22148ab60_buildRangeKindKey(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _29541_tokens) {
	if ((_29541_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_21eeb9272_VarDecl> _29917_key = jule::new_ptr<_21eeb9272_VarDecl>(_21eeb9272_VarDecl{._field_Token=_29541_tokens[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_29917_key.get()._field_Mutable=true;
		if ((_29541_tokens.len() == 1LL)) {
			_221488b4c_pushErr(&(*_self_), _29917_key.get()._field_Token,jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=_29541_tokens[1LL];
	} else if ((_29541_tokens.len() > 1LL)) {
		_221488b4c_pushErr(&(*_self_), _29541_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_221488b4c_pushErr(&(*_self_), _29917_key.get()._field_Token,jule::Str("invalid syntax", 14));
		_221488e6b_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;;
}



inline jule::Slice<jule::Ptr<_21eeb9272_VarDecl>> _22148ae6d_buildRangeKindKeys(_22148795e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>>& _32042_parts) {
	jule::Slice<jule::Ptr<_21eeb9272_VarDecl>> _32117_keys = nullptr;;
	{
		auto &expr = _32042_parts;
		auto it = expr.begin();
		_iter_begin_2065a766a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_21d81d743_Token>> _32221_tokens = *it;
			{
				_32117_keys = jule::alloc_for_append(_32117_keys,1);_32117_keys.__push(_22148ab60_buildRangeKindKey(&(*_self_), _32221_tokens));;
			}
			_iter_next_2065a766a:;
			++it;
			goto _iter_begin_2065a766a;
		}
		_iter_end_2065a766a:;
	};
	return _32117_keys;;
}



inline void _22148b2ae_setupRangeKindKeysPlain(_22148795e_scopeParser* _self_, jule::Ptr<_21eebae00_RangeKind>& _32847_rng, jule::Slice<jule::Ptr<_21d81d743_Token>>& _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _32917_keyTokens = _22148a852_getRangeKindKeysTokens(&(*_self_), _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_221488b4c_pushErr(&(*_self_), _32847_rng.get()._field_InToken,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_21eeb9272_VarDecl>> _33617_keys = _22148ae6d_buildRangeKindKeys(&(*_self_), _32917_keyTokens);;
	_32847_rng.get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		_32847_rng.get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _22148b611_setupRangeKindKeysExplicit(_22148795e_scopeParser* _self_, jule::Ptr<_21eebae00_RangeKind>& _34350_rng, jule::Slice<jule::Ptr<_21d81d743_Token>>& _34372_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _34517_rang = _2214a2319_range(_34417_i,jule::Str("(", 1),jule::Str(")", 1),_34372_tokens);;
	if ((_34417_i < _34372_tokens.len())) {
		_221488b4c_pushErr(&(*_self_), _34350_rng.get()._field_InToken,jule::Str("invalid syntax", 14));
	};
	_22148b2ae_setupRangeKindKeysPlain(&(*_self_), _34350_rng,_34517_rang);
}



inline void _22148b941_setupRangeKindKeys(_22148795e_scopeParser* _self_, jule::Ptr<_21eebae00_RangeKind>& _35242_rng, jule::Slice<jule::Ptr<_21d81d743_Token>>& _35264_tokens) {
	if ((_35264_tokens[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if ((_35264_tokens[0LL].get()._field_Kind != jule::Str("(", 1))) {
			_221488b4c_pushErr(&(*_self_), _35264_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_22148b611_setupRangeKindKeysExplicit(&(*_self_), _35242_rng,_35264_tokens);
		return;;
	};
	_22148b2ae_setupRangeKindKeysPlain(&(*_self_), _35242_rng,_35264_tokens);
}



inline jule::Ptr<_21eebae00_RangeKind> _22148bd92_buildRangeIterKind(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _36442_var_tokens, jule::Slice<jule::Ptr<_21d81d743_Token>>& _36514_exprTokens, jule::Ptr<_21d81d743_Token>& _36541_inToken) {
	jule::Ptr<_21eebae00_RangeKind> _36617_rng = jule::new_ptr<_21eebae00_RangeKind>(_21eebae00_RangeKind{._field_InToken=_36541_inToken, });;
	if ((_36514_exprTokens.len() == 0LL)) {
		_221488b4c_pushErr(&(*_self_), _36617_rng.get()._field_InToken,jule::Str("expression missing", 18));
		return _36617_rng;;
	};
	_36617_rng.get()._field_Expr=_2214a5141_buildExpr((*_self_)._field_p, _36514_exprTokens);
	if ((_36442_var_tokens.len() > 0LL)) {
		_22148b941_setupRangeKindKeys(&(*_self_), _36617_rng,_36442_var_tokens);
	};
	return _36617_rng;;
}



inline jule::Any _22148c249_buildCommonIterKind(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _38043_tokens, jule::Ptr<_21d81d743_Token>& _38062_err_tok) {
	jule::I64 _38117_braceN = 0LL;;
	{
		auto &expr = _38043_tokens;
		auto it = expr.begin();
		_iter_begin_2065b2e7d:;
		if (it != expr.end()) {
			jule::I64 _38214_i = it - expr.begin();
			jule::Ptr<_21d81d743_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_2065b4578:;
							{
								(_38117_braceN)++;
								goto _iter_next_2065b2e7d;
							}
						}
						else {
							_case_begin_2065b416b:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_2065b3e5c:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_2065b2e7d;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_2065b4622:;
						{
							jule::Slice<jule::Ptr<_21d81d743_Token>> _39925_declTokens = _38043_tokens.slice(0LL,_38214_i);;
							jule::Slice<jule::Ptr<_21d81d743_Token>> _40025_exprTokens = _38043_tokens.slice((_38214_i + 1LL));;
							return jule::Any(_22148bd92_buildRangeIterKind(&(*_self_), _39925_declTokens,_40025_exprTokens,_38221_tok), &__jule_any_type40);;
						}
					}
					_match_end_2065b4dd6:;
				};
			}
			_iter_next_2065b2e7d:;
			++it;
			_38214_i++;
			goto _iter_begin_2065b2e7d;
		}
		_iter_end_2065b2e7d:;
	};
	return jule::Any(_22148a544_buildWhileIterKind(&(*_self_), _38043_tokens), &__jule_any_type38);;
}



inline jule::Ptr<_21eeb9c89_Iter> _22148c557_buildCommonIter(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _40738_tokens) {
	jule::Ptr<_21eeb9c89_Iter> _40817_it = jule::new_ptr<_21eeb9c89_Iter>(_21eeb9c89_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_2214880e1_stop(&(*_self_));
		_221488b4c_pushErr(&(*_self_), _40817_it.get()._field_Token,jule::Str("body is not exist", 17));
		_221488e6b_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_21d81d743_Token>> _41817_exprTokens = _22149e24a_getBlockExpr(_40738_tokens);;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_22148c249_buildCommonIterKind(&(*_self_), _41817_exprTokens,_40817_it.get()._field_Token);
	};
	jule::I64 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _42317_scopeTokens = _2214a2319_range(_42217_i,jule::Str("{", 1),jule::Str("}", 1),_40738_tokens);;
	if ((_42317_scopeTokens == nullptr)) {
		_2214880e1_stop(&(*_self_));
		_221488b4c_pushErr(&(*_self_), _40817_it.get()._field_Token,jule::Str("body is not exist", 17));
		_221488e6b_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_221488b4c_pushErr(&(*_self_), _40738_tokens[_42217_i],jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_22148980c_buildScope(&(*_self_), _42317_scopeTokens,_40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;;
}



inline jule::Ptr<_21eeb9c89_Iter> _22148c865_buildIterSt(_22148795e_scopeParser* _self_, jule::Ptr<_221487134_stmt>& _43735_st) {
	if (_43735_st.get()._field_terminated) {
		return _22148a236_buildWhileNextIter(&(*_self_), _43735_st);;
	};
	return _22148c557_buildCommonIter(&(*_self_), _43735_st.get()._field_tokens);;
}



inline jule::Ptr<_21eebb2a7_BreakSt> _22148cb73_buildBreakSt(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _44436_tokens) {
	jule::Ptr<_21eebb2a7_BreakSt> _44517_brk = jule::new_ptr<_21eebb2a7_BreakSt>(_21eebb2a7_BreakSt{._field_Token=_44436_tokens[0LL], });;
	if ((_44436_tokens.len() > 1LL)) {
		if ((_44436_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_221488b4c_pushErr(&(*_self_), _44436_tokens[1LL],jule::Str("invalid syntax", 14));
			_221488e6b_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=_44436_tokens[1LL];
			if ((_44436_tokens.len() > 2LL)) {
				_221488b4c_pushErr(&(*_self_), _44436_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;;
}



inline jule::Ptr<_21eebb65e_ContSt> _22148ce81_buildContSt(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _46235_tokens) {
	jule::Ptr<_21eebb65e_ContSt> _46317_cont = jule::new_ptr<_21eebb65e_ContSt>(_21eebb65e_ContSt{._field_Token=_46235_tokens[0LL], });;
	if ((_46235_tokens.len() > 1LL)) {
		if ((_46235_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_221488b4c_pushErr(&(*_self_), _46235_tokens[1LL],jule::Str("invalid syntax", 14));
			_221488e6b_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=_46235_tokens[1LL];
			if ((_46235_tokens.len() > 2LL)) {
				_221488b4c_pushErr(&(*_self_), _46235_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;;
}



inline jule::Ptr<_21eebbad2_If> _22148d28e_buildIf(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _48031_tokens) {
	jule::Ptr<_21eebbad2_If> _48117_model = jule::new_ptr<_21eebbad2_If>(_21eebbad2_If{._field_Token=_48031_tokens[0LL], });;
	_48031_tokens=_48031_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_21d81d743_Token>> _48517_exprTokens = _22149e24a_getBlockExpr(_48031_tokens);;
	jule::I64 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_221488b4c_pushErr(&(*_self_), _48117_model.get()._field_Token,jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I64>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_21d81d743_Token>> _49217_scopeTokens = _2214a2319_range(_48617_i,jule::Str("{", 1),jule::Str("}", 1),_48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_2214880e1_stop(&(*_self_));
		_221488b4c_pushErr(&(*_self_), _48117_model.get()._field_Token,jule::Str("body is not exist", 17));
		_221488e6b_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_21d81d743_Token> _49917_end = _48031_tokens[(_48617_i - 1LL)];;
	if ((_48617_i < _48031_tokens.len())) {
		if ((_48031_tokens[_48617_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			_48031_tokens=_48031_tokens.slice(_48617_i);
		} else {
			_221488b4c_pushErr(&(*_self_), _48031_tokens[_48617_i],jule::Str("invalid syntax", 14));
			_48031_tokens=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_2214a5141_buildExpr((*_self_)._field_p, _48517_exprTokens);
	_48117_model.get()._field_Scope=_22148980c_buildScope(&(*_self_), _49217_scopeTokens,_49917_end);
	return _48117_model;;
}



inline jule::Ptr<_21eebbe89_Else> _22148d59c_buildElse(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _51333_tokens) {
	jule::Ptr<_21eebbe89_Else> _51417_els = jule::new_ptr<_21eebbe89_Else>(_21eebbe89_Else{._field_Token=_51333_tokens[0LL], });;
	_51333_tokens=_51333_tokens.slice(1LL);
	jule::I64 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _51917_scopeTokens = _2214a2319_range(_51817_i,jule::Str("{", 1),jule::Str("}", 1),_51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < _51333_tokens.len())) {
			_221488b4c_pushErr(&(*_self_), _51417_els.get()._field_Token,jule::Str("else's cannot have any expression", 33));
		} else {
			_2214880e1_stop(&(*_self_));
			_221488b4c_pushErr(&(*_self_), _51417_els.get()._field_Token,jule::Str("body is not exist", 17));
			_221488e6b_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51817_i < _51333_tokens.len())) {
		_221488b4c_pushErr(&(*_self_), _51333_tokens[_51817_i],jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_22148980c_buildScope(&(*_self_), _51917_scopeTokens,_51333_tokens[(_51817_i - 1LL)]);
	return _51417_els;;
}



inline jule::Ptr<_21eebc40c_Conditional> _22148d8aa_buildIfElseChain(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _53739_tokens) {
	jule::Ptr<_21eebc40c_Conditional> _53817_chain = jule::new_ptr<_21eebc40c_Conditional>(_21eebc40c_Conditional{._field_Head=_22148d28e_buildIf(&(*_self_), _53739_tokens), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_2065ced8a;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_21eebbad2_If> _55025_elif = _22148d28e_buildIf(&(*_self_), _53739_tokens);;
				_53817_chain.get()._field_Tail = jule::alloc_for_append(_53817_chain.get()._field_Tail,1);_53817_chain.get()._field_Tail.__push(_55025_elif);;
				goto _iter_next_2065ced8a;
			};
			_53817_chain.get()._field_Default=_22148d59c_buildElse(&(*_self_), _53739_tokens);
			goto _iter_end_2065ced8a;
		}
	_iter_next_2065ced8a:;
	}
	_iter_end_2065ced8a:;;
	return _53817_chain;;
}



inline jule::Ptr<_21eea5ec8_Expr> _22148dbb8_buildCoCallSt(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _56036_tokens) {
	jule::Ptr<_21d81d743_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_21eea5ec8_Expr> _56317_e = _2214a5141_buildExpr((*_self_)._field_p, _56036_tokens);;
	if ((_56317_e == nullptr)) {
		return _56317_e;;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_2065d4136:;
			{
				_56317_e.get()._field_Kind.cast_ptr<_21eeaed17_FnCallExpr>(&__jule_any_type114).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_2065d43ab:;
			{
				_221488b4c_pushErr(&(*_self_), _56113_token,jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_2065d4356:;
	};
	return _56317_e;;
}



inline jule::Ptr<_21eeb436b_GotoSt> _22148dec6_buildGotoSt(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _57635_tokens) {
	jule::Ptr<_21eeb436b_GotoSt> _57717_gt = jule::new_ptr<_21eeb436b_GotoSt>(_21eeb436b_GotoSt{._field_Token=_57635_tokens[0LL], });;
	if ((_57635_tokens.len() == 1LL)) {
		_221488b4c_pushErr(&(*_self_), _57717_gt.get()._field_Token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if ((_57635_tokens.len() > 2LL)) {
		_221488b4c_pushErr(&(*_self_), _57635_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_21d81d743_Token> _58617_identToken = _57635_tokens[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_221488b4c_pushErr(&(*_self_), _58617_identToken,jule::Str("invalid syntax", 14));
		_221488e6b_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57717_gt;;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;;
}



inline jule::Ptr<_21eeb4657_FallSt> _22148e2d4_buildFallSt(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _59635_tokens) {
	jule::Ptr<_21eeb4657_FallSt> _59717_fll = jule::new_ptr<_21eeb4657_FallSt>(_21eeb4657_FallSt{._field_Token=_59635_tokens[0LL]});;
	if ((_59635_tokens.len() > 1LL)) {
		_221488b4c_pushErr(&(*_self_), _59635_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59717_fll;;
}



inline jule::Ptr<_21eebcad3_TypeAliasDecl> _22148e5e2_buildTypeAliasSt(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _60640_tokens) {
	jule::Ptr<_21eebcad3_TypeAliasDecl> _60717_tad = _2214a673b_buildTypeAliasDecl((*_self_)._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*_self_)._field_s;
	return _60717_tad;;
}



inline void _22148ea54_pushCaseExpr(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _61235_tokens, jule::Ptr<_21d81d743_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_21eea5ec8_Expr>>& _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I64 _61921_i = 0LL;;
		jule::Ptr<_21eea19a7_TypeDecl> _62022_t;;
		jule::Bool _62025_ok = false;;
		({
			__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType((*_self_)._field_p, _61235_tokens,(&(_61921_i)),true);
			_62022_t = __jule_assign_result.__jule_result_arg0;
			_62025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62025_ok) {
			_61331_exprs = jule::alloc_for_append(_61331_exprs,1);_61331_exprs.__push(jule::new_ptr<_21eea5ec8_Expr>(_21eea5ec8_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=jule::Any(_62022_t, &__jule_any_type96)}));;
			if ((_61921_i < _61235_tokens.len())) {
				_221488b4c_pushErr(&(*_self_), _61235_tokens[_61921_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_61331_exprs = jule::alloc_for_append(_61331_exprs,1);_61331_exprs.__push(_2214a5141_buildExpr((*_self_)._field_p, _61235_tokens));;
}



inline jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _22148eea5_buildCaseExprs(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _63638_tokens, jule::Ptr<_21d81d743_Token>& _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_21eea5ec8_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63917_braceN = 0LL;;
	jule::I64 _64017_j = 0LL;;
	{
		auto &expr = _63638_tokens;
		auto it = expr.begin();
		_iter_begin_2065e054e:;
		if (it != expr.end()) {
			jule::I64 _64114_i = it - expr.begin();
			jule::Ptr<_21d81d743_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_2065e2980:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_2065e2573:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_2065e2364:;
					};
					goto _iter_next_2065e054e;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_2065e054e;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64121_tok.get()._field_Kind == jule::Str("|", 1)))) {
						_case_begin_2065e3277:;
						{
							jule::Slice<jule::Ptr<_21d81d743_Token>> _65721_exprTokens = _63638_tokens.slice(_64017_j,_64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_221488b4c_pushErr(&(*_self_), _64121_tok,jule::Str("expression missing", 18));
							} else {
								_22148ea54_pushCaseExpr(&(*_self_), _63638_tokens.slice(_64017_j,_64114_i),_64121_tok,_63676_typeMatch,_63717_exprs);
							};
							_64017_j=static_cast<jule::I64>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_2065e32dd:;
						{
							_63661_colon=_64121_tok;
							_22148ea54_pushCaseExpr(&(*_self_), _63638_tokens.slice(_64017_j,_64114_i),_64121_tok,_63676_typeMatch,_63717_exprs);
							_63638_tokens=_63638_tokens.slice((_64114_i + 1LL));
							return _63717_exprs;;
						}
					}
					_match_end_2065e2c7c:;
				};
			}
			_iter_next_2065e054e:;
			++it;
			_64114_i++;
			goto _iter_begin_2065e054e;
		}
		_iter_end_2065e054e:;
	};
	_221488b4c_pushErr(&(*_self_), _63638_tokens[0LL],jule::Str("invalid syntax", 14));
	_63638_tokens=nullptr;
	return nullptr;;
}



inline jule::Ptr<_21eeb679c_ScopeTree> _2214902b3_buildCaseScope(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _67638_tokens) {
	jule::I64 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_21d81d743_Token>> _68022_next;;
			({
				__jule_tuple_sx_21d81d743_Token__jule_tuple_bool __jule_assign_result = _221486d37_skipSt(_67921_i,_67638_tokens.slice(_67717_n));
				_68022_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_2065e6be8;
			};
			jule::Ptr<_21d81d743_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_68417_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_2065e6be8;
			};
			jule::Slice<jule::Ptr<_21d81d743_Token>> _68921_scopeTokens = _67638_tokens.slice(0LL,_67717_n);;
			jule::Ptr<_21eeb679c_ScopeTree> _69021_scope = _22148980c_buildScope(&(*_self_), _68921_scopeTokens,_67638_tokens[_67717_n]);;
			_67638_tokens=_67638_tokens.slice(_67717_n);
			return _69021_scope;;
		}
	_iter_next_2065e6be8:;
	}
	_iter_end_2065e6be8:;;
	jule::Ptr<_21d81d743_Token> _69417_end;;
	if ((_67638_tokens.len() > 0LL)) {
		_69417_end=_67638_tokens[(_67638_tokens.len() - 1LL)];
	};
	jule::Ptr<_21eeb679c_ScopeTree> _69817_scope = _22148980c_buildScope(&(*_self_), _67638_tokens,_69417_end);;
	_67638_tokens=nullptr;
	return _69817_scope;;
}



inline __jule_tuple_x_21eebd056_Case__jule_tuple_bool _22149066a_buildCase(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _70333_tokens, jule::Bool _70351_typeMatch) {
	__jule_tuple_x_21eebd056_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_21eebd056_Case> _70417_c = jule::new_ptr<_21eebd056_Case>(_21eebd056_Case{._field_Token=_70333_tokens[0LL], });;
	_70333_tokens=_70333_tokens.slice(1LL);
	jule::Ptr<_21d81d743_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_22148eea5_buildCaseExprs(&(*_self_), _70333_tokens,_70817_colon,_70351_typeMatch);
	_70417_c.get()._field_Scope=_2214902b3_buildCaseScope(&(*_self_), _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70417_c;
	__jule_func_result.__jule_result_arg1 = _71413_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_21eebd056_Case__jule_tuple_x_21eebbe89_Else _221490a22_buildCases(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	__jule_tuple_sx_21eebd056_Case__jule_tuple_x_21eebbe89_Else __jule_func_result;
	jule::Slice<jule::Ptr<_21eebd056_Case>> _71917_cases = nullptr;;
	jule::Ptr<_21eebbe89_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_21d81d743_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_72321_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_221488b4c_pushErr(&(*_self_), _72321_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_2066004e8;
			};
			jule::Ptr<_21eebd056_Case> _72822_c;;
			jule::Bool _72825_isDefault = false;;
			({
				__jule_tuple_x_21eebd056_Case__jule_tuple_bool __jule_assign_result = _22149066a_buildCase(&(*_self_), _71833_tokens,_71851_typeMatch);
				_72822_c = __jule_assign_result.__jule_result_arg0;
				_72825_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_21eebbe89_Else>(_21eebbe89_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_221488b4c_pushErr(&(*_self_), _72321_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				_71917_cases = jule::alloc_for_append(_71917_cases,1);_71917_cases.__push(_72822_c);;
			};
		}
	_iter_next_2066004e8:;
	}
	_iter_end_2066004e8:;;
	if (_72117_defNotLast) {
		_221488b4c_pushErr(&(*_self_), _72017_def.get()._field_Token,jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71917_cases;
	__jule_func_result.__jule_result_arg1 = _72017_def;
	return __jule_func_result;;
}



inline jule::Ptr<_21eebd72c_MatchCase> _221490d30_buildMatchCase(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _75237_tokens) {
	jule::Ptr<_21eebd72c_MatchCase> _75317_m = jule::new_ptr<_21eebd72c_MatchCase>(_21eebd72c_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_21d81d743_Token>> _76317_exprTokens = _22149e24a_getBlockExpr(_75237_tokens);;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_2214a5141_buildExpr((*_self_)._field_p, _76317_exprTokens);
	} else if (_75317_m.get()._field_TypeMatch) {
		_221488b4c_pushErr(&(*_self_), _75317_m.get()._field_Token,jule::Str("expression missing", 18));
	};
	jule::I64 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _77117_blockToks = _2214a2319_range(_77017_i,jule::Str("{", 1),jule::Str("}", 1),_75237_tokens);;
	if ((_77117_blockToks == nullptr)) {
		_2214880e1_stop(&(*_self_));
		_221488b4c_pushErr(&(*_self_), _75317_m.get()._field_Token,jule::Str("body is not exist", 17));
		_221488e6b_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_77017_i < _75237_tokens.len())) {
		_221488b4c_pushErr(&(*_self_), _75237_tokens[_77017_i],jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	({
		__jule_tuple_sx_21eebd056_Case__jule_tuple_x_21eebbe89_Else __jule_assign_result = _221490a22_buildCases(&(*_self_), _77117_blockToks,_75317_m.get()._field_TypeMatch);
		_75317_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75317_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75317_m;;
}



inline jule::Ptr<_21eeb679c_ScopeTree> _22149113d_buildScopeSt(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_21d81d743_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_221488b4c_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_221488b4c_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_221488b4c_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _81517_scopeTokens = _2214a2319_range(_81417_i,jule::Str("{", 1),jule::Str("}", 1),_78535_tokens);;
	if ((_81517_scopeTokens == nullptr)) {
		_221488b4c_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81417_i < _78535_tokens.len())) {
		_221488b4c_pushErr(&(*_self_), _78535_tokens[_81417_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_21eeb679c_ScopeTree> _82217_scope = _22148980c_buildScope(&(*_self_), _81517_scopeTokens,_78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;;
}



inline jule::Ptr<_21eeb3eb4_LabelSt> _22149144b_buildLabelSt(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _82836_tokens) {
	jule::Ptr<_21eeb3eb4_LabelSt> _82917_lbl = jule::new_ptr<_21eeb3eb4_LabelSt>(_21eeb3eb4_LabelSt{._field_Token=_82836_tokens[0LL], ._field_Ident=_82836_tokens[0LL].get()._field_Kind});;
	if ((_82836_tokens.len() > 2LL)) {
		_82836_tokens=_82836_tokens.slice(2LL);
		_2214891e1_insertAsNext(&(*_self_), _82836_tokens);
	};
	return _82917_lbl;;
}



inline __jule_tuple__21eeb5e61_StmtData__jule_tuple_bool _221491759_buildIdSt(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _84333_tokens) {
	__jule_tuple__21eeb5e61_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((_84333_tokens.len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_21d81d743_Token> _84817_token = _84333_tokens[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_2066166eb:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_22149144b_buildLabelSt(&(*_self_), _84333_tokens), &__jule_any_type58);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_206616696:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_2214a0779_assignInfo> _221491a67_buildAssignInfo(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _85739_tokens) {
	jule::Ptr<_2214a0779_assignInfo> _85817_info = jule::new_ptr<_2214a0779_assignInfo>(_2214a0779_assignInfo{._field_ok=true});;
	jule::I64 _86117_braceN = 0LL;;
	{
		auto &expr = _85739_tokens;
		auto it = expr.begin();
		_iter_begin_206617e6c:;
		if (it != expr.end()) {
			jule::I64 _86214_i = it - expr.begin();
			jule::Ptr<_21d81d743_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_206619589:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_20661917c:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_206618e6d:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_2066198b9:;
						{
							goto _iter_next_206617e6c;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_206619930:;
						{
							goto _iter_next_206617e6c;
						}
					}
					else if ((!(_21d82332a_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_206619996:;
						{
							goto _iter_next_206617e6c;
						}
					}
					_match_end_206619633:;
				};
				_85817_info.get()._field_l=_85739_tokens.slice(0LL,_86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= _85739_tokens.len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_21d823083_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_206617e6c;
				};
				_85817_info.get()._field_r=_85739_tokens.slice((_86214_i + 1LL));
				if (_21d823083_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_221488b4c_pushErr(&(*_self_), _85817_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_206617e6c;
			}
			_iter_next_206617e6c:;
			++it;
			_86214_i++;
			goto _iter_begin_206617e6c;
		}
		_iter_end_206617e6c:;
	};
	return _85817_info;;
}



inline jule::Ptr<_21eeb4c62_AssignLeft> _221491d75_buildAssignL(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _90536_tokens) {
	jule::Ptr<_21eeb4c62_AssignLeft> _90617_l = jule::new_ptr<_21eeb4c62_AssignLeft>(_21eeb4c62_AssignLeft{._field_Token=_90536_tokens[0LL], });;
	if ((_90536_tokens[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_2214a5141_buildExpr((*_self_)._field_p, _90536_tokens);
	return _90617_l;;
}



inline jule::Slice<jule::Ptr<_21eeb4c62_AssignLeft>> _221492183_buildAssignLs(_22148795e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>>& _91637_parts) {
	jule::Slice<jule::Ptr<_21eeb4c62_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto &expr = _91637_parts;
		auto it = expr.begin();
		_iter_begin_20662163a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_21d81d743_Token>> _91821_part = *it;
			{
				jule::Ptr<_21eeb4c62_AssignLeft> _91921_l = _221491d75_buildAssignL(&(*_self_), _91821_part);;
				_91717_lefts = jule::alloc_for_append(_91717_lefts,1);_91717_lefts.__push(_91921_l);;
			}
			_iter_next_20662163a:;
			++it;
			goto _iter_begin_20662163a;
		}
		_iter_end_20662163a:;
	};
	return _91717_lefts;;
}



inline __jule_tuple_x_21eeb52a1_AssignSt__jule_tuple_bool _221492491_buildPlainAssign(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _92640_tokens) {
	__jule_tuple_x_21eeb52a1_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_2214a0779_assignInfo> _92717_info = _221491a67_buildAssignInfo(&(*_self_), _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_21eeb52a1_AssignSt> _93217_assign = jule::new_ptr<_21eeb52a1_AssignSt>(_21eeb52a1_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _93618_parts;;
	jule::Slice<_21d4e511d_Log> _93625_errs;;
	({
		__jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log __jule_assign_result = _2214a2d86_parts(_92717_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
		_93618_parts = __jule_assign_result.__jule_result_arg0;
		_93625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93625_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_93625_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_93217_assign.get()._field_Left=_221492183_buildAssignLs(&(*_self_), _93618_parts);
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_2214a5141_buildExpr((*_self_)._field_p, _92717_info.get()._field_r);
	};
	__jule_func_result.__jule_result_arg0 = _93217_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_21eeb52a1_AssignSt__jule_tuple_bool _22149279e_buildDeclAssign(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _95038_tokens) {
	__jule_tuple_x_21eeb52a1_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_95038_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_21d81d743_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_95617_token.get()._field_Kind != jule::Str("(", 1)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_21eeb52a1_AssignSt> _96117_assign = jule::new_ptr<_21eeb52a1_AssignSt>(_21eeb52a1_AssignSt{._field_Declarative=true, });;
	jule::I64 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _96617_rang = _2214a2319_range(_96517_i,jule::Str("(", 1),jule::Str(")", 1),_95038_tokens);;
	if ((_96617_rang == nullptr)) {
		_221488b4c_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_21d81d743_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_2214a5141_buildExpr((*_self_)._field_p, _97321_exprTokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _97818_parts;;
	jule::Slice<_21d4e511d_Log> _97825_errs;;
	({
		__jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log __jule_assign_result = _2214a2d86_parts(_96617_rang,static_cast<jule::U64>(8LLU),true);
		_97818_parts = __jule_assign_result.__jule_result_arg0;
		_97825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97825_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_97825_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &expr = _97818_parts;
		auto it = expr.begin();
		_iter_begin_20662bec5:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_21d81d743_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_221488b4c_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
						goto _iter_next_20662bec5;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_98421_part[0LL].get()._field_Kind == jule::Str("&", 1)))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_221488b4c_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
						goto _iter_next_20662bec5;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (_98421_part[0LL].get()._field_Kind != jule::Str("(", 1)))) {
					_221488b4c_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
					goto _iter_next_20662bec5;
				};
				jule::Ptr<_21eeb4c62_AssignLeft> _101421_l = _221491d75_buildAssignL(&(*_self_), _98421_part);;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				_96117_assign.get()._field_Left = jule::alloc_for_append(_96117_assign.get()._field_Left,1);_96117_assign.get()._field_Left.__push(_101421_l);;
			}
			_iter_next_20662bec5:;
			++it;
			goto _iter_begin_20662bec5;
		}
		_iter_end_20662bec5:;
	};
	__jule_func_result.__jule_result_arg0 = _96117_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_21eeb52a1_AssignSt__jule_tuple_bool _221492aac_buildAssignSt(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _102337_tokens) {
	__jule_tuple_x_21eeb52a1_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_2214a0b20_checkAssignTokens(_102337_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _102337_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_20663aa83:;
			{
				({
					__jule_tuple_x_21eeb52a1_AssignSt__jule_tuple_bool __jule_assign_result = _22149279e_buildDeclAssign(&(*_self_), _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_20663a676:;
			{
				({
					__jule_tuple_x_21eeb52a1_AssignSt__jule_tuple_bool __jule_assign_result = _221492491_buildPlainAssign(&(*_self_), _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_20663a621:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_21eea6869_UseExpr> _221492dba_buildUseExpr(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _103836_tokens) {
	if ((_103836_tokens.len() == 1LL)) {
		_221488b4c_pushErr(&(*_self_), _103836_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_21eea6869_UseExpr> _104317_ue = jule::new_ptr<_21eea6869_UseExpr>(_21eea6869_UseExpr{._field_Token=_103836_tokens[0LL], });;
	_103836_tokens=_103836_tokens.slice(1LL);
	_104317_ue.get()._field_Expr=_2214a5141_buildExpr((*_self_)._field_p, _103836_tokens);
	return _104317_ue;;
}



inline jule::Any _2214931c8_buildSt(_22148795e_scopeParser* _self_, jule::Ptr<_221487134_stmt>& _105131_st) {
	jule::Ptr<_21d81d743_Token> _105217_token = _105131_st.get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _105422_s = jule::Any(nullptr);;
		jule::Bool _105425_ok = false;;
		({
			__jule_tuple__21eeb5e61_StmtData__jule_tuple_bool __jule_assign_result = _221491759_buildIdSt(&(*_self_), _105131_st.get()._field_tokens);
			_105422_s = __jule_assign_result.__jule_result_arg0;
			_105425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_105425_ok) {
			return _105422_s;;
		};
	};
	jule::Ptr<_21eeb52a1_AssignSt> _106018_s;;
	jule::Bool _106021_ok = false;;
	({
		__jule_tuple_x_21eeb52a1_AssignSt__jule_tuple_bool __jule_assign_result = _221492aac_buildAssignSt(&(*_self_), _105131_st.get()._field_tokens);
		_106018_s = __jule_assign_result.__jule_result_arg0;
		_106021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106021_ok) {
		return jule::Any(_106018_s, &__jule_any_type60);;
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_206640aee:;
			{
				return jule::Any(_221492dba_buildUseExpr(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type65);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_206640c64:;
			{
				return jule::Any(_221489b1a_buildVarSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type17);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_206640cca:;
			{
				return jule::Any(_221489e28_buildRetSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_206640d85:;
			{
				return jule::Any(_22148c865_buildIterSt(&(*_self_), _105131_st), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_206640deb:;
			{
				return jule::Any(_22148cb73_buildBreakSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_206640e62:;
			{
				return jule::Any(_22148ce81_buildContSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_206640ec8:;
			{
				return jule::Any(_22148d8aa_buildIfElseChain(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_20664103e:;
			{
				return jule::Any(_22148dbb8_buildCoCallSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_2066410a5:;
			{
				return jule::Any(_22148dec6_buildGotoSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_20664111b:;
			{
				return jule::Any(_22148e2d4_buildFallSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_206641182:;
			{
				return jule::Any(_22148e5e2_buildTypeAliasSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_2066411e8:;
			{
				return jule::Any(_221490d30_buildMatchCase(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_206641270:;
			{
				return jule::Any(_22149113d_buildScopeSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_2066412e7:;
			{
				if ((_105217_token.get()._field_Kind == jule::Str("{", 1))) {
					return jule::Any(_22149113d_buildScopeSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type53);;
				};
			}
		}
		_match_end_2066409ab:;
	};
	jule::Ptr<_21eea5ec8_Expr> _110117_expr = _2214a5141_buildExpr((*_self_)._field_p, _105131_st.get()._field_tokens);;
	if ((_110117_expr != nullptr)) {
		return jule::Any(_110117_expr, &__jule_any_type54);;
	};
	_221488b4c_pushErr(&(*_self_), _105217_token,jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _2214934e7_build(_22148795e_scopeParser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _110929_tokens, jule::Ptr<_21eeb679c_ScopeTree>& _110952_s) {
	if ((_110952_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_2214874ca_splitStmts(_110929_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_110952_s;
	while (((!(_22148882d_isLastSt(&(*_self_)))) && (!(_2214885b9_finished(&(*_self_)))))) {
		{
			jule::Ptr<_221487134_stmt> _111721_st = _221489455_next(&(*_self_));;
			jule::Any _111821_data = _2214931c8_buildSt(&(*_self_), _111721_st);;
			if ((_111821_data != nullptr)) {
				(*_self_)._field_s.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_Stmts,1);(*_self_)._field_s.get()._field_Stmts.__push(_21eeb6192_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data});;
			};
			if (_221488355_stopped(&(*_self_))) {
				goto _iter_end_206649421;
			};
		}
	_iter_next_206649421:;
	}
	_iter_end_206649421:;;
}







std::ostream &operator<<(std::ostream &_Stream, _22148795e_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _221494718_pushErr(_221493e76_exprBuilder* _self_, jule::Ptr<_21d81d743_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_2214a4a14_pushErr((*_self_)._field_p.ptr(), _4426_token,_4441_fmt,_4454_args);
}



inline void _221494a37_pushSuggestion(_221493e76_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_2214a4d33_pushSuggestion((*_self_)._field_p.ptr(), _4933_fmt,_4946_args);
}



inline jule::Ptr<_21eea6b55_TupleExpr> _221494d45_buildTuple(_221493e76_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>>& _5334_parts) {
	jule::Ptr<_21eea6b55_TupleExpr> _5417_tuple = jule::new_ptr<_21eea6b55_TupleExpr>(_21eea6b55_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_21eea5ec8_Expr>>::alloc(0LL, _5334_parts.len())});;
	{
		auto &expr = _5334_parts;
		auto it = expr.begin();
		_iter_begin_2066693b9:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_21d81d743_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_22149d865_buildFromTokens(&(*_self_), _5721_part));;
			}
			_iter_next_2066693b9:;
			++it;
			goto _iter_begin_2066693b9;
		}
		_iter_end_2066693b9:;
	};
	return _5417_tuple;;
}



inline jule::Ptr<_21eea700c_LitExpr> _221495153_buildLit(_221493e76_exprBuilder* _self_, jule::Ptr<_21d81d743_Token> _6327_token) {
	return jule::new_ptr<_21eea700c_LitExpr>(_21eea700c_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});;
}



inline jule::Ptr<_21eea19a7_TypeDecl> _221495461_buildPrimitiveType(_221493e76_exprBuilder* _self_, jule::Ptr<_21d81d743_Token>& _7038_token) {
	return _2214b4837_buildPrimType(_7038_token);;
}



inline jule::Any _22149576e_buildSingle(_221493e76_exprBuilder* _self_, jule::Ptr<_21d81d743_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_20666ad9e:;
			{
				return jule::Any(_221495153_buildLit(&(*_self_), _7434_token), &__jule_any_type108);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_20666ae26:;
			{
				if ((_7434_token.get()._field_Kind == jule::Str("...", 3))) {
					return jule::Any(jule::new_ptr<_21eead5a7_VariadicExpr>(_21eead5a7_VariadicExpr{._field_Token=_7434_token, }), &__jule_any_type83);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(27LLU) || _match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_20666ae9d:;
			{
				return jule::Any(_22149eb1e_buildIdentExpr(_7434_token), &__jule_any_type87);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_20666b025:;
			{
				return jule::Any(_221495461_buildPrimitiveType(&(*_self_), _7434_token), &__jule_any_type96);;
			}
		}
		_match_end_206669dc0:;
	};
	_221494718_pushErr(&(*_self_), _7434_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_21eea7b89_IdentExpr> _221495a7c_buildCppLinkedIdent(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _9543_tokens) {
	if ((_9543_tokens[0LL].get()._field_Id != static_cast<jule::U64>(30LLU))) {
		return nullptr;;
	} else if ((_9543_tokens[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_221494718_pushErr(&(*_self_), _9543_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_221494a37_pushSuggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_21d81d743_Token> _10317_token = _9543_tokens[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_221494718_pushErr(&(*_self_), _9543_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_221494a37_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_21eea7b89_IdentExpr> _10917_expr = _22149eb1e_buildIdentExpr(_10317_token);;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;;
}



inline jule::Ptr<_21eea8393_UnaryExpr> _221495d8a_buildUnary(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _11433_tokens) {
	jule::Ptr<_21d81d743_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_221494718_pushErr(&(*_self_), _11517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_21d81de4c_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_221494718_pushErr(&(*_self_), _11517_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind, &__jule_any_type6)}));
		return nullptr;;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_21eea8393_UnaryExpr>(_21eea8393_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_22149d865_buildFromTokens(&(*_self_), _11433_tokens)});;
}



inline jule::Ptr<_21eeae289_SubIdentExpr> _221496198_buildObjSubIdent(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _13539_tokens) {
	jule::I64 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_21d81d743_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL,_13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_221494718_pushErr(&(*_self_), _13717_identToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_21eeae289_SubIdentExpr>(_21eeae289_SubIdentExpr{._field_Expr=_22149d865_buildFromTokens(&(*_self_), _13539_tokens), ._field_Ident=_13717_identToken});;
}



inline jule::Ptr<_21eeadd16_NsSelectionExpr> _2214964a6_buildNsSubIdent(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _15039_tokens) {
	jule::Ptr<_21eeadd16_NsSelectionExpr> _15117_ns = jule::new_ptr<_21eeadd16_NsSelectionExpr>();;
	{
		auto &expr = _15039_tokens;
		auto it = expr.begin();
		_iter_begin_206677185:;
		if (it != expr.end()) {
			jule::I64 _15214_i = it - expr.begin();
			jule::Ptr<_21d81d743_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_221494718_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_221494a37_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_221494718_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_221494a37_pushSuggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_206677185:;
			++it;
			_15214_i++;
			goto _iter_begin_206677185;
		}
		_iter_end_206677185:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL,(_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;;
}



inline jule::Ptr<_21eea19a7_TypeDecl> _2214967b4_buildType(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _16933_tokens) {
	jule::I64 _17017_i = 0LL;;
	jule::Ptr<_21eea19a7_TypeDecl> _17118_t;;
	jule::Bool _17121_ok = false;;
	({
		__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType((*_self_)._field_p, _16933_tokens,(&(_17017_i)),false);
		_17118_t = __jule_assign_result.__jule_result_arg0;
		_17121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17121_ok))) {
		_221494718_pushErr(&(*_self_), _16933_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17017_i < _16933_tokens.len())) {
		_221494718_pushErr(&(*_self_), _16933_tokens[_17017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _17118_t;;
}



inline jule::Any _221496ac2_buildSubIdent(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _18337_tokens) {
	jule::I64 _18413_i = (_18337_tokens.len() - 2LL);;
	jule::Ptr<_21d81d743_Token> _18513_token = _18337_tokens[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_20667e335:;
			{
				return jule::Any(_221496198_buildObjSubIdent(&(*_self_), _18337_tokens), &__jule_any_type93);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_20667e830:;
			{
				return jule::Any(_2214964a6_buildNsSubIdent(&(*_self_), _18337_tokens), &__jule_any_type97);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_20667e896:;
			{
				if ((_18513_token.get()._field_Kind == jule::Str("]", 1))) {
					return jule::Any(_2214967b4_buildType(&(*_self_), _18337_tokens), &__jule_any_type96);;
				};
			}
		}
		_match_end_20667e6cb:;
	};
	_221494718_pushErr(&(*_self_), _18513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_21eead5a7_VariadicExpr> _221496dd0_buildVariadic(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _20136_tokens) {
	jule::Ptr<_21d81d743_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL,(_20136_tokens.len() - 1LL));
	return jule::new_ptr<_21eead5a7_VariadicExpr>(_21eead5a7_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_22149d865_buildFromTokens(&(*_self_), _20136_tokens)});;
}



inline jule::Any _2214971dd_buildOpRight(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _21036_tokens) {
	jule::Ptr<_21d81d743_Token> _21117_token = _21036_tokens[(_21036_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_206683801:;
			{
				_21036_tokens=_21036_tokens.slice(0LL,(_21036_tokens.len() - 1LL));
				jule::Any _21521_d = _22149d249_build(&(*_self_), _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type == &__jule_any_type114) {
						_case_begin_206684dc9:;
						{
							_21521_d.cast_ptr<_21eeaed17_FnCallExpr>(&__jule_any_type114).get()._field_Exception=jule::new_ptr<_21eeb679c_ScopeTree>(_21eeb679c_ScopeTree{._field_Deferred=true, });
							return _21521_d;;
						}
					}
					_match_end_20668500b:;
				};
			}
		}
		_match_end_206683636:;
	};
	_221494718_pushErr(&(*_self_), _21117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_21eea62b4_RangeExpr> _22149751d_buildBetweenParentheses(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_221494718_pushErr(&(*_self_), _23146_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_221494a37_pushSuggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_23146_tokens=_23146_tokens.slice(1LL,(_23146_tokens.len() - 1LL));
	return jule::new_ptr<_21eea62b4_RangeExpr>(_21eea62b4_RangeExpr{._field_Expr=_22149d865_buildFromTokens(&(*_self_), _23146_tokens)});;
}



inline jule::Ptr<_21eead95e_CastExpr> _22149783c_tryBuildCast(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _24336_tokens) {
	jule::I64 _24417_rangeN = 0LL;;
	{
		auto &expr = _24336_tokens;
		auto it = expr.begin();
		_iter_begin_206688251:;
		if (it != expr.end()) {
			jule::I64 _24513_i = it - expr.begin();
			jule::Ptr<_21d81d743_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_206689829:;
							{
								(_24417_rangeN)++;
								goto _iter_next_206688251;
							}
						}
						else {
							_case_begin_20668941c:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_20668920d:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_206688251;
				} else if (((_24513_i + 1LL) == _24336_tokens.len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_21d81d743_Token>> _26421_typeTokens = _24336_tokens.slice(0LL,(_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_21d81d743_Token>> _26521_exprTokens = _24336_tokens.slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_21d81d743_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_27217_tok.get()._field_Kind != jule::Str("(", 1)))) {
					return nullptr;;
				};
				jule::Ptr<_21eead95e_CastExpr> _27721_cast = jule::new_ptr<_21eead95e_CastExpr>(_21eead95e_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_221494718_pushErr(&(*_self_), _26521_exprTokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_221494a37_pushSuggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_221494718_pushErr(&(*_self_), _26421_typeTokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_221494a37_pushSuggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL,(_26421_typeTokens.len() - 1LL));
					jule::I64 _29125_typeIndex = 0LL;;
					jule::Ptr<_21eea19a7_TypeDecl> _29226_t;;
					jule::Bool _29229_ok = false;;
					({
						__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType((*_self_)._field_p, _26421_typeTokens,(&(_29125_typeIndex)),true);
						_29226_t = __jule_assign_result.__jule_result_arg0;
						_29229_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_221494718_pushErr(&(*_self_), _26421_typeTokens[_29125_typeIndex],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I64 _30229_j = 0LL;;
						_2214a2319_range(_30229_j,jule::Str("(", 1),jule::Str(")", 1),_26521_exprTokens);
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL,_30229_j);
						_27721_cast.get()._field_Expr=_22149d865_buildFromTokens(&(*_self_), _26521_exprTokens);
					};
				};
				return _27721_cast;;
			}
			_iter_next_206688251:;
			++it;
			_24513_i++;
			goto _iter_begin_206688251;
		}
		_iter_end_206688251:;
	};
	return nullptr;;
}



inline void _221497c05_pushArg(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21eea5ec8_Expr>>& _31731_args, jule::Slice<jule::Ptr<_21d81d743_Token>> _31750_tokens, jule::Ptr<_21d81d743_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_221494718_pushErr(&(*_self_), _31768_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_221494a37_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_31731_args = jule::alloc_for_append(_31731_args,1);_31731_args.__push(_22149d865_buildFromTokens(&(*_self_), _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _221498013_buildArgs(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _33217_args = nullptr;;
	jule::I64 _33317_last = 0LL;;
	jule::I64 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL,(_32632_tokens.len() - 1LL));
	{
		auto &expr = _32632_tokens;
		auto it = expr.begin();
		_iter_begin_206696e1e:;
		if (it != expr.end()) {
			jule::I64 _33613_i = it - expr.begin();
			jule::Ptr<_21d81d743_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_2066986b2:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_2066982a5:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_206698096:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_206696e1e;
				};
				_221497c05_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last,_33613_i),_33616_token);
				_33317_last=static_cast<jule::I64>((_33613_i + 1LL));
			}
			_iter_next_206696e1e:;
			++it;
			_33613_i++;
			goto _iter_begin_206696e1e;
		}
		_iter_end_206696e1e:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_221497c05_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[_33317_last]);
			};
		} else {
			_221497c05_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;;
}



inline jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>> _221498321_buildCallGenerics(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;;
	};
	_36840_tokens=_36840_tokens.slice(1LL,(_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _37418_parts;;
	jule::Slice<_21d4e511d_Log> _37425_errs;;
	({
		__jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log __jule_assign_result = _2214a2d86_parts(_36840_tokens,static_cast<jule::U64>(8LLU),true);
		_37418_parts = __jule_assign_result.__jule_result_arg0;
		_37425_errs = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>>::alloc(0LL, _37418_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_37425_errs);
	{
		auto &expr = _37418_parts;
		auto it = expr.begin();
		_iter_begin_20669c8e7:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_21d81d743_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_20669c8e7;
				};
				jule::I64 _38121_j = 0LL;;
				jule::Ptr<_21eea19a7_TypeDecl> _38222_generic;;
				({
					__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType((*_self_)._field_p, _37721_part,(&(_38121_j)),true);
					_38222_generic = __jule_assign_result.__jule_result_arg0;
				});
				if ((_38121_j < _37721_part.len())) {
					_221494718_pushErr(&(*_self_), _37721_part[_38121_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_20669c8e7:;
			++it;
			goto _iter_begin_20669c8e7;
		}
		_iter_end_20669c8e7:;
	};
	return _37517_generics;;
}



inline jule::Ptr<_21eeaed17_FnCallExpr> _221498772_buildFnCall(_221493e76_exprBuilder* _self_, jule::Ptr<_21d81d743_Token>& _39235_token, jule::Slice<jule::Ptr<_21d81d743_Token>>& _39255_expr, jule::Slice<jule::Ptr<_21d81d743_Token>>& _39276_args) {
	return jule::new_ptr<_21eeaed17_FnCallExpr>(_21eeaed17_FnCallExpr{._field_Token=_39235_token, ._field_Expr=_22149d865_buildFromTokens(&(*_self_), _39255_expr), ._field_Args=_221498013_buildArgs(&(*_self_), _39276_args), });;
}



inline jule::Any _221498a80_buildParenthesesRange(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _40045_tokens) {
	jule::Ptr<_21d81d743_Token> _40117_token = _40045_tokens[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_2066a2545:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_2066a2db4:;
						{
							jule::Ptr<_21eead95e_CastExpr> _40625_expr = _22149783c_tryBuildCast(&(*_self_), _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return jule::Any(_40625_expr, &__jule_any_type112);;
							};
						}
					}
					_match_end_2066a2be9:;
				};
			}
		}
		_match_end_2066a237a:;
	};
	jule::Slice<jule::Ptr<_21d81d743_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _41234_args_tokens;;
	({
		__jule_tuple_sx_21d81d743_Token__jule_tuple_sx_21d81d743_Token __jule_assign_result = _2214a25b1_rangeLast(_40045_tokens);
		_41218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_41234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41218_exprTokens.len() == 0LL)) {
		return jule::Any(_22149751d_buildBetweenParentheses(&(*_self_), _41234_args_tokens), &__jule_any_type107);;
	};
	return jule::Any(_221498772_buildFnCall(&(*_self_), _40117_token,_41218_exprTokens,_41234_args_tokens), &__jule_any_type114);;
}



inline jule::Ptr<_21eea7716_UnsafeExpr> _221498d8d_buildUnsafeExpr(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _42138_tokens) {
	jule::Ptr<_21d81d743_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I64 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _42517_rangeTokens = _2214a2319_range(_42417_i,jule::Str("{", 1),jule::Str("}", 1),_42138_tokens);;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_221494718_pushErr(&(*_self_), _42138_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_21eea7716_UnsafeExpr>(_21eea7716_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_22149d865_buildFromTokens(&(*_self_), _42517_rangeTokens)});;
}



inline jule::Ptr<_21eeb8293_FnDecl> _22149919b_buildAnonFn(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _43635_tokens) {
	jule::Ptr<_21eeb8293_FnDecl> _43717_f = _2214aa575_buildFn((*_self_)._field_p, _43635_tokens,false,false);;
	if ((!(_21eeb85e5_IsAnon(_43717_f.ptr())))) {
		_221494718_pushErr(&(*_self_), _43717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_221494a37_pushSuggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _43717_f;;
}



inline jule::Any _2214994a9_buildUnsafe(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _44535_tokens) {
	{
		auto &_match_expr{ _44535_tokens[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_2066a8eca:;
			{
				return jule::Any(_22149919b_buildAnonFn(&(*_self_), _44535_tokens), &__jule_any_type15);;
			}
		}
		else {
			_case_begin_2066a943c:;
			{
				return jule::Any(_221498d8d_buildUnsafeExpr(&(*_self_), _44535_tokens), &__jule_any_type109);;
			}
		}
		_match_end_2066a93b5:;
	};
}



inline void _221499872_pushRangeLitPart(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _45539_part, jule::Ptr<_21d81d743_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>>& _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_221494718_pushErr(&(*_self_), _4569_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_221494a37_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_45634_parts = jule::alloc_for_append(_45634_parts,1);_45634_parts.__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _221499ba2_getBraceRangeLitExprParts(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _47217_parts = nullptr;;
	jule::I64 _47417_last = 0LL;;
	jule::I64 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL,(_46648_tokens.len() - 1LL));
	{
		auto &expr = _46648_tokens;
		auto it = expr.begin();
		_iter_begin_2066ad5c8:;
		if (it != expr.end()) {
			jule::I64 _47713_i = it - expr.begin();
			jule::Ptr<_21d81d743_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_2066aed6b:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_2066ae95e:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_2066ae750:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_2066ad5c8;
				};
				_221499872_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last,_47713_i),_47716_token,_47217_parts);
				_47417_last=static_cast<jule::I64>((_47713_i + 1LL));
			}
			_iter_next_2066ad5c8:;
			++it;
			_47713_i++;
			goto _iter_begin_2066ad5c8;
		}
		_iter_end_2066ad5c8:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_221499872_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[_47417_last],_47217_parts);
			};
		} else {
			_221499872_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[(_47417_last - 1LL)],_47217_parts);
		};
	};
	return _47217_parts;;
}



inline jule::Ptr<_21eeb0796_FieldExprPair> _221499ec1_buildFieldExprPair(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_221494718_pushErr(&(*_self_), _50841_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_21eeb0796_FieldExprPair> _51317_pair = jule::new_ptr<_21eeb0796_FieldExprPair>(_21eeb0796_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_22149d865_buildFromTokens(&(*_self_), _50841_tokens);
	return _51317_pair;;
}



inline jule::Ptr<_21eea5ec8_Expr> _22149a2ce_buildStructLitExpr(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _52142_tokens) {
	jule::Ptr<_21d81d743_Token> _52217_token = _52142_tokens[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (_52142_tokens.len() > 1LL))) {
		_52217_token=_52142_tokens[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_21eea5ec8_Expr>(_21eea5ec8_Expr{._field_Token=_52217_token, ._field_End=_52142_tokens[(_52142_tokens.len() - 1LL)], ._field_Kind=jule::Any(_221499ec1_buildFieldExprPair(&(*_self_), _52142_tokens), &__jule_any_type85)});;
		};
	};
	return _22149d865_buildFromTokens(&(*_self_), _52142_tokens);;
}



inline jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _22149a5dc_buildStructLitExprs(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _53717_parts = _221499ba2_getBraceRangeLitExprParts(&(*_self_), _53643_tokens);;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_21eea5ec8_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_21eea5ec8_Expr>>::alloc(0LL, _53717_parts.len());;
	{
		auto &expr = _53717_parts;
		auto it = expr.begin();
		_iter_begin_2066b7cdb:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_21d81d743_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_22149a2ce_buildStructLitExpr(&(*_self_), _54321_part));;
			}
			_iter_next_2066b7cdb:;
			++it;
			goto _iter_begin_2066b7cdb;
		}
		_iter_end_2066b7cdb:;
	};
	return _54217_pairs;;
}



inline jule::Ptr<_21eeb0ee4_StructLit> _22149a91c_buildTypedStructLiteral(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _54946_tokens) {
	jule::I64 _55017_i = 0LL;;
	jule::Ptr<_21eea19a7_TypeDecl> _55118_t;;
	jule::Bool _55121_ok = false;;
	({
		__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType((*_self_)._field_p, _54946_tokens,(&(_55017_i)),true);
		_55118_t = __jule_assign_result.__jule_result_arg0;
		_55121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_55121_ok))) {
		return nullptr;;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_221494718_pushErr(&(*_self_), _54946_tokens[_55017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_21d81d743_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_56013_token.get()._field_Kind != jule::Str("{", 1)))) {
		_221494718_pushErr(&(*_self_), _56013_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_21eeb0ee4_StructLit>(_21eeb0ee4_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_22149a5dc_buildStructLitExprs(&(*_self_), _54946_tokens)});;
}



inline jule::Ptr<_21eea5ec8_Expr> _22149ac3b_buildBraceLitPart(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _57341_tokens) {
	jule::Slice<jule::Ptr<_21d81d743_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _57425_r;;
	({
		__jule_tuple_sx_21d81d743_Token__jule_tuple_sx_21d81d743_Token __jule_assign_result = _22149e5d0_splitDelim(_57341_tokens,static_cast<jule::U64>(11LLU));
		_57418_l = __jule_assign_result.__jule_result_arg0;
		_57425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_21eea5ec8_Expr>(_21eea5ec8_Expr{._field_Token=_57341_tokens[0LL], ._field_End=_57341_tokens[(_57341_tokens.len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_21eeb1c3c_KeyValPair>(_21eeb1c3c_KeyValPair{._field_Key=_22149d865_buildFromTokens(&(*_self_), _57418_l), ._field_Val=_22149d865_buildFromTokens(&(*_self_), _57425_r), ._field_Colon=_57341_tokens[_57418_l.len()]}), &__jule_any_type86)});;
	};
	return _22149d865_buildFromTokens(&(*_self_), _57341_tokens);;
}



inline jule::Ptr<_21eeb1467_BraceLit> _22149b049_buildBraceLit(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _59037_tokens) {
	jule::Ptr<_21eeb1467_BraceLit> _59117_lit = jule::new_ptr<_21eeb1467_BraceLit>(_21eeb1467_BraceLit{._field_Token=_59037_tokens[0LL], ._field_End=_59037_tokens[(_59037_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _59617_parts = _221499ba2_getBraceRangeLitExprParts(&(*_self_), _59037_tokens);;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_21eea5ec8_Expr>>::alloc(0LL, _59617_parts.len());
	{
		auto &expr = _59617_parts;
		auto it = expr.begin();
		_iter_begin_2066c239a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_21d81d743_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_22149ac3b_buildBraceLitPart(&(*_self_), _60221_part));;
			}
			_iter_next_2066c239a:;
			++it;
			goto _iter_begin_2066c239a;
		}
		_iter_end_2066c239a:;
	};
	return _59117_lit;;
}



inline jule::Any _22149b357_buildBraceRange(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _60939_tokens) {
	jule::Slice<jule::Ptr<_21d81d743_Token>> _61018_exprTokens;;
	jule::I64 _61030_rangeN = 0;;
	({
		__jule_tuple_sx_21d81d743_Token__jule_tuple_int __jule_assign_result = _22149edb6_getRangeExprTokens(_60939_tokens);
		_61018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_61030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_2066c417c:;
			{
				return jule::Any(_22149b049_buildBraceLit(&(*_self_), _60939_tokens), &__jule_any_type115);;
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_2066c41e3:;
			{
				_221494718_pushErr(&(*_self_), _60939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2066c32be:;
	};
	jule::Ptr<_21d81d743_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL,(_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _22149d249_build(&(*_self_), _61018_exprTokens);;
		if ((_62421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type == &__jule_any_type114) {
				_case_begin_2066c748d:;
				{
					_60939_tokens=_60939_tokens.slice((_61018_exprTokens.len() + 1LL));
					jule::I64 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_21d81d743_Token>> _63225_rangeTokens = _2214a2319_range(_63125_i,jule::Str("{", 1),jule::Str("}", 1),_60939_tokens);;
					jule::Ptr<_21eeaed17_FnCallExpr> _63325_model = _62421_d.cast_ptr<_21eeaed17_FnCallExpr>(&__jule_any_type114);;
					if (_21eeb03de_Ignored(_63325_model.ptr())) {
						_221494718_pushErr(&(*_self_), _62113_elseToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_221494a37_pushSuggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_2214a5a7b_buildScope((*_self_)._field_p, _63225_rangeTokens,_60939_tokens[(_63125_i - 1LL)]);
					return _62421_d;;
				}
			}
			else {
				_case_begin_2066c7070:;
				{
					_221494718_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_2066c6e1b:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_2066cbe21:;
			{
				return _2214994a9_buildUnsafe(&(*_self_), _60939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_2066cbe87:;
			{
				return jule::Any(_22149919b_buildAnonFn(&(*_self_), _60939_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_2066cbc78:;
			{
				return jule::Any(_22149a91c_buildTypedStructLiteral(&(*_self_), _60939_tokens), &__jule_any_type113);;
			}
		}
		else {
			_case_begin_2066c9748:;
			{
				_221494718_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2066cb10c:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _22149b665_getEnumerableParts(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL,(_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _66318_parts;;
	jule::Slice<_21d4e511d_Log> _66325_errors;;
	({
		__jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log __jule_assign_result = _2214a2d86_parts(_66141_tokens,static_cast<jule::U64>(8LLU),true);
		_66318_parts = __jule_assign_result.__jule_result_arg0;
		_66325_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;;
}



inline jule::Ptr<_21eeb2424_SliceExpr> _22149b973_buildSlice(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _66833_tokens) {
	jule::Ptr<_21eeb2424_SliceExpr> _66917_slc = jule::new_ptr<_21eeb2424_SliceExpr>(_21eeb2424_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _67417_parts = _22149b665_getEnumerableParts(&(*_self_), _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_21eea5ec8_Expr>>::alloc(0LL, _67417_parts.len());
	{
		auto &expr = _67417_parts;
		auto it = expr.begin();
		_iter_begin_2066d1893:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_21d81d743_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_2066d1893;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_22149d865_buildFromTokens(&(*_self_), _68021_p));;
			}
			_iter_next_2066d1893:;
			++it;
			goto _iter_begin_2066d1893;
		}
		_iter_end_2066d1893:;
	};
	return _66917_slc;;
}



inline jule::Ptr<_21eeb2c93_IndexingExpr> _22149bdc4_buildIndexing(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_21d81d743_Token>> _69113_tokens, jule::Ptr<_21d81d743_Token> _69135_errorToken) {
	jule::Ptr<_21d81d743_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL,(_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_221494718_pushErr(&(*_self_), _69135_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_21eea5ec8_Expr> _69817_expr = _22149d865_buildFromTokens(&(*_self_), _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_21eea5ec8_Expr> _70217_index = _22149d865_buildFromTokens(&(*_self_), _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_21eeb2c93_IndexingExpr>(_21eeb2c93_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});;
}



inline jule::Ptr<_21eeb339d_SlicingExpr> _22149c468_buildSlicing(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _71436_exprTokens, jule::Slice<jule::Ptr<_21d81d743_Token>>& _71463_start, jule::Slice<jule::Ptr<_21d81d743_Token>>& _71514_to, jule::Ptr<_21d81d743_Token>& _71533_errorToken, jule::Ptr<_21d81d743_Token> _71557_end) {
	jule::Ptr<_21eeb339d_SlicingExpr> _71617_slc = jule::new_ptr<_21eeb339d_SlicingExpr>(_21eeb339d_SlicingExpr{._field_Token=_71533_errorToken, ._field_End=_71557_end, ._field_Expr=_22149d865_buildFromTokens(&(*_self_), _71436_exprTokens), });;
	if ((_71463_start.len() > 0LL)) {
		_71617_slc.get()._field_Start=_22149d865_buildFromTokens(&(*_self_), _71463_start);
	};
	if ((_71514_to.len() > 0LL)) {
		_71617_slc.get()._field_To=_22149d865_buildFromTokens(&(*_self_), _71514_to);
	};
	return _71617_slc;;
}



inline jule::Any _22149c776_buildBracketRange(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _73040_tokens) {
	jule::Ptr<_21d81d743_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _73218_exprTokens;;
	jule::I64 _73230_rangeN = 0;;
	({
		__jule_tuple_sx_21d81d743_Token__jule_tuple_int __jule_assign_result = _22149edb6_getRangeExprTokens(_73040_tokens);
		_73218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_73230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_73218_exprTokens.len() == 0LL)) {
		return jule::Any(_22149b973_buildSlice(&(*_self_), _73040_tokens), &__jule_any_type102);;
	} else if ((_73230_rangeN > 0LL)) {
		_221494718_pushErr(&(*_self_), _73117_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_21d81d743_Token>> _74717_splitTokens = _73040_tokens.slice(1LL,(_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _74829_to;;
	({
		__jule_tuple_sx_21d81d743_Token__jule_tuple_sx_21d81d743_Token __jule_assign_result = _22149e5d0_splitDelim(_74717_splitTokens,static_cast<jule::U64>(11LLU));
		_74818_start = __jule_assign_result.__jule_result_arg0;
		_74829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return jule::Any(_22149c468_buildSlicing(&(*_self_), _73218_exprTokens,_74818_start,_74829_to,_73117_errorToken,_73040_tokens[(_73040_tokens.len() - 1LL)]), &__jule_any_type111);;
	};
	return jule::Any(_22149bdc4_buildIndexing(&(*_self_), _73218_exprTokens,_73040_tokens,_73117_errorToken), &__jule_any_type110);;
}



inline jule::Any _22149ca84_buildData(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _75533_tokens) {
	{
		auto _match_expr{ _75533_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_2066dd262:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_2066dd32d:;
			{
				return _22149576e_buildSingle(&(*_self_), _75533_tokens[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_2066dd394:;
			{
				if ((_75533_tokens[0LL].get()._field_Id == static_cast<jule::U64>(30LLU))) {
					return jule::Any(_221495a7c_buildCppLinkedIdent(&(*_self_), _75533_tokens), &__jule_any_type87);;
				};
			}
		}
		_match_end_2066dca36:;
	};
	jule::Ptr<_21d81d743_Token> _76717_token = _75533_tokens[(_75533_tokens.len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_76717_token.get()._field_Kind == jule::Str("...", 3)))) {
		return jule::Any(_221496dd0_buildVariadic(&(*_self_), _75533_tokens), &__jule_any_type83);;
	};
	_76717_token=_75533_tokens[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_2066e1496:;
			{
				if (((_75533_tokens.len() > 1LL) && (_76717_token.get()._field_Kind == jule::Str("*", 1)))) {
					_76717_token=_75533_tokens[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U64>(34LLU)))) {
						return jule::Any(_2214967b4_buildType(&(*_self_), _75533_tokens), &__jule_any_type96);;
					};
				};
				return jule::Any(_221495d8a_buildUnary(&(*_self_), _75533_tokens), &__jule_any_type95);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_2066e15ea:;
			{
				if ((_75533_tokens.len() < 3LL)) {
					goto _match_end_2066e1584;
				};
				if ((_75533_tokens.len() > 3LL)) {
					jule::Ptr<_21d81d743_Token> _78921_t = _75533_tokens[(_75533_tokens.len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_78921_t.get()._field_Kind == jule::Str(")", 1)))) {
						goto _match_end_2066e1584;
					};
				};
				jule::Ptr<_21d81d743_Token> _79517_next = _75533_tokens[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_79517_next.get()._field_Kind != jule::Str("]", 1)))) {
					goto _match_end_2066e1584;
				};
				return jule::Any(_2214967b4_buildType(&(*_self_), _75533_tokens), &__jule_any_type96);;
			}
		}
		_match_end_2066e1584:;
	};
	_76717_token=_75533_tokens[(_75533_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_2066e1b39:;
			{
				return _221496ac2_buildSubIdent(&(*_self_), _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_2066e715b:;
			{
				return jule::Any(_2214967b4_buildType(&(*_self_), _75533_tokens), &__jule_any_type96);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_2066e71c2:;
			{
				return _2214971dd_buildOpRight(&(*_self_), _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_2066e7238:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_2066e89a9:;
						{
							return _221498a80_buildParenthesesRange(&(*_self_), _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_2066e8a31:;
						{
							return _22149b357_buildBraceRange(&(*_self_), _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_2066e8aa8:;
						{
							return _22149c776_buildBracketRange(&(*_self_), _75533_tokens);;
						}
					}
					_match_end_2066e84ae:;
				};
			}
		}
		_match_end_2066e1ad4:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		return jule::Any(_2214967b4_buildType(&(*_self_), _75533_tokens), &__jule_any_type96);;
	};
	_221494718_pushErr(&(*_self_), _76717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _22149ce3b_buildBinop(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _83134_tokens, jule::I64 _83152_i) {
	jule::Ptr<_21d81d743_Token> _83217_op = _83134_tokens[_83152_i];;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _83317_leftTokens = _83134_tokens.slice(0LL,_83152_i);;
	if ((_22149dbb7_isTypeOp(_83217_op.get()._field_Kind) && _22149dea3_isTypeRange(_83317_leftTokens))) {
		return jule::Any(_2214967b4_buildType(&(*_self_), _83134_tokens), &__jule_any_type96);;
	};
	jule::Slice<jule::Ptr<_21d81d743_Token>> _83817_rightTokens = _83134_tokens.slice((_83152_i + 1LL));;
	if ((_83317_leftTokens.len() == 0LL)) {
		_221494718_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_221494a37_pushSuggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83817_rightTokens.len() == 0LL)) {
		_221494718_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_221494a37_pushSuggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_21eeae70c_BinopExpr>(_21eeae70c_BinopExpr{._field_Left=_22149d865_buildFromTokens(&(*_self_), _83317_leftTokens), ._field_Right=_22149d865_buildFromTokens(&(*_self_), _83817_rightTokens), ._field_Op=_83217_op}), &__jule_any_type116);;
}



inline jule::Any _22149d249_build(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _85629_tokens) {
	jule::I64 _85713_i = _22149e877_findLowestPrecOp(_85629_tokens);;
	if ((_85713_i == -1LL)) {
		return _22149ca84_buildData(&(*_self_), _85629_tokens);;
	};
	return _22149ce3b_buildBinop(&(*_self_), _85629_tokens,_85713_i);;
}



inline jule::Any _22149d557_buildKind(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _86433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _86518_parts;;
	jule::Slice<_21d4e511d_Log> _86525_errors;;
	({
		__jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log __jule_assign_result = _2214a2d86_parts(_86433_tokens,static_cast<jule::U64>(8LLU),true);
		_86518_parts = __jule_assign_result.__jule_result_arg0;
		_86525_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86525_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_86525_errors);
		return nullptr;;
	} else if ((_86518_parts.len() > 1LL)) {
		return jule::Any(_221494d45_buildTuple(&(*_self_), _86518_parts), &__jule_any_type88);;
	};
	return _22149d249_build(&(*_self_), _86433_tokens);;
}



inline jule::Ptr<_21eea5ec8_Expr> _22149d865_buildFromTokens(_221493e76_exprBuilder* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _87538_tokens) {
	if ((_87538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	return jule::new_ptr<_21eea5ec8_Expr>(_21eea5ec8_Expr{._field_Token=_87538_tokens[0LL], ._field_End=_87538_tokens[(_87538_tokens.len() - 1LL)], ._field_Kind=_22149d557_buildKind(&(*_self_), _87538_tokens)});;
}







std::ostream &operator<<(std::ostream &_Stream, _221493e76_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2214a0779_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _2214a43d7_stop(_2214a40a7_parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _2214a464b_stopped(_2214a40a7_parser* _self_) {
	return ((*_self_)._field_ast == nullptr);;
}



inline void _2214a4a14_pushErr(_2214a40a7_parser* _self_, jule::Ptr<_21d81d743_Token> _28126_token, jule::Str _28141_fmt, jule::Slice<jule::Any> _28154_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_2214a3518_compilerErr(_28126_token,_28141_fmt,_28154_args));;
}



inline void _2214a4d33_pushSuggestion(_2214a40a7_parser* _self_, jule::Str _28633_fmt, jule::Slice<jule::Any> _28646_args) {
	{
		_2214a3947_pushSuggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_28633_fmt,_28646_args);
	};
}



inline jule::Ptr<_21eea5ec8_Expr> _2214a5141_buildExpr(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _29034_tokens) {
	jule::Ptr<_221493e76_exprBuilder> _29117_ep = jule::new_ptr<_221493e76_exprBuilder>(_221493e76_exprBuilder{._field_p=_self_});;
	jule::Ptr<_21eea5ec8_Expr> _29417_expr = _22149d865_buildFromTokens(_29117_ep.ptr(), _29034_tokens);;
	return _29417_expr;;
}



inline jule::Ptr<_21ee6d710_Directive> _2214a544e_buildDirective(_2214a40a7_parser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _29837_tokens) {
	if ((_29837_tokens.len() == 1LL)) {
		_2214a4a14_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_29837_tokens[1LL].get()._field_Column != (_29837_tokens[0LL].get()._field_Column + 1LL))) {
		_2214a4a14_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_21ee6d710_Directive>(_21ee6d710_Directive{._field_Tag=_29837_tokens[1LL], ._field_Args=_29837_tokens.slice(2LL)});;
}



inline void _2214a56c4_pushDirective(_2214a40a7_parser* _self_, jule::Ptr<_21ee6d710_Directive> _31336_d) {
	if ((_31336_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_20672bc95:;
		if (it != expr.end()) {
			jule::Ptr<_21ee6d710_Directive> _31816_pd = *it;
			{
				if ((_31336_d.get()._field_Tag.get()._field_Kind == _31816_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_20672bc95:;
			++it;
			goto _iter_begin_20672bc95;
		}
		_iter_end_20672bc95:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_31336_d);;
}



inline jule::Ptr<_21eeb679c_ScopeTree> _2214a5a7b_buildScope(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _32635_tokens, jule::Ptr<_21d81d743_Token> _32657_end) {
	jule::Ptr<_21eeb679c_ScopeTree> _32717_s = _221486067_newScope();;
	_32717_s.get()._field_End=_32657_end;
	_22148795e_scopeParser _32917_sp = _22148795e_scopeParser{._field_p=_self_, };;
	_2214934e7_build(&_32917_sp, _32635_tokens,_32717_s);
	return _32717_s;;
}



inline __jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool _2214a5ecc__buildType(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _33642_tokens, jule::I64* _33713_i, jule::Bool _33722_err) {
	__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_2214b4cbb_typeBuilder _33817_tb = _2214b4cbb_typeBuilder{._field_p=_self_, ._field_tokens=_33642_tokens, ._field_i=_33713_i, ._field_err=_33722_err};;
	jule::Ptr<_21eea19a7_TypeDecl> _34418_decl;;
	jule::Bool _34424_ok = false;;
	({
		__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214b8066_build(&_33817_tb);
		_34418_decl = __jule_assign_result.__jule_result_arg0;
		_34424_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _34418_decl;
	__jule_func_result.__jule_result_arg1 = _34424_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool _2214a642d_buildType(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _34941_tokens, jule::I64* _35013_i, jule::Bool _35022_err) {
	__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_21d81d743_Token> _35113_token = _34941_tokens[(*(_35013_i))];;
	jule::Ptr<_21eea19a7_TypeDecl> _35218_t;;
	jule::Bool _35221_ok = false;;
	({
		__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a5ecc__buildType(_self_, _34941_tokens,_35013_i,_35022_err);
		_35218_t = __jule_assign_result.__jule_result_arg0;
		_35221_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_35022_err && (!(_35221_ok)))) {
		_2214a4a14_pushErr(_self_.ptr(), _35113_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _35218_t;
	__jule_func_result.__jule_result_arg1 = _35221_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_21eebcad3_TypeAliasDecl> _2214a673b_buildTypeAliasDecl(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _35943_tokens) {
	jule::I64 _36017_i = 1LL;;
	if ((_36017_i >= _35943_tokens.len())) {
		_2214a4a14_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_21eebcad3_TypeAliasDecl> _36517_tad = jule::new_ptr<_21eebcad3_TypeAliasDecl>(_21eebcad3_TypeAliasDecl{._field_Token=_35943_tokens[1LL], ._field_Ident=_35943_tokens[1LL].get()._field_Kind, });;
	jule::Ptr<_21d81d743_Token> _36917_token = _35943_tokens[_36017_i];;
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2214a4a14_pushErr(_self_.ptr(), _36917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_2214a4a14_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	_36917_token=_35943_tokens[_36017_i];
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_2214a4a14_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_2214a4a14_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	jule::Ptr<_21eea19a7_TypeDecl> _39018_t;;
	jule::Bool _39021_ok = false;;
	({
		__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType(_self_, _35943_tokens,(&(_36017_i)),true);
		_39018_t = __jule_assign_result.__jule_result_arg0;
		_39021_ok = __jule_assign_result.__jule_result_arg1;
	});
	_36517_tad.get()._field_Kind=_39018_t;
	if ((_39021_ok && (_36017_i < _35943_tokens.len()))) {
		_2214a4a14_pushErr(_self_.ptr(), _35943_tokens[_36017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_36517_tad.get()._field_Public=_2214b3c54_isPub(_36517_tad.get()._field_Ident);
	return _36517_tad;;
}



inline void _2214a6a5a_buildVarTypeAndExpr(jule::Ptr<_2214a40a7_parser> _self_, jule::Ptr<_21eeb9272_VarDecl>& _39944_v, jule::Slice<jule::Ptr<_21d81d743_Token>>& _39962_tokens) {
	jule::I64 _40017_i = 0LL;;
	jule::Ptr<_21d81d743_Token> _40117_tok = _39962_tokens[_40017_i];;
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40017_i)++;
		if (((_40017_i >= _39962_tokens.len()) || ((_39962_tokens[_40017_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_39962_tokens[_40017_i].get()._field_Kind == jule::Str("=", 1))))) {
			_2214a4a14_pushErr(_self_.ptr(), _40117_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_21eea19a7_TypeDecl> _40922_t;;
		jule::Bool _40925_ok = false;;
		({
			__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType(_self_, _39962_tokens,(&(_40017_i)),true);
			_40922_t = __jule_assign_result.__jule_result_arg0;
			_40925_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_40925_ok) {
			_39944_v.get()._field_Kind=_40922_t;
			if ((_40017_i >= _39962_tokens.len())) {
				return;;
			};
			_40117_tok=_39962_tokens[_40017_i];
		};
	};
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((_40117_tok.get()._field_Kind != jule::Str("=", 1))) {
			_2214a4a14_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_21d81d743_Token>> _42421_exprTokens = _39962_tokens.slice((_40017_i + 1LL));;
		if ((_42421_exprTokens.len() == 0LL)) {
			_2214a4a14_pushErr(_self_.ptr(), _40117_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_39944_v.get()._field_Expr=_2214a5141_buildExpr(_self_, _42421_exprTokens);
	} else {
		_2214a4a14_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _2214a6d79_buildVarCommon(jule::Ptr<_2214a40a7_parser> _self_, jule::Ptr<_21eeb9272_VarDecl>& _43539_v, jule::Slice<jule::Ptr<_21d81d743_Token>> _43556_tokens) {
	_43539_v.get()._field_Token=_43556_tokens[0LL];
	if ((_43539_v.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2214a4a14_pushErr(_self_.ptr(), _43539_v.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_43539_v.get()._field_Ident=_43539_v.get()._field_Token.get()._field_Kind;
	_43539_v.get()._field_Public=_2214b3c54_isPub(_43539_v.get()._field_Ident);
	_43539_v.get()._field_Kind=nullptr;
	if ((_43556_tokens.len() > 1LL)) {
		_43556_tokens=_43556_tokens.slice(1LL);
		_2214a6a5a_buildVarTypeAndExpr(_self_, _43539_v,_43556_tokens);
	};
}



inline void _2214a7242_buildVarBegin(_2214a40a7_parser* _self_, jule::Ptr<_21eeb9272_VarDecl>& _45137_v, jule::I64& _45155_i, jule::Slice<jule::Ptr<_21d81d743_Token>>& _45164_tokens) {
	jule::Ptr<_21d81d743_Token> _45213_tok = _45164_tokens[_45155_i];;
	{
		auto &_match_expr{ _45213_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_2067467e8:;
			{
				_45137_v.get()._field_Statically=true;
				goto _case_begin_206746001;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_206746001:;
			{
				(_45155_i)++;
				if ((_45155_i >= _45164_tokens.len())) {
					_2214a4a14_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45164_tokens[_45155_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_45137_v.get()._field_Mutable=true;
					(_45155_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_206746067:;
			{
				(_45155_i)++;
				_45137_v.get()._field_Constant=true;
			}
		}
		else {
			_case_begin_206745e57:;
			{
				_2214a4a14_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_206745cc0:;
	};
	if ((_45155_i >= _45164_tokens.len())) {
		_2214a4a14_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_21eeb9272_VarDecl> _2214a7550_buildVar(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _48132_tokens) {
	jule::I64 _48217_i = 0LL;;
	jule::Ptr<_21eeb9272_VarDecl> _48317_v = jule::new_ptr<_21eeb9272_VarDecl>(_21eeb9272_VarDecl{._field_Token=_48132_tokens[0LL], });;
	_2214a7242_buildVarBegin(_self_.ptr(), _48317_v,_48217_i,_48132_tokens);
	if ((_48217_i >= _48132_tokens.len())) {
		return nullptr;;
	};
	_48132_tokens=_48132_tokens.slice(_48217_i);
	if (((_48132_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_48132_tokens[0LL].get()._field_Kind == jule::Str("&", 1)))) {
		_48317_v.get()._field_Reference=true;
		if ((_48132_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_48132_tokens=_48132_tokens.slice(1LL);
	};
	_2214a6d79_buildVarCommon(_self_, _48317_v,_48132_tokens);
	return _48317_v;;
}



inline jule::Ptr<_21eeb3b0c_GenericDecl> _2214a785d_buildGeneric(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _50337_tokens) {
	jule::Ptr<_21eeb3b0c_GenericDecl> _50417_g = jule::new_ptr<_21eeb3b0c_GenericDecl>(_21eeb3b0c_GenericDecl{._field_Token=_50337_tokens[0LL], });;
	if ((_50417_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2214a4a14_pushErr(_self_.ptr(), _50417_g.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_50417_g.get()._field_Ident=_50417_g.get()._field_Token.get()._field_Kind;
	if ((_50337_tokens.len() > 1LL)) {
		if ((_50337_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_2214a4a14_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		if ((_50337_tokens.len() == 2LL)) {
			_2214a4a14_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_21d81d743_Token>> _52121_constraintTokens = _50337_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _52222_parts;;
		jule::Slice<_21d4e511d_Log> _52229_errors;;
		({
			__jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log __jule_assign_result = _2214a299b_partsKind(_52121_constraintTokens,jule::Str("|", 1),true);
			_52222_parts = __jule_assign_result.__jule_result_arg0;
			_52229_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_52229_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52229_errors);
			return nullptr;;
		};
		_50417_g.get()._field_Constraint=jule::new_ptr<_21eeb3689_Constraint>(_21eeb3689_Constraint{._field_Mask=jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>>::alloc(0LL, _52222_parts.len())});
		{
			auto &expr = _52222_parts;
			auto it = expr.begin();
			_iter_begin_206753294:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_21d81d743_Token>> _52825_part = *it;
				{
					jule::I64 _52925_i = 0LL;;
					jule::Ptr<_21eea19a7_TypeDecl> _53026_kind;;
					({
						__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType(_self_, _52825_part,(&(_52925_i)),true);
						_53026_kind = __jule_assign_result.__jule_result_arg0;
					});
					_50417_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50417_g.get()._field_Constraint.get()._field_Mask,1);_50417_g.get()._field_Constraint.get()._field_Mask.__push(_53026_kind);;
					if ((_52925_i < _52825_part.len())) {
						_2214a4a14_pushErr(_self_.ptr(), _52825_part[_52925_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_206753294:;
				++it;
				goto _iter_begin_206753294;
			}
			_iter_end_206753294:;
		};
	};
	return _50417_g;;
}



inline jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>> _2214a7c15_buildGenerics(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _54038_tokens, jule::Ptr<_21d81d743_Token>& _54057_errorToken) {
	if ((_54038_tokens.len() == 0LL)) {
		_2214a4a14_pushErr(_self_.ptr(), _54057_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _54618_parts;;
	jule::Slice<_21d4e511d_Log> _54625_errors;;
	({
		__jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log __jule_assign_result = _2214a2d86_parts(_54038_tokens,static_cast<jule::U64>(8LLU),true);
		_54618_parts = __jule_assign_result.__jule_result_arg0;
		_54625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54625_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54625_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>> _55217_generics = jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>>::alloc(0LL, _54618_parts.len());;
	{
		auto &expr = _54618_parts;
		auto it = expr.begin();
		_iter_begin_20675794c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_21d81d743_Token>> _55321_part = *it;
			{
				_55217_generics = jule::alloc_for_append(_55217_generics,1);_55217_generics.__push(_2214a785d_buildGeneric(_self_, _55321_part));;
			}
			_iter_next_20675794c:;
			++it;
			goto _iter_begin_20675794c;
		}
		_iter_end_20675794c:;
	};
	return _55217_generics;;
}



inline jule::Ptr<_21eeb6e73_ParamDecl> _2214a8023_buildSelfParam(_2214a40a7_parser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _56037_tokens) {
	if ((_56037_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_21eeb6e73_ParamDecl> _56517_param = jule::new_ptr<_21eeb6e73_ParamDecl>();;
	jule::I64 _56817_i = 0LL;;
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_56517_param.get()._field_Mutable=true;
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_2214a4a14_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Kind == jule::Str("&", 1))) {
		_56517_param.get()._field_Ident=jule::Str("&", 1);
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_2214a4a14_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(27LLU))) {
		_56517_param.get()._field_Ident+=jule::Str("self", 4);
		_56517_param.get()._field_Token=_56037_tokens[_56817_i];
		(_56817_i)++;
		if ((_56817_i < _56037_tokens.len())) {
			_2214a4a14_pushErr(&(*_self_), _56037_tokens[_56817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _56517_param;;
}



inline void _2214a83db_paramTypeBegin(_2214a40a7_parser* _self_, jule::Ptr<_21eeb6e73_ParamDecl>& _59938_param, jule::I64& _59962_i, jule::Slice<jule::Ptr<_21d81d743_Token>>& _59971_tokens) {
	for (; (_59962_i < _59971_tokens.len()); (_59962_i)++) {
		{
			jule::Ptr<_21d81d743_Token> _60117_token = _59971_tokens[_59962_i];;
			if ((_60117_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60117_token.get()._field_Kind != jule::Str("...", 3))) {
				return;;
			};
			if (_59938_param.get()._field_Variadic) {
				_2214a4a14_pushErr(&(*_self_), _60117_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_20675e833;
			};
			_59938_param.get()._field_Variadic=true;
		}
	_iter_next_20675e833:;
	}
	_iter_end_20675e833:;;
}



inline void _2214a870a_buildParamType(jule::Ptr<_2214a40a7_parser> _self_, jule::Ptr<_21eeb6e73_ParamDecl>& _61639_param, jule::Slice<jule::Ptr<_21d81d743_Token>>& _61663_tokens) {
	jule::I64 _61717_i = 0LL;;
	_2214a83db_paramTypeBegin(_self_.ptr(), _61639_param,_61717_i,_61663_tokens);
	if ((_61717_i >= _61663_tokens.len())) {
		return;;
	};
	({
		__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType(_self_, _61663_tokens,(&(_61717_i)),true);
		_61639_param.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_61717_i < _61663_tokens.len())) {
		_2214a4a14_pushErr(_self_.ptr(), _61663_tokens[_61717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _2214a8a29_buildParamBody(jule::Ptr<_2214a40a7_parser> _self_, jule::Ptr<_21eeb6e73_ParamDecl>& _62939_param, jule::Slice<jule::Ptr<_21d81d743_Token>> _62962_tokens) {
	jule::Ptr<_21d81d743_Token> _63017_tok = _62962_tokens[0LL];;
	_62939_param.get()._field_Ident=_63017_tok.get()._field_Kind;
	if ((_62962_tokens.len() == 1LL)) {
		return;;
	} else if ((_62962_tokens.len() < 3LL)) {
		_2214a4a14_pushErr(_self_.ptr(), _63017_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_62962_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_2214a870a_buildParamType(_self_, _62939_param,_62962_tokens);
		return;;
	};
	_62962_tokens=_62962_tokens.slice(2LL);
	_2214a870a_buildParamType(_self_, _62939_param,_62962_tokens);
}



inline jule::Ptr<_21eeb6e73_ParamDecl> _2214a8d37_buildParam(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _64734_tokens) {
	jule::Ptr<_21eeb6e73_ParamDecl> _64817_param = jule::new_ptr<_21eeb6e73_ParamDecl>(_21eeb6e73_ParamDecl{._field_Token=_64734_tokens[0LL], });;
	if ((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_64817_param.get()._field_Mutable=true;
		if ((_64734_tokens.len() == 1LL)) {
			_2214a4a14_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_64734_tokens=_64734_tokens.slice(1LL);
		_64817_param.get()._field_Token=_64734_tokens[0LL];
	};
	if ((_64734_tokens.len() >= 3LL)) {
		if (((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64817_param.get()._field_Token.get()._field_Kind == jule::Str("&", 1)))) {
			if ((_64734_tokens.len() == 1LL)) {
				_2214a4a14_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_64734_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_64734_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_64817_param.get()._field_Reference=true;
				_64734_tokens=_64734_tokens.slice(1LL);
				_64817_param.get()._field_Token=_64734_tokens[0LL];
			};
		};
	};
	if ((_64817_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_64817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_2214a870a_buildParamType(_self_, _64817_param,_64734_tokens);
	} else {
		_2214a8a29_buildParamBody(_self_, _64817_param,_64734_tokens);
	};
	return _64817_param;;
}



inline void _2214a90ac_checkParams(_2214a40a7_parser* _self_, jule::Slice<jule::Ptr<_21eeb6e73_ParamDecl>>& _69035_params) {
	{
		auto &expr = _69035_params;
		auto it = expr.begin();
		_iter_begin_20676db72:;
		if (it != expr.end()) {
			jule::Ptr<_21eeb6e73_ParamDecl> _69121_param = *it;
			{
				if ((_21eeb72d6_IsSelf(_69121_param.ptr()) || (_69121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_20676db72;
				};
				if ((_69121_param.get()._field_Token == nullptr)) {
					_2214a4a14_pushErr(&(*_self_), _69121_param.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69121_param.get()._field_Kind=jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_21eea206d_IdentTypeDecl>(_21eea206d_IdentTypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Ident=_69121_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type20)});
					_69121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_20676db72:;
			++it;
			goto _iter_begin_20676db72;
		}
		_iter_end_20676db72:;
	};
}



inline jule::Slice<jule::Ptr<_21eeb6e73_ParamDecl>> _2214a9464_buildParams(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _71036_tokens, jule::Bool _71054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _71118_parts;;
	jule::Slice<_21d4e511d_Log> _71125_errs;;
	({
		__jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log __jule_assign_result = _2214a2d86_parts(_71036_tokens,static_cast<jule::U64>(8LLU),true);
		_71118_parts = __jule_assign_result.__jule_result_arg0;
		_71125_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71125_errs);
	if ((_71118_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_21eeb6e73_ParamDecl>> _71717_params = nullptr;;
	if ((_71054_method && (_71118_parts.len() > 0LL))) {
		jule::Ptr<_21eeb6e73_ParamDecl> _71921_param = _2214a8023_buildSelfParam(_self_.ptr(), _71118_parts[0LL]);;
		if (((_71921_param != nullptr) && _21eeb72d6_IsSelf(_71921_param.ptr()))) {
			_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_71921_param);;
			_71118_parts=_71118_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71118_parts;
		auto it = expr.begin();
		_iter_begin_20677333b:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_21d81d743_Token>> _72621_part = *it;
			{
				jule::Ptr<_21eeb6e73_ParamDecl> _72721_param = _2214a8d37_buildParam(_self_, _72621_part);;
				if ((_72721_param != nullptr)) {
					_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_72721_param);;
				};
			}
			_iter_next_20677333b:;
			++it;
			goto _iter_begin_20677333b;
		}
		_iter_end_20677333b:;
	};
	_2214a90ac_checkParams(_self_.ptr(), _71717_params);
	return _71717_params;;
}



inline __jule_tuple_x_21eea4aba_RetTypeDecl__jule_tuple_bool _2214a981b_buildMultiRetType(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _73742_tokens, jule::I64& _73765_i) {
	__jule_tuple_x_21eea4aba_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_21eea4aba_RetTypeDecl>();
	(_73765_i)++;
	if ((_73765_i >= _73742_tokens.len())) {
		(_73765_i)--;
		({
			__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType(_self_, _73742_tokens,(&(_73765_i)),false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	(_73765_i)--;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _74717_rangeTokens = _2214a2319_range(_73765_i,jule::Str("(", 1),jule::Str(")", 1),_73742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _74918_parts;;
	jule::Slice<_21d4e511d_Log> _74925_errs;;
	({
		__jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log __jule_assign_result = _2214a2d86_parts(_74717_rangeTokens,static_cast<jule::U64>(8LLU),true);
		_74918_parts = __jule_assign_result.__jule_result_arg0;
		_74925_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_74925_errs);
	if ((_74918_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>> _75517_types = jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>>::alloc(0LL, _74918_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_21d81d743_Token>>::alloc(0LL, _74918_parts.len());
	{
		auto &expr = _74918_parts;
		auto it = expr.begin();
		_iter_begin_206779661:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_21d81d743_Token>> _75721_part = *it;
			{
				jule::Ptr<_21d81d743_Token> _75821_token = _75721_part[0LL];;
				jule::I64 _75921_offset = 0LL;;
				if ((_75721_part.len() > 1LL)) {
					_75821_token=_75721_part[1LL];
					if ((_75821_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_75921_offset=2LL;
						if ((_75721_part.len() < 3LL)) {
							_2214a4a14_pushErr(_self_.ptr(), _75821_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_206779661;
						};
					};
				};
				_75821_token=_75721_part[0LL];
				if ((_75921_offset != 2LL)) {
					jule::Ptr<_21d81d743_Token> _77525_newToken = jule::new_ptr<_21d81d743_Token>((*(_75821_token)));;
					_77525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_77525_newToken);;
				} else {
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_75821_token);;
				};
				jule::Ptr<_21eea19a7_TypeDecl> _78222_tk;;
				({
					__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType(_self_, _75721_part,(&(_75921_offset)),true);
					_78222_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_75921_offset < _75721_part.len())) {
					_2214a4a14_pushErr(_self_.ptr(), _75721_part[_75921_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_75517_types = jule::alloc_for_append(_75517_types,1);_75517_types.__push(_78222_tk);;
			}
			_iter_next_206779661:;
			++it;
			goto _iter_begin_206779661;
		}
		_iter_end_206779661:;
	};
	if ((_75517_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Token=_73742_tokens[0LL], ._field_Kind=jule::Any(jule::new_ptr<_21eea3547_TupleTypeDecl>(_21eea3547_TupleTypeDecl{._field_Types=_75517_types}), &__jule_any_type82)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_75517_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_21eea4aba_RetTypeDecl__jule_tuple_bool _2214a9bc3_buildRetType(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _80537_tokens, jule::I64& _80560_i) {
	__jule_tuple_x_21eea4aba_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_21eea4aba_RetTypeDecl>();
	if ((_80560_i >= _80537_tokens.len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_21d81d743_Token> _81117_token = _80537_tokens[_80560_i];;
	{
		auto &_match_expr{ _81117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_206782ceb:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("{", 1))) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_206782d62:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("=", 1))) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_206782dc8:;
			{
				if (((_80560_i + 1LL) >= _80537_tokens.len())) {
					_2214a4a14_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				(_80560_i)++;
				_81117_token=_80537_tokens[_80560_i];
				if ((_81117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81117_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_206785749:;
							{
								({
									__jule_tuple_x_21eea4aba_RetTypeDecl__jule_tuple_bool __jule_assign_result = _2214a981b_buildMultiRetType(_self_, _80537_tokens,_80560_i);
									__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
									__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
								});
								return __jule_func_result;;
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_2067857c1:;
							{
								_2214a4a14_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return __jule_func_result;;
							}
						}
						_match_end_2067856a0:;
					};
				};
				({
					__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType(_self_, _80537_tokens,(&(_80560_i)),true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_206782c0d:;
	};
	(_80560_i)++;
	_2214a4a14_pushErr(_self_.ptr(), _81117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_21eeb8293_FnDecl> _2214aa124_buildFnPrototype(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _85041_tokens, jule::I64& _85064_i, jule::Bool _85072_method) {
	jule::Ptr<_21eeb8293_FnDecl> _85117_f = jule::new_ptr<_21eeb8293_FnDecl>(_21eeb8293_FnDecl{._field_Token=_85041_tokens[_85064_i], });;
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_85117_f.get()._field_Statically=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_2214a4a14_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_85117_f.get()._field_Unsafety=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_2214a4a14_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	(_85064_i)++;
	if ((_85064_i >= _85041_tokens.len())) {
		_2214a4a14_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_21d81d743_Token> _88413_tok = _85041_tokens[_85064_i];;
	if ((_88413_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_2214a4a14_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Ident=_88413_tok.get()._field_Kind;
	} else {
		_85117_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_21d81d743_Token> _89613_errorToken = _85041_tokens[_85064_i];;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _89717_genericsTokens = _2214a2319_range(_85064_i,jule::Str("[", 1),jule::Str("]", 1),_85041_tokens);;
	if ((_89717_genericsTokens != nullptr)) {
		_85117_f.get()._field_Generics=_2214a7c15_buildGenerics(_self_, _89717_genericsTokens,_89613_errorToken);
	};
	if ((_85041_tokens[_85064_i].get()._field_Kind != jule::Str("(", 1))) {
		_2214a4a14_pushErr(_self_.ptr(), _85041_tokens[_85064_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_21d81d743_Token>> _90717_paramsToks = _2214a2319_range(_85064_i,jule::Str("(", 1),jule::Str(")", 1),_85041_tokens);;
	if ((_90717_paramsToks.len() > 0LL)) {
		_85117_f.get()._field_Params=_2214a9464_buildParams(_self_, _90717_paramsToks,_85072_method);
	};
	if ((_85064_i < _85041_tokens.len())) {
		jule::Ptr<_21d81d743_Token> _91317_token = _85041_tokens[_85064_i];;
		if (((_91317_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_91317_token.get()._field_Kind == jule::Str("!", 1)))) {
			_85117_f.get()._field_Exceptional=true;
			(_85064_i)++;
		};
	};
	_85117_f.get()._field_Public=_2214b3c54_isPub(_85117_f.get()._field_Ident);
	({
		__jule_tuple_x_21eea4aba_RetTypeDecl__jule_tuple_bool __jule_assign_result = _2214a9bc3_buildRetType(_self_, _85041_tokens,_85064_i);
		_85117_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _85117_f;;
}



inline jule::Ptr<_21eeb8293_FnDecl> _2214aa575_buildFn(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _92732_tokens, jule::Bool _92750_method, jule::Bool _92764_prototype) {
	jule::I64 _92817_i = 0LL;;
	jule::Ptr<_21eeb8293_FnDecl> _92917_f = _2214aa124_buildFnPrototype(_self_, _92732_tokens,_92817_i,_92750_method);;
	if (_92764_prototype) {
		if ((_92817_i < _92732_tokens.len())) {
			_2214a4a14_pushErr(_self_.ptr(), _92732_tokens[(_92817_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _92917_f;;
	} else if ((_92917_f == nullptr)) {
		return _92917_f;;
	};
	if ((_92817_i >= _92732_tokens.len())) {
		_2214a43d7_stop(_self_.ptr());
		_2214a4a14_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_21d81d743_Token>> _94517_blockTokens = _2214a2319_range(_92817_i,jule::Str("{", 1),jule::Str("}", 1),_92732_tokens);;
	if ((_94517_blockTokens != nullptr)) {
		_92917_f.get()._field_Scope=_2214a5a7b_buildScope(_self_, _94517_blockTokens,_92732_tokens[(_92817_i - 1LL)]);
		_92917_f.get()._field_Scope.get()._field_Unsafety=_92917_f.get()._field_Unsafety;
		if ((_92817_i < _92732_tokens.len())) {
			_2214a4a14_pushErr(_self_.ptr(), _92732_tokens[_92817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_2214a43d7_stop(_self_.ptr());
		_2214a4a14_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _92917_f;;
}



inline jule::Slice<jule::Ptr<_21d81d743_Token>> _2214aa883_getUseDeclSelectors(_2214a40a7_parser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _96142_tokens) {
	jule::I64 _96217_i = 0LL;;
	_96142_tokens=_2214a2319_range(_96217_i,jule::Str("{", 1),jule::Str("}", 1),_96142_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _96418_parts;;
	jule::Slice<_21d4e511d_Log> _96425_errs;;
	({
		__jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log __jule_assign_result = _2214a2d86_parts(_96142_tokens,static_cast<jule::U64>(8LLU),true);
		_96418_parts = __jule_assign_result.__jule_result_arg0;
		_96425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96425_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_96425_errs);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_21d81d743_Token>> _97017_selectors = jule::Slice<jule::Ptr<_21d81d743_Token>>::alloc(0LL, _96418_parts.len());;
	{
		auto &expr = _96418_parts;
		auto it = expr.begin();
		_iter_begin_2067a18a8:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_21d81d743_Token>> _97121_part = *it;
			{
				if ((_97121_part.len() > 1LL)) {
					_2214a4a14_pushErr(&(*_self_), _97121_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_21d81d743_Token> _97521_tok = _97121_part[0LL];;
				if (((_97521_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97521_tok.get()._field_Id != static_cast<jule::U64>(27LLU)))) {
					_2214a4a14_pushErr(&(*_self_), _97521_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_2214a4d33_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_2067a18a8;
				};
				_97017_selectors = jule::alloc_for_append(_97017_selectors,1);_97017_selectors.__push(_97521_tok);;
			}
			_iter_next_2067a18a8:;
			++it;
			goto _iter_begin_2067a18a8;
		}
		_iter_end_2067a18a8:;
	};
	return _97017_selectors;;
}



inline void _2214aaba2_buildCppUseDecl(_2214a40a7_parser* _self_, jule::Ptr<_21eebdebe_UseDecl>& _98639_decl, jule::Slice<jule::Ptr<_21d81d743_Token>>& _98656_tokens) {
	if ((_98656_tokens.len() > 1LL)) {
		_2214a4a14_pushErr(&(*_self_), _98656_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_21d81d743_Token> _99013_token = _98656_tokens[0LL];;
	if (((_99013_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99013_token.get()._field_Kind[0LL] != '`') && (_99013_token.get()._field_Kind[0LL] != '\"')))) {
		_2214a4a14_pushErr(&(*_self_), _99013_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_98639_decl.get()._field_CppLinked=true;
	_98639_decl.get()._field_LinkPath=_99013_token.get()._field_Kind.slice(1LL,(_99013_token.get()._field_Kind.len() - 1LL));
}



inline void _2214aaec1_buildStdUseDecl(_2214a40a7_parser* _self_, jule::Ptr<_21eebdebe_UseDecl>& _99939_decl, jule::Slice<jule::Ptr<_21d81d743_Token>> _99959_tokens) {
	_99939_decl.get()._field_Std=true;
	jule::Ptr<_21d81d743_Token> _100217_token = _99959_tokens[0LL];;
	if ((_99959_tokens.len() < 3LL)) {
		_2214a4a14_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_99959_tokens=_99959_tokens.slice(2LL);
	_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_2067aa131:;
			{
				_2214a4a14_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_2067aa1a8:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("}", 1))) {
					_2214a4a14_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_21d81d743_Token>> _101921_selectors = nullptr;;
				({
					__jule_tuple_sx_21d81d743_Token__jule_tuple_sx_21d81d743_Token __jule_assign_result = _2214a25b1_rangeLast(_99959_tokens);
					_99959_tokens = __jule_assign_result.__jule_result_arg0;
					_101921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				_99939_decl.get()._field_Selected=_2214aa883_getUseDeclSelectors(&(*_self_), _101921_selectors);
				if ((_99959_tokens.len() == 0LL)) {
					_2214a4a14_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_2214a4a14_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_2214a4a14_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_2067aa230:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("*", 1))) {
					_2214a4a14_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_2214a4a14_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_2214a4a14_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_2214a4a14_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99939_decl.get()._field_Full=true;
			}
		}
		_match_end_2067aa0a9:;
	};
	_99939_decl.get()._field_LinkPath=(jule::Str("std::", 5) + _2214a3bde_tokstoa(_99959_tokens));
}



inline void _2214ab2e0_buildIdentUseDecl(_2214a40a7_parser* _self_, jule::Ptr<_21eebdebe_UseDecl>& _106141_decl, jule::Slice<jule::Ptr<_21d81d743_Token>> _106161_tokens) {
	_106141_decl.get()._field_Std=false;
	jule::Ptr<_21d81d743_Token> _106417_token = _106161_tokens[(_106161_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_2067b4866:;
			{
				_2214a4a14_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_2067b4e4e:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("}", 1))) {
					_2214a4a14_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_21d81d743_Token>> _107521_selectors = nullptr;;
				({
					__jule_tuple_sx_21d81d743_Token__jule_tuple_sx_21d81d743_Token __jule_assign_result = _2214a25b1_rangeLast(_106161_tokens);
					_106161_tokens = __jule_assign_result.__jule_result_arg0;
					_107521_selectors = __jule_assign_result.__jule_result_arg1;
				});
				_106141_decl.get()._field_Selected=_2214aa883_getUseDeclSelectors(&(*_self_), _107521_selectors);
				if ((_106161_tokens.len() == 0LL)) {
					_2214a4a14_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_2214a4a14_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_2214a4a14_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_2067b50d6:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("*", 1))) {
					_2214a4a14_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_2214a4a14_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_2214a4a14_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_2214a4a14_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106141_decl.get()._field_Full=true;
			}
		}
		_match_end_2067b4de9:;
	};
	_106141_decl.get()._field_LinkPath=_2214a3bde_tokstoa(_106161_tokens);
}



inline void _2214ab60e_parseUseDecl(_2214a40a7_parser* _self_, jule::Ptr<_21eebdebe_UseDecl>& _112436_decl, jule::Slice<jule::Ptr<_21d81d743_Token>> _112456_tokens) {
	if (_112436_decl.get()._field_CppLinked) {
		_2214aaba2_buildCppUseDecl(&(*_self_), _112436_decl,_112456_tokens);
		return;;
	};
	jule::Ptr<_21d81d743_Token> _113017_token = _112456_tokens[0LL];;
	if ((_113017_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2214a4a14_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_112456_tokens.len() > 2LL) && (_112456_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		_112436_decl.get()._field_Alias=_113017_token.get()._field_Kind;
		if ((_112456_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_2214a4a14_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_2214a4d33_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_112456_tokens=_112456_tokens.slice(2LL);
		_113017_token=_112456_tokens[0LL];
	};
	;
	{
		
		if ((_113017_token.get()._field_Kind == jule::Str("std", 3))) {
			_case_begin_2067c1400:;
			{
				_2214aaec1_buildStdUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		else {
			_case_begin_2067c34bd:;
			{
				_2214ab2e0_buildIdentUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		_match_end_2067c3457:;
	};
}



inline jule::Ptr<_21eebdebe_UseDecl> _2214ab9b6_buildUseDecl(_2214a40a7_parser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _115835_tokens, jule::Bool _115853_cpp_linked) {
	jule::Ptr<_21eebdebe_UseDecl> _115917_decl = jule::new_ptr<_21eebdebe_UseDecl>(_21eebdebe_UseDecl{._field_Token=_115835_tokens[0LL], ._field_CppLinked=_115853_cpp_linked, });;
	if ((_115835_tokens.len() < 2LL)) {
		_2214a4a14_pushErr(&(*_self_), _115917_decl.get()._field_Token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_115835_tokens=_115835_tokens.slice(1LL);
	_2214ab60e_parseUseDecl(&(*_self_), _115917_decl,_115835_tokens);
	return _115917_decl;;
}



inline jule::Ptr<_21eea19a7_TypeDecl> _2214abd6d_buildTypeEnumItemKind(jule::Ptr<_2214a40a7_parser> _self_, jule::I64& _117246_i, jule::Slice<jule::Ptr<_21d81d743_Token>>& _117259_tokens) {
	jule::I64 _117317_braceN = 0LL;;
	jule::I64 _117413_exprStart = _117246_i;;
	for (; (_117246_i < _117259_tokens.len()); (_117246_i)++) {
		{
			jule::Ptr<_21d81d743_Token> _117617_t = _117259_tokens[_117246_i];;
			if ((_117617_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _117617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_2067c8605:;
						{
							(_117317_braceN)++;
							goto _iter_next_2067c715e;
						}
					}
					else {
						_case_begin_2067c81e8:;
						{
							(_117317_braceN)--;
						}
					}
					_match_end_2067c7ed9:;
				};
			};
			if ((_117317_braceN > 0LL)) {
				goto _iter_next_2067c715e;
			};
			if (((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_117246_i + 1LL) >= _117259_tokens.len()))) {
				jule::Slice<jule::Ptr<_21d81d743_Token>> _119225_kindTokens = nullptr;;
				if ((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart,_117246_i);
				} else {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart);
				};
				jule::I64 _119825_j = 0LL;;
				jule::Ptr<_21eea19a7_TypeDecl> _119926_kind;;
				({
					__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType(_self_, _119225_kindTokens,(&(_119825_j)),true);
					_119926_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_119825_j < _119225_kindTokens.len())) {
					_2214a4a14_pushErr(_self_.ptr(), _119225_kindTokens[_119825_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _119926_kind;;
			};
		}
	_iter_next_2067c715e:;
	}
	_iter_end_2067c715e:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_21eec0971_TypeEnumItemDecl>> _2214ac17b_buildTypeEnumItems(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _120943_tokens) {
	jule::Slice<jule::Ptr<_21eec0971_TypeEnumItemDecl>> _121017_items = jule::Slice<jule::Ptr<_21eec0971_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121117_i = 0LL;;
	for (; (_121117_i < _120943_tokens.len()); (_121117_i)++) {
		{
			jule::Ptr<_21d81d743_Token> _121321_t = _120943_tokens[_121117_i];;
			jule::Ptr<_21eec0971_TypeEnumItemDecl> _121421_item = jule::new_ptr<_21eec0971_TypeEnumItemDecl>();;
			_121421_item.get()._field_Token=_121321_t;
			if (((_121421_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((_120943_tokens.len() - _121117_i) > 2LL))) {
				_121421_item.get()._field_Ident=_121421_item.get()._field_Token.get()._field_Kind;
				_121321_t=_120943_tokens[(_121117_i + 1LL)];
				if ((_121321_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121117_i+=2LL;
					if (((_121117_i >= _120943_tokens.len()) || (_120943_tokens[_121117_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_2214a4a14_pushErr(_self_.ptr(), _121321_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_2067cce12;
					};
				};
			};
			_121421_item.get()._field_Kind=_2214abd6d_buildTypeEnumItemKind(_self_, _121117_i,_120943_tokens);
			_121017_items = jule::alloc_for_append(_121017_items,1);_121017_items.__push(_121421_item);;
		}
	_iter_next_2067cce12:;
	}
	_iter_end_2067cce12:;;
	return _121017_items;;
}



inline jule::Ptr<_21eec107b_TypeEnumDecl> _2214ac489_buildTypeEnumDecl(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _123342_tokens) {
	jule::I64 _123417_i = 1LL;;
	jule::Ptr<_21eec107b_TypeEnumDecl> _123517_e = jule::new_ptr<_21eec107b_TypeEnumDecl>(_21eec107b_TypeEnumDecl{._field_Token=_123342_tokens[_123417_i], });;
	if ((_123517_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2214a4a14_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Ident=_123517_e.get()._field_Token.get()._field_Kind;
	_123417_i+=3LL;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _124517_itemTokens = _2214a2319_range(_123417_i,jule::Str("{", 1),jule::Str("}", 1),_123342_tokens);;
	if ((_124517_itemTokens == nullptr)) {
		_2214a43d7_stop(_self_.ptr());
		_2214a4a14_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _123517_e;;
	} else if ((_123417_i < _123342_tokens.len())) {
		_2214a4a14_pushErr(_self_.ptr(), _123342_tokens[_123417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Public=_2214b3c54_isPub(_123517_e.get()._field_Ident);
	_123517_e.get()._field_End=_123342_tokens[(_123417_i - 1LL)];
	_123517_e.get()._field_Items=_2214ac17b_buildTypeEnumItems(_self_, _124517_itemTokens);
	return _123517_e;;
}



inline jule::Ptr<_21eea5ec8_Expr> _2214ac841_buildEnumItemExpr(jule::Ptr<_2214a40a7_parser> _self_, jule::I64& _126042_i, jule::Slice<jule::Ptr<_21d81d743_Token>>& _126055_tokens) {
	jule::I64 _126117_braceN = 0LL;;
	jule::I64 _126213_exprStart = _126042_i;;
	for (; (_126042_i < _126055_tokens.len()); (_126042_i)++) {
		{
			jule::Ptr<_21d81d743_Token> _126417_t = _126055_tokens[_126042_i];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_2067d9616:;
						{
							(_126117_braceN)++;
							goto _iter_next_2067d8170;
						}
					}
					else {
						_case_begin_2067d9209:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_2067d8eea:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_2067d8170;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_126042_i + 1LL) >= _126055_tokens.len()))) {
				jule::Slice<jule::Ptr<_21d81d743_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart,_126042_i);
				} else {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart);
				};
				return _2214a5141_buildExpr(_self_, _128025_exprTokens);;
			};
		}
	_iter_next_2067d8170:;
	}
	_iter_end_2067d8170:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_21eebe442_EnumItemDecl>> _2214acb4e_buildEnumItems(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _129239_tokens) {
	jule::Slice<jule::Ptr<_21eebe442_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_21eebe442_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _129417_i = 0LL;;
	for (; (_129417_i < _129239_tokens.len()); (_129417_i)++) {
		{
			jule::Ptr<_21d81d743_Token> _129621_t = _129239_tokens[_129417_i];;
			jule::Ptr<_21eebe442_EnumItemDecl> _129721_item = jule::new_ptr<_21eebe442_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_2214a4a14_pushErr(_self_.ptr(), _129721_item.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= _129239_tokens.len()) || (_129239_tokens[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_129417_i + 1LL) < _129239_tokens.len())) {
					(_129417_i)++;
				};
				_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
				goto _iter_next_2067dca8c;
			};
			(_129417_i)++;
			_129621_t=_129239_tokens[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_2214a4a14_pushErr(_self_.ptr(), _129621_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_2067dca8c;
			};
			if (((_129417_i >= _129239_tokens.len()) || (_129239_tokens[_129417_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_2214a4a14_pushErr(_self_.ptr(), _129621_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_2067dca8c;
			};
			_129721_item.get()._field_Expr=_2214ac841_buildEnumItemExpr(_self_, _129417_i,_129239_tokens);
			_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
		}
	_iter_next_2067dca8c:;
	}
	_iter_end_2067dca8c:;;
	return _129317_items;;
}



inline jule::Ptr<_21eebee6a_EnumDecl> _2214ace5c_buildEnumDecl(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _132938_tokens) {
	if ((_132938_tokens.len() < 3LL)) {
		_2214a4a14_pushErr(_self_.ptr(), _132938_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_21eebee6a_EnumDecl> _133417_e = jule::new_ptr<_21eebee6a_EnumDecl>(_21eebee6a_EnumDecl{._field_Token=_132938_tokens[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2214a4a14_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134217_i = 2LL;;
	if ((_132938_tokens[_134217_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134217_i)++;
		if ((_134217_i >= _132938_tokens.len())) {
			_2214a4a14_pushErr(_self_.ptr(), _132938_tokens[(_134217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _133417_e;;
		};
		({
			__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType(_self_, _132938_tokens,(&(_134217_i)),true);
			_133417_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_134217_i >= _132938_tokens.len())) {
			_2214a43d7_stop(_self_.ptr());
			_2214a4a14_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _133417_e;;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_21d81d743_Token>> _135917_itemTokens = _2214a2319_range(_134217_i,jule::Str("{", 1),jule::Str("}", 1),_132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_2214a43d7_stop(_self_.ptr());
		_2214a4a14_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133417_e;;
	} else if ((_134217_i < _132938_tokens.len())) {
		_2214a4a14_pushErr(_self_.ptr(), _132938_tokens[_134217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Public=_2214b3c54_isPub(_133417_e.get()._field_Ident);
	_133417_e.get()._field_End=_132938_tokens[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_2214acb4e_buildEnumItems(_self_, _135917_itemTokens);
	return _133417_e;;
}



inline jule::Any _2214ad26a_buildNodeEnumDecl(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _137442_tokens) {
	if (((_137442_tokens.len() > 3LL) && (_137442_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if ((_137442_tokens[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return jule::Any(_2214ac489_buildTypeEnumDecl(_self_, _137442_tokens), &__jule_any_type19);;
		};
	};
	return jule::Any(_2214ace5c_buildEnumDecl(_self_, _137442_tokens), &__jule_any_type18);;
}



inline jule::Ptr<_21eec1279_FieldDecl> _2214ad578_buildField(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _138334_tokens) {
	jule::Ptr<_21eec1279_FieldDecl> _138417_f = jule::new_ptr<_21eec1279_FieldDecl>();;
	_138417_f.get()._field_Mutable=(_138334_tokens[0LL].get()._field_Id == static_cast<jule::U64>(35LLU));
	if (_138417_f.get()._field_Mutable) {
		if ((_138334_tokens.len() == 1LL)) {
			_2214a4a14_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(1LL);
	};
	_138417_f.get()._field_Token=_138334_tokens[0LL];
	if ((_138417_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2214a4a14_pushErr(_self_.ptr(), _138417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138417_f.get()._field_Ident=_138417_f.get()._field_Token.get()._field_Kind;
	if ((_138334_tokens.len() == 1LL)) {
		_2214a4a14_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_138334_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_2214a4a14_pushErr(_self_.ptr(), _138334_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138334_tokens=_138334_tokens.slice(2LL);
	jule::I64 _141217_i = 0LL;;
	({
		__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType(_self_, _138334_tokens,(&(_141217_i)),true);
		_138417_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_141217_i < _138334_tokens.len())) {
		jule::Ptr<_21d81d743_Token> _141517_token = _138334_tokens[_141217_i];;
		if (((_141517_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_141517_token.get()._field_Kind != jule::Str("=", 1)))) {
			_2214a4a14_pushErr(_self_.ptr(), _138334_tokens[_141217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_141217_i)++;
		if ((_141217_i >= _138334_tokens.len())) {
			_2214a4a14_pushErr(_self_.ptr(), _141517_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(_141217_i);
		_138417_f.get()._field_Default=_2214a5141_buildExpr(_self_, _138334_tokens);
	};
	_138417_f.get()._field_Public=_2214b3c54_isPub(_138417_f.get()._field_Ident);
	return _138417_f;;
}



inline jule::Slice<jule::Ptr<_21eec1279_FieldDecl>> _2214ad886_buildStructDeclFields(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _143245_tokens) {
	jule::Slice<jule::Ptr<_21eec1279_FieldDecl>> _143317_fields = nullptr;;
	jule::Slice<jule::Ptr<_221487134_stmt>> _143417_stmts = _2214874ca_splitStmts(_143245_tokens);;
	{
		auto &expr = _143417_stmts;
		auto it = expr.begin();
		_iter_begin_20680956a:;
		if (it != expr.end()) {
			jule::Ptr<_221487134_stmt> _143521_stmt = *it;
			{
				_143245_tokens=_143521_stmt.get()._field_tokens;
				jule::Ptr<_21eec1279_FieldDecl> _143721_f = _2214ad578_buildField(_self_, _143245_tokens);;
				_143317_fields = jule::alloc_for_append(_143317_fields,1);_143317_fields.__push(_143721_f);;
			}
			_iter_next_20680956a:;
			++it;
			goto _iter_begin_20680956a;
		}
		_iter_end_20680956a:;
	};
	return _143317_fields;;
}



inline jule::Ptr<_21eec1a2c_StructDecl> _2214adb94_buildStructDecl(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _144340_tokens) {
	if ((_144340_tokens.len() < 3LL)) {
		_2214a4a14_pushErr(_self_.ptr(), _144340_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _144917_i = 1LL;;
	jule::Ptr<_21eec1a2c_StructDecl> _145017_s = jule::new_ptr<_21eec1a2c_StructDecl>(_21eec1a2c_StructDecl{._field_Token=_144340_tokens[_144917_i], });;
	if ((_145017_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2214a4a14_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_144917_i)++;
	if ((_144917_i >= _144340_tokens.len())) {
		_2214a4a14_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _145017_s;;
	};
	_145017_s.get()._field_Ident=_145017_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_21d81d743_Token> _146413_errorToken = _144340_tokens[_144917_i];;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _146517_genericsTokens = _2214a2319_range(_144917_i,jule::Str("[", 1),jule::Str("]", 1),_144340_tokens);;
	if ((_146517_genericsTokens != nullptr)) {
		_145017_s.get()._field_Generics=_2214a7c15_buildGenerics(_self_, _146517_genericsTokens,_146413_errorToken);
	};
	if ((_144917_i >= _144340_tokens.len())) {
		_2214a4a14_pushErr(_self_.ptr(), _144340_tokens[(_144917_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;;
	};
	jule::Slice<jule::Ptr<_21d81d743_Token>> _147517_bodyTokens = _2214a2319_range(_144917_i,jule::Str("{", 1),jule::Str("}", 1),_144340_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_2214a43d7_stop(_self_.ptr());
		_2214a4a14_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;;
	};
	if ((_144917_i < _144340_tokens.len())) {
		_2214a4a14_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_145017_s.get()._field_Public=_2214b3c54_isPub(_145017_s.get()._field_Ident);
	_145017_s.get()._field_Fields=_2214ad886_buildStructDeclFields(_self_, _147517_bodyTokens);
	_145017_s.get()._field_End=_144340_tokens[(_144917_i - 1LL)];
	return _145017_s;;
}



inline void _2214ade19_checkMethodReceiver(_2214a40a7_parser* _self_, jule::Ptr<_21eeb8293_FnDecl>& _149139_f) {
	if (_149139_f.get()._field_Statically) {
		if (((_149139_f.get()._field_Params.len() > 0LL) && _21eeb72d6_IsSelf(_149139_f.get()._field_Params[0LL].ptr()))) {
			_2214a4a14_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_149139_f.get()._field_Params.len() == 0LL)) {
		_2214a4a14_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_21eeb6e73_ParamDecl> _150313_param = _149139_f.get()._field_Params[0LL];;
	if ((!(_21eeb72d6_IsSelf(_150313_param.ptr())))) {
		_2214a4a14_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_21eeb8293_FnDecl>> _2214ae227_buildTraitMethods(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _151041_tokens) {
	jule::Slice<jule::Ptr<_21eeb8293_FnDecl>> _151117_methods = nullptr;;
	jule::Slice<jule::Ptr<_221487134_stmt>> _151217_stmts = _2214874ca_splitStmts(_151041_tokens);;
	{
		auto &expr = _151217_stmts;
		auto it = expr.begin();
		_iter_begin_206818689:;
		if (it != expr.end()) {
			jule::Ptr<_221487134_stmt> _151321_stmt = *it;
			{
				_151041_tokens=_151321_stmt.get()._field_tokens;
				if ((_151041_tokens.len() == 0LL)) {
					goto _iter_next_206818689;
				};
				jule::Ptr<_21eeb8293_FnDecl> _151821_f = _2214aa575_buildFn(_self_, _151041_tokens,true,true);;
				if ((_151821_f != nullptr)) {
					if (_21eeb85e5_IsAnon(_151821_f.ptr())) {
						_2214a4a14_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_2214ade19_checkMethodReceiver(_self_.ptr(), _151821_f);
					if ((_151821_f.get()._field_Generics.len() > 0LL)) {
						_2214a4a14_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_151117_methods = jule::alloc_for_append(_151117_methods,1);_151117_methods.__push(_151821_f);;
				};
			}
			_iter_next_206818689:;
			++it;
			goto _iter_begin_206818689;
		}
		_iter_end_206818689:;
	};
	return _151117_methods;;
}



inline jule::Ptr<_21eec2137_TraitDecl> _2214ae535_buildTraitDecl(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _153339_tokens) {
	if ((_153339_tokens.len() < 3LL)) {
		_2214a4a14_pushErr(_self_.ptr(), _153339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_21eec2137_TraitDecl> _153817_t = jule::new_ptr<_21eec2137_TraitDecl>(_21eec2137_TraitDecl{._field_Token=_153339_tokens[1LL], });;
	if ((_153817_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2214a4a14_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Ident=_153817_t.get()._field_Token.get()._field_Kind;
	jule::I64 _154617_i = 2LL;;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _154717_bodyTokens = _2214a2319_range(_154617_i,jule::Str("{", 1),jule::Str("}", 1),_153339_tokens);;
	if ((_154717_bodyTokens == nullptr)) {
		_2214a43d7_stop(_self_.ptr());
		_2214a4a14_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_154617_i < _153339_tokens.len())) {
		_2214a4a14_pushErr(_self_.ptr(), _153339_tokens[_154617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Public=_2214b3c54_isPub(_153817_t.get()._field_Ident);
	_153817_t.get()._field_Methods=_2214ae227_buildTraitMethods(_self_, _154717_bodyTokens);
	_153817_t.get()._field_End=_153339_tokens[(_154617_i - 1LL)];
	return _153817_t;;
}



inline jule::Ptr<_21eeb8293_FnDecl> _2214ae843_buildCppLinkFn(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _156338_tokens) {
	_156338_tokens=_156338_tokens.slice(1LL);
	jule::Ptr<_21eeb8293_FnDecl> _156517_f = _2214aa575_buildFn(_self_, _156338_tokens,false,true);;
	if ((_156517_f != nullptr)) {
		if (_21eeb85e5_IsAnon(_156517_f.ptr())) {
			_2214a4a14_pushErr(_self_.ptr(), _156517_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_156517_f.get()._field_Public=false;
		_156517_f.get()._field_CppLinked=true;
	};
	return _156517_f;;
}



inline jule::Ptr<_21eeb9272_VarDecl> _2214aeb51_buildCppLinkVar(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _157639_tokens) {
	_157639_tokens=_157639_tokens.slice(1LL);
	jule::Ptr<_21eeb9272_VarDecl> _157817_v = _2214a7550_buildVar(_self_, _157639_tokens);;
	if ((_157817_v != nullptr)) {
		_157817_v.get()._field_Public=false;
		_157817_v.get()._field_CppLinked=true;
		if ((_157817_v.get()._field_Expr != nullptr)) {
			_2214a4a14_pushErr(_self_.ptr(), _157817_v.get()._field_Token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _157817_v;;
}



inline jule::Ptr<_21eec1a2c_StructDecl> _2214aee5e_buildCppLinkStruct(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _158942_tokens) {
	_158942_tokens=_158942_tokens.slice(1LL);
	jule::Ptr<_21eec1a2c_StructDecl> _159117_s = _2214adb94_buildStructDecl(_self_, _158942_tokens);;
	if ((_159117_s != nullptr)) {
		_159117_s.get()._field_Public=false;
		{
			auto &expr = _159117_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_206827e6d:;
			if (it != expr.end()) {
				jule::Ptr<_21eec1279_FieldDecl> _159425_f = *it;
				{
					_159425_f.get()._field_Public=true;
				}
				_iter_next_206827e6d:;
				++it;
				goto _iter_begin_206827e6d;
			}
			_iter_end_206827e6d:;
		};
		_159117_s.get()._field_CppLinked=true;
	};
	return _159117_s;;
}



inline jule::Ptr<_21eebcad3_TypeAliasDecl> _2214b026c_buildCppLinkTypeAlias(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _160345_tokens) {
	_160345_tokens=_160345_tokens.slice(1LL);
	jule::Ptr<_21eebcad3_TypeAliasDecl> _160517_t = _2214a673b_buildTypeAliasDecl(_self_, _160345_tokens);;
	if ((_160517_t != nullptr)) {
		_160517_t.get()._field_Public=false;
		_160517_t.get()._field_CppLinked=true;
	};
	return _160517_t;;
}



inline jule::Ptr<_21eebdebe_UseDecl> _2214b057a_buildCppLinkUse(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _161339_tokens) {
	if ((_161339_tokens.len() == 1LL)) {
		_2214a4a14_pushErr(_self_.ptr(), _161339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_161339_tokens=_161339_tokens.slice(1LL);
	;
	return _2214ab9b6_buildUseDecl(_self_.ptr(), _161339_tokens,true);;
}



inline jule::Any _2214b0888_buildCppLink(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _162437_tokens) {
	jule::Ptr<_21d81d743_Token> _162517_token = _162437_tokens[0LL];;
	if ((_162437_tokens.len() == 1LL)) {
		_2214a4a14_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_162517_token=_162437_tokens[1LL];
	{
		auto &_match_expr{ _162517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_20682cadd:;
			{
				return jule::Any(_2214ae843_buildCppLinkFn(_self_, _162437_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_20682d7ae:;
			{
				return jule::Any(_2214aeb51_buildCppLinkVar(_self_, _162437_tokens), &__jule_any_type17);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_20682d825:;
			{
				return jule::Any(_2214aee5e_buildCppLinkStruct(_self_, _162437_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_20682d88b:;
			{
				return jule::Any(_2214b026c_buildCppLinkTypeAlias(_self_, _162437_tokens), &__jule_any_type13);;
			}
		}
		else {
			_case_begin_20682d649:;
			{
				_2214a4a14_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_20682d748:;
	};
	return nullptr;;
}



inline jule::Ptr<_21eeb8293_FnDecl> _2214b0b96_getMethod(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _164834_tokens) {
	jule::I64 _164917_i = 0LL;;
	jule::Ptr<_21d81d743_Token> _165017_token = _164834_tokens[_164917_i];;
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_2214a4a14_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_2214a4a14_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id != static_cast<jule::U64>(32LLU))) {
		_2214a4a14_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_21eeb8293_FnDecl> _167417_f = _2214aa575_buildFn(_self_, _164834_tokens,true,false);;
	if (((_167417_f != nullptr) && _21eeb85e5_IsAnon(_167417_f.ptr()))) {
		_2214a4a14_pushErr(_self_.ptr(), _167417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _167417_f;;
}



inline void _2214b0eb5_parseImplBody(jule::Ptr<_2214a40a7_parser> _self_, jule::Ptr<_21eec2742_Impl>& _168138_ipl, jule::Slice<jule::Ptr<_21d81d743_Token>>& _168155_tokens) {
	jule::Slice<jule::Ptr<_221487134_stmt>> _168217_stmts = _2214874ca_splitStmts(_168155_tokens);;
	{
		auto &expr = _168217_stmts;
		auto it = expr.begin();
		_iter_begin_206836784:;
		if (it != expr.end()) {
			jule::Ptr<_221487134_stmt> _168321_stmt = *it;
			{
				_168155_tokens=_168321_stmt.get()._field_tokens;
				jule::Ptr<_21d81d743_Token> _168521_token = _168155_tokens[0LL];;
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(38LLU)) {
						_case_begin_2068378d9:;
						{
							_2214a56c4_pushDirective(_self_.ptr(), _2214a544e_buildDirective(_self_.ptr(), _168155_tokens));
							goto _iter_next_206836784;
						}
					}
					_match_end_206837884:;
				};
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_206837a2c:;
						{
							jule::Ptr<_21eeb9272_VarDecl> _169425_v = _2214a7550_buildVar(_self_, _168155_tokens);;
							if ((_169425_v != nullptr)) {
								_168138_ipl.get()._field_Statics = jule::alloc_for_append(_168138_ipl.get()._field_Statics,1);_168138_ipl.get()._field_Statics.__push(_169425_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_206838698:;
						{
							jule::Ptr<_21eeb8293_FnDecl> _170125_f = _2214b0b96_getMethod(_self_, _168155_tokens);;
							if ((_170125_f != nullptr)) {
								_2214ade19_checkMethodReceiver(_self_.ptr(), _170125_f);
								_2214b1856_applyFnMeta(_self_.ptr(), _170125_f);
								_168138_ipl.get()._field_Methods = jule::alloc_for_append(_168138_ipl.get()._field_Methods,1);_168138_ipl.get()._field_Methods.__push(_170125_f);;
							};
						}
					}
					else {
						_case_begin_206837e5b:;
						{
							_2214a4a14_pushErr(_self_.ptr(), _168521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_206836784;
						}
					}
					_match_end_206837e06:;
				};
			}
			_iter_next_206836784:;
			++it;
			goto _iter_begin_206836784;
		}
		_iter_end_206836784:;
	};
}



inline jule::Ptr<_21eec2742_Impl> _2214b12c3_buildImpl(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _171433_tokens) {
	jule::Ptr<_21d81d743_Token> _171517_token = _171433_tokens[0LL];;
	if ((_171433_tokens.len() < 2LL)) {
		_2214a4a14_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _172117_i = 1LL;;
	jule::Ptr<_21eea19a7_TypeDecl> _172318_base;;
	jule::Bool _172328_ok = false;;
	({
		__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
		_172318_base = __jule_assign_result.__jule_result_arg0;
		_172328_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172328_ok))) {
		return nullptr;;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_2214a4a14_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_21eec2742_Impl> _173217_ipl = jule::new_ptr<_21eec2742_Impl>(_21eec2742_Impl{._field_Base=_172318_base, });;
	_171517_token=_171433_tokens[_172117_i];
	if ((_171517_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_171517_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_171517_token.get()._field_Kind == jule::Str("{", 1)))) {
			({
				jule::Ptr<_21eea19a7_TypeDecl> ___jule_assign_arg = _173217_ipl.get()._field_Dest;
				jule::Ptr<_21eea19a7_TypeDecl> _1___jule_assign_arg = _173217_ipl.get()._field_Base;
				_173217_ipl.get()._field_Base = ___jule_assign_arg;
				_173217_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_2214a43d7_stop(_self_.ptr());
		_2214a4a14_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_172117_i)++;
	if ((_172117_i >= _171433_tokens.len())) {
		_2214a43d7_stop(_self_.ptr());
		_2214a4a14_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
		_173217_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_172328_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172328_ok))) {
		return nullptr;;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_2214a43d7_stop(_self_.ptr());
		_2214a4a14_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _177017_bodyTokens = _2214a2319_range(_172117_i,jule::Str("{", 1),jule::Str("}", 1),_171433_tokens);;
	if ((_177017_bodyTokens == nullptr)) {
		_2214a43d7_stop(_self_.ptr());
		_2214a4a14_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_172117_i < _171433_tokens.len())) {
		_2214a4a14_pushErr(_self_.ptr(), _171433_tokens[_172117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_173217_ipl.get()._field_End=_171433_tokens[(_172117_i - 1LL)];
	_2214b0eb5_parseImplBody(_self_, _173217_ipl,_177017_bodyTokens);
	return _173217_ipl;;
}



inline jule::Any _2214b15d1_buildNodeData(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _178538_tokens) {
	jule::Ptr<_21d81d743_Token> _178617_token = _178538_tokens[0LL];;
	{
		auto &_match_expr{ _178617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_2068481be:;
			{
				jule::Ptr<_21eeb8293_FnDecl> _179021_f = _2214aa575_buildFn(_self_, _178538_tokens,false,false);;
				if ((_179021_f != nullptr)) {
					_179021_f.get()._field_Global=true;
					if (_21eeb85e5_IsAnon(_179021_f.ptr())) {
						_2214a4a14_pushErr(_self_.ptr(), _179021_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return jule::Any(_179021_f, &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_206849137:;
			{
				return jule::Any(_2214a7550_buildVar(_self_, _178538_tokens), &__jule_any_type17);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_20684919d:;
			{
				return jule::Any(_2214a673b_buildTypeAliasDecl(_self_, _178538_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_206849214:;
			{
				return _2214ad26a_buildNodeEnumDecl(_self_, _178538_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_20684882e:;
			{
				return jule::Any(_2214adb94_buildStructDecl(_self_, _178538_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_206848895:;
			{
				return jule::Any(_2214ae535_buildTraitDecl(_self_, _178538_tokens), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_20684890b:;
			{
				return jule::Any(_2214b12c3_buildImpl(_self_, _178538_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_206848972:;
			{
				return _2214b0888_buildCppLink(_self_, _178538_tokens);;
			}
		}
		else {
			_case_begin_2068487b8:;
			{
				_2214a4a14_pushErr(_self_.ptr(), _178617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_20684860e:;
	};
}



inline void _2214b1856_applyFnMeta(_2214a40a7_parser* _self_, jule::Ptr<_21eeb8293_FnDecl>& _182135_f) {
	_182135_f.get()._field_Directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _2214b1acb_applyMeta(_2214a40a7_parser* _self_, _21ee6d314_Node& _182633_node) {
	{
		auto &_match_expr{ _182633_node._field_Data };
		
		if (_match_expr.type == &__jule_any_type17) {
			_case_begin_20684eb54:;
			{
				jule::Ptr<_21eeb9272_VarDecl> _182921_v = _182633_node._field_Data.cast_ptr<_21eeb9272_VarDecl>(&__jule_any_type17);;
				if ((_182921_v == nullptr)) {
					return;;
				};
				_182921_v.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_20684ebba:;
			{
				jule::Ptr<_21eeb8293_FnDecl> _183621_f = _182633_node._field_Data.cast_ptr<_21eeb8293_FnDecl>(&__jule_any_type15);;
				if ((_183621_f == nullptr)) {
					return;;
				};
				_2214b1856_applyFnMeta(&(*_self_), _183621_f);
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_20684ec31:;
			{
				jule::Ptr<_21eec1a2c_StructDecl> _184221_sd = _182633_node._field_Data.cast_ptr<_21eec1a2c_StructDecl>(&__jule_any_type14);;
				if ((_184221_sd == nullptr)) {
					return;;
				};
				_184221_sd.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_20684e945:;
	};
}



inline void _2214b1d51_pushUseDecl(jule::Ptr<_2214a40a7_parser> _self_, jule::Ptr<_21eebdebe_UseDecl>& _185136_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push(_185136_decl);;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_2214a4a14_pushErr(_self_.ptr(), _185136_decl.get()._field_Token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_2214a4d33_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _2214b215e_pushMetaNodes(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _185938_tokens) {
	{
		auto &_match_expr{ _185938_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_206855770:;
			{
				;
				jule::Ptr<_21eebdebe_UseDecl> _186321_decl = _2214ab9b6_buildUseDecl(_self_.ptr(), _185938_tokens,false);;
				_2214b1d51_pushUseDecl(_self_, _186321_decl);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_2068557e7:;
			{
				if (((_185938_tokens.len() > 1LL) && (_185938_tokens[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_21eebdebe_UseDecl> _186825_decl = _2214b057a_buildCppLinkUse(_self_, _185938_tokens);;
					_2214b1d51_pushUseDecl(_self_, _186825_decl);
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_20685586e:;
			{
				_2214a56c4_pushDirective(_self_.ptr(), _2214a544e_buildDirective(_self_.ptr(), _185938_tokens));
				return true;;
			}
		}
		_match_end_206855693:;
	};
	return false;;
}



inline _21ee6d314_Node _2214b246c_parseNode(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _187934_st) {
	_21ee6d314_Node _188017_node = _21ee6d314_Node{._field_Token=_187934_st[0LL], };;
	if (_2214b215e_pushMetaNodes(_self_, _187934_st)) {
		return _188017_node;;
	};
	jule::Any _188817_data = _2214b15d1_buildNodeData(_self_, _187934_st);;
	if ((_188817_data == nullptr)) {
		return _188017_node;;
	};
	_188017_node._field_Data=_188817_data;
	_2214b1acb_applyMeta(_self_.ptr(), _188017_node);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_2214a4a14_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188017_node;;
}



inline void _2214b26e2_appendNode(jule::Ptr<_2214a40a7_parser> _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _190335_st) {
	if ((_190335_st.len() == 0LL)) {
		return;;
	};
	_21ee6d314_Node _190717_node = _2214b246c_parseNode(_self_, _190335_st);;
	if (((_190717_node._field_Data == nullptr) || _2214a464b_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_190717_node);;
}



inline void _2214b2b54_removeRange(_2214a40a7_parser* _self_, jule::I64 _191430_i, jule::Str _191438_kind, jule::Slice<jule::Ptr<_21d81d743_Token>>& _191450_tokens, jule::Slice<jule::I64>& _191473_ranges) {
	jule::Str _191513_close = _2214a312d_getCloseKindOfBrace(_191438_kind);;
	for (; (_191430_i >= 0LL); (_191430_i)--) {
		{
			jule::Ptr<_21d81d743_Token> _191717_tok = _191450_tokens[_191473_ranges[_191430_i]];;
			if ((_191717_tok.get()._field_Kind != _191513_close)) {
				goto _iter_next_20685ee1c;
			};
			_191473_ranges=jule::append(_191473_ranges.slice(0LL,_191430_i),_191473_ranges.slice((_191430_i + 1LL)));
			goto _iter_end_20685ee1c;
		}
	_iter_next_20685ee1c:;
	}
	_iter_end_20685ee1c:;;
}



inline void _2214b301c_pushWrongOrderCloseErr(_2214a40a7_parser* _self_, jule::Ptr<_21d81d743_Token>& _192642_t, jule::Slice<jule::Ptr<_21d81d743_Token>>& _192654_tokens, jule::Slice<jule::I64>& _192673_ranges) {
	{
		auto &_match_expr{ _192654_tokens[_192673_ranges[(_192673_ranges.len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_206861ec9:;
			{
				_2214a4a14_pushErr(&(*_self_), _192642_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_206862051:;
			{
				_2214a4a14_pushErr(&(*_self_), _192642_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_2068620c8:;
			{
				_2214a4a14_pushErr(&(*_self_), _192642_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_206861da8:;
	};
}



inline void _2214b347e_pushRangeClose(_2214a40a7_parser* _self_, jule::Ptr<_21d81d743_Token> _193733_t, jule::Str _193744_left, jule::Slice<jule::Ptr<_21d81d743_Token>>& _193756_tokens, jule::Slice<jule::I64>& _193779_ranges) {
	jule::I64 _193813_n = _193779_ranges.len();;
	if ((_193813_n == 0LL)) {
		{
			auto &_match_expr{ _193733_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_206864b03:;
				{
					_2214a4a14_pushErr(&(*_self_), _193733_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_206864b7a:;
				{
					_2214a4a14_pushErr(&(*_self_), _193733_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_206864c02:;
				{
					_2214a4a14_pushErr(&(*_self_), _193733_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_2068648b1:;
		};
		return;;
	} else if ((_193756_tokens[_193779_ranges[(_193813_n - 1LL)]].get()._field_Kind != _193744_left)) {
		_2214b301c_pushWrongOrderCloseErr(&(*_self_), _193733_t,_193756_tokens,_193779_ranges);
	};
	_2214b2b54_removeRange(&(*_self_), static_cast<jule::I64>((_193813_n - 1LL)),_193733_t.get()._field_Kind,_193756_tokens,_193779_ranges);
}



inline void _2214b3704_checkRanges(_2214a40a7_parser* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>>& _195531_tokens) {
	jule::Slice<jule::I64> _195617_ranges = nullptr;;
	{
		auto &expr = _195531_tokens;
		auto it = expr.begin();
		_iter_begin_206867c7c:;
		if (it != expr.end()) {
			jule::I64 _195813_i = it - expr.begin();
			jule::Ptr<_21d81d743_Token> &_195816_token = *it;
			{
				if ((_195816_token.get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_206867c7c;
				};
				{
					auto &_match_expr{ _195816_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_206869036:;
						{
							_195617_ranges = jule::alloc_for_append(_195617_ranges,1);_195617_ranges.__push(_195813_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_20686909c:;
						{
							_2214b347e_pushRangeClose(&(*_self_), _195816_token,jule::Str("(", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_206869113:;
						{
							_2214b347e_pushRangeClose(&(*_self_), _195816_token,jule::Str("{", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_20686918a:;
						{
							_2214b347e_pushRangeClose(&(*_self_), _195816_token,jule::Str("[", 1),_195531_tokens,_195617_ranges);
						}
					}
					_match_end_206868e7b:;
				};
			}
			_iter_next_206867c7c:;
			++it;
			_195813_i++;
			goto _iter_begin_206867c7c;
		}
		_iter_end_206867c7c:;
	};
	{
		auto &expr = _195617_ranges;
		auto it = expr.begin();
		_iter_begin_20686a5ed:;
		if (it != expr.end()) {
			jule::I64 _197616_i = *it;
			{
				jule::Ptr<_21d81d743_Token> _197717_token = _195531_tokens[_197616_i];;
				{
					auto &_match_expr{ _197717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_20686b753:;
						{
							_2214a4a14_pushErr(&(*_self_), _197717_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_20686b7b9:;
						{
							_2214a4a14_pushErr(&(*_self_), _197717_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_20686b830:;
						{
							_2214a4a14_pushErr(&(*_self_), _197717_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_20686b522:;
				};
			}
			_iter_next_20686a5ed:;
			++it;
			goto _iter_begin_20686a5ed;
		}
		_iter_end_20686a5ed:;
	};
}



inline void _2214b3979_parse(jule::Ptr<_2214a40a7_parser> _self_, jule::Ptr<_21d823acd_File>& _198930_f) {
	_self_.get()._field_ast=jule::new_ptr<_21ee6c665_Ast>(_21ee6c665_Ast{._field_File=_198930_f, });
	_2214b3704_checkRanges(_self_.ptr(), _198930_f.get()._field_Tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_221487134_stmt>> _199917_stmts = _2214874ca_splitStmts(_198930_f.get()._field_Tokens);;
	jule::I64 _200217_i = 0LL;;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_221487134_stmt> _200421_stmt = _199917_stmts[_200217_i];;
			if ((_200421_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200421_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(38LLU))) {
				goto _iter_end_20686e79a;
			};
			if ((!(_21d4e6eee_IsTopDirective(_200421_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_20686e79a;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_2214a544e_buildDirective(_self_.ptr(), _200421_stmt.get()._field_tokens));;
		}
	_iter_next_20686e79a:;
	}
	_iter_end_20686e79a:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_221487134_stmt> _202121_stmt = _199917_stmts[_200217_i];;
			_2214b26e2_appendNode(_self_, _202121_stmt.get()._field_tokens);
			if (_2214a464b_stopped(_self_.ptr())) {
				goto _iter_end_20687123b;
			};
		}
	_iter_next_20687123b:;
	}
	_iter_end_20687123b:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_2214a4a14_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2214a40a7_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _2214b5393_pushErr(_2214b4cbb_typeBuilder* _self_, jule::Ptr<_21d81d743_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*_self_)._field_err) {
		_2214a4a14_pushErr((*_self_)._field_p.ptr(), _4126_token,_4141_fmt,jule::Slice<jule::Any>());
	};
}



inline void _2214b56b2_pushSuggestion(_2214b4cbb_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*_self_)._field_err) {
		_2214a4d33_pushSuggestion((*_self_)._field_p.ptr(), _4833_fmt,_4846_args);
	};
}



inline jule::Ptr<_21eea19a7_TypeDecl> _2214b5926_buildPrim(_2214b4cbb_typeBuilder* _self_) {
	jule::Ptr<_21eea19a7_TypeDecl> _5517_t = _2214b4837_buildPrimType((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _5517_t;;
}



inline jule::Ptr<_21eea19a7_TypeDecl> _2214b5b8a_buildNamespace(_2214b4cbb_typeBuilder* _self_) {
	jule::Ptr<_21eea19a7_TypeDecl> _6117_t = jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_21eea2a74_NamespaceTypeDecl> _6517_nst = jule::new_ptr<_21eea2a74_NamespaceTypeDecl>();;
	jule::I64 _6617_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_21d81d743_Token> _6821_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_6617_n & 1LL) == 0LL)) {
				if ((_6821_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_2214b5393_pushErr(&(*_self_), _6821_token,jule::Str("invalid syntax", 14));
					_2214b56b2_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_6517_nst.get()._field_Idents = jule::alloc_for_append(_6517_nst.get()._field_Idents,1);_6517_nst.get()._field_Idents.__push(_6821_token);;
			} else if ((_6821_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
				goto _iter_end_20687841e;
			};
			(_6617_n)++;
		}
	_iter_next_20687841e:;
	}
	_iter_end_20687841e:;;
	_6517_nst.get()._field_Idents=_6517_nst.get()._field_Idents.slice(0LL,(_6517_nst.get()._field_Idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_6517_nst.get()._field_Kind=_2214b63c7_buildIdent(&(*_self_));
	_6117_t.get()._field_Kind=jule::Any(_6517_nst, &__jule_any_type98);
	return _6117_t;;
}



inline jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>> _2214b5dee_buildGenerics(_2214b4cbb_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_21d81d743_Token> _9413_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_9413_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_9413_token.get()._field_Kind != jule::Str("[", 1)))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _9917_parts = _2214b6163_identGenerics(&(*_self_));;
	if ((_9917_parts.len() == 0LL)) {
		_2214b5393_pushErr(&(*_self_), _9413_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>> _10517_types = jule::Slice<jule::Ptr<_21eea19a7_TypeDecl>>::alloc(0LL, _9917_parts.len());;
	{
		auto &expr = _9917_parts;
		auto it = expr.begin();
		_iter_begin_206880cc8:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_21d81d743_Token>> _10621_part = *it;
			{
				jule::I64 _10721_j = 0LL;;
				jule::Ptr<_21eea19a7_TypeDecl> _10822_t;;
				({
					__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType((*_self_)._field_p, _10621_part,(&(_10721_j)),true);
					_10822_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10721_j < _10621_part.len())) {
					_2214b5393_pushErr(&(*_self_), _10621_part[_10721_j],jule::Str("invalid syntax", 14));
				};
				_10517_types = jule::alloc_for_append(_10517_types,1);_10517_types.__push(_10822_t);;
			}
			_iter_next_206880cc8:;
			++it;
			goto _iter_begin_206880cc8;
		}
		_iter_end_206880cc8:;
	};
	return _10517_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _2214b6163_identGenerics(_2214b4cbb_typeBuilder* _self_) {
	jule::I64 _11813_first = (*((*_self_)._field_i));;
	jule::I64 _11917_rangeN = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_21d81d743_Token> _12117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_12117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _12117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_206884804:;
						{
							(_11917_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_20688487b:;
						{
							(_11917_rangeN)--;
						}
					}
					_match_end_2068845c3:;
				};
			};
			if ((_11917_rangeN == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_2068834d4;
			};
		}
	_iter_next_2068834d4:;
	}
	_iter_end_2068834d4:;;
	jule::Slice<jule::Ptr<_21d81d743_Token>> _13517_tokens = (*_self_)._field_tokens.slice((_11813_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _13618_parts;;
	jule::Slice<_21d4e511d_Log> _13625_errors;;
	({
		__jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log __jule_assign_result = _2214a2d86_parts(_13517_tokens,static_cast<jule::U64>(8LLU),true);
		_13618_parts = __jule_assign_result.__jule_result_arg0;
		_13625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_13625_errors);
	};
	return _13618_parts;;
}



inline jule::Ptr<_21eea19a7_TypeDecl> _2214b63c7_buildIdent(_2214b4cbb_typeBuilder* _self_) {
	jule::Bool _14417_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_14417_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return _2214b5b8a_buildNamespace(&(*_self_));;
	};
	jule::Ptr<_21d81d743_Token> _14817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_21eea206d_IdentTypeDecl> _14917_it = jule::new_ptr<_21eea206d_IdentTypeDecl>(_21eea206d_IdentTypeDecl{._field_Token=_14817_token, ._field_Ident=_14817_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_21eea19a7_TypeDecl> _15517_itd = jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_14917_it, &__jule_any_type20)});;
	if (((!(_14417_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_14917_it.get()._field_Generics=_2214b5dee_buildGenerics(&(*_self_));
		return _15517_itd;;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_2214b5393_pushErr(&(*_self_), _14817_token,jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_2214b5393_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	jule::Ptr<_21eea26bc_SubIdentTypeDecl> _17217_sit = jule::new_ptr<_21eea26bc_SubIdentTypeDecl>();;
	_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_14917_it);;
	jule::Ptr<_21eea19a7_TypeDecl> _17417_ident = _2214b63c7_buildIdent(&(*_self_));;
	{
		auto &_match_expr{ _17417_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_20688e80e:;
			{
				_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_17417_ident.get()._field_Kind.cast_ptr<_21eea206d_IdentTypeDecl>(&__jule_any_type20));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_20688e8a8:;
			{
				_17217_sit.get()._field_Idents=jule::append(_17217_sit.get()._field_Idents,_17417_ident.get()._field_Kind.cast_ptr<_21eea26bc_SubIdentTypeDecl>(&__jule_any_type94).get()._field_Idents);
			}
		}
		_match_end_20688e7a9:;
	};
	return jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_17217_sit, &__jule_any_type94)});;
}



inline jule::Ptr<_21eea19a7_TypeDecl> _2214b663b_buildCppLink(_2214b4cbb_typeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_2214b5393_pushErr(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_21eea19a7_TypeDecl> _19317_t = _2214b63c7_buildIdent(&(*_self_));;
	_19317_t.get()._field_Kind.cast_ptr<_21eea206d_IdentTypeDecl>(&__jule_any_type20).get()._field_CppLinked=true;
	return _19317_t;;
}



inline jule::Ptr<_21eea19a7_TypeDecl> _2214b68a0_buildFn(_2214b4cbb_typeBuilder* _self_) {
	jule::Ptr<_21d81d743_Token> _19917_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_21eeb8293_FnDecl> _20017_f = _2214aa124_buildFnPrototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_20017_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_21eeb85e5_IsAnon(_20017_f.ptr())))) {
		_2214b5393_pushErr(&(*_self_), _20017_f.get()._field_Token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Token=_19917_token, ._field_Kind=jule::Any(_20017_f, &__jule_any_type15)});;
}



inline jule::Ptr<_21eea19a7_TypeDecl> _2214b6b14_buildPtr(_2214b4cbb_typeBuilder* _self_) {
	jule::Ptr<_21d81d743_Token> _21417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_2214b5393_pushErr(&(*_self_), _21417_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_21eea3833_PtrTypeDecl>(_21eea3833_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type79)});;
	};
	jule::Ptr<_21eea19a7_TypeDecl> _23117_elem = _2214b7d02_step(&(*_self_));;
	if ((_23117_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_21eea3833_PtrTypeDecl>(_21eea3833_PtrTypeDecl{._field_Elem=_23117_elem}), &__jule_any_type79)});;
}



inline jule::Ptr<_21eea19a7_TypeDecl> _2214b6d78_buildSptr(_2214b4cbb_typeBuilder* _self_) {
	jule::Ptr<_21d81d743_Token> _24517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_2214b5393_pushErr(&(*_self_), _24517_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_21eea19a7_TypeDecl> _25217_elem = _2214b7d02_step(&(*_self_));;
	if ((_25217_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Token=_24517_token, ._field_Kind=jule::Any(jule::new_ptr<_21eea2d60_SptrTypeDecl>(_21eea2d60_SptrTypeDecl{._field_Elem=_25217_elem}), &__jule_any_type80)});;
}



inline jule::Ptr<_21eea19a7_TypeDecl> _2214b70dc_buildOp(_2214b4cbb_typeBuilder* _self_) {
	jule::Ptr<_21d81d743_Token> _26617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _26617_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_20689b992:;
			{
				return _2214b6b14_buildPtr(&(*_self_));;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_20689d400:;
			{
				return _2214b6d78_buildSptr(&(*_self_));;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_20689d466:;
			{
				return jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_21eea2d60_SptrTypeDecl>(_21eea2d60_SptrTypeDecl{._field_Elem=_2214b6d78_buildSptr(&(*_self_))}), &__jule_any_type80)});;
			}
		}
		else {
			_case_begin_20689c993:;
			{
				_2214b5393_pushErr(&(*_self_), _26617_token,jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_20689c80b:;
	};
}



inline jule::Ptr<_21eea19a7_TypeDecl> _2214b7351_buildSlc(_2214b4cbb_typeBuilder* _self_) {
	jule::Ptr<_21d81d743_Token> _28517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_21eea19a7_TypeDecl> _28717_elem = _2214b7d02_step(&(*_self_));;
	if ((_28717_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Token=_28517_token, ._field_Kind=jule::Any(jule::new_ptr<_21eea325b_SlcTypeDecl>(_21eea325b_SlcTypeDecl{._field_Elem=_28717_elem}), &__jule_any_type78)});;
}



inline jule::Ptr<_21eea19a7_TypeDecl> _2214b75b5_buildArr(_2214b4cbb_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_21d81d743_Token>> _30017_exprTokens = _2214a2319_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_2214b5393_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_21eea19a7_TypeDecl> _30617_elem = _2214b7d02_step(&(*_self_));;
	if ((_30617_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_21eea3eb5_ArrTypeDecl> _31117_arrt = jule::new_ptr<_21eea3eb5_ArrTypeDecl>(_21eea3eb5_ArrTypeDecl{._field_Elem=_30617_elem, });;
	jule::Ptr<_21d81d743_Token> _31517_token = _30017_exprTokens[0LL];;
	if ((((_30017_exprTokens.len() == 1LL) && (_31517_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && (_31517_token.get()._field_Kind == jule::Str("...", 3)))) {
	} else {
		_31117_arrt.get()._field_Size=_2214a5141_buildExpr((*_self_)._field_p, _30017_exprTokens);
	};
	return jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Token=_31517_token, ._field_Kind=jule::Any(_31117_arrt, &__jule_any_type77)});;
}



inline jule::Ptr<_21eea19a7_TypeDecl> _2214b7829_buildMap(_2214b4cbb_typeBuilder* _self_) {
	jule::Ptr<_21d81d743_Token> _32917_mapToken = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_2214b5393_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_21d81d743_Token>> _33717_keyTokens = _2214a2319_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_2214b5393_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_33717_keyTokens.len() == 0LL)) {
		_2214b5393_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_21eea4713_MapTypeDecl> _34617_mapt = jule::new_ptr<_21eea4713_MapTypeDecl>();;
	jule::I64 _34717_j = 0LL;;
	jule::Ptr<_21eea19a7_TypeDecl> _34818_keyt;;
	jule::Bool _34828_ok = false;;
	({
		__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType((*_self_)._field_p, _33717_keyTokens,(&(_34717_j)),(*_self_)._field_err);
		_34818_keyt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	} else if ((_34717_j < _33717_keyTokens.len())) {
		_2214b5393_pushErr(&(*_self_), _33717_keyTokens[_34717_j],jule::Str("invalid syntax", 14));
	};
	_34617_mapt.get()._field_Key=_34818_keyt;
	jule::Ptr<_21eea19a7_TypeDecl> _35618_valt;;
	({
		__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_assign_result = _2214a642d_buildType((*_self_)._field_p, (*_self_)._field_tokens,(*_self_)._field_i,(*_self_)._field_err);
		_35618_valt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	};
	_34617_mapt.get()._field_Val=_35618_valt;
	return jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Token=_32917_mapToken, ._field_Kind=jule::Any(_34617_mapt, &__jule_any_type81)});;
}



inline jule::Ptr<_21eea19a7_TypeDecl> _2214b7a8d_buildEnumerable(_2214b4cbb_typeBuilder* _self_) {
	jule::Ptr<_21d81d743_Token> _36817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_36817_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (_36817_token.get()._field_Kind != jule::Str("[", 1)))) {
		_2214b5393_pushErr(&(*_self_), _36817_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*_self_)._field_i)))++;
	_36817_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_36817_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_36817_token.get()._field_Kind == jule::Str("]", 1)))) {
		return _2214b7351_buildSlc(&(*_self_));;
	};
	((*((*_self_)._field_i)))--;
	return _2214b75b5_buildArr(&(*_self_));;
}



inline jule::Ptr<_21eea19a7_TypeDecl> _2214b7d02_step(_2214b4cbb_typeBuilder* _self_) {
	jule::Ptr<_21d81d743_Token> _38513_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _38513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_2068b1ca4:;
			{
				return _2214b5926_buildPrim(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_2068b1589:;
			{
				return _2214b63c7_buildIdent(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_2068b1600:;
			{
				return _2214b663b_buildCppLink(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_2068b1666:;
			{
				return _2214b68a0_buildFn(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_2068b16dd:;
			{
				return _2214b70dc_buildOp(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_2068b2106:;
			{
				return _2214b7a8d_buildEnumerable(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_2068b216c:;
			{
				return _2214b7829_buildMap(&(*_self_));;
			}
		}
		else {
			_case_begin_2068b1523:;
			{
				((*((*_self_)._field_i)))++;
				_2214b5393_pushErr(&(*_self_), _38513_token,jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_2068b138b:;
	};
}



inline __jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool _2214b8066_build(_2214b4cbb_typeBuilder* _self_) {
	__jule_tuple_x_21eea19a7_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_21eea19a7_TypeDecl> _41117_root = _2214b7d02_step(&(*_self_));;
	if ((_41117_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _2214b4628_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _41117_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _2214b4cbb_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220cde5b3_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _220ce0e66_pushErr(_220ce0916_directiveEval* _self_, jule::Ptr<_21d81d743_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_21d4e511d_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_21d4e555d_Logf(_2137_fmt,_2150_args), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _220ce131d_splitOperans(_220ce0916_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_21d81d743_Token>>& _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3351_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_21d81d743_Token> _4017_b = _3351_tokens[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_2068d71d6:;
						{
							(_3717_rangeN)++;
							goto _iter_next_2068d4ee7;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_2068d724c:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_2068d6ec7:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_2068d4ee7;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_2068d4ee7:;
	}
	_iter_end_2068d4ee7:;;
	if ((_3817_last < _3351_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last));;
	} else {
		_220ce0e66_pushErr(&(*_self_), _3351_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _220ce162b_evalDirectiveIdent(_220ce0916_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_2068da294:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7333_ident)) {
					return true;;
				};
			}
			_iter_next_2068da294:;
			++it;
			goto _iter_begin_2068da294;
		}
		_iter_end_2068da294:;
	};
	return false;;
}



inline jule::Bool _220ce1939_evalDirectivePart(_220ce0916_directiveEval* _self_, jule::Slice<jule::Ptr<_21d81d743_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_8740_part[0LL].get()._field_Kind == jule::Str("!", 1)));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_220ce0e66_pushErr(&(*_self_), _8740_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _9817_result = _220ce162b_evalDirectiveIdent(&(*_self_), _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;;
}



inline jule::Bool _220ce1b9d_eval(_220ce0916_directiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_Args.len() == 0LL)) {
		_220ce0e66_pushErr(&(*_self_), (*_self_)._field_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _11317_logicalOrParts = _220ce131d_splitOperans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_Args);;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto &expr = _11317_logicalOrParts;
		auto it = expr.begin();
		_iter_begin_2068e160d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_21d81d743_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _12021_logicalAndParts = _220ce131d_splitOperans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto &expr = _12021_logicalAndParts;
					auto it = expr.begin();
					_iter_begin_2068e2dc3:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_21d81d743_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_21d81d743_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_Kind == jule::Str("(", 1)))) {
								jule::Ptr<_21d81d743_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_Kind != jule::Str(")", 1)))) {
									_220ce0e66_pushErr(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;;
								};
								_12525_andPart=_12525_andPart.slice(1LL,(_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _220ce1939_evalDirectivePart(&(*_self_), _12525_andPart));
						}
						_iter_next_2068e2dc3:;
						++it;
						goto _iter_begin_2068e2dc3;
					}
					_iter_end_2068e2dc3:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_2068e160d:;
			++it;
			goto _iter_begin_2068e160d;
		}
		_iter_end_2068e160d:;
	};
	return _11117_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _220ce0916_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2213ab795_JuleImporter> static__220dd6204_New(_220cde5b3_CompileInfo _5819_info) {
	jule::Ptr<_2213ab795_JuleImporter> _5917_imp = jule::new_ptr<_2213ab795_JuleImporter>(_2213ab795_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_21d52d673_PathStdlib}), });;
	_220cdedcc_initVars(_5917_imp.get()._field_vars,_5819_info);
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_220b61325_ImportInfo>> _220e297b9_AllPackages(_2213ab795_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;;
}



inline void _220e48909_SetModPath(_2213ab795_JuleImporter* _self_, jule::Str _7529_path) {
	(*_self_)._field_mod=_7529_path;
}



inline jule::Str _220e5a07a_GetModPath(_2213ab795_JuleImporter* _self_) {
	return (*_self_)._field_mod;;
}



inline jule::Str _220e866c2_ModById(_2213ab795_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*_self_)._field_mods[_8322_id];;
}



inline jule::Ptr<_220b61325_ImportInfo> _220e8ace2_GetImport(_2213ab795_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_2068ee94b:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_2068ee94b:;
			++it;
			goto _iter_begin_2068ee94b;
		}
		_iter_end_2068ee94b:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_21ee6c665_Ast__jule_tuple_s_21d4e511d_Log _22104dbeb_ImportPackage(_2213ab795_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_21ee6c665_Ast__jule_tuple_s_21d4e511d_Log __jule_func_result;
	jule::Slice<jule::Ptr<_21b6d2351_DirEntry>> _9717_dirents = ({
		auto except = static__21c4123c1_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_21d4e511d_Log>::make({_220dd0a17_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_21b6d2351_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _220d00a47_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_newMod;
			jule::Slice<_21d4e511d_Log> _10525_errs = _220d00cde_CheckModuleFile((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_21ee6c665_Ast>> _11217_asts = jule::Slice<jule::Ptr<_21ee6c665_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_206900e69:;
		if (it != expr.end()) {
			jule::Ptr<_21b6d2351_DirEntry> _11316_dirent = *it;
			{
				if ((_21b6d2a49_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_21d463685_HasSuffix(_11316_dirent.get()._field_Name,jule::Str(".jule", 5)))))) {
					goto _iter_next_206900e69;
				};
				jule::Str _11917__path = _21c4e1aee_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_21d823acd_File> _12021_file = _21d82510c_NewFileSet(_11917__path);;
				_21d824260_Fill(_12021_file.ptr(), _220d099da_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_21d4e511d_Log> _12221_errors = _21d8309a8_Lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_22143b0a5_FileInfo> _12721_finfo = _22143dbac_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_21ec71de8_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_206900e69;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_21d4e511d_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_21d4e511d_Log __jule_assign_result = _221060290_isPassBuildDirectives(&(*_self_), _12721_finfo.get()._field_Ast);
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_206900e69;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_206900e69:;
			++it;
			goto _iter_begin_206900e69;
		}
		_iter_end_206900e69:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _22105c974_Imported(_2213ab795_JuleImporter* _self_, jule::Ptr<_220b61325_ImportInfo> _15331_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_2069090a4:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_2069090a4:;
			++it;
			goto _iter_begin_2069090a4;
		}
		_iter_end_2069090a4:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_20690a88b:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_20690a88b:;
				++it;
				_16217_i++;
				goto _iter_begin_20690a88b;
			}
			_iter_end_20690a88b:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15331_imp);;
}



inline __jule_tuple_bool__jule_tuple_s_21d4e511d_Log _221060290_isPassBuildDirectives(_2213ab795_JuleImporter* _self_, jule::Ptr<_21ee6c665_Ast>& _17945_file) {
	__jule_tuple_bool__jule_tuple_s_21d4e511d_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto &expr = _17945_file.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_20690dae2:;
		if (it != expr.end()) {
			jule::Ptr<_21ee6d710_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_Tag.get()._field_Kind != jule::Str("build", 5))) {
					goto _iter_next_20690dae2;
				};
				_220ce0916_directiveEval _18421_de = _220ce0916_directiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _220ce1b9d_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_20690dae2:;
			++it;
			goto _iter_begin_20690dae2;
		}
		_iter_end_20690dae2:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _2213ab795_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220d07345_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _206931b9d_isCommonOrdered(jule::Slice<jule::Ptr<_21eec3006_Struct>> _1834_s, jule::Ptr<_21eec3006_Struct> _1842_t) {
	{
		auto &expr = _1842_t.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_206932c48:;
		if (it != expr.end()) {
			jule::Ptr<_21eec3006_Struct> &_1916_d = *it;
			{
				{
					auto &expr = _1834_s;
					auto it = expr.begin();
					_iter_begin_206933573:;
					if (it != expr.end()) {
						jule::Ptr<_21eec3006_Struct> &_2020_t2 = *it;
						{
							if ((_1916_d == _2020_t2)) {
								return false;;
							};
						}
						_iter_next_206933573:;
						++it;
						goto _iter_begin_206933573;
					}
					_iter_end_206933573:;
				};
			}
			_iter_next_206932c48:;
			++it;
			goto _iter_begin_206932c48;
		}
		_iter_end_206932c48:;
	};
	return true;;
}

inline jule::Bool _206938e3b_isCommonOrdered(jule::Slice<jule::Ptr<_220b8746c_Var>> _1834_s, jule::Ptr<_220b8746c_Var> _1842_t) {
	{
		auto &expr = _1842_t.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_206939e92:;
		if (it != expr.end()) {
			jule::Ptr<_220b8746c_Var> &_1916_d = *it;
			{
				{
					auto &expr = _1834_s;
					auto it = expr.begin();
					_iter_begin_20693a7bc:;
					if (it != expr.end()) {
						jule::Ptr<_220b8746c_Var> &_2020_t2 = *it;
						{
							if ((_1916_d == _2020_t2)) {
								return false;;
							};
						}
						_iter_next_20693a7bc:;
						++it;
						goto _iter_begin_20693a7bc;
					}
					_iter_end_20693a7bc:;
				};
			}
			_iter_next_206939e92:;
			++it;
			goto _iter_begin_206939e92;
		}
		_iter_end_206939e92:;
	};
	return true;;
}



inline void _20692b22a_orderCommon(jule::Slice<jule::Ptr<_21eec3006_Struct>>& _3135_s) {
	jule::I64 _3217_i = 0LL;;
	{
		auto &expr = _3135_s;
		auto it = expr.begin();
		_iter_begin_20692c55b:;
		if (it != expr.end()) {
			jule::I64 _3314_j = it - expr.begin();
			jule::Ptr<_21eec3006_Struct> _3321_t = *it;
			{
				if ((_3321_t.get()._field_CppLinked || (_3321_t.get()._field_Depends.len() == 0LL))) {
					_3135_s.swap(_3217_i,_3314_j);
					(_3217_i)++;
				};
			}
			_iter_next_20692c55b:;
			++it;
			_3314_j++;
			goto _iter_begin_20692c55b;
		}
		_iter_end_20692c55b:;
	};
	jule::Slice<jule::Ptr<_21eec3006_Struct>> _4017_sp = _3135_s.slice(_3217_i);;
	jule::I64 _4117_n = (_4017_sp.len() - 1LL);;
	{
		auto &expr = _4017_sp;
		auto it = expr.begin();
		_iter_begin_20692e8d2:;
		if (it != expr.end()) {
			{
				jule::Bool _4321_swapped = false;;
				jule::I64 _4421_k = 0LL;;
				for (; (_4421_k < _4117_n); (_4421_k)++) {
					{
						if ((!(_206931b9d_isCommonOrdered(_4017_sp.slice((_4421_k + 1LL)),_4017_sp[_4421_k])))) {
							_4017_sp.swap(_4421_k,static_cast<jule::I64>((_4421_k + 1LL)));
							_4321_swapped=true;
						};
					}
				_iter_next_206930707:;
				}
				_iter_end_206930707:;;
				if ((!(_4321_swapped))) {
					goto _iter_end_20692e8d2;
				};
				(_4117_n)--;
			}
			_iter_next_20692e8d2:;
			++it;
			goto _iter_begin_20692e8d2;
		}
		_iter_end_20692e8d2:;
	};
}

inline void _20692babb_orderCommon(jule::Slice<jule::Ptr<_220b8746c_Var>>& _3135_s) {
	jule::I64 _3217_i = 0LL;;
	{
		auto &expr = _3135_s;
		auto it = expr.begin();
		_iter_begin_2069347e9:;
		if (it != expr.end()) {
			jule::I64 _3314_j = it - expr.begin();
			jule::Ptr<_220b8746c_Var> _3321_t = *it;
			{
				if ((_3321_t.get()._field_CppLinked || (_3321_t.get()._field_Depends.len() == 0LL))) {
					_3135_s.swap(_3217_i,_3314_j);
					(_3217_i)++;
				};
			}
			_iter_next_2069347e9:;
			++it;
			_3314_j++;
			goto _iter_begin_2069347e9;
		}
		_iter_end_2069347e9:;
	};
	jule::Slice<jule::Ptr<_220b8746c_Var>> _4017_sp = _3135_s.slice(_3217_i);;
	jule::I64 _4117_n = (_4017_sp.len() - 1LL);;
	{
		auto &expr = _4017_sp;
		auto it = expr.begin();
		_iter_begin_206936b70:;
		if (it != expr.end()) {
			{
				jule::Bool _4321_swapped = false;;
				jule::I64 _4421_k = 0LL;;
				for (; (_4421_k < _4117_n); (_4421_k)++) {
					{
						if ((!(_206938e3b_isCommonOrdered(_4017_sp.slice((_4421_k + 1LL)),_4017_sp[_4421_k])))) {
							_4017_sp.swap(_4421_k,static_cast<jule::I64>((_4421_k + 1LL)));
							_4321_swapped=true;
						};
					}
				_iter_next_206937995:;
				}
				_iter_end_206937995:;;
				if ((!(_4321_swapped))) {
					goto _iter_end_206936b70;
				};
				(_4117_n)--;
			}
			_iter_next_206936b70:;
			++it;
			goto _iter_begin_206936b70;
		}
		_iter_end_206936b70:;
	};
}



inline void static__2212880ab_orderStructures(jule::Slice<jule::Ptr<_21eec3006_Struct>>& _6036_structs) {
	_20692b22a_orderCommon(_6036_structs);
}



inline void static__221302125_orderVars(jule::Slice<jule::Ptr<_220b8746c_Var>>& _6630_vars) {
	_20692babb_orderCommon(_6630_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _220dce20d_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _221583494_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _2215b95b8_optimizeChild(jule::Ptr<_2215b90e0_scopeDeadCode> _self_, jule::Ptr<_220b42b20_Scope>& _3938_s) {
	jule::Ptr<_2215b90e0_scopeDeadCode> _4017_sdc = jule::new_ptr<_2215b90e0_scopeDeadCode>(_2215b90e0_scopeDeadCode{._field_parent=_self_, ._field_s=_3938_s, ._field_stmts=(&(_3938_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_2215bbc08_optimizeStmts(_4017_sdc);
	};
}



inline void _2215b9860_optimizeBodyChildExceptional(jule::Ptr<_2215b90e0_scopeDeadCode> _self_, jule::Ptr<_220b42b20_Scope>& _5053_s) {
	jule::Ptr<_2215b90e0_scopeDeadCode> _5117_sdc = jule::new_ptr<_2215b90e0_scopeDeadCode>(_2215b90e0_scopeDeadCode{._field_s=_5053_s, ._field_stmts=(&(_5053_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_2215bbc08_optimizeStmts(_5117_sdc);
	};
}



inline void _2215b9ae6_optimizeBodyChild(jule::Ptr<_2215b90e0_scopeDeadCode> _self_, jule::Ptr<_220b42b20_Scope>& _6142_s) {
	jule::Ptr<_2215b90e0_scopeDeadCode> _6217_sdc = jule::new_ptr<_2215b90e0_scopeDeadCode>(_2215b90e0_scopeDeadCode{._field_s=_6142_s, ._field_stmts=(&(_6142_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_2215bbc08_optimizeStmts(_6217_sdc);
	};
}



inline void _2215b9d6b_optimizeExprModel(jule::Ptr<_2215b90e0_scopeDeadCode> _self_, jule::Any& _7142_model) {
	_2215bd04a_exprDeadCode _7213_edc = static__2215bd677_new(_self_);;
	_2215c4392_optimize(&_7213_edc, _7142_model);
}



inline void _2215ba047_eliminateFollowed(_2215b90e0_scopeDeadCode* _self_) {
	if (((*((*_self_)._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_2215b90e0_scopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_2069a5d65:;
	}
	_iter_end_2069a5d65:;;
}



inline void _2215ba2bc_pushGoto(jule::Ptr<_2215b90e0_scopeDeadCode> _self_, jule::Ptr<_220b4564a_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_2069a9088:;
	}
	_iter_end_2069a9088:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_220b4564a_GotoSt>>::make({_9232_gt}));
}



inline void _2215ba542_pushLabel(jule::Ptr<_2215b90e0_scopeDeadCode> _self_, jule::Ptr<_220b4535e_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_2069aa85e;
			};
			(_10317_i)++;
		}
	_iter_next_2069aa85e:;
	}
	_iter_end_2069aa85e:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_220b4535e_Label>>::make({_10233_l}));
}



inline void _2215ba7b7_optimizeRangeIter(jule::Ptr<_2215b90e0_scopeDeadCode> _self_, jule::Ptr<_220b447c0_RangeIter> _11541_it) {
	_2215b9d6b_optimizeExprModel(_self_, _11541_it.get()._field_Expr.get()._field_Model);
	_2215b9ae6_optimizeBodyChild(_self_, _11541_it.get()._field_Scope);
}



inline void _2215baa3c_optimizeWhileIter(jule::Ptr<_2215b90e0_scopeDeadCode> _self_, jule::Ptr<_220b43dda_WhileIter> _12041_it) {
	_2215b9d6b_optimizeExprModel(_self_, _12041_it.get()._field_Expr);
	if ((_12041_it.get()._field_Next != nullptr)) {
		_2215bba2c_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_2215b9ae6_optimizeBodyChild(_self_, _12041_it.get()._field_Scope);
}



inline void _2215bacb2_optimizeInfIter(jule::Ptr<_2215b90e0_scopeDeadCode> _self_, jule::Ptr<_220b43967_InfIter> _12839_it) {
	_2215b9ae6_optimizeBodyChild(_self_, _12839_it.get()._field_Scope);
}



inline void _2215bb037_optimizeConditional(jule::Ptr<_2215b90e0_scopeDeadCode> _self_, jule::Ptr<_220b4367b_Conditional> _13243_c) {
	{
		auto &expr = _13243_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_2069b1a85:;
		if (it != expr.end()) {
			jule::Ptr<_220b4301b_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_2215b9d6b_optimizeExprModel(_self_, _13321_case.get()._field_Expr);
					_2215b9ae6_optimizeBodyChild(_self_, _13321_case.get()._field_Scope);
				};
			}
			_iter_next_2069b1a85:;
			++it;
			goto _iter_begin_2069b1a85;
		}
		_iter_end_2069b1a85:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_2215b95b8_optimizeChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		} else {
			_2215b9ae6_optimizeBodyChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _2215bb2ac_optimizeMatch(jule::Ptr<_2215b90e0_scopeDeadCode> _self_, jule::Ptr<_220b4686b_Match> _15037_m) {
	{
		auto &expr = _15037_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_2069b46d1:;
		if (it != expr.end()) {
			jule::Ptr<_220b473b6_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_2069b502d:;
					if (it != expr.end()) {
						jule::Ptr<_220bceecb_Data> _15225_expr = *it;
						{
							_2215b9d6b_optimizeExprModel(_self_, _15225_expr.get()._field_Model);
						}
						_iter_next_2069b502d:;
						++it;
						goto _iter_begin_2069b502d;
					}
					_iter_end_2069b502d:;
				};
				_2215b9ae6_optimizeBodyChild(_self_, _15121_case.get()._field_Scope);
			}
			_iter_next_2069b46d1:;
			++it;
			goto _iter_begin_2069b46d1;
		}
		_iter_end_2069b46d1:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_2215b95b8_optimizeChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		} else {
			_2215b9ae6_optimizeBodyChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _2215bb532_optimizeAssign(jule::Ptr<_2215b90e0_scopeDeadCode> _self_, jule::Ptr<_220b45e75_Assign> _16838_assign) {
	_2215b9d6b_optimizeExprModel(_self_, _16838_assign.get()._field_L.get()._field_Model);
	_2215b9d6b_optimizeExprModel(_self_, _16838_assign.get()._field_R.get()._field_Model);
}



inline void _2215bb7a7_optimizeMultiAssign(jule::Ptr<_2215b90e0_scopeDeadCode> _self_, jule::Ptr<_220b4632c_MultiAssign> _17343_assign) {
	{
		auto &expr = _17343_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_2069b851a:;
		if (it != expr.end()) {
			jule::Ptr<_220bceecb_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_2215b9d6b_optimizeExprModel(_self_, _17421_l.get()._field_Model);
				};
			}
			_iter_next_2069b851a:;
			++it;
			goto _iter_begin_2069b851a;
		}
		_iter_end_2069b851a:;
	};
	_2215b9d6b_optimizeExprModel(_self_, _17343_assign.get()._field_R);
}



inline void _2215bba2c_optimizeStmt(jule::Ptr<_2215b90e0_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_2069b9be2:;
			{
				jule::Ptr<_220b42b20_Scope> _18521_scope = _18236_st.cast_ptr<_220b42b20_Scope>(&__jule_any_type22);;
				if (_18521_scope.get()._field_Deferred) {
					_2215bbee4_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_2215b95b8_optimizeChild(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_2069b9d68:;
			{
				_2215ba7b7_optimizeRangeIter(_self_, _18236_st.cast_ptr<_220b447c0_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_2069b9dce:;
			{
				_2215baa3c_optimizeWhileIter(_self_, _18236_st.cast_ptr<_220b43dda_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_2069b9e45:;
			{
				_2215bacb2_optimizeInfIter(_self_, _18236_st.cast_ptr<_220b43967_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_2069b9ebc:;
			{
				_2215bb037_optimizeConditional(_self_, _18236_st.cast_ptr<_220b4367b_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_2069ba044:;
			{
				_2215bb2ac_optimizeMatch(_self_, _18236_st.cast_ptr<_220b4686b_Match>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_2069ba0bb:;
			{
				_2215bb532_optimizeAssign(_self_, _18236_st.cast_ptr<_220b45e75_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_2069ba143:;
			{
				_2215bb7a7_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_220b4632c_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_2069ba1ba:;
			{
				jule::Ptr<_220bceecb_Data> _20621_d = _18236_st.cast_ptr<_220bceecb_Data>(&__jule_any_type24);;
				if (_self_.get()._field_except) {
					goto _match_end_2069b9d02;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type30) {
						_case_begin_2069c0115:;
						{
							_2215ba047_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_2069c0632:;
						{
							_2215b9d6b_optimizeExprModel(_self_, _20621_d.get()._field_Model);
						}
					}
					_match_end_2069c05cc:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_2069ba242:;
			{
				_2215ba047_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_2069ba2b9:;
			{
				_2215ba2bc_pushGoto(_self_, _18236_st.cast_ptr<_220b4564a_GotoSt>(&__jule_any_type43));
				_2215ba047_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_2069ba341:;
			{
				_2215ba542_pushLabel(_self_, _18236_st.cast_ptr<_220b4535e_Label>(&__jule_any_type21));
			}
		}
		_match_end_2069b9d02:;
	};
}



inline void _2215bbc08_optimizeStmts(jule::Ptr<_2215b90e0_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_2215bba2c_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_2069c2ac9:;
	}
	_iter_end_2069c2ac9:;;
}







std::ostream &operator<<(std::ostream &_Stream, _2215b90e0_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _2215bd04a_exprDeadCode static__2215bd677_new(jule::Ptr<_2215b90e0_scopeDeadCode>& _5024_s) {
	return _2215bd04a_exprDeadCode{._field_s=_5024_s};;
}



inline void _2215bd8ec_binary(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220049577_BinopExprModel> _5625_m) {
	_2215c4392_optimize(&(*_self_), _5625_m.get()._field_Left.get()._field_Model);
	_2215c4392_optimize(&(*_self_), _5625_m.get()._field_Right.get()._field_Model);
}



inline void _2215bdb72_unary(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2acc3_UnaryExprModel> _6124_m) {
	_2215c4392_optimize(&(*_self_), _6124_m.get()._field_Expr.get()._field_Model);
}



inline void _2215bdde7_structureLit(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2b19c_StructLitExprModel> _6531_m) {
	{
		auto &expr = _6531_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_2069c5d0d:;
		if (it != expr.end()) {
			jule::Ptr<_220b2aeb0_StructArgExprModel> _6621_arg = *it;
			{
				_2215c4392_optimize(&(*_self_), _6621_arg.get()._field_Expr);
			}
			_iter_next_2069c5d0d:;
			++it;
			goto _iter_begin_2069c5d0d;
		}
		_iter_end_2069c5d0d:;
	};
}



inline void _2215be16c_allocStructure(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2b389_AllocStructLitExprModel> _7133_m) {
	_2215bdde7_structureLit(&(*_self_), _7133_m.get()._field_Lit);
}



inline void _2215be3e2_casting(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2b576_CastingExprModel> _7526_m) {
	_2215c4392_optimize(&(*_self_), _7526_m.get()._field_Expr);
}



inline void _2215be667_args(_2215bd04a_exprDeadCode* _self_, jule::Slice<jule::Any>& _7924_args) {
	{
		auto &expr = _7924_args;
		auto it = expr.begin();
		_iter_begin_2069c8063:;
		if (it != expr.end()) {
			jule::Any _8021_arg = *it;
			{
				_2215c4392_optimize(&(*_self_), _8021_arg);
			}
			_iter_next_2069c8063:;
			++it;
			goto _iter_begin_2069c8063;
		}
		_iter_end_2069c8063:;
	};
}



inline void _2215be8dc_funcCall(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2b763_FnCallExprModel> _8527_m) {
	_2215c4392_optimize(&(*_self_), _8527_m.get()._field_Expr);
	_2215be667_args(&(*_self_), _8527_m.get()._field_Args);
	if ((_8527_m.get()._field_Except != nullptr)) {
		_2215b9860_optimizeBodyChildExceptional((*_self_)._field_s, _8527_m.get()._field_Except);
	};
}



inline void _2215beb62_slice(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2b950_SliceExprModel> _9324_m) {
	_2215be667_args(&(*_self_), _9324_m.get()._field_Elems);
}



inline void _2215bedd7_array(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2cdc4_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_2215c4392_optimize(&(*_self_), _9724_m.get()._field_Elems[0LL]);
	};
	_2215be667_args(&(*_self_), _9724_m.get()._field_Elems);
}



inline void _2215c015c_indexing(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2bb3c_IndexingExprModel> _10427_m) {
	_2215c4392_optimize(&(*_self_), _10427_m.get()._field_Expr.get()._field_Model);
	_2215c4392_optimize(&(*_self_), _10427_m.get()._field_Index.get()._field_Model);
}



inline void _2215c03d2_anonFunc(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2bd29_AnonFnExprModel> _10927_m) {
	_2215bbee4_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _2215c0657_mapExpr(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2c203_MapExprModel> _11326_m) {
	{
		auto &expr = _11326_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_2069ce036:;
		if (it != expr.end()) {
			jule::Ptr<_220b2c016_KeyValPairExprModel> _11421_pair = *it;
			{
				_2215c4392_optimize(&(*_self_), _11421_pair.get()._field_Key);
				_2215c4392_optimize(&(*_self_), _11421_pair.get()._field_Val);
			}
			_iter_next_2069ce036:;
			++it;
			goto _iter_begin_2069ce036;
		}
		_iter_end_2069ce036:;
	};
}



inline void _2215c08cc_slicing(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2c3e0_SlicingExprModel> _12026_m) {
	_2215c4392_optimize(&(*_self_), _12026_m.get()._field_Expr);
	_2215c4392_optimize(&(*_self_), _12026_m.get()._field_Left);
	if ((_12026_m.get()._field_Right != nullptr)) {
		_2215c4392_optimize(&(*_self_), _12026_m.get()._field_Right);
	};
}



inline void _2215c0b52_traitSub(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2c5cc_TraitSubIdentExprModel> _12827_m) {
	_2215c4392_optimize(&(*_self_), _12827_m.get()._field_Expr);
}



inline void _2215c0dc7_structureSub(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2c9ea_StructSubIdentExprModel> _13231_m) {
	_2215c4392_optimize(&(*_self_), _13231_m.get()._field_Expr.get()._field_Model);
}



inline void _2215c114c_commonSub(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2d29d_CommonSubIdentExprModel> _13628_m) {
	_2215c4392_optimize(&(*_self_), _13628_m.get()._field_Expr);
}



inline void _2215c13c2_tuple(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2d48a_TupleExprModel> _14024_m) {
	{
		auto &expr = _14024_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_2069d3535:;
		if (it != expr.end()) {
			jule::Ptr<_220bceecb_Data> _14121_d = *it;
			{
				_2215c4392_optimize(&(*_self_), _14121_d.get()._field_Model);
			}
			_iter_next_2069d3535:;
			++it;
			goto _iter_begin_2069d3535;
		}
		_iter_end_2069d3535:;
	};
}



inline void _2215c1647_newCall(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2dc3d_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_2215c4392_optimize(&(*_self_), _14626_m.get()._field_Init);
	};
}



inline void _2215c18bc_outCall(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2d677_BuiltinOutCallExprModel> _15226_m) {
	_2215c4392_optimize(&(*_self_), _15226_m.get()._field_Expr);
}



inline void _2215c1b42_outlnCall(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2d864_BuiltinOutlnCallExprModel> _15628_m) {
	_2215c4392_optimize(&(*_self_), _15628_m.get()._field_Expr);
}



inline void _2215c1db7_panicCall(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2de2a_BuiltinPanicCallExprModel> _16028_m) {
	_2215c4392_optimize(&(*_self_), _16028_m.get()._field_Expr);
}



inline void _2215c213c_assertCall(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2e117_BuiltinAssertCallExprModel> _16429_m) {
	_2215c4392_optimize(&(*_self_), _16429_m.get()._field_Expr);
}



inline void _2215c23b2_errorCall(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b30217_BuiltinErrorCallExprModel> _16828_m) {
	_2215c4392_optimize(&(*_self_), _16828_m.get()._field_Err.get()._field_Model);
}



inline void _2215c2637_makeCall(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2e304_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_2215c4392_optimize(&(*_self_), _17227_m.get()._field_Len);
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_2215c4392_optimize(&(*_self_), _17227_m.get()._field_Cap);
	};
}



inline void _2215c28ac_appendCall(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2e4e1_BuiltinAppendCallExprModel> _18129_m) {
	_2215c4392_optimize(&(*_self_), _18129_m.get()._field_Dest);
	_2215c4392_optimize(&(*_self_), _18129_m.get()._field_Elements);
}



inline void _2215c2b32_lenCall(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2e6cd_BuiltinLenCallExprModel> _18626_m) {
	_2215c4392_optimize(&(*_self_), _18626_m.get()._field_Expr.get()._field_Model);
}



inline void _2215c2da7_capCall(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2e8ba_BuiltinCapCallExprModel> _19026_m) {
	_2215c4392_optimize(&(*_self_), _19026_m.get()._field_Expr.get()._field_Model);
}



inline void _2215c312c_cloneCall(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2da51_BuiltinCloneCallExprModel> _19428_m) {
	_2215c4392_optimize(&(*_self_), _19428_m.get()._field_Expr);
}



inline void _2215c33a2_deleteCall(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b2c7b9_BuiltinDeleteCallExprModel> _19829_m) {
	_2215c4392_optimize(&(*_self_), _19829_m.get()._field_Dest.get()._field_Model);
	if ((_19829_m.get()._field_Key != nullptr)) {
		_2215c4392_optimize(&(*_self_), _19829_m.get()._field_Key.get()._field_Model);
	};
}



inline void _2215c3627_sizeof(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b30404_SizeofExprModel> _20525_m) {
	_2215c4392_optimize(&(*_self_), _20525_m.get()._field_Expr);
}



inline void _2215c389c_alignof(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b305e1_AlignofExprModel> _20926_m) {
	_2215c4392_optimize(&(*_self_), _20926_m.get()._field_Expr);
}



inline void _2215c3b22_integratedToStr(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b309ba_IntegratedToStrExprModel> _21334_m) {
	_2215c4392_optimize(&(*_self_), _21334_m.get()._field_Expr);
}



inline void _2215c3d97_free(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b30d94_FreeExprModel> _21723_m) {
	_2215c4392_optimize(&(*_self_), _21723_m.get()._field_Expr);
}



inline void _2215c411c_backendEmit(_2215bd04a_exprDeadCode* _self_, jule::Ptr<_220b30ba7_BackendEmitExprModel> _22130_m) {
	_2215be667_args(&(*_self_), _22130_m.get()._field_Exprs);
}



inline void _2215c4392_optimize(_2215bd04a_exprDeadCode* _self_, jule::Any& _22528_model) {
	{
		auto &_match_expr{ _22528_model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_2069e1125:;
			{
				_2215bd8ec_binary(&(*_self_), _22528_model.cast_ptr<_220049577_BinopExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_2069e119c:;
			{
				_2215bdb72_unary(&(*_self_), _22528_model.cast_ptr<_220b2acc3_UnaryExprModel>(&__jule_any_type75));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_2069e1224:;
			{
				_2215bdde7_structureLit(&(*_self_), _22528_model.cast_ptr<_220b2b19c_StructLitExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_2069e15ed:;
			{
				_2215be16c_allocStructure(&(*_self_), _22528_model.cast_ptr<_220b2b389_AllocStructLitExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_2069e1664:;
			{
				_2215be3e2_casting(&(*_self_), _22528_model.cast_ptr<_220b2b576_CastingExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_2069e16db:;
			{
				_2215be8dc_funcCall(&(*_self_), _22528_model.cast_ptr<_220b2b763_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_2069e1763:;
			{
				_2215beb62_slice(&(*_self_), _22528_model.cast_ptr<_220b2b950_SliceExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_2069e17da:;
			{
				_2215bedd7_array(&(*_self_), _22528_model.cast_ptr<_220b2cdc4_ArrayExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_2069e1862:;
			{
				_2215c015c_indexing(&(*_self_), _22528_model.cast_ptr<_220b2bb3c_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_2069e18d9:;
			{
				_2215c03d2_anonFunc(&(*_self_), _22528_model.cast_ptr<_220b2bd29_AnonFnExprModel>(&__jule_any_type106));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_2069e1961:;
			{
				_2215c0657_mapExpr(&(*_self_), _22528_model.cast_ptr<_220b2c203_MapExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_2069e19d8:;
			{
				_2215c08cc_slicing(&(*_self_), _22528_model.cast_ptr<_220b2c3e0_SlicingExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_2069e1a60:;
			{
				_2215c0b52_traitSub(&(*_self_), _22528_model.cast_ptr<_220b2c5cc_TraitSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_2069e1ad7:;
			{
				_2215c0dc7_structureSub(&(*_self_), _22528_model.cast_ptr<_220b2c9ea_StructSubIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_2069e1b5e:;
			{
				_2215c114c_commonSub(&(*_self_), _22528_model.cast_ptr<_220b2d29d_CommonSubIdentExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_2069e1bd6:;
			{
				_2215c13c2_tuple(&(*_self_), _22528_model.cast_ptr<_220b2d48a_TupleExprModel>(&__jule_any_type89));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_2069e1c5d:;
			{
				_2215c18bc_outCall(&(*_self_), _22528_model.cast_ptr<_220b2d677_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_2069e1cd5:;
			{
				_2215c1b42_outlnCall(&(*_self_), _22528_model.cast_ptr<_220b2d864_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_2069e1d5c:;
			{
				_2215c1647_newCall(&(*_self_), _22528_model.cast_ptr<_220b2dc3d_BuiltinNewCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_2069e1dd4:;
			{
				_2215c1db7_panicCall(&(*_self_), _22528_model.cast_ptr<_220b2de2a_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_2069e1e5b:;
			{
				_2215c213c_assertCall(&(*_self_), _22528_model.cast_ptr<_220b2e117_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_2069e1ed3:;
			{
				_2215c23b2_errorCall(&(*_self_), _22528_model.cast_ptr<_220b30217_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_2069e205a:;
			{
				_2215c2637_makeCall(&(*_self_), _22528_model.cast_ptr<_220b2e304_BuiltinMakeCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_2069e20d2:;
			{
				_2215c28ac_appendCall(&(*_self_), _22528_model.cast_ptr<_220b2e4e1_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_2069e2159:;
			{
				_2215c2b32_lenCall(&(*_self_), _22528_model.cast_ptr<_220b2e6cd_BuiltinLenCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_2069e21d1:;
			{
				_2215c2da7_capCall(&(*_self_), _22528_model.cast_ptr<_220b2e8ba_BuiltinCapCallExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_2069e2258:;
			{
				_2215c312c_cloneCall(&(*_self_), _22528_model.cast_ptr<_220b2da51_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_2069e22d0:;
			{
				_2215c33a2_deleteCall(&(*_self_), _22528_model.cast_ptr<_220b2c7b9_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_2069e2357:;
			{
				_2215c3627_sizeof(&(*_self_), _22528_model.cast_ptr<_220b30404_SizeofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_2069e23ce:;
			{
				_2215c389c_alignof(&(*_self_), _22528_model.cast_ptr<_220b305e1_AlignofExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_2069e2456:;
			{
				_2215c3b22_integratedToStr(&(*_self_), _22528_model.cast_ptr<_220b309ba_IntegratedToStrExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_2069e24cd:;
			{
				_2215c3d97_free(&(*_self_), _22528_model.cast_ptr<_220b30d94_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_2069e2555:;
			{
				_2215c411c_backendEmit(&(*_self_), _22528_model.cast_ptr<_220b30ba7_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_2069e1323:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2215bd04a_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21d84ae02_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21d8d3b38_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21e35075d_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21e745966_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21d88b30a_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21da0794e_scopeOptimizer> static__21d843b75_new(jule::Ptr<_220b42b20_Scope> _4523_scope) {
	return jule::new_ptr<_21da0794e_scopeOptimizer>(_21da0794e_scopeOptimizer{._field_scope=_4523_scope});;
}



inline void _21d85b385_setCurrentStmt(_21da0794e_scopeOptimizer* _self_, jule::Any _5137_stmt) {
	(*_self_)._field_scope.get()._field_Stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5137_stmt))))));
}



inline void _21d85d9a3_optimizeData(_21da0794e_scopeOptimizer* _self_, jule::Ptr<_220bceecb_Data> _5535_d) {
	{
		auto &_match_expr{ _5535_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_206a2c1d8:;
			{
				jule::Ptr<_220b2b763_FnCallExprModel> _5821_m = _5535_d.get()._field_Model.cast_ptr<_220b2b763_FnCallExprModel>(&__jule_any_type35);;
				if (_21b5387c3_Production) {
					if (((!(_220b321c5_IsBuiltin(_5821_m.get()._field_Func.ptr()))) && _21da09a61_isStdPackage(_5821_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("debug", 5)))) {
						_21d85b385_setCurrentStmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_206a2bec9:;
	};
	static__21db86c10_optimize(_5535_d.get()._field_Model);
}



inline void _21d86b054_optimizeVar(_21da0794e_scopeOptimizer* _self_, jule::Ptr<_220b8746c_Var> _7034_v) {
	if ((_7034_v.get()._field_Value != nullptr)) {
		static__21db86c10_optimize(_7034_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _21d88a78d_optimizeConditional(_21da0794e_scopeOptimizer* _self_, jule::Ptr<_220b4367b_Conditional> _7642_c) {
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_206a302da:;
		if (it != expr.end()) {
			jule::Ptr<_220b4301b_If> _7721_elif = *it;
			{
				static__21db86c10_optimize(_7721_elif.get()._field_Expr);
				_21d9bc826_optimizeChild(&(*_self_), _7721_elif.get()._field_Scope);
			}
			_iter_next_206a302da:;
			++it;
			goto _iter_begin_206a302da;
		}
		_iter_end_206a302da:;
	};
	if ((_7642_c.get()._field_Default != nullptr)) {
		_21d9bc826_optimizeChild(&(*_self_), _7642_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_21da42e0c_Cond))) {
		return;;
	};
	jule::Bool _8917_constCase = false;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_206a32166:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_220b4301b_If> _9221_elif = *it;
			{
				if ((!(_21da29ee3_isConstantValidConditionalCase(_9221_elif)))) {
					goto _iter_next_206a32166;
				};
				_8917_constCase=true;
				_7642_c.get()._field_Elifs=_7642_c.get()._field_Elifs.slice(0LL,_9214_i);
				_7642_c.get()._field_Default=jule::new_ptr<_220b43307_Else>(_220b43307_Else{._field_Scope=_9221_elif.get()._field_Scope});
				goto _iter_end_206a32166;
			}
			_iter_next_206a32166:;
			++it;
			_9214_i++;
			goto _iter_begin_206a32166;
		}
		_iter_end_206a32166:;
	};
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_220b4301b_If>* _10917_i = (&(_7642_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_220b4301b_If>* _11013_end = (&(_7642_c.get()._field_Elifs[(_7642_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_21db9714e_isUnreachableConditionalCase((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_206a35378:;
	}
	_iter_end_206a35378:;;
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_constCase))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_206a369d9:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_220b4301b_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_206a369d9:;
			++it;
			_12913_j++;
			goto _iter_begin_206a369d9;
		}
		_iter_end_206a369d9:;
	};
	if ((_12817_only != -1LL)) {
		_21d85b385_setCurrentStmt(&(*_self_), jule::Any(_7642_c.get()._field_Elifs[_12817_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _21d8904c9_buildDefaultConstatTrueCase(_21da0794e_scopeOptimizer* _self_, jule::Ptr<_220b473b6_Case> _14550_case, jule::I64& _14568_i, jule::Ptr<_220b4686b_Match>& _14581_m) {
	_14550_case.get()._field_Exprs=nullptr;
	jule::I64 _14713_start = _14568_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14550_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_206a394ae;
			};
			jule::Any &_15322_stmt = _14550_case.get()._field_Scope.get()._field_Stmts[(_14550_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type == &__jule_any_type50) {
					_case_begin_206a39b1e:;
					{
						(_14568_i)++;
						if ((_14568_i >= _14581_m.get()._field_Cases.len())) {
							_15322_stmt=jule::Any(_14581_m.get()._field_Default.get()._field_Scope, &__jule_any_type22);
							goto _iter_end_206a394ae;
						};
						_14550_case=_14581_m.get()._field_Cases[_14568_i];
						_15322_stmt=jule::Any(_14550_case.get()._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_206a3b060:;
					{
						goto _iter_end_206a394ae;
					}
				}
				_match_end_206a3ae72:;
			};
		}
	_iter_next_206a394ae:;
	}
	_iter_end_206a394ae:;;
	_14581_m.get()._field_Default=_14581_m.get()._field_Cases[_14713_start];
	_14581_m.get()._field_Cases=_14581_m.get()._field_Cases.slice(0LL,_14713_start);
}



inline void _21d891970_optimizeMatch(_21da0794e_scopeOptimizer* _self_, jule::Ptr<_220b4686b_Match> _17136_m) {
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_206a3d13e:;
		if (it != expr.end()) {
			jule::Ptr<_220b473b6_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_206a3d98b:;
					if (it != expr.end()) {
						jule::Ptr<_220bceecb_Data> _17325_expr = *it;
						{
							static__21db86c10_optimize(_17325_expr.get()._field_Model);
						}
						_iter_next_206a3d98b:;
						++it;
						goto _iter_begin_206a3d98b;
					}
					_iter_end_206a3d98b:;
				};
				_21d9bc826_optimizeChild(&(*_self_), _17221_case.get()._field_Scope);
			}
			_iter_next_206a3d13e:;
			++it;
			goto _iter_begin_206a3d13e;
		}
		_iter_end_206a3d13e:;
	};
	if ((_17136_m.get()._field_Default != nullptr)) {
		_21d9bc826_optimizeChild(&(*_self_), _17136_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_21da42e0c_Cond))) {
		return;;
	};
	jule::Bool _18617_constCase = false;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_206a4062a:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_220b473b6_Case> _18925_case = *it;
			{
				if ((!(_21db912d0_isConstantValidMatchCase(_18925_case)))) {
					goto _iter_next_206a4062a;
				};
				_18617_constCase=true;
				_21d8904c9_buildDefaultConstatTrueCase(&(*_self_), _18925_case,_18918_i,_17136_m);
				goto _iter_end_206a4062a;
			}
			_iter_next_206a4062a:;
			++it;
			_18918_i++;
			goto _iter_begin_206a4062a;
		}
		_iter_end_206a4062a:;
	};
	if ((_17136_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_220b473b6_Case>* _20317_i = (&(_17136_m.get()._field_Cases[0LL]));;
	jule::Ptr<_220b473b6_Case>* _20413_end = (&(_17136_m.get()._field_Cases[(_17136_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_21db98150_isUnreachableMatchCase((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_206a43342:;
	}
	_iter_end_206a43342:;;
	if ((!(_18617_constCase))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_206a443ed:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_220b473b6_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_206a443ed:;
			++it;
			_21913_j++;
			goto _iter_begin_206a443ed;
		}
		_iter_end_206a443ed:;
	};
	if ((_21817_only != -1LL)) {
		_21d85b385_setCurrentStmt(&(*_self_), jule::Any(_17136_m.get()._field_Cases[_21817_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _21d8929e8_optimizeRangeIter(_21da0794e_scopeOptimizer* _self_, jule::Ptr<_220b447c0_RangeIter> _23540_it) {
	static__21db86c10_optimize(_23540_it.get()._field_Expr.get()._field_Model);
	_21d9bc826_optimizeChild(&(*_self_), _23540_it.get()._field_Scope);
}



inline void _21d892e9e_optimizeWhileIter(_21da0794e_scopeOptimizer* _self_, jule::Ptr<_220b43dda_WhileIter> _24040_it) {
	static__21db86c10_optimize(_24040_it.get()._field_Expr);
	_21d9b51c0_optimizeStmt(&(*_self_), _24040_it.get()._field_Next);
	_21d9bc826_optimizeChild(&(*_self_), _24040_it.get()._field_Scope);
}



inline jule::Bool _21d8bd3b4_substr(_21da0794e_scopeOptimizer* _self_, jule::Ptr<_220b45e75_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type99) {
			_case_begin_206a48567:;
			{
				jule::Ptr<_220b2c3e0_SlicingExprModel> _24921_sem = _24629_a.get()._field_R.get()._field_Model.cast_ptr<_220b2c3e0_SlicingExprModel>(&__jule_any_type99);;
				if ((_24921_sem.get()._field_Expr == _24629_a.get()._field_L.get()._field_Model)) {
					_21d85b385_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_21e745966_MutSlicingExprModel>(_21e745966_MutSlicingExprModel{._field_Token=_24921_sem.get()._field_Token, ._field_Expr=_24921_sem.get()._field_Expr, ._field_Left=_24921_sem.get()._field_Left, ._field_Right=_24921_sem.get()._field_Right}), &__jule_any_type127));
					return true;;
				};
			}
		}
		_match_end_206a48512:;
	};
	return false;;
}



inline jule::Bool _21d8c619c_strInsert(_21da0794e_scopeOptimizer* _self_, jule::Ptr<_220b45e75_Assign> _26332_a) {
	{
		auto &_match_expr{ _26332_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_206a4a987:;
			{
				jule::Ptr<_220049577_BinopExprModel> _26621_m = _26332_a.get()._field_R.get()._field_Model.cast_ptr<_220049577_BinopExprModel>(&__jule_any_type118);;
				if ((_26621_m.get()._field_Right.get()._field_Model == _26332_a.get()._field_L.get()._field_Model)) {
					_21d85b385_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_21d88b30a_StrInsertBeginExprModel>(_21d88b30a_StrInsertBeginExprModel{._field_Dest=_26332_a.get()._field_L.get()._field_Model, ._field_Expr=_26621_m.get()._field_Left.get()._field_Model}), &__jule_any_type128));
					return true;;
				};
			}
		}
		_match_end_206a4a6ce:;
	};
	return false;;
}



inline jule::Bool _21d8dc768_strAssign(_21da0794e_scopeOptimizer* _self_, jule::Ptr<_220b45e75_Assign> _27832_a) {
	if ((_27832_a.get()._field_Op.get()._field_Kind != jule::Str("=", 1))) {
		return false;;
	};
	jule::Ptr<_220c10baa_Prim> _28213_lp = _220c0d2e5_Prim(_27832_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_220c13dde_IsStr(_28213_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_21d8bd3b4_substr(&(*_self_), _27832_a) || _21d8c619c_strInsert(&(*_self_), _27832_a)) {
			_case_begin_206a4e35e:;
			{
				return true;;
			}
		}
		_match_end_206a4e2c6:;
	};
	return false;;
}



inline void _21d96bd7a_optimizeAssign(_21da0794e_scopeOptimizer* _self_, jule::Ptr<_220b45e75_Assign> _29437_assign) {
	if ((_21d86798a_Copy && _21d8dc768_strAssign(&(*_self_), _29437_assign))) {
		return;;
	};
	static__21db86c10_optimize(_29437_assign.get()._field_L.get()._field_Model);
	static__21db86c10_optimize(_29437_assign.get()._field_R.get()._field_Model);
	{
		auto &_match_expr{ _29437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_206a51262:;
			{
				if ((_21d96d9c5_Math && (_220c0e747_Struct(_29437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_29437_assign.get()._field_Op.get()._field_Kind=_29437_assign.get()._field_Op.get()._field_Kind.slice(0LL,(_29437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _30725_model = jule::Any(jule::new_ptr<_220049577_BinopExprModel>(_220049577_BinopExprModel{._field_Left=_29437_assign.get()._field_L, ._field_Right=_29437_assign.get()._field_R, ._field_Op=_29437_assign.get()._field_Op}), &__jule_any_type118);;
					static__21db86c10_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type == &__jule_any_type118) {
							_case_begin_206a536d7:;
							{
								_29437_assign.get()._field_R=jule::new_ptr<_22001ab86_OperandExprModel>((*(_29437_assign.get()._field_R)));
								_29437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_29437_assign.get()._field_R.get()._field_Model=_30725_model;
								return;;
							}
						}
						_match_end_206a53484:;
					};
					_29437_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_206a5110d:;
	};
	if (_21d8bb219_Append) {
		{
			auto &_match_expr{ _29437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_206a5a1c2:;
				{
					jule::Ptr<_220b2e4e1_BuiltinAppendCallExprModel> _32825_m = _29437_assign.get()._field_R.get()._field_Model.cast_ptr<_220b2e4e1_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					{
						auto &_match_expr{ _32825_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type84) {
							_case_begin_206a5b25b:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_Dest };
									
									if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type72) {
										_case_begin_206a5ba0e:;
										{
											_21d85b385_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_21e35075d_PushToSliceExprModel>(_21e35075d_PushToSliceExprModel{._field_Dest=_32825_m.get()._field_Dest, ._field_Elems=_32825_m.get()._field_Elements.cast_ptr<_220b2b950_SliceExprModel>(&__jule_any_type84)}), &__jule_any_type129));
										}
									}
									_match_end_206a5b9a9:;
								};
							}
						}
						_match_end_206a5b04c:;
					};
				}
			}
			_match_end_206a51d56:;
		};
	};
}



inline void _21d96c96e_optimizeMultiAssign(_21da0794e_scopeOptimizer* _self_, jule::Ptr<_220b4632c_MultiAssign> _34442_assign) {
	{
		auto &expr = _34442_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_206a5a5ce:;
		if (it != expr.end()) {
			jule::Ptr<_220bceecb_Data> _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__21db86c10_optimize(_34521_l.get()._field_Model);
				};
			}
			_iter_next_206a5a5ce:;
			++it;
			goto _iter_begin_206a5a5ce;
		}
		_iter_end_206a5a5ce:;
	};
	static__21db86c10_optimize(_34442_assign.get()._field_R);
}



inline void _21d9b19e6_optimizeRet(_21da0794e_scopeOptimizer* _self_, jule::Ptr<_220b47ce0_RetSt> _35334_r) {
	static__21db86c10_optimize(_35334_r.get()._field_Expr);
}



inline void _21d9b51c0_optimizeStmt(_21da0794e_scopeOptimizer* _self_, jule::Any _35735_stmt) {
	{
		auto &_match_expr{ _35735_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_206a5ded9:;
			{
				_21d9bc826_optimizeChild(&(*_self_), _35735_stmt.cast_ptr<_220b42b20_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_206a5e061:;
			{
				_21d85d9a3_optimizeData(&(*_self_), _35735_stmt.cast_ptr<_220bceecb_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_206a5e0c7:;
			{
				_21d86b054_optimizeVar(&(*_self_), _35735_stmt.cast_ptr<_220b8746c_Var>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_206a5e13d:;
			{
				_21d88a78d_optimizeConditional(&(*_self_), _35735_stmt.cast_ptr<_220b4367b_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_206a5e1a4:;
			{
				_21d8929e8_optimizeRangeIter(&(*_self_), _35735_stmt.cast_ptr<_220b447c0_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_206a5e22b:;
			{
				_21d892e9e_optimizeWhileIter(&(*_self_), _35735_stmt.cast_ptr<_220b43dda_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_206a5e2a3:;
			{
				_21d9bc826_optimizeChild(&(*_self_), _35735_stmt.cast_ptr<_220b43967_InfIter>(&__jule_any_type37).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_206a5e32a:;
			{
				_21d96bd7a_optimizeAssign(&(*_self_), _35735_stmt.cast_ptr<_220b45e75_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_206a5e3a2:;
			{
				_21d96c96e_optimizeMultiAssign(&(*_self_), _35735_stmt.cast_ptr<_220b4632c_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_206a5e429:;
			{
				_21d891970_optimizeMatch(&(*_self_), _35735_stmt.cast_ptr<_220b4686b_Match>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_206a5e4a1:;
			{
				_21d9b19e6_optimizeRet(&(*_self_), _35735_stmt.cast_ptr<_220b47ce0_RetSt>(&__jule_any_type52));
			}
		}
		_match_end_206a5dd1e:;
	};
}



inline void _21d9bc826_optimizeChild(_21da0794e_scopeOptimizer* _self_, jule::Ptr<_220b42b20_Scope> _38436_child) {
	jule::Ptr<_21da0794e_scopeOptimizer> _38517_so = static__21d843b75_new(_38436_child);;
	_21d9d3a18_optimize(_38517_so.ptr());
}



inline void _21d9d3a18_optimize(_21da0794e_scopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_206a65650:;
		if (it != expr.end()) {
			jule::I64 _39114_i = it - expr.begin();
			jule::Any _39121_stmt = *it;
			{
				(*_self_)._field_i=_39114_i;
				_21d9b51c0_optimizeStmt(&(*_self_), _39121_stmt);
			}
			_iter_next_206a65650:;
			++it;
			_39114_i++;
			goto _iter_begin_206a65650;
		}
		_iter_end_206a65650:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _21da0794e_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__21db86c10_optimize(jule::Any& _5829_model) {
	if (_2214bb971_exprEnabled) {
		jule::Ptr<_21e043709_exprOptimizer> _6121_exop = jule::new_ptr<_21e043709_exprOptimizer>(_21e043709_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5829_model))))});;
		_21e142462_do(_6121_exop.ptr());
	};
}



inline jule::Bool _21db9c055_strCond(_21e043709_exprOptimizer* _self_, jule::Ptr<_220049577_BinopExprModel> _6826_m) {
	jule::Ptr<_220c10baa_Prim> _6913_lp = _220c0d2e5_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_220c13dde_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((_6826_m.get()._field_Op.get()._field_Kind != jule::Str("==", 2)) && (_6826_m.get()._field_Op.get()._field_Kind != jule::Str("!=", 2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type48) {
			_case_begin_206a6e1c5:;
			{
				({
					jule::Ptr<_22001ab86_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_22001ab86_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_206a6e170:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type48) {
			_case_begin_206a6d900:;
			{
				goto _match_end_206a6ee62;
			}
		}
		else {
			_case_begin_206a702e7:;
			{
				return true;;
			}
		}
		_match_end_206a6ee62:;
	};
	_julec_label_opt:;
	jule::Ptr<_220074816_Const> _8813_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_220074816_Const>(&__jule_any_type48);;
	if ((!(_220b27d14_ReadStr(_8813_c.ptr()).empty()))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_206a719d0:;
			{
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_220b2d29d_CommonSubIdentExprModel>(_220b2d29d_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type74);
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_206a71a46:;
			{
				jule::Ptr<_21d81d743_Token> _10021_op = _6826_m.get()._field_Op;;
				_10021_op.get()._field_Kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_220b2acc3_UnaryExprModel>(_220b2acc3_UnaryExprModel{._field_Expr=jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Model=jule::Any(jule::new_ptr<_220b2d29d_CommonSubIdentExprModel>(_220b2d29d_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type74), }), ._field_Op=_10021_op}), &__jule_any_type75);
			}
		}
		_match_end_206a71271:;
	};
	return true;;
}



inline void _21dba0322_binary(_21e043709_exprOptimizer* _self_, jule::Ptr<_220049577_BinopExprModel> _11625_m) {
	static__21db86c10_optimize(_11625_m.get()._field_Left.get()._field_Model);
	static__21db86c10_optimize(_11625_m.get()._field_Right.get()._field_Model);
	{
		auto &_match_expr{ _11625_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type48) {
			_case_begin_206a730a8:;
			{
				goto _match_end_206a7550b;
			}
		}
		else {
			_case_begin_206a75660:;
			{
				return;;
			}
		}
		_match_end_206a7550b:;
	};
	if ((_21da42e0c_Cond && _21db9c055_strCond(&(*_self_), _11625_m))) {
		return;;
	};
	if ((!(_21d96d9c5_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _11625_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_206a766a5:;
			{
				jule::Bool _13618_ok = false;;
				jule::U64 _13622_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _21e145da0_checkForBitShiftOpt(_11625_m.get()._field_Left,_11625_m.get()._field_Right);
					_13618_ok = __jule_assign_result.__jule_result_arg0;
					_13622_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_13618_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_220074816_Const> _13925_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_220074816_Const>(&__jule_any_type48);;
					_220b28551_SetU64(_13925_c.ptr(), _13622_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_206a7671b:;
			{
				jule::Bool _14418_ok = false;;
				jule::U64 _14422_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _21e145da0_checkForBitShiftOpt(_11625_m.get()._field_Left,_11625_m.get()._field_Right);
					_14418_ok = __jule_assign_result.__jule_result_arg0;
					_14422_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_14418_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_220074816_Const> _14725_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_220074816_Const>(&__jule_any_type48);;
					_220b28551_SetU64(_14725_c.ptr(), _14422_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_206a76782:;
			{
				jule::Ptr<_220074816_Const> _15221_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_220074816_Const>(&__jule_any_type48);;
				jule::F64 _15317_d = _220b282dc_AsF64(_15221_c.ptr());;
				if ((_15317_d == 2LL)) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_220b2841e_SetI64(_15221_c.ptr(), 1LL);
				};
			}
		}
		_match_end_206a764b8:;
	};
	jule::Any _15917_model = jule::Any(jule::new_ptr<_21d84ae02_UnsafeBinopExprModel>(_21d84ae02_UnsafeBinopExprModel{._field_Node=_11625_m}), &__jule_any_type130);;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15917_model))))));
}



inline void _21dba1235_unary(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2acc3_UnaryExprModel> _16324_m) {
	static__21db86c10_optimize(_16324_m.get()._field_Expr.get()._field_Model);
	if ((_21da39860_Ptr && (_16324_m.get()._field_Op.get()._field_Kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16324_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_206a7d6e0:;
				{
					jule::Ptr<_220b2acc3_UnaryExprModel> _16825_um = _16324_m.get()._field_Expr.get()._field_Model.cast_ptr<_220b2acc3_UnaryExprModel>(&__jule_any_type75);;
					if ((_16825_um.get()._field_Op.get()._field_Kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16825_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_206a7d68a:;
		};
	};
}



inline void _21dba91c7_structureLit(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2b19c_StructLitExprModel> _17631_m) {
	{
		auto &expr = _17631_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_206a802b3:;
		if (it != expr.end()) {
			jule::Ptr<_220b2aeb0_StructArgExprModel> _17721_arg = *it;
			{
				static__21db86c10_optimize(_17721_arg.get()._field_Expr);
			}
			_iter_next_206a802b3:;
			++it;
			goto _iter_begin_206a802b3;
		}
		_iter_end_206a802b3:;
	};
}



inline void _21dbc0474_allocStructure(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2b389_AllocStructLitExprModel> _18233_m) {
	_21dba91c7_structureLit(&(*_self_), _18233_m.get()._field_Lit);
}



inline void _21dbc18e8_casting(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2b576_CastingExprModel> _18626_m) {
	static__21db86c10_optimize(_18626_m.get()._field_Expr);
}



inline void _21dbe738b_args(_21e043709_exprOptimizer* _self_, jule::Slice<jule::Any>& _19024_args) {
	{
		auto &expr = _19024_args;
		auto it = expr.begin();
		_iter_begin_206a81ca9:;
		if (it != expr.end()) {
			jule::I64 _19114_i = it - expr.begin();
			jule::Any _19121_arg = *it;
			{
				static__21db86c10_optimize(_19121_arg);
				_19024_args[_19114_i]=_19121_arg;
			}
			_iter_next_206a81ca9:;
			++it;
			_19114_i++;
			goto _iter_begin_206a81ca9;
		}
		_iter_end_206a81ca9:;
	};
}



inline void _21dc10ccd_scope(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b42b20_Scope>& _19725_s) {
	jule::Ptr<_21da0794e_scopeOptimizer> _19817_scopt = static__21d843b75_new(_19725_s);;
	_21d9d3a18_optimize(_19817_scopt.ptr());
}



inline void _21dc25c27_funcCall(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2b763_FnCallExprModel> _20227_m) {
	static__21db86c10_optimize(_20227_m.get()._field_Expr);
	_21dbe738b_args(&(*_self_), _20227_m.get()._field_Args);
	if ((_20227_m.get()._field_Except != nullptr)) {
		_21dc10ccd_scope(&(*_self_), _20227_m.get()._field_Except);
	};
}



inline void _21dc471dd_slice(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2b950_SliceExprModel> _21024_m) {
	_21dbe738b_args(&(*_self_), _21024_m.get()._field_Elems);
}



inline void _21dc7456c_array(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2cdc4_ArrayExprModel> _21424_m) {
	if (((_21424_m.get()._field_Elems.len() == 2LL) && (_21424_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _21621_elem = _21424_m.get()._field_Elems[0LL];;
		static__21db86c10_optimize(_21621_elem);
		_21424_m.get()._field_Elems[0LL]=_21621_elem;
	};
	_21dbe738b_args(&(*_self_), _21424_m.get()._field_Elems);
}



inline void _21dc82701_indexing(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2bb3c_IndexingExprModel> _22327_m) {
	static__21db86c10_optimize(_22327_m.get()._field_Expr.get()._field_Model);
	static__21db86c10_optimize(_22327_m.get()._field_Index.get()._field_Model);
	if ((!(_21d9a03ca_Access))) {
		return;;
	};
	jule::Bool _22913_array = (_220c0e00a_Arr(_22327_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_22913_array && _220bd088e_IsConst(_22327_m.get()._field_Index.ptr()))) {
		jule::Any _23221_model = jule::Any(jule::new_ptr<_21d8d3b38_UnsafeIndexingExprModel>(_21d8d3b38_UnsafeIndexingExprModel{._field_Node=_22327_m}), &__jule_any_type131);;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_23221_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22327_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_206a8a6ca:;
			{
				jule::Ptr<_220b8746c_Var> _23817_i = _22327_m.get()._field_Index.get()._field_Model.cast_ptr<_220b8746c_Var>(&__jule_any_type9);;
				if ((_23817_i.get()._field_Mutable || (_23817_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_206a8a675;
				};
				{
					auto &_match_expr{ _22327_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type9) {
						_case_begin_206a8bea1:;
						{
							jule::Ptr<_220b8746c_Var> _24421_r = _22327_m.get()._field_Expr.get()._field_Model.cast_ptr<_220b8746c_Var>(&__jule_any_type9);;
							if ((_23817_i.get()._field_IterRelation.get()._field_Range == _24421_r)) {
								jule::Any _24729_model = jule::Any(jule::new_ptr<_21d8d3b38_UnsafeIndexingExprModel>(_21d8d3b38_UnsafeIndexingExprModel{._field_Node=_22327_m}), &__jule_any_type131);;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24729_model))))));
							};
						}
					}
					_match_end_206a8be4b:;
				};
			}
		}
		_match_end_206a8a675:;
	};
}



inline void _21dc991a7_anonFunc(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2bd29_AnonFnExprModel> _25427_m) {
	_21dc10ccd_scope(&(*_self_), _25427_m.get()._field_Func.get()._field_Scope);
}



inline void _21dca3b95_mapExpr(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2c203_MapExprModel> _25826_m) {
	{
		auto &expr = _25826_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_206a8e5be:;
		if (it != expr.end()) {
			jule::Ptr<_220b2c016_KeyValPairExprModel> _25921_pair = *it;
			{
				static__21db86c10_optimize(_25921_pair.get()._field_Key);
				static__21db86c10_optimize(_25921_pair.get()._field_Val);
			}
			_iter_next_206a8e5be:;
			++it;
			goto _iter_begin_206a8e5be;
		}
		_iter_end_206a8e5be:;
	};
}



inline void _21dd5552c_slicing(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2c3e0_SlicingExprModel> _26526_m) {
	static__21db86c10_optimize(_26526_m.get()._field_Expr);
	static__21db86c10_optimize(_26526_m.get()._field_Left);
	if ((_26526_m.get()._field_Right != nullptr)) {
		static__21db86c10_optimize(_26526_m.get()._field_Right);
	};
}



inline void _21dd58442_traitSub(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2c5cc_TraitSubIdentExprModel> _27327_m) {
	static__21db86c10_optimize(_27327_m.get()._field_Expr);
}



inline void _21dd5dbd9_structureSub(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2c9ea_StructSubIdentExprModel> _27731_m) {
	static__21db86c10_optimize(_27731_m.get()._field_Expr.get()._field_Model);
}



inline void _21e018d94_commonSub(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2d29d_CommonSubIdentExprModel> _28128_m) {
	static__21db86c10_optimize(_28128_m.get()._field_Expr);
}



inline void _21e01d959_tuple(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2d48a_TupleExprModel> _28524_m) {
	{
		auto &expr = _28524_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_206a92979:;
		if (it != expr.end()) {
			jule::Ptr<_220bceecb_Data> _28621_d = *it;
			{
				static__21db86c10_optimize(_28621_d.get()._field_Model);
			}
			_iter_next_206a92979:;
			++it;
			goto _iter_begin_206a92979;
		}
		_iter_end_206a92979:;
	};
}



inline void _21e0397dd_newCall(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2dc3d_BuiltinNewCallExprModel> _29126_m) {
	if ((_29126_m.get()._field_Init != nullptr)) {
		static__21db86c10_optimize(_29126_m.get()._field_Init);
	};
}



inline void _21e05232d_outCall(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2d677_BuiltinOutCallExprModel> _29726_m) {
	static__21db86c10_optimize(_29726_m.get()._field_Expr);
}



inline void _21e054220_outlnCall(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2d864_BuiltinOutlnCallExprModel> _30128_m) {
	static__21db86c10_optimize(_30128_m.get()._field_Expr);
}



inline void _21e05d69c_panicCall(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2de2a_BuiltinPanicCallExprModel> _30528_m) {
	static__21db86c10_optimize(_30528_m.get()._field_Expr);
}



inline void _21e065a39_assertCall(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2e117_BuiltinAssertCallExprModel> _30929_m) {
	static__21db86c10_optimize(_30929_m.get()._field_Expr);
}



inline void _21e088dae_errorCall(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b30217_BuiltinErrorCallExprModel> _31328_m) {
	static__21db86c10_optimize(_31328_m.get()._field_Err.get()._field_Model);
}



inline void _21e090547_makeCall(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2e304_BuiltinMakeCallExprModel> _31727_m) {
	if ((_31727_m.get()._field_Len != nullptr)) {
		static__21db86c10_optimize(_31727_m.get()._field_Len);
	};
	if ((_31727_m.get()._field_Cap != nullptr)) {
		static__21db86c10_optimize(_31727_m.get()._field_Cap);
	};
}



inline void _21e09431a_appendCall(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2e4e1_BuiltinAppendCallExprModel> _32629_m) {
	static__21db86c10_optimize(_32629_m.get()._field_Dest);
	static__21db86c10_optimize(_32629_m.get()._field_Elements);
}



inline void _21e09ec1b_lenCall(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2e6cd_BuiltinLenCallExprModel> _33126_m) {
	static__21db86c10_optimize(_33126_m.get()._field_Expr.get()._field_Model);
}



inline void _21e0a5040_capCall(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2e8ba_BuiltinCapCallExprModel> _33526_m) {
	static__21db86c10_optimize(_33526_m.get()._field_Expr.get()._field_Model);
}



inline void _21e0b04ac_cloneCall(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2da51_BuiltinCloneCallExprModel> _33928_m) {
	static__21db86c10_optimize(_33928_m.get()._field_Expr);
}



inline void _21e0b74e7_deleteCall(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b2c7b9_BuiltinDeleteCallExprModel> _34329_m) {
	static__21db86c10_optimize(_34329_m.get()._field_Dest.get()._field_Model);
	if ((_34329_m.get()._field_Key != nullptr)) {
		static__21db86c10_optimize(_34329_m.get()._field_Key.get()._field_Model);
	};
}



inline void _21e0c6bee_sizeof(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b30404_SizeofExprModel> _35025_m) {
	static__21db86c10_optimize(_35025_m.get()._field_Expr);
}



inline void _21e0cd3a9_alignof(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b305e1_AlignofExprModel> _35426_m) {
	static__21db86c10_optimize(_35426_m.get()._field_Expr);
}



inline void _21e0d5944_integratedToStr(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b309ba_IntegratedToStrExprModel> _35834_m) {
	static__21db86c10_optimize(_35834_m.get()._field_Expr);
}



inline void _21e050c00_free(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b30d94_FreeExprModel> _36223_m) {
	static__21db86c10_optimize(_36223_m.get()._field_Expr);
}



inline void _21e108978_backendEmit(_21e043709_exprOptimizer* _self_, jule::Ptr<_220b30ba7_BackendEmitExprModel> _36630_m) {
	_21dbe738b_args(&(*_self_), _36630_m.get()._field_Exprs);
}



inline void _21e142462_do(_21e043709_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_206a9c016:;
			{
				_21dba0322_binary(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220049577_BinopExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_206a9c302:;
			{
				_21dba1235_unary(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2acc3_UnaryExprModel>(&__jule_any_type75));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_206a9c368:;
			{
				_21dba91c7_structureLit(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2b19c_StructLitExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_206a9c3ce:;
			{
				_21dbc0474_allocStructure(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2b389_AllocStructLitExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_206a9c456:;
			{
				_21dbc18e8_casting(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2b576_CastingExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_206a9c4cd:;
			{
				_21dc25c27_funcCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2b763_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_206a9c555:;
			{
				_21dc471dd_slice(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2b950_SliceExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_206a9c5cc:;
			{
				_21dc7456c_array(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2cdc4_ArrayExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_206a9c654:;
			{
				_21dc82701_indexing(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2bb3c_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_206a9c6cb:;
			{
				_21dc991a7_anonFunc(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2bd29_AnonFnExprModel>(&__jule_any_type106));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_206a9c753:;
			{
				_21dca3b95_mapExpr(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2c203_MapExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_206a9c7ca:;
			{
				_21dd5552c_slicing(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2c3e0_SlicingExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_206a9c852:;
			{
				_21dd58442_traitSub(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2c5cc_TraitSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_206a9c8c9:;
			{
				_21dd5dbd9_structureSub(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2c9ea_StructSubIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_206a9c951:;
			{
				_21e018d94_commonSub(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2d29d_CommonSubIdentExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_206a9c9c8:;
			{
				_21e01d959_tuple(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2d48a_TupleExprModel>(&__jule_any_type89));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_206a9ca50:;
			{
				_21e05232d_outCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2d677_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_206a9cac7:;
			{
				_21e054220_outlnCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2d864_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_206a9cb4e:;
			{
				_21e0397dd_newCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2dc3d_BuiltinNewCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_206a9cbc6:;
			{
				_21e05d69c_panicCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2de2a_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_206a9cc4d:;
			{
				_21e065a39_assertCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2e117_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_206a9ccc5:;
			{
				_21e088dae_errorCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b30217_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_206a9cd4c:;
			{
				_21e090547_makeCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2e304_BuiltinMakeCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_206a9cdc4:;
			{
				_21e09431a_appendCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2e4e1_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_206a9ce4b:;
			{
				_21e09ec1b_lenCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2e6cd_BuiltinLenCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_206a9cec3:;
			{
				_21e0a5040_capCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2e8ba_BuiltinCapCallExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_206a9d04a:;
			{
				_21e0b04ac_cloneCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2da51_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_206a9d0c2:;
			{
				_21e0b74e7_deleteCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b2c7b9_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_206a9d149:;
			{
				_21e0c6bee_sizeof(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b30404_SizeofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_206a9d1c1:;
			{
				_21e0cd3a9_alignof(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b305e1_AlignofExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_206a9d248:;
			{
				_21e0d5944_integratedToStr(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b309ba_IntegratedToStrExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_206a9d2c0:;
			{
				_21e050c00_free(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b30d94_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_206a9d347:;
			{
				_21e108978_backendEmit(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_220b30ba7_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_206a9beb1:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _21e043709_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2214ba0ac_Optimizer> static__2214d97b3_New(jule::Ptr<_221064c23_IR>& _2524_ir) {
	return jule::new_ptr<_2214ba0ac_Optimizer>(_2214ba0ac_Optimizer{._field_ir=_2524_ir});;
}



inline void _2214e7c33_optimizeGlobal(_2214ba0ac_Optimizer* _self_, jule::Ptr<_220b8746c_Var>& _3138_v) {
	if ((!(_3138_v.get()._field_CppLinked))) {
		static__21db86c10_optimize(_3138_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _221526cea_optimizeFunction(_2214ba0ac_Optimizer* _self_, jule::Ptr<_220b31636_Fn>& _3740_func) {
	if (_3740_func.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _3740_func.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_206ab55c3:;
		if (it != expr.end()) {
			jule::Ptr<_220b31a10_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_21da0794e_scopeOptimizer> _4221_so = static__21d843b75_new(_4121_ins.get()._field_Scope);;
				_21d9d3a18_optimize(_4221_so.ptr());
			}
			_iter_next_206ab55c3:;
			++it;
			goto _iter_begin_206ab55c3;
		}
		_iter_end_206ab55c3:;
	};
}



inline void _2215365ce_optimizeStruct(_2214ba0ac_Optimizer* _self_, jule::Ptr<_21eec3006_Struct>& _4738_s) {
	if (_4738_s.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _4738_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_206ab6a7a:;
		if (it != expr.end()) {
			jule::Ptr<_21eec33d0_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_206ab73a5:;
					if (it != expr.end()) {
						jule::Ptr<_21eec31e3_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__21db86c10_optimize(_5225_f.get()._field_Default.get()._field_Model);
							};
						}
						_iter_next_206ab73a5:;
						++it;
						goto _iter_begin_206ab73a5;
					}
					_iter_end_206ab73a5:;
				};
				{
					auto &expr = _5121_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_206ab85e8:;
					if (it != expr.end()) {
						jule::Ptr<_220b31636_Fn> _5725_m = *it;
						{
							_221526cea_optimizeFunction(&(*_self_), _5725_m);
						}
						_iter_next_206ab85e8:;
						++it;
						goto _iter_begin_206ab85e8;
					}
					_iter_end_206ab85e8:;
				};
			}
			_iter_next_206ab6a7a:;
			++it;
			goto _iter_begin_206ab6a7a;
		}
		_iter_end_206ab6a7a:;
	};
}



inline void _22153e7d5_optimizeGlobals(_2214ba0ac_Optimizer* _self_, jule::Ptr<_220b6427e_Package>& _6339_p) {
	{
		auto &expr = _6339_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_206ab87e6:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_206ab952d:;
					if (it != expr.end()) {
						jule::Ptr<_220b8746c_Var> _6525_v = *it;
						{
							_2214e7c33_optimizeGlobal(&(*_self_), _6525_v);
						}
						_iter_next_206ab952d:;
						++it;
						goto _iter_begin_206ab952d;
					}
					_iter_end_206ab952d:;
				};
			}
			_iter_next_206ab87e6:;
			++it;
			goto _iter_begin_206ab87e6;
		}
		_iter_end_206ab87e6:;
	};
}



inline void _22154e52b_optimizeFunctions(_2214ba0ac_Optimizer* _self_, jule::Ptr<_220b6427e_Package>& _7141_p) {
	{
		auto &expr = _7141_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_206ab9a8e:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_206aba82b:;
					if (it != expr.end()) {
						jule::Ptr<_220b31636_Fn> _7325_func = *it;
						{
							_221526cea_optimizeFunction(&(*_self_), _7325_func);
						}
						_iter_next_206aba82b:;
						++it;
						goto _iter_begin_206aba82b;
					}
					_iter_end_206aba82b:;
				};
			}
			_iter_next_206ab9a8e:;
			++it;
			goto _iter_begin_206ab9a8e;
		}
		_iter_end_206ab9a8e:;
	};
}



inline void _221550c69_optimizeStructs(_2214ba0ac_Optimizer* _self_, jule::Ptr<_220b6427e_Package>& _7939_p) {
	{
		auto &expr = _7939_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_206abad8c:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_206abbb29:;
					if (it != expr.end()) {
						jule::Ptr<_21eec3006_Struct> _8125_s = *it;
						{
							_2215365ce_optimizeStruct(&(*_self_), _8125_s);
						}
						_iter_next_206abbb29:;
						++it;
						goto _iter_begin_206abbb29;
					}
					_iter_end_206abbb29:;
				};
			}
			_iter_next_206abad8c:;
			++it;
			goto _iter_begin_206abad8c;
		}
		_iter_end_206abad8c:;
	};
}



inline void _2214eb2ca_optimizePackage(_2214ba0ac_Optimizer* _self_, jule::Ptr<_220b6427e_Package>& _8739_p) {
	_22153e7d5_optimizeGlobals(&(*_self_), _8739_p);
	_22154e52b_optimizeFunctions(&(*_self_), _8739_p);
	_221550c69_optimizeStructs(&(*_self_), _8739_p);
}



inline void _221529b33_Optimize(_2214ba0ac_Optimizer* _self_) {
	_221549d40_detectEnabled();
	if (_21d88ab34_Deadcode) {
		_2215b7bc1_EliminateDefines((*_self_)._field_ir);
	};
	if ((_2214bc5dc_scopeEnabled || _2214bb971_exprEnabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_Used;
			auto it = expr.begin();
			_iter_begin_206abd93e:;
			if (it != expr.end()) {
				jule::Ptr<_220b61325_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_2214eb2ca_optimizePackage(&(*_self_), _10325_u.get()._field_Package);
					};
				}
				_iter_next_206abd93e:;
				++it;
				goto _iter_begin_206abd93e;
			}
			_iter_end_206abd93e:;
		};
		_2214eb2ca_optimizePackage(&(*_self_), (*_self_)._field_ir.get()._field_Main);
	};
	if (_21d88ab34_Deadcode) {
		_2215bc973_EliminateScopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2214ba0ac_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__2215c6a48_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__2215c7b8c_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__2215c6a48_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _2215c79a0_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__2215c9221_LogFlat(_21d4e511d_Log& _1424_l) {
	jule::outln(_1424_l._field_Text);
}



inline void static__2215c9430_LogError(_21d4e511d_Log& _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1925_l._field_Text);
	static__2215c6a48_Reset();
	if ((_1925_l._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1925_l._field_Path);
	};
	if (((_1925_l._field_Row != 0LL) && (_1925_l._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_220b244c5_Itoa(_1925_l._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_220b244c5_Itoa(_1925_l._field_Column));
	};
	if ((_1925_l._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _21d4702a7_TrimLeft(_1925_l._field_Line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1925_l._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_21d4702a7_TrimLeft(_3621_line,jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _220b244c5_Itoa(_1925_l._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_21d4409e7_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_21d4409e7_Repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1925_l._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1925_l._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_21d4409e7_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__2215c7b8c_Print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1925_l._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__2215c963e_Log(_21d4e511d_Log& _6520_l) {
	{
		auto &_match_expr{ _6520_l._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_206acdb3b:;
			{
				static__2215c9221_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_206acdba2:;
			{
				static__2215c9430_LogError(_6520_l);
			}
		}
		_match_end_206acd9e8:;
	};
}



inline void static__2215c984d_PrintLogs(jule::Slice<_21d4e511d_Log>& _7526_logs) {
	{
		auto &expr = _7526_logs;
		auto it = expr.begin();
		_iter_begin_206aceb1a:;
		if (it != expr.end()) {
			_21d4e511d_Log &_7616_l = *it;
			{
				static__2215c963e_Log(_7616_l);
			}
			_iter_next_206aceb1a:;
			++it;
			goto _iter_begin_206aceb1a;
		}
		_iter_end_206aceb1a:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_220b244c5_Itoa(static_cast<jule::I64>(_7526_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _2215c8ebd_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _202bed19e_Unix(_202becce7_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _202c00734_unixYearToSeconds(_5717_y,_5617_leap);;
	_6817_t+=_202c00ab9_unixMonthToSeconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_Hour);
	_6817_t+=(60LLU * (*_self_)._field_Minute);
	_6817_t+=(*_self_)._field_Second;
	return _6817_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _202becce7_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _202bed48a_Time static__202bed831_Unix(jule::U64 _9120_sec) {
	return _202bed48a_Time{._field_sec=_9120_sec};;
}



inline _202bed48a_Time static__202beda2e_Now(void) {
	return static__202bed831_Unix(static_cast<jule::U64>(_202c00426_unix()));;
}



inline jule::U64 _202bede80_Unix(_202bed48a_Time* _self_) {
	return (*_self_)._field_sec;;
}



inline jule::U64 _202bee1e4_Day(_202bed48a_Time* _self_) {
	return _202c0016d_Abs(&(*_self_))._field_Day;;
}



inline jule::U64 _202bee458_Month(_202bed48a_Time* _self_) {
	return _202c0016d_Abs(&(*_self_))._field_Month;;
}



inline jule::U64 _202bee6bc_Year(_202bed48a_Time* _self_) {
	return _202c0016d_Abs(&(*_self_))._field_Year;;
}



inline jule::U64 _202bee931_Second(_202bed48a_Time* _self_) {
	return _202c0016d_Abs(&(*_self_))._field_Second;;
}



inline jule::U64 _202beeb95_Minute(_202bed48a_Time* _self_) {
	return _202c0016d_Abs(&(*_self_))._field_Minute;;
}



inline jule::U64 _202beee09_Hour(_202bed48a_Time* _self_) {
	return _202c0016d_Abs(&(*_self_))._field_Hour;;
}



inline _202becce7_AbsTime _202c0016d_Abs(_202bed48a_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_202bec379_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_202bec379_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_206b0e760:;
	}
	_iter_end_206b0e760:;;
	_202becce7_AbsTime _17417_t = _202becce7_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _202bed48a_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_202b4878c_scopeCoder> static__202b48da8_new(jule::Ptr<_202c052a5_ObjectCoder>& _6124_oc) {
	return jule::new_ptr<_202b4878c_scopeCoder>(_202b4878c_scopeCoder{._field_oc=_6124_oc});;
}



inline void _202b4912d_rangeIndexIter(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b447c0_RangeIter>& _6739_it) {
	jule::Str _6813_begin = static__202b66821_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6739_it)));;
	jule::Str _6913_next = static__202b66d60_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6739_it)));;
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_202bcae18_addIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_21d86798a_Copy && _202b4dce2_isCopyOptimizable(_6739_it.get()._field_Expr))) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_202b5c570_model(_self_.get()._field_oc.get()._field_ec, _6739_it.get()._field_Expr.get()._field_Model);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, _6813_begin);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_202bcae18_addIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	if ((_6739_it.get()._field_KeyA != nullptr)) {
		_202c07b48_varInitExpr(_self_.get()._field_oc, _6739_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_202bce988_indent(_self_.get()._field_oc);
	};
	if ((_6739_it.get()._field_KeyB != nullptr)) {
		if (_21d86798a_Copy) {
			_6739_it.get()._field_KeyB.get()._field_Reference=_202b4e177_isIterCopyOptimizable(_6739_it.get()._field_Expr,_6739_it.get()._field_KeyB);
		};
		_202c07b48_varInitExpr(_self_.get()._field_oc, _6739_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_202bce988_indent(_self_.get()._field_oc);
	};
	_202b4d71a_scope(_self_, _6739_it.get()._field_Scope);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, _6913_next);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_202bce988_indent(_self_.get()._field_oc);
	if ((_6739_it.get()._field_KeyA != nullptr)) {
		_202b8bc42_write(_self_.get()._field_oc, static__202b66579_var(_6739_it.get()._field_KeyA));
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_202bce988_indent(_self_.get()._field_oc);
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_202b8bc42_write(_self_.get()._field_oc, _6813_begin);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_202bcb435_doneIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, static__202b66ab8_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6739_it))));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_202bcb435_doneIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _202b493a3_rangeHashmapIter(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b447c0_RangeIter>& _13541_it) {
	jule::Str _13613_begin = static__202b66821_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_13541_it)));;
	jule::Str _13713_next = static__202b66d60_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_13541_it)));;
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_202bcae18_addIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_21d86798a_Copy && _202b4dce2_isCopyOptimizable(_13541_it.get()._field_Expr))) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_202b5c570_model(_self_.get()._field_oc.get()._field_ec, _13541_it.get()._field_Expr.get()._field_Model);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, _13613_begin);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_202bcae18_addIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	if ((_13541_it.get()._field_KeyA != nullptr)) {
		if (_21d86798a_Copy) {
			_13541_it.get()._field_KeyA.get()._field_Reference=_202b4e177_isIterCopyOptimizable(_13541_it.get()._field_Expr,_13541_it.get()._field_KeyA);
		};
		_202c07b48_varInitExpr(_self_.get()._field_oc, _13541_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_202bce988_indent(_self_.get()._field_oc);
	};
	if ((_13541_it.get()._field_KeyB != nullptr)) {
		if (_21d86798a_Copy) {
			_13541_it.get()._field_KeyB.get()._field_Reference=_202b4e177_isIterCopyOptimizable(_13541_it.get()._field_Expr,_13541_it.get()._field_KeyB);
		};
		_202c07b48_varInitExpr(_self_.get()._field_oc, _13541_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_202bce988_indent(_self_.get()._field_oc);
	};
	_202b4d71a_scope(_self_, _13541_it.get()._field_Scope);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, _13713_next);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_202b8bc42_write(_self_.get()._field_oc, _13613_begin);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_202bcb435_doneIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, static__202b66ab8_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_13541_it))));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_202bcb435_doneIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _202b49628_ifCase(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b4301b_If> _20130_i) {
	if ((_20130_i.get()._field_Expr != nullptr)) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _20130_i.get()._field_Expr);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_202b4d71a_scope(_self_, _20130_i.get()._field_Scope);
}



inline void _202b4989d_conditional(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b4367b_Conditional> _21035_c) {
	jule::Bool _21117_writed = false;;
	{
		auto &expr = _21035_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_206bc76d5:;
		if (it != expr.end()) {
			jule::Ptr<_220b4301b_If> _21221_elif = *it;
			{
				if ((_21221_elif == nullptr)) {
					goto _iter_next_206bc76d5;
				};
				if (_21117_writed) {
					_202b8bc42_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_21117_writed=true;
				_202b49628_ifCase(_self_, _21221_elif);
			}
			_iter_next_206bc76d5:;
			++it;
			goto _iter_begin_206bc76d5;
		}
		_iter_end_206bc76d5:;
	};
	if ((_21035_c.get()._field_Default != nullptr)) {
		if (_21117_writed) {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_202b4d71a_scope(_self_, _21035_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _202b49b23_infIter(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b43967_InfIter> _23031_it) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_202bcae18_addIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b4d71a_scope(_self_, _23031_it.get()._field_Scope);
	_202bcb435_doneIndent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, static__202b66d60_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23031_it))));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, static__202b66ab8_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23031_it))));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _202b49d98_whileIter(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b43dda_WhileIter> _24733_it) {
	if (((_24733_it.get()._field_Expr != nullptr) && (_24733_it.get()._field_Next == nullptr))) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _24733_it.get()._field_Expr);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24733_it.get()._field_Expr != nullptr)) {
			_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _24733_it.get()._field_Expr);
		};
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24733_it.get()._field_Next != nullptr)) {
			_202b4d220_st(_self_, _24733_it.get()._field_Next);
		};
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_202bcae18_addIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b4d71a_scope(_self_, _24733_it.get()._field_Scope);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_202bcb435_doneIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, static__202b66d60_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24733_it))));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, static__202b66ab8_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24733_it))));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _202b4a11d_rangeIter(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b447c0_RangeIter> _28033_it) {
	{
		
		if ((_220c0e26e_Slc(_28033_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206bd821d:;
			{
				_202b4912d_rangeIndexIter(_self_, _28033_it);
			}
		}
		else if ((_220c0e00a_Arr(_28033_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206bd7cab:;
			{
				_202b4912d_rangeIndexIter(_self_, _28033_it);
			}
		}
		else if ((_220c0ec20_Map(_28033_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206bd797b:;
			{
				_202b493a3_rangeHashmapIter(_self_, _28033_it);
			}
		}
		else {
			_case_begin_206bd7915:;
			{
				_202b4912d_rangeIndexIter(_self_, _28033_it);
			}
		}
		_match_end_206bd7849:;
	};
}



inline void _202b4a393_cont(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b44bbb_ContSt> _29324_c) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_202b8bc42_write(_self_.get()._field_oc, static__202b66d60_iterNext(_29324_c.get()._field_It));
}



inline void _202b4a618_label(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b4535e_Label> _29825_l) {
	_202b8bc42_write(_self_.get()._field_oc, static__202b67107_label(_29825_l.get()._field_Ident));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _202b4a88d_gotoSt(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b4564a_GotoSt> _30326_gt) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_202b8bc42_write(_self_.get()._field_oc, static__202b67107_label(_30326_gt.get()._field_Ident));
}



inline void _202b4ab13_postfix(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b45a02_Postfix> _30831_p) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("(", 1));
	_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _30831_p.get()._field_Expr);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
	_202b8bc42_write(_self_.get()._field_oc, _30831_p.get()._field_Op);
}



inline void _202b4ad88_assign(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b45e75_Assign> _31530_a) {
	_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _31530_a.get()._field_L.get()._field_Model);
	_202b8bc42_write(_self_.get()._field_oc, _31530_a.get()._field_Op.get()._field_Kind);
	_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _31530_a.get()._field_R.get()._field_Model);
}



inline void _202b4b10d_mapLookupAssign(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b4632c_MultiAssign>& _32140_a) {
	jule::Ptr<_220b2bb3c_IndexingExprModel> _32217_iem = _32140_a.get()._field_R.cast_ptr<_220b2bb3c_IndexingExprModel>(&__jule_any_type46);;
	_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _32217_iem.get()._field_Expr.get()._field_Model);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _32217_iem.get()._field_Index.get()._field_Model);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if ((_32140_a.get()._field_L[0LL] != nullptr)) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _32140_a.get()._field_L[0LL].get()._field_Model);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if ((_32140_a.get()._field_L[1LL] != nullptr)) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _32140_a.get()._field_L[1LL].get()._field_Model);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b4b383_multiAssignTup(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b4632c_MultiAssign>& _34439_a) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_202bcae18_addIndent(_self_.get()._field_oc);
	jule::Ptr<_220b2d48a_TupleExprModel> _34817_tup = _34439_a.get()._field_R.cast_ptr<_220b2d48a_TupleExprModel>(&__jule_any_type89);;
	{
		auto &expr = _34817_tup.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_206be885a:;
		if (it != expr.end()) {
			jule::I64 _35014_i = it - expr.begin();
			jule::Ptr<_220bceecb_Data> _35021_r = *it;
			{
				_202bce988_indent(_self_.get()._field_oc);
				jule::Ptr<_220bceecb_Data> _35221_l = _34439_a.get()._field_L[_35014_i];;
				if ((_35221_l != nullptr)) {
					_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35221_l.get()._field_Kind));
					_202b8bc42_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_202b8bc42_write(_self_.get()._field_oc, static__202b64a83_toOut(_202b4821a_assignArgName,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_35014_i))));
					_202b8bc42_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _35021_r.get()._field_Model);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_206be885a:;
			++it;
			_35014_i++;
			goto _iter_begin_206be885a;
		}
		_iter_end_206be885a:;
	};
	{
		auto &expr = _34439_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_206bed2aa:;
		if (it != expr.end()) {
			jule::I64 _36314_i = it - expr.begin();
			jule::Ptr<_220bceecb_Data> _36321_l = *it;
			{
				if ((_36321_l != nullptr)) {
					_202bce988_indent(_self_.get()._field_oc);
					_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _36321_l.get()._field_Model);
					_202b8bc42_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_202b8bc42_write(_self_.get()._field_oc, static__202b64a83_toOut(_202b4821a_assignArgName,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_36314_i))));
					_202b8bc42_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_206bed2aa:;
			++it;
			_36314_i++;
			goto _iter_begin_206bed2aa;
		}
		_iter_end_206bed2aa:;
	};
	_202bcb435_doneIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _202b4b608_multiAssignFn(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b4632c_MultiAssign>& _37838_a) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_202bcae18_addIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	jule::Ptr<_220b2b763_FnCallExprModel> _38317_f = _37838_a.get()._field_R.cast_ptr<_220b2b763_FnCallExprModel>(&__jule_any_type35);;
	_202c163c6_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_38317_f.get()._field_Func.get()._field_Result);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _37838_a.get()._field_R);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto &expr = _37838_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_206c04a20:;
		if (it != expr.end()) {
			jule::I64 _38914_i = it - expr.begin();
			jule::Ptr<_220bceecb_Data> _38921_l = *it;
			{
				if ((_38921_l != nullptr)) {
					_202bce988_indent(_self_.get()._field_oc);
					_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _38921_l.get()._field_Model);
					_202b8bc42_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_202b8bc42_write(_self_.get()._field_oc, _220b244c5_Itoa(_38914_i));
					_202b8bc42_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_206c04a20:;
			++it;
			_38914_i++;
			goto _iter_begin_206c04a20;
		}
		_iter_end_206c04a20:;
	};
	_202bcb435_doneIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _202b4b87d_multiAssign(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b4632c_MultiAssign> _40435_a) {
	{
		auto &_match_expr{ _40435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type46) {
			_case_begin_206c083d6:;
			{
				_202b4b10d_mapLookupAssign(_self_, _40435_a);
				return;;
			}
		}
		_match_end_206c081c7:;
	};
	{
		auto &_match_expr{ _40435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type89) {
			_case_begin_206c0810b:;
			{
				_202b4b383_multiAssignTup(_self_, _40435_a);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_206c09283:;
			{
				_202b4b608_multiAssignFn(_self_, _40435_a);
			}
		}
		else {
			_case_begin_206c08ded:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:418:13"));;
			}
		}
		_match_end_206c08d98:;
	};
}



inline jule::Fn<void(void)> _202b4bb8b_matchExpr(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b4686b_Match> _42233_m) {
	if ((!(_220bd088e_IsConst(_42233_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_220b28dc0_IsBool(_42233_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_220b27bd2_ReadBool(_42233_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_202b5c570_model(_self_.get()._field_oc.get()._field_ec, _42233_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _202b4beaa_case(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b4686b_Match> _43228_m, jule::Ptr<_220b473b6_Case> _43243_c) {
	if (((_43243_c.get()._field_Exprs.len() != 0LL) && (!(_220b46d77_IsGenericTypeMatch(_43228_m.ptr()))))) {
		if (((_43228_m.get()._field_Cases.len() > 0LL) && (_43228_m.get()._field_Cases[0LL] == _43243_c))) {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _43243_c.get()._field_Exprs;
			auto it = expr.begin();
			_iter_begin_206c0e871:;
			if (it != expr.end()) {
				jule::I64 _43918_i = it - expr.begin();
				jule::Ptr<_220bceecb_Data> _43925_expr = *it;
				{
					{
						
						if ((!(_43228_m.get()._field_TypeMatch))) {
							_case_begin_206c14a41:;
							{
								jule::Fn<void(void)> _44225_caseExpr = _202b4bb8b_matchExpr(_self_, _43228_m);;
								if (_220bd0b9c_GoodOperand(_43228_m.get()._field_Expr.ptr(), _43925_expr)) {
									if ((_44225_caseExpr != nullptr)) {
										_44225_caseExpr();
										_202b8bc42_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _43925_expr.get()._field_Model);
								} else {
									_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _43925_expr.get()._field_Model);
									if ((_44225_caseExpr != nullptr)) {
										_202b8bc42_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_44225_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_206c10ad6:;
							{
								_202b8bc42_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_220c0ae5d_TypeKind> _45829_tk = _43925_expr.get()._field_Model.cast_ptr<_220c0ae5d_TypeKind>(&__jule_any_type91);;
								if ((_220c0e9ab_Trait(_43228_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_202b8bc42_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
									_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _45829_tk));
									_202b8bc42_write(_self_.get()._field_oc, jule::Str(">()", 3));
								} else {
									jule::I64 _46429_j = _202b91340_pushAnyType(_self_.get()._field_oc, _45829_tk);;
									_202b8bc42_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_202b8bc42_write(_self_.get()._field_oc, _220b244c5_Itoa(_46429_j));
								};
							}
						}
						_match_end_206c10a1a:;
					};
					if (((_43243_c.get()._field_Exprs.len() - _43918_i) > 1LL)) {
						_202b8bc42_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_206c0e871:;
				++it;
				_43918_i++;
				goto _iter_begin_206c0e871;
			}
			_iter_end_206c0e871:;
		};
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_43228_m.get()._field_Default == _43243_c) && (_43228_m.get()._field_Cases.len() != 0LL))) {
		_202bce988_indent(_self_.get()._field_oc);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_202bcae18_addIndent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, static__202b67646_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43243_c))));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_43243_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_202bce988_indent(_self_.get()._field_oc);
		_202b4d71a_scope(_self_, _43243_c.get()._field_Scope);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_202bcb435_doneIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _202b4c230_matchSt(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b4686b_Match> _49831_m) {
	if (((_49831_m.get()._field_Cases.len() == 0LL) && (_49831_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _50313_genericTypeMatch = _220b46d77_IsGenericTypeMatch(_49831_m.ptr());;
	if ((_50313_genericTypeMatch && ((_49831_m.get()._field_Default == nullptr) || (_49831_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_202bcae18_addIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	if (((!(_50313_genericTypeMatch)) && (!(_220bd088e_IsConst(_49831_m.get()._field_Expr.ptr()))))) {
		if ((_21d86798a_Copy && _202b4dce2_isCopyOptimizable(_49831_m.get()._field_Expr))) {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _49831_m.get()._field_Expr.get()._field_Model);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_202bce988_indent(_self_.get()._field_oc);
	};
	if ((_49831_m.get()._field_Cases.len() > 0LL)) {
		{
			auto &expr = _49831_m.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_206c23cc5:;
			if (it != expr.end()) {
				jule::Ptr<_220b473b6_Case> _52725_c = *it;
				{
					if ((_52725_c == nullptr)) {
						goto _iter_next_206c23cc5;
					};
					_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_202bce988_indent(_self_.get()._field_oc);
					_202b4beaa_case(_self_, _49831_m,_52725_c);
				}
				_iter_next_206c23cc5:;
				++it;
				goto _iter_begin_206c23cc5;
			}
			_iter_end_206c23cc5:;
		};
	};
	if ((_49831_m.get()._field_Default != nullptr)) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_202b4beaa_case(_self_, _49831_m,_49831_m.get()._field_Default);
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, static__202b6739e_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_49831_m))));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_202bcb435_doneIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _202b4c4a5_fallSt(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b4796b_FallSt> _55426_f) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_202b8bc42_write(_self_.get()._field_oc, static__202b67646_caseBegin(_55426_f.get()._field_DestCase));
}



inline void _202b4c72a_breakSt(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b45073_BreakSt> _55927_b) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_55927_b.get()._field_It != 0LLU)) {
		_202b8bc42_write(_self_.get()._field_oc, static__202b66ab8_iterEnd(_55927_b.get()._field_It));
	} else {
		_202b8bc42_write(_self_.get()._field_oc, static__202b6739e_matchEnd(_55927_b.get()._field_Mtch));
	};
}



inline void _202b4c9a0_setResult(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b47ce0_RetSt> _56833_r) {
	if ((_56833_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _56833_r.get()._field_Expr);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_202bce988_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_220bceecb_Data>> _57617_datas = _56833_r.get()._field_Expr.cast_ptr<_220b2d48a_TupleExprModel>(&__jule_any_type89).get()._field_Datas;;
	{
		auto &expr = _57617_datas;
		auto it = expr.begin();
		_iter_begin_206c2b2a5:;
		if (it != expr.end()) {
			jule::I64 _57713_i = it - expr.begin();
			jule::Ptr<_220bceecb_Data> _57716_data = *it;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_202b8bc42_write(_self_.get()._field_oc, _220b244c5_Itoa(_57713_i));
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _57716_data.get()._field_Model);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_202bce988_indent(_self_.get()._field_oc);
			}
			_iter_next_206c2b2a5:;
			++it;
			_57713_i++;
			goto _iter_begin_206c2b2a5;
		}
		_iter_end_206c2b2a5:;
	};
}



inline void _202b4cc25_retSt(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b47ce0_RetSt> _58729_r) {
	if (_22001c270_IsVoid(_58729_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_58729_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_58729_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_58729_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _58729_r.get()._field_Func.get()._field_Result));
			_202b8bc42_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _58729_r.get()._field_Expr);
			_202b8bc42_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _58729_r.get()._field_Expr);
			_202b8bc42_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_58729_r.get()._field_Expr != nullptr)) {
		_202b4c9a0_setResult(_self_, _58729_r);
	};
	if (_58729_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_202c163c6_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_58729_r.get()._field_Func.get()._field_Result);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _202b4ce9a_var(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b8746c_Var> _62327_v) {
	if ((!(_62327_v.get()._field_Constant))) {
		_202c07c7a_var(_self_.get()._field_oc, _62327_v);
	};
}



inline void _202b4d220_st(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Any _63026_st) {
	if ((_63026_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _63026_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_206c3aec9:;
			{
				_202b4d71a_scope(_self_, _63026_st.cast_ptr<_220b42b20_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_206c3ab77:;
			{
				_202b4ce9a_var(_self_, _63026_st.cast_ptr<_220b8746c_Var>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_206c3b5c3:;
			{
				_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _63026_st.cast_ptr<_220bceecb_Data>(&__jule_any_type24).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_206c3b639:;
			{
				_202b4989d_conditional(_self_, _63026_st.cast_ptr<_220b4367b_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_206c3b6a0:;
			{
				_202b49b23_infIter(_self_, _63026_st.cast_ptr<_220b43967_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_206c3b716:;
			{
				_202b49d98_whileIter(_self_, _63026_st.cast_ptr<_220b43dda_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_206c3b77c:;
			{
				_202b4a11d_rangeIter(_self_, _63026_st.cast_ptr<_220b447c0_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_206c3b7e3:;
			{
				_202b4a393_cont(_self_, _63026_st.cast_ptr<_220b44bbb_ContSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_206c3b859:;
			{
				_202b4a618_label(_self_, _63026_st.cast_ptr<_220b4535e_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_206c3b8c0:;
			{
				_202b4a88d_gotoSt(_self_, _63026_st.cast_ptr<_220b4564a_GotoSt>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_206c3b947:;
			{
				_202b4ab13_postfix(_self_, _63026_st.cast_ptr<_220b45a02_Postfix>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_206c3b9be:;
			{
				_202b4ad88_assign(_self_, _63026_st.cast_ptr<_220b45e75_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_206c3ba46:;
			{
				_202b4b87d_multiAssign(_self_, _63026_st.cast_ptr<_220b4632c_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_206c3babd:;
			{
				_202b4c230_matchSt(_self_, _63026_st.cast_ptr<_220b4686b_Match>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_206c3bb45:;
			{
				_202b4c4a5_fallSt(_self_, _63026_st.cast_ptr<_220b4796b_FallSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_206c3bbbc:;
			{
				_202b4c72a_breakSt(_self_, _63026_st.cast_ptr<_220b45073_BreakSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_206c3bc44:;
			{
				_202b4cc25_retSt(_self_, _63026_st.cast_ptr<_220b47ce0_RetSt>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_206c3bcbb:;
			{
				_202b5a507_pushToSlice(_self_.get()._field_oc.get()._field_ec, _63026_st.cast_ptr<_21e35075d_PushToSliceExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_206c3bd43:;
			{
				_202b5c075_mutSlicing(_self_.get()._field_oc.get()._field_ec, _63026_st.cast_ptr<_21e745966_MutSlicingExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_206c3bdba:;
			{
				_202b5c2ea_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _63026_st.cast_ptr<_21d88b30a_StrInsertBeginExprModel>(&__jule_any_type128));
			}
		}
		else {
			_case_begin_206c3a957:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_206c3a902:;
	};
}



inline void _202b4d495_scopeStmts(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b42b20_Scope>& _68035_s) {
	{
		auto &expr = _68035_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_206c46b50:;
		if (it != expr.end()) {
			jule::Any _68121_st = *it;
			{
				_202bce988_indent(_self_.get()._field_oc);
				_202b4d220_st(_self_, _68121_st);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_206c46b50:;
			++it;
			goto _iter_begin_206c46b50;
		}
		_iter_end_206c46b50:;
	};
}



inline void _202b4d71a_scope(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b42b20_Scope> _68929_s) {
	_202bcae18_addIndent(_self_.get()._field_oc);
	if (_68929_s.get()._field_Deferred) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_202b4d495_scopeStmts(_self_, _68929_s);
	_202bcb435_doneIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_68929_s.get()._field_Deferred) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _202b4d990_funcScope(jule::Ptr<_202b4878c_scopeCoder> _self_, jule::Ptr<_220b31a10_FnIns> _70533_f) {
	if ((_70533_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_202bcae18_addIndent(_self_.get()._field_oc);
	if ((!(_22001c270_IsVoid(_70533_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_220c15929_Tuple> _71221_tup = _220c0ee84_Tup(_70533_f.get()._field_Result.ptr());;
		if ((_71221_tup != nullptr)) {
			_202bce988_indent(_self_.get()._field_oc);
			_202c15c88_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_71221_tup);
			_202b8bc42_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto &expr = _71221_tup.get()._field_Types;
				auto it = expr.begin();
				_iter_begin_206c4dedc:;
				if (it != expr.end()) {
					jule::I64 _71722_i = it - expr.begin();
					jule::Ptr<_220c0ae5d_TypeKind> _71729_t = *it;
					{
						if (_202c186b4_shouldInitialized(_71729_t)) {
							_202bce988_indent(_self_.get()._field_oc);
							_202b8bc42_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_202b8bc42_write(_self_.get()._field_oc, _220b244c5_Itoa(_71722_i));
							_202b8bc42_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_202b5cce0_initExpr(_self_.get()._field_oc.get()._field_ec, _71729_t);
							_202b8bc42_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_206c4dedc:;
					++it;
					_71722_i++;
					goto _iter_begin_206c4dedc;
				}
				_iter_end_206c4dedc:;
			};
		} else if ((_70533_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_202bce988_indent(_self_.get()._field_oc);
			_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _70533_f.get()._field_Result));
			_202b8bc42_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_202c186b4_shouldInitialized(_70533_f.get()._field_Result)) {
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_202b5cce0_initExpr(_self_.get()._field_oc.get()._field_ec, _70533_f.get()._field_Result);
			};
			_202b8bc42_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_202b4d495_scopeStmts(_self_, _70533_f.get()._field_Scope);
	if ((_70533_f.get()._field_Decl.get()._field_Exceptional && _22001c270_IsVoid(_70533_f.get()._field_Decl.ptr()))) {
		_202bce988_indent(_self_.get()._field_oc);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_202bcb435_doneIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _202b4878c_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_202b51432_exprCoder> static__202b5182d_new(jule::Ptr<_202c052a5_ObjectCoder>& _10424_oc) {
	return jule::new_ptr<_202b51432_exprCoder>(_202b51432_exprCoder{._field_oc=_10424_oc});;
}



inline void _202b51aa3_string(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220074816_Const>& _11027_c) {
	jule::Str _11113_content = _220b27d14_ReadStr(_11027_c.ptr());;
	if ((_11113_content.len() == 0LL)) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _11613_bytes = static_cast<jule::Slice<jule::U8>>(_11113_content);;
	jule::Str _11713_len = _220b24393_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_11613_bytes.len())),10LL);;
	jule::Str _11813_lit = _202b5d9e4_cstrLit(_11613_bytes);;
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("(", 1));
	_202b8bc42_write(_self_.get()._field_oc, _11813_lit);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_202b8bc42_write(_self_.get()._field_oc, _11713_len);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b51d28_boolean(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220074816_Const>& _12728_c) {
	if (_220b27bd2_ReadBool(_12728_c.ptr())) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _202b52004_nilLit(jule::Ptr<_202b51432_exprCoder> _self_) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _202b52312_ftoaSpecialCases(jule::Ptr<_202b51432_exprCoder> _self_, jule::F64& _13937_x) {
	{
		
		if (_220ae241b_IsNaN(_13937_x)) {
			_case_begin_206c7220d:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_220ae2680_IsInf(_13937_x,1LL)) {
			_case_begin_206c71a37:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_220ae2680_IsInf(_13937_x,-1LL)) {
			_case_begin_206c71a9d:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_206c719c1:;
			{
				return false;;
			}
		}
		_match_end_206c71905:;
	};
	return true;;
}



inline void _202b52587_float32(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220074816_Const>& _15328_c) {
	jule::F64 _15413_x = _220b282dc_AsF64(_15328_c.ptr());;
	if (_202b52312_ftoaSpecialCases(_self_, _15413_x)) {
		return;;
	};
	{
		
		if ((_15413_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_206c74a90:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15413_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_206c747c6:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_206c74694:;
			{
				_202b8bc42_write(_self_.get()._field_oc, _202b5dd02_ftoa(_15413_x,32LL));
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_206c7463e:;
	};
}



inline void _202b5280c_float64(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220074816_Const>& _17228_c) {
	jule::F64 _17313_x = _220b282dc_AsF64(_17228_c.ptr());;
	if (_202b52312_ftoaSpecialCases(_self_, _17313_x)) {
		return;;
	};
	{
		
		if ((_17313_x == jule::MAX_F64)) {
			_case_begin_206c77a4e:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17313_x == jule::MIN_F64)) {
			_case_begin_206c78258:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_206c77653:;
			{
				_202b8bc42_write(_self_.get()._field_oc, _202b5dd02_ftoa(_17313_x,64LL));
			}
		}
		_match_end_206c775ed:;
	};
}



inline void _202b52a82_constant(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220074816_Const> _19032_c) {
	{
		
		if (_220b29002_IsStr(_19032_c.ptr())) {
			_case_begin_206c797ed:;
			{
				_202b51aa3_string(_self_, _19032_c);
			}
		}
		else if (_220b28dc0_IsBool(_19032_c.ptr())) {
			_case_begin_206c79864:;
			{
				_202b51d28_boolean(_self_, _19032_c);
			}
		}
		else if (_220b29134_IsF64(_19032_c.ptr())) {
			_case_begin_206c798ca:;
			{
				{
					
					if ((_19032_c.get()._field_Kind == jule::Str("f32", 3))) {
						_case_begin_206c7c01a:;
						{
							_202b52587_float32(_self_, _19032_c);
						}
					}
					else {
						_case_begin_206c7b712:;
						{
							_202b5280c_float64(_self_, _19032_c);
						}
					}
					_match_end_206c7b646:;
				};
			}
		}
		else if (_220b28b5b_IsI64(_19032_c.ptr())) {
			_case_begin_206c79941:;
			{
				_202b8bc42_write(_self_.get()._field_oc, _202b5e099_itoa(static_cast<jule::I64>(_220b2796d_ReadI64(_19032_c.ptr()))));
			}
		}
		else if (_220b28c8d_IsU64(_19032_c.ptr())) {
			_case_begin_206c7a28d:;
			{
				_202b8bc42_write(_self_.get()._field_oc, _202b5e341_utoa(static_cast<jule::U64>(_220b27aa0_ReadU64(_19032_c.ptr()))));
			}
		}
		else if (_220b29266_IsNil(_19032_c.ptr())) {
			_case_begin_206c7a304:;
			{
				_202b52004_nilLit(_self_);
			}
		}
		else {
			_case_begin_206c79787:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_206c796bb:;
	};
}



inline void _202b52e4a_divByZeroBinary(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_21d81d743_Token>& _21436_op, jule::Ptr<_22001ab86_OperandExprModel>& _21453_l, jule::Ptr<_22001ab86_OperandExprModel>& _21480_r) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _21436_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_206c7ee1e:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_206c7ee85:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_206c7ed53:;
	};
	if ((!(_21b5387c3_Production))) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_202c0589e_locInfo(_self_.get()._field_oc, _21436_op);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_202b5c7e5_expr(_self_, _21453_l.get()._field_Model);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(",", 1));
	_202b5c7e5_expr(_self_, _21480_r.get()._field_Model);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b531c0_unsafeBinary(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220049577_BinopExprModel> _23636_m) {
	if (((_23636_m.get()._field_Op.get()._field_Kind == jule::Str("==", 2)) || (_23636_m.get()._field_Op.get()._field_Kind == jule::Str("!=", 2)))) {
		if (_202b5ee8a_isAny(_23636_m.get()._field_Left.get()._field_Kind)) {
			if (((!(_220c0bd93_IsNil(_23636_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_202b5ee8a_isAny(_23636_m.get()._field_Right.get()._field_Kind))))) {
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("(", 1));
				if ((_23636_m.get()._field_Op.get()._field_Kind == jule::Str("!=", 2))) {
					_202b8bc42_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I64 _24625_i = _202b91340_pushAnyType(_self_.get()._field_oc, _23636_m.get()._field_Right.get()._field_Kind);;
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_202b8bc42_write(_self_.get()._field_oc, _220b244c5_Itoa(_24625_i));
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_202b5c570_model(_self_, _23636_m.get()._field_Left.get()._field_Model);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_202b5c570_model(_self_, _23636_m.get()._field_Right.get()._field_Model);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("(", 1));
	_202b5c570_model(_self_, _23636_m.get()._field_Left.get()._field_Model);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_202b8bc42_write(_self_.get()._field_oc, _23636_m.get()._field_Op.get()._field_Kind);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_202b5c570_model(_self_, _23636_m.get()._field_Right.get()._field_Model);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b53445_binary(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220049577_BinopExprModel> _26730_m) {
	{
		auto &_match_expr{ _26730_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_206c8bb1d:;
			{
				if ((_220c0e747_Struct(_26730_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_202b52e4a_divByZeroBinary(_self_, _26730_m.get()._field_Op,_26730_m.get()._field_Left,_26730_m.get()._field_Right);
					return;;
				};
			}
		}
		_match_end_206c8ba85:;
	};
	_202b531c0_unsafeBinary(_self_, _26730_m);
}



inline void _202b536ba_var(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b8746c_Var> _27927_m) {
	if (_27927_m.get()._field_CppLinked) {
		jule::Ptr<_21ee6d710_Directive> _28117_d = _202c18087_findDirective(_27927_m.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_28117_d != nullptr)) {
			_202b8bc42_write(_self_.get()._field_oc, _202c0a156_concatAllParts(_28117_d.get()._field_Args));
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_202b8bc42_write(_self_.get()._field_oc, static__202b66579_var(_27927_m));
}



inline void _202b53940_structureIns(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_21eec33d0_StructIns> _29036_m) {
	_202b8bc42_write(_self_.get()._field_oc, _202c101d3_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29036_m));
}



inline void _202b53bb5_unary(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2acc3_UnaryExprModel> _29429_m) {
	{
		auto &_match_expr{ _29429_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_206c918d1:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_202b5c7e5_expr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_206c91958:;
			{
				if ((_21b5387c3_Production || (_220c0d559_Sptr(_29429_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_206c91837;
				};
				_202b5c7e5_expr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_202c0589e_locInfo(_self_.get()._field_oc, _29429_m.get()._field_Op);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_206c91837:;
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("(", 1));
	_202b8bc42_write(_self_.get()._field_oc, _29429_m.get()._field_Op.get()._field_Kind);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("(", 1));
	_202b5c7e5_expr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _202b53e3a_structureLit(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2b19c_StructLitExprModel> _31836_m) {
	if (_31836_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_202b8bc42_write(_self_.get()._field_oc, static__202b6603a_structureIns(_31836_m.get()._field_Strct));
	if (_31836_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_31836_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _31836_m.get()._field_Strct.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_206c98e05:;
			if (it != expr.end()) {
				jule::I64 _33117_i = it - expr.begin();
				jule::Ptr<_21eec31e3_FieldIns> _33120_f = *it;
				{
					{
						auto &expr = _31836_m.get()._field_Args;
						auto it = expr.begin();
						_iter_begin_206c99b2b:;
						if (it != expr.end()) {
							jule::Ptr<_220b2aeb0_StructArgExprModel> _33229_arg = *it;
							{
								if ((_33229_arg.get()._field_Field == _33120_f)) {
									_202b8bc42_write(_self_.get()._field_oc, jule::Str(".", 1));
									_202b8bc42_write(_self_.get()._field_oc, static__202b662d2_field(_33229_arg.get()._field_Field.get()._field_Decl));
									_202b8bc42_write(_self_.get()._field_oc, jule::Str("=", 1));
									_202b5c7e5_expr(_self_, _33229_arg.get()._field_Expr);
									if (((_31836_m.get()._field_Strct.get()._field_Fields.len() - _33117_i) > 1LL)) {
										_202b8bc42_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_206c98e05;
								};
							}
							_iter_next_206c99b2b:;
							++it;
							goto _iter_begin_206c99b2b;
						}
						_iter_end_206c99b2b:;
					};
				}
				_iter_next_206c98e05:;
				++it;
				_33117_i++;
				goto _iter_begin_206c98e05;
			}
			_iter_end_206c98e05:;
		};
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _202b541b0_allocStructure(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2b389_AllocStructLitExprModel> _34938_m) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_202b8bc42_write(_self_.get()._field_oc, static__202b6603a_structureIns(_34938_m.get()._field_Lit.get()._field_Strct));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_202b53e3a_structureLit(_self_, _34938_m.get()._field_Lit);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b54435_casting(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2b576_CastingExprModel> _35731_m) {
	{
		
		if (_202b5ee8a_isAny(_35731_m.get()._field_Kind)) {
			_case_begin_206ca0725:;
			{
				if (_220c0bd93_IsNil(_35731_m.get()._field_ExprKind.ptr())) {
					_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_220c0dc96_TypeEnum(_35731_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_202b5c570_model(_self_, _35731_m.get()._field_Expr);
					return;;
				};
				jule::I64 _36817_i = _202b91340_pushAnyType(_self_.get()._field_oc, _35731_m.get()._field_ExprKind);;
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				_202b5c570_model(_self_, _35731_m.get()._field_Expr);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_202b8bc42_write(_self_.get()._field_oc, _220b244c5_Itoa(_36817_i));
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_220c0d7bd_Ptr(_35731_m.get()._field_ExprKind.ptr()) != nullptr) || (_220c0d7bd_Ptr(_35731_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206ca078b:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("((", 2));
				_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35731_m.get()._field_Kind));
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_202b5c7e5_expr(_self_, _35731_m.get()._field_Expr);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if (_202b5ee8a_isAny(_35731_m.get()._field_ExprKind)) {
			_case_begin_206ca0802:;
			{
				_202b5c570_model(_self_, _35731_m.get()._field_Expr);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_220c0d559_Sptr(_35731_m.get()._field_Kind.ptr()) != nullptr)) {
					_202b8bc42_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _220c0d559_Sptr(_35731_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_202b8bc42_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35731_m.get()._field_Kind));
				};
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_21b5387c3_Production))) {
					_202b8bc42_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_202c0589e_locInfo(_self_.get()._field_oc, _35731_m.get()._field_Token);
					_202b8bc42_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_202b8bc42_write(_self_.get()._field_oc, _220b244c5_Itoa(static_cast<jule::I64>(_202b91340_pushAnyType(_self_.get()._field_oc, _35731_m.get()._field_Kind))));
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_220c0e9ab_Trait(_35731_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_206ca0868:;
			{
				_202b5c570_model(_self_, _35731_m.get()._field_Expr);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_21b5387c3_Production) {
					_202b8bc42_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35731_m.get()._field_Kind));
					_202b8bc42_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_220c0d559_Sptr(_35731_m.get()._field_Kind.ptr()) != nullptr)) {
						_202b8bc42_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _220c0d559_Sptr(_35731_m.get()._field_Kind.ptr()).get()._field_Elem));
					} else {
						_202b8bc42_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35731_m.get()._field_Kind));
					};
					_202b8bc42_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_202c0589e_locInfo(_self_.get()._field_oc, _35731_m.get()._field_Token);
					_202b8bc42_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_220c0e9ab_Trait(_35731_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206ca286a:;
			{
				_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35731_m.get()._field_Kind));
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("(", 1));
				_202b5c7e5_expr(_self_, _35731_m.get()._field_Expr);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_202b8bc42_write(_self_.get()._field_oc, _220b244c5_Itoa(static_cast<jule::I64>(_202b6c0c9_findTypeOffset(_self_.get()._field_oc.ptr(), _220c0e9ab_Trait(_35731_m.get()._field_Kind.ptr()),_35731_m.get()._field_ExprKind))));
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_206ca06ae:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35731_m.get()._field_Kind));
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_202b5c7e5_expr(_self_, _35731_m.get()._field_Expr);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_206ca05e3:;
	};
}



inline void _202b546aa_args(jule::Ptr<_202b51432_exprCoder> _self_, jule::Slice<jule::Any> _43528_args) {
	if ((_43528_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _43528_args;
		auto it = expr.begin();
		_iter_begin_206cb8573:;
		if (it != expr.end()) {
			jule::I64 _43914_i = it - expr.begin();
			jule::Any _43921_a = *it;
			{
				_202b5c7e5_expr(_self_, _43921_a);
				if (((_43528_args.len() - _43914_i) > 1LL)) {
					_202b8bc42_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_206cb8573:;
			++it;
			_43914_i++;
			goto _iter_begin_206cb8573;
		}
		_iter_end_206cb8573:;
	};
}



inline void _202b54930_modelForCall(jule::Ptr<_202b51432_exprCoder> _self_, jule::Any _44736_expr) {
	{
		auto &_match_expr{ _44736_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_206cba3dd:;
			{
				_202b57ca7_funcIns(_self_, _44736_expr.cast_ptr<_220b31a10_FnIns>(&__jule_any_type8));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_206cba465:;
			{
				jule::Ptr<_220b2c9ea_StructSubIdentExprModel> _45321_ssie = _44736_expr.cast_ptr<_220b2c9ea_StructSubIdentExprModel>(&__jule_any_type72);;
				if ((_45321_ssie.get()._field_Method != nullptr)) {
					_202b57ca7_funcIns(_self_, _45321_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_206cba344:;
	};
	_202b5c570_model(_self_, _44736_expr);
}



inline void _202b54ba5_pushCallInf(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2b763_FnCallExprModel>& _46232_m) {
	if ((_21b5387c3_Production || ((!(_46232_m.get()._field_Func.get()._field_Anon)) && (!(_202b5e9b2_isBuiltinCallHasDebuginf(_46232_m)))))) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_46232_m.get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ _46232_m.get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type72) {
				_case_begin_206cbd6aa:;
				{
					if (_46232_m.get()._field_Expr.cast_ptr<_220b2c9ea_StructSubIdentExprModel>(&__jule_any_type72).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_202b8bc42_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_206cbd897;
				}
			}
			else {
				_case_begin_206cbd897:;
				{
					_202b8bc42_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_206cbd754:;
		};
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_202c0589e_locInfo(_self_.get()._field_oc, _46232_m.get()._field_Token);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_46232_m.get()._field_Args.len() != 0LL)) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _202b54eb3_isWrapped(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2b763_FnCallExprModel>& _48734_m) {
	if ((((!(_220b321c5_IsBuiltin(_48734_m.get()._field_Func.ptr()))) && (_48734_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _22001a45a_IsSelf(_48734_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _48734_m.get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type72) {
				_case_begin_206cc246c:;
				{
					jule::Ptr<_220b2c9ea_StructSubIdentExprModel> _49125_ssie = _48734_m.get()._field_Expr.cast_ptr<_220b2c9ea_StructSubIdentExprModel>(&__jule_any_type72);;
					{
						
						if (_22001b35c_IsRef(_48734_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_220c0d559_Sptr(_49125_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_206cc2c64:;
							{
								goto _match_end_206cc3308;
							}
						}
						else {
							_case_begin_206cc336e:;
							{
								if ((_220c0e747_Struct(_49125_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_49125_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_202b8bc42_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_202b5c570_model(_self_, _49125_ssie.get()._field_Expr.get()._field_Model);
										_202b8bc42_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_206cc3308:;
					};
				}
			}
			_match_end_206cc225d:;
		};
	};
	return false;;
}



inline void _202b55238_pureFuncCall(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2b763_FnCallExprModel>& _51137_m) {
	jule::Bool _51213_wrapped = _202b54eb3_isWrapped(_self_, _51137_m);;
	_202b54930_modelForCall(_self_, _51137_m.get()._field_Expr);
	if ((!(_220b321c5_IsBuiltin(_51137_m.get()._field_Func.ptr())))) {
		if ((_51137_m.get()._field_Func.get()._field_Decl.get()._field_CppLinked && (_51137_m.get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_202c1841c_hasDirective(_51137_m.get()._field_Func.get()._field_Decl.get()._field_Directives,jule::Str("cdef", 4))))) {
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _51137_m.get()._field_Func.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_206cc8dbe:;
					if (it != expr.end()) {
						jule::I64 _51826_i = it - expr.begin();
						jule::Ptr<_220c09731_InsGeneric> _51833_g = *it;
						{
							_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _51833_g.get()._field_Kind));
							if (((_51137_m.get()._field_Func.get()._field_Generics.len() - _51826_i) > 1LL)) {
								_202b8bc42_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_206cc8dbe:;
						++it;
						_51826_i++;
						goto _iter_begin_206cc8dbe;
					}
					_iter_end_206cc8dbe:;
				};
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_202b54ba5_pushCallInf(_self_, _51137_m);
	jule::Bool _52917_locinfo = false;;
	if ((((!(_220b321c5_IsBuiltin(_51137_m.get()._field_Func.ptr()))) && (_51137_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _22001a45a_IsSelf(_51137_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _51137_m.get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type72) {
				_case_begin_206ccc9e9:;
				{
					jule::Ptr<_220b2c9ea_StructSubIdentExprModel> _53325_ssie = _51137_m.get()._field_Expr.cast_ptr<_220b2c9ea_StructSubIdentExprModel>(&__jule_any_type72);;
					{
						
						if (_22001b35c_IsRef(_51137_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_206cce974:;
							{
								_202b5c570_model(_self_, _53325_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_220c0d559_Sptr(_53325_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_206cd037b:;
							{
								_202b5c570_model(_self_, _53325_ssie.get()._field_Expr.get()._field_Model);
								_202b8bc42_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_21b5387c3_Production))) {
									_202b8bc42_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_202c0589e_locInfo(_self_.get()._field_oc, _51137_m.get()._field_Token);
									_202b8bc42_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_206ccd984:;
							{
								if ((_220c0e747_Struct(_53325_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_202b8bc42_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_51213_wrapped) {
									_202b8bc42_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_202b5c570_model(_self_, _53325_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_206ccd91d:;
					};
					if ((_51137_m.get()._field_Args.len() > 0LL)) {
						_202b8bc42_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type71) {
				_case_begin_206ccca60:;
				{
					_202b5c570_model(_self_, _51137_m.get()._field_Expr.cast_ptr<_220b2c5cc_TraitSubIdentExprModel>(&__jule_any_type71).get()._field_Expr);
					if ((!(_21b5387c3_Production))) {
						_52917_locinfo=true;
					};
					if ((_51137_m.get()._field_Args.len() > 0LL)) {
						_202b8bc42_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_206ccc7da:;
		};
	};
	_202b546aa_args(_self_, _51137_m.get()._field_Args);
	if (_52917_locinfo) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_202c0589e_locInfo(_self_.get()._field_oc, _51137_m.get()._field_Token);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_51213_wrapped) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _202b554ad_coFuncCall(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2b763_FnCallExprModel>& _58335_m) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_202bcae18_addIndent(_self_.get()._field_oc);
	jule::Str _58617_head = jule::Str("std::thread([", 13);;
	if ((_58335_m.get()._field_Func.get()._field_Owner != nullptr)) {
		_58617_head+=jule::Str("_self_", 6);
		if ((_58335_m.get()._field_Args.len() > 0LL)) {
			_58617_head+=jule::Str(", ", 2);
		};
	};
	{
		auto &expr = _58335_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_206cda254:;
		if (it != expr.end()) {
			jule::I64 _59313_i = it - expr.begin();
			jule::Any _59316_arg = *it;
			{
				if ((_59313_i > 0LL)) {
					_58617_head+=jule::Str(", ", 2);
				};
				{
					auto &_match_expr{ _59316_arg };
					
					if (_match_expr.type == &__jule_any_type9) {
						_case_begin_206cdc168:;
						{
							jule::Ptr<_220b8746c_Var> _59925_v = _59316_arg.cast_ptr<_220b8746c_Var>(&__jule_any_type9);;
							_58617_head+=static__202b66579_var(_59925_v);
							goto _iter_next_206cda254;
						}
					}
					_match_end_206cdb91a:;
				};
				jule::Str _60317_name = (jule::Str("_co_arg_", 8) + _220b244c5_Itoa(_59313_i));;
				_58617_head+=_60317_name;
				_202bce988_indent(_self_.get()._field_oc);
				_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _58335_m.get()._field_Func.get()._field_Params[_59313_i].get()._field_Kind));
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if (_58335_m.get()._field_Func.get()._field_Params[_59313_i].get()._field_Decl.get()._field_Reference) {
					_202b8bc42_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_202b8bc42_write(_self_.get()._field_oc, _60317_name);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_202b5c7e5_expr(_self_, _59316_arg);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _61517_argS = jule::Any(_60317_name, &__jule_any_type6);;
				_58335_m.get()._field_Args[_59313_i]=(*(((jule::Any*)((&(_61517_argS))))));
			}
			_iter_next_206cda254:;
			++it;
			_59313_i++;
			goto _iter_begin_206cda254;
		}
		_iter_end_206cda254:;
	};
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, _58617_head);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_202bcae18_addIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b55238_pureFuncCall(_self_, _58335_m);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_202bcb435_doneIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_202bcb435_doneIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _202b557cc_writeUseExpr(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b31a10_FnIns>& _63337_f, jule::Ptr<_220bceecb_Data> _63352_d) {
	if ((_220c0ee84_Tup(_63352_d.get()._field_Kind.ptr()) == nullptr)) {
		_202b5c7e5_expr(_self_, _63352_d.get()._field_Model);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_220b2d48a_TupleExprModel> _63917_tup = _63352_d.get()._field_Model.cast_ptr<_220b2d48a_TupleExprModel>(&__jule_any_type89);;
	_202c15c88_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_220c0ee84_Tup(_63337_f.get()._field_Result.ptr()));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto &expr = _63917_tup.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_206ce853c:;
		if (it != expr.end()) {
			jule::I64 _64213_i = it - expr.begin();
			jule::Ptr<_220bceecb_Data> _64216_data = *it;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_202b8bc42_write(_self_.get()._field_oc, _220b244c5_Itoa(_64213_i));
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("=", 1));
				_202b5c7e5_expr(_self_.get()._field_oc.get()._field_ec, _64216_data.get()._field_Model);
				if (((_63917_tup.get()._field_Datas.len() - _64213_i) > 1LL)) {
					_202b8bc42_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_206ce853c:;
			++it;
			_64213_i++;
			goto _iter_begin_206ce853c;
		}
		_iter_end_206ce853c:;
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _202b55a52_funcCall(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2b763_FnCallExprModel> _65432_m) {
	if (_65432_m.get()._field_IsCo) {
		_202b554ad_coFuncCall(_self_, _65432_m);
		return;;
	};
	if (((_220b321c5_IsBuiltin(_65432_m.get()._field_Func.ptr()) || (!(_65432_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_65432_m.get()._field_Except != nullptr) && (_65432_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_202b55238_pureFuncCall(_self_, _65432_m);
		return;;
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_202bcae18_addIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_202b55238_pureFuncCall(_self_, _65432_m);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_202bce988_indent(_self_.get()._field_oc);
	if ((_65432_m.get()._field_Except != nullptr)) {
		if (((_65432_m.get()._field_Func.get()._field_Result == nullptr) || (!(_65432_m.get()._field_Assigned)))) {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_202b4d71a_scope(_self_.get()._field_oc.get()._field_sc, _65432_m.get()._field_Except);
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _68021_forwarded = _202b5e6e8_isForwarded(_65432_m.get()._field_Except);;
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_68021_forwarded) {
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _68525_stmt = _65432_m.get()._field_Except.get()._field_Stmts[(_65432_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _68525_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_206d03811:;
					{
						_65432_m.get()._field_Except.get()._field_Stmts=_65432_m.get()._field_Except.get()._field_Stmts.slice(0LL,(_65432_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_202b8bc42_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_202bcae18_addIndent(_self_.get()._field_oc);
						_202b4d495_scopeStmts(_self_.get()._field_oc.get()._field_sc, _65432_m.get()._field_Except);
						_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_202bce988_indent(_self_.get()._field_oc);
						_202b557cc_writeUseExpr(_self_, _65432_m.get()._field_Func,_68525_stmt.cast_ptr<_220bceecb_Data>(&__jule_any_type24));
						_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_202bcb435_doneIndent(_self_.get()._field_oc);
						_202bce988_indent(_self_.get()._field_oc);
						_202b8bc42_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_206d041d5:;
					{
						_202b4d71a_scope(_self_.get()._field_oc.get()._field_sc, _65432_m.get()._field_Except);
					}
				}
				_match_end_206d04180:;
			};
			if (_68021_forwarded) {
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_202b5cce0_initExpr(_self_, _65432_m.get()._field_Func.get()._field_Result);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_202b8bc42_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_202bcb435_doneIndent(_self_.get()._field_oc);
	} else {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_202c0589e_locInfo(_self_.get()._field_oc, _65432_m.get()._field_Token);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_22001c270_IsVoid(_65432_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_202bce988_indent(_self_.get()._field_oc);
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_202bcb435_doneIndent(_self_.get()._field_oc);
	};
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _202b55cc7_slice(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2b950_SliceExprModel> _72529_m) {
	if ((_72529_m.get()._field_Elems.len() == 0LL)) {
		_202b8bc42_write(_self_.get()._field_oc, _202c0dd80_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _72529_m.get()._field_ElemKind));
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_202b8bc42_write(_self_.get()._field_oc, _202c0dd80_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _72529_m.get()._field_ElemKind));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_202b546aa_args(_self_, _72529_m.get()._field_Elems);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _202b5604c_indexing(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2bb3c_IndexingExprModel> _73732_m) {
	_202b5c570_model(_self_, _73732_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_21b5387c3_Production || (_220c0d7bd_Ptr(_73732_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_220c0ec20_Map(_73732_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _202b5ebe3_isExprComesFromBind(_73732_m.get()._field_Expr)) {
			_case_begin_206d11038:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("[", 1));
				_202b5c7e5_expr(_self_, _73732_m.get()._field_Index.get()._field_Model);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_206d117db:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_202c0589e_locInfo(_self_.get()._field_oc, _73732_m.get()._field_Token);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_202b5c7e5_expr(_self_, _73732_m.get()._field_Index.get()._field_Model);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_206d11775:;
	};
}



inline void _202b562c2_unsafeIndexing(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_21d8d3b38_UnsafeIndexingExprModel> _75738_m) {
	_202b5c570_model(_self_, _75738_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_21b5387c3_Production || (_220c0d7bd_Ptr(_75738_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_220c0ec20_Map(_75738_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206d157bd:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("[", 1));
				_202b5c7e5_expr(_self_, _75738_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_206d1611a:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_202b5c7e5_expr(_self_, _75738_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_206d160a4:;
	};
}



inline void _202b56547_anonFunc(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2bd29_AnonFnExprModel> _77432_m) {
	_202b8bc42_write(_self_.get()._field_oc, _202c11855_func(_self_.get()._field_oc.get()._field_tc.ptr(), _77432_m.get()._field_Func));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_202c07a16_paramsIns(_self_.get()._field_oc, _77432_m.get()._field_Func.get()._field_Params);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_202c11239_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_oc.get()._field_Obj,_77432_m.get()._field_Func);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_202b4d990_funcScope(_self_.get()._field_oc.get()._field_sc, _77432_m.get()._field_Func);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b567bc_mapExpr(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2c203_MapExprModel> _78531_m) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _78531_m.get()._field_KeyKind));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(",", 1));
	_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _78531_m.get()._field_ValKind));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_78531_m.get()._field_Entries.len() > 0LL)) {
		{
			auto &expr = _78531_m.get()._field_Entries;
			auto it = expr.begin();
			_iter_begin_206d253b0:;
			if (it != expr.end()) {
				jule::I64 _79218_i = it - expr.begin();
				jule::Ptr<_220b2c016_KeyValPairExprModel> _79225_pair = *it;
				{
					_202b8bc42_write(_self_.get()._field_oc, jule::Str("{", 1));
					_202b5c7e5_expr(_self_, _79225_pair.get()._field_Key);
					_202b8bc42_write(_self_.get()._field_oc, jule::Str(",", 1));
					_202b5c7e5_expr(_self_, _79225_pair.get()._field_Val);
					_202b8bc42_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_78531_m.get()._field_Entries.len() - _79218_i) > 1LL)) {
						_202b8bc42_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_206d253b0:;
				++it;
				_79218_i++;
				goto _iter_begin_206d253b0;
			}
			_iter_end_206d253b0:;
		};
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _202b56a42_slicing(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2c3e0_SlicingExprModel> _80631_m) {
	_202b5c570_model(_self_, _80631_m.get()._field_Expr);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_21b5387c3_Production))) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_202c0589e_locInfo(_self_.get()._field_oc, _80631_m.get()._field_Token);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_202b5c7e5_expr(_self_, _80631_m.get()._field_Left);
	if ((_80631_m.get()._field_Right != nullptr)) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(",", 1));
		_202b5c7e5_expr(_self_, _80631_m.get()._field_Right);
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b56cb7_traitSub(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2c5cc_TraitSubIdentExprModel> _82232_m) {
	_202b8bc42_write(_self_.get()._field_oc, static__202b65754_traitDecl(_82232_m.get()._field_Trt));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_202b5c570_model(_self_, _82232_m.get()._field_Expr);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_202b8bc42_write(_self_.get()._field_oc, static__202b65215_func(_82232_m.get()._field_Method));
}



inline void _202b5703c_structureSub(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2c9ea_StructSubIdentExprModel> _83136_m) {
	_202b5c570_model(_self_, _83136_m.get()._field_Expr.get()._field_Model);
	if ((_83136_m.get()._field_Field != nullptr)) {
		if ((_220c0d7bd_Ptr(_83136_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_220c0d559_Sptr(_83136_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_21b5387c3_Production))) {
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_202c0589e_locInfo(_self_.get()._field_oc, _83136_m.get()._field_Token);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_202b8bc42_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_202b8bc42_write(_self_.get()._field_oc, static__202b662d2_field(_83136_m.get()._field_Field.get()._field_Decl));
	};
}



inline void _202b572b2_commonIdent(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2d0b1_CommonIdentExprModel> _85131_m) {
	_202b8bc42_write(_self_.get()._field_oc, _85131_m.get()._field_Ident);
}



inline void _202b57537_commonSub(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2d29d_CommonSubIdentExprModel> _85533_m) {
	_202b5c570_model(_self_, _85533_m.get()._field_Expr);
	{
		
		if ((_220c0d7bd_Ptr(_85533_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_206d347ed:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_220c0d559_Sptr(_85533_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_206d35029:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_21b5387c3_Production))) {
					_202b8bc42_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_202c0589e_locInfo(_self_.get()._field_oc, _85533_m.get()._field_Token);
					_202b8bc42_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_206d34eb3:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_206d34e4c:;
	};
	_202b8bc42_write(_self_.get()._field_oc, _85533_m.get()._field_Ident);
}



inline void _202b577ac_array(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2cdc4_ArrayExprModel> _87429_m) {
	_202b8bc42_write(_self_.get()._field_oc, _202c104e1_array(_self_.get()._field_oc.get()._field_tc.ptr(), _87429_m.get()._field_Kind));
	if ((_87429_m.get()._field_Elems.len() == 0LL)) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_87429_m.get()._field_Elems.len() == 2LL) && (_87429_m.get()._field_Elems[1LL] == nullptr))) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("(", 1));
		_202b5c7e5_expr(_self_, _87429_m.get()._field_Elems[0LL]);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("({", 2));
	_202b546aa_args(_self_, _87429_m.get()._field_Elems);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _202b57a32_funcInsCommon(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b31a10_FnIns> _89737_m) {
	_202b8bc42_write(_self_.get()._field_oc, _202c11855_func(_self_.get()._field_oc.get()._field_tc.ptr(), _89737_m));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("(", 1));
	_202b57ca7_funcIns(_self_, _89737_m);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b57ca7_funcIns(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b31a10_FnIns> _90431_m) {
	if (((_90431_m.get()._field_Decl != nullptr) && _90431_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_21ee6d710_Directive> _90617_d = _202c18087_findDirective(_90431_m.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_90617_d != nullptr)) {
			_202b8bc42_write(_self_.get()._field_oc, _202c0a156_concatAllParts(_90617_d.get()._field_Args));
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_202b8bc42_write(_self_.get()._field_oc, static__202b654ac_funcIns(_90431_m));
}



inline void _202b5802c_tuple(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2d48a_TupleExprModel> _91529_m) {
	{
		auto &expr = _91529_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_206d427d9:;
		if (it != expr.end()) {
			jule::I64 _91614_i = it - expr.begin();
			jule::Ptr<_220bceecb_Data> _91621_d = *it;
			{
				_202b5c7e5_expr(_self_, _91621_d.get()._field_Model);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_91529_m.get()._field_Datas.len() - _91614_i) > 1LL)) {
					_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_202bce988_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_206d427d9:;
			++it;
			_91614_i++;
			goto _iter_begin_206d427d9;
		}
		_iter_end_206d427d9:;
	};
}



inline void _202b582a2_newCall(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2dc3d_BuiltinNewCallExprModel> _92631_m) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _92631_m.get()._field_Kind));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_92631_m.get()._field_Init != nullptr)) {
		_202b5c7e5_expr(_self_, _92631_m.get()._field_Init);
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b58527_outCall(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2d677_BuiltinOutCallExprModel> _93631_m) {
	if ((_93631_m.get()._field_Debug && _21b5387c3_Production)) {
		return;;
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_202b5c7e5_expr(_self_, _93631_m.get()._field_Expr);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b5879c_outlnCall(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2d864_BuiltinOutlnCallExprModel> _94533_m) {
	if ((_94533_m.get()._field_Debug && _21b5387c3_Production)) {
		return;;
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_202b5c7e5_expr(_self_, _94533_m.get()._field_Expr);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b58a22_panicCall(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2de2a_BuiltinPanicCallExprModel> _95433_m) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_202b5c7e5_expr(_self_, _95433_m.get()._field_Expr);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_202c0589e_locInfo(_self_.get()._field_oc, _95433_m.get()._field_Token);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _202b58c97_assertCall(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2e117_BuiltinAssertCallExprModel> _96234_m) {
	if (_21b5387c3_Production) {
		return;;
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_202b5c7e5_expr(_self_, _96234_m.get()._field_Expr);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_202b8bc42_write(_self_.get()._field_oc, _202b5d9e4_cstrLit(static_cast<jule::Slice<jule::U8>>(_96234_m.get()._field_Log)));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_202c0589e_locInfo(_self_.get()._field_oc, _96234_m.get()._field_Token);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _202b5901c_errorCall(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b30217_BuiltinErrorCallExprModel> _97533_m) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_22001c270_IsVoid(_97533_m.get()._field_Func.get()._field_Decl.ptr())) {
		{
			auto &_match_expr{ _97533_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type9) {
				_case_begin_206d509e5:;
				{
					jule::Ptr<_220b8746c_Var> _98021_v = _97533_m.get()._field_Err.get()._field_Model.cast_ptr<_220b8746c_Var>(&__jule_any_type9);;
					if ((_98021_v.get()._field_Ident == jule::Str("error", 5))) {
						_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_206d50990:;
		};
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_202c163c6_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_97533_m.get()._field_Func.get()._field_Result);
		{
			auto &_match_expr{ _97533_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type9) {
				_case_begin_206d53971:;
				{
					jule::Ptr<_220b8746c_Var> _99221_v = _97533_m.get()._field_Err.get()._field_Model.cast_ptr<_220b8746c_Var>(&__jule_any_type9);;
					if ((_99221_v.get()._field_Ident == jule::Str("error", 5))) {
						_202b8bc42_write(_self_.get()._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_206d5381c:;
		};
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_202b5c7e5_expr(_self_, _97533_m.get()._field_Err.get()._field_Model);
	jule::I64 _100113_i = _202b91340_pushAnyType(_self_.get()._field_oc, _97533_m.get()._field_Err.get()._field_Kind);;
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_202b8bc42_write(_self_.get()._field_oc, _220b244c5_Itoa(_100113_i));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _202b59292_copyCall(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b3002a_BuiltinCopyCallExprModel> _100732_m) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_202b5c570_model(_self_, _100732_m.get()._field_Dest.get()._field_Model);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_220c0d2e5_Prim(_100732_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_202b5c570_model(_self_, _100732_m.get()._field_Src.get()._field_Model);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_220c0d2e5_Prim(_100732_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b59517_lenCall(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2e6cd_BuiltinLenCallExprModel> _102331_m) {
	_202b5c570_model(_self_, _102331_m.get()._field_Expr.get()._field_Model);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _202b5978c_capCall(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2e8ba_BuiltinCapCallExprModel> _102831_m) {
	_202b5c570_model(_self_, _102831_m.get()._field_Expr.get()._field_Model);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _202b59a12_deleteCall(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2c7b9_BuiltinDeleteCallExprModel> _103334_m) {
	_202b5c570_model(_self_, _103334_m.get()._field_Dest.get()._field_Model);
	if ((_103334_m.get()._field_Key != nullptr)) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_202b5c570_model(_self_, _103334_m.get()._field_Key.get()._field_Model);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _202b59c87_makeCallSlice(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2e304_BuiltinMakeCallExprModel>& _104438_m) {
	jule::Ptr<_220c14d9b_Slc> _104517_slice = _220c0e26e_Slc(_104438_m.get()._field_Kind.ptr());;
	_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _104438_m.get()._field_Kind));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_202b5c7e5_expr(_self_, _104438_m.get()._field_Len);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if ((_104438_m.get()._field_Cap != nullptr)) {
		_202b5c7e5_expr(_self_, _104438_m.get()._field_Cap);
	} else {
		_202b5c7e5_expr(_self_, _104438_m.get()._field_Len);
	};
	if (_202c186b4_shouldInitialized(_104517_slice.get()._field_Elem)) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_202b5cce0_initExpr(_self_, _104517_slice.get()._field_Elem);
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b5a00c_makeCallStr(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2e304_BuiltinMakeCallExprModel>& _106236_m) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_202b5c7e5_expr(_self_, _106236_m.get()._field_Len);
	if ((_106236_m.get()._field_Cap != nullptr)) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_202b5c7e5_expr(_self_, _106236_m.get()._field_Cap);
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b5a282_makeCall(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2e304_BuiltinMakeCallExprModel> _107332_m) {
	if ((_220c0e26e_Slc(_107332_m.get()._field_Kind.ptr()) != nullptr)) {
		_202b59c87_makeCallSlice(_self_, _107332_m);
		return;;
	};
	_202b5a00c_makeCallStr(_self_, _107332_m);
}



inline void _202b5a507_pushToSlice(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_21e35075d_PushToSliceExprModel> _108135_m) {
	jule::I64 _108213_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_202b5c570_model(_self_, _108135_m.get()._field_Dest);
	jule::Str _108413_dest = _self_.get()._field_oc.get()._field_Obj.slice(_108213_n);;
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_202b8bc42_write(_self_.get()._field_oc, _108413_dest);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(",", 1));
	_202b8bc42_write(_self_.get()._field_oc, _220b244c5_Itoa(static_cast<jule::I64>(_108135_m.get()._field_Elems.get()._field_Elems.len())));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _108135_m.get()._field_Elems.get()._field_Elems;
		auto it = expr.begin();
		_iter_begin_206d6b01b:;
		if (it != expr.end()) {
			jule::Any _109121_e = *it;
			{
				_202b8bc42_write(_self_.get()._field_oc, _108413_dest);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_202b5c570_model(_self_, _109121_e);
				_202b8bc42_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_206d6b01b:;
			++it;
			goto _iter_begin_206d6b01b;
		}
		_iter_end_206d6b01b:;
	};
}



inline void _202b5a77c_appendCall(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2e4e1_BuiltinAppendCallExprModel> _110034_m) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_202b5c570_model(_self_, _110034_m.get()._field_Dest);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(",", 1));
	_202b5c570_model(_self_, _110034_m.get()._field_Elements);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b5aa02_cloneCall(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2da51_BuiltinCloneCallExprModel> _110833_m) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_202b5c570_model(_self_, _110833_m.get()._field_Expr);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b5ac77_sizeof(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b30404_SizeofExprModel> _111430_m) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_202b5c570_model(_self_, _111430_m.get()._field_Expr);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b5aeec_alignof(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b305e1_AlignofExprModel> _112031_m) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_202b5c570_model(_self_, _112031_m.get()._field_Expr);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _202b5b30a_runeLit(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b307cd_RuneExprModel> _112627_m) {
	if ((_112627_m.get()._field_Code <= 127LL)) {
		jule::Str _112821_b = _202b5d42d_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_112627_m.get()._field_Code)));;
		if ((_112821_b == jule::Str("'", 1))) {
			_112821_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _112821_b) + jule::Str("'", 1));;
	};
	return _202b5e099_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_112627_m.get()._field_Code)));;
}



inline void _202b5b580_structureStatic(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b2cbd7_StructStaticIdentExprModel> _113739_m) {
	_202b8bc42_write(_self_.get()._field_oc, static__202b654ac_funcIns(_113739_m.get()._field_Method));
}



inline void _202b5b805_integratedToStr(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b309ba_IntegratedToStrExprModel> _114139_m) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_202b5c570_model(_self_, _114139_m.get()._field_Expr);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _202b5ba7a_backendEmit(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b30ba7_BackendEmitExprModel> _114735_m) {
	if ((_114735_m.get()._field_Exprs.len() == 0LL)) {
		_202b8bc42_write(_self_.get()._field_oc, _114735_m.get()._field_Code);
		return;;
	};
	jule::I64 _115213_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _115317_args = jule::Slice<jule::Any>::alloc(_114735_m.get()._field_Exprs.len(), _114735_m.get()._field_Exprs.len());;
	{
		auto &expr = _114735_m.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_206d76d6d:;
		if (it != expr.end()) {
			jule::I64 _115414_i = it - expr.begin();
			jule::Any _115421_expr = *it;
			{
				_202b5c7e5_expr(_self_, _115421_expr);
				_115317_args[_115414_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_115213_n), &__jule_any_type6);
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL,_115213_n);
			}
			_iter_next_206d76d6d:;
			++it;
			_115414_i++;
			goto _iter_begin_206d76d6d;
		}
		_iter_end_206d76d6d:;
	};
	_202b8bc42_write(_self_.get()._field_oc, _220cbbc33_Format(_114735_m.get()._field_Code,_115317_args));
}



inline void _202b5bd00_free(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220b30d94_FreeExprModel> _116228_m) {
	_202b5c7e5_expr(_self_, _116228_m.get()._field_Expr);
	if (_21b538130_RC) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _202b5c075_mutSlicing(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_21e745966_MutSlicingExprModel> _117134_m) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("(", 1));
	_202b5c570_model(_self_, _117134_m.get()._field_Expr);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_21b5387c3_Production))) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_202c0589e_locInfo(_self_.get()._field_oc, _117134_m.get()._field_Token);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_202b5c7e5_expr(_self_, _117134_m.get()._field_Left);
	if ((_117134_m.get()._field_Right != nullptr)) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(",", 1));
		_202b5c7e5_expr(_self_, _117134_m.get()._field_Right);
	};
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _202b5c2ea_strInsertBegin(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_21d88b30a_StrInsertBeginExprModel> _118838_m) {
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("(", 1));
	_202b5c570_model(_self_, _118838_m.get()._field_Dest);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_202b5c570_model(_self_, _118838_m.get()._field_Expr);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _202b5c570_model(jule::Ptr<_202b51432_exprCoder> _self_, jule::Any _119629_m) {
	{
		auto &_match_expr{ _119629_m };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_206d8285c:;
			{
				_202b8bc42_write(_self_.get()._field_oc, _119629_m.cast<jule::Str>(&__jule_any_type6));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_206d82b37:;
			{
				_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _119629_m.cast_ptr<_220c0ae5d_TypeKind>(&__jule_any_type91)));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_206d82b9d:;
			{
				_202b52a82_constant(_self_, _119629_m.cast_ptr<_220074816_Const>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_206d82c14:;
			{
				_202b536ba_var(_self_, _119629_m.cast_ptr<_220b8746c_Var>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_206d82c7a:;
			{
				_202b53940_structureIns(_self_, _119629_m.cast_ptr<_21eec33d0_StructIns>(&__jule_any_type10));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_206d837a3:;
			{
				_202b57a32_funcInsCommon(_self_, _119629_m.cast_ptr<_220b31a10_FnIns>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_206d83819:;
			{
				_202b531c0_unsafeBinary(_self_, _119629_m.cast_ptr<_21d84ae02_UnsafeBinopExprModel>(&__jule_any_type130).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_206d83880:;
			{
				_202b53445_binary(_self_, _119629_m.cast_ptr<_220049577_BinopExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_206d838e6:;
			{
				_202b53bb5_unary(_self_, _119629_m.cast_ptr<_220b2acc3_UnaryExprModel>(&__jule_any_type75));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_206d8395c:;
			{
				_202b53e3a_structureLit(_self_, _119629_m.cast_ptr<_220b2b19c_StructLitExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_206d839c3:;
			{
				_202b541b0_allocStructure(_self_, _119629_m.cast_ptr<_220b2b389_AllocStructLitExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_206d83a39:;
			{
				_202b54435_casting(_self_, _119629_m.cast_ptr<_220b2b576_CastingExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_206d83aa0:;
			{
				_202b55a52_funcCall(_self_, _119629_m.cast_ptr<_220b2b763_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_206d83b16:;
			{
				_202b55cc7_slice(_self_, _119629_m.cast_ptr<_220b2b950_SliceExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_206d83b7c:;
			{
				_202b577ac_array(_self_, _119629_m.cast_ptr<_220b2cdc4_ArrayExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_206d83be3:;
			{
				_202b562c2_unsafeIndexing(_self_, _119629_m.cast_ptr<_21d8d3b38_UnsafeIndexingExprModel>(&__jule_any_type131));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_206d83c59:;
			{
				_202b5604c_indexing(_self_, _119629_m.cast_ptr<_220b2bb3c_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_206d83cd1:;
			{
				_202b56547_anonFunc(_self_, _119629_m.cast_ptr<_220b2bd29_AnonFnExprModel>(&__jule_any_type106));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_206d83d58:;
			{
				_202b567bc_mapExpr(_self_, _119629_m.cast_ptr<_220b2c203_MapExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_206d83dd0:;
			{
				_202b56a42_slicing(_self_, _119629_m.cast_ptr<_220b2c3e0_SlicingExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_206d83e57:;
			{
				_202b56cb7_traitSub(_self_, _119629_m.cast_ptr<_220b2c5cc_TraitSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_206d83ece:;
			{
				_202b5703c_structureSub(_self_, _119629_m.cast_ptr<_220b2c9ea_StructSubIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_206d84056:;
			{
				_202b572b2_commonIdent(_self_, _119629_m.cast_ptr<_220b2d0b1_CommonIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_206d840cd:;
			{
				_202b57537_commonSub(_self_, _119629_m.cast_ptr<_220b2d29d_CommonSubIdentExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_206d84155:;
			{
				_202b5802c_tuple(_self_, _119629_m.cast_ptr<_220b2d48a_TupleExprModel>(&__jule_any_type89));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_206d841cc:;
			{
				_202b58527_outCall(_self_, _119629_m.cast_ptr<_220b2d677_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_206d84254:;
			{
				_202b5879c_outlnCall(_self_, _119629_m.cast_ptr<_220b2d864_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_206d842cb:;
			{
				_202b582a2_newCall(_self_, _119629_m.cast_ptr<_220b2dc3d_BuiltinNewCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_206d84353:;
			{
				_202b58a22_panicCall(_self_, _119629_m.cast_ptr<_220b2de2a_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_206d843ca:;
			{
				_202b58c97_assertCall(_self_, _119629_m.cast_ptr<_220b2e117_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_206d84452:;
			{
				_202b5901c_errorCall(_self_, _119629_m.cast_ptr<_220b30217_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_206d844c9:;
			{
				_202b5a282_makeCall(_self_, _119629_m.cast_ptr<_220b2e304_BuiltinMakeCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_206d84551:;
			{
				_202b5a77c_appendCall(_self_, _119629_m.cast_ptr<_220b2e4e1_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_206d845c8:;
			{
				_202b5aa02_cloneCall(_self_, _119629_m.cast_ptr<_220b2da51_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_206d84650:;
			{
				_202b59292_copyCall(_self_, _119629_m.cast_ptr<_220b3002a_BuiltinCopyCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_206d846c7:;
			{
				_202b59517_lenCall(_self_, _119629_m.cast_ptr<_220b2e6cd_BuiltinLenCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_206d8474e:;
			{
				_202b5978c_capCall(_self_, _119629_m.cast_ptr<_220b2e8ba_BuiltinCapCallExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_206d847c6:;
			{
				_202b59a12_deleteCall(_self_, _119629_m.cast_ptr<_220b2c7b9_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_206d8484d:;
			{
				_202b5ac77_sizeof(_self_, _119629_m.cast_ptr<_220b30404_SizeofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_206d848c5:;
			{
				_202b5aeec_alignof(_self_, _119629_m.cast_ptr<_220b305e1_AlignofExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_206d8494c:;
			{
				_202b8bc42_write(_self_.get()._field_oc, _202b5b30a_runeLit(_self_, _119629_m.cast_ptr<_220b307cd_RuneExprModel>(&__jule_any_type90)));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_206d849c4:;
			{
				_202b5b580_structureStatic(_self_, _119629_m.cast_ptr<_220b2cbd7_StructStaticIdentExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_206d84a4b:;
			{
				_202b5b805_integratedToStr(_self_, _119629_m.cast_ptr<_220b309ba_IntegratedToStrExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_206d84ac3:;
			{
				_202b5ba7a_backendEmit(_self_, _119629_m.cast_ptr<_220b30ba7_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_206d84b4a:;
			{
				_202b5bd00_free(_self_, _119629_m.cast_ptr<_220b30d94_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_206d84bc2:;
			{
				_202b5c075_mutSlicing(_self_, _119629_m.cast_ptr<_21e745966_MutSlicingExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_206d84c49:;
			{
				_202b5c2ea_strInsertBegin(_self_, _119629_m.cast_ptr<_21d88b30a_StrInsertBeginExprModel>(&__jule_any_type128));
			}
		}
		else {
			_case_begin_206d829d3:;
			{
				_202b8bc42_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_206d82906:;
	};
}



inline void _202b5c7e5_expr(jule::Ptr<_202b51432_exprCoder> _self_, jule::Any _129728_e) {
	_202b5c570_model(_self_, _129728_e);
}



inline void _202b5ca6a_val(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220bd1054_Value> _130127_v) {
	if (_220bd088e_IsConst(_130127_v.get()._field_Data.ptr())) {
		_202b52a82_constant(_self_, _130127_v.get()._field_Data.get()._field_Constant);
		return;;
	};
	_202b5c7e5_expr(_self_, _130127_v.get()._field_Data.get()._field_Model);
}



inline void _202b5cce0_initExpr(jule::Ptr<_202b51432_exprCoder> _self_, jule::Ptr<_220c0ae5d_TypeKind> _130932_t) {
	if (_220c0c844_NilCompatible(_130932_t.ptr())) {
		if ((_220c0d7bd_Ptr(_130932_t.ptr()) != nullptr)) {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _130932_t));
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_220c15929_Tuple> _131917_tup = _220c0ee84_Tup(_130932_t.ptr());;
	if ((_131917_tup != nullptr)) {
		_202c15c88_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_131917_tup);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto &expr = _131917_tup.get()._field_Types;
			auto it = expr.begin();
			_iter_begin_206da1e0e:;
			if (it != expr.end()) {
				jule::I64 _132318_i = it - expr.begin();
				jule::Ptr<_220c0ae5d_TypeKind> _132325_tt = *it;
				{
					if ((!(_202c186b4_shouldInitialized(_132325_tt)))) {
						goto _iter_next_206da1e0e;
					};
					_202b8bc42_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_202b8bc42_write(_self_.get()._field_oc, _220b244c5_Itoa(_132318_i));
					_202b8bc42_write(_self_.get()._field_oc, jule::Str("=", 1));
					_202b5cce0_initExpr(_self_, _132325_tt);
					if (((_131917_tup.get()._field_Types.len() - _132318_i) > 1LL)) {
						_202b8bc42_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_206da1e0e:;
				++it;
				_132318_i++;
				goto _iter_begin_206da1e0e;
			}
			_iter_end_206da1e0e:;
		};
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_220b38374_Enum> _133817_enm = _220c0da32_Enum(_130932_t.ptr());;
	if ((_133817_enm != nullptr)) {
		_202b5ca6a_val(_self_, _133817_enm.get()._field_Items[0LL].get()._field_Value);
		return;;
	};
	jule::Ptr<_220c10baa_Prim> _134313_prim = _220c0d2e5_Prim(_130932_t.ptr());;
	if ((_134313_prim != nullptr)) {
		if (_220b2730d_IsNum(_134313_prim.get()._field_Kind)) {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_220c13b7a_IsBool(_134313_prim.ptr())) {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_220c13dde_IsStr(_134313_prim.ptr())) {
			_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_220c0e00a_Arr(_130932_t.ptr()) != nullptr)) {
		jule::Ptr<_220c17046_Arr> _135521_arr = _220c0e00a_Arr(_130932_t.ptr());;
		_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _130932_t));
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("(", 1));
		_202b5cce0_initExpr(_self_, _135521_arr.get()._field_Elem);
		_202b8bc42_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_21eec33d0_StructIns> _136217_s = _220c0e747_Struct(_130932_t.ptr());;
	if ((((_136217_s != nullptr) && _136217_s.get()._field_Decl.get()._field_CppLinked) && (_202c18087_findDirective(_136217_s.get()._field_Decl.get()._field_Directives,jule::Str("typedef", 7)) == nullptr))) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("(", 1));
		_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _130932_t));
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_202b8bc42_write(_self_.get()._field_oc, _202c11b63_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _130932_t));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _202b51432_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_202b60595_deriveCoder> static__202b6096e_new(jule::Ptr<_202c052a5_ObjectCoder> _1223_oc) {
	return jule::new_ptr<_202b60595_deriveCoder>(_202b60595_deriveCoder{._field_oc=_1223_oc});;
}



inline jule::Str _202b60c7c_cloneFuncDecl(_202b60595_deriveCoder* _self_, jule::Ptr<_21eec3006_Struct>& _1633_s) {
	jule::Str _1717_obj = _202c0edc5_structure((*_self_)._field_oc.get()._field_tc.ptr(), _1633_s);;
	_1717_obj+=jule::Str(" clone(void) const ", 19);
	return _1717_obj;;
}



inline jule::Str _202b6108a_cloneFuncDef(_202b60595_deriveCoder* _self_, jule::Ptr<_21eec3006_Struct>& _2232_s) {
	jule::Str _2317_obj = _202c0edc5_structure((*_self_)._field_oc.get()._field_tc.ptr(), _2232_s);;
	_2317_obj+=(jule::Str(" ", 1) + _2317_obj);
	_2317_obj+=jule::Str("::clone(void) const ", 20);
	return _2317_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _202b60595_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_202b61e6a_TestCoder> static__202b623dd_New(jule::Ptr<_202c052a5_ObjectCoder>& _2824_oc) {
	return jule::new_ptr<_202b61e6a_TestCoder>(_202b61e6a_TestCoder{._field_oc=_2824_oc});;
}



inline jule::Ptr<_220b61325_ImportInfo> _202b62652_findTestingPackage(jule::Ptr<_202b61e6a_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_206db100b:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_LinkPath == jule::Str("std::testing", 12))) {
					return _3521_imp;;
				};
			}
			_iter_next_206db100b:;
			++it;
			goto _iter_begin_206db100b;
		}
		_iter_end_206db100b:;
	};
	return nullptr;;
}



inline void _202b628c7_appendTest(jule::Ptr<_202b61e6a_TestCoder> _self_, jule::Ptr<_220b31a10_FnIns> _4334_f) {
	_202bce988_indent(_self_.get()._field_oc);
	_202b6308c_callTmReset(_self_);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_202b8bc42_write(_self_.get()._field_oc, _202b5d9e4_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, static__202b654ac_funcIns(_4334_f));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _202b62b4c_appendPackageTests(jule::Ptr<_202b61e6a_TestCoder> _self_, jule::Ptr<_220b6427e_Package>& _6043_p) {
	{
		auto &expr = _6043_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_206db682a:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_206db7177:;
					if (it != expr.end()) {
						jule::Ptr<_220b31636_Fn> _6225_f = *it;
						{
							if (_202c1841c_hasDirective(_6225_f.get()._field_Directives,jule::Str("test", 4))) {
								_202b628c7_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_206db7177:;
						++it;
						goto _iter_begin_206db7177;
					}
					_iter_end_206db7177:;
				};
			}
			_iter_next_206db682a:;
			++it;
			goto _iter_begin_206db682a;
		}
		_iter_end_206db682a:;
	};
}



inline jule::Bool _202b62db1_readyTestingPackage(jule::Ptr<_202b61e6a_TestCoder> _self_) {
	jule::Ptr<_220b61325_ImportInfo> _7117_p = _202b62652_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_220b62766_FindStruct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_21ee97382_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tmFailed=_21ee97382_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6),false);
	_self_.get()._field_tmSkipped=_21ee97382_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7),false);
	return true;;
}



inline void _202b6308c_callTmReset(jule::Ptr<_202b61e6a_TestCoder> _self_) {
	_202b8bc42_write(_self_.get()._field_oc, static__202b65215_func(_self_.get()._field_tmReset));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _202b63268_callTmFailed(jule::Ptr<_202b61e6a_TestCoder> _self_) {
	_202b8bc42_write(_self_.get()._field_oc, static__202b65215_func(_self_.get()._field_tmFailed));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _202b63444_callTmSkipped(jule::Ptr<_202b61e6a_TestCoder> _self_) {
	_202b8bc42_write(_self_.get()._field_oc, static__202b65215_func(_self_.get()._field_tmSkipped));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _202b63620_Serialize(jule::Ptr<_202b61e6a_TestCoder> _self_) {
	_202c0982b_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_202c09650_end(_self_.get()._field_oc);
	});;
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_202bcae18_addIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	if ((!(_202b62db1_readyTestingPackage(_self_)))) {
		_202b8bc42_write(_self_.get()._field_oc, jule::Str("}", 1));
		_202bcb435_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_202b8bc42_write(_self_.get()._field_oc, _202c0ca2c_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _202c101d3_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_202b8bc42_write(_self_.get()._field_oc, _202c101d3_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_202bcae18_addIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_202b63268_callTmFailed(_self_);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_202b63444_callTmSkipped(_self_);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_202bcb435_doneIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_202b62b4c_appendPackageTests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_Main);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_202bcb435_doneIndent(_self_.get()._field_oc);
	_202bce988_indent(_self_.get()._field_oc);
	_202b8bc42_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _202b61e6a_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__202b64a83_toOut(jule::Str& _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_220b24261_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3322_ident;
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, (_3322_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3322_ident;
	return _4217_obj;;
}



inline jule::Str static__202b64e6d_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str& _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_220b244c5_Itoa(_5423_row);
	_5517_obj+=_220b244c5_Itoa(_5433_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5444_ident;
	return _5517_obj;;
}



inline jule::Str static__202b65215_func(jule::Ptr<_220b31636_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_CppLinked) {
			_case_begin_206dd0190:;
			{
				return _6521_f.get()._field_Ident;;
			}
		}
		else if ((_6521_f.get()._field_Ident == jule::Str("main", 4))) {
			_case_begin_206dd0206:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_22004d735_IsMethod(_6521_f.ptr())) {
			_case_begin_206dce58a:;
			{
				jule::Str _7221_obj = static__202b64a83_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_206dce524:;
			{
				return static__202b64a83_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
			}
		}
		_match_end_206dce47a:;
	};
}



inline jule::Str static__202b654ac_funcIns(jule::Ptr<_220b31a10_FnIns>& _8424_f) {
	if (_220b321c5_IsBuiltin(_8424_f.ptr())) {
		return (jule::Str("jule::", 6) + _8424_f.get()._field_Decl.get()._field_Ident);;
	};
	if ((_8424_f.get()._field_Decl.get()._field_CppLinked || (_8424_f.get()._field_Generics.len() == 0LL))) {
		return static__202b65215_func(_8424_f.get()._field_Decl);;
	};
	return static__202b64a83_toOut(_8424_f.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8424_f)));;
}



inline jule::Str static__202b65754_traitDecl(jule::Ptr<_220b376b4_Trait> _9525_t) {
	if (_220b37b15_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__202b64a83_toOut(_9525_t.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__202b659eb_param(jule::Ptr<_220b31449_Param>& _10322_p) {
	if ((_21d82127e_IsAnonIdent(_10322_p.get()._field_Ident) || _21d820ed7_IsIgnoreIdent(_10322_p.get()._field_Ident))) {
		return jule::Str();;
	};
	if (_22001a45a_IsSelf(_10322_p.ptr())) {
		return jule::Str("_self_", 6);;
	};
	if ((_10322_p.get()._field_Token == nullptr)) {
		return static__202b64e6d_toLocal(0LL,0LL,_10322_p.get()._field_Ident);;
	};
	return static__202b64e6d_toLocal(_10322_p.get()._field_Token.get()._field_Row,_10322_p.get()._field_Token.get()._field_Column,_10322_p.get()._field_Ident);;
}



inline jule::Str static__202b65c93_structure(jule::Ptr<_21eec3006_Struct>& _11726_s) {
	if (_11726_s.get()._field_CppLinked) {
		if (_202c1841c_hasDirective(_11726_s.get()._field_Directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_Ident);;
	};
	return static__202b64a83_toOut(_11726_s.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));;
}



inline jule::Str static__202b6603a_structureIns(jule::Ptr<_21eec33d0_StructIns>& _12829_s) {
	if ((_12829_s.get()._field_Decl.get()._field_CppLinked || (_12829_s.get()._field_Generics.len() == 0LL))) {
		return static__202b65c93_structure(_12829_s.get()._field_Decl);;
	};
	return static__202b64a83_toOut(_12829_s.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12829_s)));;
}



inline jule::Str static__202b662d2_field(jule::Ptr<_21ee92206_Field>& _13622_f) {
	if (_13622_f.get()._field_Owner.get()._field_CppLinked) {
		return _13622_f.get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_Ident);;
}



inline jule::Str static__202b66579_var(jule::Ptr<_220b8746c_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_206dda0ac:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("error", 5))) {
			_case_begin_206dd9430:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("self", 4))) {
			_case_begin_206dd9496:;
			{
				if ((_220c0d559_Sptr(_14423_v.get()._field_Kind.get()._field_Kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);;
				};
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_206dd950c:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_206dd9573:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _220b244c5_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_206dd9809:;
			{
				return static__202b64e6d_toLocal(_14423_v.get()._field_Token.get()._field_Row,_14423_v.get()._field_Token.get()._field_Column,_14423_v.get()._field_Ident);;
			}
		}
		else {
			_case_begin_206dd93b9:;
			{
				return static__202b64a83_toOut(_14423_v.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_206dd8b27:;
	};
}



inline jule::Str static__202b66821_iterBegin(jule::Uintptr _16725_it) {
	jule::Str _16817_obj = jule::Str::alloc(0LL, 30LL);;
	_16817_obj+=jule::Str("_iter_begin_", 12);
	_16817_obj+=_220b24261_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16725_it)),15LL);
	return _16817_obj;;
}



inline jule::Str static__202b66ab8_iterEnd(jule::Uintptr _17523_it) {
	jule::Str _17617_obj = jule::Str::alloc(0LL, 30LL);;
	_17617_obj+=jule::Str("_iter_end_", 10);
	_17617_obj+=_220b24261_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17523_it)),15LL);
	return _17617_obj;;
}



inline jule::Str static__202b66d60_iterNext(jule::Uintptr _18324_it) {
	jule::Str _18417_obj = jule::Str::alloc(0LL, 30LL);;
	_18417_obj+=jule::Str("_iter_next_", 11);
	_18417_obj+=_220b24261_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18324_it)),15LL);
	return _18417_obj;;
}



inline jule::Str static__202b67107_label(jule::Str& _19122_ident) {
	jule::Str _19217_obj = jule::Str::alloc(0LL, 30LL);;
	_19217_obj+=jule::Str("_julec_label_", 13);
	_19217_obj+=_19122_ident;
	return _19217_obj;;
}



inline jule::Str static__202b6739e_matchEnd(jule::Uintptr _19924_m) {
	jule::Str _20017_obj = jule::Str::alloc(0LL, 30LL);;
	_20017_obj+=jule::Str("_match_end_", 11);
	_20017_obj+=_220b24261_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19924_m)),15LL);
	return _20017_obj;;
}



inline jule::Str static__202b67646_caseBegin(jule::Uintptr _20725_c) {
	jule::Str _20817_obj = jule::Str::alloc(0LL, 30LL);;
	_20817_obj+=jule::Str("_case_begin_", 12);
	_20817_obj+=_220b24261_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20725_c)),15LL);
	return _20817_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _202b645bb_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _202b96d5c_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _202b6c371_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _202c0b0e1_Str(_202c0ad05_customType* _self_) {
	return (*_self_)._field_kind;;
}



inline jule::Bool _202c0b3ee_Equal(jule::Ptr<_202c0ad05_customType> _self_, jule::Ptr<_220c0ae5d_TypeKind> _3921_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _202c0ad05_customType _Src) {
	_Stream << _202c0b0e1_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_202c0b7a6_typeCoder> static__202c0bce5_new(jule::Ptr<_202c052a5_ObjectCoder>& _6224_oc) {
	jule::Ptr<_202c0b7a6_typeCoder> _6317_tc = jule::new_ptr<_202c0b7a6_typeCoder>(_202c0b7a6_typeCoder{._field_oc=_6224_oc, });;
	_6317_tc.get()._field_rc=static__202c145a0_new(_6317_tc);
	return _6317_tc;;
}



inline jule::Str _202c0c103_toType(_202c0b7a6_typeCoder* _self_, jule::Str _6929_id) {
	if ((_6929_id != jule::Str("uintptr", 7))) {
		_6929_id=_220177bc2_RealKindOf(_6929_id);
	};
	if (((97LL <= _6929_id[0LL]) && (_6929_id[0LL] <= 122LLU))) {
		_6929_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6929_id);;
}



inline jule::Str _202c0c411_prim(_202c0b7a6_typeCoder* _self_, jule::Ptr<_220c10baa_Prim> _8023_p) {
	return _202c0c103_toType(&(*_self_), _220c1101d_Str(_8023_p.ptr()));;
}



inline jule::Str _202c0c71e_tuple(_202c0b7a6_typeCoder* _self_, jule::Ptr<_220c15929_Tuple> _8528_t) {
	jule::Str _8617_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _8528_t.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_206ee0569:;
		if (it != expr.end()) {
			jule::Ptr<_220c0ae5d_TypeKind> _8721_tk = *it;
			{
				_8617_obj+=_202c11b63_kind(&(*_self_), _8721_tk);
				_8617_obj+=jule::Str(",", 1);
			}
			_iter_next_206ee0569:;
			++it;
			goto _iter_begin_206ee0569;
		}
		_iter_end_206ee0569:;
	};
	(_8617_obj).mut_slice(0LL,(_8617_obj.len() - 1LL));;
	_8617_obj+=jule::Str(">", 1);
	return _8617_obj;;
}



inline jule::Str _202c0ca2c_asSptr(_202c0b7a6_typeCoder* _self_, jule::Str _9725_elem) {
	jule::Str _9817_obj = jule::Str("jule::Ptr<", 10);;
	_9817_obj+=_9725_elem;
	_9817_obj+=jule::Str(">", 1);
	return _9817_obj;;
}



inline jule::Str _202c0cd3a_asPtr(_202c0b7a6_typeCoder* _self_, jule::Str _10524_elem) {
	return (_10524_elem + jule::Str("*", 1));;
}



inline jule::Str _202c0d148_sptr(_202c0b7a6_typeCoder* _self_, jule::Ptr<_220c1443e_Sptr> _11027_sptr) {
	return _202c0ca2c_asSptr(&(*_self_), _202c11b63_kind(&(*_self_), _11027_sptr.get()._field_Elem));;
}



inline jule::Str _202c0d456_ptr(_202c0b7a6_typeCoder* _self_, jule::Ptr<_220c179a3_Ptr> _11526_p) {
	;
	if (_220c18476_IsUnsafe(_11526_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _12017_elem = _202c11b63_kind(&(*_self_), _11526_p.get()._field_Elem);;
	_12017_elem+=jule::Str("*", 1);
	return _12017_elem;;
}



inline jule::Str _202c0d764_enumDecl(_202c0b7a6_typeCoder* _self_, jule::Ptr<_220b38374_Enum> _12631_e) {
	return _202c11b63_kind(&(*_self_), _12631_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _202c0da72_typeEnumDecl(_202c0b7a6_typeCoder* _self_, jule::Ptr<_220b38ae4_TypeEnum> _13135_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _202c0dd80_asSlice(_202c0b7a6_typeCoder* _self_, jule::Ptr<_220c0ae5d_TypeKind> _13530_elem) {
	jule::Str _13617_obj = jule::Str("jule::Slice<", 12);;
	_13617_obj+=_202c11b63_kind(&(*_self_), _13530_elem);
	_13617_obj+=jule::Str(">", 1);
	return _13617_obj;;
}



inline jule::Str _202c0e18d_slice(_202c0b7a6_typeCoder* _self_, jule::Ptr<_220c14d9b_Slc> _14328_s) {
	return _202c0dd80_asSlice(&(*_self_), _14328_s.get()._field_Elem);;
}



inline jule::Str _202c0e49b_mapType(_202c0b7a6_typeCoder* _self_, jule::Ptr<_220c16452_Map> _14830_m) {
	jule::Str _14917_obj = jule::Str("jule::Map<", 10);;
	_14917_obj+=_202c11b63_kind(&(*_self_), _14830_m.get()._field_Key);
	_14917_obj+=jule::Str(",", 1);
	_14917_obj+=_202c11b63_kind(&(*_self_), _14830_m.get()._field_Val);
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;;
}



inline jule::Str _202c0e7a9_traitIdent(_202c0b7a6_typeCoder* _self_, jule::Str _15729_ident) {
	jule::Str _15817_obj = jule::Str("jule::Trait<", 12);;
	_15817_obj+=_15729_ident;
	_15817_obj+=jule::Str(">", 1);
	return _15817_obj;;
}



inline jule::Str _202c0eab7_traitDecl(_202c0b7a6_typeCoder* _self_, jule::Ptr<_220b376b4_Trait> _16528_t) {
	return _202c0e7a9_traitIdent(&(*_self_), static__202b65754_traitDecl(_16528_t));;
}



inline jule::Str _202c0edc5_structure(_202c0b7a6_typeCoder* _self_, jule::Ptr<_21eec3006_Struct> _17028_s) {
	jule::Str _17117_rep = jule::Str();;
	if ((_17028_s.get()._field_CppLinked && (!(_202c1841c_hasDirective(_17028_s.get()._field_Directives,jule::Str("typedef", 7)))))) {
		_17117_rep+=jule::Str("struct ", 7);
	};
	_17117_rep+=static__202b65c93_structure(_17028_s);
	return _17117_rep;;
}



inline jule::Str _202c101d3_structureIns(_202c0b7a6_typeCoder* _self_, jule::Ptr<_21eec33d0_StructIns> _18035_s) {
	if (_18035_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _18221_ident = static__202b6603a_structureIns(_18035_s);;
		if ((_18035_s.get()._field_Generics.len() > 0LL)) {
			_18221_ident+=jule::Str("<", 1);
			{
				auto &expr = _18035_s.get()._field_Generics;
				auto it = expr.begin();
				_iter_begin_206eebb6e:;
				if (it != expr.end()) {
					jule::Ptr<_220c09731_InsGeneric> _18529_g = *it;
					{
						_18221_ident+=_202c11b63_kind(&(*_self_), _18529_g.get()._field_Kind);
						_18221_ident+=jule::Str(",", 1);
					}
					_iter_next_206eebb6e:;
					++it;
					goto _iter_begin_206eebb6e;
				}
				_iter_end_206eebb6e:;
			};
			(_18221_ident).mut_slice(0LL,(_18221_ident.len() - 1LL));;
			_18221_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_21ee6d710_Directive> _19217_d = _202c18087_findDirective(_18035_s.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_19217_d != nullptr)) {
			(_18221_ident).buffer.insert(0, ((_202c0a156_concatAllParts(_19217_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _18221_ident;;
	};
	return static__202b6603a_structureIns(_18035_s);;
}



inline jule::Str _202c104e1_array(_202c0b7a6_typeCoder* _self_, jule::Ptr<_220c17046_Arr> _20228_a) {
	jule::Str _20317_obj = jule::Str("jule::Array<", 12);;
	_20317_obj+=_202c11b63_kind(&(*_self_), _20228_a.get()._field_Elem);
	_20317_obj+=jule::Str(",", 1);
	_20317_obj+=_220b244c5_Itoa(_20228_a.get()._field_N);
	_20317_obj+=jule::Str(">", 1);
	return _20317_obj;;
}



inline jule::Str _202c10b0c_paramIns(_202c0b7a6_typeCoder* _self_, jule::Ptr<_220b31823_ParamIns>& _22832_p) {
	jule::Str _22917_obj = jule::Str();;
	if (_22832_p.get()._field_Decl.get()._field_Variadic) {
		_22917_obj+=jule::Str("jule::Slice<", 12);
		_22917_obj+=_202c11b63_kind(&(*_self_), _22832_p.get()._field_Kind);
		_22917_obj+=jule::Str(">", 1);
	} else {
		_22917_obj+=_202c11b63_kind(&(*_self_), _22832_p.get()._field_Kind);
	};
	if (_22832_p.get()._field_Decl.get()._field_Reference) {
		_22917_obj+=jule::Str("&", 1);
	};
	return _22917_obj;;
}



inline void _202c11239_funcInsResult(_202c0b7a6_typeCoder* _self_, jule::Str& _25837_s, jule::Ptr<_220b31a10_FnIns>& _25850_f) {
	if (_22001c270_IsVoid(_25850_f.get()._field_Decl.ptr())) {
		if (_25850_f.get()._field_Decl.get()._field_Exceptional) {
			_25837_s+=jule::Str("jule::VoidExceptional", 21);
		} else {
			_25837_s+=jule::Str("void", 4);
		};
		return;;
	};
	if (_25850_f.get()._field_Decl.get()._field_Exceptional) {
		_25837_s+=jule::Str("jule::Exceptional<", 18);
		_202c163c6_codeMut1((*_self_)._field_rc.ptr(), _25837_s,_25850_f.get()._field_Result);
		_25837_s+=jule::Str(">", 1);
		return;;
	};
	_202c163c6_codeMut1((*_self_)._field_rc.ptr(), _25837_s,_25850_f.get()._field_Result);
}



inline jule::Str _202c11547_anonFunc(_202c0b7a6_typeCoder* _self_, jule::Ptr<_220b31a10_FnIns> _27631_f) {
	if (((_27631_f.get()._field_Result != nullptr) && (_220c0ee84_Tup(_27631_f.get()._field_Result.ptr()) != nullptr))) {
		_202b90570_pushResultIns((*_self_)._field_oc, _27631_f);
	};
	jule::Str _28017_decl = jule::Str();;
	_202c11239_funcInsResult(&(*_self_), _28017_decl,_27631_f);
	_28017_decl+=jule::Str("(", 1);
	if ((_27631_f.get()._field_Params.len() > 0LL)) {
		{
			auto &expr = _27631_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_20700b189:;
			if (it != expr.end()) {
				jule::Ptr<_220b31823_ParamIns> _28425_param = *it;
				{
					if (_22001a45a_IsSelf(_28425_param.get()._field_Decl.ptr())) {
						goto _iter_next_20700b189;
					};
					_28017_decl+=_202c10b0c_paramIns(&(*_self_), _28425_param);
					_28017_decl+=jule::Str(",", 1);
				}
				_iter_next_20700b189:;
				++it;
				goto _iter_begin_20700b189;
			}
			_iter_end_20700b189:;
		};
		(_28017_decl).mut_slice(0LL,(_28017_decl.len() - 1LL));;
	} else {
		_28017_decl+=jule::Str("void", 4);
	};
	_28017_decl+=jule::Str(")", 1);
	return _28017_decl;;
}



inline jule::Str _202c11855_func(_202c0b7a6_typeCoder* _self_, jule::Ptr<_220b31a10_FnIns> _30027_f) {
	jule::Str _30117_obj = jule::Str("jule::Fn<", 9);;
	_30117_obj+=_202c11547_anonFunc(&(*_self_), _30027_f);
	_30117_obj+=jule::Str(">", 1);
	return _30117_obj;;
}



inline jule::Str _202c11b63_kind(_202c0b7a6_typeCoder* _self_, jule::Ptr<_220c0ae5d_TypeKind> _30827_k) {
	{
		
		if ((_220c0e747_Struct(_30827_k.ptr()) != nullptr)) {
			_case_begin_20700e39b:;
			{
				return _202c101d3_structureIns(&(*_self_), _220c0e747_Struct(_30827_k.ptr()));;
			}
		}
		else if (_220c0bb2e_CppLinked(_30827_k.ptr())) {
			_case_begin_20700e423:;
			{
				return _30827_k.get()._field_CppIdent;;
			}
		}
		else if ((_220c0d2e5_Prim(_30827_k.ptr()) != nullptr)) {
			_case_begin_20700e49a:;
			{
				return _202c0c411_prim(&(*_self_), _220c0d2e5_Prim(_30827_k.ptr()));;
			}
		}
		else if ((_220c0ee84_Tup(_30827_k.ptr()) != nullptr)) {
			_case_begin_20700e522:;
			{
				return _202c0c71e_tuple(&(*_self_), _220c0ee84_Tup(_30827_k.ptr()));;
			}
		}
		else if ((_220c0d559_Sptr(_30827_k.ptr()) != nullptr)) {
			_case_begin_20700e599:;
			{
				return _202c0d148_sptr(&(*_self_), _220c0d559_Sptr(_30827_k.ptr()));;
			}
		}
		else if ((_220c0d7bd_Ptr(_30827_k.ptr()) != nullptr)) {
			_case_begin_20700e621:;
			{
				return _202c0d456_ptr(&(*_self_), _220c0d7bd_Ptr(_30827_k.ptr()));;
			}
		}
		else if ((_220c0da32_Enum(_30827_k.ptr()) != nullptr)) {
			_case_begin_20700e698:;
			{
				return _202c0d764_enumDecl(&(*_self_), _220c0da32_Enum(_30827_k.ptr()));;
			}
		}
		else if ((_220c0dc96_TypeEnum(_30827_k.ptr()) != nullptr)) {
			_case_begin_20700e720:;
			{
				return _202c0da72_typeEnumDecl(&(*_self_), _220c0dc96_TypeEnum(_30827_k.ptr()));;
			}
		}
		else if ((_220c0e26e_Slc(_30827_k.ptr()) != nullptr)) {
			_case_begin_20700e797:;
			{
				return _202c0e18d_slice(&(*_self_), _220c0e26e_Slc(_30827_k.ptr()));;
			}
		}
		else if ((_220c0ec20_Map(_30827_k.ptr()) != nullptr)) {
			_case_begin_20700e81e:;
			{
				return _202c0e49b_mapType(&(*_self_), _220c0ec20_Map(_30827_k.ptr()));;
			}
		}
		else if ((_220c0e9ab_Trait(_30827_k.ptr()) != nullptr)) {
			_case_begin_20700e896:;
			{
				return _202c0eab7_traitDecl(&(*_self_), _220c0e9ab_Trait(_30827_k.ptr()));;
			}
		}
		else if ((_220c0e00a_Arr(_30827_k.ptr()) != nullptr)) {
			_case_begin_20700e91d:;
			{
				return _202c104e1_array(&(*_self_), _220c0e00a_Arr(_30827_k.ptr()));;
			}
		}
		else if ((_220c0e4d3_Fn(_30827_k.ptr()) != nullptr)) {
			_case_begin_20700e995:;
			{
				return _202c11855_func(&(*_self_), _220c0e4d3_Fn(_30827_k.ptr()));;
			}
		}
		_match_end_20700e1c0:;
	};
	{
		auto &_match_expr{ _30827_k.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_202c0ad05_customType>>()) {
			_case_begin_2070171a6:;
			{
				return _30827_k.get()._field_Kind.operator jule::Ptr<_202c0ad05_customType>().get()._field_kind;;
			}
		}
		else {
			_case_begin_207012c73:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_20701742b:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _202c0b7a6_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_202c14094_resultCoder> static__202c145a0_new(jule::Ptr<_202c0b7a6_typeCoder>& _36224_tc) {
	return jule::new_ptr<_202c14094_resultCoder>(_202c14094_resultCoder{._field_tc=_36224_tc});;
}



inline void _202c148be_ptr(_202c14094_resultCoder* _self_, jule::Str& _36627_s, jule::Ptr<_220c179a3_Ptr> _36639_p) {
	_36627_s+=jule::Str("p", 1);
	_202c160a7_codeMut(&(*_self_), _36627_s,_36639_p.get()._field_Elem);
}



inline void _202c14bdd_sptr(_202c14094_resultCoder* _self_, jule::Str& _37128_s, jule::Ptr<_220c1443e_Sptr> _37140_p) {
	_37128_s+=jule::Str("x", 1);
	_202c160a7_codeMut(&(*_self_), _37128_s,_37140_p.get()._field_Elem);
}



inline void _202c1500c_mapType(_202c14094_resultCoder* _self_, jule::Str& _37631_s, jule::Ptr<_220c16452_Map> _37643_p) {
	_37631_s+=jule::Str("m", 1);
	_202c160a7_codeMut(&(*_self_), _37631_s,_37643_p.get()._field_Key);
	_202c160a7_codeMut(&(*_self_), _37631_s,_37643_p.get()._field_Val);
}



inline void _202c1532b_slice(_202c14094_resultCoder* _self_, jule::Str& _38229_s, jule::Ptr<_220c14d9b_Slc> _38241_slc) {
	_38229_s+=jule::Str("s", 1);
	_202c160a7_codeMut(&(*_self_), _38229_s,_38241_slc.get()._field_Elem);
}



inline void _202c1564a_arr(_202c14094_resultCoder* _self_, jule::Str& _38727_s, jule::Ptr<_220c17046_Arr> _38739_arr) {
	_38727_s+=jule::Str("a", 1);
	_38727_s+=_220b24393_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_38739_arr.get()._field_N)),16LL);
	_202c160a7_codeMut(&(*_self_), _38727_s,_38739_arr.get()._field_Elem);
}



inline void _202c15969_func(_202c14094_resultCoder* _self_, jule::Str& _39328_s, jule::Ptr<_220b31a10_FnIns> _39340_f) {
	_39328_s+=jule::Str("f", 1);
	{
		auto &expr = _39340_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_20701d179:;
		if (it != expr.end()) {
			jule::Ptr<_220b31823_ParamIns> _39521_p = *it;
			{
				if (_39521_p.get()._field_Decl.get()._field_Reference) {
					_39328_s+=jule::Str("r", 1);
				};
				_202c160a7_codeMut(&(*_self_), _39328_s,_39521_p.get()._field_Kind);
			}
			_iter_next_20701d179:;
			++it;
			goto _iter_begin_20701d179;
		}
		_iter_end_20701d179:;
	};
	if ((_39340_f.get()._field_Result != nullptr)) {
		_202c160a7_codeMut(&(*_self_), _39328_s,_39340_f.get()._field_Result);
	};
}



inline void _202c15c88_tup(_202c14094_resultCoder* _self_, jule::Str& _40627_s, jule::Ptr<_220c15929_Tuple> _40639_tup) {
	{
		auto &expr = _40639_tup.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_20701ed5c:;
		if (it != expr.end()) {
			jule::Ptr<_220c0ae5d_TypeKind> _40721_t = *it;
			{
				_40627_s+=jule::Str("__jule_tuple_", 13);
				_202c160a7_codeMut(&(*_self_), _40627_s,_40721_t);
			}
			_iter_next_20701ed5c:;
			++it;
			goto _iter_begin_20701ed5c;
		}
		_iter_end_20701ed5c:;
	};
}



inline void _202c160a7_codeMut(_202c14094_resultCoder* _self_, jule::Str& _41331_s, jule::Ptr<_220c0ae5d_TypeKind>& _41344_t) {
	{
		auto &_match_expr{ _41344_t.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_220c179a3_Ptr>>()) {
			_case_begin_207020ea1:;
			{
				_202c148be_ptr(&(*_self_), _41331_s,_41344_t.get()._field_Kind.operator jule::Ptr<_220c179a3_Ptr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220c1443e_Sptr>>()) {
			_case_begin_20702127b:;
			{
				_202c14bdd_sptr(&(*_self_), _41331_s,_41344_t.get()._field_Kind.operator jule::Ptr<_220c1443e_Sptr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220c16452_Map>>()) {
			_case_begin_2070212e2:;
			{
				_202c1500c_mapType(&(*_self_), _41331_s,_41344_t.get()._field_Kind.operator jule::Ptr<_220c16452_Map>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220c14d9b_Slc>>()) {
			_case_begin_207021358:;
			{
				_202c1532b_slice(&(*_self_), _41331_s,_41344_t.get()._field_Kind.operator jule::Ptr<_220c14d9b_Slc>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220c17046_Arr>>()) {
			_case_begin_2070213be:;
			{
				_202c1564a_arr(&(*_self_), _41331_s,_41344_t.get()._field_Kind.operator jule::Ptr<_220c17046_Arr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220b31a10_FnIns>>()) {
			_case_begin_207021952:;
			{
				_202c15969_func(&(*_self_), _41331_s,_41344_t.get()._field_Kind.operator jule::Ptr<_220b31a10_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220b38374_Enum>>()) {
			_case_begin_2070219b8:;
			{
				jule::Ptr<_220b38374_Enum> _42817_te = _41344_t.get()._field_Kind.operator jule::Ptr<_220b38374_Enum>();;
				_41331_s+=static__202b64a83_toOut(_42817_te.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_42817_te)));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220b38ae4_TypeEnum>>()) {
			_case_begin_207021a2e:;
			{
				jule::Ptr<_220b38ae4_TypeEnum> _43117_te = _41344_t.get()._field_Kind.operator jule::Ptr<_220b38ae4_TypeEnum>();;
				_41331_s+=static__202b64a83_toOut(_43117_te.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43117_te)));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eec33d0_StructIns>>()) {
			_case_begin_207021a95:;
			{
				jule::Ptr<_21eec33d0_StructIns> _43421_si = _41344_t.get()._field_Kind.operator jule::Ptr<_21eec33d0_StructIns>();;
				_41331_s+=static__202b6603a_structureIns(_43421_si);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220b376b4_Trait>>()) {
			_case_begin_207021b0b:;
			{
				jule::Ptr<_220b376b4_Trait> _43721_trt = _41344_t.get()._field_Kind.operator jule::Ptr<_220b376b4_Trait>();;
				_41331_s+=static__202b65754_traitDecl(_43721_trt);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220c10baa_Prim>>()) {
			_case_begin_207021b72:;
			{
				_41331_s+=_41344_t.get()._field_Kind.operator jule::Ptr<_220c10baa_Prim>().get()._field_Kind;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220c15929_Tuple>>()) {
			_case_begin_207021bd8:;
			{
				_202c15c88_tup(&(*_self_), _41331_s,_41344_t.get()._field_Kind.operator jule::Ptr<_220c15929_Tuple>());
			}
		}
		else {
			_case_begin_2070211e3:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:444:13"));;
			}
		}
		_match_end_207021039:;
	};
}



inline void _202c163c6_codeMut1(_202c14094_resultCoder* _self_, jule::Str& _44832_s, jule::Ptr<_220c0ae5d_TypeKind>& _44845_t) {
	jule::Ptr<_220c15929_Tuple> _44917_tup = _220c0ee84_Tup(_44845_t.ptr());;
	if ((_44917_tup != nullptr)) {
		_202c15c88_tup(&(*_self_), _44832_s,_44917_tup);
	} else {
		_44832_s+=_202c11b63_kind((*_self_)._field_tc.ptr(), _44845_t);
	};
}



inline jule::Str _202c166a1_code(_202c14094_resultCoder* _self_, jule::Ptr<_220c0ae5d_TypeKind>& _45728_t) {
	jule::Str _45817_s = jule::Str::alloc(0LL, 20LL);;
	_202c160a7_codeMut(&(*_self_), _45817_s,_45728_t);
	return _45817_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _202c14094_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20702ba06_Name(_20702b693_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _20702bb38_What(_20702b693_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _20702bc7b_Reset(_20702b693_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _20702bdbe_Short(_20702b693_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _20702b693_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _20702ee5a_Name(_2070303cd_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _2070306b9_What(_2070303cd_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _2070307eb_Reset(_2070303cd_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _20703092d_Short(_2070303cd_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _2070303cd_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _207033777_Name(_207033bea_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _207033ed6_What(_207033bea_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _207034118_Reset(_207033bea_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _20703424a_Short(_207033bea_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _207033bea_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _2070370d8_Name(_20703755b_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _207037847_What(_20703755b_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _207037979_Reset(_20703755b_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _207037aab_Short(_20703755b_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _20703755b_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _20703a905_Name(_20703ad78_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _20703b164_What(_20703ad78_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _20703b296_Reset(_20703ad78_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _20703b3c8_Short(_20703ad78_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _20703ad78_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_202c60431_FlagSet> static__202c6071c_New(void) {
	return jule::new_ptr<_202c60431_FlagSet>(_202c60431_FlagSet{._field_flags=jule::Slice<jule::Trait<_202c5d9b2_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_202c5d9b2_CommonFlag> _202c60ba1_FindFlag(_202c60431_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_2070461d5:;
		if (it != expr.end()) {
			jule::Trait<_202c5d9b2_CommonFlag> _7221_flag = *it;
			{
				if ((_202c5d9b2_CommonFlag_mptr_data[(_7221_flag).type_offset]._202c28e77_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_2070461d5:;
			++it;
			goto _iter_begin_2070461d5;
		}
		_iter_end_2070461d5:;
	};
	return nullptr;;
}



inline jule::Trait<_202c5d9b2_CommonFlag> _202c60eae_FindFlagShort(_202c60431_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_207046812:;
		if (it != expr.end()) {
			jule::Trait<_202c5d9b2_CommonFlag> _8221_flag = *it;
			{
				if ((_202c5d9b2_CommonFlag_mptr_data[(_8221_flag).type_offset]._202c290a9_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_207046812:;
			++it;
			goto _iter_begin_207046812;
		}
		_iter_end_207046812:;
	};
	return nullptr;;
}



inline jule::Slice<jule::Trait<_202c5d9b2_CommonFlag>> _202c61223_Flags(_202c60431_FlagSet* _self_) {
	return (*_self_)._field_flags;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _202c61531_Parse(_202c60431_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_202c62b09_argParser _11617_ap = _202c62b09_argParser{._field_set=(*_self_), ._field_args=_11524_args, };;
	({
		auto except = _202c63ee5_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline void _202c6170c_Reset(_202c60431_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_207048748:;
		if (it != expr.end()) {
			jule::Trait<_202c5d9b2_CommonFlag> _12616_f = *it;
			{
				_202c5d9b2_CommonFlag_mptr_data[(_12616_f).type_offset]._202c29362_Reset(_12616_f);
			}
			_iter_next_207048748:;
			++it;
			goto _iter_begin_207048748;
		}
		_iter_end_207048748:;
	};
}



inline jule::Ptr<_20703ad78_Flag> _2070accc9_addFlagCommon(_202c60431_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_2070ae429:;
			{
				goto _match_end_2070ae3c4;
			}
		}
		_match_end_2070ae3c4:;
	};
	if ((_202c60ba1_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_202c60eae_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_20703ad78_Flag> _14817_flag = jule::new_ptr<_20703ad78_Flag>(_20703ad78_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_202c5d9b2_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;;
}

inline jule::Ptr<_20703755b_Flag> _2070b66c8_addFlagCommon(_202c60431_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_2070b7cc3:;
			{
				goto _match_end_2070b7c29;
			}
		}
		_match_end_2070b7c29:;
	};
	if ((_202c60ba1_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_202c60eae_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_20703755b_Flag> _14817_flag = jule::new_ptr<_20703755b_Flag>(_20703755b_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_202c5d9b2_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;;
}



inline void _2070aac50_AddVar(_202c60431_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_20703ad78_Flag> _17617_flag = _2070accc9_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _2070b4682_AddVar(_202c60431_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_20703755b_Flag> _17617_flag = _2070b66c8_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _202c60431_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _21ee8cd5b_Str(_21eec33d0_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*_self_)._field_Decl.get()._field_Ident;
	if (((*_self_)._field_Generics.len() > 0LL)) {
		_25017_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_Generics;
			auto it = expr.begin();
			_iter_begin_20594b78a:;
			if (it != expr.end()) {
				jule::Ptr<_220c09731_InsGeneric> &_25420_g = *it;
				{
					_25017_kind+=_220c0b359_Str(_25420_g.get()._field_Kind.ptr());
					_25017_kind+=jule::Str(",", 1);
				}
				_iter_next_20594b78a:;
				++it;
				goto _iter_begin_20594b78a;
			}
			_iter_end_20594b78a:;
		};
		(_25017_kind).mut_slice(0LL,(_25017_kind.len() - 1LL));;
		_25017_kind+=jule::Str("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _21ee93dc8_Equal(jule::Ptr<_21eec33d0_StructIns> _self_, jule::Ptr<_220c0ae5d_TypeKind> _26521_other) {
	jule::Ptr<_21eec33d0_StructIns> _26613_s = _220c0e747_Struct(_26521_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I64 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_220c0b667_Equal(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_20594eddc:;
	}
	_iter_end_20594eddc:;;
	return true;;
}



inline jule::Bool _21ee9502d_Same(_21eec33d0_StructIns* _self_, jule::Ptr<_21eec33d0_StructIns> _29319_s) {
	if ((((*_self_)._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_20595232e:;
		if (it != expr.end()) {
			jule::I64 _29713_i = it - expr.begin();
			jule::Ptr<_220c09731_InsGeneric> &_29716_g = *it;
			{
				if ((!(_220c0b667_Equal(_29716_g.get()._field_Kind, _29319_s.get()._field_Generics[_29713_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_20595232e:;
			++it;
			_29713_i++;
			goto _iter_begin_20595232e;
		}
		_iter_end_20595232e:;
	};
	return true;;
}



inline jule::Ptr<_220b31636_Fn> _21ee97382_FindMethod(_21eec33d0_StructIns* _self_, jule::Str _30729_ident, jule::Bool _30741_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_205953c59:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> _30821_f = *it;
			{
				if (((_30821_f.get()._field_Statically == _30741_statically) && (_30821_f.get()._field_Ident == _30729_ident))) {
					return _30821_f;;
				};
			}
			_iter_next_205953c59:;
			++it;
			goto _iter_begin_205953c59;
		}
		_iter_end_205953c59:;
	};
	return nullptr;;
}



inline jule::Ptr<_21eec31e3_FieldIns> _21ee986a2_FindField(_21eec33d0_StructIns* _self_, jule::Str _31828_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_205954e8b:;
		if (it != expr.end()) {
			jule::Ptr<_21eec31e3_FieldIns> _31921_f = *it;
			{
				if ((_31921_f.get()._field_Decl.get()._field_Ident == _31828_ident)) {
					return _31921_f;;
				};
			}
			_iter_next_205954e8b:;
			++it;
			goto _iter_begin_205954e8b;
		}
		_iter_end_205954e8b:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b8746c_Var> _21ee4067c_FindStatic(_21eec33d0_StructIns* _self_, jule::Str _32929_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_205955651:;
		if (it != expr.end()) {
			jule::Ptr<_220b8746c_Var> _33021_v = *it;
			{
				if ((_33021_v.get()._field_Ident == _32929_ident)) {
					return _33021_v;;
				};
			}
			_iter_next_205955651:;
			++it;
			goto _iter_begin_205955651;
		}
		_iter_end_205955651:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _21eec33d0_StructIns _Src) {
	_Stream << _21ee8cd5b_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_22158375d_ObjectDeadCode> static__221583bae_new(jule::Ptr<_221064c23_IR>& _3424_ir) {
	return jule::new_ptr<_22158375d_ObjectDeadCode>(_22158375d_ObjectDeadCode{._field_ir=_3424_ir});;
}



inline jule::Bool _206960836_isLive(jule::Ptr<_22158375d_ObjectDeadCode> _self_, jule::Ptr<_220b376b4_Trait>& _4030_t) {
	jule::Slice<jule::Ptr<_220b376b4_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_2069625c4:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_2069622d8:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_206962cab:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_206962cab:;
			++it;
			_5213_i++;
			goto _iter_begin_206962cab;
		}
		_iter_end_206962cab:;
	};
	return false;;
}

inline jule::Bool _20696586e_isLive(jule::Ptr<_22158375d_ObjectDeadCode> _self_, jule::Ptr<_220b31a10_FnIns>& _4030_t) {
	jule::Slice<jule::Ptr<_220b31a10_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_2069678d7:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_20696782c:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_20696807a:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_20696807a:;
			++it;
			_5213_i++;
			goto _iter_begin_20696807a;
		}
		_iter_end_20696807a:;
	};
	return false;;
}

inline jule::Bool _20696d2b1_isLive(jule::Ptr<_22158375d_ObjectDeadCode> _self_, jule::Ptr<_21eec33d0_StructIns>& _4030_t) {
	jule::Slice<jule::Ptr<_21eec33d0_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_206971407:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_206971182:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_206972271:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_206972271:;
			++it;
			_5213_i++;
			goto _iter_begin_206972271;
		}
		_iter_end_206972271:;
	};
	return false;;
}

inline jule::Bool _206973ddd_isLive(jule::Ptr<_22158375d_ObjectDeadCode> _self_, jule::Ptr<_220b8746c_Var>& _4030_t) {
	jule::Slice<jule::Ptr<_220b8746c_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_20697596c:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_20697584b:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_2069758a1:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_2069758a1:;
			++it;
			_5213_i++;
			goto _iter_begin_2069758a1;
		}
		_iter_end_2069758a1:;
	};
	return false;;
}



inline void _206960b99_pushLive(jule::Ptr<_22158375d_ObjectDeadCode> _self_, jule::Ptr<_220b376b4_Trait> _6035_t) {
	{
		
{
			_case_begin_2069646d6:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_206964384:;
	};
}

inline void _206966232_pushLive(jule::Ptr<_22158375d_ObjectDeadCode> _self_, jule::Ptr<_220b31a10_FnIns> _6035_t) {
	{
		
{
			_case_begin_20696a269:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_206969ee4:;
	};
}

inline void _20696c58a_pushLive(jule::Ptr<_22158375d_ObjectDeadCode> _self_, jule::Ptr<_21eec33d0_StructIns> _6035_t) {
	{
		
{
			_case_begin_20696dc95:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_20696d9a9:;
	};
}

inline void _206974251_pushLive(jule::Ptr<_22158375d_ObjectDeadCode> _self_, jule::Ptr<_220b8746c_Var> _6035_t) {
	{
		
{
			_case_begin_206977dc0:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_206977ce3:;
	};
}



inline void _2215b5d89_setReferencesAsLive(jule::Ptr<_22158375d_ObjectDeadCode> _self_, jule::Ptr<_220b329ab_ReferenceStack>& _7344_rs) {
	if ((_7344_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _220b32cca_Len(_7344_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _220b32e0c_At(_7344_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type11) {
					_case_begin_20695e5d2:;
					{
						jule::Ptr<_220b376b4_Trait> _8225_t = _7921_ref.cast_ptr<_220b376b4_Trait>(&__jule_any_type11);;
						if (_206960836_isLive(_self_, _8225_t)) {
							goto _iter_next_20695d955;
						};
						_206960b99_pushLive(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_206960649:;
							if (it != expr.end()) {
								jule::Ptr<_220b31636_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_206965bd2:;
										if (it != expr.end()) {
											jule::Ptr<_220b31a10_FnIns> _8833_mins = *it;
											{
												if (_20696586e_isLive(_self_, _8833_mins)) {
													goto _iter_next_206965bd2;
												};
												_206966232_pushLive(_self_, _8833_mins);
												_2215b5d89_setReferencesAsLive(_self_, _8833_mins.get()._field_Refers);
											}
											_iter_next_206965bd2:;
											++it;
											goto _iter_begin_206965bd2;
										}
										_iter_end_206965bd2:;
									};
								}
								_iter_next_206960649:;
								++it;
								goto _iter_begin_206960649;
							}
							_iter_end_206960649:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_20695e648:;
					{
						jule::Ptr<_220b31a10_FnIns> _9725_f = _7921_ref.cast_ptr<_220b31a10_FnIns>(&__jule_any_type8);;
						if (_20696586e_isLive(_self_, _9725_f)) {
							goto _match_end_20695e46c;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_20696d2b1_isLive(_self_, _9725_f.get()._field_Owner)))) {
								_20696c58a_pushLive(_self_, _9725_f.get()._field_Owner);
								_2215b5d89_setReferencesAsLive(_self_, _9725_f.get()._field_Owner.get()._field_Refers);
							};
						};
						_206966232_pushLive(_self_, _9725_f);
						_2215b5d89_setReferencesAsLive(_self_, _9725_f.get()._field_Refers);
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_20695e725:;
					{
						jule::Ptr<_220b8746c_Var> _11025_v = _7921_ref.cast_ptr<_220b8746c_Var>(&__jule_any_type9);;
						if (_206973ddd_isLive(_self_, _11025_v)) {
							goto _match_end_20695e46c;
						};
						_206974251_pushLive(_self_, _11025_v);
						_2215b5d89_setReferencesAsLive(_self_, _11025_v.get()._field_Refers);
					}
				}
				else if (_match_expr.type == &__jule_any_type10) {
					_case_begin_20695e78b:;
					{
						jule::Ptr<_21eec33d0_StructIns> _11725_s = _7921_ref.cast_ptr<_21eec33d0_StructIns>(&__jule_any_type10);;
						if (_20696d2b1_isLive(_self_, _11725_s)) {
							goto _match_end_20695e46c;
						};
						_20696c58a_pushLive(_self_, _11725_s);
						_2215b5d89_setReferencesAsLive(_self_, _11725_s.get()._field_Refers);
						{
							auto &expr = _11725_s.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_20697b0b0:;
							if (it != expr.end()) {
								jule::Ptr<_220b31636_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_20697b7db:;
										if (it != expr.end()) {
											jule::Ptr<_220b31a10_FnIns> _12433_mins = *it;
											{
												if (_20696586e_isLive(_self_, _12433_mins)) {
													goto _iter_next_20697b7db;
												};
												_206966232_pushLive(_self_, _12433_mins);
												_2215b5d89_setReferencesAsLive(_self_, _12433_mins.get()._field_Refers);
											}
											_iter_next_20697b7db:;
											++it;
											goto _iter_begin_20697b7db;
										}
										_iter_end_20697b7db:;
									};
								}
								_iter_next_20697b0b0:;
								++it;
								goto _iter_begin_20697b0b0;
							}
							_iter_end_20697b0b0:;
						};
					}
				}
				_match_end_20695e46c:;
			};
		}
	_iter_next_20695d955:;
	}
	_iter_end_20695d955:;;
}



inline void _2215b610e_inits(jule::Ptr<_22158375d_ObjectDeadCode> _self_, jule::Ptr<_220b6427e_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_20696465e:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_20697beb2:;
					if (it != expr.end()) {
						jule::Ptr<_220b31636_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_Ident == jule::Str("init", 4))) {
								jule::Ptr<_220b31a10_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_2215b5d89_setReferencesAsLive(_self_, _14029_ins.get()._field_Refers);
							};
						}
						_iter_next_20697beb2:;
						++it;
						goto _iter_begin_20697beb2;
					}
					_iter_end_20697beb2:;
				};
			}
			_iter_next_20696465e:;
			++it;
			goto _iter_begin_20696465e;
		}
		_iter_end_20696465e:;
	};
}



inline void _2215b6384_collectLivePackage(jule::Ptr<_22158375d_ObjectDeadCode> _self_, jule::Ptr<_220b6427e_Package>& _14843_pkg) {
	_2215b610e_inits(_self_, _14843_pkg);
	if (_21b537d66_Test) {
		{
			auto &expr = _14843_pkg.get()._field_Files;
			auto it = expr.begin();
			_iter_begin_20698135c:;
			if (it != expr.end()) {
				jule::Ptr<_220bca1a2_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_Funcs;
						auto it = expr.begin();
						_iter_begin_206981b76:;
						if (it != expr.end()) {
							jule::Ptr<_220b31636_Fn> _15529_f = *it;
							{
								if (_2215b8397_hasDirective(_15529_f.get()._field_Directives,jule::Str("test", 4))) {
									jule::Ptr<_220b31a10_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_2215b5d89_setReferencesAsLive(_self_, _15733_ins.get()._field_Refers);
								};
							}
							_iter_next_206981b76:;
							++it;
							goto _iter_begin_206981b76;
						}
						_iter_end_206981b76:;
					};
				}
				_iter_next_20698135c:;
				++it;
				goto _iter_begin_20698135c;
			}
			_iter_end_20698135c:;
		};
	};
}



inline void _2215b6560_collectLive(jule::Ptr<_22158375d_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_20697e49d:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_2215b6384_collectLivePackage(_self_, _16721_used.get()._field_Package);
				};
			}
			_iter_next_20697e49d:;
			++it;
			goto _iter_begin_20697e49d;
		}
		_iter_end_20697e49d:;
	};
	_2215b6384_collectLivePackage(_self_, _self_.get()._field_ir.get()._field_Main);
	jule::Ptr<_220b31636_Fn> _17517_main = _220b65a33_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_220b31a10_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_2215b5d89_setReferencesAsLive(_self_, _17617_ins.get()._field_Refers);
}



inline void _2215b67d5_removeDeadGlobals(jule::Ptr<_22158375d_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_220b8746c_Var>>& _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18142_vars.len())) {
		{
			jule::Ptr<_220b8746c_Var> _18417_v = _18142_vars[_18217_i];;
			if (_206973ddd_isLive(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_2069868c3;
			};
			_18142_vars=jule::append(_18142_vars.slice(0LL,_18217_i),_18142_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_2069868c3:;
	}
	_iter_end_2069868c3:;;
}



inline void _2215b6a5a_removeDeadFns(jule::Ptr<_22158375d_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_220b31636_Fn>>& _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19338_funcs.len())) {
		{
			jule::Ptr<_220b31636_Fn> _19621_f = _19338_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_220b31a10_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_20696586e_isLive(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_206989d05;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL,_19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_206989d05:;
			}
			_iter_end_206989d05:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				_19338_funcs=jule::append(_19338_funcs.slice(0LL,_19417_i),_19338_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_206986d68;
			};
			(_19417_i)++;
		}
	_iter_next_206986d68:;
	}
	_iter_end_206986d68:;;
}



inline void _2215b6cd0_removeDeadStructs(jule::Ptr<_22158375d_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_21eec3006_Struct>>& _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21442_structs.len())) {
		{
			jule::Ptr<_21eec3006_Struct> _21721_s = _21442_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_21eec33d0_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_2215b6a5a_removeDeadFns(_self_, _22025_ins.get()._field_Methods);
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _20696d2b1_isLive(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_20698dd81;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL,_21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_20698dd81:;
			}
			_iter_end_20698dd81:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				_21442_structs=jule::append(_21442_structs.slice(0LL,_21517_i),_21442_structs.slice((_21517_i + 1LL)));
				goto _iter_next_20698bae8;
			};
			(_21517_i)++;
		}
	_iter_next_20698bae8:;
	}
	_iter_end_20698bae8:;;
}



inline void _2215b7055_removeDeadTraits(jule::Ptr<_22158375d_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_220b376b4_Trait>>& _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23641_traits.len())) {
		{
			jule::Ptr<_220b376b4_Trait> _23921_t = _23641_traits[_23717_i];;
			if ((!(_206960836_isLive(_self_, _23921_t)))) {
				_23641_traits=jule::append(_23641_traits.slice(0LL,_23717_i),_23641_traits.slice((_23717_i + 1LL)));
				goto _iter_next_206991625;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_21eec3006_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_20699336e;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL,_24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_20699336e:;
			}
			_iter_end_20699336e:;;
			(_23717_i)++;
		}
	_iter_next_206991625:;
	}
	_iter_end_206991625:;;
}



inline void _2215b72ca_removeDeadsFile(jule::Ptr<_22158375d_ObjectDeadCode> _self_, jule::Ptr<_220bca1a2_SymbolTable>& _25740_file) {
	_2215b6a5a_removeDeadFns(_self_, _25740_file.get()._field_Funcs);
	_2215b6cd0_removeDeadStructs(_self_, _25740_file.get()._field_Structs);
	_2215b7055_removeDeadTraits(_self_, _25740_file.get()._field_Traits);
	_2215b67d5_removeDeadGlobals(_self_, _25740_file.get()._field_Vars);
}



inline void _2215b7550_removeDeadsPackage(jule::Ptr<_22158375d_ObjectDeadCode> _self_, jule::Ptr<_220b6427e_Package>& _26443_pkg) {
	{
		auto &expr = _26443_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_206997cd0:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _26521_file = *it;
			{
				_2215b72ca_removeDeadsFile(_self_, _26521_file);
			}
			_iter_next_206997cd0:;
			++it;
			goto _iter_begin_206997cd0;
		}
		_iter_end_206997cd0:;
	};
}



inline void _2215b772b_removeDeads(jule::Ptr<_22158375d_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_206998550:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_2215b7550_removeDeadsPackage(_self_, _27121_used.get()._field_Package);
				};
			}
			_iter_next_206998550:;
			++it;
			goto _iter_begin_206998550;
		}
		_iter_end_206998550:;
	};
	_2215b7550_removeDeadsPackage(_self_, _self_.get()._field_ir.get()._field_Main);
}



inline void _2215b7907_elimanate(jule::Ptr<_22158375d_ObjectDeadCode> _self_) {
	_2215b6560_collectLive(_self_);
	_2215b772b_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _22158375d_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_202c052a5_ObjectCoder> static__202b6b859_New(jule::Ptr<_221064c23_IR>& _8624_ir, _202b96d5c_SerializationInfo _8633_info) {
	jule::Ptr<_202c052a5_ObjectCoder> _8717_oc = jule::new_ptr<_202c052a5_ObjectCoder>(_202c052a5_ObjectCoder{._field_ir=_8624_ir, ._field_info=_8633_info, });;
	_8717_oc.get()._field_ec=static__202b5182d_new(_8717_oc);
	_8717_oc.get()._field_sc=static__202b48da8_new(_8717_oc);
	_8717_oc.get()._field_tc=static__202c0bce5_new(_8717_oc);
	_8717_oc.get()._field_dc=static__202b6096e_new(_8717_oc);
	return _8717_oc;;
}



inline void _202b8bc42_write(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Str _9825_s) {
	_self_.get()._field_Obj+=_9825_s;
}



inline void _202bcae18_addIndent(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer+=jule::Str("\t", 1);
}



inline void _202bcb435_doneIndent(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL,(_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _202bce988_indent(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _202bd596c_findAnyType(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_220c0ae5d_TypeKind>& _11736_t) {
	{
		auto &expr = _self_.get()._field_anyTypeMap;
		auto it = expr.begin();
		_iter_begin_206dea012:;
		if (it != expr.end()) {
			jule::I64 _11814_i = it - expr.begin();
			jule::Ptr<_220c0ae5d_TypeKind> _11821_at = *it;
			{
				if (_220c0b667_Equal(_11821_at, _11736_t)) {
					return _11814_i;;
				};
			}
			_iter_next_206dea012:;
			++it;
			_11814_i++;
			goto _iter_begin_206dea012;
		}
		_iter_end_206dea012:;
	};
	return -1LL;;
}



inline jule::I64 _202b91340_pushAnyType(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_220c0ae5d_TypeKind>& _12636_t) {
	jule::I64 _12717_i = _202bd596c_findAnyType(_self_, _12636_t);;
	if ((_12717_i != -1LL)) {
		return _12717_i;;
	};
	_12717_i=static_cast<jule::I64>(_self_.get()._field_anyTypeMap.len());
	_self_.get()._field_anyTypeMap = jule::alloc_for_append(_self_.get()._field_anyTypeMap,1);_self_.get()._field_anyTypeMap.__push(_12636_t);;
	jule::Str _13313_si = _220b244c5_Itoa(_12717_i);;
	if ((_220c0d559_Sptr(_12636_t.ptr()) != nullptr)) {
		jule::Str _13517_elem_kind = _202c11b63_kind(_self_.get()._field_tc.ptr(), _220c0d559_Sptr(_12636_t.ptr()).get()._field_Elem);;
		jule::Str _13617_kind = _202c0ca2c_asSptr(_self_.get()._field_tc.ptr(), _13517_elem_kind);;
		_self_.get()._field_anyObj+=jule::Str("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_13517_elem_kind;
		_self_.get()._field_anyObj+=jule::Str(">().dealloc(); }\n", 17);
		_self_.get()._field_anyObj+=jule::Str("struct jule::Any::Type ", 23);
		_self_.get()._field_anyObj+=jule::Str("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58);
		_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_compare(const jule::Any &any, const ", 37);
		_self_.get()._field_anyObj+=_13617_kind;
		_self_.get()._field_anyObj+=jule::Str(" &other) { return any.type == &__jule_any_type", 46);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52);
	} else {
		jule::Bool _16217_comparable = _220c0c36b_Comparable(_12636_t.ptr());;
		jule::Str _16317_kind = _202c11b63_kind(_self_.get()._field_tc.ptr(), _12636_t);;
		if ((_16317_kind == jule::Str("[<unimplemented_type_kind>]", 27))) {
			jule::outln(_220c0b359_Str(_12636_t.ptr()));
		};
		_self_.get()._field_anyObj+=jule::Str("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_16317_kind;
		_self_.get()._field_anyObj+=jule::Str(">().dealloc(); }\n", 17);
		if (_16217_comparable) {
			_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_eq(void *alloc, void *other) noexcept { return *static_cast<", 61);
			_self_.get()._field_anyObj+=_16317_kind;
			_self_.get()._field_anyObj+=jule::Str("*>(alloc) == *static_cast<", 26);
			_self_.get()._field_anyObj+=_16317_kind;
			_self_.get()._field_anyObj+=jule::Str("*>(other); }\n", 13);
		};
		_self_.get()._field_anyObj+=jule::Str("jule::Str __jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const ", 77);
		_self_.get()._field_anyObj+=_16317_kind;
		_self_.get()._field_anyObj+=jule::Str("*>(alloc)); }\n", 14);
		_self_.get()._field_anyObj+=jule::Str("struct jule::Any::Type ", 23);
		_self_.get()._field_anyObj+=jule::Str("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc, ", 10);
		if (_16217_comparable) {
			_self_.get()._field_anyObj+=jule::Str(".eq=__jule_any_type", 19);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_eq, ", 5);
		};
		_self_.get()._field_anyObj+=jule::Str(".to_str=__jule_any_type", 23);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_to_str};\n", 10);
		if (_16217_comparable) {
			_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_compare(const jule::Any &any, const ", 37);
			_self_.get()._field_anyObj+=_16317_kind;
			_self_.get()._field_anyObj+=jule::Str(" &other) { return any.type == &__jule_any_type", 46);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str(" && __jule_any_type", 19);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_eq(any.data.alloc, (void*)&other); }\n", 38);
		};
	};
	return _12717_i;;
}



inline void _202b90570_pushResultIns(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_220b31a10_FnIns>& _22538_f) {
	jule::Str _22613_s = _202c166a1_code(_self_.get()._field_tc.get()._field_rc.ptr(), _22538_f.get()._field_Result);;
	jule::Bool _22717_ok = false;;
	_self_.get()._field_resultMap.lookup(_22613_s, nullptr, &(_22717_ok));
	if (_22717_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_22613_s]=false;
	jule::Str _23217_obj = jule::Str::alloc(0LL, 128LL);;
	_23217_obj+=jule::Str("struct ", 7);
	_23217_obj+=_22613_s;
	_23217_obj+=jule::Str(" {\n", 3);
	{
		auto &expr = _220c0ee84_Tup(_22538_f.get()._field_Result.ptr()).get()._field_Types;
		auto it = expr.begin();
		_iter_begin_206e0ce59:;
		if (it != expr.end()) {
			jule::I64 _23614_i = it - expr.begin();
			jule::Ptr<_220c0ae5d_TypeKind> _23621_t = *it;
			{
				_23217_obj+=jule::Str("\t", 1);
				_23217_obj+=_202c11b63_kind(_self_.get()._field_tc.ptr(), _23621_t);
				_23217_obj+=jule::Str(" ", 1);
				_23217_obj+=jule::Str("__jule_result_arg", 17);
				_23217_obj+=_220b244c5_Itoa(_23614_i);
				_23217_obj+=jule::Str(";\n", 2);
			}
			_iter_next_206e0ce59:;
			++it;
			_23614_i++;
			goto _iter_begin_206e0ce59;
		}
		_iter_end_206e0ce59:;
	};
	_23217_obj+=jule::Str("};\n", 3);
	_self_.get()._field_resultDecls = jule::alloc_for_append(_self_.get()._field_resultDecls,1);_self_.get()._field_resultDecls.__push(_23217_obj);;
}



inline void _202bcd3d2_pushResult(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_220b31636_Fn>& _24835_f) {
	if ((_22001c270_IsVoid(_24835_f.ptr()) || (_24835_f.get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _25217_n = _24835_f.get()._field_Instances.len();;
	if ((_24835_f.get()._field_Generics.len() == 0LL)) {
		_25217_n=1LL;
	};
	{
		auto expr = _24835_f.get()._field_Instances.slice(0LL,_25217_n);
		auto it = expr.begin();
		_iter_begin_206e11c3d:;
		if (it != expr.end()) {
			jule::Ptr<_220b31a10_FnIns> _25621_ins = *it;
			{
				_202b90570_pushResultIns(_self_, _25621_ins);
			}
			_iter_next_206e11c3d:;
			++it;
			goto _iter_begin_206e11c3d;
		}
		_iter_end_206e11c3d:;
	};
}



inline jule::I64 _202b6c0c9_findTypeOffset(_202c052a5_ObjectCoder* _self_, jule::Ptr<_220b376b4_Trait> _26129_t, jule::Ptr<_220c0ae5d_TypeKind> _26144_k) {
	if ((_26129_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_21eec33d0_StructIns> _26517_s = nullptr;;
	if ((_220c0d559_Sptr(_26144_k.ptr()) != nullptr)) {
		_26144_k=_220c0d559_Sptr(_26144_k.ptr()).get()._field_Elem;
	};
	if ((_220c0e747_Struct(_26144_k.ptr()) == nullptr)) {
		return -1LL;;
	};
	_26517_s=_220c0e747_Struct(_26144_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_206e149cc:;
		if (it != expr.end()) {
			jule::Ptr<_202b6c371_traitHash> &_27316_hash = *it;
			{
				if (((_27316_hash.get()._field_t == _26129_t) && (_27316_hash.get()._field_s == _26517_s))) {
					return _27316_hash.get()._field_i;;
				};
			}
			_iter_next_206e149cc:;
			++it;
			goto _iter_begin_206e149cc;
		}
		_iter_end_206e149cc:;
	};
	return -1LL;;
}



inline void _202c0589e_locInfo(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_21d81d743_Token>& _28228_t) {
	jule::Str &_28314_loc = _28228_t.get()._field_File.get()._field_Path;;
	if (_21b5387c3_Production) {
		{
			
			if (_21d440134_HasPrefix(_28314_loc,_21d52d673_PathStdlib)) {
				_case_begin_206e16d53:;
				{
					_202b8bc42_write(_self_, _202b5d6c5_cstrBytes(static_cast<jule::Slice<jule::U8>>(_28314_loc.slice((_21c4e565d_Dir(_21d52d673_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_21d440134_HasPrefix(_28314_loc,_self_.get()._field_ir.get()._field_Root)) {
				_case_begin_206e17529:;
				{
					_202b8bc42_write(_self_, _202b5d6c5_cstrBytes(static_cast<jule::Slice<jule::U8>>(_28314_loc.slice((_21c4e565d_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_206e169ac:;
				{
					_202b8bc42_write(_self_, _202b5d6c5_cstrBytes(static_cast<jule::Slice<jule::U8>>(_28314_loc)));
				}
			}
			_match_end_206e168e1:;
		};
	} else {
		_202b8bc42_write(_self_, _202b5d6c5_cstrBytes(static_cast<jule::Slice<jule::U8>>(_28314_loc)));
	};
	_202b8bc42_write(_self_, jule::Str(":", 1));
	_202b8bc42_write(_self_, _220b244c5_Itoa(_28228_t.get()._field_Row));
	_202b8bc42_write(_self_, jule::Str(":", 1));
	_202b8bc42_write(_self_, _220b244c5_Itoa(_28228_t.get()._field_Column));
}



inline void _202c059d1_head(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	_202bed48a_Time _30913_time = static__202beda2e_Now();;
	_202becce7_AbsTime _31013_abs = _202c0016d_Abs(&_30913_time);;
	_202b8bc42_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_202b8bc42_write(_self_, jule::Str("// JuleC version: ", 18));
	_202b8bc42_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_202b8bc42_write(_self_, jule::Str("\n", 1));
	_202b8bc42_write(_self_, jule::Str("// Date: ", 9));
	_202b8bc42_write(_self_, _220b24261_FmtUint(_31013_abs._field_Day,10LL));
	_202b8bc42_write(_self_, jule::Str("/", 1));
	_202b8bc42_write(_self_, _220b24261_FmtUint(_31013_abs._field_Month,10LL));
	_202b8bc42_write(_self_, jule::Str("/", 1));
	_202b8bc42_write(_self_, _220b24261_FmtUint(_31013_abs._field_Year,10LL));
	_202b8bc42_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_202b8bc42_write(_self_, _self_.get()._field_info._field_Compiler);
	_202b8bc42_write(_self_, jule::Str(" ", 1));
	_202b8bc42_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_202b8bc42_write(_self_, jule::Str("\n\n", 2));
	if (_21b5387c3_Production) {
		_202b8bc42_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_21b538130_RC))) {
		_202b8bc42_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_21b538509_Safety))) {
		_202b8bc42_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_202c05b13_links(_self_);
	_202b8bc42_write(_self_, jule::Str("\n\n#include \"", 12));
	_202b8bc42_write(_self_, _21d53da90_PathApi);
	_202b8bc42_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _202c05b13_links(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_206e22bb6:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _34716_used = *it;
			{
				{
					
					if ((!(_34716_used.get()._field_CppLinked))) {
						_case_begin_206e23722:;
						{
							goto _iter_next_206e22bb6;
						}
					}
					else if (_21d4d8045_IsStdHeaderPath(_34716_used.get()._field_Path)) {
						_case_begin_206e23799:;
						{
							_202b8bc42_write(_self_, jule::Str("#include ", 9));
							_202b8bc42_write(_self_, _34716_used.get()._field_Path);
							_202b8bc42_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_21d4d8265_IsValidHeaderExt(_21c4e30b7_Ext(_34716_used.get()._field_Path))) {
						_case_begin_206e23821:;
						{
							_202b8bc42_write(_self_, jule::Str("#include \"", 10));
							_202b8bc42_write(_self_, _34716_used.get()._field_Path);
							_202b8bc42_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_206e23601:;
				};
			}
			_iter_next_206e22bb6:;
			++it;
			goto _iter_begin_206e22bb6;
		}
		_iter_end_206e22bb6:;
	};
}



inline void _202c05c45_prepareStructure(_202c052a5_ObjectCoder* _self_, jule::Ptr<_21eec3006_Struct>& _36340_s) {
	{
		auto &expr = _36340_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_206e252d4:;
		if (it != expr.end()) {
			jule::Ptr<_21eec33d0_StructIns> _36421_ins = *it;
			{
				{
					auto &expr = _36421_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_206e26758:;
					if (it != expr.end()) {
						jule::Ptr<_220b31636_Fn> _36525_m = *it;
						{
							if (_36525_m.get()._field_Statically) {
								goto _iter_next_206e26758;
							};
							{
								auto &expr = _36525_m.get()._field_Instances;
								auto it = expr.begin();
								_iter_begin_206e274b2:;
								if (it != expr.end()) {
									jule::Ptr<_220b31a10_FnIns> _36929_mins = *it;
									{
										jule::Ptr<_220b31823_ParamIns> _37029_p = _36929_mins.get()._field_Params[0LL];;
										if ((!(_22001b35c_IsRef(_37029_p.get()._field_Decl.ptr())))) {
											_37029_p.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(jule::new_ptr<_202c0ad05_customType>(_202c0ad05_customType{._field_kind=_202c0cd3a_asPtr((*_self_)._field_tc.ptr(), _202c11b63_kind((*_self_)._field_tc.ptr(), _37029_p.get()._field_Kind))}), 13)});
										} else {
											_37029_p.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(jule::new_ptr<_202c0ad05_customType>(_202c0ad05_customType{._field_kind=_202c11b63_kind((*_self_)._field_tc.ptr(), _37029_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_206e274b2:;
									++it;
									goto _iter_begin_206e274b2;
								}
								_iter_end_206e274b2:;
							};
						}
						_iter_next_206e26758:;
						++it;
						goto _iter_begin_206e26758;
					}
					_iter_end_206e26758:;
				};
			}
			_iter_next_206e252d4:;
			++it;
			goto _iter_begin_206e252d4;
		}
		_iter_end_206e252d4:;
	};
}



inline void _202c05d77_prepareStructures(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_206e27094:;
		if (it != expr.end()) {
			jule::Ptr<_21eec3006_Struct> _39021_s = *it;
			{
				if ((_39021_s.get()._field_Token != nullptr)) {
					_202c05c45_prepareStructure(_self_.ptr(), _39021_s);
				};
			}
			_iter_next_206e27094:;
			++it;
			goto _iter_begin_206e27094;
		}
		_iter_end_206e27094:;
	};
}



inline void _202c05ea9_iterPackages(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_220b6427e_Package>&)> _39732_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_206e2b098:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _39821_used = *it;
			{
				if ((!(_39821_used.get()._field_CppLinked))) {
					_39732_f(_39821_used.get()._field_Package);
				};
			}
			_iter_next_206e2b098:;
			++it;
			goto _iter_begin_206e2b098;
		}
		_iter_end_206e2b098:;
	};
	_39732_f(_self_.get()._field_ir.get()._field_Main);
}



inline void _202c060db_buildTraitMap(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	_202c05ea9_iterPackages(_self_, jule::Fn<void(jule::Ptr<_220b6427e_Package>&)>([=](jule::Ptr<_220b6427e_Package>& _40735_pkg) mutable -> void {
		_202c09d6a_iterFiles(_40735_pkg,jule::Fn<void(jule::Ptr<_220bca1a2_SymbolTable>&)>([=](jule::Ptr<_220bca1a2_SymbolTable>& _40836_file) mutable -> void {
			{
				auto &expr = _40836_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_206e2e310:;
				if (it != expr.end()) {
					jule::Ptr<_220b376b4_Trait> _40929_t = *it;
					{
						if ((_40929_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_40929_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_202b6c371_traitHash>(_202b6c371_traitHash{._field_t=_40929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_206e2e310;
						};
						jule::I64 _42129_i = 0LL;;
						{
							auto &expr = _40929_t.get()._field_Implemented;
							auto it = expr.begin();
							_iter_begin_206e2eaa2:;
							if (it != expr.end()) {
								jule::Ptr<_21eec3006_Struct> _42233_s = *it;
								{
									{
										auto &expr = _42233_s.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_206e31268:;
										if (it != expr.end()) {
											jule::Ptr<_21eec33d0_StructIns> _42337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_202b6c371_traitHash>(_202b6c371_traitHash{._field_t=_40929_t, ._field_s=_42337_ins, ._field_i=_42129_i}));;
												(_42129_i)++;
											}
											_iter_next_206e31268:;
											++it;
											goto _iter_begin_206e31268;
										}
										_iter_end_206e31268:;
									};
								}
								_iter_next_206e2eaa2:;
								++it;
								goto _iter_begin_206e2eaa2;
							}
							_iter_end_206e2eaa2:;
						};
					}
					_iter_next_206e2e310:;
					++it;
					goto _iter_begin_206e2e310;
				}
				_iter_end_206e2e310:;
			};
		}));
	}));
}



inline void _202c0621d_traitDecls(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	_202c05ea9_iterPackages(_self_, jule::Fn<void(jule::Ptr<_220b6427e_Package>&)>([=](jule::Ptr<_220b6427e_Package>& _43835_pkg) mutable -> void {
		_202c09d6a_iterFiles(_43835_pkg,jule::Fn<void(jule::Ptr<_220bca1a2_SymbolTable>&)>([=](jule::Ptr<_220bca1a2_SymbolTable>& _43936_file) mutable -> void {
			{
				auto &expr = _43936_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_206e33bb6:;
				if (it != expr.end()) {
					jule::Ptr<_220b376b4_Trait> _44029_t = *it;
					{
						if ((_44029_t.get()._field_Token == nullptr)) {
							return;;
						};
						_202bce988_indent(_self_);
						_202b8bc42_write(_self_, jule::Str("struct ", 7));
						_202b8bc42_write(_self_, static__202b65754_traitDecl(_44029_t));
						_202b8bc42_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_206e33bb6:;
					++it;
					goto _iter_begin_206e33bb6;
				}
				_iter_end_206e33bb6:;
			};
		}));
	}));
}



inline void _202c06350_structurePlainDecl(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_21eec3006_Struct>& _45343_s) {
	{
		auto &expr = _45343_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_206e33754:;
		if (it != expr.end()) {
			jule::Ptr<_21eec33d0_StructIns> _45421_ins = *it;
			{
				_202b8bc42_write(_self_, jule::Str("struct ", 7));
				_202b8bc42_write(_self_, static__202b6603a_structureIns(_45421_ins));
				_202b8bc42_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_206e33754:;
			++it;
			goto _iter_begin_206e33754;
		}
		_iter_end_206e33754:;
	};
}



inline void _202c06482_structurePlainDecls(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_206e36b64:;
		if (it != expr.end()) {
			jule::Ptr<_21eec3006_Struct> _46221_s = *it;
			{
				if ((_46221_s.get()._field_Token != nullptr)) {
					_202c06350_structurePlainDecl(_self_, _46221_s);
				};
			}
			_iter_next_206e36b64:;
			++it;
			goto _iter_begin_206e36b64;
		}
		_iter_end_206e36b64:;
	};
}



inline void _202c065b4_fieldDecl(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_21eec31e3_FieldIns>& _46934_f) {
	_202b8bc42_write(_self_, _202c11b63_kind(_self_.get()._field_tc.ptr(), _46934_f.get()._field_Kind));
	_202b8bc42_write(_self_, jule::Str(" ", 1));
	_202b8bc42_write(_self_, static__202b662d2_field(_46934_f.get()._field_Decl));
	if ((_46934_f.get()._field_Default == nullptr)) {
		if (_202c186b4_shouldInitialized(_46934_f.get()._field_Kind)) {
			_202b8bc42_write(_self_, jule::Str(" = ", 3));
			_202b5cce0_initExpr(_self_.get()._field_ec, _46934_f.get()._field_Kind);
		};
	} else {
		_202b8bc42_write(_self_, jule::Str(" = ", 3));
		_202b5c7e5_expr(_self_.get()._field_ec, _46934_f.get()._field_Default.get()._field_Model);
	};
	_202b8bc42_write(_self_, jule::Str(";", 1));
}



inline void _202c066e6_structureDestructor(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_21eec33d0_StructIns>& _48744_s) {
	;
	jule::Ptr<_220b31636_Fn> _49013_disposeMethod = _21ee97382_FindMethod(_48744_s.ptr(), jule::Str("Dispose", 7),false);;
	jule::Bool _49117_disposed = static__220b8888b_Dispose(_49013_disposeMethod);;
	if ((!(_49117_disposed))) {
		return;;
	};
	_202b8bc42_write(_self_, jule::Str("~", 1));
	_202b8bc42_write(_self_, static__202b6603a_structureIns(_48744_s));
	_202b8bc42_write(_self_, jule::Str("(void) { ", 9));
	_202b8bc42_write(_self_, static__202b65215_func(_49013_disposeMethod));
	_202b8bc42_write(_self_, jule::Str("(this); }", 9));
}



inline void _202c06828_structureDeriveDefsDecls(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_21eec33d0_StructIns>& _50345_s) {
	if (_21ee83208_IsDerives(_50345_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_202bce988_indent(_self_);
		_202b8bc42_write(_self_, _202b60c7c_cloneFuncDecl(_self_.get()._field_dc.ptr(), _50345_s.get()._field_Decl));
		_202b8bc42_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _202c0695a_structureOperatorEq(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Str& _51140_ident, jule::Ptr<_21eec33d0_StructIns>& _51157_s) {
	if ((!(_51157_s.get()._field_Comparable))) {
		return;;
	};
	if ((_51157_s.get()._field_Operators._field_Eq != nullptr)) {
		_202c06bbe_structureOperator(_self_, _51140_ident,_51157_s.get()._field_Operators._field_Eq,jule::Str("==", 2));
		return;;
	};
	_202bce988_indent(_self_);
	if (_21da0918c_Inline) {
		_202b8bc42_write(_self_, jule::Str("inline ", 7));
	};
	_202b8bc42_write(_self_, jule::Str("bool operator==(", 16));
	_202b8bc42_write(_self_, _51140_ident);
	_202b8bc42_write(_self_, jule::Str(" _other) {", 10));
	if ((_51157_s.get()._field_Fields.len() > 0LL)) {
		_202bcae18_addIndent(_self_);
		_202b8bc42_write(_self_, jule::Str("\n", 1));
		_202bce988_indent(_self_);
		_202b8bc42_write(_self_, jule::Str("return ", 7));
		_202bcae18_addIndent(_self_);
		jule::Bool _53421_writed = false;;
		{
			auto &expr = _51157_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_206e44c1b:;
			if (it != expr.end()) {
				jule::Ptr<_21eec31e3_FieldIns> _53525_f = *it;
				{
					jule::Ptr<_21eec33d0_StructIns> _53721_strct = _220c0e747_Struct(_53525_f.get()._field_Kind.ptr());;
					if ((((_53721_strct != nullptr) && (_53721_strct.get()._field_Decl != nullptr)) && _53721_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_206e44c1b;
					};
					if (_53421_writed) {
						_202b8bc42_write(_self_, jule::Str(" &&", 3));
					};
					_53421_writed=true;
					_202b8bc42_write(_self_, jule::Str("\n", 1));
					_202bce988_indent(_self_);
					_202b8bc42_write(_self_, jule::Str("this->", 6));
					jule::Str _54821_fIdent = static__202b662d2_field(_53525_f.get()._field_Decl);;
					_202b8bc42_write(_self_, _54821_fIdent);
					_202b8bc42_write(_self_, jule::Str(" == _other.", 11));
					_202b8bc42_write(_self_, _54821_fIdent);
				}
				_iter_next_206e44c1b:;
				++it;
				goto _iter_begin_206e44c1b;
			}
			_iter_end_206e44c1b:;
		};
		_202bcb435_doneIndent(_self_);
		if ((!(_53421_writed))) {
			_202b8bc42_write(_self_, jule::Str("true", 4));
		};
		_202b8bc42_write(_self_, jule::Str(";\n", 2));
		_202bcb435_doneIndent(_self_);
		_202bce988_indent(_self_);
		_202b8bc42_write(_self_, jule::Str("}", 1));
	} else {
		_202b8bc42_write(_self_, jule::Str(" return true; }", 15));
	};
	_202b8bc42_write(_self_, jule::Str("\n\n", 2));
}



inline void _202c06a8c_structureOperatorNotEq(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Str& _56743_ident, jule::Ptr<_21eec33d0_StructIns>& _56760_s) {
	if ((!(_56760_s.get()._field_Comparable))) {
		return;;
	};
	_202bce988_indent(_self_);
	if (_21da0918c_Inline) {
		_202b8bc42_write(_self_, jule::Str("inline ", 7));
	};
	_202b8bc42_write(_self_, jule::Str("bool operator!=(", 16));
	_202b8bc42_write(_self_, _56743_ident);
	_202b8bc42_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _202c06bbe_structureOperator(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Str& _58138_ident, jule::Ptr<_220b31a10_FnIns>& _58155_f, jule::Str _58166_op) {
	if ((_58155_f == nullptr)) {
		return;;
	};
	jule::Bool _58613_unary = (_58155_f.get()._field_Params.len() == 1LL);;
	jule::Bool _58713_assignment = _22001c270_IsVoid(_58155_f.get()._field_Decl.ptr());;
	_202bce988_indent(_self_);
	if (_21da0918c_Inline) {
		_202b8bc42_write(_self_, jule::Str("inline ", 7));
	};
	if (_58713_assignment) {
		_202b8bc42_write(_self_, _58138_ident);
		_202b8bc42_write(_self_, jule::Str("&", 1));
	} else {
		if ((_220c0d2e5_Prim(_58155_f.get()._field_Result.ptr()) == nullptr)) {
			_202b8bc42_write(_self_, _58138_ident);
		} else {
			_202b8bc42_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_202b8bc42_write(_self_, jule::Str(" operator", 9));
	_202b8bc42_write(_self_, _58166_op);
	_202b8bc42_write(_self_, jule::Str("(", 1));
	if ((!(_58613_unary))) {
		jule::Ptr<_220b31823_ParamIns> _60921_p = _58155_f.get()._field_Params[1LL];;
		_202b8bc42_write(_self_, _202c10b0c_paramIns(_self_.get()._field_tc.ptr(), _60921_p));
		_202b8bc42_write(_self_, jule::Str(" _other", 7));
	};
	_202b8bc42_write(_self_, jule::Str(") { ", 4));
	if ((!(_58713_assignment))) {
		_202b8bc42_write(_self_, jule::Str("return ", 7));
	};
	_202b8bc42_write(_self_, static__202b654ac_funcIns(_58155_f));
	if ((!(_58613_unary))) {
		_202b8bc42_write(_self_, jule::Str("(this, _other); ", 16));
		if (_58713_assignment) {
			_202b8bc42_write(_self_, jule::Str("return *this; ", 14));
		};
		_202b8bc42_write(_self_, jule::Str("}", 1));
	} else {
		_202b8bc42_write(_self_, jule::Str("(this); }", 9));
	};
	_202b8bc42_write(_self_, jule::Str("\n\n", 2));
}



inline void _202c06d01_structureOperators(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_21eec33d0_StructIns>& _63043_s) {
	jule::Str _63113_ident = static__202b6603a_structureIns(_63043_s);;
	_202c0695a_structureOperatorEq(_self_, _63113_ident,_63043_s);
	_202c06a8c_structureOperatorNotEq(_self_, _63113_ident,_63043_s);
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Gt,jule::Str(">", 1));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_GtEq,jule::Str(">=", 2));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Lt,jule::Str("<", 1));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_LtEq,jule::Str("<=", 2));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Shl,jule::Str("<<", 2));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Shr,jule::Str(">>", 2));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Add,jule::Str("+", 1));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Sub,jule::Str("-", 1));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Div,jule::Str("/", 1));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Mul,jule::Str("*", 1));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Mod,jule::Str("%", 1));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitAnd,jule::Str("&", 1));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitOr,jule::Str("|", 1));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitXor,jule::Str("^", 1));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Neg,jule::Str("-", 1));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Pos,jule::Str("+", 1));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitNot,jule::Str("~", 1));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_AddAssign,jule::Str("+=", 2));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_SubAssign,jule::Str("-=", 2));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_DivAssign,jule::Str("/=", 2));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_MulAssign,jule::Str("*=", 2));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_ModAssign,jule::Str("%=", 2));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_ShlAssign,jule::Str("<<=", 3));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_ShrAssign,jule::Str(">>=", 3));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitOrAssign,jule::Str("|=", 2));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitAndAssign,jule::Str("&=", 2));
	_202c06bbe_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitXorAssign,jule::Str("^=", 2));
}



inline void _202c06e33_structureInsDecl(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_21eec33d0_StructIns>& _66941_s) {
	if ((_66941_s.get()._field_Methods.len() > 0LL)) {
		{
			auto &expr = _66941_s.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_206e62be5:;
			if (it != expr.end()) {
				jule::Ptr<_220b31636_Fn> _67125_m = *it;
				{
					_202bcd3d2_pushResult(_self_, _67125_m);
					_202c0753d_funcDecl(_self_, _67125_m,false);
				}
				_iter_next_206e62be5:;
				++it;
				goto _iter_begin_206e62be5;
			}
			_iter_end_206e62be5:;
		};
	};
	_202b8bc42_write(_self_, jule::Str("struct ", 7));
	jule::Str _67813_outIdent = static__202b6603a_structureIns(_66941_s);;
	_202b8bc42_write(_self_, _67813_outIdent);
	_202b8bc42_write(_self_, jule::Str(" {\n", 3));
	_202bcae18_addIndent(_self_);
	{
		auto &expr = _66941_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_206e64bb4:;
		if (it != expr.end()) {
			jule::Ptr<_21eec31e3_FieldIns> _68421_f = *it;
			{
				_202bce988_indent(_self_);
				_202c065b4_fieldDecl(_self_, _68421_f);
				_202b8bc42_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_206e64bb4:;
			++it;
			goto _iter_begin_206e64bb4;
		}
		_iter_end_206e64bb4:;
	};
	_202bce988_indent(_self_);
	_202c066e6_structureDestructor(_self_, _66941_s);
	_202b8bc42_write(_self_, jule::Str("\n\n", 2));
	_202bce988_indent(_self_);
	_202b8bc42_write(_self_, _67813_outIdent);
	_202b8bc42_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_202c06828_structureDeriveDefsDecls(_self_, _66941_s);
	_202c06d01_structureOperators(_self_, _66941_s);
	_202b8bc42_write(_self_, jule::Str("\n", 1));
	_202bcb435_doneIndent(_self_);
	_202bce988_indent(_self_);
	_202b8bc42_write(_self_, jule::Str("};", 2));
}



inline void _202c07065_structureDecl(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_21eec3006_Struct>& _70938_s) {
	{
		auto &expr = _70938_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_206e68cb7:;
		if (it != expr.end()) {
			jule::Ptr<_21eec33d0_StructIns> _71021_ins = *it;
			{
				_202c06e33_structureInsDecl(_self_, _71021_ins);
			}
			_iter_next_206e68cb7:;
			++it;
			goto _iter_begin_206e68cb7;
		}
		_iter_end_206e68cb7:;
	};
}



inline void _202c07197_structureDecls(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_206e69b75:;
		if (it != expr.end()) {
			jule::Ptr<_21eec3006_Struct> _71621_s = *it;
			{
				if ((_71621_s.get()._field_Token != nullptr)) {
					_202c07065_structureDecl(_self_, _71621_s);
					_202b8bc42_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_206e69b75:;
			++it;
			goto _iter_begin_206e69b75;
		}
		_iter_end_206e69b75:;
	};
}



inline void _202c072c9_paramsDecls(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Slice<jule::Ptr<_220b31823_ParamIns>>& _72436_params) {
	if ((_72436_params.len() == 0LL)) {
		_202b8bc42_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_202b8bc42_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _72436_params;
		auto it = expr.begin();
		_iter_begin_206e6bc21:;
		if (it != expr.end()) {
			jule::I64 _73114_i = it - expr.begin();
			jule::Ptr<_220b31823_ParamIns> _73121_p = *it;
			{
				_202b8bc42_write(_self_, _202c10b0c_paramIns(_self_.get()._field_tc.ptr(), _73121_p));
				if (((_72436_params.len() - _73114_i) > 1LL)) {
					_202b8bc42_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_206e6bc21:;
			++it;
			_73114_i++;
			goto _iter_begin_206e6bc21;
		}
		_iter_end_206e6bc21:;
	};
	_202b8bc42_write(_self_, jule::Str(")", 1));
}



inline void _202c0740b_funcHead(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_220b31a10_FnIns>& _74133_f, jule::Bool _74144_ptr) {
	if ((((!(_74144_ptr)) && _21da0918c_Inline) && (!(_220057772_IsEntryPoint(_74133_f.get()._field_Decl.ptr()))))) {
		_202b8bc42_write(_self_, jule::Str("inline ", 7));
	};
	_202c11239_funcInsResult(_self_.get()._field_tc.ptr(), _self_.get()._field_Obj,_74133_f);
	if (_74144_ptr) {
		_202b8bc42_write(_self_, jule::Str("(*", 2));
		_202b8bc42_write(_self_, static__202b654ac_funcIns(_74133_f));
		_202b8bc42_write(_self_, jule::Str(")", 1));
	} else {
		_202b8bc42_write(_self_, jule::Str(" ", 1));
		_202b8bc42_write(_self_, static__202b654ac_funcIns(_74133_f));
	};
}



inline void _202c0753d_funcDecl(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_220b31636_Fn>& _75633_f, jule::Bool _75641_ptr) {
	{
		auto &expr = _75633_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_206e721cc:;
		if (it != expr.end()) {
			jule::Ptr<_220b31a10_FnIns> _75721_c = *it;
			{
				_202bce988_indent(_self_);
				_202c0740b_funcHead(_self_, _75721_c,_75641_ptr);
				_202c072c9_paramsDecls(_self_, _75721_c.get()._field_Params);
				_202b8bc42_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_206e721cc:;
			++it;
			goto _iter_begin_206e721cc;
		}
		_iter_end_206e721cc:;
	};
}



inline void _202c07670_funcDecls(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	_202c05ea9_iterPackages(_self_, jule::Fn<void(jule::Ptr<_220b6427e_Package>&)>([=](jule::Ptr<_220b6427e_Package>& _76635_pkg) mutable -> void {
		_202c09d6a_iterFiles(_76635_pkg,jule::Fn<void(jule::Ptr<_220bca1a2_SymbolTable>&)>([=](jule::Ptr<_220bca1a2_SymbolTable>& _76736_file) mutable -> void {
			{
				auto &expr = _76736_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_206e75697:;
				if (it != expr.end()) {
					jule::Ptr<_220b31636_Fn> _76829_f = *it;
					{
						if (((!(_76829_f.get()._field_CppLinked)) && (_76829_f.get()._field_Token != nullptr))) {
							_202bcd3d2_pushResult(_self_, _76829_f);
							_202c0753d_funcDecl(_self_, _76829_f,false);
						};
					}
					_iter_next_206e75697:;
					++it;
					goto _iter_begin_206e75697;
				}
				_iter_end_206e75697:;
			};
		}));
	}));
}



inline void _202c077a2_traitDataTypes(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	_202c05ea9_iterPackages(_self_, jule::Fn<void(jule::Ptr<_220b6427e_Package>&)>([=](jule::Ptr<_220b6427e_Package>& _77935_pkg) mutable -> void {
		_202c09d6a_iterFiles(_77935_pkg,jule::Fn<void(jule::Ptr<_220bca1a2_SymbolTable>&)>([=](jule::Ptr<_220bca1a2_SymbolTable>& _78036_file) mutable -> void {
			{
				auto &expr = _78036_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_206e7d4c4:;
				if (it != expr.end()) {
					jule::Ptr<_220b376b4_Trait> _78129_t = *it;
					{
						if ((_78129_t.get()._field_Token == nullptr)) {
							return;;
						};
						_202b8bc42_write(_self_, jule::Str("struct ", 7));
						_202b8bc42_write(_self_, static__202b65754_traitDecl(_78129_t));
						_202b8bc42_write(_self_, jule::Str("MptrData", 8));
						_202b8bc42_write(_self_, jule::Str(" {\n", 3));
						_202bcae18_addIndent(_self_);
						{
							auto &expr = _78129_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_206e8042c:;
							if (it != expr.end()) {
								jule::Ptr<_220b31636_Fn> _79033_m = *it;
								{
									jule::Ptr<_220b31a10_FnIns> _79133_ins = _79033_m.get()._field_Instances[0LL];;
									jule::Ptr<_220b31823_ParamIns> _79233_p = _79133_ins.get()._field_Params[0LL];;
									_79233_p.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_78129_t, 2)});
									{
										auto expr = _79133_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_206e813c8:;
										if (it != expr.end()) {
											jule::I64 _79630_i = it - expr.begin();
											jule::Ptr<_220b31823_ParamIns> _79637_ip = *it;
											{
												if (_21d82127e_IsAnonIdent(_79637_ip.get()._field_Decl.get()._field_Ident)) {
													_79637_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _220b244c5_Itoa(_79630_i));
												};
											}
											_iter_next_206e813c8:;
											++it;
											_79630_i++;
											goto _iter_begin_206e813c8;
										}
										_iter_end_206e813c8:;
									};
									if ((!(_21b5387c3_Production))) {
										_79133_ins.get()._field_Params = jule::alloc_for_append(_79133_ins.get()._field_Params,1);_79133_ins.get()._field_Params.__push(jule::new_ptr<_220b31823_ParamIns>(_220b31823_ParamIns{._field_Decl=jule::new_ptr<_220b31449_Param>(_220b31449_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(jule::new_ptr<_202c0ad05_customType>(_202c0ad05_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_202bcd3d2_pushResult(_self_, _79033_m);
									_202c0753d_funcDecl(_self_, _79033_m,true);
								}
								_iter_next_206e8042c:;
								++it;
								goto _iter_begin_206e8042c;
							}
							_iter_end_206e8042c:;
						};
						_202bcb435_doneIndent(_self_);
						_202bce988_indent(_self_);
						_202b8bc42_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_206e7d4c4:;
					++it;
					goto _iter_begin_206e7d4c4;
				}
				_iter_end_206e7d4c4:;
			};
		}));
	}));
}



inline void _202c078d4_paramIns(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_220b31823_ParamIns>& _82433_p) {
	_202b8bc42_write(_self_, _202c10b0c_paramIns(_self_.get()._field_tc.ptr(), _82433_p));
	_202b8bc42_write(_self_, jule::Str(" ", 1));
	_202b8bc42_write(_self_, static__202b659eb_param(_82433_p.get()._field_Decl));
}



inline void _202c07a16_paramsIns(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Slice<jule::Ptr<_220b31823_ParamIns>>& _83034_params) {
	if ((_83034_params.len() == 0LL)) {
		_202b8bc42_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_202b8bc42_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _83034_params;
		auto it = expr.begin();
		_iter_begin_206e870d2:;
		if (it != expr.end()) {
			jule::I64 _83614_i = it - expr.begin();
			jule::Ptr<_220b31823_ParamIns> _83621_p = *it;
			{
				_202c078d4_paramIns(_self_, _83621_p);
				if (((_83034_params.len() - _83614_i) > 1LL)) {
					_202b8bc42_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_206e870d2:;
			++it;
			_83614_i++;
			goto _iter_begin_206e870d2;
		}
		_iter_end_206e870d2:;
	};
	_202b8bc42_write(_self_, jule::Str(")", 1));
}



inline void _202c07b48_varInitExpr(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_220b8746c_Var>& _84536_v, jule::Fn<void(void)> _84545_init) {
	if (_84536_v.get()._field_Statically) {
		_202b8bc42_write(_self_, jule::Str("static ", 7));
	};
	_202b8bc42_write(_self_, _202c11b63_kind(_self_.get()._field_tc.ptr(), _84536_v.get()._field_Kind.get()._field_Kind));
	_202b8bc42_write(_self_, jule::Str(" ", 1));
	if (_84536_v.get()._field_Reference) {
		_202b8bc42_write(_self_, jule::Str("&", 1));
	};
	_202b8bc42_write(_self_, static__202b66579_var(_84536_v));
	if ((_84545_init != nullptr)) {
		_202b8bc42_write(_self_, jule::Str(" = ", 3));
		_84545_init();
	};
	_202b8bc42_write(_self_, jule::Str(";", 1));
}



inline void _202c07c7a_var(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_220b8746c_Var> _86327_v) {
	if (_21d820ed7_IsIgnoreIdent(_86327_v.get()._field_Ident)) {
		return;;
	};
	if (((_86327_v.get()._field_Value != nullptr) && (_86327_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_86327_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			_202c07b48_varInitExpr(_self_, _86327_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_202b5ca6a_val(_self_.get()._field_ec, _86327_v.get()._field_Value);
			}));
			return;;
		};
		_202c07b48_varInitExpr(_self_, _86327_v,nullptr);
		return;;
	};
	if (_202c186b4_shouldInitialized(_86327_v.get()._field_Kind.get()._field_Kind)) {
		_202c07b48_varInitExpr(_self_, _86327_v,jule::Fn<void(void)>([=](void) mutable -> void {
			_202b5cce0_initExpr(_self_.get()._field_ec, _86327_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_202c07b48_varInitExpr(_self_, _86327_v,nullptr);
}



inline void _202c07dac_func(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_220b31636_Fn>& _88229_f) {
	{
		auto &expr = _88229_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_206e9173a:;
		if (it != expr.end()) {
			jule::Ptr<_220b31a10_FnIns> _88321_ins = *it;
			{
				_202c0740b_funcHead(_self_, _88321_ins,false);
				_202c07a16_paramsIns(_self_, _88321_ins.get()._field_Params);
				_202b8bc42_write(_self_, jule::Str(" ", 1));
				_202b4d990_funcScope(_self_.get()._field_sc, _88321_ins);
				if ((_88321_ins.get()._field_Scope != nullptr)) {
					_202b8bc42_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_206e9173a:;
			++it;
			goto _iter_begin_206e9173a;
		}
		_iter_end_206e9173a:;
	};
}



inline void _202c07ede_traitWrappers(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_206e93ad3:;
		if (it != expr.end()) {
			jule::Ptr<_202b6c371_traitHash> _89521_hash = *it;
			{
				{
					auto &expr = _89521_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_206e94221:;
					if (it != expr.end()) {
						jule::Ptr<_220b31636_Fn> _89625_m = *it;
						{
							jule::Str _89721_ident = _89625_m.get()._field_Ident;;
							_89625_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_89625_m.get()._field_Ident=((_89721_ident + jule::Str("_", 1)) + _220b244c5_Itoa(_89521_hash.get()._field_i));
							_202c07dac_func(_self_, _89625_m);
							_89625_m.get()._field_Ident=_89721_ident;
							if ((_89521_hash.get()._field_s == nullptr)) {
								if (_21b5387c3_Production) {
									_202b8bc42_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_202b8bc42_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_206e94221;
							};
							jule::Bool _91321_ptr = (!(_22001b35c_IsRef(_89625_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_220b31636_Fn> _91525_sm = _21ee97382_FindMethod(_89521_hash.get()._field_s.ptr(), _89625_m.get()._field_Ident,false);;
							if (((_91525_sm == nullptr) || (_91525_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_206e94221;
							};
							_202bcae18_addIndent(_self_);
							_202b8bc42_write(_self_, jule::Str("{\n", 2));
							_202bce988_indent(_self_);
							if ((_91525_sm.get()._field_Exceptional || (!(_22001c270_IsVoid(_91525_sm.ptr()))))) {
								_202b8bc42_write(_self_, jule::Str("return ", 7));
							};
							_202b8bc42_write(_self_, static__202b65215_func(_91525_sm));
							_202b8bc42_write(_self_, jule::Str("(", 1));
							if (_91321_ptr) {
								_202b8bc42_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_202b8bc42_write(_self_, _202c101d3_structureIns(_self_.get()._field_tc.ptr(), _89521_hash.get()._field_s));
								_202b8bc42_write(_self_, jule::Str(">(", 2));
								if ((!(_21b5387c3_Production))) {
									_202b8bc42_write(_self_, jule::Str("_00___file", 10));
								};
								_202b8bc42_write(_self_, jule::Str(")", 1));
							} else {
								_202b8bc42_write(_self_, jule::Str("_self_.data.as<", 15));
								_202b8bc42_write(_self_, _202c0edc5_structure(_self_.get()._field_tc.ptr(), _91525_sm.get()._field_Owner));
								_202b8bc42_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _89625_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_206e9d0b5:;
								if (it != expr.end()) {
									jule::Ptr<_220b31449_Param> _94124_mp = *it;
									{
										_202b8bc42_write(_self_, jule::Str(", ", 2));
										_202b8bc42_write(_self_, static__202b659eb_param(_94124_mp));
									}
									_iter_next_206e9d0b5:;
									++it;
									goto _iter_begin_206e9d0b5;
								}
								_iter_end_206e9d0b5:;
							};
							_202b8bc42_write(_self_, jule::Str(");\n}\n", 5));
							_202bcb435_doneIndent(_self_);
						}
						_iter_next_206e94221:;
						++it;
						goto _iter_begin_206e94221;
					}
					_iter_end_206e94221:;
				};
			}
			_iter_next_206e93ad3:;
			++it;
			goto _iter_begin_206e93ad3;
		}
		_iter_end_206e93ad3:;
	};
}



inline void _202c08121_traitDatas(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	jule::Ptr<_220b376b4_Trait> _95217_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_206e93d9c:;
		if (it != expr.end()) {
			jule::Ptr<_202b6c371_traitHash> _95321_hash = *it;
			{
				jule::Str _95417_ident = static__202b65754_traitDecl(_95321_hash.get()._field_t);;
				if ((_95321_hash.get()._field_t != _95217_old)) {
					if ((_95217_old != nullptr)) {
						_202bcb435_doneIndent(_self_);
						_202bce988_indent(_self_);
						_202b8bc42_write(_self_, jule::Str("};\n", 3));
					};
					_202b8bc42_write(_self_, jule::Str("static ", 7));
					_202b8bc42_write(_self_, _95417_ident);
					_202b8bc42_write(_self_, jule::Str("MptrData ", 9));
					_202b8bc42_write(_self_, _95417_ident);
					_202b8bc42_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_95217_old=_95321_hash.get()._field_t;
					_202bcae18_addIndent(_self_);
				};
				_202bce988_indent(_self_);
				_202b8bc42_write(_self_, jule::Str("{\n", 2));
				_202bcae18_addIndent(_self_);
				{
					auto &expr = _95321_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_206ea4143:;
					if (it != expr.end()) {
						jule::Ptr<_220b31636_Fn> _97225_m = *it;
						{
							jule::Str _97321_mIdent = static__202b65215_func(_97225_m);;
							_202bce988_indent(_self_);
							_202b8bc42_write(_self_, jule::Str(".", 1));
							_202b8bc42_write(_self_, _97321_mIdent);
							_202b8bc42_write(_self_, jule::Str("=", 1));
							_202b8bc42_write(_self_, _97321_mIdent);
							_202b8bc42_write(_self_, jule::Str("_", 1));
							_202b8bc42_write(_self_, _220b244c5_Itoa(_95321_hash.get()._field_i));
							_202b8bc42_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_206ea4143:;
						++it;
						goto _iter_begin_206ea4143;
					}
					_iter_end_206ea4143:;
				};
				_202bcb435_doneIndent(_self_);
				_202bce988_indent(_self_);
				_202b8bc42_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_206e93d9c:;
			++it;
			goto _iter_begin_206e93d9c;
		}
		_iter_end_206e93d9c:;
	};
	if ((_95217_old != nullptr)) {
		_202bcb435_doneIndent(_self_);
		_202bce988_indent(_self_);
		_202b8bc42_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _202c08253_globals(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Globals;
		auto it = expr.begin();
		_iter_begin_206ea82ac:;
		if (it != expr.end()) {
			jule::Ptr<_220b8746c_Var> _99521_v = *it;
			{
				_202b8bc42_write(_self_, _202c11b63_kind(_self_.get()._field_tc.ptr(), _99521_v.get()._field_Kind.get()._field_Kind));
				_202b8bc42_write(_self_, jule::Str(" ", 1));
				if (_99521_v.get()._field_Reference) {
					_202b8bc42_write(_self_, jule::Str("&", 1));
				};
				_202b8bc42_write(_self_, static__202b66579_var(_99521_v));
				_202b8bc42_write(_self_, jule::Str(" = ", 3));
				_202b5ca6a_val(_self_.get()._field_ec, _99521_v.get()._field_Value);
				_202b8bc42_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_206ea82ac:;
			++it;
			goto _iter_begin_206ea82ac;
		}
		_iter_end_206ea82ac:;
	};
}



inline void _202c08385_decls(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	_202c0621d_traitDecls(_self_);
	_202c06482_structurePlainDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_202c07197_structureDecls(_self_);
	_202c07670_funcDecls(_self_);
	_202b8bc42_write(_self_, jule::Str("\n\n", 2));
	_202c077a2_traitDataTypes(_self_);
	_202b8bc42_write(_self_, jule::Str("\n\n", 2));
	_202c07ede_traitWrappers(_self_);
	_202b8bc42_write(_self_, jule::Str("\n\n", 2));
	_202c08121_traitDatas(_self_);
	_202b8bc42_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_202c08253_globals(_self_);
}



inline void _202c084b7_structureMethods(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_21eec33d0_StructIns>& _102541_s) {
	{
		auto &expr = _102541_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_206eae725:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> _102621_f = *it;
			{
				_202c07dac_func(_self_, _102621_f);
				_202b8bc42_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_206eae725:;
			++it;
			goto _iter_begin_206eae725;
		}
		_iter_end_206eae725:;
	};
}



inline void _202c085e9_structureDeriveDefs(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_21eec33d0_StructIns>& _103244_s) {
	if (_21ee83208_IsDerives(_103244_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_202b8bc42_write(_self_, _202b6108a_cloneFuncDef(_self_.get()._field_dc.ptr(), _103244_s.get()._field_Decl));
		_202b8bc42_write(_self_, jule::Str("{\n", 2));
		_202bcae18_addIndent(_self_);
		_202bce988_indent(_self_);
		_202b8bc42_write(_self_, _202c101d3_structureIns(_self_.get()._field_tc.ptr(), _103244_s));
		_202b8bc42_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _103244_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_206eb166c:;
			if (it != expr.end()) {
				jule::Ptr<_21eec31e3_FieldIns> _104020_f = *it;
				{
					jule::Str _104121_ident = static__202b662d2_field(_104020_f.get()._field_Decl);;
					_202bce988_indent(_self_);
					_202b8bc42_write(_self_, jule::Str("clone.", 6));
					_202b8bc42_write(_self_, _104121_ident);
					_202b8bc42_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_202b8bc42_write(_self_, _104121_ident);
					_202b8bc42_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_206eb166c:;
				++it;
				goto _iter_begin_206eb166c;
			}
			_iter_end_206eb166c:;
		};
		_202bce988_indent(_self_);
		_202b8bc42_write(_self_, jule::Str("return clone;\n", 14));
		_202bcb435_doneIndent(_self_);
		_202b8bc42_write(_self_, jule::Str("}", 1));
	};
}



inline void _202c0872b_structureOstream(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_21eec33d0_StructIns>& _105641_s) {
	_202bce988_indent(_self_);
	_202b8bc42_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_202b8bc42_write(_self_, static__202b6603a_structureIns(_105641_s));
	_202b8bc42_write(_self_, jule::Str(" _Src) {\n", 9));
	_202bcae18_addIndent(_self_);
	_202bce988_indent(_self_);
	jule::Ptr<_220b31636_Fn> _106417_fts = _21ee97382_FindMethod(_105641_s.ptr(), jule::Str("Str", 3),false);;
	if (static__220b88b33_Str(_106417_fts)) {
		_202b8bc42_write(_self_, jule::Str("_Stream << ", 11));
		_202b8bc42_write(_self_, static__202b65215_func(_106417_fts));
		_202b8bc42_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_202b8bc42_write(_self_, jule::Str("_Stream << \"", 12));
		_202b8bc42_write(_self_, _105641_s.get()._field_Decl.get()._field_Ident);
		_202b8bc42_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _105641_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_206eb9c5d:;
			if (it != expr.end()) {
				jule::I64 _107418_i = it - expr.begin();
				jule::Ptr<_21eec31e3_FieldIns> _107425_f = *it;
				{
					_202bce988_indent(_self_);
					_202b8bc42_write(_self_, jule::Str("_Stream << \"", 12));
					_202b8bc42_write(_self_, _107425_f.get()._field_Decl.get()._field_Ident);
					_202b8bc42_write(_self_, jule::Str(":", 1));
					jule::Ptr<_21eec33d0_StructIns> _108121_strct = _220c0e747_Struct(_107425_f.get()._field_Kind.ptr());;
					if ((((_108121_strct != nullptr) && (_108121_strct.get()._field_Decl != nullptr)) && _108121_strct.get()._field_Decl.get()._field_CppLinked)) {
						_202b8bc42_write(_self_, jule::Str(" cpp.", 5));
						_202b8bc42_write(_self_, static__202b662d2_field(_107425_f.get()._field_Decl));
						_202b8bc42_write(_self_, jule::Str("\"", 1));
					} else {
						_202b8bc42_write(_self_, jule::Str("\" << _Src.", 10));
						_202b8bc42_write(_self_, static__202b662d2_field(_107425_f.get()._field_Decl));
					};
					if (((_107418_i + 1LL) < _105641_s.get()._field_Fields.len())) {
						_202b8bc42_write(_self_, jule::Str(" << \", \"", 8));
					};
					_202b8bc42_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_206eb9c5d:;
				++it;
				_107418_i++;
				goto _iter_begin_206eb9c5d;
			}
			_iter_end_206eb9c5d:;
		};
		_202bce988_indent(_self_);
		_202b8bc42_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_202bce988_indent(_self_);
	_202b8bc42_write(_self_, jule::Str("return _Stream;\n", 16));
	_202bcb435_doneIndent(_self_);
	_202b8bc42_write(_self_, jule::Str("}", 1));
}



inline void _202c088e6_structureIns(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_21eec33d0_StructIns>& _110737_s) {
	_202c084b7_structureMethods(_self_, _110737_s);
	_202b8bc42_write(_self_, jule::Str("\n\n", 2));
	_202c085e9_structureDeriveDefs(_self_, _110737_s);
	_202b8bc42_write(_self_, jule::Str("\n\n", 2));
	_202c0872b_structureOstream(_self_, _110737_s);
}



inline void _202c08b6b_structure(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_21eec3006_Struct>& _111534_s) {
	{
		auto &expr = _111534_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_206ec2aac:;
		if (it != expr.end()) {
			jule::Ptr<_21eec33d0_StructIns> _111621_ins = *it;
			{
				_202c088e6_structureIns(_self_, _111621_ins);
				_202b8bc42_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_206ec2aac:;
			++it;
			goto _iter_begin_206ec2aac;
		}
		_iter_end_206ec2aac:;
	};
}



inline void _202c08d47_structures(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_206ec3cde:;
		if (it != expr.end()) {
			jule::Ptr<_21eec3006_Struct> _112321_s = *it;
			{
				if ((_112321_s.get()._field_Token != nullptr)) {
					_202c08b6b_structure(_self_, _112321_s);
					_202b8bc42_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_206ec3cde:;
			++it;
			goto _iter_begin_206ec3cde;
		}
		_iter_end_206ec3cde:;
	};
}



inline void _202c09023_funcs(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	_202c05ea9_iterPackages(_self_, jule::Fn<void(jule::Ptr<_220b6427e_Package>&)>([=](jule::Ptr<_220b6427e_Package>& _113235_pkg) mutable -> void {
		_202c09d6a_iterFiles(_113235_pkg,jule::Fn<void(jule::Ptr<_220bca1a2_SymbolTable>&)>([=](jule::Ptr<_220bca1a2_SymbolTable>& _113336_file) mutable -> void {
			{
				auto &expr = _113336_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_206ec6ebd:;
				if (it != expr.end()) {
					jule::Ptr<_220b31636_Fn> _113429_f = *it;
					{
						if (((!(_21b537d66_Test)) && _202c1841c_hasDirective(_113429_f.get()._field_Directives,jule::Str("test", 4)))) {
							goto _iter_next_206ec6ebd;
						};
						if (((!(_113429_f.get()._field_CppLinked)) && (_113429_f.get()._field_Token != nullptr))) {
							_202c07dac_func(_self_, _113429_f);
							_202b8bc42_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_206ec6ebd:;
					++it;
					goto _iter_begin_206ec6ebd;
				}
				_iter_end_206ec6ebd:;
			};
		}));
	}));
}



inline void _202c09298_pushInit(jule::Ptr<_202c052a5_ObjectCoder> _self_, jule::Ptr<_220b6427e_Package>& _114733_pkg) {
	_202c09d6a_iterFiles(_114733_pkg,jule::Fn<void(jule::Ptr<_220bca1a2_SymbolTable>&)>([=](jule::Ptr<_220bca1a2_SymbolTable>& _114832_file) mutable -> void {
		{
			auto &expr = _114832_file.get()._field_Funcs;
			auto it = expr.begin();
			_iter_begin_206ec9784:;
			if (it != expr.end()) {
				jule::Ptr<_220b31636_Fn> _114920_f = *it;
				{
					if ((_114920_f.get()._field_Ident == jule::Str("init", 4))) {
						_202bce988_indent(_self_);
						_202b8bc42_write(_self_, static__202b65215_func(_114920_f));
						_202b8bc42_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_206ec9784:;
				++it;
				goto _iter_begin_206ec9784;
			}
			_iter_end_206ec9784:;
		};
	}));
}



inline void _202c09474_initCaller(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	_202b8bc42_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_202bcae18_addIndent(_self_);
	_202c05ea9_iterPackages(_self_, jule::Fn<void(jule::Ptr<_220b6427e_Package>&)>([=](jule::Ptr<_220b6427e_Package>& _116235_pkg) mutable -> void {
		_202c09298_pushInit(_self_, _116235_pkg);
	}));
	_202bcb435_doneIndent(_self_);
	_202b8bc42_write(_self_, jule::Str("\n}", 2));
}



inline void _202c09650_end(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	_202b8bc42_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_21b537d66_Test) {
		_202b8bc42_write(_self_, jule::Str("test_point();", 13));
	} else {
		_202b8bc42_write(_self_, jule::Str("entry_point();", 14));
	};
	_202b8bc42_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _202c0982b_serializeHead(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	_202c05d77_prepareStructures(_self_);
	_202c060db_buildTraitMap(_self_);
	_202c059d1_head(_self_);
	_202b8bc42_write(_self_, jule::Str("\n", 1));
	_202c08385_decls(_self_);
	if ((_self_.get()._field_resultDecls.len() > 0LL)) {
		jule::Str _119721_head = _self_.get()._field_Obj.slice(0LL,_self_.get()._field_headPos);;
		{
			auto &expr = _self_.get()._field_resultDecls;
			auto it = expr.begin();
			_iter_begin_206ed1208:;
			if (it != expr.end()) {
				jule::Str _119820_decl = *it;
				{
					_119721_head+=_119820_decl;
					_self_.get()._field_declPos+=_119820_decl.len();
				}
				_iter_next_206ed1208:;
				++it;
				goto _iter_begin_206ed1208;
			}
			_iter_end_206ed1208:;
		};
		_119721_head+=_self_.get()._field_Obj.slice(_self_.get()._field_headPos);
		_self_.get()._field_Obj=_119721_head;
	};
	_202b8bc42_write(_self_, jule::Str("\n", 1));
	_202c08d47_structures(_self_);
	_202c09023_funcs(_self_);
	_202c09474_initCaller(_self_);
	_202b8bc42_write(_self_, jule::Str("\n\n", 2));
	if ((_self_.get()._field_anyObj.len() > 0LL)) {
		jule::Str _121321_head = _self_.get()._field_Obj.slice(0LL,_self_.get()._field_declPos);;
		_121321_head+=_self_.get()._field_anyObj;
		_121321_head+=_self_.get()._field_Obj.slice(_self_.get()._field_declPos);
		_self_.get()._field_Obj=_121321_head;
	};
}



inline void _202c09a07_Serialize(jule::Ptr<_202c052a5_ObjectCoder> _self_) {
	_202c0982b_serializeHead(_self_);
	_202c09650_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _202c052a5_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_221064c23_IR__jule_tuple_s_21d4e511d_Log static__220cc5555_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_221064c23_IR__jule_tuple_s_21d4e511d_Log __jule_func_result;
	jule::Ptr<_2213ab795_JuleImporter> _2817_importer = static__220dd6204_New(_2210ed6d5_buildCompileInfo());;
	jule::Slice<jule::Ptr<_21ee6c665_Ast>> _2918_files;;
	jule::Slice<_21d4e511d_Log> _2929_logs;;
	({
		__jule_tuple_sx_21ee6c665_Ast__jule_tuple_s_21d4e511d_Log __jule_assign_result = _22104dbeb_ImportPackage(_2817_importer.ptr(), _2721_path,true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_220b6427e_Package> _3918_pkg;;
	({
		__jule_tuple_x_220b6427e_Package__jule_tuple_s_21d4e511d_Log __jule_assign_result = _220c2d238_AnalyzePackage(_2918_files,jule::Trait<_220b5d6a7_Importer>(_2817_importer, 0),_2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_221064c23_IR> _4417_ir = jule::new_ptr<_221064c23_IR>(_221064c23_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_220e297b9_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_2210de86e_getAllUniquePasses(_4417_ir.get()._field_Main,_4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _220cc606c_appendStructs(_221064c23_IR* _self_, jule::Ptr<_220b6427e_Package>& _5633_p, jule::Slice<jule::Ptr<_21eec3006_Struct>>& _5657_buffer) {
	{
		auto &expr = _5633_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_20692372d:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _5721_f = *it;
			{
				{
					auto &expr = _5721_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_20692407a:;
					if (it != expr.end()) {
						jule::Ptr<_21eec3006_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								_5657_buffer = jule::alloc_for_append(_5657_buffer,1);_5657_buffer.__push(_5825_s);;
							};
						}
						_iter_next_20692407a:;
						++it;
						goto _iter_begin_20692407a;
					}
					_iter_end_20692407a:;
				};
			}
			_iter_next_20692372d:;
			++it;
			goto _iter_begin_20692372d;
		}
		_iter_end_20692372d:;
	};
}



inline jule::Slice<jule::Ptr<_21eec3006_Struct>> _220cca4d3_GetAllStructures(_221064c23_IR* _self_) {
	jule::Slice<jule::Ptr<_21eec3006_Struct>> _6917_buffer = nullptr;;
	_220cc606c_appendStructs(&(*_self_), (*_self_)._field_Main,_6917_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_206923c28:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_220cc606c_appendStructs(&(*_self_), _7121_u.get()._field_Package,_6917_buffer);
				};
			}
			_iter_next_206923c28:;
			++it;
			goto _iter_begin_206923c28;
		}
		_iter_end_206923c28:;
	};
	return _6917_buffer;;
}



inline void _220ccbb22_appendGlobals(_221064c23_IR* _self_, jule::Ptr<_220b6427e_Package>& _7933_p, jule::Slice<jule::Ptr<_220b8746c_Var>>& _7957_buffer) {
	{
		auto &expr = _7933_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_206926720:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_20692704a:;
					if (it != expr.end()) {
						jule::Ptr<_220b8746c_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								_7957_buffer = jule::alloc_for_append(_7957_buffer,1);_7957_buffer.__push(_8125_v);;
							};
						}
						_iter_next_20692704a:;
						++it;
						goto _iter_begin_20692704a;
					}
					_iter_end_20692704a:;
				};
			}
			_iter_next_206926720:;
			++it;
			goto _iter_begin_206926720;
		}
		_iter_end_206926720:;
	};
}



inline jule::Slice<jule::Ptr<_220b8746c_Var>> _2210a7914_GetAllGlobals(_221064c23_IR* _self_) {
	jule::Slice<jule::Ptr<_220b8746c_Var>> _9217_buffer = nullptr;;
	_220ccbb22_appendGlobals(&(*_self_), (*_self_)._field_Main,_9217_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_2069289db:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_220ccbb22_appendGlobals(&(*_self_), _9421_u.get()._field_Package,_9217_buffer);
				};
			}
			_iter_next_2069289db:;
			++it;
			goto _iter_begin_2069289db;
		}
		_iter_end_2069289db:;
	};
	return _9217_buffer;;
}



inline void _2210b8dcb_Order(_221064c23_IR* _self_) {
	(*_self_)._field_Ordered._field_Structs=_220cca4d3_GetAllStructures(&(*_self_));
	(*_self_)._field_Ordered._field_Globals=_2210a7914_GetAllGlobals(&(*_self_));
	static__2212880ab_orderStructures((*_self_)._field_Ordered._field_Structs);
	static__221302125_orderVars((*_self_)._field_Ordered._field_Globals);
}







std::ostream &operator<<(std::ostream &_Stream, _221064c23_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _20704e30e_parseInteger(_202c62b09_argParser* _self_, jule::Str& _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (_19031_s.empty()) {
			_case_begin_207051e9e:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_21d440134_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_207052411:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_21d440134_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_2070525a9:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_21d440134_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_207052301:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_207051b6e:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(1LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_207051b08:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s,10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_207051a3c:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _207057405_parseInteger(_202c62b09_argParser* _self_, jule::Str& _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (_19031_s.empty()) {
			_case_begin_20705a051:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_21d440134_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_20705a4b3:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_21d440134_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_20705a65b:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_21d440134_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_20705a3a3:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_207059c21:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(1LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_207059baa:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s,10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_207059ade:;
	};
	return __jule_func_result;;
}



inline jule::Str _202c63401_getData(_202c62b09_argParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();;
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];;
}



inline jule::VoidExceptional _202c63643_processFlag(_202c62b09_argParser* _self_, jule::Trait<_202c5d9b2_CommonFlag>& _21735_flag) {
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_20703755b_Flag>>()) {
			_case_begin_20704b55e:;
			{
				jule::Ptr<_20703755b_Flag> _22021_bf = _21735_flag.operator jule::Ptr<_20703755b_Flag>();;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_20704b4e8:;
	};
	jule::Str _22513_data = _202c63401_getData(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _202c5d9b2_CommonFlag_mptr_data[(_21735_flag).type_offset]._202c28e77_Name(_21735_flag)) + jule::Str(": expression missing", 20)), &__jule_any_type6));
	};
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_20702b693_Flag>>()) {
			_case_begin_20704cbc0:;
			{
				jule::Ptr<_20702b693_Flag> _23221_intf = _21735_flag.operator jule::Ptr<_20702b693_Flag>();;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _20704e30e_parseInteger(&(*_self_), _22513_data,jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _22055d052_ParseInt(_23370_s,_23378_base,64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _202c5d9b2_CommonFlag_mptr_data[(_21735_flag).type_offset]._202c28e77_Name(_21735_flag)) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type6));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2070303cd_Flag>>()) {
			_case_begin_20704d5a5:;
			{
				jule::Ptr<_2070303cd_Flag> _24021_uintf = _21735_flag.operator jule::Ptr<_2070303cd_Flag>();;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _207057405_parseInteger(&(*_self_), _22513_data,jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _220702515_ParseUint(_24171_s,_24179_base,64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _202c5d9b2_CommonFlag_mptr_data[(_21735_flag).type_offset]._202c28e77_Name(_21735_flag)) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type6));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_207033bea_Flag>>()) {
			_case_begin_20704d61b:;
			{
				jule::Ptr<_207033bea_Flag> _24821_ff = _21735_flag.operator jule::Ptr<_207033bea_Flag>();;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _220b20636_ParseFloat(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _202c5d9b2_CommonFlag_mptr_data[(_21735_flag).type_offset]._202c28e77_Name(_21735_flag)) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type6));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20703ad78_Flag>>()) {
			_case_begin_20704d682:;
			{
				(*(_21735_flag.operator jule::Ptr<_20703ad78_Flag>().get()._field_data))=_22513_data;
			}
		}
		_match_end_20704d53e:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _202c638b8_singleDash(_202c62b09_argParser* _self_, jule::Str& _25730_arg) {
	if ((_25730_arg.len() == 1LL)) {
		return jule::VoidExceptional(jule::Any((_25730_arg + jule::Str(": missing argument", 18)), &__jule_any_type6));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25730_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_20706272e:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_202c5d9b2_CommonFlag> _26321_flag = _202c60eae_FindFlagShort(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any(((_25730_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)), &__jule_any_type6));
				};
				({
					auto except = _202c63643_processFlag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_20706272e:;
			++it;
			goto _iter_begin_20706272e;
		}
		_iter_end_20706272e:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _202c63b3d_doubleDash(_202c62b09_argParser* _self_, jule::Str& _27230_arg) {
	if ((_27230_arg.len() == 2LL)) {
		return jule::VoidExceptional(jule::Any((_27230_arg + jule::Str(": missing argument", 18)), &__jule_any_type6));
	};
	jule::Trait<_202c5d9b2_CommonFlag> _27617_flag = _202c60ba1_FindFlag(&(*_self_)._field_set, _27230_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any((_27230_arg + jule::Str(": flag is not exist", 19)), &__jule_any_type6));
	};
	({
		auto except = _202c63643_processFlag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _202c63d19_tryArg(_202c62b09_argParser* _self_) {
	jule::Str _28413_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _202c63b3d_doubleDash(&(*_self_), _28413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _202c638b8_singleDash(&(*_self_), _28413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28413_arg);;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _202c63ee5_parse(_202c62b09_argParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _202c63d19_tryArg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_2070681e6:;
	}
	_iter_end_2070681e6:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _202c62b09_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _21c36c33c_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _21c381a6b_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	{
		return static_cast<jule::Str>(_6924_s);;
	};
}



inline jule::I64 _21b5b45a7_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _21c39ed31_Stat(jule::U8* _4816_path, struct stat* _4833_stat) {
	return static_cast<jule::I64>(stat(((char*)(_4816_path)), _4833_stat));;
}



inline jule::I64 _21c3a021b_Open(jule::U8* _5316_path, jule::I64 _5329_flag, jule::I64 _5340_mode) {
	return static_cast<jule::I64>(open(((char*)(_5316_path)),_5329_flag,_5340_mode));;
}



inline jule::U8* _21c3a055c_Getcwd(jule::U8* _5918_buff, jule::U64 _5931_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5918_buff)),_5931_bufflen)));;
}



inline DIR* _21c3a0a35_Opendir(jule::U8* _6419_path) {
	return opendir(((char*)(_6419_path)));;
}



inline struct dirent* _21c3a0ccc_Readdir(DIR* _6723_dir) {
	return readdir(_6723_dir);;
}



inline jule::I64 _21c3a1074_Closedir(DIR* _7024_dir) {
	return static_cast<jule::I64>(closedir(_7024_dir));;
}



inline jule::I64 _21c3a1904_Mkdir(jule::U8* _7917_path, jule::I64 _7930_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7917_path)),_7930_mode));;
}



inline jule::I64 _21c3a1b9b_Rmdir(jule::U8* _8417_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_8417_path))));;
}



inline jule::I64 _21c3a1e43_Unlink(jule::U8* _8718_path) {
	return static_cast<jule::I64>(unlink(((char*)(_8718_path))));;
}



inline jule::I64 _21c3bc645_Seek(jule::I64 _269_handle, jule::I64 _2622_offset, jule::I64 _2635_origin) {
	return static_cast<jule::I64>(lseek(_269_handle,_2622_offset,_2635_origin));;
}



inline jule::I64 _21c3bca30_Read(jule::I64 _3116_handle, void* _3133_buff, jule::U64 _3148_n) {
	return static_cast<jule::I64>(read(_3116_handle,_3133_buff,_3148_n));;
}



inline jule::I64 _21c3bcda4_Close(jule::I64 _3610_handle) {
	return static_cast<jule::I64>(close(_3610_handle));;
}



inline jule::I64 _21c3bd28e_Write(jule::I64 _3917_handle, void* _3930_buff, jule::U64 _3945_n) {
	return static_cast<jule::I64>(write(_3917_handle,_3930_buff,_3945_n));;
}



inline void _21c3bd49d_Exit(jule::I64 _449_code) {
	exit(_449_code);
}



inline jule::I64 _21c461431_getLastOsError(void) {
	jule::I64 _309_err = _21b5b45a7_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_202ce12b4:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_202ce0bba:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_202ce0c42:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_202ce0cb9:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_202ce0eea:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_202ce1061:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_202ce10c7:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_202ce0a11:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_202ce09ab:;
	};
}



inline jule::Slice<jule::Str> _21c461e15_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _21c462388_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _21c46328a_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _21c46328a_getwd(void) {
	jule::U8* _1113_buff = _21c3a055c_Getcwd(nullptr,0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_21c461431_getLastOsError(), &__jule_any_type132));
	};
	jule::Str _159_pwd = _21c381a6b_BytePtrToStr(_1113_buff);;
	{
		_21c36c33c_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _159_pwd);;
}



inline jule::Bool _21d30b077_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_21d36b2e6__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _21d37948b_isExcludingLatin(_21d31525c_Letter,_7613_r);;
}



inline jule::Bool _21d3788a8_is16(jule::Slice<_21d376ce6_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_2035b3822:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_21d376ce6_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_2035b3822:;
				++it;
				_19313_i++;
				goto _iter_begin_2035b3822;
			}
			_iter_end_2035b3822:;
		};
		return false;;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_21d376ce6_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_2035b32e4:;
	}
	_iter_end_2035b32e4:;;
	return false;;
}



inline jule::Bool _21d378be9_is32(jule::Slice<_21d377269_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_2035b9c79:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_21d377269_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_2035b9c79:;
				++it;
				_23013_i++;
				goto _iter_begin_2035b9c79;
			}
			_iter_end_2035b9c79:;
		};
		return false;;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_21d377269_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_2035b6a45:;
	}
	_iter_end_2035b6a45:;;
	return false;;
}



inline jule::Bool _21d37948b_isExcludingLatin(jule::Ptr<_21d3776dc_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_21d376ce6_Range16> &_28014_R16 = _27821_rangeTab.get()._field_R16;;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if (((_28014_R16.len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>(_28014_R16[(_28014_R16.len() - 1LL)]._field_Hi)))) {
			return _21d3788a8_is16(_28014_R16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_21d377269_Range32> &_28710_R32 = _27821_rangeTab.get()._field_R32;;
	if (((_28710_R32.len() > 0LL) && (_27844_r >= static_cast<jule::I32>(_28710_R32[0LL]._field_Lo)))) {
		return _21d378be9_is32(_28710_R32,static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _21d379733_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_21d36b2e6__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _21d37948b_isExcludingLatin(_21d31b7b3_Upper,_29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _21d439381_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _21d43825e_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_21d4387e2_acceptRange _1969_accept = _21d438b00_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _21d4396a0_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _21d43825e_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_21d4387e2_acceptRange _2439_accept = _21d438b00_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _21d439947_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_21d43b31c_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_203610c37;
			};
		}
	_iter_next_203610c37:;
	}
	_iter_end_203610c37:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d439381_DecodeRune(_27619_p.slice(_28113_start,_2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _21d43a6e5_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _21d43aa36_appendRuneNonASCII(_40519_p,_40530_r);;
}



inline jule::Slice<jule::U8> _21d43aa36_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_203626159:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_203624795:;
			{
				_41242_r=128LL;
				goto _case_begin_20362480b;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_20362480b:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_203623d05:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_203623ca0:;
	};
}



inline jule::I64 _21d43b075_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_20362e6c3;
			};
			jule::U8 _48213_x = _21d43825e_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_20362e6c3;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_20362e6c3;
			};
			_21d4387e2_acceptRange _49213_accept = _21d438b00_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_20362e6c3:;
	}
	_iter_end_20362e6c3:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _21d43b31c_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::Slice<jule::U8> _21d45c409_Stobs(jule::Str& _911_s) {
	return _911_s.fake_slice();;
}



inline void _21d4629e7_PushToStrBuffer(jule::Str& _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		(_2825_s).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline jule::I64 _21d462ee2_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	jule::U8* _519_first = (&(_5017_s[0LL]));;
	jule::U8* _5213_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5213_it >= _519_first); (_5213_it)--) {
		{
			{
				if (((*(_5213_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_5213_it - _519_first))));;
				};
			};
		}
	_iter_next_20365939b:;
	}
	_iter_end_20365939b:;;
	return -1LL;;
}



inline jule::I64 _21d463267_FindLastByteStr(jule::Str& _6921_s, jule::U8 _6929_b) {
	return static_cast<jule::I64>(_21d462ee2_FindLastByte(_21d45c409_Stobs(_6921_s),_6929_b));;
}



inline jule::Str _21d4409e7_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_20366d1d4:;
	}
	_iter_end_20366d1d4:;;
	return _2013_ss;;
}



inline jule::Bool _21d443da2_hasPrefix(jule::Str& _2715_s, jule::Str& _2724_sub, jule::I64 _2738_start) {
	if (((_2724_sub.len() == 0LL) || ((_2715_s.len() - _2738_start) < _2724_sub.len()))) {
		return false;;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < _2724_sub.len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_3213_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if ((_2715_s[_2738_start] != _2724_sub[_3213_i])) {
				return false;;
			};
		}
	_iter_next_20367123c:;
	}
	_iter_end_20367123c:;;
	return true;;
}



inline jule::Bool _21d440134_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _21d443da2_hasPrefix(_4214_s,_4222_sub,0LL);;
}



inline jule::Bool _21d4633cc_hasSuffix(jule::Str& _4615_s, jule::Str& _4624_sub, jule::I64 _4638_start) {
	if (((_4624_sub.len() == 0LL) || ((_4615_s.len() - _4638_start) < _4624_sub.len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>((_4615_s.len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < _4624_sub.len()); (_5213_i)++) {
		{
			if ((_4615_s[((_4638_start - _5213_i) - 1LL)] != _4624_sub[((_4624_sub.len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_203673261:;
	}
	_iter_end_203673261:;;
	return true;;
}



inline jule::Bool _21d463685_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _21d4633cc_hasSuffix(_6214_s,_6222_sub,0LL);;
}



inline jule::I64 _21d463a70_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_21d443da2_hasPrefix(_7011_s,_7019_sub,_7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_203677342:;
	}
	_iter_end_203677342:;;
	return -1LL;;
}



inline jule::I64 _21d4643ab_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10017_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_203679894;
					};
				}
			_iter_next_20367b104:;
			}
			_iter_end_20367b104:;;
			return _9413_j;;
		}
	_iter_next_203679894:;
	}
	_iter_end_203679894:;;
	return -1LL;;
}



inline jule::I64 _21d464763_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_21d4643ab_FindLastAt(_11513_s,_11521_sub,static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _21d46ac86_findRune(jule::Slice<jule::U8>& _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < _17114_s.len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I64 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d439381_DecodeRune(_17114_s.slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_203683a02:;
	}
	_iter_end_203683a02:;;
	return -1LL;;
}



inline jule::I64 _21d46b5c2_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_21d463267_FindLastByteStr(_19317_s,_19325_b));;
}



inline jule::I64 _21d46c3d6_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _21d45c409_Stobs(_22812_s);;
	jule::Slice<jule::U8> _23013_rb = _21d45c409_Stobs(_22820_runes);;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I64 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d439381_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21d46ac86_findRune(_23013_rb,_23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_203689288:;
	}
	_iter_end_203689288:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _21d46cb12_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _21d463a70_FindAt(_26210_s,_26218_sub,_27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_20369068a;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i,_27613_j));;
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_20369068a:;
	}
	_iter_end_20369068a:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;;
}



inline jule::Bool _21d46ce53_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_21d463a70_FindAt(_29013_s,_29021_sub,0LL) != -1LL);;
}



inline jule::Bool _21d46d926_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_21d46c3d6_FindAny(_30616_s,_30624_runes) != -1LL);;
}



inline jule::I64 _21d46dc67_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _21d463a70_FindAt(_31210_s,_31218_sub,_31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_203695c45;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_203695c45:;
	}
	_iter_end_203695c45:;;
	return _31613_n;;
}



inline jule::Str _21d46e1eb_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I64 _3379_m = _21d46dc67_Count(_33212_s,_33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _21d463a70_FindAt(_33212_s,_33220_sub,_34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_203699a6d;
			};
			_34513_ss+=_33212_s.slice(_34613_i,_34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_203699a6d:;
	}
	_iter_end_203699a6d:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _21d46b25e_trimLeft(jule::Slice<jule::U8>& _38818_s, jule::Slice<jule::U8>& _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < _38818_s.len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I64 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d439381_DecodeRune(_38818_s.slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21d46ac86_findRune(_38830_cutset,_39114_r) == -1LL)) {
				_38818_s=_38818_s.slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_20369c686:;
	}
	_iter_end_20369c686:;;
	_38818_s=nullptr;
}



inline jule::Str _21d4702a7_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _21d45c409_Stobs(_40313_s);;
	jule::Slice<jule::U8> _4059_bcutset = _21d45c409_Stobs(_40321_cutset);;
	_21d46b25e_trimLeft(_40413_bytes,_4059_bcutset);
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _21d470560_trimRight(jule::Slice<jule::U8>& _41019_s, jule::Slice<jule::U8>& _41031_cutset) {
	jule::I64 _41113_i = _41019_s.len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I64 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d439947_DecodeLastRune(_41019_s.slice(0LL,_41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21d46ac86_findRune(_41031_cutset,_41314_r) == -1LL)) {
				_41019_s=_41019_s.slice(0LL,_41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_2036a1cea:;
	}
	_iter_end_2036a1cea:;;
	_41019_s=nullptr;
}



inline jule::Str _21d470be2_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _21d45c409_Stobs(_4349_s);;
	jule::Slice<jule::U8> _4369_bcutset = _21d45c409_Stobs(_43417_cutset);;
	_21d46b25e_trimLeft(_43513_bytes,_4369_bcutset);
	_21d470560_trimRight(_43513_bytes,_4369_bcutset);
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Str _21d471033_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_2036a66e5:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_2036a675b:;
			{
				return _4449_parts[0LL];;
			}
		}
		_match_end_2036a6382:;
	};
	jule::Str _45113_s = _4449_parts[0LL];;
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		_iter_begin_2036a77b2:;
		if (it != expr.end()) {
			jule::Str &_45212_part = *it;
			{
				_45113_s+=_44423_sep;
				_45113_s+=_45212_part;
			}
			_iter_next_2036a77b2:;
			++it;
			goto _iter_begin_2036a77b2;
		}
		_iter_end_2036a77b2:;
	};
	return _45113_s;;
}



inline jule::Str _21c4bec20_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _21d4715d8_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _21d471374_IsPathSep(_1099_originalPath[0LL])) && _21d471374_IsPathSep(_1099_originalPath[1LL]))) {
			return _21c4de558_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _21d471374_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_21c49a844_lazyBuff _12713_out = _21c49a844_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0;;
	jule::I64 _13221_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_21c4a95de_append(&_12713_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_21d471374_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_2036b63c5:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _21d471374_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_2036b9098:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _21d471374_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_2036b910e:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_2036bbee1:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_21d471374_IsPathSep(static_cast<jule::U8>(_21c4a6cb2_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_2036bc95e:;
									}
									_iter_end_2036bc95e:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_2036bc057:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_21c4a95de_append(&_12713_out, 47LLU);
									};
									_21c4a95de_append(&_12713_out, '.');
									_21c4a95de_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_2036bbb5b:;
						};
					}
				}
				else {
					_case_begin_2036b4857:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_21c4a95de_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_21d471374_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_21c4a95de_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_2036b5d86:;
						}
						_iter_end_2036b5d86:;;
					}
				}
				_match_end_2036b4626:;
			};
		}
	_iter_next_2036b47ad:;
	}
	_iter_end_2036b47ad:;;
	if ((_12713_out._field_w == 0LL)) {
		_21c4a95de_append(&_12713_out, '.');
	};
	return _21c4de558_FromSlash(_21c4aae1a_string(&_12713_out));;
}



inline jule::Str _21c4de558_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;;
	};
}



inline jule::Str _21c4e1aee_Join(jule::Slice<jule::Str> _2259_elem) {
	return _21d47184c_join(_2259_elem);;
}



inline jule::Str _21c4e30b7_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_21d471374_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_2036c1666:;
	}
	_iter_end_2036c1666:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _21c4ab327_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21d47171a_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _21c4c73ba_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _21d471374_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL,(_25413_path.len() - 1LL));;
		}
	_iter_next_2036c3b85:;
	}
	_iter_end_2036c3b85:;;
	(_25413_path).mut_slice(_21c49aa31_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_21d471374_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_2036c54a0:;
	}
	_iter_end_2036c54a0:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(47LL);;
	};
	return _25413_path;;
}



inline jule::Str _21c4e565d_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _21c49aa31_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_21d471374_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_2036c77c1:;
	}
	_iter_end_2036c77c1:;;
	jule::Str _2919_dir = _21c4bec20_Clean(_2858_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _21c49aa31_VolumeName(jule::Str _30315_path) {
	return _21c4de558_FromSlash(_30315_path.slice(0LL,_21d4715d8_volumeNameLen(_30315_path)));;
}



inline jule::Bool _21d471374_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _21d4714a6_IsAbs(jule::Str _5310_path) {
	return _21d440134_HasPrefix(_5310_path,jule::Str("/", 1));;
}



inline jule::I64 _21d4715d8_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _21d47171a_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_21d4714a6_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _21c4bec20_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _679_wd = ({
		auto except = _21c462388_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _21d47184c_join(jule::Slice<jule::Str>::make({_679_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _21d47184c_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto &expr = _739_elem;
		auto it = expr.begin();
		_iter_begin_2036d1489:;
		if (it != expr.end()) {
			jule::I64 _749_i = it - expr.begin();
			jule::Str &_7412_e = *it;
			{
				if ((!(_7412_e.empty()))) {
					return _21c4bec20_Clean(_21d471033_Join(_739_elem.slice(_749_i),static_cast<jule::Str>(47LL)));;
				};
			}
			_iter_next_2036d1489:;
			++it;
			_749_i++;
			goto _iter_begin_2036d1489;
		}
		_iter_end_2036d1489:;
	};
	return jule::Str();;
}



inline jule::I64 _21b5dd9aa_getLastFsError(void) {
	jule::I64 _729_err = _21b5b45a7_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_2036de51e:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_2036dd9a2:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_2036dde14:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_2036dde7a:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_2036ddee1:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_2036de057:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_2036de640:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_2036de6a6:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_2036de71c:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_2036de783:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_2036de80a:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_2036de882:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_2036de909:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_2036de981:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_2036dea08:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_2036dea80:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_2036deb07:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_2036deb7e:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_2036dec06:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_2036dec7d:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_2036ded05:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_2036ded7c:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_2036dee04:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_2036dee7b:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_2036e0003:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_2036e007a:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_2036e0102:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_2036e0179:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_2036ddc6b:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_2036ddc16:;
	};
}



inline jule::I64 _21d53ea2a_getLastProcessError(void) {
	jule::I64 _429_err = _21b5b45a7_GetLastErrno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_20371ad31:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_20371a2c5:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_20371a726:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_20371a79d:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_20371a825:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_20371a89c:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_20371aa78:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_20371ab00:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_20371ab77:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 97LL) {
			_case_begin_20371abee:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_20371ae52:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else {
			_case_begin_20371a57d:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_20371a528:;
	};
}



inline jule::Slice<char*> _21d542be8_strSliceToCstrSlice(jule::Slice<jule::Str> _2024_s) {
	jule::Slice<char*> _2113_cs = jule::Slice<char*>::alloc(0LL, (_2024_s.len() + 1LL), nullptr);;
	{
		auto &expr = _2024_s;
		auto it = expr.begin();
		_iter_begin_203727007:;
		if (it != expr.end()) {
			jule::I64 _229_i = it - expr.begin();
			{
				_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(((char*)((&(_2024_s[_229_i][0LL])))));;
			}
			_iter_next_203727007:;
			++it;
			_229_i++;
			goto _iter_begin_203727007;
		}
		_iter_end_203727007:;
	};
	_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(nullptr);;
	return _2113_cs;;
}



inline jule::I64 _21d543149_execvp(jule::Str _2911_file, jule::Slice<jule::Str> _2922_argv) {
	jule::Slice<char*> _309_cargv = _21d542be8_strSliceToCstrSlice(_2922_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_2911_file[0LL])))), (char*const*)(&(_309_cargv[0LL]))));;
	};
}



inline jule::I64 _21d543534_execve(jule::Str _3611_file, jule::Slice<jule::Str> _3622_argv, jule::Slice<jule::Str> _3635_env) {
	jule::Slice<char*> _379_cargv = _21d542be8_strSliceToCstrSlice(_3622_argv);;
	jule::Slice<char*> _389_cenv = _21d542be8_strSliceToCstrSlice(_3635_env);;
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3611_file[0LL])))), (char*const*)(&(_379_cargv[0LL])), (char*const*)((&(_389_cenv[0LL])))));;
	};
}



inline void _21d54414a_Exit(jule::I64 _129_code) {
	_21c3bd49d_Exit(_129_code);
}



inline jule::Str _21d544348_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _21d4d8045_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _21d4d8265_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto &expr = _21b552e3b_CppHeaderExts;
		auto it = expr.begin();
		_iter_begin_20375d0e8:;
		if (it != expr.end()) {
			jule::Str &_3212_validExt = *it;
			{
				if ((_3121_ext == _3212_validExt)) {
					return true;;
				};
			}
			_iter_next_20375d0e8:;
			++it;
			goto _iter_begin_20375d0e8;
		}
		_iter_end_20375d0e8:;
	};
	return false;;
}



inline jule::Bool _21d4d850c_IsValidCppExt(jule::Str _4118_ext) {
	if ((_4118_ext == jule::Str(".c", 2))) {
		return true;;
	};
	{
		auto &expr = _21d4d62eb_CppExts;
		auto it = expr.begin();
		_iter_begin_20375d956:;
		if (it != expr.end()) {
			jule::Str &_4512_e = *it;
			{
				if ((_4118_ext == _4512_e)) {
					return true;;
				};
			}
			_iter_next_20375d956:;
			++it;
			goto _iter_begin_20375d956;
		}
		_iter_end_20375d956:;
	};
	{
		auto &expr = _21d4d7e46_ObjectiveCppExts;
		auto it = expr.begin();
		_iter_begin_20375ec65:;
		if (it != expr.end()) {
			jule::Str &_5012_e = *it;
			{
				if ((_4118_ext == _5012_e)) {
					return true;;
				};
			}
			_iter_next_20375ec65:;
			++it;
			goto _iter_begin_20375ec65;
		}
		_iter_end_20375ec65:;
	};
	return false;;
}



inline jule::Str _21d4e555d_Logf(jule::Str _3009_fmt, jule::Slice<jule::Any> _30022_args) {
	return _21d4e5e76_applyFmt(_3009_fmt,_30022_args);;
}



inline jule::Str _21d4e5849_argToStr(jule::Any _30413_arg) {
	{
		auto &_match_expr{ _30413_arg };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_2037611b7:;
			{
				return _30413_arg.cast<jule::Str>(&__jule_any_type6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_20376122d:;
			{
				return static_cast<jule::Str>(_30413_arg.cast<jule::U8>(&__jule_any_type133));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_203760ea8:;
			{
				return static_cast<jule::Str>(_30413_arg.cast<jule::I32>(&__jule_any_type2));;
			}
		}
		else {
			_case_begin_203760a79:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_20376088c:;
	};
}



inline jule::I64 _21d4e5ae1_findNextFmt(jule::Str _31716_fmt) {
	{
		auto &expr = _31716_fmt;
		auto it = expr.begin();
		_iter_begin_2037618e3:;
		if (it != expr.end()) {
			jule::I64 _3189_i = it - expr.begin();
			jule::U8 &_31812_b = *it;
			{
				if ((_31812_b == '@')) {
					return _3189_i;;
				};
			}
			_iter_next_2037618e3:;
			++it;
			_3189_i++;
			goto _iter_begin_2037618e3;
		}
		_iter_end_2037618e3:;
	};
	return -1LL;;
}



inline jule::Str _21d4e5e76_applyFmt(jule::Str _32617_fmt, jule::Slice<jule::Any> _32627_args) {
	jule::Str _32713_s = jule::Str();;
	{
		auto &expr = _32627_args;
		auto it = expr.begin();
		_iter_begin_2037635e8:;
		if (it != expr.end()) {
			jule::Any &_32812_arg = *it;
			{
				jule::I64 _32913_i = _21d4e5ae1_findNextFmt(_32617_fmt);;
				if ((_32913_i == -1LL)) {
					goto _iter_end_2037635e8;
				};
				_32713_s+=_32617_fmt.slice(0LL,_32913_i);
				_32713_s+=_21d4e5849_argToStr(_32812_arg);
				(_32617_fmt).mut_slice((_32913_i + 1LL));;
			}
			_iter_next_2037635e8:;
			++it;
			goto _iter_begin_2037635e8;
		}
		_iter_end_2037635e8:;
	};
	_32713_s+=_32617_fmt;
	return _32713_s;;
}



inline jule::Bool _21d4e6eee_IsTopDirective(jule::Str _2819_directive) {
	return ((_2819_directive == jule::Str("pass", 4)) || (_2819_directive == jule::Str("build", 5)));;
}



inline jule::Bool _21d4e842e_IsWindows(jule::Str _3714_os) {
	return (_3714_os == jule::Str("windows", 7));;
}



inline jule::Bool _21d4e86d7_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == jule::Str("darwin", 6));;
}



inline jule::Bool _21d4e897e_IsLinux(jule::Str _4312_os) {
	return (_4312_os == jule::Str("linux", 5));;
}



inline jule::Bool _21d4e8c9d_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == jule::Str("i386", 4));;
}



inline jule::Bool _21d4e9045_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == jule::Str("amd64", 5));;
}



inline jule::Bool _21d4e92dc_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == jule::Str("arm64", 5));;
}



inline jule::Bool _21d4e9584_IsUnix(jule::Str _5511_os) {
	return (_21d4e86d7_IsDarwin(_5511_os) || _21d4e897e_IsLinux(_5511_os));;
}



inline jule::Bool _21d4e9908_Is32Bit(jule::Str _5812_arch) {
	return _21d4e8c9d_IsI386(_5812_arch);;
}



inline jule::Bool _21d4e9ba0_Is64Bit(jule::Str _6112_arch) {
	return (_21d4e9045_IsAmd64(_6112_arch) || _21d4e92dc_IsArm64(_6112_arch));;
}



inline void _21d52e740_init(void) {
	jule::Str _2513_path = _21d544348_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_21d530224_PathWd=({
			auto except = _21c462388_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_21d52e003_PathExec=_21c4e565d_Dir(_2513_path);
		_21d52d673_PathStdlib=_21c4e1aee_Join(jule::Slice<jule::Str>::make({_21d52e003_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_21d53da90_PathApi=_21c4e1aee_Join(jule::Slice<jule::Str>::make({_21d52e003_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _21d81de4c_IsUnaryOp(jule::Str _31214_kind) {
	{
		auto &expr = _21d76ce01_UnaryOps;
		auto it = expr.begin();
		_iter_begin_2037ac565:;
		if (it != expr.end()) {
			jule::Str &_31312_op = *it;
			{
				if ((_31214_kind == _31312_op)) {
					return true;;
				};
			}
			_iter_next_2037ac565:;
			++it;
			goto _iter_begin_2037ac565;
		}
		_iter_end_2037ac565:;
	};
	return false;;
}



inline jule::Bool _21d81e238_IsBinOp(jule::Str _32212_kind) {
	{
		auto &expr = _21d76d154_BinOps;
		auto it = expr.begin();
		_iter_begin_2037aca0a:;
		if (it != expr.end()) {
			jule::Str &_32312_op = *it;
			{
				if ((_32212_kind == _32312_op)) {
					return true;;
				};
			}
			_iter_next_2037aca0a:;
			++it;
			goto _iter_begin_2037aca0a;
		}
		_iter_end_2037aca0a:;
	};
	return false;;
}



inline jule::Bool _21d81e7ee_IsStr(jule::Str _34210_k) {
	return ((!(_34210_k.empty())) && ((_34210_k[0LL] == '\"') || _21d81ea96_IsRawStr(_34210_k)));;
}



inline jule::Bool _21d81ea96_IsRawStr(jule::Str _34513_k) {
	return ((!(_34513_k.empty())) && (_34513_k[0LL] == '`'));;
}



inline jule::Bool _21d81ed3d_IsRune(jule::Str _34911_k) {
	return ((!(_34911_k.empty())) && (_34911_k[0LL] == '\''));;
}



inline jule::Bool _21d820459_IsBool(jule::Str _35511_k) {
	return ((_35511_k == jule::Str("true", 4)) || (_35511_k == jule::Str("false", 5)));;
}



inline jule::Bool _21d820701_IsFloat(jule::Str _35812_k) {
	if (_21d440134_HasPrefix(_35812_k,jule::Str("0x", 2))) {
		return _21d46d926_ContainsAny(_35812_k,jule::Str(".pP", 3));;
	};
	return _21d46d926_ContainsAny(_35812_k,jule::Str(".eE", 3));;
}



inline jule::Bool _21d820998_IsNum(jule::Str _36610_k) {
	if (_36610_k.empty()) {
		return false;;
	};
	jule::U8 _3719_b = _36610_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));;
}



inline jule::Bool _21d820ed7_IsIgnoreIdent(jule::Str _38118_ident) {
	return (_38118_ident == jule::Str("_", 1));;
}



inline jule::Bool _21d82127e_IsAnonIdent(jule::Str _38416_ident) {
	return (_38416_ident == jule::Str("<anonymous>", 11));;
}



inline jule::Bool _21d8217bd_IsSpace(jule::I32 _39712_r) {
	{
		auto &expr = _21d76cbd1_Spaces;
		auto it = expr.begin();
		_iter_begin_2037b645e:;
		if (it != expr.end()) {
			jule::I32 &_39812_cr = *it;
			{
				if ((_39712_r == _39812_cr)) {
					return true;;
				};
			}
			_iter_next_2037b645e:;
			++it;
			goto _iter_begin_2037b645e;
		}
		_iter_end_2037b645e:;
	};
	return false;;
}



inline jule::Bool _21d821c1e_IsLetter(jule::I32 _40713_r) {
	return _21d30b077_IsLetter(_40713_r);;
}



inline jule::Bool _21d82225d_IsDecimal(jule::U8 _42714_b) {
	return (('0' <= _42714_b) && (_42714_b <= '9'));;
}



inline jule::Bool _21d822505_IsBinary(jule::U8 _43013_b) {
	return ((_43013_b == '0') || (_43013_b == '1'));;
}



inline jule::Bool _21d82279c_IsOctal(jule::U8 _43312_b) {
	return (('0' <= _43312_b) && (_43312_b <= '7'));;
}



inline jule::Bool _21d822a44_IsHex(jule::U8 _43610_b) {
	{
		
		if ((('0' <= _43610_b) && (_43610_b <= '9'))) {
			_case_begin_2037bb222:;
			{
				return true;;
			}
		}
		else if ((('a' <= _43610_b) && (_43610_b <= 'f'))) {
			_case_begin_2037baa4b:;
			{
				return true;;
			}
		}
		else if ((('A' <= _43610_b) && (_43610_b <= 'F'))) {
			_case_begin_2037baab2:;
			{
				return true;;
			}
		}
		else {
			_case_begin_2037ba9d5:;
			{
				return false;;
			}
		}
		_match_end_2037ba919:;
	};
}



inline jule::Bool _21d822cdb_IsAssign(jule::U64 _45113_id) {
	return (((((((_45113_id == static_cast<jule::U64>(2LLU)) || (_45113_id == static_cast<jule::U64>(30LLU))) || (_45113_id == static_cast<jule::U64>(33LLU))) || (_45113_id == static_cast<jule::U64>(20LLU))) || (_45113_id == static_cast<jule::U64>(27LLU))) || (_45113_id == static_cast<jule::U64>(3LLU))) || (_45113_id == static_cast<jule::U64>(7LLU)));;
}



inline jule::Bool _21d823083_IsPostfixOp(jule::Str _46216_kind) {
	{
		auto &expr = _21d817c48_PostfixOps;
		auto it = expr.begin();
		_iter_begin_2037be577:;
		if (it != expr.end()) {
			jule::Str &_46312_op = *it;
			{
				if ((_46216_kind == _46312_op)) {
					return true;;
				};
			}
			_iter_next_2037be577:;
			++it;
			goto _iter_begin_2037be577;
		}
		_iter_end_2037be577:;
	};
	return false;;
}



inline jule::Bool _21d82332a_IsAssignOp(jule::Str _47215_kind) {
	if (_21d823083_IsPostfixOp(_47215_kind)) {
		return true;;
	};
	{
		auto &expr = _21d818045_AssignOps;
		auto it = expr.begin();
		_iter_begin_2037c0776:;
		if (it != expr.end()) {
			jule::Str &_47612_op = *it;
			{
				if ((_47215_kind == _47612_op)) {
					return true;;
				};
			}
			_iter_next_2037c0776:;
			++it;
			goto _iter_begin_2037c0776;
		}
		_iter_end_2037c0776:;
	};
	return false;;
}



inline jule::Ptr<_21d823acd_File> _21d82510c_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_21d823acd_File>(_21d823acd_File{._field_Path=_6315_path, });;
}



inline _21d4e511d_Log _21d8268a0_makeErr(jule::I64 _11112_row, jule::I64 _11122_col, jule::Ptr<_21d823acd_File>& _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _21d4e511d_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=_11133_f.get()._field_Path, ._field_Text=_21d4e555d_Logf(_11143_fmt,_11156_args), };;
}



inline jule::Bool _21d826c35_bytesHasPrefix(jule::Slice<jule::U8>& _12120_bytes, jule::Str _12135_prefix) {
	if ((_12120_bytes.len() < _12135_prefix.len())) {
		return false;;
	};
	{
		auto &expr = _12135_prefix;
		auto it = expr.begin();
		_iter_begin_2037ca63d:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12120_bytes[_1259_i] != _12135_prefix[_1259_i])) {
					return false;;
				};
			}
			_iter_next_2037ca63d:;
			++it;
			_1259_i++;
			goto _iter_begin_2037ca63d;
		}
		_iter_end_2037ca63d:;
	};
	return true;;
}



inline jule::Str _21d827076_floatFmtE(jule::Slice<jule::U8>& _13315_txt, jule::I64 _13332_i) {
	jule::Str __jule_func_result;
	(_13332_i)++;
	if ((_13332_i >= _13315_txt.len())) {
		return __jule_func_result;;
	};
	jule::U8 _13913_b = _13315_txt[_13332_i];;
	if ((_13913_b == '_')) {
		return __jule_func_result;;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= _13315_txt.len())) {
			return __jule_func_result;;
		};
		if ((_13315_txt[_13332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1539_first = _13332_i;;
	for (; (_13332_i < _13315_txt.len()); (_13332_i)++) {
		{
			_13913_b=_13315_txt[_13332_i];
			if (((_13913_b != '_') && (!(_21d82225d_IsDecimal(_13913_b))))) {
				goto _iter_end_2037cdad6;
			};
		}
	_iter_next_2037cdad6:;
	}
	_iter_end_2037cdad6:;;
	if ((_13332_i == _1539_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_13315_txt.slice(0LL,_13332_i));
	return __jule_func_result;;
}



inline jule::Str _21d82740b_floatFmtP(jule::Slice<jule::U8>& _16715_txt, jule::I64 _16728_i) {
	return _21d827076_floatFmtE(_16715_txt,_16728_i);;
}



inline jule::Str _21d82774c_floatFmtDotnp(jule::Slice<jule::U8>& _17119_txt, jule::I64 _17136_i) {
	if ((_17119_txt[_17136_i] != '.')) {
		return jule::Str();;
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < _17119_txt.len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = _17119_txt[_17136_i];;
			{
				
				if ((_17913_b == '_') || _21d82225d_IsDecimal(_17913_b)) {
					_case_begin_2037d1941:;
					{
						goto _iter_next_2037d0cd6;
					}
				}
				else if (_21d829001_isFloatFmtP(_17913_b,_17136_i)) {
					_case_begin_2037d19a7:;
					{
						return _21d82740b_floatFmtP(_17119_txt,_17136_i);;
					}
				}
				else {
					_case_begin_2037d18ca:;
					{
						goto _iter_end_2037d0cd6;
					}
				}
				_match_end_2037d1864:;
			};
		}
	_iter_next_2037d0cd6:;
	}
	_iter_end_2037d0cd6:;;
	return jule::Str();;
}



inline jule::Str _21d827a8d_floatFmtDotfp(jule::Slice<jule::U8>& _19219_txt, jule::I64 _19236_i) {
	_19236_i+=2LL;
	return _21d827076_floatFmtE(_19219_txt,_19236_i);;
}



inline jule::Str _21d827dce_floatFmtDotp(jule::Slice<jule::U8>& _19718_txt, jule::I64 _19735_i) {
	(_19735_i)++;
	return _21d827076_floatFmtE(_19718_txt,_19735_i);;
}



inline jule::Str _21d828330_floatNum(jule::Slice<jule::U8>& _20214_txt, jule::I64 _20231_i) {
	jule::Str __jule_func_result;
	(_20231_i)++;
	if ((_20231_i >= _20214_txt.len())) {
		__jule_func_result = static_cast<jule::Str>(_20214_txt);
		return __jule_func_result;;
	};
	if ((_20214_txt[_20231_i] == '_')) {
		(_20231_i)--;
		__jule_func_result = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
		return __jule_func_result;;
	};
	for (; (_20231_i < _20214_txt.len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = _20214_txt[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				__jule_func_result = _21d827076_floatFmtE(_20214_txt,_20231_i);
				return __jule_func_result;;
			};
			if (((_21213_b != '_') && (!(_21d82225d_IsDecimal(_21213_b))))) {
				goto _iter_end_2037d42c3;
			};
		}
	_iter_next_2037d42c3:;
	}
	_iter_end_2037d42c3:;;
	if ((_20231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
	return __jule_func_result;;
}



inline jule::Str _21d8285c7_commonNum(jule::Slice<jule::U8>& _22715_txt) {
	jule::Str __jule_func_result;
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22715_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22715_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_2037d823e:;
					{
						__jule_func_result = _21d828330_floatNum(_22715_txt,_22813_i);
						return __jule_func_result;;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_2037d82b6:;
					{
						goto _iter_next_2037d754b;
					}
				}
				else if (_21d828bb0_isFloatFmtE(_23113_b,_22813_i)) {
					_case_begin_2037d833d:;
					{
						__jule_func_result = _21d827076_floatFmtE(_22715_txt,_22813_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_21d82225d_IsDecimal(_23113_b)))) {
					_case_begin_2037d83b5:;
					{
						goto _iter_end_2037d754b;
					}
				}
				_match_end_2037d8162:;
			};
		}
	_iter_next_2037d754b:;
	}
	_iter_end_2037d754b:;;
	if ((_22813_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_22715_txt.slice(0LL,_22813_i));
	return __jule_func_result;;
}



inline jule::Str _21d82886e_binaryNum(jule::Slice<jule::U8>& _25015_txt) {
	jule::Str __jule_func_result;
	if ((!(_21d826c35_bytesHasPrefix(_25015_txt,jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if ((_25015_txt.len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25015_txt.len()); (_25913_i)++) {
		{
			if (((_25015_txt[_25913_i] != '_') && (!(_21d822505_IsBinary(_25015_txt[_25913_i]))))) {
				goto _iter_end_2037d9b47;
			};
		}
	_iter_next_2037d9b47:;
	}
	_iter_end_2037d9b47:;;
	if ((_25913_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_25015_txt.slice(0LL,_25913_i));
	return __jule_func_result;;
}



inline jule::Bool _21d828bb0_isFloatFmtE(jule::U8 _27216_b, jule::I64 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));;
}



inline jule::Bool _21d829001_isFloatFmtP(jule::U8 _27616_b, jule::I64 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));;
}



inline jule::Bool _21d829342_isFloatFmtDotnp(jule::Slice<jule::U8>& _28021_txt, jule::I64 _28038_i) {
	if ((_28021_txt[_28038_i] != '.')) {
		return false;;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < _28021_txt.len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = _28021_txt[_28038_i];;
			{
				
				if ((_28713_b == '_') || _21d82225d_IsDecimal(_28713_b)) {
					_case_begin_2037e0a71:;
					{
						goto _iter_next_2037de883;
					}
				}
				else if (_21d829001_isFloatFmtP(_28713_b,_28038_i)) {
					_case_begin_2037e0ad7:;
					{
						return true;;
					}
				}
				else {
					_case_begin_2037e0a0a:;
					{
						goto _iter_end_2037de883;
					}
				}
				_match_end_2037e0994:;
			};
		}
	_iter_next_2037de883:;
	}
	_iter_end_2037de883:;;
	return false;;
}



inline jule::Bool _21d829683_isFloatFmtDotp(jule::Slice<jule::U8>& _30120_txt, jule::I64 _30133_i) {
	{
		
		if ((_30120_txt.len() < 3LL)) {
			_case_begin_2037e2765:;
			{
				goto _case_begin_2037e208e;
			}
		}
		else if ((_30120_txt[_30133_i] != '.')) {
			_case_begin_2037e208e:;
			{
				goto _case_begin_2037e2105;
			}
		}
		else if (((_30120_txt[(_30133_i + 1LL)] != 'p') && (_30120_txt[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_2037e2105:;
			{
				return false;;
			}
		}
		else {
			_case_begin_2037e2028:;
			{
				return true;;
			}
		}
		_match_end_2037e1e5c:;
	};
}



inline jule::Bool _21d8299c4_isFloatFmtDotfp(jule::Slice<jule::U8>& _31421_txt, jule::I64 _31434_i) {
	{
		
		if ((_31421_txt.len() < 4LL)) {
			_case_begin_2037e4a64:;
			{
				goto _case_begin_2037e439e;
			}
		}
		else if ((_31421_txt[_31434_i] != '.')) {
			_case_begin_2037e439e:;
			{
				goto _case_begin_2037e4415;
			}
		}
		else if (((_31421_txt[(_31434_i + 1LL)] != 'f') && (_31421_txt[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_2037e4415:;
			{
				goto _case_begin_2037e447b;
			}
		}
		else if (((_31421_txt[(_31434_i + 2LL)] != 'p') && (_31421_txt[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_2037e447b:;
			{
				return false;;
			}
		}
		else {
			_case_begin_2037e3e3c:;
			{
				return true;;
			}
		}
		_match_end_2037e3d71:;
	};
}



inline jule::Str _21d829e25_octalNum(jule::Slice<jule::U8>& _32914_txt) {
	jule::Str __jule_func_result;
	if ((_32914_txt[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if ((_32914_txt.len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32914_txt[1LL] == 'o')) {
		if ((_32914_txt.len() < 3LL)) {
			return __jule_func_result;;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octalStart;;
	for (; (_34813_i < _32914_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32914_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _21d828330_floatNum(_32914_txt,_34813_i);
				return __jule_func_result;;
			};
			if (_21d828bb0_isFloatFmtE(_35013_b,_34813_i)) {
				__jule_func_result = _21d827076_floatFmtE(_32914_txt,_34813_i);
				return __jule_func_result;;
			};
			if (((_35013_b != '_') && (!(_21d82279c_IsOctal(_35013_b))))) {
				goto _iter_end_2037e8aac;
			};
		}
	_iter_next_2037e8aac:;
	}
	_iter_end_2037e8aac:;;
	if ((_34813_i == _33713_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_32914_txt.slice(0LL,_34813_i));
	return __jule_func_result;;
}



inline jule::Str _21d82a1bc_hexNum(jule::Slice<jule::U8>& _37112_txt) {
	jule::Str __jule_func_result;
	if ((_37112_txt.len() < 3LL)) {
		return __jule_func_result;;
	};
	if (((_37112_txt[0LL] != '0') || ((_37112_txt[1LL] != 'x') && (_37112_txt[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37112_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37112_txt[_38013_i];;
			{
				
				if (_21d829683_isFloatFmtDotp(_37112_txt,_38013_i)) {
					_case_begin_2037eeac4:;
					{
						__jule_func_result = _21d827dce_floatFmtDotp(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (_21d8299c4_isFloatFmtDotfp(_37112_txt,_38013_i)) {
					_case_begin_2037eeb4b:;
					{
						__jule_func_result = _21d827a8d_floatFmtDotfp(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (_21d829001_isFloatFmtP(_38313_b,_38013_i)) {
					_case_begin_2037eebc3:;
					{
						__jule_func_result = _21d82740b_floatFmtP(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (_21d829342_isFloatFmtDotnp(_37112_txt,_38013_i)) {
					_case_begin_2037eec4a:;
					{
						__jule_func_result = _21d82774c_floatFmtDotnp(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (((_38313_b != '_') && (!(_21d822a44_IsHex(_38313_b))))) {
					_case_begin_2037eecc2:;
					{
						goto _iter_end_2037edd15;
					}
				}
				_match_end_2037ee9d6:;
			};
		}
	_iter_next_2037edd15:;
	}
	_iter_end_2037edd15:;;
	if ((_38013_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_37112_txt.slice(0LL,_38013_i));
	return __jule_func_result;;
}



inline jule::Str _21d82a50d_hexEscape(jule::Slice<jule::U8>& _40415_txt, jule::I64 _40428_n) {
	jule::Str __jule_func_result;
	if ((_40415_txt.len() < _40428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_21d822a44_IsHex(_40415_txt[_41013_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_20380249a:;
	}
	_iter_end_20380249a:;;
	__jule_func_result=static_cast<jule::Str>(_40415_txt.slice(0LL,_40428_n));
	return __jule_func_result;;
}



inline jule::Str _21d82a7a5_bigUnicodePointEscape(jule::Slice<jule::U8>& _42227_txt) {
	return _21d82a50d_hexEscape(_42227_txt,10LL);;
}



inline jule::Str _21d82aa6e_littleUnicodePointEscape(jule::Slice<jule::U8>& _42730_txt) {
	return _21d82a50d_hexEscape(_42730_txt,6LL);;
}



inline jule::Str _21d82ac28_hexByteEscape(jule::Slice<jule::U8>& _43219_txt) {
	return _21d82a50d_hexEscape(_43219_txt,4LL);;
}



inline jule::Str _21d82aeae_byteEscape(jule::Slice<jule::U8>& _43716_txt) {
	jule::Str __jule_func_result;
	if ((_43716_txt.len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_21d82279c_IsOctal(_43716_txt[1LL]))) || (!(_21d82279c_IsOctal(_43716_txt[2LL])))) || (!(_21d82279c_IsOctal(_43716_txt[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_43716_txt.slice(0LL,4LL));
	return __jule_func_result;;
}



inline jule::Slice<_21d4e511d_Log> _21d8309a8_Lex(jule::Ptr<_21d823acd_File> _82612_f, jule::I64 _82622_mode) {
	if ((_82612_f == nullptr)) {
		return nullptr;;
	};
	_21d82b696_lex _83113_lex = _21d82b696_lex{._field_mode=_82622_mode, ._field_file=_82612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_21d82e237_newLine(&_83113_lex);
	_21d82c235_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;;
	};
	_82612_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;;
}



inline jule::I64 _220ad3c6a_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _220adb1e5_Len64(_6119_x)));;
}



inline jule::I64 _220ad4ba0_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_220ad583d_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _220ad5596_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_220ad4375__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _220ad583d_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_220ad493b__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _220adae4d_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _220adb1e5_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _220adbda5_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _220add538_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _220a0aca2_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _220a0b08d_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _220a0b335_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _220a0b654_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _220a0db40_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_20397c625:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_220ae2680_IsInf(_4714_f,0LL) || _220ae241b_IsNaN(_4714_f)) {
			_case_begin_20397c69c:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_20397c515:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _220ae27b2_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _220a0b335_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_220a0b654_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _220ae22d9_NaN(void) {
	return static_cast<jule::F64>(_220a0b654_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _220ae241b_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _220ae254d_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_220a0b654_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_220a0b654_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _220ae2680_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _220ae27b2_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_220ae3c9c_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _220ae3681_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_220ae241b_IsNaN(_1118_x) || _220ae2680_IsInf(_1118_x,1LL)) {
			_case_begin_2051d9644:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_2051d96bb:;
			{
				return static_cast<jule::F64>(_220ae22d9_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_2051d9743:;
			{
				return static_cast<jule::F64>(_220ae254d_Inf(-1LL));;
			}
		}
		_match_end_2051d9578:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I64 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _220a0db40_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _220ae3c9c_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_220a0b654_F64FromBits(static_cast<jule::U64>((_220a0b335_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _220ae7a4d_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _220ae3c9c_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_205254ba9:;
		}
		_iter_end_205254ba9:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _220ae7e8d_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I64 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _220a0db40_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_220ae3681_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _220579557_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_220571bc0_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _22093ac59_max(static_cast<jule::I64>((_7832_prec + 4LL)),24LL), 0),_7813_f,_7821_fmt,_7832_prec,_7843_bit_size));;
}



inline jule::Slice<jule::U8> _220571bc0_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_2206ed720_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_205460e70:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_220a0aca2_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_2206ed720_floatInfo>)((&(_22055b638_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_20546114b:;
			{
				_8313_bits=static_cast<jule::U64>(_220a0b335_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_2206ed720_floatInfo>)((&(_22055ba9a_f64info))));
			}
		}
		else {
			_case_begin_205460854:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_20545e325:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_20546478c:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_205466bce:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_205466d77:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_205465c77:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_205465bab:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_205465309:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_2054611b2:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_205464737:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _2207a2373_fmtB(_8220_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _220833558_fmtX(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));;
	};
	;
	_220975755_decimalSlice _13213_digs = _220975755_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_220b2101b_ryuFtoaShortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_20546a892:;
				{
					_8258_prec=static_cast<jule::I64>(_22093ac59_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_20546a919:;
				{
					_8258_prec=static_cast<jule::I64>(_22093ac59_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_20546a9a2:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_205469c26:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_20546c5ca:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_20546cb5d:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_20546ca5e:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_20546c92c:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_220b20a54_ryuFtoaFixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_220b20b86_ryuFtoaFixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _22059d4d2_bigFtoa(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));;
	};
	return _22061216c_fmtDigits(_8220_dst,_1359_shortest,_969_neg,_13213_digs,_8258_prec,_8243_fmt);;
}



inline jule::Slice<jule::U8> _22059d4d2_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _2206ed720_floatInfo& _18327_flt) {
	_220b2256c_decimal _18413_d = _220b2256c_decimal{};;
	_220b22759_assign(&_18413_d, _1835_mant);
	_220b2288b_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_220975755_decimalSlice _18713_digs = _220975755_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_2206cb09e_roundShortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_220975755_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_205472b1e:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_2054752c5:;
				{
					_18233_prec=static_cast<jule::I64>(_22093ac59_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_205475380:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_20547500b:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_205476c00:;
				{
					_220b22c32_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_205476c77:;
				{
					_220b22c32_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_205476cee:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_220b22c32_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_205476ace:;
		};
		_18713_digs=_220975755_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _22061216c_fmtDigits(_18216_dst,_1889_shortest,_18255_neg,_18713_digs,_18233_prec,_18244_fmt);;
}



inline jule::Slice<jule::U8> _22061216c_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _220975755_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_20547a440:;
			{
				return _2206ee743_fmtE(_21918_dst,_21947_neg,_2205_digs,_22029_prec,_22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_20547a4a6:;
			{
				return _22077eebb_fmtF(_21918_dst,_21947_neg,_2205_digs,_22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_20547a51c:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _2206ee743_fmtE(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _22077eebb_fmtF(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>(_22093ac59_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));;
			}
		}
		_match_end_20547a2ec:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _2206cb09e_roundShortest(_220b2256c_decimal& _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _2206ed720_floatInfo& _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		_25723_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25757_flt._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * (_25723_d._field_dp - _25723_d._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)))))) {
		return;;
	};
	_220b2256c_decimal _28713_upper = _220b2256c_decimal{};;
	_220b22759_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_220b2288b_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << _25757_flt._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_220b2256c_decimal _30613_lower = _220b2256c_decimal{};;
	_220b22759_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_220b2288b_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25723_d._field_dp);;
			if ((_33513_mi >= _25723_d._field_nd)) {
				goto _iter_end_20548810c;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25723_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_20548d277:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_20548d2ee:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_20548d376:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_20548d1ab:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_205491566:;
					{
						_220b22c32_round(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_2054915dd:;
					{
						_220b229bd_roundDown(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_205491665:;
					{
						_220b22b00_roundUp(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_20549149a:;
			};
		}
	_iter_next_20548810c:;
	}
	_iter_end_20548810c:;;
}



inline jule::Slice<jule::U8> _2206ee743_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _220975755_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _2208ec974_min(_39637_d._field_nd,static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_205494954:;
		}
		_iter_end_205494954:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_205498150:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_2054986e4:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_205498392:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_20549857e:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _22077eebb_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _220975755_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _2208ec974_min(_45137_d._field_nd,_45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_2054a2830:;
		}
		_iter_end_2054a2830:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_2054a4007:;
		}
		_iter_end_2054a4007:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _2207a2373_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _2206ed720_floatInfo& _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _220b2486b_fmtBits(_48413_dst,_48437_mant,10LL,false,true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>(_48463_flt._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _220b2486b_fmtBits(_48413_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)),10LL,(_48452_exp < 0LL),true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _220833558_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _2206ed720_floatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_2054a714d:;
	}
	_iter_end_2054a714d:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_2054aeac3:;
		}
		_iter_end_2054aeac3:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_2054b1454:;
		}
		_iter_end_2054b1454:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _22093b089_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_2054ad781:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_2054ad671:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_2054b3d3b:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_2054b4028:;
	};
	return _50613_dst;;
}



inline jule::I64 _2208ec974_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I64 _22093ac59_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _22093b089_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__220526889_ConvError _22098dcce_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	__jule_tuple_u64__jule_tuple__220526889_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (_5118_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_2054babcd:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_2054baaac:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_22093b089_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_2054bc9d2:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_22093b089_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_2054bc7e5:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_22093b089_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_2054bc85b:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_2054bc44e:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_2054bc383:;
					};
				};
			}
		}
		else {
			_case_begin_2054b9db9:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_2054b9d53:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_2054c26b8:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_2054c1cd3:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_2054c20ad:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_2054c1e37:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_2054c219b:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_2054c380c:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_2054c23dd:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5118_s;
		auto it = expr.begin();
		_iter_begin_2054c491d:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_2054c3a71:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _22093b089_lower(_10912_c)) && (_22093b089_lower(_10912_c) <= 'z'))) {
						_case_begin_2054c5c60:;
						{
							_11017_d=static_cast<jule::U8>(((_22093b089_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_2054c5886:;
						{
							goto _iter_next_2054c491d;
						}
					}
					else {
						_case_begin_2054c5820:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_2054c57a9:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_2054c491d:;
			++it;
			goto _iter_begin_2054c491d;
		}
		_iter_end_2054c491d:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _220702515_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I64 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__220526889_ConvError __jule_assign_result = _22098dcce_parseUint(_14618_s,_14630_base,_14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type134));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _22055d052_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type134));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I64 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__220526889_ConvError __jule_assign_result = _22098dcce_parseUint(_17217_s,_17225_base,_17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type134));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type134));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type134));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _2205b682a_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_220a0b654_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _579_clz = _220ad3c6a_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _220add538_Mul64(_4122_man,_220700887_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _220add538_Mul64(_4122_man,_220700887_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_220a0b654_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _2207de6bd_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_220a0b08d_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1329_clz = _220ad3c6a_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _220add538_Mul64(_11022_man,_220700887_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _220add538_Mul64(_11022_man,_220700887_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_220a0b08d_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _22070e588_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;;
			};
		}
	_iter_next_2054ec55b:;
	}
	_iter_end_2054ec55b:;;
	return _4613_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _22070e6ba_special(jule::Str _6816_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if (_6816_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_205501917:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_20550198e;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_20550198e:;
			{
				jule::I64 _8317_caseN = _22070e588_commonPrefixLenIgnoreCase(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_220ae254d_Inf(_7213_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_7313_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_205501a16:;
			{
				if ((_22070e588_commonPrefixLenIgnoreCase(_6816_s,jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_220ae22d9_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_20550184b:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _2207dd7aa_readFloat(jule::Str _10314_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_205507588:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_205507610:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_205507445:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < _10314_s.len()) && (_10314_s[__jule_func_result.__jule_result_arg5] == '0')) && (_22093b089_lower(_10314_s[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_11913_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < _10314_s.len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13313_c = _10314_s[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_20550d77b:;
					{
						goto _iter_next_20550cbcb;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_20550d803:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_20550cbcb;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_20550d87a:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_20550cbcb;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_11713_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_20550cbcb;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _22093b089_lower(_13313_c))) && (_22093b089_lower(_13313_c) <= 'f'))) {
					_case_begin_20550d902:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_22093b089_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_20550cbcb;
					}
				}
				_match_end_20550d69e:;
			};
			goto _iter_end_20550cbcb;
		}
	_iter_next_20550cbcb:;
	}
	_iter_end_20550cbcb:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && (_22093b089_lower(_10314_s[__jule_func_result.__jule_result_arg5]) == _11913_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_19617_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= _10314_s.len()) || (_10314_s[__jule_func_result.__jule_result_arg5] < '0')) || (_10314_s[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && ((('0' <= _10314_s[__jule_func_result.__jule_result_arg5]) && (_10314_s[__jule_func_result.__jule_result_arg5] <= '9')) || (_10314_s[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if ((_10314_s[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_205517cd5;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_205517cd5:;
		}
		_iter_end_205517cd5:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _220b1ecd9_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48116_mantissa >> _22055ba9a_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_205522c46:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_205522cbd:;
			{
				if ((_48135_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_220854403_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _220854403_f64pow10[_48135_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_205522d45:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_220854403_f64pow10[(-(_48135_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_205522b7a:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _220b1ee1b_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_51516_mantissa >> _22055b638_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_20552792c:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_2055279a4:;
			{
				if ((_51535_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_2208722cd_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _2208722cd_f32pow10[_51535_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_205527a2b:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_2208722cd_f32pow10[(-(_51535_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_205527861:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__220526889_ConvError _220b2004d_atofHex(jule::Str _55112_s, _2206ed720_floatInfo& _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	__jule_tuple_f64__jule_tuple__220526889_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << _55121_flt._field_expbits)) + _55121_flt._field_bias) - 2LL);;
	jule::I64 _5539_minExp = (_55121_flt._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>(_55121_flt._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> (_55121_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_20552c833:;
	}
	_iter_end_20552c833:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + _55121_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_20552e6d1:;
	}
	_iter_end_20552e6d1:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_2055301a4:;
	}
	_iter_end_2055301a4:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + _55121_flt._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> _55121_flt._field_mantbits) == 0LLU)) {
		_55160_exp=_55121_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55121_flt._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << _55121_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - _55121_flt._field_bias) & static_cast<jule::I64>(((1LL << _55121_flt._field_expbits) - 1LL)))) << _55121_flt._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << _55121_flt._field_mantbits) << _55121_flt._field_expbits);
	};
	if ((_55121_flt == _22055b638_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_220a0b08d_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits)))));
		__jule_func_result.__jule_result_arg1 = _59813_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_220a0b654_F64FromBits(_60513_bits));
	__jule_func_result.__jule_result_arg1 = _59813_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__220526889_ConvError _220b20290_atof32(jule::Str _61611_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__220526889_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _61814_val = 0;;
		jule::I64 _61819__n = 0;;
		jule::Bool _61823_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22070e6ba_special(_61611_s);
			_61814_val = __jule_assign_result.__jule_result_arg0;
			_61819__n = __jule_assign_result.__jule_result_arg1;
			_61823_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_61823_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			__jule_func_result.__jule_result_arg1 = _61819__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62410_mantissa = 0;;
	jule::I64 _62420_exp = 0;;
	jule::Bool _62425_neg = false;;
	jule::Bool _62430_trunc = false;;
	jule::Bool _62437_hex = false;;
	jule::I64 _62442__n = 0;;
	jule::Bool _62450_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2207dd7aa_readFloat(_61611_s);
		_62410_mantissa = __jule_assign_result.__jule_result_arg0;
		_62420_exp = __jule_assign_result.__jule_result_arg1;
		_62425_neg = __jule_assign_result.__jule_result_arg2;
		_62430_trunc = __jule_assign_result.__jule_result_arg3;
		_62437_hex = __jule_assign_result.__jule_result_arg4;
		_62442__n = __jule_assign_result.__jule_result_arg5;
		_62450_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62442__n;
	if ((!(_62450_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__220526889_ConvError __jule_assign_result = _220b2004d_atofHex(_61611_s.slice(0LL,__jule_func_result.__jule_result_arg1),_22055b638_f32info,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
			_63117_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62430_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _220b1ee1b_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62450_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _2207de6bd_eiselLemire32(_62410_mantissa,_62420_exp,_62425_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62450_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65321_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _2207de6bd_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
				_65321_fUp = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62450_ok && (__jule_func_result.__jule_result_arg0 == _65321_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_220b2256c_decimal _66213_d = _220b2256c_decimal{};;
	if ((!(_22054a418_set(&_66213_d, _61611_s.slice(0LL,__jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _66610_b = 0;;
	jule::Bool _66613_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _22054a54a_floatBits(&_66213_d, _22055b638_f32info);
		_66610_b = __jule_assign_result.__jule_result_arg0;
		_66613_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_220a0b08d_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__220526889_ConvError _220b203c2_atof64(jule::Str _67411_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__220526889_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _67614_val = 0;;
		jule::I64 _67619__n = 0;;
		jule::Bool _67623_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22070e6ba_special(_67411_s);
			_67614_val = __jule_assign_result.__jule_result_arg0;
			_67619__n = __jule_assign_result.__jule_result_arg1;
			_67623_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_67623_ok) {
			__jule_func_result.__jule_result_arg0 = _67614_val;
			__jule_func_result.__jule_result_arg1 = _67619__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68210_mantissa = 0;;
	jule::I64 _68220_exp = 0;;
	jule::Bool _68225_neg = false;;
	jule::Bool _68230_trunc = false;;
	jule::Bool _68237_hex = false;;
	jule::I64 _68242__n = 0;;
	jule::Bool _68250_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2207dd7aa_readFloat(_67411_s);
		_68210_mantissa = __jule_assign_result.__jule_result_arg0;
		_68220_exp = __jule_assign_result.__jule_result_arg1;
		_68225_neg = __jule_assign_result.__jule_result_arg2;
		_68230_trunc = __jule_assign_result.__jule_result_arg3;
		_68237_hex = __jule_assign_result.__jule_result_arg4;
		_68242__n = __jule_assign_result.__jule_result_arg5;
		_68250_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68242__n;
	if ((!(_68250_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68237_hex) {
		({
			__jule_tuple_f64__jule_tuple__220526889_ConvError __jule_assign_result = _220b2004d_atofHex(_67411_s.slice(0LL,__jule_func_result.__jule_result_arg1),_22055ba9a_f64info,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68230_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _220b1ecd9_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68250_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _2205b682a_eiselLemire64(_68210_mantissa,_68220_exp,_68225_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68250_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71021_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _2205b682a_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
				_71021_fUp = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68250_ok && (__jule_func_result.__jule_result_arg0 == _71021_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_220b2256c_decimal _71913_d = _220b2256c_decimal{};;
	if ((!(_22054a418_set(&_71913_d, _67411_s.slice(0LL,__jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72310_b = 0;;
	jule::Bool _72313_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _22054a54a_floatBits(&_71913_d, _22055ba9a_f64info);
		_72310_b = __jule_assign_result.__jule_result_arg0;
		_72313_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_220a0b654_F64FromBits(_72310_b));
	if (_72313_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__220526889_ConvError _220b20504_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__220526889_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f = 0;;
		jule::I64 _73317_n = 0;;
		jule::I64 _73320_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__220526889_ConvError __jule_assign_result = _220b20290_atof32(_73121_s);
			_73314_f = __jule_assign_result.__jule_result_arg0;
			_73317_n = __jule_assign_result.__jule_result_arg1;
			_73320_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73314_f));
		__jule_func_result.__jule_result_arg1 = _73317_n;
		__jule_func_result.__jule_result_arg2 = _73320_err;
		return __jule_func_result;;
	};
	jule::F64 _73710_f = 0;;
	jule::I64 _73713_n = 0;;
	jule::I64 _73716_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__220526889_ConvError __jule_assign_result = _220b203c2_atof64(_73121_s);
		_73710_f = __jule_assign_result.__jule_result_arg0;
		_73713_n = __jule_assign_result.__jule_result_arg1;
		_73716_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _73710_f;
	__jule_func_result.__jule_result_arg1 = _73713_n;
	__jule_func_result.__jule_result_arg2 = _73716_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _220b20636_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f = 0;;
	jule::I64 _76613_n = 0;;
	jule::I64 _76616_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__220526889_ConvError __jule_assign_result = _220b20504_parseFloatPrefix(_76515_s,_76523_bit_size);
		_76610_f = __jule_assign_result.__jule_result_arg0;
		_76613_n = __jule_assign_result.__jule_result_arg1;
		_76616_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type134));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_76616_err, &__jule_any_type134));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _76610_f);;
}



inline void _220b20a54_ryuFtoaFixed32(_220975755_decimalSlice& _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			_4924_d._field_nd = ___jule_assign_arg;
			_4924_d._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _220adae4d_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_220b2114d_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I64 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _220b21868_mult64bitPow10(_4945_mant,_6213_e2,_749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _220b21acc_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_220b20dd9_formatDecimal(_4924_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_roundUp,_4966_prec);
	_4924_d._field_dp-=_749_q;
}



inline void _220b20b86_ryuFtoaFixed64(_220975755_decimalSlice& _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			_12124_d._field_nd = ___jule_assign_arg;
			_12124_d._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _220adb1e5_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_220b2114d_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I64 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _220b2199a_mult128bitPow10(_12145_mant,_13113_e2,_1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _220b21acc_divisibleByPow5(_12145_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_220b20dd9_formatDecimal(_12124_d,_15314_di,(!(_15329_d0)),_17113_roundUp,_12166_prec);
	_12124_d._field_dp-=_1469_q;
}



inline void _220b20dd9_formatDecimal(_220975755_decimalSlice& _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _2208eee1b_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_2055661b8:;
	}
	_iter_end_2055661b8:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	_20023_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_205569b6c:;
	}
	_iter_end_205569b6c:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20023_d._field_d[(_20023_d._field_nd - 1LL)] == '0')) {
		{
			(_20023_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_205570997:;
	}
	_iter_end_205570997:;;
	_20023_d._field_dp=static_cast<jule::I64>((_20023_d._field_nd + _20213_trimmed));
}



inline void _220b2101b_ryuFtoaShortest(_220975755_decimalSlice& _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _2206ed720_floatInfo& _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			_26125_d._field_nd = ___jule_assign_arg;
			_26125_d._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_220ad583d_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_220b21604_ryuDigits(_26125_d,_26146_mant,_26146_mant,_26146_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I64 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _220b213b2_computeBounds(_26146_mant,_26157_exp,_26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_220b21604_ryuDigits(_26125_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_220b2114d_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26168_flt == _22055b638_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _220b21868_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _220b21868_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _220b21868_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _220b2199a_mult128bitPow10(_27310_ml,_27326_e2,_2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _220b2199a_mult128bitPow10(_27314_mc,_27326_e2,_2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _220b2199a_mult128bitPow10(_27318_mu,_27326_e2,_2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_220b21acc_divisibleByPow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_220b21acc_divisibleByPow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_220b21acc_divisibleByPow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_220b21604_ryuDigits(_26125_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26125_d._field_dp-=_2799_q;
}



inline jule::I64 _220b2114d_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _220b21280_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _220b213b2_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _2206ed720_floatInfo& _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << _3966_flt._field_mantbits)) || (_39529_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _220b21604_ryuDigits(_220975755_decimalSlice& _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _220b21c0e_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _220b21c0e_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _220b21c0e_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_220b21736_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_220b21736_ryuDigits32(_40919_d,_41014_lhi,_41110_chi,_41210_uhi,_40978_c0,_40992_cup,8LL);
		_40919_d._field_dp+=9LL;
	} else {
		_40919_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40919_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_20559090c:;
		}
		_iter_end_20559090c:;;
		_40919_d._field_d=_40919_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40919_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_220b21736_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,static_cast<jule::I64>((_40919_d._field_nd + 8LL)));
	};
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[(_40919_d._field_nd - 1LL)] == '0'))) {
		{
			(_40919_d._field_nd)--;
		}
	_iter_next_205590e90:;
	}
	_iter_end_205590e90:;;
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[0LL] == '0'))) {
		{
			(_40919_d._field_nd)--;
			(_40919_d._field_dp)--;
			_40919_d._field_d=_40919_d._field_d.slice(1LL);
		}
	_iter_next_205590610:;
	}
	_iter_end_205590610:;;
}



inline void _220b21736_ryuDigits32(_220975755_decimalSlice& _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45421_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_2055965c2;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_2055965c2:;
	}
	_iter_end_2055965c2:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45421_d._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			_45421_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45421_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_20559d09b:;
	}
	_iter_end_20559d09b:;;
	if ((_51013_n == _45421_d._field_nd)) {
		_45421_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45421_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45421_d._field_dp=static_cast<jule::I64>((_45421_d._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _220b21868_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _220700887_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _220add538_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)),_54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_220b21280_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _220b2199a_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _220700887_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_220b21280_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _220add538_Mul64(_56220_m,_57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _220add538_Mul64(_56220_m,_57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _220adbda5_Add64(_57910_l1,_58018_h0,0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _220b21acc_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_2055ac1dc:;
	}
	_iter_end_2055ac1dc:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _220b21c0e_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _220b230c8_trim(_220b2256c_decimal& _45314_a) {
	while (((_45314_a._field_nd > 0LL) && (_45314_a._field_d[(_45314_a._field_nd - 1LL)] == '0'))) {
		{
			(_45314_a._field_nd)--;
		}
	_iter_next_2055b07a6:;
	}
	_iter_end_2055b07a6:;;
	if ((_45314_a._field_nd == 0LL)) {
		_45314_a._field_dp=0LL;
	};
}



inline void _220b2320a_rightShift(_220b2256c_decimal& _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= _46320_a._field_nd)) {
				if ((_46813_n == 0LLU)) {
					_46320_a._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_2055b40d4:;
				}
				_iter_end_2055b40d4:;;
				goto _iter_end_2055b2c2b;
			};
			jule::U64 _48213_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_2055b2c2b:;
	}
	_iter_end_2055b2c2b:;;
	_46320_a._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < _46320_a._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_2055b68cd:;
	}
	_iter_end_2055b68cd:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				_46320_a._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_2055b83a2:;
	}
	_iter_end_2055b83a2:;;
	_46320_a._field_nd=_46513_w;
	_220b230c8_trim(_46320_a);
}



inline jule::Bool _220b2333c_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);;
			};
		}
	_iter_next_2055bb240:;
	}
	_iter_end_2055bb240:;;
	return false;;
}



inline void _220b2346e_leftShift(_220b2256c_decimal& _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _2209de34b_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_220b2333c_prefixIsLessThan(_53119_a._field_d,_53119_a._field_nd,_2209de34b_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = _53119_a._field_nd;;
	jule::I64 _53813_w = (_53119_a._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>(_53119_a._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_2055be7e8:;
	}
	_iter_end_2055be7e8:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_2055c2389:;
	}
	_iter_end_2055c2389:;;
	_53119_a._field_nd+=_53213_delta;
	if ((_53119_a._field_nd >= 800LL)) {
		_53119_a._field_nd=800LL;
	};
	_53119_a._field_dp+=_53213_delta;
	_220b230c8_trim(_53119_a);
}



inline jule::Bool _220b235a1_shouldRoundUp(_220b2256c_decimal& _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= _57819_a._field_nd))) {
		return false;;
	};
	if (((_57819_a._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == _57819_a._field_nd))) {
		if (_57819_a._field_trunc) {
			return true;;
		};
		return ((_57831_nd > 0LL) && (((_57819_a._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return (_57819_a._field_d[_57831_nd] >= '5');;
}



inline jule::Str _220b24261_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _220b24607_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _220b2486b_fmtBits(nullptr,_6012_i,_6020_base,false,false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _220b24393_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _220b24607_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _220b2486b_fmtBits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)),_7119_base,(_7111_i < 0LL),false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _220b244c5_Itoa(jule::I64 _809_i) {
	return _220b24393_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)),10LL);;
}



inline jule::Str _220b24607_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _220b24739_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _220b2486b_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_205615542:;
		}
		_iter_end_205615542:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_220b24739_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_220ad4ba0_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_20561dd20:;
		}
		_iter_end_20561dd20:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_205621938:;
		}
		_iter_end_205621938:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _220177bc2_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_20563aca4:;
			{
				return _2200e0e9d_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_20563ad1a:;
			{
				return _220142340_SysUint;;
			}
		}
		else {
			_case_begin_20563b1a0:;
			{
				return _4515_kind;;
			}
		}
		_match_end_20563b656:;
	};
}



inline jule::I64 _220186b48_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_20563c668:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_20563c6ce:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_20563c206:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_20563c26c:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_20563c2d3:;
			{
				return _2200de62d_BitSize;;
			}
		}
		else {
			_case_begin_20563bc2d:;
			{
				return -1LL;;
			}
		}
		_match_end_20563c15c:;
	};
}



inline jule::Str _22019d236_IntFromBits(jule::I64 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_20563e604:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_20563e66a:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_20563e417:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_20563e47d:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_20563c8aa:;
			{
				return jule::Str();;
			}
		}
		_match_end_20563e14d:;
	};
}



inline jule::Str _22018dca4_UintFromBits(jule::I64 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_205640a78:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_205640ade:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_20564087a:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_2056408e1:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_2056403e6:;
			{
				return jule::Str();;
			}
		}
		_match_end_2056402b4:;
	};
}



inline jule::Str _2201ce80b_FloatFromBits(jule::I64 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_205641eec:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_205642063:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_20564186a:;
			{
				return jule::Str();;
			}
		}
		_match_end_205641738:;
	};
}



inline jule::Bool _2203d2091_CheckBitFloat(jule::Str _15018_val, jule::I64 _15028_bit) {
	({
		auto except = _220b20636_ParseFloat(_15018_val,_15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _2203db8a3_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_205647046:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_205646199:;
			{
				return 64LLU;;
			}
		}
		_match_end_205646100:;
	};
}



inline jule::I64 _220451ad3_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_205647e26:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_205647e8c:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_205648003:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_205647651:;
			{
				return 64LLU;;
			}
		}
		_match_end_205647585:;
	};
}



inline jule::I64 _2204d872a_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_205649d3a:;
			{
				return 8LLU;;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_205649da1:;
			{
				return 16LLU;;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_205649e17:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_205649279:;
			{
				return 64LLU;;
			}
		}
		_match_end_205648d8e:;
	};
}



inline void _2204e1b84_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _21d506184_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_20564aea1:;
				{
					_2200de62d_BitSize=64LLU;
					_2200e0e9d_SysInt=jule::Str("i64", 3);
					_220142340_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_20564b028:;
				{
					_2200de62d_BitSize=32LLU;
					_2200e0e9d_SysInt=jule::Str("i32", 3);
					_220142340_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_20564ade6:;
		};
	};
}



inline void _2204ec288_init(void) {
	_2204e1b84_UpdateTarget();
}



inline jule::F64 _220b2499d_Min(jule::Str _6112_k) {
	_6112_k=_220177bc2_RealKindOf(_6112_k);
	{
		auto &_match_expr{ _6112_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_20564d844:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_20564d8aa:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_20564d35a:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_20564d3d2:;
			{
				return jule::MIN_I64;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_20564d459:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_20564d4d1:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_20564b259:;
			{
				return 0LL;;
			}
		}
		_match_end_20564b424:;
	};
}



inline jule::F64 _220b24ad0_Max(jule::Str _8312_k) {
	_8312_k=_220177bc2_RealKindOf(_8312_k);
	{
		auto &_match_expr{ _8312_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_20564dd0b:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_20564ee0b:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_20564ee72:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_20564eed8:;
			{
				return jule::MAX_I64;;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_205650060:;
			{
				return 255LL;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_2056502c4:;
			{
				return 65535LL;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_20565033a:;
			{
				return 4294967295LL;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_2056503b2:;
			{
				return jule::MAX_U64;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_205650439:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_205650648:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_20564ea32:;
			{
				return 0LL;;
			}
		}
		_match_end_20564e9cc:;
	};
}



inline jule::Bool _2204d8b59_IsI8Compatible(jule::Str _623_k) {
	return (_623_k == jule::Str("i8", 2));;
}



inline jule::Bool _220b24ddd_IsI16Compatible(jule::Str _1124_k) {
	return ((_1124_k == jule::Str("i8", 2)) || (_1124_k == jule::Str("i16", 3)));;
}



inline jule::Bool _220b25020_IsI32Compatible(jule::Str _1724_k) {
	return ((((_1724_k == jule::Str("i8", 2)) || (_1724_k == jule::Str("i16", 3))) || (_1724_k == jule::Str("i32", 3))) || (_1724_k == jule::Str("u8", 2)));;
}



inline jule::Bool _220b25152_IsI64Compatible(jule::Str _2524_k) {
	return ((((_2524_k == jule::Str("i8", 2)) || (_2524_k == jule::Str("i16", 3))) || (_2524_k == jule::Str("i32", 3))) || (_2524_k == jule::Str("i64", 3)));;
}



inline jule::Bool _220b25284_IsU8Compatible(jule::Str _3323_k) {
	return (_3323_k == jule::Str("u8", 2));;
}



inline jule::Bool _220b253b6_IsU16Compatible(jule::Str _3824_k) {
	return ((_3824_k == jule::Str("u8", 2)) || (_3824_k == jule::Str("u16", 3)));;
}



inline jule::Bool _220b254e8_IsU32Compatible(jule::Str _4324_k) {
	return (((_4324_k == jule::Str("u8", 2)) || (_4324_k == jule::Str("u16", 3))) || (_4324_k == jule::Str("u32", 3)));;
}



inline jule::Bool _220b2573a_IsU64Compatible(jule::Str _5024_k) {
	return ((((_5024_k == jule::Str("u8", 2)) || (_5024_k == jule::Str("u16", 3))) || (_5024_k == jule::Str("u32", 3))) || (_5024_k == jule::Str("u64", 3)));;
}



inline jule::Bool _220b2586c_IsF32Compatible(jule::Str _5824_k) {
	return (_5824_k == jule::Str("f32", 3));;
}



inline jule::Bool _220b2599e_IsF64Compatible(jule::Str _6324_k) {
	return (_6324_k == jule::Str("f64", 3));;
}



inline jule::Bool _220b25ad1_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_205658387:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_205658b6d:;
			{
				return (_7036_k2 == jule::Str("int", 3));;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_205658bd4:;
			{
				return (_7036_k2 == jule::Str("uintptr", 7));;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_205658662:;
			{
				return (_7036_k2 == jule::Str("uint", 4));;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_2056586c8:;
			{
				return _2204d8b59_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_20565873e:;
			{
				return _220b24ddd_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_2056587a5:;
			{
				return _220b25020_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_205658c7d:;
			{
				return _220b25152_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_205658ce4:;
			{
				return _220b25284_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_205658d5a:;
			{
				return _220b253b6_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_205658dc1:;
			{
				return _220b254e8_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_205658e37:;
			{
				return _220b2573a_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_205658e9d:;
			{
				return _220b2586c_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_205659025:;
			{
				return _220b2599e_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_20565909c:;
			{
				return (_7036_k2 == jule::Str("bool", 4));;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_205659124:;
			{
				return (_7036_k2 == jule::Str("str", 3));;
			}
		}
		else {
			_case_begin_205658552:;
			{
				return false;;
			}
		}
		_match_end_205658420:;
	};
}



inline jule::Bool _220b25c13_IsI16Greater(jule::Str _11021_k) {
	return (_11021_k == jule::Str("i8", 2));;
}



inline jule::Bool _220b25d45_IsI32Greater(jule::Str _11521_k) {
	return ((_11521_k == jule::Str("i8", 2)) || (_11521_k == jule::Str("i16", 3)));;
}



inline jule::Bool _220b25e77_IsI64Greater(jule::Str _12021_k) {
	return (((_12021_k == jule::Str("i8", 2)) || (_12021_k == jule::Str("i16", 3))) || (_12021_k == jule::Str("i32", 3)));;
}



inline jule::Bool _220b260a9_IsU16Greater(jule::Str _12721_k) {
	return (_12721_k == jule::Str("u8", 2));;
}



inline jule::Bool _220b2641c_IsU32Greater(jule::Str _13221_k) {
	return ((_13221_k == jule::Str("u8", 2)) || (_13221_k == jule::Str("u16", 3)));;
}



inline jule::Bool _220b2654e_IsU64Greater(jule::Str _13821_k) {
	return (((_13821_k == jule::Str("u8", 2)) || (_13821_k == jule::Str("u16", 3))) || (_13821_k == jule::Str("u32", 3)));;
}



inline jule::Bool _220b26681_IsF32Greater(jule::Str _14517_k) {
	return (_14517_k != jule::Str("f64", 3));;
}



inline jule::Bool _220b267b3_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _220b268e5_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_2056596da:;
			{
				return _220b26d35_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_205661c42:;
			{
				return _220b26e67_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_205661ca8:;
			{
				return _220b26e67_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_205661d1e:;
			{
				return _220b25c13_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_205661967:;
			{
				return _220b25d45_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_2056619cd:;
			{
				return _220b25e77_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_205661a44:;
			{
				return _220b260a9_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_205661aaa:;
			{
				return _220b2641c_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_205662050:;
			{
				return _220b2654e_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_2056620b6:;
			{
				return _220b26681_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_20566212c:;
			{
				return _220b267b3_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_2056621a4:;
			{
				return true;;
			}
		}
		else {
			_case_begin_205661802:;
			{
				return false;;
			}
		}
		_match_end_205661758:;
	};
}



inline jule::Bool _220b26d35_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == jule::Str("i8", 2)) || (_2717_k == jule::Str("i16", 3))) || (_2717_k == jule::Str("i32", 3))) || (_2717_k == jule::Str("i64", 3))) || (_2717_k == jule::Str("int", 3)));;
}



inline jule::Bool _220b26e67_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == jule::Str("u8", 2)) || (_3619_k == jule::Str("u16", 3))) || (_3619_k == jule::Str("u32", 3))) || (_3619_k == jule::Str("u64", 3))) || (_3619_k == jule::Str("uint", 4))) || (_3619_k == jule::Str("uintptr", 7)));;
}



inline jule::Bool _220b27099_IsInt(jule::Str _4610_k) {
	return (_220b26d35_IsSigInt(_4610_k) || _220b26e67_IsUnsigInt(_4610_k));;
}



inline jule::Bool _220b271cb_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == jule::Str("f32", 3)) || (_5112_k == jule::Str("f64", 3)));;
}



inline jule::Bool _220b2730d_IsNum(jule::Str _5610_k) {
	return (_220b27099_IsInt(_5610_k) || _220b271cb_IsFloat(_5610_k));;
}



inline jule::Bool _220b27440_IsSigNum(jule::Str _6113_k) {
	return (_220b26d35_IsSigInt(_6113_k) || _220b271cb_IsFloat(_6113_k));;
}



inline void _220b2aa5e_lshiftUnsig(_220074816_Const& _59021_c, _220074816_Const& _59032_x) {
	jule::U64 _5919_l = _220b281aa_AsU64(&_59021_c);;
	jule::U64 _5929_r = _220b281aa_AsU64(&_59032_x);;
	_220b28551_SetU64(&_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _220b2ab91_rshiftUnsig(_220074816_Const& _59621_c, _220074816_Const& _59632_x) {
	jule::U64 _5979_l = _220b281aa_AsU64(&_59621_c);;
	jule::U64 _5989_r = _220b281aa_AsU64(&_59632_x);;
	_220b28551_SetU64(&_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _220ba09b3_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _220ba0b39_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_220bb8525_runeFromEsqSeq(_1811_bytes,_2517_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d439381_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _220bb7b73_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _220bb7e70_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_220bb8866_strEsqSeq(_4210_bytes,_4813_i));
			} else {
				jule::I32 _5418_r = 0;;
				jule::I64 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d439381_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_21d43a6e5_AppendRune(_4713_s,_5418_r);
			};
		}
	_iter_next_2056cd808:;
	}
	_iter_end_2056cd808:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _220bb8217_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_2056d2cc4:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_2056d2d3a:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_2056d2da1:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_2056d2e17:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_2056d2e8e:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_2056d3016:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_2056d308d:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_2056d3115:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_2056d318c:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_2056d3214:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_2056d2ba3:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _220bb8525_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64& _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _220bb8217_tryBtoaCommonEsq(_9219_bytes.slice(_9239_i));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	(_9239_i)++;
	if (_9313_ok) {
		(_9239_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[_9239_i] };
		
		if (_match_expr == 'u') {
			_case_begin_2056d8d85:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _220702515_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				_9239_i+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_2056d8725:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _220702515_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				_9239_i+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_2056d878b:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice((_9239_i + 1LL),(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _220702515_ParseUint(static_cast<jule::Str>(_11313_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_2056d702b:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice(_9239_i,(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _220702515_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_2056d7416:;
	};
}



inline jule::Slice<jule::U8> _220bb8866_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64& _12434_i) {
	jule::I32 _1259_r = _220bb8525_runeFromEsqSeq(_12414_bytes,_12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));;
}



inline jule::I64 _220cb4984_findFormatPrefix(jule::Slice<jule::U8>& _1022_bytes, jule::I64& _1038_start) {
	jule::I64 _1113_i = _1038_start;;
	while ((_1113_i < _1022_bytes.len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I64 _1317_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d439381_DecodeRune(_1022_bytes.slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_20571d1e9:;
	}
	_iter_end_20571d1e9:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _220cba57d_getFormatRange(jule::I64& _2724_i, jule::Slice<jule::U8>& _2737_bytes) {
	jule::I64 _289_start = _2724_i;;
	jule::I64 _2913_braces = 0LL;;
	while ((_2724_i < _2737_bytes.len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I64 _3117_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d439381_DecodeRune(_2737_bytes.slice(_2724_i));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			_2724_i+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_205720c9b:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_205720d12:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return _2737_bytes.slice(_289_start,_2724_i);;
						};
					}
				}
				_match_end_20572098d:;
			};
		}
	_iter_next_205720064:;
	}
	_iter_end_205720064:;;
	return nullptr;;
}



inline void _220cba836_FmtByDefault(jule::Str& _4722_buf, jule::Any& _4733_arg) {
	if ((_4733_arg == nullptr)) {
		_4722_buf+=jule::Str("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ _4733_arg };
		
		if (_match_expr.type == &__jule_any_type135) {
			_case_begin_205721c8b:;
			{
				_4722_buf+=_220579557_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>(_4733_arg.cast<jule::F32>(&__jule_any_type135))),'g',-1LL,32LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_205722a28:;
			{
				_4722_buf+=_220579557_FmtFloat(static_cast<jule::F64>(_4733_arg.cast<jule::F64>(&__jule_any_type7)),'g',-1LL,64LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_205722bd2:;
			{
				_4722_buf+=_220b24393_FmtInt(static_cast<jule::I64>(_4733_arg.cast<jule::I8>(&__jule_any_type136)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_205721d24:;
			{
				_4722_buf+=_220b24393_FmtInt(static_cast<jule::I64>(_4733_arg.cast<jule::I16>(&__jule_any_type137)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_20572264e:;
			{
				_4722_buf+=_220b24393_FmtInt(static_cast<jule::I64>(_4733_arg.cast<jule::I32>(&__jule_any_type2)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_2057226b5:;
			{
				_4722_buf+=_220b24393_FmtInt(static_cast<jule::I64>(_4733_arg.cast<jule::I64>(&__jule_any_type3)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_205722c59:;
			{
				_4722_buf+=_220b24261_FmtUint(static_cast<jule::U64>(_4733_arg.cast<jule::U8>(&__jule_any_type133)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_205722cc0:;
			{
				_4722_buf+=_220b24261_FmtUint(static_cast<jule::U64>(_4733_arg.cast<jule::U16>(&__jule_any_type138)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_205722d36:;
			{
				_4722_buf+=_220b24261_FmtUint(static_cast<jule::U64>(_4733_arg.cast<jule::U32>(&__jule_any_type139)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_205722d9c:;
			{
				_4722_buf+=_220b24261_FmtUint(static_cast<jule::U64>(_4733_arg.cast<jule::U64>(&__jule_any_type4)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_205722e13:;
			{
				_4722_buf+=_4733_arg.cast<jule::Str>(&__jule_any_type6);
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_205722e79:;
			{
				if (_4733_arg.cast<jule::Bool>(&__jule_any_type5)) {
					_4722_buf+=jule::Str("true", 4);
				} else {
					_4722_buf+=jule::Str("false", 5);
				};
			}
		}
		else {
			_case_begin_2057224ea:;
			{
				_4722_buf+=jule::to_str(_4733_arg);
			}
		}
		_match_end_205721285:;
	};
}



inline void _220cbac10_applyFmtByDefault(jule::Str& _8627_buf, jule::I64& _8642_j, jule::Slice<jule::Any>& _8651_args) {
	jule::Any _879_arg = _8651_args[_8642_j];;
	(_8642_j)++;
	_220cba836_FmtByDefault(_8627_buf,_879_arg);
}



inline void _220cbb10b_applyFmt(jule::Slice<jule::U8>& _9418_fmt, jule::Str& _9436_buf, jule::I64& _9451_j, jule::Slice<jule::Any>& _9460_args) {
	if ((_9418_fmt.len() == 2LL)) {
		_220cbac10_applyFmtByDefault(_9436_buf,_9451_j,_9460_args);
		return;;
	};
	if ((((((_9418_fmt.len() == 4LL) && (_9418_fmt[0LL] == '{')) && (_9418_fmt[1LL] == '{')) && (_9418_fmt[2LL] == '}')) && (_9418_fmt[3LL] == '}'))) {
		_9436_buf+=jule::Str("{}", 2);
		return;;
	};
	_21d4629e7_PushToStrBuffer(_9436_buf,_9418_fmt);
}



inline jule::Str _220cbb419_Format(jule::Str& _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return _11312_fmt;;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _21d45c409_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, _11312_fmt.len());;
	jule::I64 _11913_j = 0LL;;
	jule::I64 _12013_last = 0LL;;
	jule::I64 _12113_i = _220cb4984_findFormatPrefix(_11713_fmtBytes,_12013_last);;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I64>(_220cb4984_findFormatPrefix(_11713_fmtBytes,_12113_i))) {
		{
			_21d4629e7_PushToStrBuffer(_11813_buf,_11713_fmtBytes.slice(_12013_last,_12113_i));
			jule::Slice<jule::U8> _12417_format = _220cba57d_getFormatRange(_12113_i,_11713_fmtBytes);;
			if ((_12417_format == nullptr)) {
				goto _iter_next_20572e5c3;
			};
			_220cbb10b_applyFmt(_12417_format,_11813_buf,_11913_j,_11322_args);
			if ((_11913_j >= _11322_args.len())) {
				_21d4629e7_PushToStrBuffer(_11813_buf,_11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I64>(_11713_fmtBytes.len());
				goto _iter_end_20572e5c3;
			};
			_12013_last=_12113_i;
		}
	_iter_next_20572e5c3:;
	}
	_iter_end_20572e5c3:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_21d4629e7_PushToStrBuffer(_11813_buf,_11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _220cbbc33_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _220cbb419_Format(_3011_fmt,_3021_args);;
}



inline jule::Bool _220b3269d_parameterUsesGenerics(jule::Ptr<_220b31823_ParamIns>& _37431_p, jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>>& _37446_generics) {
	if (_22001a45a_IsSelf(_37431_p.get()._field_Decl.ptr())) {
		return false;;
	};
	return _220c279c4_kindUsesGenerics(_37431_p.get()._field_Kind,_37446_generics);;
}



inline jule::Ptr<_220c1033b_TypeSymbol> _220b33490_buildType(jule::Ptr<_21eea19a7_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_220c1033b_TypeSymbol>(_220c1033b_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_220bd1054_Value> _220b335c2_buildExpr(jule::Ptr<_21eea5ec8_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_220bd1054_Value>(_220bd1054_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_220c0a26a_TypeAlias> _220b33704_buildTypeAlias(jule::Ptr<_21eebcad3_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_220c0a26a_TypeAlias>(_220c0a26a_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_220b33490_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_21ee92206_Field> _220b33836_buildField(jule::Ptr<_21eec1279_FieldDecl> _12319_decl) {
	return jule::new_ptr<_21ee92206_Field>(_21ee92206_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_220b33490_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_21ee92206_Field>> _220b33968_buildFields(jule::Slice<jule::Ptr<_21eec1279_FieldDecl>>& _13421_decls) {
	jule::Slice<jule::Ptr<_21ee92206_Field>> _13513_fields = jule::Slice<jule::Ptr<_21ee92206_Field>>::alloc(0LL, _13421_decls.len());;
	{
		auto &expr = _13421_decls;
		auto it = expr.begin();
		_iter_begin_205981858:;
		if (it != expr.end()) {
			jule::Ptr<_21eec1279_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_220b33836_buildField(_13617_decl));;
			}
			_iter_next_205981858:;
			++it;
			goto _iter_begin_205981858;
		}
		_iter_end_205981858:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_21eec3006_Struct> _220b33a9a_buildStruct(jule::Ptr<_21eec1a2c_StructDecl> _14220_decl) {
	return jule::new_ptr<_21eec3006_Struct>(_21eec3006_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_220b33968_buildFields(_14220_decl.get()._field_Fields), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_220b31449_Param> _220b33bcc_buildParam(jule::Ptr<_21eeb6e73_ParamDecl> _15419_decl) {
	return jule::new_ptr<_220b31449_Param>(_220b31449_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_220b33490_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_220b31449_Param>> _220b33d0e_buildParams(jule::Slice<jule::Ptr<_21eeb6e73_ParamDecl>>& _16521_decls) {
	jule::Slice<jule::Ptr<_220b31449_Param>> _16613_params = jule::Slice<jule::Ptr<_220b31449_Param>>::alloc(0LL, _16521_decls.len());;
	{
		auto &expr = _16521_decls;
		auto it = expr.begin();
		_iter_begin_20598454d:;
		if (it != expr.end()) {
			jule::Ptr<_21eeb6e73_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_220b33bcc_buildParam(_16717_decl));;
			}
			_iter_next_20598454d:;
			++it;
			goto _iter_begin_20598454d;
		}
		_iter_end_20598454d:;
	};
	return _16613_params;;
}



inline jule::Ptr<_220b3125c_RetType> _220b33e41_buildRetType(jule::Ptr<_21eea4aba_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_220b3125c_RetType>(_220b3125c_RetType{._field_Kind=_220b33490_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_220b31636_Fn> _220b34073_buildFn(jule::Ptr<_21eeb8293_FnDecl> _18316_decl) {
	return jule::new_ptr<_220b31636_Fn>(_220b31636_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_220b33e41_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_220b33d0e_buildParams(_18316_decl.get()._field_Params), });;
}



inline jule::Slice<jule::Ptr<_220b31636_Fn>> _220b341a5_buildMethods(jule::Slice<jule::Ptr<_21eeb8293_FnDecl>>& _20122_decls) {
	jule::Slice<jule::Ptr<_220b31636_Fn>> _20213_methods = jule::Slice<jule::Ptr<_220b31636_Fn>>::alloc(0LL, _20122_decls.len());;
	{
		auto &expr = _20122_decls;
		auto it = expr.begin();
		_iter_begin_205987e47:;
		if (it != expr.end()) {
			jule::Ptr<_21eeb8293_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_220b34073_buildFn(_20317_decl));;
			}
			_iter_next_205987e47:;
			++it;
			goto _iter_begin_205987e47;
		}
		_iter_end_205987e47:;
	};
	return _20213_methods;;
}



inline jule::Ptr<_220b376b4_Trait> _220b342d7_buildTrait(jule::Ptr<_21eec2137_TraitDecl> _20919_decl) {
	return jule::new_ptr<_220b376b4_Trait>(_220b376b4_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_220b341a5_buildMethods(_20919_decl.get()._field_Methods), });;
}



inline jule::Ptr<_220b38055_EnumItem> _220b34419_buildEnumItem(jule::Ptr<_21eebe442_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_220b38055_EnumItem>(_220b38055_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_220b335c2_buildExpr(_21822_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_220b38055_EnumItem>> _220b3454b_buildEnumItems(jule::Slice<jule::Ptr<_21eebe442_EnumItemDecl>>& _22624_decls) {
	jule::Slice<jule::Ptr<_220b38055_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_220b38055_EnumItem>>::alloc(0LL, _22624_decls.len());;
	{
		auto &expr = _22624_decls;
		auto it = expr.begin();
		_iter_begin_20598a367:;
		if (it != expr.end()) {
			jule::Ptr<_21eebe442_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_220b34419_buildEnumItem(_22817_decl));;
			}
			_iter_next_20598a367:;
			++it;
			goto _iter_begin_20598a367;
		}
		_iter_end_20598a367:;
	};
	return _22713_items;;
}



inline jule::Ptr<_220b38374_Enum> _220b3467d_buildEnum(jule::Ptr<_21eebee6a_EnumDecl> _23418_decl) {
	return jule::new_ptr<_220b38374_Enum>(_220b38374_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_220b33490_buildType(_23418_decl.get()._field_Kind), ._field_Items=_220b3454b_buildEnumItems(_23418_decl.get()._field_Items)});;
}



inline jule::Ptr<_220b38907_TypeEnumItem> _220b349e1_buildTypeEnumItem(jule::Ptr<_21eec0971_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_220b38907_TypeEnumItem>(_220b38907_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_220b33490_buildType(_24426_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_220b38907_TypeEnumItem>> _220b34b23_buildTypeEnumItems(jule::Slice<jule::Ptr<_21eec0971_TypeEnumItemDecl>>& _25228_decls) {
	jule::Slice<jule::Ptr<_220b38907_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_220b38907_TypeEnumItem>>::alloc(0LL, _25228_decls.len());;
	{
		auto &expr = _25228_decls;
		auto it = expr.begin();
		_iter_begin_20598ca1d:;
		if (it != expr.end()) {
			jule::Ptr<_21eec0971_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_220b349e1_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_20598ca1d:;
			++it;
			goto _iter_begin_20598ca1d;
		}
		_iter_end_20598ca1d:;
	};
	return _25313_items;;
}



inline jule::Ptr<_220b38ae4_TypeEnum> _220b34c55_buildTypeEnum(jule::Ptr<_21eec107b_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_220b38ae4_TypeEnum>(_220b38ae4_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_220b34b23_buildTypeEnumItems(_26022_decl.get()._field_Items)});;
}



inline jule::Ptr<_220b8746c_Var> _220b34d87_buildVar(jule::Ptr<_21eeb9272_VarDecl> _26917_decl) {
	return jule::new_ptr<_220b8746c_Var>(_220b8746c_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_220b33490_buildType(_26917_decl.get()._field_Kind), ._field_Value=_220b335c2_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__220b32b98_new(), ._field_Directives=_26917_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_220b8746c_Var>> _220b34eb9_buildVars(jule::Slice<jule::Ptr<_21eeb9272_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_220b8746c_Var>> _28713_vars = jule::Slice<jule::Ptr<_220b8746c_Var>>::alloc(0LL, _28618_decls.len());;
	{
		auto &expr = _28618_decls;
		auto it = expr.begin();
		_iter_begin_205990999:;
		if (it != expr.end()) {
			jule::Ptr<_21eeb9272_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_220b34d87_buildVar(_28817_decl));;
			}
			_iter_next_205990999:;
			++it;
			goto _iter_begin_205990999;
		}
		_iter_end_205990999:;
	};
	return _28713_vars;;
}



inline jule::Ptr<_220b3cab5_Impl> _220b350eb_buildImpl(jule::Ptr<_21eec2742_Impl> _29418_decl) {
	return jule::new_ptr<_220b3cab5_Impl>(_220b3cab5_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_220b341a5_buildMethods(_29418_decl.get()._field_Methods), ._field_Statics=_220b34eb9_buildVars(_29418_decl.get()._field_Statics)});;
}



inline jule::Bool _220b3be5a_matchConstraint(jule::Str& _14221_c, jule::Ptr<_220c0ae5d_TypeKind>& _14234_g) {
	{
		auto &_match_expr{ _14221_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_2059e89ad:;
			{
				jule::Ptr<_220c10baa_Prim> _14513_prim = _220c0d2e5_Prim(_14234_g.ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _220b27440_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_2059e844c:;
			{
				jule::Ptr<_220c10baa_Prim> _15113_prim = _220c0d2e5_Prim(_14234_g.ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _220b26e67_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_2059e8716:;
			{
				jule::Ptr<_220c10baa_Prim> _15713_prim = _220c0d2e5_Prim(_14234_g.ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _220b271cb_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_2059e878d:;
			{
				jule::Ptr<_220c10baa_Prim> _16313_prim = _220c0d2e5_Prim(_14234_g.ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _220b2730d_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_2059e8815:;
			{
				return _220c0c5d0_Mutable(_14234_g.ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_2059e84d5:;
			{
				return (!(_220c0c5d0_Mutable(_14234_g.ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_2059e854b:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_2059e85c3:;
			{
				jule::Ptr<_220c10baa_Prim> _17513_prim = _220c0d2e5_Prim(_14234_g.ptr());;
				if ((_17513_prim != nullptr)) {
					return (_220b2730d_IsNum(_17513_prim.get()._field_Kind) || _220c13dde_IsStr(_17513_prim.ptr()));;
				};
				if ((_220c0d7bd_Ptr(_14234_g.ptr()) != nullptr)) {
					return true;;
				};
				jule::Ptr<_21eec33d0_StructIns> _18213_s = _220c0e747_Struct(_14234_g.ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));;
				};
				jule::Ptr<_220b38374_Enum> _18913_enm = _220c0da32_Enum(_14234_g.ptr());;
				if ((_18913_enm != nullptr)) {
					return _220b2730d_IsNum(_220c0b359_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));;
				};
				return false;;
			}
		}
		else {
			_case_begin_2059e7869:;
			{
				return false;;
			}
		}
		_match_end_2059e77c0:;
	};
}



inline jule::Bool _220b3c246_isBuiltinConstraint(jule::Str& _19925_ident) {
	{
		auto &expr = _220b3a3ba_builtinConstraints;
		auto it = expr.begin();
		_iter_begin_205a003bb:;
		if (it != expr.end()) {
			jule::Str &_20012_bc = *it;
			{
				if ((_19925_ident == _20012_bc)) {
					return true;;
				};
			}
			_iter_next_205a003bb:;
			++it;
			goto _iter_begin_205a003bb;
		}
		_iter_end_205a003bb:;
	};
	return false;;
}



inline jule::Ptr<_220b49682_scopeChecker> _220b3eb50_newScopeCheckerBase(jule::Ptr<_220b69471_Sema>& _5829_s, jule::Ptr<_220b31a10_FnIns> _5843_owner) {
	return jule::new_ptr<_220b49682_scopeChecker>(_220b49682_scopeChecker{._field_s=_5829_s, ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_220bca1a2_SymbolTable>(), });;
}



inline jule::Ptr<_220b49682_scopeChecker> _220b3eed5_newScopeChecker(jule::Ptr<_220b69471_Sema>& _6625_s, jule::Ptr<_220b31a10_FnIns> _6639_owner) {
	jule::Ptr<_220b49682_scopeChecker> _6713_base = _220b3eb50_newScopeCheckerBase(_6625_s,_6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_220b483ea_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_220b4886d_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_220b483ea_scopeLabel> _220b40326_findLabelParent(jule::Str _7620_ident, jule::Ptr<_220b49682_scopeChecker> _7636_scope) {
	jule::Ptr<_220b483ea_scopeLabel> _7713_label = _220b4d158_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_220b4d158_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_205a172d4:;
	}
	_iter_end_205a172d4:;;
	return _7713_label;;
}



inline jule::Bool _220b406ab_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_220b42b20_Scope>& _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_205a18db8:;
			{
				jule::Ptr<_220b2b763_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_220b2b763_FnCallExprModel>(&__jule_any_type35);;
				if ((_9313_fcem.get()._field_Except == _9034_sc)) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_205a18e2e:;
			{
				jule::Ptr<_220bceecb_Data> _9813_d = _9021_Model.cast_ptr<_220bceecb_Data>(&__jule_any_type24);;
				return _220b406ab_modelIsGotoScope(_9813_d.get()._field_Model,_9034_sc);;
			}
		}
		_match_end_205a18bdc:;
	};
	return false;;
}



inline jule::Bool _220b409ec_stmtIsGotoScope(jule::Any& _10421_stmt, jule::Ptr<_220b42b20_Scope>& _10434_sc) {
	{
		auto &_match_expr{ _10421_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_205a1b32c:;
			{
				return (_10421_stmt.cast_ptr<_220b42b20_Scope>(&__jule_any_type22) == _10434_sc);;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_205a1b0b8:;
			{
				return (_10421_stmt.cast_ptr<_220b43967_InfIter>(&__jule_any_type37).get()._field_Scope == _10434_sc);;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_205a1b12e:;
			{
				jule::Ptr<_220b447c0_RangeIter> _11113_it = _10421_stmt.cast_ptr<_220b447c0_RangeIter>(&__jule_any_type41);;
				return ((_11113_it.get()._field_Scope == _10434_sc) || _220b406ab_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model,_10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_205a1b195:;
			{
				jule::Ptr<_220b43dda_WhileIter> _11413_it = _10421_stmt.cast_ptr<_220b43dda_WhileIter>(&__jule_any_type39);;
				return (((_11413_it.get()._field_Scope == _10434_sc) || _220b406ab_modelIsGotoScope(_11413_it.get()._field_Expr,_10434_sc)) || _220b406ab_modelIsGotoScope(_11413_it.get()._field_Next,_10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_205a1ad10:;
			{
				jule::Ptr<_220b4686b_Match> _11913_m = _10421_stmt.cast_ptr<_220b4686b_Match>(&__jule_any_type49);;
				{
					auto &expr = _11913_m.get()._field_Cases;
					auto it = expr.begin();
					_iter_begin_205a1e75e:;
					if (it != expr.end()) {
						jule::Ptr<_220b473b6_Case> &_12016_c = *it;
						{
							if ((_12016_c.get()._field_Scope == _10434_sc)) {
								return true;;
							};
							{
								auto &expr = _12016_c.get()._field_Exprs;
								auto it = expr.begin();
								_iter_begin_205a20694:;
								if (it != expr.end()) {
									jule::Ptr<_220bceecb_Data> &_12420_expr = *it;
									{
										if (_220b406ab_modelIsGotoScope(_12420_expr.get()._field_Model,_10434_sc)) {
											return true;;
										};
									}
									_iter_next_205a20694:;
									++it;
									goto _iter_begin_205a20694;
								}
								_iter_end_205a20694:;
							};
						}
						_iter_next_205a1e75e:;
						++it;
						goto _iter_begin_205a1e75e;
					}
					_iter_end_205a1e75e:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_205a1ad76:;
			{
				jule::Ptr<_220b4367b_Conditional> _13213_c = _10421_stmt.cast_ptr<_220b4367b_Conditional>(&__jule_any_type36);;
				{
					auto &expr = _13213_c.get()._field_Elifs;
					auto it = expr.begin();
					_iter_begin_205a21bb2:;
					if (it != expr.end()) {
						jule::Ptr<_220b4301b_If> &_13316_elif = *it;
						{
							if (((_13316_elif.get()._field_Scope == _10434_sc) || _220b406ab_modelIsGotoScope(_13316_elif.get()._field_Expr,_10434_sc))) {
								return true;;
							};
						}
						_iter_next_205a21bb2:;
						++it;
						goto _iter_begin_205a21bb2;
					}
					_iter_end_205a21bb2:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_205a1aded:;
			{
				jule::Ptr<_220bceecb_Data> _14013_d = _10421_stmt.cast_ptr<_220bceecb_Data>(&__jule_any_type24);;
				return _220b406ab_modelIsGotoScope(_14013_d.get()._field_Model,_10434_sc);;
			}
		}
		else {
			_case_begin_205a192a3:;
			{
				return false;;
			}
		}
		_match_end_205a1923c:;
	};
}



inline jule::I64 _220b40d3d_countMatchType(jule::Ptr<_220b4686b_Match>& _14720_m, jule::Ptr<_220c0ae5d_TypeKind>& _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _220c0b359_Str(_14732_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14720_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_205a24b93:;
		if (it != expr.end()) {
			jule::Ptr<_220b473b6_Case> &_15112_c = *it;
			{
				if ((_15112_c == nullptr)) {
					goto _iter_next_205a24b93;
				};
				{
					auto &expr = _15112_c.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_205a255cd:;
					if (it != expr.end()) {
						jule::Ptr<_220bceecb_Data> &_15616_expr = *it;
						{
							if ((_15616_expr == nullptr)) {
								goto _iter_end_205a24b93;
							};
							if ((_1499_kind == _220c0b359_Str(_15616_expr.get()._field_Model.cast_ptr<_220c0ae5d_TypeKind>(&__jule_any_type91).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_205a255cd:;
						++it;
						goto _iter_begin_205a255cd;
					}
					_iter_end_205a255cd:;
				};
			}
			_iter_next_205a24b93:;
			++it;
			goto _iter_begin_205a24b93;
		}
		_iter_end_205a24b93:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_220bceecb_Data>> _220b410d5_getDatasFromTupleData(jule::Ptr<_220bceecb_Data>& _17131_d) {
	if ((_220c0ee84_Tup(_17131_d.get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17131_d.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type89) {
				_case_begin_205a2e4a5:;
				{
					return _17131_d.get()._field_Model.cast_ptr<_220b2d48a_TupleExprModel>(&__jule_any_type89).get()._field_Datas;;
				}
			}
			else {
				_case_begin_205a2c096:;
				{
					jule::Ptr<_220c15929_Tuple> _17721_t = _220c0ee84_Tup(_17131_d.get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_220bceecb_Data>> _17821_r = jule::Slice<jule::Ptr<_220bceecb_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto &expr = _17721_t.get()._field_Types;
						auto it = expr.begin();
						_iter_begin_205a2d3e9:;
						if (it != expr.end()) {
							jule::Ptr<_220c0ae5d_TypeKind> _17925_kind = *it;
							{
								_17821_r = jule::alloc_for_append(_17821_r,1);_17821_r.__push(jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=_17925_kind, ._field_Mutable=true, }));;
							}
							_iter_next_205a2d3e9:;
							++it;
							goto _iter_begin_205a2d3e9;
						}
						_iter_end_205a2d3e9:;
					};
					return _17821_r;;
				}
			}
			_match_end_205a2c00d:;
		};
	} else {
		return jule::Slice<jule::Ptr<_220bceecb_Data>>::make({_17131_d});;
	};
}



inline jule::Bool _220b41921_checkMut(jule::Ptr<_220b69471_Sema>& _20618_s, jule::Ptr<_220bceecb_Data>& _20629_left, jule::Ptr<_220bceecb_Data> _20646_right, jule::Ptr<_21d81d743_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!(_20629_left.get()._field_Mutable))) {
			_case_begin_205a32673:;
			{
				_220b6c133_pushErr(_20618_s.ptr(), _20660_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _220c0c5d0_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_205a31ed0:;
			{
				if (((_20660_op.get()._field_Kind != jule::Str("=", 1)) && (_220c0e747_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_220b6c133_pushErr(_20618_s.ptr(), _20660_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type6)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_205a31e69:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_205a31dc0:;
	};
}



inline jule::Bool _220b41da5_checkAssign(jule::Ptr<_220b69471_Sema>& _22521_s, jule::Ptr<_220bceecb_Data>& _22536_left, jule::Ptr<_220bceecb_Data> _22553_right, jule::Ptr<_21d81d743_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_220b31a10_FnIns> _2269_f = _220c0e4d3_Fn(_22536_left.get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_220b6c133_pushErr(_22521_s.ptr(), _22567_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_220bd088e_IsConst(_22536_left.ptr())) {
			_case_begin_205a372b0:;
			{
				_220b6c133_pushErr(_22521_s.ptr(), _22567_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_220b6c452_pushSugggestion(_22521_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_22536_left.get()._field_Lvalue))) {
			_case_begin_205a36b2d:;
			{
				_220b6c133_pushErr(_22521_s.ptr(), _22567_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_220b41921_checkMut(_22521_s,_22536_left,_22553_right,_22567_op)))) {
			_case_begin_205a36b94:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_205a36ab7:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_205a36996:;
	};
}



inline jule::Bool _220b4214c_isValidAstStForNextSt(jule::Any& _24731_n) {
	{
		auto &_match_expr{ _24731_n };
		
		if (_match_expr.type == &__jule_any_type60) {
			_case_begin_205a36c3d:;
			{
				return (!(_24731_n.cast_ptr<_21eeb52a1_AssignSt>(&__jule_any_type60).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_205a3902b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_205a38db6:;
			{
				return false;;
			}
		}
		_match_end_205a38d50:;
	};
}



inline jule::Bool _220b423e4_isValidStForNextSt(jule::Any& _25824_st) {
	{
		auto &_match_expr{ _25824_st };
		
		if (_match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type47) {
			_case_begin_205a3a02c:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_205a3a093:;
			{
				{
					auto &_match_expr{ _25824_st.cast_ptr<_220bceecb_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type35) {
						_case_begin_205a3a879:;
						{
							return true;;
						}
					}
					else {
						_case_begin_205a3ac31:;
						{
							return false;;
						}
					}
					_match_end_205a3a989:;
				};
			}
		}
		else {
			_case_begin_205a399cc:;
			{
				return false;;
			}
		}
		_match_end_205a39977:;
	};
}



inline jule::Bool _220b4268b_stmtIsDef(jule::Any& _27615_st) {
	{
		auto &_match_expr{ _27615_st };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_205a3b380:;
			{
				return true;;
			}
		}
		else {
			_case_begin_205a3ae40:;
			{
				return false;;
			}
		}
		_match_end_205a3ad52:;
	};
}



inline jule::Ptr<_220b8746c_Var> _220b5da3c_findVarInPackage(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>& _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto &expr = _4626_files;
		auto it = expr.begin();
		_iter_begin_205b89148:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_220b8746c_Var> _4817_v = _220bcad84_FindVar(_4717_f.ptr(), _4649_ident,_4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_205b89148:;
			++it;
			goto _iter_begin_205b89148;
		}
		_iter_end_205b89148:;
	};
	return nullptr;;
}



inline jule::Ptr<_220c0a26a_TypeAlias> _220b5de6b_findTypeAliasInPackage(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>& _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto &expr = _5832_files;
		auto it = expr.begin();
		_iter_begin_205b8a611:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_220c0a26a_TypeAlias> _6017_ta = _220bcb23b_FindTypeAlias(_5917_f.ptr(), _5855_ident,_5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_205b8a611:;
			++it;
			goto _iter_begin_205b8a611;
		}
		_iter_end_205b8a611:;
	};
	return nullptr;;
}



inline jule::Ptr<_21eec3006_Struct> _220b5e356_findStructInPackage(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>& _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto &expr = _7029_files;
		auto it = expr.begin();
		_iter_begin_205b8bab8:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_21eec3006_Struct> _7217_s = _220bcb5e3_FindStruct(_7117_f.ptr(), _7052_ident,_7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_205b8bab8:;
			++it;
			goto _iter_begin_205b8bab8;
		}
		_iter_end_205b8bab8:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b31636_Fn> _220b5e7b8_findFnInPackage(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>& _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto &expr = _8225_files;
		auto it = expr.begin();
		_iter_begin_205b8d070:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_220b31636_Fn> _8417_f = _220bcb99a_FindFn(_8317_file.ptr(), _8248_ident,_8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_205b8d070:;
			++it;
			goto _iter_begin_205b8d070;
		}
		_iter_end_205b8d070:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b376b4_Trait> _220b5eac6_findTraitInPackage(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>& _9428_files, jule::Str _9451_ident) {
	{
		auto &expr = _9428_files;
		auto it = expr.begin();
		_iter_begin_205b8d603:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_220b376b4_Trait> _9617_t = _220bcbca8_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_205b8d603:;
			++it;
			goto _iter_begin_205b8d603;
		}
		_iter_end_205b8d603:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b38374_Enum> _220b5ee17_findEnumInPackage(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>& _10627_files, jule::Str _10650_ident) {
	{
		auto &expr = _10627_files;
		auto it = expr.begin();
		_iter_begin_205b90616:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_220b38374_Enum> _10817_e = _220bcc0b6_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_205b90616:;
			++it;
			goto _iter_begin_205b90616;
		}
		_iter_end_205b90616:;
	};
	return nullptr;;
}



inline jule::Ptr<_220b38ae4_TypeEnum> _220b60258_findTypeEnumInPackage(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>& _11831_files, jule::Str _11854_ident) {
	{
		auto &expr = _11831_files;
		auto it = expr.begin();
		_iter_begin_205b918d1:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_220b38ae4_TypeEnum> _12017_e = _220bcc3c4_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_205b918d1:;
			++it;
			goto _iter_begin_205b918d1;
		}
		_iter_end_205b918d1:;
	};
	return nullptr;;
}



inline jule::Any _220b60753_defByIdentPackage(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>& _12927_files, jule::Str& _12951_ident, jule::Bool _12963_cppLinked) {
	{
		auto &expr = _12927_files;
		auto it = expr.begin();
		_iter_begin_205b92daa:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _220bcd24e_defByIdent(_13017_file.ptr(), _12951_ident,_12963_cppLinked);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_205b92daa:;
			++it;
			goto _iter_begin_205b92daa;
		}
		_iter_end_205b92daa:;
	};
	return nullptr;;
}



inline jule::Bool _220b66858_isStdPackage(jule::Str _36117_f, jule::Str _36125_p) {
	return _21d440134_HasPrefix(_36117_f,_21c4e1aee_Join(jule::Slice<jule::Str>::make({_21d52d673_PathStdlib,_36125_p})));;
}



inline jule::Bool _220b67639_isValidModelForRef(jule::Any& _1228_m) {
	{
		auto &_match_expr{ _1228_m };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_205ba3d77:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_205ba3ddd:;
			{
				jule::Ptr<_220b2c9ea_StructSubIdentExprModel> _1717_model = _1228_m.cast_ptr<_220b2c9ea_StructSubIdentExprModel>(&__jule_any_type72);;
				return _220b67639_isValidModelForRef(_1717_model.get()._field_Expr.get()._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_205ba3b79:;
			{
				jule::Ptr<_220b2c5cc_TraitSubIdentExprModel> _2017_model = _1228_m.cast_ptr<_220b2c5cc_TraitSubIdentExprModel>(&__jule_any_type71);;
				return _220b67639_isValidModelForRef(_2017_model.get()._field_Expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_205ba3be0:;
			{
				jule::Ptr<_220b2acc3_UnaryExprModel> _2317_unary = _1228_m.cast_ptr<_220b2acc3_UnaryExprModel>(&__jule_any_type75);;
				if ((_2317_unary.get()._field_Op.get()._field_Kind != jule::Str("*", 1))) {
					return false;;
				};
				if ((_220c0d7bd_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_220c0d559_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _220b67639_isValidModelForRef(_2317_unary.get()._field_Expr.get()._field_Model);;
			}
		}
		else {
			_case_begin_205ba3261:;
			{
				return false;;
			}
		}
		_match_end_205ba320b:;
	};
}



inline _21d4e511d_Log _220b67a57_compilerErr(jule::Ptr<_21d81d743_Token>& _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_21d4e511d_Log _4213_log = _21d4e511d_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_4117_token.get()._field_Row, ._field_Column=_4117_token.get()._field_Column, ._field_Path=_4117_token.get()._field_File.get()._field_Path, ._field_Text=_21d4e555d_Logf(_4144_fmt,_4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_21d824caa_GetRow(_4117_token.get()._field_File.ptr(), _4117_token.get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _220b67d98_impIsLookupable(jule::Ptr<_220b61325_ImportInfo>& _5521_i, jule::Str _5537_ident) {
	if (_5521_i.get()._field_CppLinked) {
		return false;;
	};
	if ((!(_5521_i.get()._field_ImportAll))) {
		if ((_5521_i.get()._field_Selected.len() > 0LL)) {
			return _220b63beb_existIdent(_5521_i.ptr(), _5537_ident);;
		};
	};
	return _5521_i.get()._field_ImportAll;;
}



inline void _220b68195_appendRetVars(jule::Slice<jule::Ptr<_220b8746c_Var>>& _6723_dest, jule::Ptr<_220b31a10_FnIns>& _6742_f) {
	if ((_22001c270_IsVoid(_6742_f.get()._field_Decl.ptr()) || (_6742_f.get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_220c0ae5d_TypeKind>> _7213_types = _220b32093_Types(_6742_f.ptr());;
	{
		auto &expr = _6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_205babe29:;
		if (it != expr.end()) {
			jule::I64 _7310_i = it - expr.begin();
			jule::Ptr<_21d81d743_Token> _7317_ident = *it;
			{
				if ((_21d820ed7_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _21d82127e_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_205babe29;
				};
				_6723_dest = jule::alloc_for_append(_6723_dest,1);_6723_dest.__push(jule::new_ptr<_220b8746c_Var>(_220b8746c_Var{._field_Scope=_6742_f.get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_220c1033b_TypeSymbol>(_220c1033b_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_220bd1054_Value>(_220bd1054_Value{._field_Data=jule::new_ptr<_220bceecb_Data>()}), ._field_RetOrder=_7310_i, }));;
			}
			_iter_next_205babe29:;
			++it;
			_7310_i++;
			goto _iter_begin_205babe29;
		}
		_iter_end_205babe29:;
	};
	if (((_6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && (_6723_dest.len() == 1LL))) {
		_6723_dest[(_6723_dest.len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _220b6844d_appendParamVars(jule::Slice<jule::Ptr<_220b8746c_Var>>& _9725_dest, jule::Ptr<_220b31a10_FnIns>& _9744_f) {
	if ((_9744_f.get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9744_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_205bb0bec:;
		if (it != expr.end()) {
			jule::Ptr<_220b31823_ParamIns> _10217_p = *it;
			{
				if ((_21d820ed7_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _21d82127e_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_205bb0bec;
				};
				jule::Ptr<_220b8746c_Var> _10717_v = jule::new_ptr<_220b8746c_Var>(_220b8746c_Var{._field_Scope=_9744_f.get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_220c1033b_TypeSymbol>(), ._field_Value=jule::new_ptr<_220bd1054_Value>(_220bd1054_Value{._field_Data=jule::new_ptr<_220bceecb_Data>()}), });;
				{
					
					if (_22001a45a_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_205bb36d3:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_220c0aa2e_Kind>(_9744_f.get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_22001b35c_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_22001b35c_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_220c0aa2e_Kind>(jule::new_ptr<_220c1443e_Sptr>(_220c1443e_Sptr{._field_Elem=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_CppIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_205bb3419:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_220c0aa2e_Kind>(jule::new_ptr<_220c14d9b_Slc>(_220c14d9b_Slc{._field_Elem=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_CppIdent=_10217_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_205bb13a1:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_205bb32e8:;
				};
				_9725_dest = jule::alloc_for_append(_9725_dest,1);_9725_dest.__push(_10717_v);;
			}
			_iter_next_205bb0bec:;
			++it;
			goto _iter_begin_205bb0bec;
		}
		_iter_end_205bb0bec:;
	};
}



inline void _220b68728_appendGenericTypeAliases(jule::Slice<jule::Ptr<_220c0a26a_TypeAlias>>& _15734_dest, jule::Ptr<_220b31a10_FnIns>& _15759_f) {
	jule::I64 _15813_size = _15759_f.get()._field_Generics.len();;
	if ((_15759_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=_15759_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15759_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_205bb8b6c:;
		if (it != expr.end()) {
			jule::I64 _16710_i = it - expr.begin();
			jule::Ptr<_220c09731_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_21eeb3b0c_GenericDecl> _16817_decl = _15759_f.get()._field_Decl.get()._field_Generics[_16710_i];;
				_15734_dest = jule::alloc_for_append(_15734_dest,1);_15734_dest.__push(jule::new_ptr<_220c0a26a_TypeAlias>(_220c0a26a_TypeAlias{._field_Scope=_15759_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_220c1033b_TypeSymbol>(_220c1033b_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), }));;
			}
			_iter_next_205bb8b6c:;
			++it;
			_16710_i++;
			goto _iter_begin_205bb8b6c;
		}
		_iter_end_205bb8b6c:;
	};
	if ((_15759_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_21eec33d0_StructIns> _18017_owner = _15759_f.get()._field_Owner;;
		{
			auto &expr = _18017_owner.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_205bbb19c:;
			if (it != expr.end()) {
				jule::I64 _18114_i = it - expr.begin();
				jule::Ptr<_220c09731_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_21eeb3b0c_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					_15734_dest = jule::alloc_for_append(_15734_dest,1);_15734_dest.__push(jule::new_ptr<_220c0a26a_TypeAlias>(_220c0a26a_TypeAlias{._field_Scope=_15759_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_220c1033b_TypeSymbol>(_220c1033b_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), }));;
				}
				_iter_next_205bbb19c:;
				++it;
				_18114_i++;
				goto _iter_begin_205bbb19c;
			}
			_iter_end_205bbb19c:;
		};
	};
}



inline jule::Ptr<_220bca1a2_SymbolTable> _220b68a7a_findFile(jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>& _19518_files, jule::Ptr<_21d823acd_File>& _19542_handler) {
	{
		auto &expr = _19518_files;
		auto it = expr.begin();
		_iter_begin_205bbb972:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == _19542_handler)) {
					return _19617_fl;;
				};
			}
			_iter_next_205bbb972:;
			++it;
			goto _iter_begin_205bbb972;
		}
		_iter_end_205bbb972:;
	};
	return nullptr;;
}



inline void _220b68edc_pushSugggestion(_21d4e511d_Log* _20431_log, jule::Str _20442_fmt, jule::Slice<jule::Any> _20455_args) {
	_20431_log->_field_Suggestion=_21d4e555d_Logf(_20442_fmt,_20455_args);
}



inline jule::Bool _220ba0dd1_traitHasReferenceReceiver(jule::Ptr<_220b376b4_Trait>& _2631_t) {
	{
		auto &expr = _2631_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_205dc2925:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_Statically) {
					goto _iter_next_205dc2925;
				};
				jule::Ptr<_220b31449_Param> _3313_p = _2712_f.get()._field_Params[0LL];;
				if ((_22001b35c_IsRef(_3313_p.ptr()) && _22001a45a_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_205dc2925:;
			++it;
			goto _iter_begin_205dc2925;
		}
		_iter_end_205dc2925:;
	};
	return false;;
}



inline jule::Bool _220ba1013_floatAssignable(jule::Str _4120_kind, jule::Ptr<_220bceecb_Data>& _4132_d) {
	jule::Str _429_value = _220579557_FmtFloat(static_cast<jule::F64>(_220b282dc_AsF64(_4132_d.get()._field_Constant.ptr())),'g',-1LL,64LL);;
	return _2203d2091_CheckBitFloat(_429_value,static_cast<jule::I64>(_220186b48_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _220bb78dc_sigAssignable(jule::Str _4618_kind, jule::Ptr<_220bceecb_Data>& _4630_d) {
	jule::F64 _479_min = _220b2499d_Min(_4618_kind);;
	jule::F64 _489_max = _220b24ad0_Max(_4618_kind);;
	{
		
		if (_220b29134_IsF64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_205dc86b7:;
			{
				jule::F64 _5113_x = _220b27e46_ReadF64(_4630_d.get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _220ae7a4d_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_220b28c8d_IsU64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_205dc9135:;
			{
				jule::F64 _5813_x = _220b282dc_AsF64(_4630_d.get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_220b28b5b_IsI64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_205dc91ac:;
			{
				jule::F64 _6313_x = _220b282dc_AsF64(_4630_d.get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_205dc9014:;
	};
	return false;;
}



inline jule::Bool _220bb7a1e_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_220bceecb_Data>& _6932_d) {
	jule::F64 _709_max = _220b24ad0_Max(_6920_kind);;
	if ((_6932_d.get()._field_IsRune && (_6920_kind == jule::Str("u8", 2)))) {
		return _220ba09b3_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_220b2796d_ReadI64(_6932_d.get()._field_Constant.ptr()))));;
	};
	{
		
		if (_220b29134_IsF64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_205dcded6:;
			{
				jule::F64 _7713_x = _220b27e46_ReadF64(_6932_d.get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _220ae7a4d_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_220b28c8d_IsU64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_205dce05d:;
			{
				jule::F64 _8713_x = _220b282dc_AsF64(_6932_d.get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_220b28b5b_IsI64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_205dce0d5:;
			{
				jule::F64 _9213_x = _220b282dc_AsF64(_6932_d.get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_205dcd854:;
	};
	return false;;
}



inline jule::Bool _220bb8ab9_intAssignable(jule::Str _9818_kind, jule::Ptr<_220bceecb_Data>& _9830_d) {
	{
		
		if (_220b26d35_IsSigInt(_9818_kind)) {
			_case_begin_205dd37e3:;
			{
				return _220bb78dc_sigAssignable(_9818_kind,_9830_d);;
			}
		}
		else if (_220b26e67_IsUnsigInt(_9818_kind)) {
			_case_begin_205dd3194:;
			{
				return _220bb7a1e_unsigAssignable(_9818_kind,_9830_d);;
			}
		}
		else {
			_case_begin_205dce7bc:;
			{
				return false;;
			}
		}
		_match_end_205dce701:;
	};
}



inline jule::Ptr<_220c0ae5d_TypeKind> _220bc9228_lenKind(void) {
	return jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("int", 3)), 6)});;
}



inline jule::Ptr<_21ee6d710_Directive> _220c0560b_findDirective(jule::Slice<jule::Ptr<_21ee6d710_Directive>>& _412023_directives, jule::Str _412054_d) {
	{
		auto &expr = _412023_directives;
		auto it = expr.begin();
		_iter_begin_205ee0a87:;
		if (it != expr.end()) {
			jule::Ptr<_21ee6d710_Directive> _412117_dr = *it;
			{
				if ((_412117_dr.get()._field_Tag.get()._field_Kind == _412054_d)) {
					return _412117_dr;;
				};
			}
			_iter_next_205ee0a87:;
			++it;
			goto _iter_begin_205ee0a87;
		}
		_iter_end_205ee0a87:;
	};
	return nullptr;;
}



inline jule::Any _220c05991_findBuiltinsImport(jule::Str _412923_ident, jule::Ptr<_220b61325_ImportInfo> _412935_imp) {
	return _220c36bae_findPackageBuiltinDef(_412935_imp.get()._field_LinkPath,_412923_ident);;
}



inline void _220c05ba0_fitBitsize(jule::Ptr<_220bceecb_Data>& _413620_d) {
	jule::Ptr<_220c10baa_Prim> _413713_prim = _220c0d2e5_Prim(_413620_d.get()._field_Kind.ptr());;
	jule::I64 _41389_z = _220186b48_BitsizeOf(_220c1101d_Str(_413713_prim.ptr()));;
	if ((_41389_z == 64LLU)) {
		return;;
	};
	jule::I64 _414313_k = 0LL;;
	{
		
		if (_220b28b5b_IsI64(_413620_d.get()._field_Constant.ptr())) {
			_case_begin_205ee36c2:;
			{
				_414313_k=static_cast<jule::I64>(_220451ad3_BitsizeOfInt(static_cast<jule::I64>(_220b2796d_ReadI64(_413620_d.get()._field_Constant.ptr()))));
				if ((_414313_k > _41389_z)) {
					_413713_prim.get()._field_Kind=_22019d236_IntFromBits(_414313_k);
				};
			}
		}
		else if (_220b28c8d_IsU64(_413620_d.get()._field_Constant.ptr())) {
			_case_begin_205ee3749:;
			{
				_414313_k=static_cast<jule::I64>(_2204d872a_BitsizeOfUint(static_cast<jule::U64>(_220b27aa0_ReadU64(_413620_d.get()._field_Constant.ptr()))));
				if ((_414313_k > _41389_z)) {
					_413713_prim.get()._field_Kind=_22018dca4_UintFromBits(_414313_k);
				};
			}
		}
		else if (_220b29134_IsF64(_413620_d.get()._field_Constant.ptr())) {
			_case_begin_205ee37c1:;
			{
				_414313_k=static_cast<jule::I64>(_2203db8a3_BitsizeOfFloat(static_cast<jule::F64>(_220b27e46_ReadF64(_413620_d.get()._field_Constant.ptr()))));
				if ((_414313_k > _41389_z)) {
					_413713_prim.get()._field_Kind=_2201ce80b_FloatFromBits(_414313_k);
				};
			}
		}
		_match_end_205ee3606:;
	};
}



inline void _220c05e9c_makeStructLitAlloc(jule::Ptr<_220bceecb_Data>& _416328_d, jule::Ptr<_220b2b19c_StructLitExprModel>& _416343_lit) {
	_416328_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(jule::new_ptr<_220c1443e_Sptr>(_220c1443e_Sptr{._field_Elem=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_416343_lit.get()._field_Strct, 0)})}), 7)});
	_416328_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2b389_AllocStructLitExprModel>(_220b2b389_AllocStructLitExprModel{._field_Lit=_416343_lit}), &__jule_any_type119);
}



inline jule::Ptr<_220b8746c_Var> _220c062dd_buildErrorVar(jule::Ptr<_220b42b20_Scope>& _417423_s, jule::Ptr<_21eeaed17_FnCallExpr>& _417439_fc) {
	return jule::new_ptr<_220b8746c_Var>(_220b8746c_Var{._field_Scope=_417423_s, ._field_Token=_417439_fc.get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_220c1033b_TypeSymbol>(_220c1033b_TypeSymbol{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_220bd1054_Value>(_220bd1054_Value{._field_Data=jule::new_ptr<_220bceecb_Data>()}), });;
}



inline jule::Any _220c0662e_findBuiltinsSema(jule::Str _419321_ident, jule::Ptr<_220b69471_Sema> _419337_s) {
	{
		auto &expr = _419337_s.get()._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_205ee8012:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _419417_imp = *it;
			{
				if ((_419417_imp.get()._field_ImportAll || _220b63beb_existIdent(_419417_imp.ptr(), _419321_ident))) {
					jule::Any _419621_def = _220c05991_findBuiltinsImport(_419321_ident,_419417_imp);;
					if ((_419621_def != nullptr)) {
						return _419621_def;;
					};
				};
			}
			_iter_next_205ee8012:;
			++it;
			goto _iter_begin_205ee8012;
		}
		_iter_end_205ee8012:;
	};
	jule::Str _420413_ppath = _21d8244c4_Dir(_419337_s.get()._field_file.get()._field_File.ptr());;
	if (_21d440134_HasPrefix(_420413_ppath,_21d52d673_PathStdlib)) {
		(_420413_ppath).mut_slice(_21d52d673_PathStdlib.len());;
		_420413_ppath=(jule::Str("std", 3) + _21d46e1eb_Replace(_420413_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
		return _220c36bae_findPackageBuiltinDef(_420413_ppath,_419321_ident);;
	};
	return nullptr;;
}



inline jule::Bool _220c068c6_isOkForShifting(jule::Ptr<_220bceecb_Data>& _421825_d) {
	if (_220bd088e_IsConst(_421825_d.ptr())) {
		{
			
			if (_220b28b5b_IsI64(_421825_d.get()._field_Constant.ptr())) {
				_case_begin_205eec9c8:;
				{
					return (_220b2796d_ReadI64(_421825_d.get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_220b28c8d_IsU64(_421825_d.get()._field_Constant.ptr())) {
				_case_begin_205eec302:;
				{
					return true;;
				}
			}
			else if (_220b29134_IsF64(_421825_d.get()._field_Constant.ptr())) {
				_case_begin_205eec368:;
				{
					return (_220b27e46_ReadF64(_421825_d.get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_205eec28b:;
				{
					return false;;
				}
			}
			_match_end_205eec1c0:;
		};
	};
	jule::Ptr<_220c10baa_Prim> _42319_prim = _220c0d2e5_Prim(_421825_d.get()._field_Kind.ptr());;
	return ((_42319_prim != nullptr) && _220b27099_IsInt(_220c1101d_Str(_42319_prim.ptr())));;
}



inline jule::Bool _220c06c7d_isInstancedStruct(jule::Ptr<_21eec33d0_StructIns> _423522_s) {
	return (_423522_s.get()._field_Decl.get()._field_Generics.len() == _423522_s.get()._field_Generics.len());;
}



inline jule::Bool _220c070e1_isPtrArithmeticCompatible(jule::Ptr<_220bceecb_Data>& _423935_l, jule::Ptr<_220bceecb_Data>& _423950_r) {
	jule::Ptr<_220c179a3_Ptr> _42409_ptr = _220c0d7bd_Ptr(_423950_r.get()._field_Kind.ptr());;
	if ((_42409_ptr != nullptr)) {
		return _220c0b667_Equal(_220c0d7bd_Ptr(_423935_l.get()._field_Kind.ptr()).get()._field_Elem, _42409_ptr.get()._field_Elem);;
	};
	if (_220bd088e_IsConst(_423950_r.ptr())) {
		return _220bb8ab9_intAssignable(jule::Str("int", 3),_423950_r);;
	};
	_220bb8c95_typeCompatibilityChecker _424713_tcc = _220bb8c95_typeCompatibilityChecker{._field_dest=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=_423950_r.get()._field_Kind, };;
	return _220bba37e_check(&_424713_tcc);;
}



inline void _220c07333_applyCastKindModel(jule::Ptr<_220bceecb_Data>& _425628_d, jule::Ptr<_220c0ae5d_TypeKind>& _425643_t) {
	_425628_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2b576_CastingExprModel>(_220b2b576_CastingExprModel{._field_Expr=_425628_d.get()._field_Model, ._field_Kind=_425643_t, ._field_ExprKind=_425628_d.get()._field_Kind}), &__jule_any_type101);
}



inline void _220c075db_applyCastKind(jule::Ptr<_220bceecb_Data>& _426423_d, jule::Ptr<_220c0ae5d_TypeKind>& _426438_t) {
	_220c07333_applyCastKindModel(_426423_d,_426438_t);
	_426423_d.get()._field_Kind=_426438_t;
}



inline jule::Ptr<_220bceecb_Data> _220c077d9_buildVoidData(void) {
	return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("void", 4)), 6)}), });;
}



inline jule::Str _220c07aa3_checkDataForIntegerIndexing(jule::Ptr<_220bceecb_Data>& _427737_d) {
	jule::Str __jule_func_result = jule::Str();
	if ((_427737_d == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_220c0d2e5_Prim(_427737_d.get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_206004c33:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_220b27099_IsInt(_220c1101d_Str(_220c0d2e5_Prim(_427737_d.get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_206004c99:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_220bd088e_IsConst(_427737_d.ptr())) {
			_case_begin_206004d10:;
			{
				if ((_220b282dc_AsF64(_427737_d.get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_220c0d2e5_Prim(_427737_d.get()._field_Kind.ptr()) == nullptr) || _220bd088e_IsConst(_427737_d.ptr()) || (_220177bc2_RealKindOf(_220c1101d_Str(_220c0d2e5_Prim(_427737_d.get()._field_Kind.ptr()).ptr())) != _220177bc2_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_206004d76:;
			{
				jule::Ptr<_220c0ae5d_TypeKind> _429417_t = jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("int", 3)), 6)});;
				_220c075db_applyCastKind(_427737_d,_429417_t);
			}
		}
		_match_end_20600486a:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _220c07d6c_applyCastModelByEnum(jule::Ptr<_220bceecb_Data>& _430330_d, jule::Ptr<_220b38374_Enum> _430344_e) {
	if ((_430344_e == nullptr)) {
		return;;
	};
	jule::Ptr<_220c10baa_Prim> _43079_p = _220c0d2e5_Prim(_430344_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_220c13dde_IsStr(_43079_p.ptr())) {
		return;;
	};
	_220c07333_applyCastKindModel(_430330_d,_430344_e.get()._field_Kind.get()._field_Kind);
}



inline void _220c08125_castConstByType(jule::Str& _431421_t, jule::Ptr<_220bceecb_Data>& _431434_d) {
	{
		
		if (_220b26d35_IsSigInt(_431421_t)) {
			_case_begin_20600a0ce:;
			{
				{
					auto _match_expr{ _220186b48_BitsizeOf(_220177bc2_RealKindOf(_431421_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_20600ac28:;
						{
							_220b2841e_SetI64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_220b28078_AsI64(_431434_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_20600aca0:;
						{
							_220b2841e_SetI64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_220b28078_AsI64(_431434_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_20600ad16:;
						{
							_220b2841e_SetI64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_220b28078_AsI64(_431434_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_20600ad7c:;
						{
							_220b2841e_SetI64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_220b28078_AsI64(_431434_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_20600a365:;
				};
			}
		}
		else if (_220b26e67_IsUnsigInt(_431421_t)) {
			_case_begin_20600a156:;
			{
				{
					auto _match_expr{ _220186b48_BitsizeOf(_220177bc2_RealKindOf(_431421_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_20600e314:;
						{
							_220b28551_SetU64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_220b281aa_AsU64(_431434_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_20600e39c:;
						{
							_220b28551_SetU64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_220b281aa_AsU64(_431434_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_20600e413:;
						{
							_220b28551_SetU64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_220b281aa_AsU64(_431434_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_20600e479:;
						{
							_220b28551_SetU64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_220b281aa_AsU64(_431434_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_20600a552:;
				};
			}
		}
		else if (_220b271cb_IsFloat(_431421_t)) {
			_case_begin_20600a1cd:;
			{
				{
					auto _match_expr{ _220186b48_BitsizeOf(_220177bc2_RealKindOf(_431421_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_206012911:;
						{
							_220b288e7_SetF64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_220b282dc_AsF64(_431434_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_206012999:;
						{
							_220b288e7_SetF64(_431434_d.get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_220b282dc_AsF64(_431434_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_20601104c:;
				};
			}
		}
		_match_end_206009ead:;
	};
}



inline void _220c08631_updateModelToGenericIns(jule::Any& _434833_m, jule::Ptr<_220b31a10_FnIns>& _434852_f) {
	{
		auto &_match_expr{ _434833_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20601399a:;
			{
				_434833_m=jule::Any(_434852_f, &__jule_any_type8);
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_206013a11:;
			{
				_434833_m.cast_ptr<_220b2c9ea_StructSubIdentExprModel>(&__jule_any_type72).get()._field_Method=_434852_f;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_206013a77:;
			{
				_434833_m.cast_ptr<_220b2cbd7_StructStaticIdentExprModel>(&__jule_any_type104).get()._field_Method=_434852_f;
			}
		}
		_match_end_20600a80a:;
	};
}



inline jule::Bool _220c08873_pushSubIdentFromExpr(jule::Any _435929_expr, jule::Ptr<_21eea26bc_SubIdentTypeDecl>& _435950_t) {
	{
		auto &_match_expr{ _435929_expr };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_2060160c9:;
			{
				jule::Ptr<_21eea7b89_IdentExpr> _436217_e = _435929_expr.cast_ptr<_21eea7b89_IdentExpr>(&__jule_any_type87);;
				_435950_t.get()._field_Idents = jule::alloc_for_append(_435950_t.get()._field_Idents,1);_435950_t.get()._field_Idents.__push(jule::new_ptr<_21eea206d_IdentTypeDecl>(_21eea206d_IdentTypeDecl{._field_Token=_436217_e.get()._field_Token, ._field_Ident=_436217_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_206016140:;
			{
				jule::Ptr<_21eeae289_SubIdentExpr> _436817_e = _435929_expr.cast_ptr<_21eeae289_SubIdentExpr>(&__jule_any_type93);;
				if ((!(_220c08873_pushSubIdentFromExpr(_436817_e.get()._field_Expr.get()._field_Kind,_435950_t)))) {
					return false;;
				};
				_435950_t.get()._field_Idents = jule::alloc_for_append(_435950_t.get()._field_Idents,1);_435950_t.get()._field_Idents.__push(jule::new_ptr<_21eea206d_IdentTypeDecl>(_21eea206d_IdentTypeDecl{._field_Token=_436817_e.get()._field_Ident, ._field_Ident=_436817_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_206015a35:;
			{
				return false;;
			}
		}
		_match_end_2060159d0:;
	};
	return true;;
}



inline jule::Bool _220c279c4_kindUsesGenerics(jule::Ptr<_220c0ae5d_TypeKind>& _158526_k, jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>>& _158541_generics) {
	{
		auto &expr = _158541_generics;
		auto it = expr.begin();
		_iter_begin_206325b58:;
		if (it != expr.end()) {
			jule::Ptr<_21eeb3b0c_GenericDecl> &_158612_g = *it;
			{
				if (static__220c275c8_exist(_158612_g.get()._field_Ident,_158526_k)) {
					return true;;
				};
			}
			_iter_next_206325b58:;
			++it;
			goto _iter_begin_206325b58;
		}
		_iter_end_206325b58:;
	};
	return false;;
}



inline jule::Bool _220c27d59_hasDirective(jule::Slice<jule::Ptr<_21ee6d710_Directive>>& _159522_directives, jule::Str _159553_tag) {
	{
		auto &expr = _159522_directives;
		auto it = expr.begin();
		_iter_begin_206326241:;
		if (it != expr.end()) {
			jule::Ptr<_21ee6d710_Directive> _159617_dr = *it;
			{
				if ((_159617_dr.get()._field_Tag.get()._field_Kind == _159553_tag)) {
					return true;;
				};
			}
			_iter_next_206326241:;
			++it;
			goto _iter_begin_206326241;
		}
		_iter_end_206326241:;
	};
	return false;;
}



inline jule::Bool _220c28101_canGetPtr(jule::Ptr<_220bceecb_Data>& _160419_d) {
	if (((!(_160419_d.get()._field_Lvalue)) || _220bd088e_IsConst(_160419_d.ptr()))) {
		return false;;
	};
	{
		
		if (((_220c0e4d3_Fn(_160419_d.get()._field_Kind.ptr()) != nullptr) || (_220c0da32_Enum(_160419_d.get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_2063286d8:;
			{
				return false;;
			}
		}
		else {
			_case_begin_206328012:;
			{
				return true;;
			}
		}
		_match_end_206327eac:;
	};
}



inline jule::Bool _220c28420_isValidForSptrType(jule::Ptr<_220c0ae5d_TypeKind>& _161728_t) {
	jule::Ptr<_21eec33d0_StructIns> _161813_s = _220c0e747_Struct(_161728_t.ptr());;
	if ((((_161813_s != nullptr) && (_161813_s.get()._field_Decl != nullptr)) && _161813_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _220c286b7_isValidForRef(jule::Ptr<_220c0ae5d_TypeKind>& _162623_t) {
	return (_220c0e4d3_Fn(_162623_t.ptr()) == nullptr);;
}



inline jule::Bool _220c28981_isBuiltinStrConvertable(jule::Ptr<_220c0ae5d_TypeKind>& _162933_t) {
	return (((!(_220c0c107_Void(_162933_t.ptr()))) && (_220c0e4d3_Fn(_162933_t.ptr()) == nullptr)) && (_220c0ee84_Tup(_162933_t.ptr()) == nullptr));;
}



inline jule::Str _220c28c06_buildLinkPathByTokens(jule::Slice<jule::Ptr<_21d81d743_Token>>& _163327_tokens) {
	jule::Str _163413_s = _163327_tokens[0LL].get()._field_Kind;;
	{
		auto expr = _163327_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_20632c3bd:;
		if (it != expr.end()) {
			jule::Ptr<_21d81d743_Token> &_163512_token = *it;
			{
				_163413_s+=jule::Str("::", 2);
				_163413_s+=_163512_token.get()._field_Kind;
			}
			_iter_next_20632c3bd:;
			++it;
			goto _iter_begin_20632c3bd;
		}
		_iter_end_20632c3bd:;
	};
	return _163413_s;;
}



inline jule::Ptr<_220c10baa_Prim> _220c290ad_buildPrimType(jule::Str _164218_kind) {
	return jule::new_ptr<_220c10baa_Prim>(_220c10baa_Prim{._field_Kind=_164218_kind});;
}



inline jule::Ptr<_21eec3006_Struct> _220c29355_getStructFromKind(jule::Ptr<_220c0ae5d_TypeKind> _164826_k) {
	{
		
		if ((_164826_k == nullptr)) {
			_case_begin_20632d5cd:;
			{
				return nullptr;;
			}
		}
		else if ((_220c0e747_Struct(_164826_k.ptr()) != nullptr)) {
			_case_begin_20632d644:;
			{
				return _220c0e747_Struct(_164826_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_220c0d559_Sptr(_164826_k.ptr()) != nullptr)) {
			_case_begin_20632d6aa:;
			{
				return _220c29355_getStructFromKind(_220c0d559_Sptr(_164826_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_220c0e26e_Slc(_164826_k.ptr()) != nullptr)) {
			_case_begin_20632d721:;
			{
				return _220c29355_getStructFromKind(_220c0e26e_Slc(_164826_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_220c0e00a_Arr(_164826_k.ptr()) != nullptr)) {
			_case_begin_20632d9a7:;
			{
				return _220c29355_getStructFromKind(_220c0e00a_Arr(_164826_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_220c0d7bd_Ptr(_164826_k.ptr()) != nullptr)) {
			_case_begin_20632da1d:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_20632d567:;
			{
				return nullptr;;
			}
		}
		_match_end_20632cac7:;
	};
}



inline jule::Bool _220c295ec_isPrim(jule::Str _167111_kind) {
	return ((((((((((((((((_167111_kind == jule::Str("i8", 2)) || (_167111_kind == jule::Str("i16", 3))) || (_167111_kind == jule::Str("i32", 3))) || (_167111_kind == jule::Str("i64", 3))) || (_167111_kind == jule::Str("u8", 2))) || (_167111_kind == jule::Str("u16", 3))) || (_167111_kind == jule::Str("u32", 3))) || (_167111_kind == jule::Str("u64", 3))) || (_167111_kind == jule::Str("f32", 3))) || (_167111_kind == jule::Str("f64", 3))) || (_167111_kind == jule::Str("int", 3))) || (_167111_kind == jule::Str("uint", 4))) || (_167111_kind == jule::Str("uintptr", 7))) || (_167111_kind == jule::Str("bool", 4))) || (_167111_kind == jule::Str("str", 3))) || (_167111_kind == jule::Str("any", 3)));;
}



inline void _220c298a5_applyImplicitCast(jule::Ptr<_220c0ae5d_TypeKind>& _169027_dest, jule::Ptr<_220bceecb_Data>& _169049_d) {
	if (_220c0bd93_IsNil(_169049_d.get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_220c10baa_Prim> _16949_destPrim = _220c0d2e5_Prim(_169027_dest.ptr());;
	jule::Ptr<_220c10baa_Prim> _16959_prim = _220c0d2e5_Prim(_169049_d.get()._field_Kind.ptr());;
	if ((_16949_destPrim != nullptr)) {
		if (_220c14153_IsAny(_16949_destPrim.ptr())) {
			if (((_16959_prim == nullptr) || (!(_220c14153_IsAny(_16959_prim.ptr()))))) {
				_220c075db_applyCastKind(_169049_d,_169027_dest);
			};
			return;;
		};
		if (((((((!(_220c0bb2e_CppLinked(_169049_d.get()._field_Kind.ptr()))) && (!(_169049_d.get()._field_Kind.get()._field_Variadic))) && (!(_169049_d.get()._field_Lvalue))) && (!(_220bd088e_IsConst(_169049_d.ptr())))) && (_16959_prim != nullptr)) && _220b2730d_IsNum(_16959_prim.get()._field_Kind))) {
			_220c075db_applyCastKind(_169049_d,_169027_dest);
		};
		return;;
	};
	if (((_220c0e9ab_Trait(_169027_dest.ptr()) != nullptr) && (_220c0e9ab_Trait(_169049_d.get()._field_Kind.ptr()) == nullptr))) {
		_220c07333_applyCastKindModel(_169049_d,_169027_dest);
		return;;
	};
	if (((_220c0dc96_TypeEnum(_169027_dest.ptr()) != nullptr) && (_220c0dc96_TypeEnum(_169049_d.get()._field_Kind.ptr()) == nullptr))) {
		_220c07333_applyCastKindModel(_169049_d,_169027_dest);
		return;;
	};
}



inline __jule_tuple_x_220bca1a2_SymbolTable__jule_tuple_s_21d4e511d_Log _220c2c91e_buildSymbols(jule::Ptr<_21ee6c665_Ast>& _1622_ast, jule::Trait<_220b5d6a7_Importer>& _1638_importer, jule::Ptr<_220b3522d_symbolBuilder> _1662_owner) {
	__jule_tuple_x_220bca1a2_SymbolTable__jule_tuple_s_21d4e511d_Log __jule_func_result;
	jule::Ptr<_220b3522d_symbolBuilder> _1713_sb = jule::new_ptr<_220b3522d_symbolBuilder>(_220b3522d_symbolBuilder{._field_owner=_1662_owner, ._field_importer=_1638_importer, ._field_ast=_1622_ast, });;
	_220b373a6_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_220b6427e_Package__jule_tuple_s_21d4e511d_Log _220c2cd4d_analyzePackage(jule::Slice<jule::Ptr<_21ee6c665_Ast>>& _3024_files, jule::Trait<_220b5d6a7_Importer>& _3044_importer, jule::I64& _3065_flags) {
	__jule_tuple_x_220b6427e_Package__jule_tuple_s_21d4e511d_Log __jule_func_result;
	jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_220bca1a2_SymbolTable>>::alloc(0LL, _3024_files.len());;
	{
		auto &expr = _3024_files;
		auto it = expr.begin();
		_iter_begin_2064331e9:;
		if (it != expr.end()) {
			jule::Ptr<_21ee6c665_Ast> _3317_f = *it;
			{
				jule::Ptr<_220bca1a2_SymbolTable> _3418_table;;
				jule::Slice<_21d4e511d_Log> _3429_errors;;
				({
					__jule_tuple_x_220bca1a2_SymbolTable__jule_tuple_s_21d4e511d_Log __jule_assign_result = _220c2c91e_buildSymbols(_3317_f,_3044_importer,nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_2064331e9:;
			++it;
			goto _iter_begin_2064331e9;
		}
		_iter_end_2064331e9:;
	};
	jule::Ptr<_220b69471_Sema> _4113_sema = jule::new_ptr<_220b69471_Sema>(_220b69471_Sema{._field_flags=_3065_flags});;
	_220b843c0_check(_4113_sema, _3213_tables);
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_220b6427e_Package> _4913_pkg = jule::new_ptr<_220b6427e_Package>(_220b6427e_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _4913_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_220b6427e_Package__jule_tuple_s_21d4e511d_Log _220c2d238_AnalyzePackage(jule::Slice<jule::Ptr<_21ee6c665_Ast>> _7323_files, jule::Trait<_220b5d6a7_Importer> _7342_importer, jule::I64 _7362_flags) {
	__jule_tuple_x_220b6427e_Package__jule_tuple_s_21d4e511d_Log __jule_func_result;
	if ((_7323_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_220b6427e_Package> _7714_package;;
	jule::Slice<_21d4e511d_Log> _7727_logs;;
	({
		__jule_tuple_x_220b6427e_Package__jule_tuple_s_21d4e511d_Log __jule_assign_result = _220c2cd4d_analyzePackage(_7323_files,_7342_importer,_7362_flags);
		_7714_package = __jule_assign_result.__jule_result_arg0;
		_7727_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7714_package;
	__jule_func_result.__jule_result_arg1 = _7727_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_220b31a10_FnIns> _220c392ee_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_20643bb09:;
			{
				static jule::Ptr<_220b31a10_FnIns> _2620_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cbcc34_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_20643c2be:;
			{
				static jule::Ptr<_220b31a10_FnIns> _2920_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cbd11e_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_20643c3ac:;
			{
				static jule::Ptr<_220b31a10_FnIns> _3220_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cbd509_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_20643c423:;
			{
				static jule::Ptr<_220b31a10_FnIns> _3520_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cbd8e4_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_20643be06:;
			{
				static jule::Ptr<_220b31a10_FnIns> _3820_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cbe010_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_20643be6c:;
			{
				static jule::Ptr<_220b31a10_FnIns> _4120_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cbe3ea_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_20643bee4:;
			{
				static jule::Ptr<_220b31a10_FnIns> _4420_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cc01ed_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_20643c06b:;
			{
				static jule::Ptr<_220b31a10_FnIns> _4720_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cc13ec_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_20643c49a:;
			{
				static jule::Ptr<_220b31a10_FnIns> _5020_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cc1e69_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_20643c522:;
			{
				static jule::Ptr<_220b31a10_FnIns> _5320_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cc27d8_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_20643c599:;
			{
				static jule::Ptr<_220b31a10_FnIns> _5620_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cc2bc3_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_20643c621:;
			{
				static jule::Ptr<_220b31a10_FnIns> _5920_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cc3289_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_20643bc91:;
			{
				return nullptr;;
			}
		}
		_match_end_20643bbe7:;
	};
}



inline jule::Ptr<_220c0a26a_TypeAlias> _220c3ae38_findBuiltinTypeAlias(jule::Str _6625_ident) {
	{
		auto &_match_expr{ _6625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_206444ace:;
			{
				static jule::Ptr<_220c0a26a_TypeAlias> _6920_t = jule::new_ptr<_220c0a26a_TypeAlias>(_220c0a26a_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_220c1033b_TypeSymbol>(_220c1033b_TypeSymbol{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _6920_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_206444b45:;
			{
				static jule::Ptr<_220c0a26a_TypeAlias> _7920_t = jule::new_ptr<_220c0a26a_TypeAlias>(_220c0a26a_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_220c1033b_TypeSymbol>(_220c1033b_TypeSymbol{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _7920_t;;
			}
		}
		else {
			_case_begin_206444518:;
			{
				return nullptr;;
			}
		}
		_match_end_206444040:;
	};
}



inline jule::Any _220c40811_findBuiltinDef(jule::Str _9319_ident) {
	jule::Ptr<_220b31a10_FnIns> _9413_f = _220c392ee_findBuiltinFn(_9319_ident);;
	if ((_9413_f != nullptr)) {
		return jule::Any(_9413_f, &__jule_any_type8);;
	};
	jule::Ptr<_220c0a26a_TypeAlias> _9813_ta = _220c3ae38_findBuiltinTypeAlias(_9319_ident);;
	if ((_9813_ta != nullptr)) {
		return jule::Any(_9813_ta, &__jule_any_type68);;
	};
	return nullptr;;
}



inline jule::Any _220c3e9b9_findBuiltinDefStdDebug(jule::Str _10527_ident) {
	{
		auto &_match_expr{ _10527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_206447a5a:;
			{
				static jule::Ptr<_220b31a10_FnIns> _10820_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cc4bc5_builtinCallerStdDebugOut), });;
				return jule::Any(_10820_f, &__jule_any_type8);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_206448264:;
			{
				static jule::Ptr<_220b31a10_FnIns> _11120_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cc50b0_builtinCallerStdDebugOutln), });;
				return jule::Any(_11120_f, &__jule_any_type8);;
			}
		}
		else {
			_case_begin_206447829:;
			{
				return nullptr;;
			}
		}
		_match_end_206447c36:;
	};
}



inline jule::Any _220c3eaeb_findBuiltinDefStdMem(jule::Str _11825_ident) {
	{
		auto &_match_expr{ _11825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_206449ae5:;
			{
				static jule::Ptr<_220b31a10_FnIns> _12120_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cc35ec_builtinCallerStdMemSizeOf), });;
				return jule::Any(_12120_f, &__jule_any_type8);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_206449b5b:;
			{
				static jule::Ptr<_220b31a10_FnIns> _12420_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cc3a1a_builtinCallerStdMemAlignOf), });;
				return jule::Any(_12420_f, &__jule_any_type8);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_206449919:;
			{
				static jule::Ptr<_220b31a10_FnIns> _12720_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cc3e38_builtinCallerStdMemFree), });;
				return jule::Any(_12720_f, &__jule_any_type8);;
			}
		}
		else {
			_case_begin_206447d79:;
			{
				return nullptr;;
			}
		}
		_match_end_206448b5a:;
	};
}



inline jule::Any _220c36a7c_findBuiltinDefStdJuleIntegrated(jule::Str _13436_ident) {
	{
		auto &_match_expr{ _13436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_20644bdb1:;
			{
				static jule::Ptr<_220b31a10_FnIns> _13720_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cc4367_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_13720_f, &__jule_any_type8);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_20644be27:;
			{
				static jule::Ptr<_220b31a10_FnIns> _14020_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_Decl=jule::new_ptr<_220b31636_Fn>(_220b31636_Fn{._field_Generics=jule::Slice<jule::Ptr<_21eeb3b0c_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cc4785_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_14020_f, &__jule_any_type8);;
			}
		}
		else {
			_case_begin_206449bc2:;
			{
				return nullptr;;
			}
		}
		_match_end_20644ae26:;
	};
}



inline jule::Any _220c36bae_findPackageBuiltinDef(jule::Str _15226_link_path, jule::Str _15242_ident) {
	{
		auto &_match_expr{ _15226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_20644dcd6:;
			{
				return _220c3e9b9_findBuiltinDefStdDebug(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_20644dd4c:;
			{
				return _220c3eaeb_findBuiltinDefStdMem(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_20644db0a:;
			{
				return _220c36a7c_findBuiltinDefStdJuleIntegrated(_15242_ident);;
			}
		}
		else {
			_case_begin_20644d6ed:;
			{
				return nullptr;;
			}
		}
		_match_end_20644c80c:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220cbbd65_builtinCallerCommonPlain(jule::Ptr<_220bd1a49_Eval>& _16534_e, jule::Ptr<_21eeaed17_FnCallExpr>& _16549_fc, jule::Ptr<_220bceecb_Data>& _16571_d) {
	jule::Ptr<_220b31a10_FnIns> _16613_f = _220c0e4d3_Fn(_16571_d.get()._field_Kind.ptr());;
	_220bc1c6a_fnCallArgChecker _16813_fcac = _220bc1c6a_fnCallArgChecker{._field_e=_16534_e, ._field_args=_16549_fc.get()._field_Args, ._field_errorToken=_16549_fc.get()._field_Token, ._field_f=_16613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_220bc4135_check(&_16813_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_220b2b763_FnCallExprModel> _17913_model = jule::new_ptr<_220b2b763_FnCallExprModel>(_220b2b763_FnCallExprModel{._field_Token=_16549_fc.get()._field_Token, ._field_Func=_16613_f, ._field_Expr=_16571_d.get()._field_Model, ._field_Args=_16813_fcac._field_argModels, });;
	if ((_16613_f.get()._field_Result == nullptr)) {
		_16571_d=_220c077d9_buildVoidData();
	} else {
		_16571_d=jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=_16613_f.get()._field_Result, });
	};
	_16571_d.get()._field_Model=jule::Any(_17913_model, &__jule_any_type35);
	return _16571_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cbc11d_builtinCallerCommon(jule::Ptr<_220bd1a49_Eval>& _19829_e, jule::Ptr<_21eeaed17_FnCallExpr>& _19844_fc, jule::Ptr<_220bceecb_Data>& _19866_d) {
	return _220cbbd65_builtinCallerCommonPlain(_19829_e,_19844_fc,_19866_d);;
}



inline jule::Ptr<_220bceecb_Data> _220cbc508_builtinCallerCommonMut(jule::Ptr<_220bd1a49_Eval>& _20232_e, jule::Ptr<_21eeaed17_FnCallExpr>& _20247_fc, jule::Ptr<_220bceecb_Data>& _20269_d) {
	if ((!(_20269_d.get()._field_Mutable))) {
		_220bd2055_pushErr(_20232_e.ptr(), _20247_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _220cbc11d_builtinCallerCommon(_20232_e,_20247_fc,_20269_d);;
}



inline jule::Ptr<_220bceecb_Data> _220cbc849_builtinCallerError(jule::Ptr<_220bd1a49_Eval>& _20928_e, jule::Ptr<_21eeaed17_FnCallExpr>& _20943_fc) {
	if ((_20943_fc.get()._field_Args.len() < 1LL)) {
		_220bd2055_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_20943_fc.get()._field_Args.len() > 1LL)) {
		_220bd2055_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _21713_expr = _220bec46b_evalExpr(_20928_e, _20943_fc.get()._field_Args[0LL]);;
	if ((_21713_expr == nullptr)) {
		return nullptr;;
	};
	if (_220bd03b6_IsNil(_21713_expr.ptr())) {
		_220bd2055_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _22613_d = _220c077d9_buildVoidData();;
	_22613_d.get()._field_Model=jule::Any(jule::new_ptr<_220b30217_BuiltinErrorCallExprModel>(_220b30217_BuiltinErrorCallExprModel{._field_Err=_21713_expr}), &__jule_any_type23);
	return _22613_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cbcc34_builtinCallerOut(jule::Ptr<_220bd1a49_Eval>& _23126_e, jule::Ptr<_21eeaed17_FnCallExpr>& _23141_fc, jule::Ptr<_220bceecb_Data>& ) {
	if ((_23141_fc.get()._field_Args.len() < 1LL)) {
		_220bd2055_pushErr(_23126_e.ptr(), _23141_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_23141_fc.get()._field_Args.len() > 1LL)) {
		_220bd2055_pushErr(_23126_e.ptr(), _23141_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _24013_expr = _220bec46b_evalExpr(_23126_e, _23141_fc.get()._field_Args[0LL]);;
	if ((_24013_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_220c28981_isBuiltinStrConvertable(_24013_expr.get()._field_Kind)))) {
		_220bd2055_pushErr(_23126_e.ptr(), _23141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_220bceecb_Data> _25013_d = _220c077d9_buildVoidData();;
	_25013_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2d677_BuiltinOutCallExprModel>(_220b2d677_BuiltinOutCallExprModel{._field_Expr=_24013_expr.get()._field_Model, }), &__jule_any_type28);
	return _25013_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cbd11e_builtinCallerOutln(jule::Ptr<_220bd1a49_Eval>& _25528_e, jule::Ptr<_21eeaed17_FnCallExpr>& _25543_fc, jule::Ptr<_220bceecb_Data>& _25565_d) {
	_25565_d=_220cbcc34_builtinCallerOut(_25528_e,_25543_fc,_25565_d);
	if ((_25565_d == nullptr)) {
		return nullptr;;
	};
	_25565_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2d864_BuiltinOutlnCallExprModel>(_220b2d864_BuiltinOutlnCallExprModel{._field_Expr=_25565_d.get()._field_Model.cast_ptr<_220b2d677_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Expr, }), &__jule_any_type29);
	return _25565_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cbd509_builtinCallerNew(jule::Ptr<_220bd1a49_Eval>& _26726_e, jule::Ptr<_21eeaed17_FnCallExpr>& _26741_fc, jule::Ptr<_220bceecb_Data>& _26763_d) {
	if ((_26741_fc.get()._field_Args.len() < 1LL)) {
		_220bd2055_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_26741_fc.get()._field_Args.len() > 2LL)) {
		_220bd2055_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _27613_t = _220bebd50_evalExprKind(_26726_e, _26741_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_27613_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_27613_t.get()._field_Decl))) {
		_220bd2055_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_220c28420_isValidForSptrType(_27613_t.get()._field_Kind)))) {
		jule::Ptr<_21eec33d0_StructIns> _28717_s = _220c0e747_Struct(_27613_t.get()._field_Kind.ptr());;
		if ((((_28717_s != nullptr) && (_28717_s.get()._field_Decl != nullptr)) && _28717_s.get()._field_Decl.get()._field_CppLinked)) {
			_220bd2055_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	_26763_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(jule::new_ptr<_220c1443e_Sptr>(_220c1443e_Sptr{._field_Elem=_27613_t.get()._field_Kind}), 7)});
	if ((_26741_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_220c0ae5d_TypeKind> _30117_old = _26726_e.get()._field_prefix;;
		_26726_e.get()._field_prefix=_27613_t.get()._field_Kind;
		jule::Ptr<_220bceecb_Data> _30417_init = _220bec46b_evalExpr(_26726_e, _26741_fc.get()._field_Args[1LL]);;
		_26726_e.get()._field_prefix=_30117_old;
		if ((_30417_init != nullptr)) {
			jule::Ptr<_21d81d743_Token> _30921_token = _26741_fc.get()._field_Args[1LL].get()._field_Token;;
			;
			_220b76e2e_checkValidityForInitExpr(_26726_e.get()._field_s, (!(_26726_e.get()._field_immutable)),false,_27613_t.get()._field_Kind,_30417_init,_30921_token);
			_220b74019_checkAssignType(_26726_e.get()._field_s, false,_27613_t.get()._field_Kind,_30417_init,_30921_token);
			_26763_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2dc3d_BuiltinNewCallExprModel>(_220b2dc3d_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, ._field_Init=_30417_init.get()._field_Model}), &__jule_any_type120);
		};
	} else {
		_26763_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2dc3d_BuiltinNewCallExprModel>(_220b2dc3d_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, }), &__jule_any_type120);
	};
	return _26763_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cbd8e4_builtinCallerPanic(jule::Ptr<_220bd1a49_Eval>& _32928_e, jule::Ptr<_21eeaed17_FnCallExpr>& _32943_fc, jule::Ptr<_220bceecb_Data>& ) {
	if ((_32943_fc.get()._field_Args.len() < 1LL)) {
		_220bd2055_pushErr(_32928_e.ptr(), _32943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_32943_fc.get()._field_Args.len() > 1LL)) {
		_220bd2055_pushErr(_32928_e.ptr(), _32943_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _33813_expr = _220bec46b_evalExpr(_32928_e, _32943_fc.get()._field_Args[0LL]);;
	if ((_33813_expr == nullptr)) {
		return nullptr;;
	};
	if (((_220c0d2e5_Prim(_33813_expr.get()._field_Kind.ptr()) == nullptr) || (!(_220c13dde_IsStr(_220c0d2e5_Prim(_33813_expr.get()._field_Kind.ptr()).ptr()))))) {
		_220bd2055_pushErr(_32928_e.ptr(), _32943_fc.get()._field_Token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _34713_d = _220c077d9_buildVoidData();;
	_34713_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2de2a_BuiltinPanicCallExprModel>(_220b2de2a_BuiltinPanicCallExprModel{._field_Token=_32943_fc.get()._field_Token, ._field_Expr=_33813_expr.get()._field_Model}), &__jule_any_type30);
	return _34713_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cbe010_builtinCallerMake(jule::Ptr<_220bd1a49_Eval>& _35527_e, jule::Ptr<_21eeaed17_FnCallExpr>& _35542_fc, jule::Ptr<_220bceecb_Data>& _35564_d) {
	if ((_35542_fc.get()._field_Args.len() < 2LL)) {
		if ((_35542_fc.get()._field_Args.len() == 1LL)) {
			_220bd2055_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type6)}));
			return nullptr;;
		};
		_220bd2055_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type6)}));
		return nullptr;;
	};
	jule::Ptr<_220bceecb_Data> _36513_t = _220bebd50_evalExprKind(_35527_e, _35542_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_36513_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_36513_t.get()._field_Decl))) {
		_220bd2055_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_35542_fc.get()._field_Args.len() > 3LL)) {
		_220bd2055_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Args[3LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_35564_d.get()._field_Kind=_36513_t.get()._field_Kind;
	jule::Ptr<_220bceecb_Data> _38113_lenExpr = _220bec46b_evalExpr(_220b73711_evalp(_35527_e.get()._field_s, _35527_e.get()._field_lookup,_36513_t.get()._field_Kind), _35542_fc.get()._field_Args[1LL]);;
	if ((_38113_lenExpr == nullptr)) {
		return nullptr;;
	};
	_220bda646_checkIntegerIndexingByData(_35527_e.ptr(), _38113_lenExpr,_35542_fc.get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_220b2e304_BuiltinMakeCallExprModel> _38813_model = jule::new_ptr<_220b2e304_BuiltinMakeCallExprModel>(_220b2e304_BuiltinMakeCallExprModel{._field_Kind=_36513_t.get()._field_Kind, ._field_Len=_38113_lenExpr.get()._field_Model, });;
	_35564_d.get()._field_Model=jule::Any(_38813_model, &__jule_any_type121);
	if ((_35542_fc.get()._field_Args.len() == 3LL)) {
		jule::Ptr<_220bceecb_Data> _39417_capExpr = _220bec46b_evalExpr(_220b73711_evalp(_35527_e.get()._field_s, _35527_e.get()._field_lookup,_36513_t.get()._field_Kind), _35542_fc.get()._field_Args[2LL]);;
		if ((_39417_capExpr == nullptr)) {
			return _35564_d;;
		};
		_220bda646_checkIntegerIndexingByData(_35527_e.ptr(), _39417_capExpr,_35542_fc.get()._field_Args[2LL].get()._field_Token);
		_38813_model.get()._field_Cap=_39417_capExpr.get()._field_Model;
	};
	return _35564_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cbe3ea_builtinCallerAppend(jule::Ptr<_220bd1a49_Eval>& _40429_e, jule::Ptr<_21eeaed17_FnCallExpr>& _40444_fc, jule::Ptr<_220bceecb_Data>& _40466_d) {
	if ((_40444_fc.get()._field_Args.len() < 2LL)) {
		if ((_40444_fc.get()._field_Args.len() == 1LL)) {
			_220bd2055_pushErr(_40429_e.ptr(), _40444_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type6)}));
			return nullptr;;
		};
		_220bd2055_pushErr(_40429_e.ptr(), _40444_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type6)}));
		return nullptr;;
	};
	jule::Ptr<_220bceecb_Data> _41413_t = _220bec46b_evalExpr(_40429_e, _40444_fc.get()._field_Args[0LL]);;
	if ((_41413_t == nullptr)) {
		return nullptr;;
	};
	if ((_220c0e26e_Slc(_41413_t.get()._field_Kind.ptr()) == nullptr)) {
		_220bd2055_pushErr(_40429_e.ptr(), _40444_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_220b31a10_FnIns> _42413_f = jule::new_ptr<_220b31a10_FnIns>(_220b31a10_FnIns{._field_Params=jule::Slice<jule::Ptr<_220b31823_ParamIns>>::make({jule::new_ptr<_220b31823_ParamIns>(_220b31823_ParamIns{._field_Decl=jule::new_ptr<_220b31449_Param>(_220b31449_Param{._field_Mutable=true, }), ._field_Kind=_41413_t.get()._field_Kind}),jule::new_ptr<_220b31823_ParamIns>(_220b31823_ParamIns{._field_Decl=jule::new_ptr<_220b31449_Param>(_220b31449_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_220c0e26e_Slc(_41413_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41413_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_220bceecb_Data>(jule::Ptr<_220bd1a49_Eval>&,jule::Ptr<_21eeaed17_FnCallExpr>&,jule::Ptr<_220bceecb_Data>&)>(_220cbbd65_builtinCallerCommonPlain), });;
	_40466_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_42413_f, 1)});
	_40466_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2d0b1_CommonIdentExprModel>(_220b2d0b1_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type73);
	_40466_d=_220cbbd65_builtinCallerCommonPlain(_40429_e,_40444_fc,_40466_d);
	if ((_40466_d != nullptr)) {
		jule::Ptr<_220b2b763_FnCallExprModel> _45217_model = _40466_d.get()._field_Model.cast_ptr<_220b2b763_FnCallExprModel>(&__jule_any_type35);;
		_40466_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2e4e1_BuiltinAppendCallExprModel>(_220b2e4e1_BuiltinAppendCallExprModel{._field_Dest=_45217_model.get()._field_Args[0LL], ._field_Elements=_45217_model.get()._field_Args[1LL]}), &__jule_any_type26);
	};
	return _40466_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cbe87e_callerCopySlice(jule::Ptr<_220bceecb_Data>& _46125_dest, jule::Ptr<_220bd1a49_Eval>& _46143_e, jule::Ptr<_21eeaed17_FnCallExpr>& _46158_fc, jule::Ptr<_220bceecb_Data>& _46180_d) {
	if ((!(_46125_dest.get()._field_Mutable))) {
		_220bd2055_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _46613_src = _220bec46b_evalExpr(_46143_e, _46158_fc.get()._field_Args[1LL]);;
	if ((_46613_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_220c14d9b_Slc> _47013_slc = _220c0e26e_Slc(_46613_src.get()._field_Kind.ptr());;
	if ((_47013_slc != nullptr)) {
		if (((!(_46613_src.get()._field_Mutable)) && _220c0c5d0_Mutable(_47013_slc.get()._field_Elem.ptr()))) {
			_220bd2055_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_220c0b667_Equal(_46125_dest.get()._field_Kind, _46613_src.get()._field_Kind)))) {
			_220bd2055_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_46125_dest.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type6)}));
		};
	} else {
		jule::Ptr<_220c10baa_Prim> _48013_destPrim = _220c0d2e5_Prim(_220c0e26e_Slc(_46125_dest.get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_220c10baa_Prim> _48113_prim = _220c0d2e5_Prim(_46613_src.get()._field_Kind.ptr());;
		if (((((_48013_destPrim == nullptr) || (_48113_prim == nullptr)) || (!(_220c13dde_IsStr(_48113_prim.ptr())))) || (!(_220c124b4_IsU8(_48013_destPrim.ptr()))))) {
			_220bd2055_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_46125_dest.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type6)}));
		};
	};
	_46180_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("int", 3)), 6)});
	_46180_d.get()._field_Model=jule::Any(jule::new_ptr<_220b3002a_BuiltinCopyCallExprModel>(_220b3002a_BuiltinCopyCallExprModel{._field_Dest=_46125_dest, ._field_Src=_46613_src}), &__jule_any_type32);
	return _46180_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cbed13_callerCopyStr(jule::Ptr<_220bceecb_Data>& _49523_dest, jule::Ptr<_220bd1a49_Eval>& _49541_e, jule::Ptr<_21eeaed17_FnCallExpr>& _49556_fc, jule::Ptr<_220bceecb_Data>& _49578_d) {
	if ((!(_49523_dest.get()._field_Mutable))) {
		_220bd2055_pushErr(_49541_e.ptr(), _49556_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _50013_src = _220bec46b_evalExpr(_49541_e, _49556_fc.get()._field_Args[1LL]);;
	if ((_50013_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_220c0d2e5_Prim(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20648c709:;
			{
				if (_220c13dde_IsStr(_220c0d2e5_Prim(_50013_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_220c0e26e_Slc(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20648c770:;
			{
				jule::Ptr<_220c14d9b_Slc> _51017_slc = _220c0e26e_Slc(_50013_src.get()._field_Kind.ptr());;
				if (((_220c0d2e5_Prim(_51017_slc.get()._field_Elem.ptr()) != nullptr) && _220c124b4_IsU8(_220c0d2e5_Prim(_51017_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_20648c4d9:;
	};
	_220bd2055_pushErr(_49541_e.ptr(), _49556_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_49523_dest.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_220c0b359_Str(_50013_src.get()._field_Kind.ptr()), &__jule_any_type6)}));
	_julec_label_end:;
	_49578_d.get()._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("int", 3)), 6)});
	_49578_d.get()._field_Model=jule::Any(jule::new_ptr<_220b3002a_BuiltinCopyCallExprModel>(_220b3002a_BuiltinCopyCallExprModel{._field_Dest=_49523_dest, ._field_Src=_50013_src}), &__jule_any_type32);
	return _49578_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cc01ed_builtinCallerCopy(jule::Ptr<_220bd1a49_Eval>& _52527_e, jule::Ptr<_21eeaed17_FnCallExpr>& _52542_fc, jule::Ptr<_220bceecb_Data>& _52564_d) {
	if ((_52542_fc.get()._field_Args.len() < 2LL)) {
		if ((_52542_fc.get()._field_Args.len() == 1LL)) {
			_220bd2055_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type6)}));
			return nullptr;;
		};
		_220bd2055_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_52542_fc.get()._field_Args.len() > 2LL)) {
		_220bd2055_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _53813_dest = _220bec46b_evalExpr(_52527_e, _52542_fc.get()._field_Args[0LL]);;
	{
		
		if ((_53813_dest == nullptr)) {
			_case_begin_20649799a:;
			{
				return nullptr;;
			}
		}
		else if ((_220c0e26e_Slc(_53813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206497a11:;
			{
				return _220cbe87e_callerCopySlice(_53813_dest,_52527_e,_52542_fc,_52564_d);;
			}
		}
		else if (((_220c0d2e5_Prim(_53813_dest.get()._field_Kind.ptr()) != nullptr) && _220c13dde_IsStr(_220c0d2e5_Prim(_53813_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_206497802:;
			{
				return _220cbed13_callerCopyStr(_53813_dest,_52527_e,_52542_fc,_52564_d);;
			}
		}
		else {
			_case_begin_206496a21:;
			{
				_220bd2055_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2064969aa:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220cc053e_callerLenSlice(jule::Ptr<_220bceecb_Data>& _55224_expr, jule::Ptr<_220bceecb_Data>& _55242_d) {
	_55242_d.get()._field_Kind=_220bc9228_lenKind();
	_55242_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2e6cd_BuiltinLenCallExprModel>(_220b2e6cd_BuiltinLenCallExprModel{._field_Expr=_55224_expr}), &__jule_any_type122);
	return _55242_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cc0880_callerLenMap(jule::Ptr<_220bceecb_Data>& _56022_expr, jule::Ptr<_220bceecb_Data>& _56040_d) {
	_56040_d.get()._field_Kind=_220bc9228_lenKind();
	_56040_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2e6cd_BuiltinLenCallExprModel>(_220b2e6cd_BuiltinLenCallExprModel{._field_Expr=_56022_expr}), &__jule_any_type122);
	return _56040_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cc0bc1_callerLenArr(jule::Ptr<_220bceecb_Data>& _56822_expr, jule::Ptr<_220bceecb_Data>& _56840_d) {
	_56840_d.get()._field_Kind=_220bc9228_lenKind();
	_56840_d.get()._field_Constant=static__2200b58ac_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_220c0e00a_Arr(_56822_expr.get()._field_Kind.ptr()).get()._field_N)));
	_56840_d.get()._field_Model=jule::Any(_56840_d.get()._field_Constant, &__jule_any_type48);
	return _56840_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cc1012_callerLenStr(jule::Ptr<_220bceecb_Data>& _57522_expr, jule::Ptr<_220bceecb_Data>& _57540_d) {
	_57540_d.get()._field_Kind=_220bc9228_lenKind();
	if (_220bd088e_IsConst(_57522_expr.ptr())) {
		_57540_d.get()._field_Constant=static__2200b58ac_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_220b27d14_ReadStr(_57522_expr.get()._field_Constant.ptr()).len())));
		_57540_d.get()._field_Model=jule::Any(_57540_d.get()._field_Constant, &__jule_any_type48);
	} else {
		_57540_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2e6cd_BuiltinLenCallExprModel>(_220b2e6cd_BuiltinLenCallExprModel{._field_Expr=_57522_expr}), &__jule_any_type122);
	};
	return _57540_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cc13ec_builtinCallerLen(jule::Ptr<_220bd1a49_Eval>& _58826_e, jule::Ptr<_21eeaed17_FnCallExpr>& _58841_fc, jule::Ptr<_220bceecb_Data>& _58863_d) {
	if ((_58841_fc.get()._field_Args.len() < 1LL)) {
		_220bd2055_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_58841_fc.get()._field_Args.len() > 1LL)) {
		_220bd2055_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _59613_dest = _220bec46b_evalExpr(_58826_e, _58841_fc.get()._field_Args[0LL]);;
	{
		
		if ((_59613_dest == nullptr)) {
			_case_begin_2064a27da:;
			{
				return nullptr;;
			}
		}
		else if (_59613_dest.get()._field_Decl) {
			_case_begin_2064a2851:;
			{
				_220bd2055_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_220c0e26e_Slc(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2064a2642:;
			{
				return _220cc053e_callerLenSlice(_59613_dest,_58863_d);;
			}
		}
		else if ((_220c0e00a_Arr(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2064a26b9:;
			{
				return _220cc0bc1_callerLenArr(_59613_dest,_58863_d);;
			}
		}
		else if ((_220c0ec20_Map(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2064a18c7:;
			{
				return _220cc0880_callerLenMap(_59613_dest,_58863_d);;
			}
		}
		else if (((_220c0d2e5_Prim(_59613_dest.get()._field_Kind.ptr()) != nullptr) && _220c13dde_IsStr(_220c0d2e5_Prim(_59613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2064a193d:;
			{
				return _220cc1012_callerLenStr(_59613_dest,_58863_d);;
			}
		}
		else {
			_case_begin_2064a1861:;
			{
				_220bd2055_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2064a17ea:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220cc173d_callerCapSlice(jule::Ptr<_220bceecb_Data>& _61724_expr, jule::Ptr<_220bceecb_Data>& _61742_d) {
	_61742_d.get()._field_Kind=_220bc9228_lenKind();
	_61742_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2e8ba_BuiltinCapCallExprModel>(_220b2e8ba_BuiltinCapCallExprModel{._field_Expr=_61724_expr}), &__jule_any_type123);
	return _61742_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cc1a7e_callerCapStr(jule::Ptr<_220bceecb_Data>& _62522_expr, jule::Ptr<_220bceecb_Data>& _62540_d) {
	_62540_d.get()._field_Kind=_220bc9228_lenKind();
	if (_220bd088e_IsConst(_62522_expr.ptr())) {
		_62540_d.get()._field_Constant=static__2200b58ac_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_220b27d14_ReadStr(_62522_expr.get()._field_Constant.ptr()).cap())));
		_62540_d.get()._field_Model=jule::Any(_62540_d.get()._field_Constant, &__jule_any_type48);
	} else {
		_62540_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2e8ba_BuiltinCapCallExprModel>(_220b2e8ba_BuiltinCapCallExprModel{._field_Expr=_62522_expr}), &__jule_any_type123);
	};
	return _62540_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cc1e69_builtinCallerCap(jule::Ptr<_220bd1a49_Eval>& _63826_e, jule::Ptr<_21eeaed17_FnCallExpr>& _63841_fc, jule::Ptr<_220bceecb_Data>& _63863_d) {
	if ((_63841_fc.get()._field_Args.len() < 1LL)) {
		_220bd2055_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_63841_fc.get()._field_Args.len() > 1LL)) {
		_220bd2055_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _64613_dest = _220bec46b_evalExpr(_63826_e, _63841_fc.get()._field_Args[0LL]);;
	{
		
		if ((_64613_dest == nullptr)) {
			_case_begin_2064ac4d7:;
			{
				return nullptr;;
			}
		}
		else if (_64613_dest.get()._field_Decl) {
			_case_begin_2064ac54d:;
			{
				_220bd2055_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_220c0e26e_Slc(_64613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2064ac33e:;
			{
				return _220cc173d_callerCapSlice(_64613_dest,_63863_d);;
			}
		}
		else if (((_220c0d2e5_Prim(_64613_dest.get()._field_Kind.ptr()) != nullptr) && _220c13dde_IsStr(_220c0d2e5_Prim(_64613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2064ac3a5:;
			{
				return _220cc1a7e_callerCapStr(_64613_dest,_63863_d);;
			}
		}
		else {
			_case_begin_2064ab55d:;
			{
				_220bd2055_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2064ab4e7:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220cc23ed_callerDeleteMap(jule::Ptr<_220bd1a49_Eval>& _66325_e, jule::Ptr<_21eeaed17_FnCallExpr>& _66340_fc, jule::Ptr<_220bceecb_Data>& _66362_expr, jule::Ptr<_220bceecb_Data>& _66380_d) {
	if ((!(_66362_expr.get()._field_Mutable))) {
		_220bd2055_pushErr(_66325_e.ptr(), _66340_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	_66380_d=_220c077d9_buildVoidData();
	jule::Ptr<_220b2c7b9_BuiltinDeleteCallExprModel> _66813_model = jule::new_ptr<_220b2c7b9_BuiltinDeleteCallExprModel>(_220b2c7b9_BuiltinDeleteCallExprModel{._field_Dest=_66362_expr, });;
	if ((_66340_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_220bceecb_Data> _67217_key = _220bec46b_evalExpr(_66325_e, _66340_fc.get()._field_Args[1LL]);;
		{
			
			if ((_67217_key == nullptr)) {
				_case_begin_2064b3b4d:;
				{
					return nullptr;;
				}
			}
			else if (_67217_key.get()._field_Decl) {
				_case_begin_2064b2476:;
				{
					_220bd2055_pushErr(_66325_e.ptr(), _66340_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_2064b2410:;
				{
					;
					jule::Ptr<_220c0ae5d_TypeKind> _68121_keyType = _220c0ec20_Map(_66362_expr.get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_220b74019_checkAssignType(_66325_e.get()._field_s, false,_68121_keyType,_67217_key,_66340_fc.get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_2064b2399:;
		};
		_66813_model.get()._field_Key=_67217_key;
	};
	_66380_d.get()._field_Model=jule::Any(_66813_model, &__jule_any_type33);
	return _66380_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cc27d8_builtinCallerDelete(jule::Ptr<_220bd1a49_Eval>& _69229_e, jule::Ptr<_21eeaed17_FnCallExpr>& _69244_fc, jule::Ptr<_220bceecb_Data>& _69266_d) {
	if ((_69244_fc.get()._field_Args.len() < 1LL)) {
		_220bd2055_pushErr(_69229_e.ptr(), _69244_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_69244_fc.get()._field_Args.len() > 2LL)) {
		_220bd2055_pushErr(_69229_e.ptr(), _69244_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _70013_dest = _220bec46b_evalExpr(_69229_e, _69244_fc.get()._field_Args[0LL]);;
	{
		
		if ((_70013_dest == nullptr)) {
			_case_begin_2064b91e7:;
			{
				return nullptr;;
			}
		}
		else if (_70013_dest.get()._field_Decl) {
			_case_begin_2064b925d:;
			{
				_220bd2055_pushErr(_69229_e.ptr(), _69244_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_220c0ec20_Map(_70013_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2064b904e:;
			{
				return _220cc23ed_callerDeleteMap(_69229_e,_69244_fc,_70013_dest,_69266_d);;
			}
		}
		else {
			_case_begin_2064b826d:;
			{
				_220bd2055_pushErr(_69229_e.ptr(), _69244_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2064b8207:;
	};
}



inline jule::Ptr<_220bceecb_Data> _220cc2bc3_builtinCallerClone(jule::Ptr<_220bd1a49_Eval>& _71528_e, jule::Ptr<_21eeaed17_FnCallExpr>& _71543_fc, jule::Ptr<_220bceecb_Data>& ) {
	if ((_71543_fc.get()._field_Args.len() < 1LL)) {
		_220bd2055_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_71543_fc.get()._field_Args.len() > 1LL)) {
		_220bd2055_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _72413_d = _220bebd50_evalExprKind(_71528_e, _71543_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_72413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_220c0cd1c_SupportsCloning(_72413_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_220c0e26e_Slc(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_220c0ec20_Map(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_220c0e00a_Arr(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_220c0d559_Sptr(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_2064be3d9:;
				{
					{
						_220bd2055_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
					};
				}
			}
			else if ((_220c0e747_Struct(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_2064bdc46:;
				{
					{
						_220bd2055_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(jule::Str("Clone", 5), &__jule_any_type76)}));
					};
				}
			}
			else {
				_case_begin_2064bdbd0:;
				{
					{
						_220bd2055_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_220c0b359_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(jule::Str("Clone", 5), &__jule_any_type76)}));
					};
				}
			}
			_match_end_2064bd817:;
		};
	};
	_72413_d.get()._field_Mutable=true;
	_72413_d.get()._field_Model=jule::Any(jule::new_ptr<_220b2da51_BuiltinCloneCallExprModel>(_220b2da51_BuiltinCloneCallExprModel{._field_Expr=_72413_d.get()._field_Model}), &__jule_any_type27);
	return _72413_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cc3289_builtinCallerAssert(jule::Ptr<_220bd1a49_Eval>& _75729_e, jule::Ptr<_21eeaed17_FnCallExpr>& _75744_fc, jule::Ptr<_220bceecb_Data>& ) {
	if ((_75744_fc.get()._field_Args.len() < 1LL)) {
		_220bd2055_pushErr(_75729_e.ptr(), _75744_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_75744_fc.get()._field_Args.len() > 2LL)) {
		_220bd2055_pushErr(_75729_e.ptr(), _75744_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _76613_expr = _220bec46b_evalExpr(_75729_e, _75744_fc.get()._field_Args[0LL]);;
	if ((_76613_expr == nullptr)) {
		return nullptr;;
	};
	if (((_220c0d2e5_Prim(_76613_expr.get()._field_Kind.ptr()) == nullptr) || (!(_220c13b7a_IsBool(_220c0d2e5_Prim(_76613_expr.get()._field_Kind.ptr()).ptr()))))) {
		_220bd2055_pushErr(_75729_e.ptr(), _75744_fc.get()._field_Token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220b2e117_BuiltinAssertCallExprModel> _77513_model = jule::new_ptr<_220b2e117_BuiltinAssertCallExprModel>(_220b2e117_BuiltinAssertCallExprModel{._field_Token=_75744_fc.get()._field_Token, ._field_Expr=_76613_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if ((_75744_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_220bceecb_Data> _78317_log = _220bec46b_evalExpr(_75729_e, _75744_fc.get()._field_Args[1LL]);;
		if ((_78317_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_220bd088e_IsConst(_78317_log.ptr()))) || (_220c0d2e5_Prim(_78317_log.get()._field_Kind.ptr()) == nullptr)) || (!(_220c13dde_IsStr(_220c0d2e5_Prim(_78317_log.get()._field_Kind.ptr()).ptr()))))) {
			_220bd2055_pushErr(_75729_e.ptr(), _75744_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type6),jule::Any(_220c0b359_Str(_78317_log.get()._field_Kind.ptr()), &__jule_any_type6)}));
			return nullptr;;
		};
		_77513_model.get()._field_Log=_220b27d14_ReadStr(_78317_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_220bceecb_Data> _79613_d = _220c077d9_buildVoidData();;
	_79613_d.get()._field_Model=jule::Any(_77513_model, &__jule_any_type31);
	return _79613_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cc35ec_builtinCallerStdMemSizeOf(jule::Ptr<_220bd1a49_Eval>& _80135_e, jule::Ptr<_21eeaed17_FnCallExpr>& _80150_fc, jule::Ptr<_220bceecb_Data>& ) {
	jule::Ptr<_220bceecb_Data> _80213_result = jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_80150_fc.get()._field_Args.len() < 1LL)) {
		_220bd2055_pushErr(_80135_e.ptr(), _80150_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type6)}));
		return _80213_result;;
	};
	if ((_80150_fc.get()._field_Args.len() > 1LL)) {
		_220bd2055_pushErr(_80135_e.ptr(), _80150_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _81413_d = _220bebd50_evalExprKind(_80135_e, _80150_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_81413_d == nullptr)) {
		return _80213_result;;
	};
	_80213_result.get()._field_Model=jule::Any(jule::new_ptr<_220b30404_SizeofExprModel>(_220b30404_SizeofExprModel{._field_Expr=_81413_d.get()._field_Model}), &__jule_any_type124);
	return _80213_result;;
}



inline jule::Ptr<_220bceecb_Data> _220cc3a1a_builtinCallerStdMemAlignOf(jule::Ptr<_220bd1a49_Eval>& _82336_e, jule::Ptr<_21eeaed17_FnCallExpr>& _82351_fc, jule::Ptr<_220bceecb_Data>& ) {
	jule::Ptr<_220bceecb_Data> _82413_result = jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_82351_fc.get()._field_Args.len() < 1LL)) {
		_220bd2055_pushErr(_82336_e.ptr(), _82351_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type6)}));
		return _82413_result;;
	};
	if ((_82351_fc.get()._field_Args.len() > 1LL)) {
		_220bd2055_pushErr(_82336_e.ptr(), _82351_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _83613_d = _220bebd50_evalExprKind(_82336_e, _82351_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_83613_d == nullptr)) {
		return _82413_result;;
	};
	_82413_result.get()._field_Model=jule::Any(jule::new_ptr<_220b305e1_AlignofExprModel>(_220b305e1_AlignofExprModel{._field_Expr=_83613_d.get()._field_Model}), &__jule_any_type125);
	return _82413_result;;
}



inline jule::Ptr<_220bceecb_Data> _220cc3e38_builtinCallerStdMemFree(jule::Ptr<_220bd1a49_Eval>& _84533_e, jule::Ptr<_21eeaed17_FnCallExpr>& _84548_fc, jule::Ptr<_220bceecb_Data>& ) {
	if ((_84548_fc.get()._field_Args.len() < 1LL)) {
		_220bd2055_pushErr(_84533_e.ptr(), _84548_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_84548_fc.get()._field_Args.len() > 1LL)) {
		_220bd2055_pushErr(_84533_e.ptr(), _84548_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _85413_d = _220bebd50_evalExprKind(_84533_e, _84548_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_85413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_220c0caa8_PerformsRC(_85413_d.get()._field_Kind.ptr())))) {
		_220bd2055_pushErr(_84533_e.ptr(), _84548_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _86313_result = _220c077d9_buildVoidData();;
	_86313_result.get()._field_Model=jule::Any(jule::new_ptr<_220b30d94_FreeExprModel>(_220b30d94_FreeExprModel{._field_Expr=_85413_d.get()._field_Model}), &__jule_any_type34);
	return _86313_result;;
}



inline jule::Ptr<_220bceecb_Data> _220cc4367_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_220bd1a49_Eval>& _86845_e, jule::Ptr<_21eeaed17_FnCallExpr>& _86860_fc, jule::Ptr<_220bceecb_Data>& ) {
	if ((_86860_fc.get()._field_Args.len() < 1LL)) {
		_220bd2055_pushErr(_86845_e.ptr(), _86860_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_86860_fc.get()._field_Args.len() > 1LL)) {
		_220bd2055_pushErr(_86845_e.ptr(), _86860_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_220bceecb_Data> _87713_d = _220bebd50_evalExprKind(_86845_e, _86860_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_87713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_220c28981_isBuiltinStrConvertable(_87713_d.get()._field_Kind)))) {
		_220bd2055_pushErr(_86845_e.ptr(), _86860_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_220bceecb_Data>(_220bceecb_Data{._field_Kind=jule::new_ptr<_220c0ae5d_TypeKind>(_220c0ae5d_TypeKind{._field_Kind=jule::Trait<_220c0aa2e_Kind>(_220c290ad_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=jule::Any(jule::new_ptr<_220b309ba_IntegratedToStrExprModel>(_220b309ba_IntegratedToStrExprModel{._field_Expr=_87713_d.get()._field_Model}), &__jule_any_type126), });;
}



inline jule::Ptr<_220bceecb_Data> _220cc4785_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_220bd1a49_Eval>& _89544_e, jule::Ptr<_21eeaed17_FnCallExpr>& _89559_fc, jule::Ptr<_220bceecb_Data>& _89581_d) {
	if ((!(_220bd2990_isUnsafe(_89544_e.ptr())))) {
		_220bd2055_pushErr(_89544_e.ptr(), _89559_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_89559_fc.get()._field_Args.len() < 1LL)) {
		_220bd2055_pushErr(_89544_e.ptr(), _89559_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type6)}));
		return nullptr;;
	};
	jule::Ptr<_220bceecb_Data> _90513_argd = _220bec46b_evalExpr(_89544_e, _89559_fc.get()._field_Args[0LL]);;
	if ((_90513_argd == nullptr)) {
		return nullptr;;
	};
	if (((_220c0d2e5_Prim(_90513_argd.get()._field_Kind.ptr()) == nullptr) || (!(_220c13dde_IsStr(_220c0d2e5_Prim(_90513_argd.get()._field_Kind.ptr()).ptr()))))) {
		_220bd2055_pushErr(_89544_e.ptr(), _89559_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type100),jule::Any(_220c0b359_Str(_90513_argd.get()._field_Kind.ptr()), &__jule_any_type6)}));
		return nullptr;;
	};
	if (((!(_220bd088e_IsConst(_90513_argd.ptr()))) || (!(_220b29002_IsStr(_90513_argd.get()._field_Constant.ptr()))))) {
		_220bd2055_pushErr(_89544_e.ptr(), _89559_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_220bceecb_Data> _92013_r = _220c077d9_buildVoidData();;
	jule::Ptr<_220b31a10_FnIns> _92213_f = _220c0e4d3_Fn(_89581_d.get()._field_Kind.ptr());;
	if ((_92213_f.get()._field_Generics.len() > 0LL)) {
		_92013_r.get()._field_Kind=_92213_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_220b30ba7_BackendEmitExprModel> _92713_model = jule::new_ptr<_220b30ba7_BackendEmitExprModel>(_220b30ba7_BackendEmitExprModel{._field_Code=_220b27d14_ReadStr(_90513_argd.get()._field_Constant.ptr()), });;
	if ((_89559_fc.get()._field_Args.len() > 1LL)) {
		_92713_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, (_89559_fc.get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = _89559_fc.get()._field_Args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_2064ec3d4:;
			if (it != expr.end()) {
				jule::Ptr<_21eea5ec8_Expr> _93321_arg = *it;
				{
					_90513_argd=_220bebd50_evalExprKind(_89544_e, _93321_arg.get()._field_Kind);
					if ((_90513_argd == nullptr)) {
						return nullptr;;
					};
					_92713_model.get()._field_Exprs = jule::alloc_for_append(_92713_model.get()._field_Exprs,1);_92713_model.get()._field_Exprs.__push(_90513_argd.get()._field_Model);;
				}
				_iter_next_2064ec3d4:;
				++it;
				goto _iter_begin_2064ec3d4;
			}
			_iter_end_2064ec3d4:;
		};
	};
	_92013_r.get()._field_Model=jule::Any(_92713_model, &__jule_any_type25);
	return _92013_r;;
}



inline jule::Ptr<_220bceecb_Data> _220cc4bc5_builtinCallerStdDebugOut(jule::Ptr<_220bd1a49_Eval>& _94634_e, jule::Ptr<_21eeaed17_FnCallExpr>& _94649_fc, jule::Ptr<_220bceecb_Data>& _94671_d) {
	_94671_d=_220cbcc34_builtinCallerOut(_94634_e,_94649_fc,_94671_d);
	if ((_94671_d == nullptr)) {
		return nullptr;;
	};
	_94671_d.get()._field_Model.cast_ptr<_220b2d677_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Debug=true;
	return _94671_d;;
}



inline jule::Ptr<_220bceecb_Data> _220cc50b0_builtinCallerStdDebugOutln(jule::Ptr<_220bd1a49_Eval>& _95536_e, jule::Ptr<_21eeaed17_FnCallExpr>& _95551_fc, jule::Ptr<_220bceecb_Data>& _95573_d) {
	_95573_d=_220cbd11e_builtinCallerOutln(_95536_e,_95551_fc,_95573_d);
	if ((_95573_d == nullptr)) {
		return nullptr;;
	};
	_95573_d.get()._field_Model.cast_ptr<_220b2d864_BuiltinOutlnCallExprModel>(&__jule_any_type29).get()._field_Debug=true;
	return _95573_d;;
}



inline jule::Bool _220d0089e_FindModuleFile(jule::Slice<jule::Ptr<_21b6d2351_DirEntry>>& _1220_dirents) {
	{
		auto &expr = _1220_dirents;
		auto it = expr.begin();
		_iter_begin_206502ac1:;
		if (it != expr.end()) {
			jule::Ptr<_21b6d2351_DirEntry> &_1312_d = *it;
			{
				if (((!(_21b6d2a49_IsDir(_1312_d.get()._field_Stat.ptr()))) && (_1312_d.get()._field_Name == jule::Str("jule.mod", 8)))) {
					return true;;
				};
			}
			_iter_next_206502ac1:;
			++it;
			goto _iter_begin_206502ac1;
		}
		_iter_end_206502ac1:;
	};
	return false;;
}



inline jule::Str _220d00a47_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_21b6d2351_DirEntry>> _2617_dirents = ({
				auto except = static__21c4123c1_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_2065038d5;
				} jule::Slice<jule::Ptr<_21b6d2351_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _220d0089e_FindModuleFile(_2617_dirents);;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_21c4e565d_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_2065038d5;
			};
		}
	_iter_next_2065038d5:;
	}
	_iter_end_2065038d5:;;
	return jule::Str();;
}



inline jule::Slice<_21d4e511d_Log> _220d00cde_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__21b6d3154_Read(_21c4e1aee_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_21d4e511d_Log>::make({_21d4e511d_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _21d470be2_Trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_21d4e511d_Log>::make({_21d4e511d_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_22143b0a5_FileInfo> _22143dbac_ParseFile(jule::Ptr<_21d823acd_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_22143b0a5_FileInfo> _2713_finf = jule::new_ptr<_22143b0a5_FileInfo>();;
	({
		__jule_tuple_x_21ee6c665_Ast__jule_tuple_s_21d4e511d_Log __jule_assign_result = _22148560a_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_21ee6c665_Ast__jule_tuple_s_21d4e511d_Log _22148560a_parseFileset(jule::Ptr<_21d823acd_File> _5521_f) {
	__jule_tuple_x_21ee6c665_Ast__jule_tuple_s_21d4e511d_Log __jule_func_result;
	jule::Ptr<_2214a40a7_parser> _5613_p = jule::new_ptr<_2214a40a7_parser>();;
	_2214b3979_parse(_5613_p, _5521_f);
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_21eeb679c_ScopeTree> _221486067_newScope(void) {
	return jule::new_ptr<_21eeb679c_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _221486320_isSt(jule::Ptr<_21d81d743_Token> _499_current, jule::Ptr<_21d81d743_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return __jule_func_result;;
}



inline jule::Bool _221486661_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_21d81d743_Token>>& _5526_tokens, jule::I64& _5545_i) {
	if (((_5545_i > 1LL) && (_5526_tokens[(_5545_i - 2LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_21d81d743_Token> _6113_prev = _5526_tokens[(_5545_i - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _21d81e238_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < _5526_tokens[_5545_i].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _2214869e6_nextStPos(jule::Slice<jule::Ptr<_21d81d743_Token>>& _7015_tokens, jule::I64 _7033_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _7113_braceN = 0LL;;
	jule::I64 _7213_i = _7033_start;;
	for (; (_7213_i < _7015_tokens.len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_21d81d743_Token> _7613_tok = _7015_tokens[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_206582b62:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_206585093:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_221486661_prevIsIncompleteExpr(_7015_tokens,_7213_i)))) {
											({
												__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _221486320_isSt(_7613_tok,_7015_tokens[(_7213_i - 1LL)]);
												_7417_ok = __jule_assign_result.__jule_result_arg0;
												_7517_terminated = __jule_assign_result.__jule_result_arg1;
											});
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_206583459:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < _7015_tokens.len()))) {
										({
											__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _221486320_isSt(_7015_tokens[(_7213_i + 1LL)],_7613_tok);
											_7417_ok = __jule_assign_result.__jule_result_arg0;
											_7517_terminated = __jule_assign_result.__jule_result_arg1;
										});
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_20658328e:;
						};
						goto _iter_next_206581369;
					}
				}
				_match_end_206582b0c:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_206581369;
			};
			if ((_7213_i > _7033_start)) {
				if (_221486661_prevIsIncompleteExpr(_7015_tokens,_7213_i)) {
					goto _iter_next_206581369;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _221486320_isSt(_7613_tok,_7015_tokens[(_7213_i - 1LL)]);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _221486320_isSt(_7613_tok,_7613_tok);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7417_ok))) {
				goto _iter_next_206581369;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7213_i;
			__jule_func_result.__jule_result_arg1 = _7517_terminated;
			return __jule_func_result;;
		}
	_iter_next_206581369:;
	}
	_iter_end_206581369:;;
	__jule_func_result.__jule_result_arg0 = _7213_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_21d81d743_Token__jule_tuple_bool _221486d37_skipSt(jule::I64& _13216_i, jule::Slice<jule::Ptr<_21d81d743_Token>> _13228_tokens) {
	__jule_tuple_sx_21d81d743_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1339_start = _13216_i;;
	jule::Bool _13413_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2214869e6_nextStPos(_13228_tokens,_1339_start);
		_13216_i = __jule_assign_result.__jule_result_arg0;
		_13413_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_21d81d743_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start,_13216_i);;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_21d81d743_Token__jule_tuple_bool __jule_assign_result = _221486d37_skipSt(_13216_i,_13228_tokens);
				_13613_stTokens = __jule_assign_result.__jule_result_arg0;
				_13413_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13613_stTokens;
			__jule_func_result.__jule_result_arg1 = _13413_terminated;
			return __jule_func_result;;
		};
		_13613_stTokens=_13613_stTokens.slice(0LL,(_13613_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13613_stTokens;
	__jule_func_result.__jule_result_arg1 = _13413_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_221487134_stmt>> _2214874ca_splitStmts(jule::Slice<jule::Ptr<_21d81d743_Token>>& _15420_tokens) {
	jule::Slice<jule::Ptr<_221487134_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_221487134_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _15613_pos = 0LL;;
	while ((_15613_pos < _15420_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_21d81d743_Token>> _15818_stmt;;
			jule::Bool _15824_terminated = false;;
			({
				__jule_tuple_sx_21d81d743_Token__jule_tuple_bool __jule_assign_result = _221486d37_skipSt(_15613_pos,_15420_tokens);
				_15818_stmt = __jule_assign_result.__jule_result_arg0;
				_15824_terminated = __jule_assign_result.__jule_result_arg1;
			});
			_15513_stmts = jule::alloc_for_append(_15513_stmts,1);_15513_stmts.__push(jule::new_ptr<_221487134_stmt>(_221487134_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated}));;
		}
	_iter_next_20658cbe4:;
	}
	_iter_end_20658cbe4:;;
	return _15513_stmts;;
}



inline jule::Bool _22149dbb7_isTypeOp(jule::Str& _88814_kind) {
	return (((_88814_kind == jule::Str("&", 1)) || (_88814_kind == jule::Str("&&", 2))) || (_88814_kind == jule::Str("*", 1)));;
}



inline jule::Bool _22149dea3_isTypeRange(jule::Slice<jule::Ptr<_21d81d743_Token>>& _89521_tokens) {
	jule::Bool _89613_op = false;;
	{
		auto &expr = _89521_tokens;
		auto it = expr.begin();
		_iter_begin_20664d216:;
		if (it != expr.end()) {
			jule::I64 _8979_i = it - expr.begin();
			jule::Ptr<_21d81d743_Token> _89712_token = *it;
			{
				if ((_89712_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					if ((_89712_token.get()._field_Kind == jule::Str("[", 1))) {
						if (_89613_op) {
							return true;;
						};
						jule::I64 _90325_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_21d81d743_Token>> _90425_lTokens = _89521_tokens.slice(_8979_i);;
						{
							auto &expr = _90425_lTokens;
							auto it = expr.begin();
							_iter_begin_20664e58b:;
							if (it != expr.end()) {
								jule::Ptr<_21d81d743_Token> _90524_lToken = *it;
								{
									{
										auto &_match_expr{ _90524_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(3LLU)) {
											_case_begin_206650c1e:;
											{
												{
													auto &_match_expr{ _90524_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_20665157c:;
														{
															(_90325_rangeN)++;
															goto _iter_next_20664e58b;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_206651604:;
														{
															(_90325_rangeN)--;
															goto _iter_next_20664e58b;
														}
													}
													_match_end_2066513a1:;
												};
											}
										}
										_match_end_2066509cc:;
									};
									if ((_90325_rangeN == 0LL)) {
										return _22149dbb7_isTypeOp(_90524_lToken.get()._field_Kind);;
									};
								}
								_iter_next_20664e58b:;
								++it;
								goto _iter_begin_20664e58b;
							}
							_iter_end_20664e58b:;
						};
						return true;;
					};
				};
				if ((!(_22149dbb7_isTypeOp(_89712_token.get()._field_Kind)))) {
					return false;;
				};
				_89613_op=true;
			}
			_iter_next_20664d216:;
			++it;
			_8979_i++;
			goto _iter_begin_20664d216;
		}
		_iter_end_20664d216:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_21d81d743_Token>> _22149e24a_getBlockExpr(jule::Slice<jule::Ptr<_21d81d743_Token>>& _93322_tokens) {
	jule::I64 _93413_braceN = 0LL;;
	jule::I64 _93513_skipToNextBraceClose = 0LL;;
	{
		auto &expr = _93322_tokens;
		auto it = expr.begin();
		_iter_begin_206652d53:;
		if (it != expr.end()) {
			jule::I64 _9369_i = it - expr.begin();
			jule::Ptr<_21d81d743_Token> _93612_tok = *it;
			{
				{
					auto &_match_expr{ _93612_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_206653b34:;
						{
							(_93513_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_206653bab:;
						{
							{
								auto &_match_expr{ _93612_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_206654948:;
									{
										if (((_93413_braceN > 0LL) || (_93513_skipToNextBraceClose > 0LL))) {
											if ((_93513_skipToNextBraceClose > 0LL)) {
												(_93513_skipToNextBraceClose)--;
											};
											(_93413_braceN)++;
											goto _match_end_206654a8b;
										};
										return _93322_tokens.slice(0LL,_9369_i);;
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_2066550ca:;
									{
										(_93413_braceN)++;
									}
								}
								else {
									_case_begin_206654b02:;
									{
										(_93413_braceN)--;
									}
								}
								_match_end_206654a8b:;
							};
						}
					}
					_match_end_206653a8a:;
				};
			}
			_iter_next_206652d53:;
			++it;
			_9369_i++;
			goto _iter_begin_206652d53;
		}
		_iter_end_206652d53:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_21d81d743_Token__jule_tuple_sx_21d81d743_Token _22149e5d0_splitDelim(jule::Slice<jule::Ptr<_21d81d743_Token>>& _96420_tokens, jule::U64 _96438_delim) {
	__jule_tuple_sx_21d81d743_Token__jule_tuple_sx_21d81d743_Token __jule_func_result;
	jule::I64 _96513_rangeN = 0LL;;
	{
		auto &expr = _96420_tokens;
		auto it = expr.begin();
		_iter_begin_20665366c:;
		if (it != expr.end()) {
			jule::I64 _9669_i = it - expr.begin();
			jule::Ptr<_21d81d743_Token> _96612_token = *it;
			{
				{
					auto &_match_expr{ _96612_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_2066572b9:;
						{
							{
								auto &_match_expr{ _96612_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_2066580ab:;
									{
										(_96513_rangeN)++;
										goto _iter_next_20665366c;
									}
								}
								else {
									_case_begin_206657bb0:;
									{
										(_96513_rangeN)--;
									}
								}
								_match_end_2066579e5:;
							};
						}
					}
					else if (_match_expr == _96438_delim) {
						_case_begin_206657341:;
						{
							if ((_96513_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_21d81d743_Token>> _98025_l = _96420_tokens.slice(0LL,_9669_i);;
								jule::Slice<jule::Ptr<_21d81d743_Token>> _98125_r = _96420_tokens.slice((_9669_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _98025_l;
								__jule_func_result.__jule_result_arg1 = _98125_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_206657088:;
				};
			}
			_iter_next_20665366c:;
			++it;
			_9669_i++;
			goto _iter_begin_20665366c;
		}
		_iter_end_20665366c:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _22149e877_findLowestPrecOp(jule::Slice<jule::Ptr<_21d81d743_Token>>& _99122_tokens) {
	jule::U8 _99613_prec = 255LLU;;
	jule::I64 _99713_precPos = -1LL;;
	jule::I64 _99913_braceN = 0LL;;
	jule::Bool _100013_skipToNextBraceOpen = false;;
	{
		auto &expr = _99122_tokens;
		auto it = expr.begin();
		_iter_begin_20665a8b6:;
		if (it != expr.end()) {
			jule::I64 _10019_i = it - expr.begin();
			jule::Ptr<_21d81d743_Token> &_100112_token = *it;
			{
				{
					
					if ((_100112_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_20665b5ed:;
						{
							{
								auto &_match_expr{ _100112_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_20665c258:;
									{
										_100013_skipToNextBraceOpen=false;
										goto _case_begin_20665c984;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_20665c984:;
									{
										(_99913_braceN)++;
									}
								}
								else {
									_case_begin_20665c4de:;
									{
										(_99913_braceN)--;
									}
								}
								_match_end_20665c324:;
							};
							goto _iter_next_20665a8b6;
						}
					}
					else if (_100013_skipToNextBraceOpen) {
						_case_begin_20665b675:;
						{
							goto _iter_next_20665a8b6;
						}
					}
					else if ((_100112_token.get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_20665b6ec:;
						{
							_100013_skipToNextBraceOpen=true;
							goto _iter_next_20665a8b6;
						}
					}
					else if ((_10019_i == 0LL)) {
						_case_begin_20665b774:;
						{
							goto _iter_next_20665a8b6;
						}
					}
					else if ((_100112_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_20665b7eb:;
						{
							goto _iter_next_20665a8b6;
						}
					}
					else if ((_99913_braceN > 0LL)) {
						_case_begin_20665b873:;
						{
							goto _iter_next_20665a8b6;
						}
					}
					_match_end_20665b499:;
				};
				jule::Ptr<_21d81d743_Token> _102813_left = _99122_tokens[(_10019_i - 1LL)];;
				if (((_102813_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_102813_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_20665a8b6;
				};
				if ((((_10019_i > 1LL) && (_102813_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && (_102813_left.get()._field_Kind == jule::Str("]", 1)))) {
					jule::Ptr<_21d81d743_Token> _103617_lleft = _99122_tokens[(_10019_i - 2LL)];;
					if (((_103617_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_103617_lleft.get()._field_Kind == jule::Str("[", 1)))) {
						if (((_100112_token.get()._field_Kind == jule::Str("&", 1)) || (_100112_token.get()._field_Kind == jule::Str("*", 1)))) {
							goto _iter_next_20665a8b6;
						};
					};
				};
				jule::U8 _104513_p = _21d81daea_Prec(_100112_token.ptr());;
				if (((_104513_p != 0LLU) && (_104513_p <= _99613_prec))) {
					_99613_prec=_104513_p;
					_99713_precPos=_10019_i;
				};
			}
			_iter_next_20665a8b6:;
			++it;
			_10019_i++;
			goto _iter_begin_20665a8b6;
		}
		_iter_end_20665a8b6:;
	};
	return _99713_precPos;;
}



inline jule::Ptr<_21eea7b89_IdentExpr> _22149eb1e_buildIdentExpr(jule::Ptr<_21d81d743_Token>& _105424_token) {
	return jule::new_ptr<_21eea7b89_IdentExpr>(_21eea7b89_IdentExpr{._field_Token=_105424_token, ._field_Ident=_105424_token.get()._field_Kind, ._field_CppLinked=false});;
}



inline __jule_tuple_sx_21d81d743_Token__jule_tuple_int _22149edb6_getRangeExprTokens(jule::Slice<jule::Ptr<_21d81d743_Token>>& _106228_tokens) {
	__jule_tuple_sx_21d81d743_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _106313_rangeN = 0LL;;
	jule::I64 _106413_i = (_106228_tokens.len() - 1LL);;
	for (; (_106413_i >= 0LL); (_106413_i)--) {
		{
			jule::Ptr<_21d81d743_Token> _106613_tok = _106228_tokens[_106413_i];;
			if ((_106613_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _106613_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_206665e21:;
						{
							(_106313_rangeN)++;
						}
					}
					else {
						_case_begin_206665a14:;
						{
							(_106313_rangeN)--;
						}
					}
					_match_end_206665805:;
				};
			};
			if ((_106313_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = _106228_tokens.slice(0LL,_106413_i);
				__jule_func_result.__jule_result_arg1 = _106313_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_2066649e1:;
	}
	_iter_end_2066649e1:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _106313_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _2214a0b20_checkAssignTokens(jule::Slice<jule::Ptr<_21d81d743_Token>>& _1623_tokens) {
	if (((_1623_tokens.len() == 0LL) || (!(_21d822cdb_IsAssign(_1623_tokens[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto &expr = _1623_tokens;
		auto it = expr.begin();
		_iter_begin_2067054bb:;
		if (it != expr.end()) {
			jule::Ptr<_21d81d743_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_206706753:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_206706346:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_206706137:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_2067054bb;
				} else if (((_2112_t.get()._field_Id == static_cast<jule::U64>(7LLU)) && _21d82332a_IsAssignOp(_2112_t.get()._field_Kind))) {
					return true;;
				};
			}
			_iter_next_2067054bb:;
			++it;
			goto _iter_begin_2067054bb;
		}
		_iter_end_2067054bb:;
	};
	return false;;
}



inline _21d4e511d_Log _2214a1d41_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_21d823acd_File>& _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _21d4e511d_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=_5233_f.get()._field_Path, ._field_Text=_21d4e555d_Logf(_5243_fmt,_5256_args), };;
}



inline jule::Slice<jule::Ptr<_21d81d743_Token>> _2214a2319_range(jule::I64& _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_21d81d743_Token>>& _7163_tokens) {
	if ((_7115_i >= _7163_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_21d81d743_Token> _759_tok = _7163_tokens[_7115_i];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;;
	};
	(_7115_i)++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = _7115_i;;
	for (; ((_8013_rangeN != 0LL) && (_7115_i < _7163_tokens.len())); (_7115_i)++) {
		{
			jule::Ptr<_21d81d743_Token> _8313_token = _7163_tokens[_7115_i];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_20670c0a5:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_20670c12c:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_20670bd74:;
				};
			};
		}
	_iter_next_20670b0a4:;
	}
	_iter_end_20670b0a4:;;
	return _7163_tokens.slice(_819_start,(_7115_i - 1LL));;
}



inline __jule_tuple_sx_21d81d743_Token__jule_tuple_sx_21d81d743_Token _2214a25b1_rangeLast(jule::Slice<jule::Ptr<_21d81d743_Token>>& _10319_tokens) {
	__jule_tuple_sx_21d81d743_Token__jule_tuple_sx_21d81d743_Token __jule_func_result;
	if ((_10319_tokens.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _10319_tokens;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	} else if ((_10319_tokens[(_10319_tokens.len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		__jule_func_result.__jule_result_arg0 = _10319_tokens;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = (_10319_tokens.len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_21d81d743_Token> _11213_token = _10319_tokens[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_2067113c8:;
						{
							(_10913_braceN)++;
							goto _iter_next_20670d12d;
						}
					}
					else {
						_case_begin_206710ebb:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_206710cac:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = _10319_tokens.slice(0LL,_11013_i);
				__jule_func_result.__jule_result_arg1 = _10319_tokens.slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_20670d12d:;
	}
	_iter_end_20670d12d:;;
	__jule_func_result.__jule_result_arg0 = _10319_tokens;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log _2214a299b_partsKind(jule::Slice<jule::Ptr<_21d81d743_Token>>& _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	__jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log __jule_func_result;
	if ((_13219_tokens.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _13713_parts = nullptr;;
	jule::Slice<_21d4e511d_Log> _13813_errors = nullptr;;
	jule::I64 _14013_rangeN = 0LL;;
	jule::I64 _14113_last = 0LL;;
	{
		auto &expr = _13219_tokens;
		auto it = expr.begin();
		_iter_begin_2067140e0:;
		if (it != expr.end()) {
			jule::I64 _1429_i = it - expr.begin();
			jule::Ptr<_21d81d743_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_206715773:;
							{
								(_14013_rangeN)++;
								goto _iter_next_2067140e0;
							}
						}
						else {
							_case_begin_206715366:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_206715157:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_2067140e0;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_21d4e511d_Log _16121_err = _2214a1d41_makeErr(_14212_token.get()._field_Row,_14212_token.get()._field_Column,_14212_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_13813_errors = jule::alloc_for_append(_13813_errors,1);_13813_errors.__push(_16121_err);;
					};
					_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last,_1429_i));;
					_14113_last=static_cast<jule::I64>((_1429_i + 1LL));
				};
			}
			_iter_next_2067140e0:;
			++it;
			_1429_i++;
			goto _iter_begin_2067140e0;
		}
		_iter_end_2067140e0:;
	};
	if ((_14113_last < _13219_tokens.len())) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last));;
	} else if ((!(_13254_expr_must))) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(jule::Slice<jule::Ptr<_21d81d743_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _13713_parts;
	__jule_func_result.__jule_result_arg1 = _13813_errors;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log _2214a2d86_parts(jule::Slice<jule::Ptr<_21d81d743_Token>>& _18415_tokens, jule::U64 _18433_id, jule::Bool _18446_expr_must) {
	__jule_tuple_ssx_21d81d743_Token__jule_tuple_s_21d4e511d_Log __jule_func_result;
	if ((_18415_tokens.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_21d81d743_Token>>> _18913_parts = nullptr;;
	jule::Slice<_21d4e511d_Log> _19013_errors = nullptr;;
	jule::I64 _19213_rangeN = 0LL;;
	jule::I64 _19313_last = 0LL;;
	{
		auto &expr = _18415_tokens;
		auto it = expr.begin();
		_iter_begin_20671a7cd:;
		if (it != expr.end()) {
			jule::I64 _1949_i = it - expr.begin();
			jule::Ptr<_21d81d743_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_20671be61:;
							{
								(_19213_rangeN)++;
								goto _iter_next_20671a7cd;
							}
						}
						else {
							_case_begin_20671ba54:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_20671b845:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_20671a7cd;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_21d4e511d_Log _21321_err = _2214a1d41_makeErr(_19412_token.get()._field_Row,_19412_token.get()._field_Column,_19412_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19013_errors = jule::alloc_for_append(_19013_errors,1);_19013_errors.__push(_21321_err);;
					};
					_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last,_1949_i));;
					_19313_last=static_cast<jule::I64>((_1949_i + 1LL));
				};
			}
			_iter_next_20671a7cd:;
			++it;
			_1949_i++;
			goto _iter_begin_20671a7cd;
		}
		_iter_end_20671a7cd:;
	};
	if ((_19313_last < _18415_tokens.len())) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last));;
	} else if ((!(_18446_expr_must))) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(jule::Slice<jule::Ptr<_21d81d743_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _18913_parts;
	__jule_func_result.__jule_result_arg1 = _19013_errors;
	return __jule_func_result;;
}



inline jule::Str _2214a312d_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_20672045e:;
			{
				return jule::Str("(", 1);;
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_2067204c5:;
			{
				return jule::Str("{", 1);;
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_206720250:;
			{
				return jule::Str("[", 1);;
			}
		}
		else {
			_case_begin_20671e507:;
			{
				return jule::Str();;
			}
		}
		_match_end_20671e4a2:;
	};
}



inline _21d4e511d_Log _2214a3518_compilerErr(jule::Ptr<_21d81d743_Token>& _24317_token, jule::Str& _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _21d4e511d_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_24317_token.get()._field_Row, ._field_Column=_24317_token.get()._field_Column, ._field_Path=_24317_token.get()._field_File.get()._field_Path, ._field_Text=_21d4e555d_Logf(_24333_fmt,_24346_args), ._field_Line=_21d824caa_GetRow(_24317_token.get()._field_File.ptr(), _24317_token.get()._field_Row), };;
}



inline void _2214a3947_pushSuggestion(_21d4e511d_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_21d4e555d_Logf(_25441_fmt,_25454_args);
}



inline jule::Str _2214a3bde_tokstoa(jule::Slice<jule::Ptr<_21d81d743_Token>>& _25813_tokens) {
	jule::I64 _25913_n = 0LL;;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_206723121:;
		if (it != expr.end()) {
			jule::Ptr<_21d81d743_Token> &_26012_token = *it;
			{
				_25913_n+=_26012_token.get()._field_Kind.len();
			}
			_iter_next_206723121:;
			++it;
			goto _iter_begin_206723121;
		}
		_iter_end_206723121:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_2067237c5:;
		if (it != expr.end()) {
			jule::Ptr<_21d81d743_Token> &_26412_token = *it;
			{
				_26313_s+=_26412_token.get()._field_Kind;
			}
			_iter_next_2067237c5:;
			++it;
			goto _iter_begin_2067237c5;
		}
		_iter_end_2067237c5:;
	};
	return _26313_s;;
}



inline jule::Bool _2214b3c54_isPub(jule::Str& _203511_ident) {
	jule::I32 _203610_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d4396a0_DecodeRuneStr(_203511_ident);
		_203610_r = __jule_assign_result.__jule_result_arg0;
	});
	return _21d379733_IsUpper(_203610_r);;
}



inline jule::Ptr<_21eea19a7_TypeDecl> _2214b4628_buildVoidType(void) {
	return jule::new_ptr<_21eea19a7_TypeDecl>();;
}



inline jule::Ptr<_21eea19a7_TypeDecl> _2214b4837_buildPrimType(jule::Ptr<_21d81d743_Token> _2322_t) {
	return jule::new_ptr<_21eea19a7_TypeDecl>(_21eea19a7_TypeDecl{._field_Token=_2322_t, ._field_Kind=jule::Any(jule::new_ptr<_21eea206d_IdentTypeDecl>(_21eea206d_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }), &__jule_any_type20)});;
}



inline __jule_tuple_bool__jule_tuple_bool _220cdaed8_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_2068c3007:;
			{
				__jule_func_result.__jule_result_arg0=_21d4e842e_IsWindows(_21d52da08_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_2068c290d:;
			{
				__jule_func_result.__jule_result_arg0=_21d4e86d7_IsDarwin(_21d52da08_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_2068c2974:;
			{
				__jule_func_result.__jule_result_arg0=_21d4e897e_IsLinux(_21d52da08_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_2068c29da:;
			{
				__jule_func_result.__jule_result_arg0=_21d4e9584_IsUnix(_21d52da08_Os);
			}
		}
		else {
			_case_begin_2068c21b0:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_2068c25cd:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _21ec71cb6_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_2068c4da5:;
			{
				__jule_func_result.__jule_result_arg0=_21d4e8c9d_IsI386(_21d506184_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_2068c4e1b:;
			{
				__jule_func_result.__jule_result_arg0=_21d4e9045_IsAmd64(_21d506184_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_2068c4e82:;
			{
				__jule_func_result.__jule_result_arg0=_21d4e92dc_IsArm64(_21d506184_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_2068c4ee8:;
			{
				__jule_func_result.__jule_result_arg0=_21d4e9ba0_Is64Bit(_21d506184_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_2068c505e:;
			{
				__jule_func_result.__jule_result_arg0=_21d4e9908_Is32Bit(_21d506184_Arch);
			}
		}
		else {
			_case_begin_2068c4657:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_2068c4a75:;
	};
	return __jule_func_result;;
}



inline jule::Bool _21ec71de8_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_21c4c73ba_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL,(_529_n - _21c4e30b7_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _21d46b5c2_FindLastByte(_5029_p,'_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _220cdaed8_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _21ec71cb6_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL,_6413_i);;
	_6413_i=static_cast<jule::I64>(_21d46b5c2_FindLastByte(_5029_p,'_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _220cdaed8_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _21ec71cb6_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _21ec71cb6_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _220cdaed8_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _220cdaed8_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _220cde8c1_setOsVars(jule::Slice<jule::Str>& _3619_vars) {
	_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(_21d52da08_Os);;
	if (_21d4e9584_IsUnix(_21d52da08_Os)) {
		_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _220cdeb24_setArchVars(jule::Slice<jule::Str>& _4421_vars) {
	_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(_21d506184_Arch);;
	if (_21d4e9ba0_Is64Bit(_21d506184_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x64", 3));;
	};
	if (_21d4e9908_Is32Bit(_21d506184_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _220cdedcc_initVars(jule::Slice<jule::Str>& _5518_vars, _220cde5b3_CompileInfo& _5532_info) {
	_220cde8c1_setOsVars(_5518_vars);
	_220cdeb24_setArchVars(_5518_vars);
	if (_5532_info._field_Prod) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("production", 10));;
	};
	if (_5532_info._field_Test) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5532_info._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_2068d117a:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_2068d11e1:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_2068d0b6e:;
	};
	{
		auto &_match_expr{ _5532_info._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_2068d1a3d:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_2068d1aa4:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2068d1b1a:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_2068d229c:;
	};
}



inline jule::Slice<jule::U8> _220d099da_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__21b6d3154_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_21d54414a_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _21d4e511d_Log _220dd0a17_flatCompilerErr(jule::Str _4120_text) {
	return _21d4e511d_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _2210cb839_pushPasses(jule::Ptr<_220b6427e_Package>& _11120_p, jule::Slice<jule::Str>& _11144_passes) {
	{
		auto &expr = _11120_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_206917da4:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11217_f.get()._field_Passes;
					auto it = expr.begin();
					_iter_begin_206918833:;
					if (it != expr.end()) {
						_220b332a3_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_206918833;
							};
							{
								auto &expr = _11144_passes;
								auto it = expr.begin();
								_iter_begin_2069197e0:;
								if (it != expr.end()) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_206918833;
										};
									}
									_iter_next_2069197e0:;
									++it;
									goto _iter_begin_2069197e0;
								}
								_iter_end_2069197e0:;
							};
							_11144_passes = jule::alloc_for_append(_11144_passes,1);_11144_passes.__push(_11416_pass._field_Text);;
						}
						_iter_next_206918833:;
						++it;
						goto _iter_begin_206918833;
					}
					_iter_end_206918833:;
				};
			}
			_iter_next_206917da4:;
			++it;
			goto _iter_begin_206917da4;
		}
		_iter_end_206917da4:;
	};
}



inline jule::Slice<jule::Str> _2210de86e_getAllUniquePasses(jule::Ptr<_220b6427e_Package>& _12828_pkg, jule::Slice<jule::Ptr<_220b61325_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_2210cb839_pushPasses(_12828_pkg,_12913_passes);
	{
		auto &expr = _12853_uses;
		auto it = expr.begin();
		_iter_begin_20691ad63:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_2210cb839_pushPasses(_13217_u.get()._field_Package,_12913_passes);
				};
			}
			_iter_next_20691ad63:;
			++it;
			goto _iter_begin_20691ad63;
		}
		_iter_end_20691ad63:;
	};
	return _12913_passes;;
}



inline _220cde5b3_CompileInfo _2210ed6d5_buildCompileInfo(void) {
	_220cde5b3_CompileInfo _14213_info = _220cde5b3_CompileInfo{._field_Prod=_21b5387c3_Production, ._field_Test=_21b537d66_Test, };;
	{
		auto &_match_expr{ _21b479659_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_20691c1c7:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_20691c23d:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_20691c150:;
	};
	{
		auto &_match_expr{ _21b537629_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_20691b946:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_20691c5c3:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_20691c639:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_20691ca35:;
	};
	return _14213_info;;
}



inline void _2215b7bc1_EliminateDefines(jule::Ptr<_221064c23_IR>& _28526_ir) {
	jule::Ptr<_22158375d_ObjectDeadCode> _28613_ocd = static__221583bae_new(_28526_ir);;
	_2215b7907_elimanate(_28613_ocd);
}



inline jule::Ptr<_21ee6d710_Directive> _2215b8056_findDirective(jule::Slice<jule::Ptr<_21ee6d710_Directive>>& _29123_directives, jule::Str _29154_tag) {
	{
		auto &expr = _29123_directives;
		auto it = expr.begin();
		_iter_begin_20695b601:;
		if (it != expr.end()) {
			jule::Ptr<_21ee6d710_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;;
				};
			}
			_iter_next_20695b601:;
			++it;
			goto _iter_begin_20695b601;
		}
		_iter_end_20695b601:;
	};
	return nullptr;;
}



inline jule::Bool _2215b8397_hasDirective(jule::Slice<jule::Ptr<_21ee6d710_Directive>>& _30118_directives, jule::Str _30149_tag) {
	return (_2215b8056_findDirective(_30118_directives,_30149_tag) != nullptr);;
}



inline void _2215bbee4_eliminateDeadCodeOfScope(jule::Ptr<_220b42b20_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_220b4535e_Label>> _2429_labels = jule::Slice<jule::Ptr<_220b4535e_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_220b4564a_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_220b4564a_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_2215b90e0_scopeDeadCode> _24413_sdc = jule::new_ptr<_2215b90e0_scopeDeadCode>(_2215b90e0_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_220b4535e_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_220b4564a_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_2215bbc08_optimizeStmts(_24413_sdc);
	};
}



inline void _2215bc27a_eliminateScopeFunctions(jule::Slice<jule::Ptr<_220b31636_Fn>>& _25433_funcs) {
	{
		auto &expr = _25433_funcs;
		auto it = expr.begin();
		_iter_begin_20699b443:;
		if (it != expr.end()) {
			jule::Ptr<_220b31636_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_Instances;
					auto it = expr.begin();
					_iter_begin_20699d533:;
					if (it != expr.end()) {
						jule::Ptr<_220b31a10_FnIns> _25621_ins = *it;
						{
							_2215bbee4_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_20699d533:;
						++it;
						goto _iter_begin_20699d533;
					}
					_iter_end_20699d533:;
				};
			}
			_iter_next_20699b443:;
			++it;
			goto _iter_begin_20699b443;
		}
		_iter_end_20699b443:;
	};
}



inline void _2215bc4bc_eliminateFunctionsScopePackage(jule::Ptr<_220b6427e_Package>& _26240_pkg) {
	{
		auto &expr = _26240_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_20699d995:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _26317_f = *it;
			{
				_2215bc27a_eliminateScopeFunctions(_26317_f.get()._field_Funcs);
			}
			_iter_next_20699d995:;
			++it;
			goto _iter_begin_20699d995;
		}
		_iter_end_20699d995:;
	};
}



inline void _2215bc764_eliminateScopePackage(jule::Ptr<_220b6427e_Package>& _26831_pkg) {
	_2215bc4bc_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _2215bc973_EliminateScopes(jule::Ptr<_221064c23_IR>& _27325_ir) {
	jule::I64 _27413_i = (_27325_ir.get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_220b61325_ImportInfo> _27617_u = _27325_ir.get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_2215bc764_eliminateScopePackage(_27617_u.get()._field_Package);
			};
		}
	_iter_next_2069a014a:;
	}
	_iter_end_2069a014a:;;
	_2215bc764_eliminateScopePackage(_27325_ir.get()._field_Main);
}



inline jule::Bool _21da09a61_isStdPackage(jule::Str _39817_f, jule::Str _39825_p) {
	return _21d440134_HasPrefix(_39817_f,_21c4e1aee_Join(jule::Slice<jule::Str>::make({_21d52d673_PathStdlib,_39825_p})));;
}



inline jule::Bool _21da29ee3_isConstantValidConditionalCase(jule::Ptr<_220b4301b_If>& _40236_i) {
	{
		auto &_match_expr{ _40236_i.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type48) {
			_case_begin_206a24730:;
			{
				jule::Ptr<_220074816_Const> _40513_c = _40236_i.get()._field_Expr.cast_ptr<_220074816_Const>(&__jule_any_type48);;
				return (_220b28dc0_IsBool(_40513_c.ptr()) && _220b27bd2_ReadBool(_40513_c.ptr()));;
			}
		}
		_match_end_206a245a9:;
	};
	return false;;
}



inline jule::Bool _21da37b38_isUnreachableExpr(jule::Any& _41123_expr) {
	{
		auto &_match_expr{ _41123_expr };
		
		if (_match_expr.type == &__jule_any_type48) {
			_case_begin_206a25148:;
			{
				jule::Ptr<_220074816_Const> _41413_c = _41123_expr.cast_ptr<_220074816_Const>(&__jule_any_type48);;
				return (_220b28dc0_IsBool(_41413_c.ptr()) && (!(_220b27bd2_ReadBool(_41413_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_206a251ae:;
			{
				jule::Ptr<_220049577_BinopExprModel> _41713_m = _41123_expr.cast_ptr<_220049577_BinopExprModel>(&__jule_any_type118);;
				if ((_41713_m.get()._field_Op.get()._field_Kind == jule::Str("&&", 2))) {
					return (_21da37b38_isUnreachableExpr(_41713_m.get()._field_Left.get()._field_Model) || _21da37b38_isUnreachableExpr(_41713_m.get()._field_Right.get()._field_Model));;
				};
			}
		}
		_match_end_206a247da:;
	};
	return false;;
}



inline jule::Bool _21db912d0_isConstantValidMatchCase(jule::Ptr<_220b473b6_Case>& _42630_case) {
	{
		auto &expr = _42630_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_206a27986:;
		if (it != expr.end()) {
			jule::Ptr<_220bceecb_Data> &_42712_expr = *it;
			{
				if (((_220bd088e_IsConst(_42712_expr.ptr()) && _220b28dc0_IsBool(_42712_expr.get()._field_Constant.ptr())) && _220b27bd2_ReadBool(_42712_expr.get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_206a27986:;
			++it;
			goto _iter_begin_206a27986;
		}
		_iter_end_206a27986:;
	};
	return false;;
}



inline jule::Bool _21db9714e_isUnreachableConditionalCase(jule::Ptr<_220b4301b_If>& _43534_i) {
	return _21da37b38_isUnreachableExpr(_43534_i.get()._field_Expr);;
}



inline jule::Bool _21db98150_isUnreachableMatchCase(jule::Ptr<_220b473b6_Case>& _43928_case) {
	{
		auto &expr = _43928_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_206a2a01b:;
		if (it != expr.end()) {
			jule::Ptr<_220bceecb_Data> &_44012_expr = *it;
			{
				if ((!(_21da37b38_isUnreachableExpr(_44012_expr.get()._field_Model)))) {
					return false;;
				};
			}
			_iter_next_206a2a01b:;
			++it;
			goto _iter_begin_206a2a01b;
		}
		_iter_end_206a2a01b:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _21e145da0_checkForBitShiftOpt(jule::Ptr<_22001ab86_OperandExprModel>& _45125_l, jule::Ptr<_22001ab86_OperandExprModel>& _45148_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_220b27099_IsInt(_220c0b359_Str(_45125_l.get()._field_Kind.ptr())))) || (!(_220b27099_IsInt(_220c0b359_Str(_45148_r.get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _45148_r.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type48) {
			_case_begin_206a671e0:;
			{
				goto _match_end_206a67bd5;
			}
		}
		else {
			_case_begin_206a67d39:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_206a67bd5:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_220b281aa_AsU64(_45148_r.get()._field_Model.cast_ptr<_220074816_Const>(&__jule_any_type48).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4659_j = _220ae7e8d_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4669_z = static_cast<jule::U64>(_4659_j);;
	if ((static_cast<jule::F64>(_4669_z) != _4659_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4669_z;
	return __jule_func_result;;
}



inline void _21e14d957_PushOptLevel(jule::I64 _3217_level) {
	_21d86798a_Copy=(_3217_level >= static_cast<jule::I64>(1LL));
	_21d88ab34_Deadcode=(_3217_level >= static_cast<jule::I64>(1LL));
	_21d8bb219_Append=(_3217_level >= static_cast<jule::I64>(1LL));
	_21d96d9c5_Math=(_3217_level >= static_cast<jule::I64>(1LL));
	_21d9a03ca_Access=(_3217_level >= static_cast<jule::I64>(1LL));
	_21da0918c_Inline=(_3217_level >= static_cast<jule::I64>(1LL));
	_21da39860_Ptr=(_3217_level >= static_cast<jule::I64>(1LL));
	_21da42e0c_Cond=(_3217_level >= static_cast<jule::I64>(1LL));
}



inline void _221549d40_detectEnabled(void) {
	_2214bb971_exprEnabled=(((_21da39860_Ptr || _21d96d9c5_Math) || _21d9a03ca_Access) || _21da42e0c_Cond);
	_2214bc5dc_scopeEnabled=((_21da42e0c_Cond || _21d8bb219_Append) || _21d86798a_Copy);
}



inline void _2215ca277_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_21d54414a_Exit(1LL);
}



inline jule::U64 _202c00426_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::U64 _202c00734_unixYearToSeconds(jule::U64 _20122_y, jule::Bool& _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		_20140_leap=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if (_20140_leap) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));;
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		_20140_leap=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			_20140_leap=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			_20140_leap=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if (_20140_leap) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));;
}



inline jule::U64 _202c00ab9_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_206aeb296:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_206aeb42d:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_206aeb494:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_206aeb50a:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_206aeb571:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_206aeb5d7:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_206aeb64d:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_206aeb6b4:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_206aeb72a:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_206aeb791:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_206aeb818:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_206aeb241:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;;
}



inline jule::Bool _202b4dce2_isCopyOptimizable(jule::Ptr<_220bceecb_Data>& _75223_expr) {
	if ((!(_75223_expr.get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ _75223_expr.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type99) {
			_case_begin_206b99b4c:;
			{
				return false;;
			}
		}
		_match_end_206b99ae7:;
	};
	return true;;
}



inline jule::Bool _202b4e177_isIterCopyOptimizable(jule::Ptr<_220bceecb_Data>& _76327_expr, jule::Ptr<_220b8746c_Var>& _76341_v) {
	if (((!(_76327_expr.get()._field_Lvalue)) && (!(_220c0c5d0_Mutable(_76327_expr.get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!(_76341_v.get()._field_Mutable)) && (!(_76327_expr.get()._field_Mutable)));;
}



inline jule::Str _202b5d142_decomposeCommonEsq(jule::U8 _137423_b) {
	{
		auto &_match_expr{ _137423_b };
		
		if (_match_expr == '\\') {
			_case_begin_206c567ca:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_206c56d6e:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_206c56dd5:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_206c56e4b:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_206c56a61:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_206c56ac7:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_206c56b3d:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_206c56ba4:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_206c5718d:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_206c57204:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_206c5692e:;
			{
				return jule::Str();;
			}
		}
		_match_end_206c56863:;
	};
}



inline jule::Str _202b5d42d_sbtoa(jule::U8 _140110_b) {
	if ((_140110_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_140110_b < 128LLU)) {
		jule::Str _140613_seq = _202b5d142_decomposeCommonEsq(_140110_b);;
		if ((!(_140613_seq.empty()))) {
			return _140613_seq;;
		};
		if (((32LL <= _140110_b) && (_140110_b <= 126LLU))) {
			return static_cast<jule::Str>(_140110_b);;
		};
	};
	jule::Str _14149_seq = _220b24261_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_140110_b)),8LL);;
	if ((_14149_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _14149_seq);;
	};
	return (jule::Str("\\", 1) + _14149_seq);;
}



inline jule::Str _202b5d6c5_cstrBytes(jule::Slice<jule::U8> _142114_bytes) {
	jule::Str _142213_lit = jule::Str::alloc(0LL, _142114_bytes.len());;
	{
		auto &expr = _142114_bytes;
		auto it = expr.begin();
		_iter_begin_206c5cc65:;
		if (it != expr.end()) {
			jule::U8 &_142312_b = *it;
			{
				_142213_lit+=_202b5d42d_sbtoa(_142312_b);
			}
			_iter_next_206c5cc65:;
			++it;
			goto _iter_begin_206c5cc65;
		}
		_iter_end_206c5cc65:;
	};
	return _142213_lit;;
}



inline jule::Str _202b5d9e4_cstrLit(jule::Slice<jule::U8> _142912_bytes) {
	return ((jule::Str("\"", 1) + _202b5d6c5_cstrBytes(_142912_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _202b5dd02_ftoa(jule::F64 _14339_f, jule::I64 _143317_bitsize) {
	if ((_143317_bitsize != 32LL)) {
		if ((_14339_f == static_cast<jule::F64>(static_cast<jule::I64>(_14339_f)))) {
			return _202b5e099_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_14339_f)));;
		};
		if ((_14339_f == static_cast<jule::F64>(static_cast<jule::U64>(_14339_f)))) {
			return _202b5e341_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_14339_f)));;
		};
	};
	jule::Str _144213_m = _220579557_FmtFloat(_14339_f,'f',-1LL,_143317_bitsize);;
	if ((!(_21d46ce53_Contains(_144213_m,jule::Str(".", 1))))) {
		_144213_m+=jule::Str(".0", 2);
	};
	return _144213_m;;
}



inline jule::Str _202b5e099_itoa(jule::I64 _14499_x) {
	{
		
		if ((_14499_x == jule::MAX_I64)) {
			_case_begin_206c61340:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_14499_x == jule::MIN_I64)) {
			_case_begin_206c613a6:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_206c611ec:;
	};
	jule::Str _14579_fmt = _220b24393_FmtInt(_14499_x,10LL);;
	if (_21d4e9ba0_Is64Bit(jule::Str("amd64", 5))) {
		return (_14579_fmt + jule::Str("LL", 2));;
	};
	return (_14579_fmt + jule::Str("L", 1));;
}



inline jule::Str _202b5e341_utoa(jule::U64 _14649_x) {
	{
		
		if ((_14649_x == jule::MAX_U64)) {
			_case_begin_206c63012:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_206c62e13:;
	};
	jule::Str _14709_fmt = _220b24261_FmtUint(_14649_x,10LL);;
	if (_21d4e9ba0_Is64Bit(jule::Str("amd64", 5))) {
		return (_14709_fmt + jule::Str("LLU", 3));;
	};
	return (_14709_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _202b5e6e8_isForwarded(jule::Ptr<_220b42b20_Scope>& _147717_s) {
	jule::Any _14789_last = _147717_s.get()._field_Stmts[(_147717_s.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _14789_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_206c647d8:;
			{
				{
					auto &_match_expr{ _14789_last.cast_ptr<_220bceecb_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_206c65883:;
						{
							return true;;
						}
					}
					else {
						_case_begin_206c65c4b:;
						{
							return false;;
						}
					}
					_match_end_206c65993:;
				};
			}
		}
		else {
			_case_begin_206c650be:;
			{
				return true;;
			}
		}
		_match_end_206c64ee2:;
	};
}



inline jule::Bool _202b5e9b2_isBuiltinCallHasDebuginf(jule::Ptr<_220b2b763_FnCallExprModel>& _149230_m) {
	if ((!(_220b321c5_IsBuiltin(_149230_m.get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ _149230_m.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_206c65ee3:;
			{
				jule::Ptr<_220b2d29d_CommonSubIdentExprModel> _149813_csie = _149230_m.get()._field_Expr.cast_ptr<_220b2d29d_CommonSubIdentExprModel>(&__jule_any_type74);;
				return (_149813_csie.get()._field_Ident == jule::Str("swap", 4));;
			}
		}
		else {
			_case_begin_206c65355:;
			{
				return false;;
			}
		}
		_match_end_206c65300:;
	};
}



inline jule::Bool _202b5ebe3_isExprComesFromBind(jule::Ptr<_220bceecb_Data>& _150525_d) {
	{
		auto &_match_expr{ _150525_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_206c682e2:;
			{
				return _150525_d.get()._field_Model.cast_ptr<_220b8746c_Var>(&__jule_any_type9).get()._field_CppLinked;;
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_206c68358:;
			{
				return _150525_d.get()._field_Model.cast_ptr<_220b2c9ea_StructSubIdentExprModel>(&__jule_any_type72).get()._field_Owner.get()._field_Decl.get()._field_CppLinked;;
			}
		}
		else {
			_case_begin_206c6792e:;
			{
				return false;;
			}
		}
		_match_end_206c678c9:;
	};
}



inline jule::Bool _202b5ee8a_isAny(jule::Ptr<_220c0ae5d_TypeKind>& _151715_t) {
	if ((_220c0dc96_TypeEnum(_151715_t.ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_220c10baa_Prim> _15219_prim = _220c0d2e5_Prim(_151715_t.ptr());;
	return ((_15219_prim != nullptr) && _220c14153_IsAny(_15219_prim.ptr()));;
}



inline void _202c09d6a_iterFiles(jule::Ptr<_220b6427e_Package>& _122619_pkg, jule::Fn<void(jule::Ptr<_220bca1a2_SymbolTable>&)> _122634_f) {
	{
		auto &expr = _122619_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_206de38ce:;
		if (it != expr.end()) {
			jule::Ptr<_220bca1a2_SymbolTable> _122717_file = *it;
			{
				_122634_f(_122717_file);
			}
			_iter_next_206de38ce:;
			++it;
			goto _iter_begin_206de38ce;
		}
		_iter_end_206de38ce:;
	};
}



inline jule::Str _202c0a156_concatAllParts(jule::Slice<jule::Ptr<_21d81d743_Token>> _123319_parts) {
	jule::I64 _123413_n = 0LL;;
	{
		auto &expr = _123319_parts;
		auto it = expr.begin();
		_iter_begin_206de4baa:;
		if (it != expr.end()) {
			jule::Ptr<_21d81d743_Token> &_123512_part = *it;
			{
				_123413_n+=_123512_part.get()._field_Kind.len();
			}
			_iter_next_206de4baa:;
			++it;
			goto _iter_begin_206de4baa;
		}
		_iter_end_206de4baa:;
	};
	if ((_123413_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _124113_s = jule::Str::alloc(0LL, _123413_n);;
	{
		auto &expr = _123319_parts;
		auto it = expr.begin();
		_iter_begin_206de5c22:;
		if (it != expr.end()) {
			jule::Ptr<_21d81d743_Token> &_124212_p = *it;
			{
				_124113_s+=_124212_p.get()._field_Kind;
			}
			_iter_next_206de5c22:;
			++it;
			goto _iter_begin_206de5c22;
		}
		_iter_end_206de5c22:;
	};
	return _124113_s;;
}



inline jule::Ptr<_21ee6d710_Directive> _202c18087_findDirective(jule::Slice<jule::Ptr<_21ee6d710_Directive>>& _46523_directives, jule::Str _46554_tag) {
	{
		auto &expr = _46523_directives;
		auto it = expr.begin();
		_iter_begin_206ed51c9:;
		if (it != expr.end()) {
			jule::Ptr<_21ee6d710_Directive> _46617_dr = *it;
			{
				if ((_46617_dr.get()._field_Tag.get()._field_Kind == _46554_tag)) {
					return _46617_dr;;
				};
			}
			_iter_next_206ed51c9:;
			++it;
			goto _iter_begin_206ed51c9;
		}
		_iter_end_206ed51c9:;
	};
	return nullptr;;
}



inline jule::Bool _202c1841c_hasDirective(jule::Slice<jule::Ptr<_21ee6d710_Directive>>& _47518_directives, jule::Str _47549_tag) {
	return (_202c18087_findDirective(_47518_directives,_47549_tag) != nullptr);;
}



inline jule::Bool _202c186b4_shouldInitialized(jule::Ptr<_220c0ae5d_TypeKind>& _48227_t) {
	jule::Ptr<_220c10baa_Prim> _4839_prim = _220c0d2e5_Prim(_48227_t.ptr());;
	if ((_4839_prim != nullptr)) {
		return ((!(_220c14153_IsAny(_4839_prim.ptr()))) && (!(_220c13dde_IsStr(_4839_prim.ptr()))));;
	};
	{
		
		if ((_220c0d559_Sptr(_48227_t.ptr()) != nullptr)) {
			_case_begin_206ed8078:;
			{
				return false;;
			}
		}
		else if ((_220c0ec20_Map(_48227_t.ptr()) != nullptr)) {
			_case_begin_206ed79a1:;
			{
				return false;;
			}
		}
		else if ((_220c0e26e_Slc(_48227_t.ptr()) != nullptr)) {
			_case_begin_206ed7a28:;
			{
				return false;;
			}
		}
		else if ((_220c0e9ab_Trait(_48227_t.ptr()) != nullptr)) {
			_case_begin_206ed7aa0:;
			{
				return false;;
			}
		}
		else if ((_220c0e4d3_Fn(_48227_t.ptr()) != nullptr)) {
			_case_begin_206ed7c59:;
			{
				return false;;
			}
		}
		else if ((_220c0e00a_Arr(_48227_t.ptr()) != nullptr)) {
			_case_begin_206ed7cc0:;
			{
				jule::Ptr<_220c17046_Arr> _49917_arr = _220c0e00a_Arr(_48227_t.ptr());;
				return _202c186b4_shouldInitialized(_49917_arr.get()._field_Elem);;
			}
		}
		else if ((_220c0e747_Struct(_48227_t.ptr()) != nullptr)) {
			_case_begin_206ed7d36:;
			{
				return false;;
			}
		}
		else {
			_case_begin_206ed72ec:;
			{
				return true;;
			}
		}
		_match_end_206ed7297:;
	};
}



inline void _21d4b9169_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _21d4c2716_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_21d4b9169_printErrorMessage((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _21d4b8e9e_HelpMap[0LL][0LL].len();;
	{
		auto &expr = _21d4b8e9e_HelpMap;
		auto it = expr.begin();
		_iter_begin_2070791c4:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_2070791c4:;
			++it;
			goto _iter_begin_2070791c4;
		}
		_iter_end_2070791c4:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _21d4b8e9e_HelpMap;
		auto it = expr.begin();
		_iter_begin_20707aa88:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_21d4409e7_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_20707aa88:;
			++it;
			_519_i++;
			goto _iter_begin_20707aa88;
		}
		_iter_end_20707aa88:;
	};
	jule::outln(_4913_s);
}



inline void _21d4b6386_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_21d4b9169_printErrorMessage((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _21d4b64b8_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _21d4ae280_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _21d4ae3b2_tool(jule::Slice<jule::Str>& _9410_args) {
	if ((_9410_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9410_args.len() > 3LL)) {
		_21d4b9169_printErrorMessage((jule::Str("invalid command: ", 17) + _9410_args[3LL]));
		return;;
	};
	jule::Str _1059_cmd = _9410_args[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_207082a29:;
			{
				_21d4b64b8_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_20708273d:;
			{
				_21d4ae280_toolDistarch();
			}
		}
		else {
			_case_begin_2070810bb:;
			{
				_21d4b9169_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_207082551:;
	};
}



inline void _21d4c40ca_julenv(jule::Slice<jule::Str>& _11712_args) {
	if ((_11712_args.len() > 2LL)) {
		_21d4b9169_printErrorMessage((jule::Str("invalid command: ", 17) + _11712_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
	jule::outln((jule::Str("default compiler: ", 18) + _21b479659_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _21b537629_CppStd));
}



inline void _21d4c420c_mod(jule::Slice<jule::Str>& _1309_args) {
	if ((_1309_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1309_args.len() > 3LL)) {
		_21d4b9169_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1309_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_207086e18:;
			{
				({
					auto except = static__21b6d371a_Write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_21d4b9169_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_2070857eb:;
			{
				_21d4b9169_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[2LL]));
			}
		}
		_match_end_207086a3e:;
	};
}



inline jule::Bool _21d4d4d22_processCommand(jule::Slice<jule::Str>& _15320_args) {
	{
		auto &_match_expr{ _15320_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_207088546:;
			{
				_21d4c2716_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_207088975:;
			{
				_21d4b6386_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_2070889db:;
			{
				_21d4ae3b2_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_207088ac9:;
			{
				_21d4c40ca_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_207088b40:;
			{
				_21d4c420c_mod(_15320_args);
			}
		}
		else {
			_case_begin_207088106:;
			{
				return false;;
			}
		}
		_match_end_20708803a:;
	};
	return true;;
}



inline void _21d4d4e54_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _21c461e15_Args();;
	if ((_18913_args.len() < 2LL)) {
		_21d4d4e54_showInfo();
		return;;
	};
	if (_21d4d4d22_processCommand(_18913_args)) {
		return;;
	};
	_202c64b83_compileCommand(_18913_args);
}



inline void _202c2dee3_init(void) {
	_21b479659_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_21b6092ab_File> _202c325ce_openOutput(jule::Str& _4316_path) {
	jule::Str _449_dir = _21c4e565d_Dir(_4316_path);;
	({
		auto except = static__21b5d882e_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__21c43be12_Create(_449_dir);
				if (!except.ok()) {
					_2215ca277_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__21b5d8eb1_Create(_4316_path);
		(except.ok()) ? (except.result) : ({
			_2215ca277_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _202c3d71c_clearObjects(void) {
	({
		auto except = static__21b60b555_Remove(_202c29a6b_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__21c416c77_Remove(_202c29cad_OutDir);
}



inline void _202c2c222_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_21d5402ab_Cmd> _7313_cmd = static__21d5406da_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=jule::Slice<jule::Str>::make({_7214_compiler});
	_7313_cmd.get()._field_Args=jule::append(_7313_cmd.get()._field_Args,_21d46cb12_Split(_7229_compilerCmd,jule::Str(" ", 1),-1LL));
	jule::I64 _769_status = ({
		auto except = _21d54094e_Spawn(_7313_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL), &__jule_any_type1) == _match_expr) {
					_case_begin_207090cac:;
					{
						static__2215c7b8c_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type1) == _match_expr) {
					_case_begin_207090592:;
					{
						static__2215c7b8c_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL), &__jule_any_type1) == _match_expr) {
					_case_begin_207090806:;
					{
						static__2215c7b8c_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type1) == _match_expr) {
					_case_begin_20709086c:;
					{
						static__2215c7b8c_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_2070906c4:;
					{
						static__2215c7b8c_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_20709062a:;
			};
			_2215ca277_Throw(jule::Str());

			0LL;
		});
	});;
	if ((_769_status != 0LL)) {
		jule::Str _9313_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _21b479659_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__2215c7b8c_Print(jule::Str("\033[31m", 5),_9313_errorMessage);
		_2215ca277_Throw(jule::Str());
	};
	_202c3d71c_clearObjects();
}



inline jule::Bool _202c4d232_isCppSourceFile(jule::Str _10420_path) {
	jule::I64 _1059_offset = _21d46b5c2_FindLastByte(_10420_path,'.');;
	if ((_1059_offset == -1LL)) {
		return false;;
	};
	return _21d4d850c_IsValidCppExt(_10420_path.slice(_1059_offset));;
}



inline void _202c52324_pushCompCmdClang(jule::Str& _11226_cmd) {
	_11226_cmd+=jule::Str("-Wno-everything ", 16);
	_11226_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _21b537629_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_20708dd21:;
			{
				_11226_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_2070955db:;
			{
				_11226_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_207095652:;
			{
				_11226_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_2070953bb:;
	};
	_11226_cmd+=jule::Str(" ", 1);
	if (_21b5387c3_Production) {
		_11226_cmd+=jule::Str("-O3 ", 4);
		_11226_cmd+=jule::Str("-flto ", 6);
		_11226_cmd+=jule::Str("-DNDEBUG ", 9);
		_11226_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11226_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _202c2a4d9_pushCompCmdGcc(jule::Str& _13824_cmd) {
	_13824_cmd+=jule::Str("-w ", 3);
	_13824_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _21b537629_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_207095a81:;
			{
				_13824_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_207097d80:;
			{
				_13824_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_207097de6:;
			{
				_13824_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_207097b60:;
	};
	_13824_cmd+=jule::Str(" ", 1);
	if (_21b5387c3_Production) {
		_13824_cmd+=jule::Str("-O3 ", 4);
		_13824_cmd+=jule::Str("-DNDEBUG ", 9);
		_13824_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_13824_cmd+=jule::Str("-O0 ", 4);
	};
}



inline __jule_tuple_str__jule_tuple_str _202c30467_genCompileCmd(jule::Str _16418_sourcePath, jule::Ptr<_221064c23_IR>& _16436_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str &_16510_compiler = _21b537409_CompilerPath;;
	jule::Str _16613_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _21b479659_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_207099c3e:;
			{
				_202c2a4d9_pushCompCmdGcc(_16613_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_20709acd9:;
			{
				_202c52324_pushCompCmdClang(_16613_cmd);
			}
		}
		_match_end_20709aba7:;
	};
	{
		auto &expr = _16436_ir.get()._field_Passes;
		auto it = expr.begin();
		_iter_begin_20709b68b:;
		if (it != expr.end()) {
			jule::Str &_17612_pass = *it;
			{
				_16613_cmd+=_17612_pass;
				_16613_cmd+=jule::Str(" ", 1);
			}
			_iter_next_20709b68b:;
			++it;
			goto _iter_begin_20709b68b;
		}
		_iter_end_20709b68b:;
	};
	{
		auto &expr = _16436_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_20709baed:;
		if (it != expr.end()) {
			jule::Ptr<_220b61325_ImportInfo> &_18212_u = *it;
			{
				if ((_18212_u.get()._field_CppLinked && _202c4d232_isCppSourceFile(_18212_u.get()._field_Path))) {
					_16613_cmd+=_18212_u.get()._field_Path;
					_16613_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_20709baed:;
			++it;
			goto _iter_begin_20709baed;
		}
		_iter_end_20709baed:;
	};
	if ((!(_202c2a220_Out.empty()))) {
		_16613_cmd+=jule::Str("-o ", 3);
		_16613_cmd+=_202c2a220_Out;
		_16613_cmd+=jule::Str(" ", 1);
	};
	_16613_cmd+=_16418_sourcePath;
	__jule_func_result.__jule_result_arg0 = _16510_compiler;
	__jule_func_result.__jule_result_arg1 = _16613_cmd;
	return __jule_func_result;;
}



inline jule::Str _202c29a6b_getCompilePath(void) {
	return _21c4e1aee_Join(jule::Slice<jule::Str>::make({_202c29cad_OutDir,_202c2a0bb_OutName}));;
}



inline void _202c3953c_applyTargetIndependentOptimizations(jule::Ptr<_221064c23_IR>& _20545_ir) {
	jule::Ptr<_2214ba0ac_Optimizer> _20713_opt = static__2214d97b3_New(_20545_ir);;
	_221529b33_Optimize(_20713_opt.ptr());
}



inline void _202c29494_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _21b479659_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_20709c604:;
			{
				_2215ca277_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_20709e8e2:;
			{
				if (_21b537409_CompilerPath.empty()) {
					_21b537409_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_20709e958:;
			{
				if (_21b537409_CompilerPath.empty()) {
					_21b537409_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_20709e87b:;
			{
				_2215ca277_Throw((jule::Str("invalid option value for --compiler: ", 37) + _21b479659_Compiler));
			}
		}
		_match_end_20709e6a0:;
	};
}



inline void _202c2d278_checkTargetArch(jule::Str _22820_arch) {
	if ((((_22820_arch != jule::Str("amd64", 5)) && (_22820_arch != jule::Str("arm64", 5))) && (_22820_arch != jule::Str("i386", 4)))) {
		_2215ca277_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22820_arch));
	};
}



inline void _202c2d3aa_checkTargetOs(jule::Str _23618_os) {
	if ((((_23618_os != jule::Str("windows", 7)) && (_23618_os != jule::Str("linux", 5))) && (_23618_os != jule::Str("darwin", 6)))) {
		_2215ca277_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23618_os));
	};
}



inline void _202c64215_checkTargetFlag(jule::Str& _24421_target) {
	if (_24421_target.empty()) {
		_2215ca277_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2499_parts = _21d46cb12_Split(_24421_target,jule::Str("-", 1),-1LL);;
	if ((_2499_parts.len() != 2LL)) {
		_2215ca277_Throw((jule::Str("--target: undefined platform target format: ", 44) + _24421_target));
	};
	jule::Str _25410_os;;
	jule::Str _25414_arch;;
	({
		jule::Str ___jule_assign_arg = _2499_parts[0LL];
		jule::Str _1___jule_assign_arg = _2499_parts[1LL];
		_25410_os = ___jule_assign_arg;
		_25414_arch = _1___jule_assign_arg;
	});
	if ((_25410_os != jule::Str("native", 6))) {
		_202c2d3aa_checkTargetOs(_25410_os);
		_21d52da08_Os=_25410_os;
	};
	if ((_25414_arch != jule::Str("native", 6))) {
		_202c2d278_checkTargetArch(_25414_arch);
		_21d506184_Arch=_25414_arch;
	};
	_2204e1b84_UpdateTarget();
}



inline void _202c64347_checkOptFlag(jule::Str& _26718_opt) {
	if (_26718_opt.empty()) {
		_2215ca277_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _26718_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_2070a7488:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_2070a7994:;
			{
				_21e14d957_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_2070a72bd:;
			{
				_2215ca277_Throw((jule::Str("--opt: invalid optimization level: ", 35) + _26718_opt));
			}
		}
		_match_end_2070a7268:;
	};
}



inline void _202c646aa_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _21b537629_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2070a7a0a:;
			{
				goto _match_end_2070a8863;
			}
		}
		else {
			_case_begin_2070a8412:;
			{
				_2215ca277_Throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _21b537629_CppStd));
			}
		}
		_match_end_2070a8863:;
	};
}



inline jule::Slice<jule::Str> _202c647dc_checkFlags(jule::Slice<jule::Str>& _29216_args) {
	jule::Str _29313_opt = jule::Str("L0", 2);;
	jule::Str _29413_target = jule::Str("native-native", 13);;
	jule::Ptr<_202c60431_FlagSet> _29613_fs = static__202c6071c_New();;
	_2070aac50_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_2070aac50_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_2070aac50_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_202c2a220_Out)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_2070b4682_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21b537849_Shadowing)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_2070b4682_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21b537a9c_Transpilation)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_2070aac50_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_21b479659_Compiler)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_2070aac50_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_21b537409_CompilerPath)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_2070b4682_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21b5387c3_Production)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_2070b4682_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21b538130_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_2070b4682_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21b538509_Safety)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_2070aac50_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_21b537629_CppStd)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_2070b4682_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21d86798a_Copy)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_2070b4682_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21d88ab34_Deadcode)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_2070b4682_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21d8bb219_Append)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_2070b4682_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21d96d9c5_Math)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_2070b4682_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21d9a03ca_Access)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_2070b4682_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21da0918c_Inline)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_2070b4682_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21da39860_Ptr)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_2070b4682_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21da42e0c_Cond)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _202c61531_Parse(_29613_fs.ptr(), _29216_args);
		(except.ok()) ? (except.result) : ({
			_2215ca277_Throw(except.error.cast<jule::Str>(&__jule_any_type6));

			nullptr;
		});
	});;
	_202c29494_checkCompilerFlag();
	_202c646aa_checkCppStdFlag();
	_202c64215_checkTargetFlag(_29413_target);
	_202c64347_checkOptFlag(_29313_opt);
	return _31813_content;;
}



inline void _202c6491e_setupSemaFlags(jule::I64& _33124_flags) {
	if (_21b537849_Shadowing) {
		_33124_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_221064c23_IR> _202c64a51_buildIr(jule::Slice<jule::Str>& _33713_args) {
	jule::Slice<jule::Str> _3389_content = _202c647dc_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_202c6491e_setupSemaFlags(_34013_semaFlags);
	if ((_3389_content.len() == 0LL)) {
		_2215ca277_Throw(_21d4e555d_Logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_2215ca277_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21c4ab327_Abs(_3389_content[0LL]);
		_34814_path = __jule_assign_result.__jule_result_arg0;
		_34820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34820_ok))) {
		_2215ca277_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_21c3cc820_Status> _3549_inf = ({
		auto except = static__21b5d882e_Of(_21d52d673_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_2215ca277_Throw(_21d4e555d_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_21c3cc820_Status>(nullptr);});
	});;
	if ((!(_21b6d2a49_IsDir(_3549_inf.ptr())))) {
		_2215ca277_Throw(_21d4e555d_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_221064c23_IR> _36214_ir;;
	jule::Slice<_21d4e511d_Log> _36218_logs;;
	({
		__jule_tuple_x_221064c23_IR__jule_tuple_s_21d4e511d_Log __jule_assign_result = static__220cc5555_Build(_34814_path,_34013_semaFlags);
		_36214_ir = __jule_assign_result.__jule_result_arg0;
		_36218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_2215ca277_Throw(_21d4e555d_Logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_34814_path, &__jule_any_type6)})));
	};
	if ((_36218_logs != nullptr)) {
		static__2215c984d_PrintLogs(_36218_logs);
		_2215ca277_Throw(jule::Str());
	};
	return _36214_ir;;
}



inline void _202c64b83_compileCommand(jule::Slice<jule::Str>& _37724_args) {
	_37724_args=_37724_args.slice(1LL);
	if ((_37724_args[0LL] == jule::Str("test", 4))) {
		_21b537d66_Test=true;
		_37724_args=_37724_args.slice(1LL);
	};
	jule::Ptr<_221064c23_IR> _38313_ir = _202c64a51_buildIr(_37724_args);;
	;
	if ((!(_21b537d66_Test))) {
		jule::Ptr<_220b31636_Fn> _38817_main = _220b65a33_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
		if ((_38817_main == nullptr)) {
			_2215ca277_Throw(_21d4e555d_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_202c3953c_applyTargetIndependentOptimizations(_38313_ir);
	_2210b8dcb_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _202c30467_genCompileCmd(_202c29a6b_getCompilePath(),_38313_ir);
		_39910_compiler = __jule_assign_result.__jule_result_arg0;
		_39920_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_202c052a5_ObjectCoder> _40113_oc = static__202b6b859_New(_38313_ir,_202b96d5c_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_21b537d66_Test) {
		jule::Ptr<_202b61e6a_TestCoder> _40617_tc = static__202b623dd_New(_40113_oc);;
		_202b63620_Serialize(_40617_tc);
	} else {
		_202c09a07_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _202c29a6b_getCompilePath();;
	jule::Ptr<_21b6092ab_File> _41313_file = _202c325ce_openOutput(_4129_path);;
	({
		auto except = _21b5bcc97_Write(_41313_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_2215ca277_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _21b60a048_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_21b537a9c_Transpilation))) {
		_202c2c222_compileIr(_39910_compiler,_39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_21d52e740_init();
	_2204ec288_init();
	_202c2dee3_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}