// Auto generated by JuleC.
// JuleC version: jule0.0.13 @master
// Date: 22/5/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1e54a14cb_Importer{};
struct _1e554d853_Kind{};
struct _1e5569c04_Lookup{};
struct _1e6ead7ab_CommonFlag{};
struct _241ad0e88_Range16;
struct _241ad140b_Range32;
struct _241ad187e_RangeTable;
struct _242ea79e0_acceptRange;
struct _2412bba4d_lazyBuff;
struct _24050355a_DirEntry;
struct _240538a24_Directory;
struct _24042a4b5_File;
struct _2411eda29_Status;
struct _242d7511b_cmdAttrs;
struct _24305e4ae_Log;
struct _20d155596_Token;
struct _20d15a931_File;
struct _20d15c988_kindPair;
struct _20d1634e9_lex;
struct _1e473e391_Ast;
struct _1e4740183_Node;
struct _1e474057e_Directive;
struct _1e4773826_TypeDecl;
struct _1e4773ddc_IdentTypeDecl;
struct _1e477453b_SubIdentTypeDecl;
struct _1e47748e3_NamespaceTypeDecl;
struct _1e4774bce_SptrTypeDecl;
struct _1e47750ca_SlcTypeDecl;
struct _1e47753b6_TupleTypeDecl;
struct _1e47756a2_PtrTypeDecl;
struct _1e4775d34_ArrTypeDecl;
struct _1e4776582_MapTypeDecl;
struct _1e4776939_RetTypeDecl;
struct _1e4777d47_Expr;
struct _1e4778133_RangeExpr;
struct _1e47786d8_UseExpr;
struct _1e47789c4_TupleExpr;
struct _1e4778d7b_LitExpr;
struct _1e4779585_UnsafeExpr;
struct _1e4779a08_IdentExpr;
struct _1e477a212_UnaryExpr;
struct _1e477a5b9_VariadicExpr;
struct _1e477a971_CastExpr;
struct _1e477ad28_NsSelectionExpr;
struct _1e477b29b_SubIdentExpr;
struct _1e477b71e_BinopExpr;
struct _1e477bd29_FnCallExpr;
struct _1e477c7a8_FieldExprPair;
struct _1e477d006_StructLit;
struct _1e477d479_BraceLit;
struct _1e477dc4e_KeyValPair;
struct _1e477e436_SliceExpr;
struct _1e477eca5_IndexingExpr;
struct _1e47803b0_SlicingExpr;
struct _1e478069b_Constraint;
struct _1e4780b1e_GenericDecl;
struct _1e4780ec6_LabelSt;
struct _1e478137d_GotoSt;
struct _1e4781669_FallSt;
struct _1e4781c74_AssignLeft;
struct _1e47822b3_AssignSt;
struct _1e47831a4_Stmt;
struct _1e47837ae_ScopeTree;
struct _1e4783e85_ParamDecl;
struct _1e47852a5_FnDecl;
struct _1e4786284_VarDecl;
struct _1e478663b_RetSt;
struct _1e4786c9b_Iter;
struct _1e4787571_WhileKind;
struct _1e4787e12_RangeKind;
struct _1e47882b9_BreakSt;
struct _1e4788671_ContSt;
struct _1e4788ae4_If;
struct _1e4788e9b_Else;
struct _1e478941e_Conditional;
struct _1e4789ae5_TypeAliasDecl;
struct _1e478a068_Case;
struct _1e478a73e_MatchCase;
struct _1e478aed1_UseDecl;
struct _1e478b454_EnumItemDecl;
struct _1e478be7c_EnumDecl;
struct _1e478c983_TypeEnumItemDecl;
struct _1e478d08d_TypeEnumDecl;
struct _1e478d28b_FieldDecl;
struct _1e478da3e_StructDecl;
struct _1e478e149_TraitDecl;
struct _1e478e754_Impl;
struct _1e5429003_floatInfo;
struct _1e54291e0_decimalSlice;
struct _1e5438ad4_leftCheat;
struct _1e54395a7_decimal;
struct _1e54469c1_Const;
struct _1e4764075_Field;
struct _1e476b6ba_Operators;
struct _1e4790018_Struct;
struct _1e4790205_FieldIns;
struct _1e54527e0_OperandExprModel;
struct _1e5452ca7_BinopExprModel;
struct _1e545315e_UnaryExprModel;
struct _1e545355a_StructArgExprModel;
struct _1e5453912_StructLitExprModel;
struct _1e5453c20_AllocStructLitExprModel;
struct _1e5454270_CastingExprModel;
struct _1e5454b22_FnCallExprModel;
struct _1e5454ec9_SliceExprModel;
struct _1e545544c_IndexingExprModel;
struct _1e5455804_AnonFnExprModel;
struct _1e5455bab_KeyValPairExprModel;
struct _1e545612e_MapExprModel;
struct _1e545666d_SlicingExprModel;
struct _1e5456bac_TraitSubIdentExprModel;
struct _1e5457493_StructSubIdentExprModel;
struct _1e5457839_StructStaticIdentExprModel;
struct _1e5457c02_ArrayExprModel;
struct _1e5457edd_CommonIdentExprModel;
struct _1e545854e_CommonSubIdentExprModel;
struct _1e545884b_TupleExprModel;
struct _1e5458c25_BuiltinOutCallExprModel;
struct _1e5459110_BuiltinOutlnCallExprModel;
struct _1e545942e_BuiltinCloneCallExprModel;
struct _1e5459819_BuiltinNewCallExprModel;
struct _1e5459c04_BuiltinPanicCallExprModel;
struct _1e545a1aa_BuiltinAssertCallExprModel;
struct _1e545a661_BuiltinMakeCallExprModel;
struct _1e545aa4b_BuiltinAppendCallExprModel;
struct _1e545ad6a_BuiltinLenCallExprModel;
struct _1e545b189_BuiltinCapCallExprModel;
struct _1e545b83d_BuiltinDeleteCallExprModel;
struct _1e545bba1_BuiltinCopyCallExprModel;
struct _1e545c08b_BuiltinErrorCallExprModel;
struct _1e545c388_SizeofExprModel;
struct _1e545c674_AlignofExprModel;
struct _1e545c960_RuneExprModel;
struct _1e545cc6d_IntegratedToStrExprModel;
struct _1e545d136_BackendEmitExprModel;
struct _1e545d422_FreeExprModel;
struct _1e545deb1_RetType;
struct _1e545e687_Param;
struct _1e5460ec4_Fn;
struct _1e5462ca6_ParamIns;
struct _1e5463b75_FnIns;
struct _1e5466ae0_ReferenceStack;
struct _1e5467e54_Pass;
struct _1e546c3ed_symbolBuilder;
struct _1e5472dc6_Trait;
struct _1e5474526_EnumItem;
struct _1e547501b_Enum;
struct _1e5476050_TypeEnumItem;
struct _1e5476616_TypeEnum;
struct _1e5478b46_constraintChecker;
struct _1e547aa7c_Impl;
struct _1e5480ad7_Scope;
struct _1e5480ed3_If;
struct _1e54812be_Else;
struct _1e5481643_Conditional;
struct _1e548192e_InfIter;
struct _1e5481da2_WhileIter;
struct _1e5482787_RangeIter;
struct _1e5482b83_ContSt;
struct _1e548303a_BreakSt;
struct _1e5483326_Label;
struct _1e5483612_GotoSt;
struct _1e54839b9_Postfix;
struct _1e5483e3c_Assign;
struct _1e54842e4_MultiAssign;
struct _1e5484833_Match;
struct _1e548537d_Case;
struct _1e5485933_FallSt;
struct _1e5485ca7_RetSt;
struct _1e548b3ea_scopeLabel;
struct _1e548b692_scopeGoto;
struct _1e548c4a6_scopeChecker;
struct _1e549d0bb_directiveChecker;
struct _1e54a4149_ImportInfo;
struct _1e54a70a3_Package;
struct _1e54ac295_Sema;
struct _1e54c759b_missingRetChecker;
struct _1e54c925c_IterRelation;
struct _1e54ca291_Var;
struct _1e54cb03e_FuncPattern;
struct _1e550bab9_typeCompatibilityChecker;
struct _1e550d6e2_assignTypeChecker;
struct _1e55101c7_dynamicTypeAnnotation;
struct _1e5514a8e_fnCallArgChecker;
struct _1e5517498_structLitChecker;
struct _1e551907c_rangeChecker;
struct _1e551b117_retTypeChecker;
struct _1e551cec6_SymbolTable;
struct _1e5522d00_Data;
struct _1e5523d78_Value;
struct _1e552486d_Eval;
struct _1e5540713_unaryEval;
struct _1e55424a1_binaryEval;
struct _1e554c555_InsGeneric;
struct _1e554d08e_TypeAlias;
struct _1e554dc82_TypeKind;
struct _1e5553160_TypeSymbol;
struct _1e55539ce_Prim;
struct _1e5557263_Sptr;
struct _1e5557bc0_Slc;
struct _1e555874d_Tuple;
struct _1e5559276_Map;
struct _1e5559d6a_Arr;
struct _1e555a7c7_Ptr;
struct _1e555b71d_referencer;
struct _1e555c5ed_typeChecker;
struct _1e5564d0e_identTypeLookup;
struct _1e68db838_FileInfo;
struct _1e69378b7_stmt;
struct _1e69381e2_scopeParser;
struct _1e6944709_exprBuilder;
struct _1e695100c_assignInfo;
struct _1e695483a_parser;
struct _1e696554e_typeBuilder;
struct _1e62d85ba_CompileInfo;
struct _1e62d991d_directiveEval;
struct _1e685c028_JuleImporter;
struct _1e4bec5b8_OrderedDefines;
struct _1e637e991_defineOrderer;
struct _1e6a381d2_liveTable;
struct _1e6a73b8a_scopeDeadCode;
struct _1e6a77ae5_exprDeadCode;
struct _20d5b2c34_UnsafeBinopExprModel;
struct _226994c8a_UnsafeIndexingExprModel;
struct _20d5b300e_PushToSliceExprModel;
struct _20d77659b_MutSlicingExprModel;
struct _1e6223802_StrInsertBeginExprModel;
struct _1e62239de_scopeOptimizer;
struct _1e6223bcb_exprOptimizer;
struct _1e6974b57_Optimizer;
struct _1e6a92ea6_AnsiEscape;
struct _1e6a944c4_Logger;
struct _1e71ed710_AbsTime;
struct _1e71edda3_Time;
struct _1e714c83a_scopeCoder;
struct _1e71554d0_exprCoder;
struct _1e7164643_deriveCoder;
struct _1e7166018_TestCoder;
struct _1e7168669_identCoder;
struct _1e719ae0a_SerializationInfo;
struct _1e717141e_traitHash;
struct _1e720b71d_customType;
struct _1e720c1be_typeCoder;
struct _1e72149ac_resultCoder;
struct _1e9c7e722_Flag;
struct _1e9c83380_Flag;
struct _1e9c86b47_Flag;
struct _1e9c8a453_Flag;
struct _1e9c8dc1a_Flag;
struct _1e724c4a6_FlagSet;
struct _242d3c358_Cmd;
struct _1e65154a6_IR;
struct _1e6a3849b_ObjectDeadCode;
struct _1e47903e2_StructIns;
struct _1e7205bbd_ObjectCoder;
struct _1e724eb7e_argParser;
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e5522d00_Data__jule_tuple_x_1e5522d00_Data {
	jule::Ptr<_1e5522d00_Data> __jule_result_arg0;
	jule::Ptr<_1e5522d00_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1e478a068_Case__jule_tuple_bool {
	jule::Ptr<_1e478a068_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1e478a068_Case__jule_tuple_x_1e4788e9b_Else {
	jule::Slice<jule::Ptr<_1e478a068_Case>> __jule_result_arg0;
	jule::Ptr<_1e4788e9b_Else> __jule_result_arg1;
};
struct __jule_tuple__1e4782e73_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e47822b3_AssignSt__jule_tuple_bool {
	jule::Ptr<_1e47822b3_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1e4773826_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e4776939_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1e4776939_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1e473e391_Ast__jule_tuple_s_24305e4ae_Log {
	jule::Slice<jule::Ptr<_1e473e391_Ast>> __jule_result_arg0;
	jule::Slice<_24305e4ae_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_24305e4ae_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_24305e4ae_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1e65154a6_IR__jule_tuple_s_24305e4ae_Log {
	jule::Ptr<_1e65154a6_IR> __jule_result_arg0;
	jule::Slice<_24305e4ae_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__20e3c3aee_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__20e3c3aee_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__20e3c3aee_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__20e3c3aee_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e551cec6_SymbolTable__jule_tuple_s_24305e4ae_Log {
	jule::Ptr<_1e551cec6_SymbolTable> __jule_result_arg0;
	jule::Slice<_24305e4ae_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1e54a70a3_Package__jule_tuple_s_24305e4ae_Log {
	jule::Ptr<_1e54a70a3_Package> __jule_result_arg0;
	jule::Slice<_24305e4ae_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1e473e391_Ast__jule_tuple_s_24305e4ae_Log {
	jule::Ptr<_1e473e391_Ast> __jule_result_arg0;
	jule::Slice<_24305e4ae_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_20d155596_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_20d155596_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_20d155596_Token__jule_tuple_sx_20d155596_Token {
	jule::Slice<jule::Ptr<_20d155596_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_20d155596_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_20d155596_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_20d155596_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log {
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> __jule_result_arg0;
	jule::Slice<_24305e4ae_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct _241ad0e88_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	_241ad0e88_Range16(void) = default;

	inline bool operator==(_241ad0e88_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_241ad0e88_Range16 _other) { return !this->operator==(_other); }


};
struct _241ad140b_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	_241ad140b_Range32(void) = default;

	inline bool operator==(_241ad140b_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_241ad140b_Range32 _other) { return !this->operator==(_other); }


};
struct _241ad187e_RangeTable {
	jule::Slice<_241ad0e88_Range16> _field_R16;
	jule::Slice<_241ad140b_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	

	_241ad187e_RangeTable(void) = default;


};
struct _242ea79e0_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	_242ea79e0_acceptRange(void) = default;

	inline bool operator==(_242ea79e0_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_242ea79e0_acceptRange _other) { return !this->operator==(_other); }


};
inline jule::U8 _2412c7ebb_index(_2412bba4d_lazyBuff*, jule::I64);
inline void _2412ca7e8_append(_2412bba4d_lazyBuff*, jule::U8);
inline jule::Str _2412cc124_string(_2412bba4d_lazyBuff*);
struct _2412bba4d_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	

	_2412bba4d_lazyBuff(void) = default;


};
struct _24050355a_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_2411eda29_Status> _field_Stat;
	

	_24050355a_DirEntry(void) = default;

	inline bool operator==(_24050355a_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_24050355a_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_24050355a_DirEntry>>> static__2412335ca_Read(jule::Str);
inline jule::VoidExceptional static__24125d11b_Create(jule::Str);
inline jule::VoidExceptional static__241237e81_Remove(jule::Str);
struct _240538a24_Directory {
	

	_240538a24_Directory(void) = default;

	inline bool operator==(_240538a24_Directory _other) { return true; }

	inline bool operator!=(_240538a24_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_24042a4b5_File>> static__24042b40b_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__24042c75e_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _2403ddea1_Write(_24042a4b5_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _240408c35_Read(_24042a4b5_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_24042a4b5_File> static__24042a6a2_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_24042a4b5_File>> static__24040a1ba_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__24050435d_Read(jule::Str);
inline jule::VoidExceptional static__240504924_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _2404092eb_Seek(_24042a4b5_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _24042b252_Close(_24042a4b5_File*);
struct _24042a4b5_File {
	jule::Uintptr _field_handle = 0;
	

	_24042a4b5_File(void) = default;

	inline bool operator==(_24042a4b5_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_24042a4b5_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_2411eda29_Status>> static__240409a38_Of(jule::Str);
inline jule::Bool _240503c53_IsDir(_2411eda29_Status*);
inline jule::Bool _24053967e_IsReg(_2411eda29_Status*);
struct _2411eda29_Status {
	jule::U64 _field_Mode = 0;
	jule::U64 _field_Size = 0;
	

	_2411eda29_Status(void) = default;

	inline bool operator==(_2411eda29_Status _other) {
		return 
			this->_field_Mode == _other._field_Mode &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_2411eda29_Status _other) { return !this->operator==(_other); }


};
struct _242d7511b_cmdAttrs {
	jule::I64 _field_pid = -1LL;
	

	_242d7511b_cmdAttrs(void) = default;

	inline bool operator==(_242d7511b_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_242d7511b_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _24305e4ae_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	_24305e4ae_Log(void) = default;

	inline bool operator==(_24305e4ae_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_24305e4ae_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _20d15594d_Prec(_20d155596_Token*);
struct _20d155596_Token {
	jule::Ptr<_20d15a931_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	_20d155596_Token(void) = default;

	inline bool operator==(_20d155596_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_20d155596_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _20d15ad3d_IsOk(_20d15a931_File*);
inline void _20d15b0b3_Fill(_20d15a931_File*, jule::Slice<jule::U8>);
inline jule::Str _20d15b327_Dir(_20d15a931_File*);
inline jule::Str _20d15b58b_Name(_20d15a931_File*);
inline jule::Uintptr _20d15b800_Addr(_20d15a931_File*);
inline jule::Str _20d15bb0d_GetRow(_20d15a931_File*, jule::I64);
struct _20d15a931_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_20d155596_Token>> _field_Tokens;
	

	_20d15a931_File(void) = default;


};
struct _20d15c988_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_20d15c988_kindPair(void) = default;

	inline bool operator==(_20d15c988_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_20d15c988_kindPair _other) { return !this->operator==(_other); }


};
inline void _20d163a8d_pushErr(_20d1634e9_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _20d163dac_pushErrTok(_20d1634e9_lex*, jule::Ptr<_20d155596_Token>*, jule::Str);
inline void _20d164088_lex(_20d1634e9_lex*);
inline jule::Str _20d164396_id(_20d1634e9_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _20d16460a_resume(_20d1634e9_lex*);
inline void _20d164880_lexLineComment(_20d1634e9_lex*, jule::Ptr<_20d155596_Token>*);
inline void _20d164b05_lexRangeComment(_20d1634e9_lex*, jule::Ptr<_20d155596_Token>*);
inline jule::Str _20d164e13_num(_20d1634e9_lex*, jule::Slice<jule::U8>*);
inline jule::Str _20d165221_escapeSeq(_20d1634e9_lex*, jule::Slice<jule::U8>*);
inline jule::Str _20d1655c8_getRune(_20d1634e9_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _20d1658d6_lexRune(_20d1634e9_lex*, jule::Slice<jule::U8>*);
inline jule::Str _20d165b4a_lexStr(_20d1634e9_lex*);
inline jule::Bool _20d165dae_isFirstTokenOfLine(_20d1634e9_lex*);
inline void _20d16608a_newLine(_20d1634e9_lex*);
inline jule::Bool _20d166585_isOp(_20d1634e9_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_20d155596_Token>*);
inline jule::Bool _20d16693c_lexBasicOps(_20d1634e9_lex*, jule::Slice<jule::U8>, jule::Ptr<_20d155596_Token>*);
inline jule::Bool _20d166ce4_lexId(_20d1634e9_lex*, jule::Slice<jule::U8>*, jule::Ptr<_20d155596_Token>*);
inline jule::Bool _20d16719b_lexNum(_20d1634e9_lex*, jule::Slice<jule::U8>*, jule::Ptr<_20d155596_Token>*);
inline jule::Ptr<_20d155596_Token> _20d167410_token(_20d1634e9_lex*);
struct _20d1634e9_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_20d155596_Token>> _field_tokens;
	jule::Ptr<_20d15a931_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_24305e4ae_Log> _field_errors;
	

	_20d1634e9_lex(void) = default;


};
struct _1e473e391_Ast {
	jule::Ptr<_20d15a931_File> _field_File;
	jule::Slice<jule::Ptr<_1e474057e_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1e478aed1_UseDecl>> _field_UseDecls;
	jule::Slice<_1e4740183_Node> _field_Nodes;
	

	_1e473e391_Ast(void) = default;


};
struct _1e4740183_Node {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_1e4740183_Node(void) = default;

	inline bool operator==(_1e4740183_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1e4740183_Node _other) { return !this->operator==(_other); }


};
struct _1e474057e_Directive {
	jule::Ptr<_20d155596_Token> _field_Tag;
	jule::Slice<jule::Ptr<_20d155596_Token>> _field_Args;
	

	_1e474057e_Directive(void) = default;


};
struct _1e4773826_TypeDecl {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_1e4773826_TypeDecl(void) = default;

	inline bool operator==(_1e4773826_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e4773826_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e4774250_IsPrim(_1e4773ddc_IdentTypeDecl*);
struct _1e4773ddc_IdentTypeDecl {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1e4773826_TypeDecl>> _field_Generics;
	

	_1e4773ddc_IdentTypeDecl(void) = default;


};
struct _1e477453b_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1e4773ddc_IdentTypeDecl>> _field_Idents;
	

	_1e477453b_SubIdentTypeDecl(void) = default;


};
struct _1e47748e3_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_20d155596_Token>> _field_Idents;
	jule::Ptr<_1e4773826_TypeDecl> _field_Kind;
	

	_1e47748e3_NamespaceTypeDecl(void) = default;


};
struct _1e4774bce_SptrTypeDecl {
	jule::Ptr<_1e4773826_TypeDecl> _field_Elem;
	

	_1e4774bce_SptrTypeDecl(void) = default;

	inline bool operator==(_1e4774bce_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e4774bce_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e47750ca_SlcTypeDecl {
	jule::Ptr<_1e4773826_TypeDecl> _field_Elem;
	

	_1e47750ca_SlcTypeDecl(void) = default;

	inline bool operator==(_1e47750ca_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e47750ca_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e47753b6_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1e4773826_TypeDecl>> _field_Types;
	

	_1e47753b6_TupleTypeDecl(void) = default;


};
inline jule::Bool _1e4775a04_IsUnsafe(_1e47756a2_PtrTypeDecl*);
struct _1e47756a2_PtrTypeDecl {
	jule::Ptr<_1e4773826_TypeDecl> _field_Elem;
	

	_1e47756a2_PtrTypeDecl(void) = default;

	inline bool operator==(_1e47756a2_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e47756a2_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e477620d_AutoSized(_1e4775d34_ArrTypeDecl*);
struct _1e4775d34_ArrTypeDecl {
	jule::Ptr<_1e4773826_TypeDecl> _field_Elem;
	jule::Ptr<_1e4777d47_Expr> _field_Size;
	

	_1e4775d34_ArrTypeDecl(void) = default;

	inline bool operator==(_1e4775d34_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1e4775d34_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e4776582_MapTypeDecl {
	jule::Ptr<_1e4773826_TypeDecl> _field_Key;
	jule::Ptr<_1e4773826_TypeDecl> _field_Val;
	

	_1e4776582_MapTypeDecl(void) = default;

	inline bool operator==(_1e4776582_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1e4776582_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e4776939_RetTypeDecl {
	jule::Ptr<_1e4773826_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_20d155596_Token>> _field_Idents;
	

	_1e4776939_RetTypeDecl(void) = default;


};
struct _1e4777d47_Expr {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_20d155596_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_1e4777d47_Expr(void) = default;

	inline bool operator==(_1e4777d47_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e4777d47_Expr _other) { return !this->operator==(_other); }


};
struct _1e4778133_RangeExpr {
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	

	_1e4778133_RangeExpr(void) = default;

	inline bool operator==(_1e4778133_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e4778133_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1e47786d8_UseExpr {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	

	_1e47786d8_UseExpr(void) = default;

	inline bool operator==(_1e47786d8_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e47786d8_UseExpr _other) { return !this->operator==(_other); }


};
struct _1e47789c4_TupleExpr {
	jule::Slice<jule::Ptr<_1e4777d47_Expr>> _field_Expr;
	

	_1e47789c4_TupleExpr(void) = default;


};
inline jule::Bool _1e47791cd_IsNil(_1e4778d7b_LitExpr*);
struct _1e4778d7b_LitExpr {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Value;
	

	_1e4778d7b_LitExpr(void) = default;

	inline bool operator==(_1e4778d7b_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1e4778d7b_LitExpr _other) { return !this->operator==(_other); }


};
struct _1e4779585_UnsafeExpr {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	

	_1e4779585_UnsafeExpr(void) = default;

	inline bool operator==(_1e4779585_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e4779585_UnsafeExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e4779d5a_IsSelf(_1e4779a08_IdentExpr*);
struct _1e4779a08_IdentExpr {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	

	_1e4779a08_IdentExpr(void) = default;

	inline bool operator==(_1e4779a08_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_1e4779a08_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1e477a212_UnaryExpr {
	jule::Ptr<_20d155596_Token> _field_Op;
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	

	_1e477a212_UnaryExpr(void) = default;

	inline bool operator==(_1e477a212_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e477a212_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1e477a5b9_VariadicExpr {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	

	_1e477a5b9_VariadicExpr(void) = default;

	inline bool operator==(_1e477a5b9_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e477a5b9_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1e477a971_CastExpr {
	jule::Ptr<_1e4773826_TypeDecl> _field_Kind;
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	

	_1e477a971_CastExpr(void) = default;

	inline bool operator==(_1e477a971_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e477a971_CastExpr _other) { return !this->operator==(_other); }


};
struct _1e477ad28_NsSelectionExpr {
	jule::Slice<jule::Ptr<_20d155596_Token>> _field_Ns;
	jule::Ptr<_20d155596_Token> _field_Ident;
	

	_1e477ad28_NsSelectionExpr(void) = default;


};
struct _1e477b29b_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	jule::Ptr<_20d155596_Token> _field_Ident;
	

	_1e477b29b_SubIdentExpr(void) = default;

	inline bool operator==(_1e477b29b_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e477b29b_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1e477b71e_BinopExpr {
	jule::Ptr<_1e4777d47_Expr> _field_Left;
	jule::Ptr<_1e4777d47_Expr> _field_Right;
	jule::Ptr<_20d155596_Token> _field_Op;
	

	_1e477b71e_BinopExpr(void) = default;

	inline bool operator==(_1e477b71e_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e477b71e_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e477c18c_Unhandled(_1e477bd29_FnCallExpr*);
inline jule::Bool _1e477c401_Ignored(_1e477bd29_FnCallExpr*);
struct _1e477bd29_FnCallExpr {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1e4777d47_Expr>> _field_Args;
	jule::Ptr<_1e47837ae_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	

	_1e477bd29_FnCallExpr(void) = default;


};
inline jule::Bool _1e477cb0a_IsTargeted(_1e477c7a8_FieldExprPair*);
struct _1e477c7a8_FieldExprPair {
	jule::Ptr<_20d155596_Token> _field_Field;
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	

	_1e477c7a8_FieldExprPair(void) = default;

	inline bool operator==(_1e477c7a8_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e477c7a8_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1e477d006_StructLit {
	jule::Ptr<_20d155596_Token> _field_End;
	jule::Ptr<_1e4773826_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1e4777d47_Expr>> _field_Exprs;
	

	_1e477d006_StructLit(void) = default;


};
inline jule::Bool _1e477d7cb_IsEmpty(_1e477d479_BraceLit*);
struct _1e477d479_BraceLit {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_20d155596_Token> _field_End;
	jule::Slice<jule::Ptr<_1e4777d47_Expr>> _field_Exprs;
	

	_1e477d479_BraceLit(void) = default;


};
struct _1e477dc4e_KeyValPair {
	jule::Ptr<_1e4777d47_Expr> _field_Key;
	jule::Ptr<_1e4777d47_Expr> _field_Val;
	jule::Ptr<_20d155596_Token> _field_Colon;
	

	_1e477dc4e_KeyValPair(void) = default;

	inline bool operator==(_1e477dc4e_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1e477dc4e_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e477e766_IsEmpty(_1e477e436_SliceExpr*);
struct _1e477e436_SliceExpr {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_20d155596_Token> _field_End;
	jule::Slice<jule::Ptr<_1e4777d47_Expr>> _field_Exprs;
	

	_1e477e436_SliceExpr(void) = default;


};
struct _1e477eca5_IndexingExpr {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_20d155596_Token> _field_End;
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	jule::Ptr<_1e4777d47_Expr> _field_Index;
	

	_1e477eca5_IndexingExpr(void) = default;

	inline bool operator==(_1e477eca5_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1e477eca5_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1e47803b0_SlicingExpr {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_20d155596_Token> _field_End;
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	jule::Ptr<_1e4777d47_Expr> _field_Start;
	jule::Ptr<_1e4777d47_Expr> _field_To;
	

	_1e47803b0_SlicingExpr(void) = default;

	inline bool operator==(_1e47803b0_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1e47803b0_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1e478069b_Constraint {
	jule::Slice<jule::Ptr<_1e4773826_TypeDecl>> _field_Mask;
	

	_1e478069b_Constraint(void) = default;


};
struct _1e4780b1e_GenericDecl {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e478069b_Constraint> _field_Constraint;
	

	_1e4780b1e_GenericDecl(void) = default;

	inline bool operator==(_1e4780b1e_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1e4780b1e_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1e4780ec6_LabelSt {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Ident;
	

	_1e4780ec6_LabelSt(void) = default;

	inline bool operator==(_1e4780ec6_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e4780ec6_LabelSt _other) { return !this->operator==(_other); }


};
struct _1e478137d_GotoSt {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_20d155596_Token> _field_Label;
	

	_1e478137d_GotoSt(void) = default;

	inline bool operator==(_1e478137d_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1e478137d_GotoSt _other) { return !this->operator==(_other); }


};
struct _1e4781669_FallSt {
	jule::Ptr<_20d155596_Token> _field_Token;
	

	_1e4781669_FallSt(void) = default;

	inline bool operator==(_1e4781669_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1e4781669_FallSt _other) { return !this->operator==(_other); }


};
struct _1e4781c74_AssignLeft {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	

	_1e4781c74_AssignLeft(void) = default;

	inline bool operator==(_1e4781c74_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e4781c74_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1e47822b3_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_20d155596_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1e4781c74_AssignLeft>> _field_Left;
	jule::Ptr<_1e4777d47_Expr> _field_Right;
	

	_1e47822b3_AssignSt(void) = default;


};
struct _1e47831a4_Stmt {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_1e47831a4_Stmt(void) = default;

	inline bool operator==(_1e47831a4_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1e47831a4_Stmt _other) { return !this->operator==(_other); }


};
struct _1e47837ae_ScopeTree {
	jule::Ptr<_1e47837ae_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1e47831a4_Stmt> _field_Stmts;
	jule::Ptr<_20d155596_Token> _field_End;
	

	_1e47837ae_ScopeTree(void) = default;


};
inline jule::Bool _1e47842e8_IsSelf(_1e4783e85_ParamDecl*);
inline jule::Bool _1e478455c_IsRef(_1e4783e85_ParamDecl*);
struct _1e4783e85_ParamDecl {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1e4773826_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	_1e4783e85_ParamDecl(void) = default;

	inline bool operator==(_1e4783e85_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e4783e85_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e4785607_IsAnon(_1e47852a5_FnDecl*);
struct _1e47852a5_FnDecl {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e474057e_Directive>> _field_Directives;
	jule::Ptr<_1e47837ae_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>> _field_Generics;
	jule::Ptr<_1e4776939_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1e4783e85_ParamDecl>> _field_Params;
	

	_1e47852a5_FnDecl(void) = default;


};
struct _1e4786284_VarDecl {
	jule::Ptr<_1e47837ae_ScopeTree> _field_Scope;
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1e474057e_Directive>> _field_Directives;
	jule::Ptr<_1e4773826_TypeDecl> _field_Kind;
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	

	_1e4786284_VarDecl(void) = default;


};
struct _1e478663b_RetSt {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	

	_1e478663b_RetSt(void) = default;

	inline bool operator==(_1e478663b_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e478663b_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e47870ed_IsInf(_1e4786c9b_Iter*);
struct _1e4786c9b_Iter {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1e47837ae_ScopeTree> _field_Scope;
	

	_1e4786c9b_Iter(void) = default;

	inline bool operator==(_1e4786c9b_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e4786c9b_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e47878c3_IsWhileNext(_1e4787571_WhileKind*);
struct _1e4787571_WhileKind {
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_20d155596_Token> _field_NextToken;
	

	_1e4787571_WhileKind(void) = default;

	inline bool operator==(_1e4787571_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1e4787571_WhileKind _other) { return !this->operator==(_other); }


};
struct _1e4787e12_RangeKind {
	jule::Ptr<_20d155596_Token> _field_InToken;
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	jule::Ptr<_1e4786284_VarDecl> _field_KeyA;
	jule::Ptr<_1e4786284_VarDecl> _field_KeyB;
	

	_1e4787e12_RangeKind(void) = default;

	inline bool operator==(_1e4787e12_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1e4787e12_RangeKind _other) { return !this->operator==(_other); }


};
struct _1e47882b9_BreakSt {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_20d155596_Token> _field_Label;
	

	_1e47882b9_BreakSt(void) = default;

	inline bool operator==(_1e47882b9_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1e47882b9_BreakSt _other) { return !this->operator==(_other); }


};
struct _1e4788671_ContSt {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_20d155596_Token> _field_Label;
	

	_1e4788671_ContSt(void) = default;

	inline bool operator==(_1e4788671_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1e4788671_ContSt _other) { return !this->operator==(_other); }


};
struct _1e4788ae4_If {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	jule::Ptr<_1e47837ae_ScopeTree> _field_Scope;
	

	_1e4788ae4_If(void) = default;

	inline bool operator==(_1e4788ae4_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e4788ae4_If _other) { return !this->operator==(_other); }


};
struct _1e4788e9b_Else {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_1e47837ae_ScopeTree> _field_Scope;
	

	_1e4788e9b_Else(void) = default;

	inline bool operator==(_1e4788e9b_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e4788e9b_Else _other) { return !this->operator==(_other); }


};
struct _1e478941e_Conditional {
	jule::Ptr<_1e4788ae4_If> _field_Head;
	jule::Slice<jule::Ptr<_1e4788ae4_If>> _field_Tail;
	jule::Ptr<_1e4788e9b_Else> _field_Default;
	

	_1e478941e_Conditional(void) = default;


};
struct _1e4789ae5_TypeAliasDecl {
	jule::Ptr<_1e47837ae_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e4773826_TypeDecl> _field_Kind;
	

	_1e4789ae5_TypeAliasDecl(void) = default;

	inline bool operator==(_1e4789ae5_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e4789ae5_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1e478a068_Case {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_1e47837ae_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1e4777d47_Expr>> _field_Exprs;
	

	_1e478a068_Case(void) = default;


};
struct _1e478a73e_MatchCase {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_20d155596_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1e478a068_Case>> _field_Cases;
	jule::Ptr<_1e4788e9b_Else> _field_Default;
	

	_1e478a73e_MatchCase(void) = default;


};
struct _1e478aed1_UseDecl {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_20d155596_Token>> _field_Selected;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	

	_1e478aed1_UseDecl(void) = default;


};
inline jule::Bool _1e478b7a6_AutoExpr(_1e478b454_EnumItemDecl*);
struct _1e478b454_EnumItemDecl {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	

	_1e478b454_EnumItemDecl(void) = default;

	inline bool operator==(_1e478b454_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e478b454_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e478c510_DefaultTyped(_1e478be7c_EnumDecl*);
struct _1e478be7c_EnumDecl {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1e4773826_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1e478b454_EnumItemDecl>> _field_Items;
	jule::Ptr<_20d155596_Token> _field_End;
	

	_1e478be7c_EnumDecl(void) = default;


};
struct _1e478c983_TypeEnumItemDecl {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e4773826_TypeDecl> _field_Kind;
	

	_1e478c983_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1e478c983_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e478c983_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1e478d08d_TypeEnumDecl {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e478c983_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_20d155596_Token> _field_End;
	

	_1e478d08d_TypeEnumDecl(void) = default;


};
struct _1e478d28b_FieldDecl {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1e4773826_TypeDecl> _field_Kind;
	jule::Ptr<_1e4777d47_Expr> _field_Default;
	

	_1e478d28b_FieldDecl(void) = default;

	inline bool operator==(_1e478d28b_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e478d28b_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1e478da3e_StructDecl {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_20d155596_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e478d28b_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1e474057e_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>> _field_Generics;
	

	_1e478da3e_StructDecl(void) = default;


};
struct _1e478e149_TraitDecl {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_20d155596_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1e47852a5_FnDecl>> _field_Methods;
	

	_1e478e149_TraitDecl(void) = default;


};
inline jule::Bool _1e478eab7_IsTraitImpl(_1e478e754_Impl*);
inline jule::Bool _1e478ed2b_IsStructImpl(_1e478e754_Impl*);
struct _1e478e754_Impl {
	jule::Ptr<_20d155596_Token> _field_End;
	jule::Ptr<_1e4773826_TypeDecl> _field_Base;
	jule::Ptr<_1e4773826_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1e47852a5_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1e4786284_VarDecl>> _field_Statics;
	

	_1e478e754_Impl(void) = default;


};
struct _1e5429003_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	_1e5429003_floatInfo(void) = default;

	inline bool operator==(_1e5429003_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1e5429003_floatInfo _other) { return !this->operator==(_other); }


};
struct _1e54291e0_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	

	_1e54291e0_decimalSlice(void) = default;


};
struct _1e5438ad4_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	_1e5438ad4_leftCheat(void) = default;

	inline bool operator==(_1e5438ad4_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1e5438ad4_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5431626_set(_1e54395a7_decimal*, jule::Str);
inline __jule_tuple_u64__jule_tuple_bool _1e5431934_floatBits(_1e54395a7_decimal*, _1e5429003_floatInfo*);
inline void _1e5439981_assign(_1e54395a7_decimal*, jule::U64);
inline void _1e5439c06_shift(_1e54395a7_decimal*, jule::I64);
inline void _1e5439e7b_roundDown(_1e54395a7_decimal*, jule::I64);
inline void _1e543a201_roundUp(_1e54395a7_decimal*, jule::I64);
inline void _1e543a476_round(_1e54395a7_decimal*, jule::I64);
inline jule::U64 _1e543a6da_roundedInteger(_1e54395a7_decimal*);
struct _1e54395a7_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	_1e54395a7_decimal(void) = default;

	inline bool operator==(_1e54395a7_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1e54395a7_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e54469c1_Const> static__1e5446e44_NewI64(jule::I64);
inline jule::Ptr<_1e54469c1_Const> static__1e54471db_NewU64(jule::U64);
inline jule::Ptr<_1e54469c1_Const> static__1e5447483_NewBool(jule::Bool);
inline jule::Ptr<_1e54469c1_Const> static__1e544772a_NewStr(jule::Str);
inline jule::Ptr<_1e54469c1_Const> static__1e54479c2_NewF64(jule::F64);
inline jule::Ptr<_1e54469c1_Const> static__1e5447bc0_NewNil(void);
inline jule::I64 _1e54482b9_ReadI64(_1e54469c1_Const*);
inline jule::U64 _1e544852d_ReadU64(_1e54469c1_Const*);
inline jule::Bool _1e5448792_ReadBool(_1e54469c1_Const*);
inline jule::Str _1e5448a06_ReadStr(_1e54469c1_Const*);
inline jule::F64 _1e5448c6a_ReadF64(_1e54469c1_Const*);
inline jule::I64 _1e5448ece_AsI64(_1e54469c1_Const*);
inline jule::U64 _1e5449243_AsU64(_1e54469c1_Const*);
inline jule::F64 _1e54494a7_AsF64(_1e54469c1_Const*);
inline void _1e544972c_SetI64(_1e54469c1_Const*, jule::I64);
inline void _1e54499a2_SetU64(_1e54469c1_Const*, jule::U64);
inline void _1e5449c27_SetBool(_1e54469c1_Const*, jule::Bool);
inline void _1e5449e9c_SetStr(_1e54469c1_Const*, jule::Str);
inline void _1e544a222_SetF64(_1e54469c1_Const*, jule::F64);
inline void _1e544a3ed_SetNil(_1e54469c1_Const*);
inline jule::Bool _1e544a662_IsI64(_1e54469c1_Const*);
inline jule::Bool _1e544a8c6_IsU64(_1e54469c1_Const*);
inline jule::Bool _1e544ab3a_IsBool(_1e54469c1_Const*);
inline jule::Bool _1e544ad9e_IsStr(_1e54469c1_Const*);
inline jule::Bool _1e544b113_IsF64(_1e54469c1_Const*);
inline jule::Bool _1e544b377_IsNil(_1e54469c1_Const*);
inline jule::Bool _1e544b685_AreSameTypes(_1e54469c1_Const*, _1e54469c1_Const);
inline jule::Bool _1e544b993_And(_1e54469c1_Const*, _1e54469c1_Const);
inline jule::Bool _1e544bca1_Or(_1e54469c1_Const*, _1e54469c1_Const);
inline jule::Bool _1e544c0ae_Eq(_1e54469c1_Const*, _1e54469c1_Const);
inline jule::Bool _1e544c3bc_Lt(_1e54469c1_Const*, _1e54469c1_Const);
inline jule::Bool _1e544c6ca_LtEq(_1e54469c1_Const*, _1e54469c1_Const);
inline jule::Bool _1e544c9d8_Gt(_1e54469c1_Const*, _1e54469c1_Const);
inline jule::Bool _1e544cce6_GtEq(_1e54469c1_Const*, _1e54469c1_Const);
inline jule::Bool _1e544d104_Add(_1e54469c1_Const*, _1e54469c1_Const);
inline jule::Bool _1e544d412_Sub(_1e54469c1_Const*, _1e54469c1_Const);
inline jule::Bool _1e544d720_Mul(_1e54469c1_Const*, _1e54469c1_Const);
inline jule::Bool _1e544da2d_Div(_1e54469c1_Const*, _1e54469c1_Const);
inline jule::Bool _1e544dd3b_Mod(_1e54469c1_Const*, _1e54469c1_Const);
inline jule::Bool _1e544e149_BitwiseAnd(_1e54469c1_Const*, _1e54469c1_Const);
inline jule::Bool _1e544e457_BitwiseOr(_1e54469c1_Const*, _1e54469c1_Const);
inline jule::Bool _1e544e765_Xor(_1e54469c1_Const*, _1e54469c1_Const);
inline jule::Bool _1e544ea73_Lshift(_1e54469c1_Const*, _1e54469c1_Const);
inline jule::Bool _1e544ed81_Rshift(_1e54469c1_Const*, _1e54469c1_Const);
struct _1e54469c1_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	_1e54469c1_Const(void) = default;

	inline jule::Bool operator==(_1e54469c1_Const _other) { return _1e544c0ae_Eq(this, _other); }

	inline bool operator!=(_1e54469c1_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1e54469c1_Const _other) { return _1e544c9d8_Gt(this, _other); }

	inline jule::Bool operator>=(_1e54469c1_Const _other) { return _1e544cce6_GtEq(this, _other); }

	inline jule::Bool operator<(_1e54469c1_Const _other) { return _1e544c3bc_Lt(this, _other); }

	inline jule::Bool operator<=(_1e54469c1_Const _other) { return _1e544c6ca_LtEq(this, _other); }


};
inline jule::Ptr<_1e4790205_FieldIns> _1e474b7bb_instance(jule::Ptr<_1e4764075_Field>);
struct _1e4764075_Field {
	jule::Ptr<_1e4790018_Struct> _field_Owner;
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1e5553160_TypeSymbol> _field_Kind;
	jule::Ptr<_1e4777d47_Expr> _field_Default;
	

	_1e4764075_Field(void) = default;

	inline bool operator==(_1e4764075_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e4764075_Field _other) { return !this->operator==(_other); }


};
struct _1e476b6ba_Operators {
	jule::Ptr<_1e5463b75_FnIns> _field_Eq;
	jule::Ptr<_1e5463b75_FnIns> _field_Gt;
	jule::Ptr<_1e5463b75_FnIns> _field_GtEq;
	jule::Ptr<_1e5463b75_FnIns> _field_Lt;
	jule::Ptr<_1e5463b75_FnIns> _field_LtEq;
	jule::Ptr<_1e5463b75_FnIns> _field_Shl;
	jule::Ptr<_1e5463b75_FnIns> _field_Shr;
	jule::Ptr<_1e5463b75_FnIns> _field_Add;
	jule::Ptr<_1e5463b75_FnIns> _field_Sub;
	jule::Ptr<_1e5463b75_FnIns> _field_Div;
	jule::Ptr<_1e5463b75_FnIns> _field_Mul;
	jule::Ptr<_1e5463b75_FnIns> _field_Mod;
	jule::Ptr<_1e5463b75_FnIns> _field_BitAnd;
	jule::Ptr<_1e5463b75_FnIns> _field_BitOr;
	jule::Ptr<_1e5463b75_FnIns> _field_BitXor;
	jule::Ptr<_1e5463b75_FnIns> _field_Neg;
	jule::Ptr<_1e5463b75_FnIns> _field_Pos;
	jule::Ptr<_1e5463b75_FnIns> _field_BitNot;
	jule::Ptr<_1e5463b75_FnIns> _field_AddAssign;
	jule::Ptr<_1e5463b75_FnIns> _field_SubAssign;
	jule::Ptr<_1e5463b75_FnIns> _field_DivAssign;
	jule::Ptr<_1e5463b75_FnIns> _field_MulAssign;
	jule::Ptr<_1e5463b75_FnIns> _field_ModAssign;
	jule::Ptr<_1e5463b75_FnIns> _field_ShlAssign;
	jule::Ptr<_1e5463b75_FnIns> _field_ShrAssign;
	jule::Ptr<_1e5463b75_FnIns> _field_BitOrAssign;
	jule::Ptr<_1e5463b75_FnIns> _field_BitAndAssign;
	jule::Ptr<_1e5463b75_FnIns> _field_BitXorAssign;
	

	_1e476b6ba_Operators(void) = default;

	inline bool operator==(_1e476b6ba_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1e476b6ba_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e47903e2_StructIns> _1e475058e_instance(jule::Ptr<_1e4790018_Struct>);
inline jule::Ptr<_1e47903e2_StructIns> _1e47512e8_appendInstance(_1e4790018_Struct*, jule::Ptr<_1e47903e2_StructIns>*);
inline jule::Ptr<_1e5460ec4_Fn> _1e4754450_FindMethod(_1e4790018_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1e54ca291_Var> _1e47538a0_FindStatic(_1e4790018_Struct*, jule::Str);
inline jule::Ptr<_1e4764075_Field> _1e4755c7b_FindField(_1e4790018_Struct*, jule::Str);
inline jule::Bool _1e4755077_IsImplements(_1e4790018_Struct*, jule::Ptr<_1e5472dc6_Trait>);
inline jule::Bool _1e4759048_IsDerives(_1e4790018_Struct*, jule::Str);
inline jule::Bool _1e475970d_IsUses(_1e4790018_Struct*, jule::Ptr<_1e4790018_Struct>);
inline jule::Bool _1e475ebca_HasRefAccessible(_1e4790018_Struct*);
struct _1e4790018_Struct {
	jule::Ptr<_1e54ac295_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1e4790018_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1e4790018_Struct>> _field_Uses;
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e4764075_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1e5460ec4_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1e54ca291_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1e474057e_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1e5472dc6_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1e47903e2_StructIns>> _field_Instances;
	

	_1e4790018_Struct(void) = default;


};
struct _1e4790205_FieldIns {
	jule::Ptr<_1e4764075_Field> _field_Decl;
	jule::Ptr<_1e554dc82_TypeKind> _field_Kind;
	jule::Ptr<_1e5522d00_Data> _field_Default;
	

	_1e4790205_FieldIns(void) = default;

	inline bool operator==(_1e4790205_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e4790205_FieldIns _other) { return !this->operator==(_other); }


};
struct _1e54527e0_OperandExprModel {
	jule::Ptr<_1e554dc82_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	_1e54527e0_OperandExprModel(void) = default;

	inline bool operator==(_1e54527e0_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1e54527e0_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1e5452ca7_BinopExprModel {
	jule::Ptr<_1e54527e0_OperandExprModel> _field_Left;
	jule::Ptr<_1e54527e0_OperandExprModel> _field_Right;
	jule::Ptr<_20d155596_Token> _field_Op;
	

	_1e5452ca7_BinopExprModel(void) = default;

	inline bool operator==(_1e5452ca7_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e5452ca7_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1e545315e_UnaryExprModel {
	jule::Ptr<_1e5522d00_Data> _field_Expr;
	jule::Ptr<_20d155596_Token> _field_Op;
	

	_1e545315e_UnaryExprModel(void) = default;

	inline bool operator==(_1e545315e_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e545315e_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1e545355a_StructArgExprModel {
	jule::Ptr<_1e4790205_FieldIns> _field_Field;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1e545355a_StructArgExprModel(void) = default;

	inline bool operator==(_1e545355a_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e545355a_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1e5453912_StructLitExprModel {
	jule::Ptr<_1e47903e2_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1e545355a_StructArgExprModel>> _field_Args;
	

	_1e5453912_StructLitExprModel(void) = default;


};
struct _1e5453c20_AllocStructLitExprModel {
	jule::Ptr<_1e5453912_StructLitExprModel> _field_Lit;
	

	_1e5453c20_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1e5453c20_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1e5453c20_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1e5454270_CastingExprModel {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1e554dc82_TypeKind> _field_Kind;
	jule::Ptr<_1e554dc82_TypeKind> _field_ExprKind;
	

	_1e5454270_CastingExprModel(void) = default;

	inline bool operator==(_1e5454270_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1e5454270_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1e5454b22_FnCallExprModel {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_1e5463b75_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1e5480ad7_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	

	_1e5454b22_FnCallExprModel(void) = default;


};
struct _1e5454ec9_SliceExprModel {
	jule::Ptr<_1e554dc82_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1e5454ec9_SliceExprModel(void) = default;


};
struct _1e545544c_IndexingExprModel {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_1e5522d00_Data> _field_Expr;
	jule::Ptr<_1e5522d00_Data> _field_Index;
	

	_1e545544c_IndexingExprModel(void) = default;

	inline bool operator==(_1e545544c_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1e545544c_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1e5455804_AnonFnExprModel {
	jule::Ptr<_1e5463b75_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	_1e5455804_AnonFnExprModel(void) = default;

	inline bool operator==(_1e5455804_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1e5455804_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1e5455bab_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	_1e5455bab_KeyValPairExprModel(void) = default;

	inline bool operator==(_1e5455bab_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1e5455bab_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1e545612e_MapExprModel {
	jule::Ptr<_1e554dc82_TypeKind> _field_KeyKind;
	jule::Ptr<_1e554dc82_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1e5455bab_KeyValPairExprModel>> _field_Entries;
	

	_1e545612e_MapExprModel(void) = default;


};
struct _1e545666d_SlicingExprModel {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_1e545666d_SlicingExprModel(void) = default;

	inline bool operator==(_1e545666d_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1e545666d_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1e5456bac_TraitSubIdentExprModel {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1e5460ec4_Fn> _field_Method;
	jule::Ptr<_1e5472dc6_Trait> _field_Trt;
	

	_1e5456bac_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1e5456bac_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1e5456bac_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e5457493_StructSubIdentExprModel {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Ptr<_1e5522d00_Data> _field_Expr;
	jule::Ptr<_1e5463b75_FnIns> _field_Method;
	jule::Ptr<_1e4790205_FieldIns> _field_Field;
	jule::Ptr<_1e47903e2_StructIns> _field_Owner;
	

	_1e5457493_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1e5457493_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1e5457493_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e5457839_StructStaticIdentExprModel {
	jule::Ptr<_1e47903e2_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1e5463b75_FnIns> _field_Method;
	

	_1e5457839_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1e5457839_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1e5457839_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e5457c02_ArrayExprModel {
	jule::Ptr<_1e5559d6a_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1e5457c02_ArrayExprModel(void) = default;


};
struct _1e5457edd_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	_1e5457edd_CommonIdentExprModel(void) = default;

	inline bool operator==(_1e5457edd_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e5457edd_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e545854e_CommonSubIdentExprModel {
	jule::Ptr<_1e554dc82_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Ident;
	

	_1e545854e_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1e545854e_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e545854e_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e545884b_TupleExprModel {
	jule::Slice<jule::Ptr<_1e5522d00_Data>> _field_Datas;
	

	_1e545884b_TupleExprModel(void) = default;


};
struct _1e5458c25_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1e5458c25_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1e5458c25_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1e5458c25_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e5459110_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1e5459110_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1e5459110_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1e5459110_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e545942e_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1e545942e_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1e545942e_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e545942e_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e5459819_BuiltinNewCallExprModel {
	jule::Ptr<_1e554dc82_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	_1e5459819_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1e5459819_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1e5459819_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e5459c04_BuiltinPanicCallExprModel {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1e5459c04_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1e5459c04_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5459c04_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e545a1aa_BuiltinAssertCallExprModel {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	_1e545a1aa_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1e545a1aa_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1e545a1aa_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e545a661_BuiltinMakeCallExprModel {
	jule::Ptr<_1e554dc82_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	_1e545a661_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1e545a661_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1e545a661_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e545aa4b_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	_1e545aa4b_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1e545aa4b_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1e545aa4b_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e545ad6a_BuiltinLenCallExprModel {
	jule::Ptr<_1e5522d00_Data> _field_Expr;
	

	_1e545ad6a_BuiltinLenCallExprModel(void) = default;

	inline bool operator==(_1e545ad6a_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e545ad6a_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e545b189_BuiltinCapCallExprModel {
	jule::Ptr<_1e5522d00_Data> _field_Expr;
	

	_1e545b189_BuiltinCapCallExprModel(void) = default;

	inline bool operator==(_1e545b189_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e545b189_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e545b83d_BuiltinDeleteCallExprModel {
	jule::Ptr<_1e5522d00_Data> _field_Dest;
	jule::Ptr<_1e5522d00_Data> _field_Key;
	

	_1e545b83d_BuiltinDeleteCallExprModel(void) = default;

	inline bool operator==(_1e545b83d_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1e545b83d_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e545bba1_BuiltinCopyCallExprModel {
	jule::Ptr<_1e5522d00_Data> _field_Dest;
	jule::Ptr<_1e5522d00_Data> _field_Src;
	

	_1e545bba1_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1e545bba1_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1e545bba1_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e545c08b_BuiltinErrorCallExprModel {
	jule::Ptr<_1e5463b75_FnIns> _field_Func;
	jule::Ptr<_1e5522d00_Data> _field_Err;
	

	_1e545c08b_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1e545c08b_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1e545c08b_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e545c388_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1e545c388_SizeofExprModel(void) = default;

	inline bool operator==(_1e545c388_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e545c388_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1e545c674_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1e545c674_AlignofExprModel(void) = default;

	inline bool operator==(_1e545c674_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e545c674_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1e545c960_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	_1e545c960_RuneExprModel(void) = default;

	inline bool operator==(_1e545c960_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1e545c960_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1e545cc6d_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1e545cc6d_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1e545cc6d_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e545cc6d_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1e545d136_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

	_1e545d136_BackendEmitExprModel(void) = default;


};
struct _1e545d422_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1e545d422_FreeExprModel(void) = default;

	inline bool operator==(_1e545d422_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e545d422_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1e545deb1_RetType {
	jule::Ptr<_1e5553160_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_20d155596_Token>> _field_Idents;
	

	_1e545deb1_RetType(void) = default;


};
inline jule::Ptr<_1e5462ca6_ParamIns> _1e545ea50_instance(jule::Ptr<_1e545e687_Param>);
inline jule::Bool _1e545ecb4_IsSelf(_1e545e687_Param*);
inline jule::Bool _1e5460028_IsRef(_1e545e687_Param*);
struct _1e545e687_Param {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1e5553160_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	_1e545e687_Param(void) = default;

	inline bool operator==(_1e545e687_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e545e687_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5461436_IsVoid(_1e5460ec4_Fn*);
inline jule::Bool _1e546169a_IsMethod(_1e5460ec4_Fn*);
inline jule::Bool _1e546190e_IsEntryPoint(_1e5460ec4_Fn*);
inline jule::Bool _1e5461b73_IsInit(_1e5460ec4_Fn*);
inline jule::Bool _1e5461dd7_IsAnon(_1e5460ec4_Fn*);
inline jule::Bool _1e546214b_AnyVar(_1e5460ec4_Fn*);
inline jule::Ptr<_1e5463b75_FnIns> _1e54623b0_instanceForce(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Ptr<_1e5463b75_FnIns> _1e5462624_instance(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Ptr<_1e5463b75_FnIns> _1e54628ee_appendInstance(_1e5460ec4_Fn*, jule::Ptr<_1e5463b75_FnIns>*);
struct _1e5460ec4_Fn {
	jule::Ptr<_1e54ac295_Sema> _field_sema;
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e474057e_Directive>> _field_Directives;
	jule::Ptr<_1e47837ae_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>> _field_Generics;
	jule::Ptr<_1e545deb1_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1e545e687_Param>> _field_Params;
	jule::Ptr<_1e4790018_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1e5463b75_FnIns>> _field_Instances;
	

	_1e5460ec4_Fn(void) = default;


};
inline jule::Str _1e5463180_Str(_1e5462ca6_ParamIns*);
struct _1e5462ca6_ParamIns {
	jule::Ptr<_1e545e687_Param> _field_Decl;
	jule::Ptr<_1e554dc82_TypeKind> _field_Kind;
	

	_1e5462ca6_ParamIns(void) = default;

	inline bool operator==(_1e5462ca6_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e5462ca6_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1e5463ea5_Str(_1e5463b75_FnIns*);
inline jule::Bool _1e54642b3_Equal(jule::Ptr<_1e5463b75_FnIns>, jule::Ptr<_1e554dc82_TypeKind>);
inline jule::Bool _1e5464725_EqualFn(jule::Ptr<_1e5463b75_FnIns>, jule::Ptr<_1e5463b75_FnIns>*);
inline jule::Bool _1e5464a33_equalTrait(jule::Ptr<_1e5463b75_FnIns>, jule::Ptr<_1e5463b75_FnIns>*);
inline jule::Slice<jule::Ptr<_1e554dc82_TypeKind>> _1e5464c97_Types(_1e5463b75_FnIns*);
inline jule::Bool _1e546500b_IsBuiltin(_1e5463b75_FnIns*);
inline jule::Bool _1e5465270_IsAnon(_1e5463b75_FnIns*);
inline jule::Bool _1e546557d_Same(_1e5463b75_FnIns*, jule::Ptr<_1e5463b75_FnIns>);
inline jule::Str _1e546588b_GetKindStr(_1e5463b75_FnIns*, jule::Bool);
struct _1e5463b75_FnIns {
	jule::Ptr<_1e47903e2_StructIns> _field_Owner;
	jule::Ptr<_1e5460ec4_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1e554c555_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1e5462ca6_ParamIns>> _field_Params;
	jule::Ptr<_1e554dc82_TypeKind> _field_Result;
	jule::Ptr<_1e5480ad7_Scope> _field_Scope;
	jule::Ptr<_1e5466ae0_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	

	_1e5463b75_FnIns(void) = default;


};
inline jule::Ptr<_1e5466ae0_ReferenceStack> static__1e5466d76_new(void);
inline jule::I64 _1e546720b_Len(_1e5466ae0_ReferenceStack*);
inline jule::Any _1e5467519_At(_1e5466ae0_ReferenceStack*, jule::I64);
inline void _1e546778e_Push(_1e5466ae0_ReferenceStack*, jule::Any);
inline jule::Bool _1e8ae65e0_Exist(_1e5466ae0_ReferenceStack*, jule::Ptr<_1e5463b75_FnIns>);
inline jule::Bool _1e8b0a34b_Exist(_1e5466ae0_ReferenceStack*, jule::Ptr<_1e54ca291_Var>);
inline jule::Bool _1e8b9a82b_Exist(_1e5466ae0_ReferenceStack*, jule::Ptr<_1e47903e2_StructIns>);
inline jule::Bool _1e8e9b81e_Exist(_1e5466ae0_ReferenceStack*, jule::Ptr<_1e5472dc6_Trait>);
struct _1e5466ae0_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

	_1e5466ae0_ReferenceStack(void) = default;


};
struct _1e5467e54_Pass {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Text;
	

	_1e5467e54_Pass(void) = default;

	inline bool operator==(_1e5467e54_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1e5467e54_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e546c3ed_symbolBuilder> _1e546c8a4_getRoot(jule::Ptr<_1e546c3ed_symbolBuilder>);
inline void _1e546cc6c_pushErr(_1e546c3ed_symbolBuilder*, jule::Ptr<_20d155596_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1e546d135_pushErrText(_1e546c3ed_symbolBuilder*, jule::Ptr<_20d155596_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1e546d454_pushSuggestion(_1e546c3ed_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e546d80b_checkCppUseDeclPath(_1e546c3ed_symbolBuilder*, jule::Ptr<_1e478aed1_UseDecl>*, jule::Str);
inline jule::Ptr<_1e54a4149_ImportInfo> _1e546dad6_buildCppHeaderImport(_1e546c3ed_symbolBuilder*, jule::Ptr<_1e478aed1_UseDecl>*);
inline jule::Ptr<_1e54a4149_ImportInfo> _1e546dde4_buildStdImport(_1e546c3ed_symbolBuilder*, jule::Ptr<_1e478aed1_UseDecl>*);
inline jule::Ptr<_1e54a4149_ImportInfo> _1e546e202_buildIdentImport(jule::Ptr<_1e546c3ed_symbolBuilder>, jule::Ptr<_1e478aed1_UseDecl>*);
inline jule::Ptr<_1e54a4149_ImportInfo> _1e546e510_buildImport(jule::Ptr<_1e546c3ed_symbolBuilder>, jule::Ptr<_1e478aed1_UseDecl>*);
inline jule::Bool _1e546e81d_checkDuplicateUseDecl(_1e546c3ed_symbolBuilder*, jule::Ptr<_1e54a4149_ImportInfo>*);
inline void _1e546eb3c_implImportSelections(_1e546c3ed_symbolBuilder*, jule::Ptr<_1e54a4149_ImportInfo>*, jule::Ptr<_1e478aed1_UseDecl>*);
inline jule::Str _1e546ee4a_getAsLinkPath(jule::Ptr<_1e546c3ed_symbolBuilder>, jule::Str);
inline void _1e5470313_pushCycleError(jule::Ptr<_1e546c3ed_symbolBuilder>, jule::Ptr<_1e546c3ed_symbolBuilder>*, jule::Str, jule::Str*);
inline void _1e54706cb_pushCrossCycleError(jule::Ptr<_1e546c3ed_symbolBuilder>, jule::Ptr<_1e546c3ed_symbolBuilder>*, jule::Ptr<_1e54a4149_ImportInfo>*, jule::Ptr<_20d155596_Token>*);
inline jule::Bool _1e5470a83_checkImportCycles(jule::Ptr<_1e546c3ed_symbolBuilder>, jule::Ptr<_1e54a4149_ImportInfo>, jule::Ptr<_1e478aed1_UseDecl>*);
inline void _1e5470e6d_checkPackageAccessibility(_1e546c3ed_symbolBuilder*, jule::Ptr<_1e478aed1_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1e5471336_importPackage(jule::Ptr<_1e546c3ed_symbolBuilder>, jule::Ptr<_1e54a4149_ImportInfo>*, jule::Ptr<_1e478aed1_UseDecl>*);
inline jule::Ptr<_1e54a4149_ImportInfo> _1e5471644_importUseDecl(jule::Ptr<_1e546c3ed_symbolBuilder>, jule::Ptr<_1e478aed1_UseDecl>*);
inline void _1e5471820_importUseDecls(jule::Ptr<_1e546c3ed_symbolBuilder>);
inline void _1e5471a95_appendNode(_1e546c3ed_symbolBuilder*, _1e4740183_Node*);
inline void _1e5471c71_appendNodes(_1e546c3ed_symbolBuilder*);
inline void _1e5471ee6_pushDirectivePass(_1e546c3ed_symbolBuilder*, jule::Ptr<_1e474057e_Directive>*);
inline void _1e54721c2_appendTopDirectives(_1e546c3ed_symbolBuilder*);
inline void _1e547239d_build(jule::Ptr<_1e546c3ed_symbolBuilder>);
struct _1e546c3ed_symbolBuilder {
	jule::Ptr<_1e546c3ed_symbolBuilder> _field_owner;
	jule::Trait<_1e54a14cb_Importer> _field_importer;
	jule::Slice<_24305e4ae_Log> _field_errors;
	jule::Ptr<_1e473e391_Ast> _field_ast;
	jule::Ptr<_1e551cec6_SymbolTable> _field_table;
	

	_1e546c3ed_symbolBuilder(void) = default;


};
inline jule::Str _1e54732c2_Str(_1e5472dc6_Trait*);
inline jule::Bool _1e54735d0_Equal(jule::Ptr<_1e5472dc6_Trait>, jule::Ptr<_1e554dc82_TypeKind>);
inline jule::Bool _1e5473943_IsBuiltin(_1e5472dc6_Trait*);
inline jule::Ptr<_1e5460ec4_Fn> _1e5473c51_FindMethod(_1e5472dc6_Trait*, jule::Str);
struct _1e5472dc6_Trait {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_1e5460ec4_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1e4790018_Struct>> _field_Implemented;
	

	_1e5472dc6_Trait(void) = default;


};
inline jule::Bool _1e5474911_AutoExpr(_1e5474526_EnumItem*);
struct _1e5474526_EnumItem {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e5523d78_Value> _field_Value;
	

	_1e5474526_EnumItem(void) = default;

	inline bool operator==(_1e5474526_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1e5474526_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1e547537e_Str(_1e547501b_Enum*);
inline jule::Bool _1e547568c_Equal(jule::Ptr<_1e547501b_Enum>, jule::Ptr<_1e554dc82_TypeKind>);
inline jule::Ptr<_1e5474526_EnumItem> _1e5475acc_FindItem(_1e547501b_Enum*, jule::Str);
struct _1e547501b_Enum {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1e5553160_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1e5474526_EnumItem>> _field_Items;
	

	_1e547501b_Enum(void) = default;


};
struct _1e5476050_TypeEnumItem {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e5553160_TypeSymbol> _field_Kind;
	

	_1e5476050_TypeEnumItem(void) = default;

	inline bool operator==(_1e5476050_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e5476050_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1e5476946_Str(_1e5476616_TypeEnum*);
inline jule::Bool _1e5476c54_Equal(jule::Ptr<_1e5476616_TypeEnum>, jule::Ptr<_1e554dc82_TypeKind>);
inline jule::Ptr<_1e5476050_TypeEnumItem> _1e5477150_FindItem(_1e5476616_TypeEnum*, jule::Str);
struct _1e5476616_TypeEnum {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e5476050_TypeEnumItem>> _field_Items;
	

	_1e5476616_TypeEnum(void) = default;


};
inline jule::Fn<jule::Bool(jule::Ptr<_1e54ac295_Sema>*,jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>*)> _1e5479075_readyFn(jule::Ptr<_1e5478b46_constraintChecker>);
inline jule::Bool _1e54792d9_readyFi(jule::Ptr<_1e5478b46_constraintChecker>);
inline jule::Bool _1e547954d_readySi(jule::Ptr<_1e5478b46_constraintChecker>);
inline jule::Bool _1e54797b2_ready(jule::Ptr<_1e5478b46_constraintChecker>);
inline jule::Bool _1e5479a26_check(jule::Ptr<_1e5478b46_constraintChecker>);
struct _1e5478b46_constraintChecker {
	jule::Ptr<_1e54ac295_Sema> _field_s;
	jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1e554c555_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>> _field_genericsA;
	jule::Ptr<_1e5463b75_FnIns> _field_fi;
	jule::Ptr<_1e47903e2_StructIns> _field_si;
	jule::Ptr<_20d155596_Token> _field_et;
	jule::Bool _field_uniq = false;
	

	_1e5478b46_constraintChecker(void) = default;


};
inline jule::Bool _1e547ae78_IsTraitImpl(_1e547aa7c_Impl*);
inline jule::Bool _1e547b1dc_IsStructImpl(_1e547aa7c_Impl*);
struct _1e547aa7c_Impl {
	jule::Ptr<_1e4773826_TypeDecl> _field_Base;
	jule::Ptr<_1e4773826_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1e5460ec4_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1e54ca291_Var>> _field_Statics;
	

	_1e547aa7c_Impl(void) = default;


};
struct _1e5480ad7_Scope {
	jule::Ptr<_1e5480ad7_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	

	_1e5480ad7_Scope(void) = default;


};
struct _1e5480ed3_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1e5480ad7_Scope> _field_Scope;
	

	_1e5480ed3_If(void) = default;

	inline bool operator==(_1e5480ed3_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e5480ed3_If _other) { return !this->operator==(_other); }


};
struct _1e54812be_Else {
	jule::Ptr<_1e5480ad7_Scope> _field_Scope;
	

	_1e54812be_Else(void) = default;

	inline bool operator==(_1e54812be_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e54812be_Else _other) { return !this->operator==(_other); }


};
struct _1e5481643_Conditional {
	jule::Slice<jule::Ptr<_1e5480ed3_If>> _field_Elifs;
	jule::Ptr<_1e54812be_Else> _field_Default;
	

	_1e5481643_Conditional(void) = default;


};
struct _1e548192e_InfIter {
	jule::Ptr<_1e5480ad7_Scope> _field_Scope;
	

	_1e548192e_InfIter(void) = default;

	inline bool operator==(_1e548192e_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e548192e_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5482248_IsWhileNext(_1e5481da2_WhileIter*);
struct _1e5481da2_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1e5480ad7_Scope> _field_Scope;
	

	_1e5481da2_WhileIter(void) = default;

	inline bool operator==(_1e5481da2_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e5481da2_WhileIter _other) { return !this->operator==(_other); }


};
struct _1e5482787_RangeIter {
	jule::Ptr<_1e5522d00_Data> _field_Expr;
	jule::Ptr<_1e5480ad7_Scope> _field_Scope;
	jule::Ptr<_1e54ca291_Var> _field_KeyA;
	jule::Ptr<_1e54ca291_Var> _field_KeyB;
	

	_1e5482787_RangeIter(void) = default;

	inline bool operator==(_1e5482787_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1e5482787_RangeIter _other) { return !this->operator==(_other); }


};
struct _1e5482b83_ContSt {
	jule::Uintptr _field_It = 0;
	

	_1e5482b83_ContSt(void) = default;

	inline bool operator==(_1e5482b83_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1e5482b83_ContSt _other) { return !this->operator==(_other); }


};
struct _1e548303a_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	_1e548303a_BreakSt(void) = default;

	inline bool operator==(_1e548303a_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1e548303a_BreakSt _other) { return !this->operator==(_other); }


};
struct _1e5483326_Label {
	jule::Str _field_Ident;
	

	_1e5483326_Label(void) = default;

	inline bool operator==(_1e5483326_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e5483326_Label _other) { return !this->operator==(_other); }


};
struct _1e5483612_GotoSt {
	jule::Str _field_Ident;
	

	_1e5483612_GotoSt(void) = default;

	inline bool operator==(_1e5483612_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e5483612_GotoSt _other) { return !this->operator==(_other); }


};
struct _1e54839b9_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	_1e54839b9_Postfix(void) = default;

	inline bool operator==(_1e54839b9_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e54839b9_Postfix _other) { return !this->operator==(_other); }


};
struct _1e5483e3c_Assign {
	jule::Ptr<_1e54527e0_OperandExprModel> _field_L;
	jule::Ptr<_1e54527e0_OperandExprModel> _field_R;
	jule::Ptr<_20d155596_Token> _field_Op;
	

	_1e5483e3c_Assign(void) = default;

	inline bool operator==(_1e5483e3c_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e5483e3c_Assign _other) { return !this->operator==(_other); }


};
struct _1e54842e4_MultiAssign {
	jule::Slice<jule::Ptr<_1e5522d00_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	

	_1e54842e4_MultiAssign(void) = default;


};
inline jule::Bool _1e5484d3e_IsGenericTypeMatch(_1e5484833_Match*);
struct _1e5484833_Match {
	jule::Ptr<_1e5522d00_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Slice<jule::Ptr<_1e548537d_Case>> _field_Cases;
	jule::Ptr<_1e548537d_Case> _field_Default;
	

	_1e5484833_Match(void) = default;


};
inline jule::Bool _1e5485647_isDefault(_1e548537d_Case*);
struct _1e548537d_Case {
	jule::Ptr<_1e5484833_Match> _field_Owner;
	jule::Ptr<_1e5480ad7_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1e5522d00_Data>> _field_Exprs;
	jule::Ptr<_1e548537d_Case> _field_Next;
	

	_1e548537d_Case(void) = default;


};
struct _1e5485933_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	_1e5485933_FallSt(void) = default;

	inline bool operator==(_1e5485933_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1e5485933_FallSt _other) { return !this->operator==(_other); }


};
struct _1e5485ca7_RetSt {
	jule::Ptr<_1e5463b75_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1e5485ca7_RetSt(void) = default;

	inline bool operator==(_1e5485ca7_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e5485ca7_RetSt _other) { return !this->operator==(_other); }


};
struct _1e548b3ea_scopeLabel {
	jule::Ptr<_20d155596_Token> _field_token;
	jule::Ptr<_1e5483326_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1e548c4a6_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	_1e548b3ea_scopeLabel(void) = default;

	inline bool operator==(_1e548b3ea_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1e548b3ea_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1e548b692_scopeGoto {
	jule::Ptr<_1e478137d_GotoSt> _field_gt;
	jule::Ptr<_1e548c4a6_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	_1e548b692_scopeGoto(void) = default;

	inline bool operator==(_1e548b692_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1e548b692_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e54a4149_ImportInfo> _1e548c93a_FindPackage(_1e548c4a6_scopeChecker*, jule::Str);
inline jule::Ptr<_1e54a4149_ImportInfo> _1e548cc48_SelectPackage(_1e548c4a6_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)>);
inline jule::Ptr<_1e54ca291_Var> _1e548d100_FindVar(_1e548c4a6_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e554d08e_TypeAlias> _1e548d4a7_FindTypeAlias(_1e548c4a6_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e4790018_Struct> _1e548d85e_FindStruct(_1e548c4a6_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5460ec4_Fn> _1e548dc16_FindFn(_1e548c4a6_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5472dc6_Trait> _1e548e024_FindTrait(_1e548c4a6_scopeChecker*, jule::Str);
inline jule::Ptr<_1e547501b_Enum> _1e548e332_FindEnum(_1e548c4a6_scopeChecker*, jule::Str);
inline jule::Ptr<_1e5476616_TypeEnum> _1e548e640_FindTypeEnum(_1e548c4a6_scopeChecker*, jule::Str);
inline jule::Bool _1e548e970_isUnsafe(jule::Ptr<_1e548c4a6_scopeChecker>);
inline jule::Bool _1e548ebd4_isRoot(_1e548c4a6_scopeChecker*);
inline void _1e548edb0_stop(_1e548c4a6_scopeChecker*);
inline jule::Bool _1e5490124_stopped(_1e548c4a6_scopeChecker*);
inline jule::Bool _1e5490388_isDeferred(jule::Ptr<_1e548c4a6_scopeChecker>);
inline jule::Ptr<_1e548c4a6_scopeChecker> _1e54905ec_getRoot(jule::Ptr<_1e548c4a6_scopeChecker>);
inline jule::Ptr<_1e548c4a6_scopeChecker> _1e5490861_getHardRoot(jule::Ptr<_1e548c4a6_scopeChecker>);
inline jule::Ptr<_1e5483326_Label> _1e5490b6e_findLabel(_1e548c4a6_scopeChecker*, jule::Str);
inline jule::Ptr<_1e548b3ea_scopeLabel> _1e5490e7c_findLabelScope(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Str);
inline jule::Ptr<_1e548b3ea_scopeLabel> _1e549128a_findLabelAll(_1e548c4a6_scopeChecker*, jule::Str);
inline jule::Bool _1e5491642_isDuplicatedIdent(_1e548c4a6_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1e54918b7_checkVarDecl(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e4786284_VarDecl>);
inline void _1e5491b3c_checkTypeAliasDecl(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e4789ae5_TypeAliasDecl>);
inline jule::Ptr<_1e5480ad7_Scope> _1e5491da1_getChild(_1e548c4a6_scopeChecker*);
inline void _1e5492269_checkChildSsc(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e47837ae_ScopeTree>*, jule::Ptr<_1e5480ad7_Scope>*, jule::Ptr<_1e548c4a6_scopeChecker>*);
inline jule::Ptr<_1e5480ad7_Scope> _1e5492621_checkChildSc(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e47837ae_ScopeTree>*, jule::Ptr<_1e548c4a6_scopeChecker>*);
inline jule::Ptr<_1e5480ad7_Scope> _1e549292e_checkChild(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e47837ae_ScopeTree>*);
inline void _1e5492ba4_checkAnonScope(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e47837ae_ScopeTree>);
inline void _1e5492ec3_processErrorCall(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e545c08b_BuiltinErrorCallExprModel>*, jule::Ptr<_20d155596_Token>);
inline void _1e5493248_checkExpr(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e4777d47_Expr>);
inline jule::Ptr<_1e5480ed3_If> _1e5493556_checkIf(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e4788ae4_If>);
inline jule::Ptr<_1e54812be_Else> _1e5493864_checkElse(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e4788e9b_Else>);
inline void _1e5493ad9_checkConditional(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e478941e_Conditional>);
inline void _1e549404b_checkIterScopeSsc(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Uintptr, jule::Ptr<_1e47837ae_ScopeTree>, jule::Ptr<_1e5480ad7_Scope>*, jule::Ptr<_1e548c4a6_scopeChecker>);
inline jule::Ptr<_1e5480ad7_Scope> _1e549449c_checkIterScopeSc(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Uintptr, jule::Ptr<_1e47837ae_ScopeTree>, jule::Ptr<_1e548c4a6_scopeChecker>);
inline jule::Ptr<_1e5480ad7_Scope> _1e5494854_checkIterScope(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Uintptr, jule::Ptr<_1e47837ae_ScopeTree>*);
inline void _1e5494ac9_checkInfIter(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e4786c9b_Iter>*);
inline void _1e5494d4e_checkWhileIter(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e4786c9b_Iter>*);
inline void _1e54950c4_checkRangeIter(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e4786c9b_Iter>*);
inline void _1e5495349_checkIter(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e4786c9b_Iter>);
inline jule::Bool _1e5495657_checkValidContLabel(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Uintptr);
inline jule::Bool _1e5495965_checkValidBreakLabel(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1e5482b83_ContSt> _1e5495c73_checkContValidScope(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e4788671_ContSt>);
inline void _1e5495ee8_checkCont(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e4788671_ContSt>);
inline void _1e549626d_checkLabel(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e4780ec6_LabelSt>);
inline void _1e54964e3_pushGoto(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e478137d_GotoSt>);
inline void _1e5496768_checkPostfix(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e47822b3_AssignSt>);
inline jule::Bool _1e5496a76_isNewAssignIdent(_1e548c4a6_scopeChecker*, jule::Str);
inline jule::Bool _1e5496ec7_checkStructureAssignOp(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e47903e2_StructIns>*, jule::Ptr<_1e47822b3_AssignSt>*, jule::Ptr<_1e5522d00_Data>*);
inline void _1e549724c_checkSingleAssign(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e47822b3_AssignSt>*);
inline void _1e549777a_processEndPartOfMultiAssign(_1e548c4a6_scopeChecker*, jule::Ptr<_1e54842e4_MultiAssign>*, jule::Ptr<_1e47822b3_AssignSt>*, jule::Ptr<_1e4781c74_AssignLeft>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*);
inline void _1e5497a11_checkMultiAssign(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e47822b3_AssignSt>*);
inline void _1e5497c86_checkAssignSt(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e47822b3_AssignSt>);
inline jule::Ptr<_1e5480ad7_Scope> _1e549813d_checkCaseScope(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e548537d_Case>*, jule::Ptr<_1e47837ae_ScopeTree>*);
inline jule::Ptr<_1e548537d_Case> _1e5498638_checkCase(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e5484833_Match>, jule::I64, jule::Ptr<_1e478a068_Case>, jule::Ptr<_1e5522d00_Data>);
inline void _1e5498a01_checkCases(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e478a73e_MatchCase>*, jule::Ptr<_1e5484833_Match>, jule::Ptr<_1e5522d00_Data>);
inline jule::Ptr<_1e548537d_Case> _1e5498da8_checkDefault(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e5484833_Match>, jule::Ptr<_1e4788e9b_Else>);
inline void _1e549912d_checkComptimePanic(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e5480ad7_Scope>*);
inline void _1e549944c_pushTypeMatch(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e5484833_Match>, jule::Ptr<_1e478a73e_MatchCase>*);
inline void _1e54996c2_checkTypeMatch(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e478a73e_MatchCase>*);
inline void _1e5499947_checkCommonMatch(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e478a73e_MatchCase>*);
inline void _1e5499bbc_checkMatch(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e478a73e_MatchCase>);
inline void _1e5499e42_checkFall(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e4781669_FallSt>);
inline jule::Ptr<_1e548303a_BreakSt> _1e549a250_checkBreakWithLabel(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e47882b9_BreakSt>);
inline jule::Ptr<_1e548303a_BreakSt> _1e549a55d_checkPlainBreak(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e47882b9_BreakSt>);
inline void _1e549a7d3_checkBreak(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e47882b9_BreakSt>);
inline void _1e549aa58_checkRet(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e478663b_RetSt>);
inline void _1e549accd_checkUseExpr(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e47786d8_UseExpr>);
inline void _1e549b053_checkNode(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Any*);
inline void _1e549b22e_checkResult(jule::Ptr<_1e548c4a6_scopeChecker>);
inline void _1e549b40a_checkTree(jule::Ptr<_1e548c4a6_scopeChecker>);
inline void _1e549b729_checkGoto(_1e548c4a6_scopeChecker*, jule::Ptr<_1e548b692_scopeGoto>*, jule::Ptr<_1e548b3ea_scopeLabel>*);
inline void _1e549b905_checkGotos(_1e548c4a6_scopeChecker*);
inline void _1e549bad1_checkLabels(_1e548c4a6_scopeChecker*);
inline void _1e549bcac_checkVars(_1e548c4a6_scopeChecker*);
inline void _1e549be88_checkAliases(_1e548c4a6_scopeChecker*);
inline void _1e549c2a7_check(jule::Ptr<_1e548c4a6_scopeChecker>, jule::Ptr<_1e47837ae_ScopeTree>*, jule::Ptr<_1e5480ad7_Scope>*);
inline jule::Ptr<_1e548c4a6_scopeChecker> _1e549c51b_newChildChecker(jule::Ptr<_1e548c4a6_scopeChecker>);
struct _1e548c4a6_scopeChecker {
	jule::Ptr<_20d155596_Token> _field_calledFrom;
	jule::Ptr<_1e54ac295_Sema> _field_s;
	jule::Ptr<_1e5463b75_FnIns> _field_owner;
	jule::Ptr<_1e548c4a6_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1e551cec6_SymbolTable> _field_table;
	jule::Ptr<_1e5480ad7_Scope> _field_scope;
	jule::Ptr<_1e47837ae_ScopeTree> _field_tree;
	jule::Ptr<_1e5463b75_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1e548b3ea_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1e548b692_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	_1e548c4a6_scopeChecker(void) = default;

	inline bool operator==(_1e548c4a6_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1e548c4a6_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _1e549d50b_checkCdef(_1e549d0bb_directiveChecker*, jule::Ptr<_1e474057e_Directive>*);
inline void _1e549d781_checkTypedef(_1e549d0bb_directiveChecker*, jule::Ptr<_1e474057e_Directive>*);
inline void _1e549da06_checkDerive(_1e549d0bb_directiveChecker*, jule::Ptr<_1e474057e_Directive>*);
inline void _1e549dc7b_checkNamespace(_1e549d0bb_directiveChecker*, jule::Ptr<_1e474057e_Directive>*);
inline void _1e549e001_checkDeprecated(_1e549d0bb_directiveChecker*, jule::Ptr<_1e474057e_Directive>*);
inline void _1e549e276_checkTest(_1e549d0bb_directiveChecker*, jule::Ptr<_1e474057e_Directive>*);
inline void _1e549e4eb_checkDirective(_1e549d0bb_directiveChecker*, jule::Ptr<_1e474057e_Directive>*);
inline void _1e549e6c7_check(_1e549d0bb_directiveChecker*);
struct _1e549d0bb_directiveChecker {
	jule::Ptr<_1e54ac295_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1e474057e_Directive>>> _field_d;
	jule::Any _field_o;
	

	_1e549d0bb_directiveChecker(void) = default;

	inline bool operator==(_1e549d0bb_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1e549d0bb_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e54a4149_ImportInfo> _1e54a4666_FindPackage(_1e54a4149_ImportInfo*, jule::Str);
inline jule::Ptr<_1e54a4149_ImportInfo> _1e54a4974_SelectPackage(_1e54a4149_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)>);
inline jule::Ptr<_1e54ca291_Var> _1e54a4d2b_FindVar(_1e54a4149_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e554d08e_TypeAlias> _1e54a51d3_FindTypeAlias(_1e54a4149_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e4790018_Struct> _1e54a558a_FindStruct(_1e54a4149_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5460ec4_Fn> _1e54a5942_FindFn(_1e54a4149_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5472dc6_Trait> _1e54a5c50_FindTrait(_1e54a4149_ImportInfo*, jule::Str);
inline jule::Ptr<_1e547501b_Enum> _1e54a605d_FindEnum(_1e54a4149_ImportInfo*, jule::Str);
inline jule::Ptr<_1e5476616_TypeEnum> _1e54a636b_FindTypeEnum(_1e54a4149_ImportInfo*, jule::Str);
inline jule::Bool _1e54a6712_isLookupable(_1e54a4149_ImportInfo*, jule::Str);
inline jule::Bool _1e54a6a20_existIdent(_1e54a4149_ImportInfo*, jule::Str);
inline jule::Bool _1e54a6ca6_isAccessibleViaSelection(_1e54a4149_ImportInfo*);
struct _1e54a4149_ImportInfo {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_20d155596_Token>> _field_Selected;
	jule::Ptr<_1e54a70a3_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	

	_1e54a4149_ImportInfo(void) = default;


};
inline jule::Ptr<_1e54a4149_ImportInfo> _1e54a757b_FindPackage(_1e54a70a3_Package*, jule::Str);
inline jule::Ptr<_1e54a4149_ImportInfo> _1e54a7889_SelectPackage(_1e54a70a3_Package*, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)>);
inline jule::Ptr<_1e54ca291_Var> _1e54a7c41_FindVar(_1e54a70a3_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e554d08e_TypeAlias> _1e54a80e8_FindTypeAlias(_1e54a70a3_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e4790018_Struct> _1e54a84a0_FindStruct(_1e54a70a3_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5460ec4_Fn> _1e54a8857_FindFn(_1e54a70a3_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5472dc6_Trait> _1e54a8b65_FindTrait(_1e54a70a3_Package*, jule::Str);
inline jule::Ptr<_1e547501b_Enum> _1e54a8e73_FindEnum(_1e54a70a3_Package*, jule::Str);
inline jule::Ptr<_1e5476616_TypeEnum> _1e54a9281_FindTypeEnum(_1e54a70a3_Package*, jule::Str);
struct _1e54a70a3_Package {
	jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>> _field_Files;
	

	_1e54a70a3_Package(void) = default;


};
inline jule::Ptr<_1e54a4149_ImportInfo> _1e54ac7b2_FindPackage(_1e54ac295_Sema*, jule::Str);
inline jule::Ptr<_1e54a4149_ImportInfo> _1e54acac0_SelectPackage(_1e54ac295_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)>);
inline jule::Ptr<_1e54ca291_Var> _1e54ace77_FindVar(_1e54ac295_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e554d08e_TypeAlias> _1e54ad32e_FindTypeAlias(_1e54ac295_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e4790018_Struct> _1e54ad6d6_FindStruct(_1e54ac295_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5460ec4_Fn> _1e54ada8d_FindFn(_1e54ac295_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5472dc6_Trait> _1e54add9b_FindTrait(_1e54ac295_Sema*, jule::Str);
inline jule::Ptr<_1e547501b_Enum> _1e54ae1a9_FindEnum(_1e54ac295_Sema*, jule::Str);
inline jule::Ptr<_1e5476616_TypeEnum> _1e54ae4b7_FindTypeEnum(_1e54ac295_Sema*, jule::Str);
inline jule::Bool _1e54ae819_isFlag(_1e54ac295_Sema*, jule::I64);
inline void _1e54aea8e_setCurrentFile(_1e54ac295_Sema*, jule::Ptr<_1e551cec6_SymbolTable>);
inline void _1e54aee57_pushErr(_1e54ac295_Sema*, jule::Ptr<_20d155596_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e54b0276_pushSugggestion(_1e54ac295_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e54b062d_isAccessibleDefine(_1e54ac295_Sema*, jule::Bool, jule::Ptr<_20d155596_Token>);
inline jule::Bool _1e54b0a7e_isDuplicatedIdent(_1e54ac295_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1e54b0d9d_checkDirectives(jule::Ptr<_1e54ac295_Sema>, jule::Slice<jule::Ptr<_1e474057e_Directive>>*, jule::Any);
inline jule::Bool _1e54b12ee_checkGenericQuantity(_1e54ac295_Sema*, jule::I64, jule::I64, jule::Ptr<_20d155596_Token>);
inline jule::Bool _1e54b16c8_isDuplicatedImportSelection(_1e54ac295_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1e54b1a91_getImportDef(_1e54ac295_Sema*, jule::Str, jule::Ptr<_1e54a4149_ImportInfo>*);
inline jule::Bool _1e878c64e_checkImportSelection(_1e54ac295_Sema*, jule::Ptr<_20d155596_Token>*, jule::Ptr<_1e54ca291_Var>*);
inline jule::Bool _1e87915ba_checkImportSelection(_1e54ac295_Sema*, jule::Ptr<_20d155596_Token>*, jule::Ptr<_1e554d08e_TypeAlias>*);
inline jule::Bool _1e879537c_checkImportSelection(_1e54ac295_Sema*, jule::Ptr<_20d155596_Token>*, jule::Ptr<_1e4790018_Struct>*);
inline jule::Bool _1e879978d_checkImportSelection(_1e54ac295_Sema*, jule::Ptr<_20d155596_Token>*, jule::Ptr<_1e5472dc6_Trait>*);
inline jule::Bool _1e879d561_checkImportSelection(_1e54ac295_Sema*, jule::Ptr<_20d155596_Token>*, jule::Ptr<_1e547501b_Enum>*);
inline jule::Bool _1e87a2455_checkImportSelection(_1e54ac295_Sema*, jule::Ptr<_20d155596_Token>*, jule::Ptr<_1e5476616_TypeEnum>*);
inline jule::Bool _1e87a61e5_checkImportSelection(_1e54ac295_Sema*, jule::Ptr<_20d155596_Token>*, jule::Ptr<_1e5460ec4_Fn>*);
inline jule::Bool _1e54b2278_checkImportSelectedSelections(_1e54ac295_Sema*, jule::Ptr<_1e54a4149_ImportInfo>*);
inline jule::Bool _1e87aa639_checkImportsAllSelectionsFromCollection(_1e54ac295_Sema*, jule::Slice<jule::Ptr<_1e54ca291_Var>>*, jule::Ptr<_20d155596_Token>*);
inline jule::Bool _1e87adb8c_checkImportsAllSelectionsFromCollection(_1e54ac295_Sema*, jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>*, jule::Ptr<_20d155596_Token>*);
inline jule::Bool _1e87ae264_checkImportsAllSelectionsFromCollection(_1e54ac295_Sema*, jule::Slice<jule::Ptr<_1e4790018_Struct>>*, jule::Ptr<_20d155596_Token>*);
inline jule::Bool _1e87b45aa_checkImportsAllSelectionsFromCollection(_1e54ac295_Sema*, jule::Slice<jule::Ptr<_1e5460ec4_Fn>>*, jule::Ptr<_20d155596_Token>*);
inline jule::Bool _1e87b4b93_checkImportsAllSelectionsFromCollection(_1e54ac295_Sema*, jule::Slice<jule::Ptr<_1e5472dc6_Trait>>*, jule::Ptr<_20d155596_Token>*);
inline jule::Bool _1e87b7855_checkImportsAllSelectionsFromCollection(_1e54ac295_Sema*, jule::Slice<jule::Ptr<_1e547501b_Enum>>*, jule::Ptr<_20d155596_Token>*);
inline jule::Bool _1e87ba517_checkImportsAllSelectionsFromCollection(_1e54ac295_Sema*, jule::Slice<jule::Ptr<_1e5476616_TypeEnum>>*, jule::Ptr<_20d155596_Token>*);
inline jule::Bool _1e54b29a4_checkImportAllSelections(_1e54ac295_Sema*, jule::Ptr<_1e54a4149_ImportInfo>*);
inline jule::Bool _1e54b2cc3_checkImportSelections(_1e54ac295_Sema*, jule::Ptr<_1e54a4149_ImportInfo>*);
inline jule::Bool _1e54b30d1_isUseAliasDuplication(_1e54ac295_Sema*, jule::Ptr<_1e54a4149_ImportInfo>*);
inline jule::Bool _1e54b33de_checkImport(_1e54ac295_Sema*, jule::Ptr<_1e54a4149_ImportInfo>*);
inline void _1e54b35ba_checkImports(_1e54ac295_Sema*);
inline void _1e54b3796_implFileImpls(jule::Ptr<_1e54ac295_Sema>);
inline void _1e54b3972_implImpls(jule::Ptr<_1e54ac295_Sema>);
inline void _1e54b3b4d_checkEnums(jule::Ptr<_1e54ac295_Sema>);
inline _1e555c5ed_typeChecker _1e54b409e_typeChecker(jule::Ptr<_1e54ac295_Sema>, jule::Trait<_1e5569c04_Lookup>, jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>, jule::Ptr<_1e555b71d_referencer>);
inline jule::Ptr<_1e554dc82_TypeKind> _1e54b4599_buildTypeWithRefers(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e4773826_TypeDecl>*, jule::Trait<_1e5569c04_Lookup>, jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>, jule::Ptr<_1e555b71d_referencer>);
inline jule::Bool _1e54b4a94_checkTypeWithRefers(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5553160_TypeSymbol>*, jule::Trait<_1e5569c04_Lookup>, jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>, jule::Ptr<_1e555b71d_referencer>);
inline jule::Ptr<_1e5478b46_constraintChecker> _1e54b4d08_constraintChecker(jule::Ptr<_1e54ac295_Sema>);
inline jule::Bool _1e54b51b0_checkType(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5553160_TypeSymbol>*, jule::Trait<_1e5569c04_Lookup>);
inline jule::Ptr<_1e554dc82_TypeKind> _1e54b5611_buildTypeWithGenerics(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e4773826_TypeDecl>*, jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>, jule::Ptr<_1e5466ae0_ReferenceStack>);
inline jule::Ptr<_1e554dc82_TypeKind> _1e54b591e_buildType(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e4773826_TypeDecl>*);
inline jule::Ptr<_1e554dc82_TypeKind> _1e54b5c2c_selectType(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e4773826_TypeDecl>*);
inline jule::Ptr<_1e552486d_Eval> _1e54b617d_evalpd(jule::Ptr<_1e54ac295_Sema>, jule::Trait<_1e5569c04_Lookup>, jule::Ptr<_1e554dc82_TypeKind>, jule::Ptr<_1e54ca291_Var>);
inline jule::Ptr<_1e552486d_Eval> _1e54b6535_evalp(jule::Ptr<_1e54ac295_Sema>, jule::Trait<_1e5569c04_Lookup>, jule::Ptr<_1e554dc82_TypeKind>);
inline jule::Ptr<_1e552486d_Eval> _1e54b6843_eval(jule::Ptr<_1e54ac295_Sema>, jule::Trait<_1e5569c04_Lookup>);
inline jule::Bool _1e54b6d3d_checkAssignType(jule::Ptr<_1e54ac295_Sema>, jule::Bool, jule::Ptr<_1e554dc82_TypeKind>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_20d155596_Token>);
inline jule::Bool _1e54b728e_checkTypeCompatibility(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e554dc82_TypeKind>*, jule::Ptr<_1e554dc82_TypeKind>*, jule::Ptr<_20d155596_Token>*);
inline jule::Ptr<_1e554dc82_TypeKind> _1e54b7712_buildNonGenericTypeKind(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e4773826_TypeDecl>*, jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>>*, jule::Slice<jule::Ptr<_1e554dc82_TypeKind>>*);
inline jule::Bool _1e54b7aec_buildFnNonGenericTypeKinds(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5463b75_FnIns>*, jule::Slice<jule::Ptr<_1e554dc82_TypeKind>>*);
inline jule::Ptr<_1e5463b75_FnIns> _1e54b7e1b_getTraitCheckFnKind(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5460ec4_Fn>*);
inline jule::Bool _1e54b836c_checkConstraintsFn(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5463b75_FnIns>*, jule::Ptr<_20d155596_Token>*, jule::Ptr<_1e5463b75_FnIns>);
inline jule::Bool _1e54b87bd_checkConstraintsStruct(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e47903e2_StructIns>*, jule::Ptr<_20d155596_Token>*, jule::Ptr<_1e47903e2_StructIns>);
inline jule::Bool _1e54b8b75_fnEnvironment(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5463b75_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1e54ac295_Sema>*,jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>*)>);
inline void _1e54b8dea_checkFnParamKind(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5462ca6_ParamIns>*);
inline jule::Bool _1e54b9208_reloadFnInsTypes(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5463b75_FnIns>);
inline jule::Bool _1e54b967b_checkRefValidityForInitExpr(jule::Ptr<_1e54ac295_Sema>, jule::Bool, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_20d155596_Token>*);
inline jule::Bool _1e54b9c53_checkValidityForInitExpr(jule::Ptr<_1e54ac295_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1e554dc82_TypeKind>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_20d155596_Token>*);
inline jule::Bool _1e54ba11b_checkTypeAliasDeclKind(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e554d08e_TypeAlias>*, jule::Trait<_1e5569c04_Lookup>);
inline void _1e54ba43a_checkTypeAliasDecl(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e554d08e_TypeAlias>*, jule::Trait<_1e5569c04_Lookup>);
inline void _1e54ba6b0_checkTypeAliasDeclDup(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e554d08e_TypeAlias>*);
inline jule::Bool _1e54ba924_checkTypeAliasDecls(jule::Ptr<_1e54ac295_Sema>);
inline void _1e883a60e_checkEnumItemsDup(_1e54ac295_Sema*, jule::Slice<jule::Ptr<_1e5474526_EnumItem>>);
inline void _1e8845905_checkEnumItemsDup(_1e54ac295_Sema*, jule::Slice<jule::Ptr<_1e5476050_TypeEnumItem>>);
inline void _1e54bae1e_checkEnumItemsStr(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e547501b_Enum>*);
inline void _1e54bb194_checkEnumItemsInt(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e547501b_Enum>*);
inline void _1e54bb419_checkEnumDecl(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e547501b_Enum>*);
inline void _1e54bb68e_checkTypeEnumDecl(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5476616_TypeEnum>*);
inline jule::Bool _1e54bb903_checkEnumDecls(jule::Ptr<_1e54ac295_Sema>);
inline jule::Bool _1e54bbb67_checkTypeEnumDecls(jule::Ptr<_1e54ac295_Sema>);
inline jule::Bool _1e54bbe75_checkDeclGenerics(_1e54ac295_Sema*, jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>>*);
inline jule::Bool _1e54bc283_checkFnDeclParamsDup(_1e54ac295_Sema*, jule::Ptr<_1e5460ec4_Fn>*);
inline jule::Bool _1e54bc591_checkFnDeclResultDup(_1e54ac295_Sema*, jule::Ptr<_1e5460ec4_Fn>*);
inline void _1e54bc816_checkFnDeclPrototype(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5460ec4_Fn>*);
inline void _1e54bca8b_checkTraitDeclMethod(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5460ec4_Fn>*);
inline void _1e54bcd11_checkTraitDeclMethods(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5472dc6_Trait>*);
inline void _1e54bd086_checkTraitDecl(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5472dc6_Trait>*);
inline jule::Bool _1e54bd2ea_checkTraitDecls(jule::Ptr<_1e54ac295_Sema>);
inline jule::Bool _1e54bd6a2_checkTraitImplMethods(_1e54ac295_Sema*, jule::Ptr<_1e5472dc6_Trait>*, jule::Ptr<_1e547aa7c_Impl>*);
inline jule::Bool _1e54bda59_implToStruct(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e4790018_Struct>*, jule::Ptr<_1e547aa7c_Impl>*);
inline void _1e54bdcce_implTrait(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e547aa7c_Impl>*);
inline void _1e54be054_implStruct(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e547aa7c_Impl>*);
inline void _1e54be2c9_implImpl(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e547aa7c_Impl>*);
inline void _1e54be5e8_checkVarDecl(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e54ca291_Var>*, jule::Trait<_1e5569c04_Lookup>);
inline void _1e54be86d_checkGlobalVarDecl(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e54ca291_Var>*);
inline jule::Bool _1e54bead2_checkGlobalDecls(jule::Ptr<_1e54ac295_Sema>);
inline jule::Bool _1e54bee89_checkStructTraitImpl(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e4790018_Struct>*, jule::Ptr<_1e5472dc6_Trait>*);
inline jule::Bool _1e54c0297_checkStructImpls(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e4790018_Struct>*);
inline jule::Bool _1e54c05a5_checkStructFields(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e4790018_Struct>*);
inline void _1e54c082a_checkStructDecl(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e4790018_Struct>*);
inline jule::Bool _1e54c0a8e_checkStructDecls(jule::Ptr<_1e54ac295_Sema>);
inline void _1e54c0d14_checkFnDecl(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5460ec4_Fn>*);
inline jule::Bool _1e54c1078_checkFnDecls(jule::Ptr<_1e54ac295_Sema>);
inline void _1e54c1441_pushCycleError(_1e54ac295_Sema*, jule::Ptr<_1e4790018_Struct>*, jule::Ptr<_1e4790018_Struct>*, jule::Str*);
inline jule::Bool _1e54c1892_checkCrossCycle(_1e54ac295_Sema*, jule::Ptr<_1e4790018_Struct>*, jule::Ptr<_1e4790018_Struct>*, jule::Str*);
inline jule::Bool _1e54c1d15_checkStructDeriveIllegalCycles(_1e54ac295_Sema*, jule::Str, jule::Ptr<_1e4790018_Struct>*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e54c2156_checkStructInsDeriveClone(_1e54ac295_Sema*, jule::Ptr<_1e47903e2_StructIns>);
inline void _1e54c2343_checkPackageDecls(jule::Ptr<_1e54ac295_Sema>);
inline void _1e54c2684_checkDataForTypeInference(_1e54ac295_Sema*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_20d155596_Token>*);
inline void _1e54c291a_checkVar(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e54ca291_Var>*);
inline void _1e54c2c39_checkTypeVar(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e54ca291_Var>*, jule::Trait<_1e5569c04_Lookup>);
inline void _1e54c2e15_checkGlobalTypes(jule::Ptr<_1e54ac295_Sema>);
inline jule::Ptr<_1e5463b75_FnIns> _1e54c32bc_readyToCheckFn(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e47903e2_StructIns>*, jule::Ptr<_1e5460ec4_Fn>*);
inline void _1e54c35db_checkTypeMethod(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e47903e2_StructIns>*, jule::Ptr<_1e5460ec4_Fn>*);
inline jule::Ptr<_1e5463b75_FnIns> _1e54c3a3c_checkStructInsOp(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e47903e2_StructIns>*, jule::Ptr<_1e5460ec4_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1e5460ec4_Fn>)>);
inline jule::Bool _1e54c3de4_checkStructEnv(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e47903e2_StructIns>*, jule::Ptr<_20d155596_Token>);
inline jule::Bool _1e54c429b_precheckStructIns(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e47903e2_StructIns>*, jule::Ptr<_20d155596_Token>);
inline void _1e54c4521_checkStructIns(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e47903e2_StructIns>*);
inline void _1e54c4796_checkTypeStruct(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e4790018_Struct>*);
inline void _1e54c4972_checkStructTypes(jule::Ptr<_1e54ac295_Sema>);
inline void _1e54c4c19_checkStructInsOperators(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e47903e2_StructIns>);
inline void _1e54c4ea0_precheckStructType(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e4790018_Struct>*);
inline void _1e54c517b_precheckStructTypes(jule::Ptr<_1e54ac295_Sema>);
inline void _1e54c5401_checkRets(_1e54ac295_Sema*, jule::Ptr<_1e5463b75_FnIns>*);
inline void _1e54c5720_checkFnInsSc(_1e54ac295_Sema*, jule::Ptr<_1e5463b75_FnIns>*, jule::Ptr<_1e548c4a6_scopeChecker>*);
inline void _1e54c5a3e_checkFnInsCaller(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5463b75_FnIns>*, jule::Ptr<_20d155596_Token>);
inline void _1e54c5cb4_checkFnIns(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5463b75_FnIns>*);
inline void _1e54c6039_checkTypeFn(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5460ec4_Fn>*);
inline void _1e54c62ae_checkTestFn(_1e54ac295_Sema*, jule::Ptr<_1e5463b75_FnIns>*);
inline void _1e54c6534_precheckTypeFn(jule::Ptr<_1e54ac295_Sema>, jule::Ptr<_1e5460ec4_Fn>*);
inline void _1e54c6710_precheckFnTypes(jule::Ptr<_1e54ac295_Sema>);
inline void _1e54c68db_checkFnTypes(jule::Ptr<_1e54ac295_Sema>);
inline void _1e54c6ab7_checkPackageTypes(jule::Ptr<_1e54ac295_Sema>);
inline void _1e54c6c93_setFileSemaFields(jule::Ptr<_1e54ac295_Sema>);
inline void _1e54c6e6e_setSemaFields(jule::Ptr<_1e54ac295_Sema>);
inline void _1e54c71e4_check(jule::Ptr<_1e54ac295_Sema>, jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>*);
struct _1e54ac295_Sema {
	jule::Slice<_24305e4ae_Log> _field_errors;
	jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>> _field_files;
	jule::Ptr<_1e551cec6_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	

	_1e54ac295_Sema(void) = default;


};
inline _1e54c759b_missingRetChecker static__1e54c7964_new(void);
inline jule::Bool _1e54c7c3e_checkConditional(_1e54c759b_missingRetChecker*, jule::Ptr<_1e5481643_Conditional>);
inline jule::Bool _1e54c804c_checkMatch(_1e54c759b_missingRetChecker*, jule::Ptr<_1e5484833_Match>);
inline jule::Bool _1e54c835a_checkInfIter(_1e54c759b_missingRetChecker*, jule::Ptr<_1e548192e_InfIter>);
inline jule::Bool _1e54c8668_checkScope(_1e54c759b_missingRetChecker*, jule::Ptr<_1e5480ad7_Scope>);
inline jule::Bool _1e54c8976_check(_1e54c759b_missingRetChecker*, jule::Ptr<_1e5480ad7_Scope>);
struct _1e54c759b_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	

	_1e54c759b_missingRetChecker(void) = default;


};
struct _1e54c925c_IterRelation {
	jule::Ptr<_1e54ca291_Var> _field_Range;
	

	_1e54c925c_IterRelation(void) = default;

	inline bool operator==(_1e54c925c_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1e54c925c_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e54ca659_IsInitialized(_1e54ca291_Var*);
inline jule::Bool _1e54ca8bd_IsTypeInferred(_1e54ca291_Var*);
inline jule::Bool _1e54cab32_untypedConstant(_1e54ca291_Var*);
struct _1e54ca291_Var {
	jule::Ptr<_1e5480ad7_Scope> _field_Scope;
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1e5553160_TypeSymbol> _field_Kind;
	jule::Ptr<_1e5523d78_Value> _field_Value;
	jule::Ptr<_1e5466ae0_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1e474057e_Directive>> _field_Directives;
	jule::Ptr<_1e54c925c_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1e54ca291_Var>> _field_Depends;
	

	_1e54ca291_Var(void) = default;


};
inline jule::Bool static__1e54cb6b0_Dispose(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54cb957_Str(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54cbc98_logical(jule::Ptr<_1e5460ec4_Fn>*, jule::Str);
inline jule::Bool static__1e54cc040_Eq(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54cc2d7_Gt(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54cc57e_GtEq(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54cc826_Lt(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54ccabd_LtEq(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54cce0e_result(jule::Ptr<_1e5460ec4_Fn>*, jule::Str);
inline jule::Bool static__1e54cd1a6_Shl(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54cd44d_Shr(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54cd6e5_Add(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54cd98c_Sub(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54cdc34_Div(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54cdecb_Mul(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54ce273_Mod(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54ce51a_BitAnd(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54ce7b2_BitOr(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54cea59_BitXor(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54ced9a_unary(jule::Ptr<_1e5460ec4_Fn>*, jule::Str);
inline jule::Bool static__1e54d0142_Neg(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54d03d9_Pos(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54d0681_BitNot(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54d09c2_assign(jule::Ptr<_1e5460ec4_Fn>*, jule::Str);
inline jule::Bool static__1e54d0c69_AddAssign(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54d1011_SubAssign(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54d12a8_DivAssign(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54d1550_MulAssign(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54d17e7_ModAssign(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54d1a8e_ShlAssign(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54d1d36_ShrAssign(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54d20cd_BitOrAssign(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54d2375_BitAndAssign(jule::Ptr<_1e5460ec4_Fn>);
inline jule::Bool static__1e54d261c_BitXorAssign(jule::Ptr<_1e5460ec4_Fn>);
struct _1e54cb03e_FuncPattern {
	

	_1e54cb03e_FuncPattern(void) = default;


};
inline void _1e550c0d6_pushErr(_1e550bab9_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e550c34a_checkTrait(_1e550bab9_typeCompatibilityChecker*);
inline jule::Bool _1e550c5ae_checkPtr(_1e550bab9_typeCompatibilityChecker*);
inline jule::Bool _1e550c823_checkPrim(_1e550bab9_typeCompatibilityChecker*);
inline jule::Bool _1e550cbca_typeEnum(_1e550bab9_typeCompatibilityChecker*, jule::Ptr<_1e5476616_TypeEnum>*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e550ce3e_checkTypeEnum(_1e550bab9_typeCompatibilityChecker*);
inline jule::Bool _1e550d1a3_check(_1e550bab9_typeCompatibilityChecker*);
struct _1e550bab9_typeCompatibilityChecker {
	jule::Ptr<_1e54ac295_Sema> _field_s;
	jule::Ptr<_1e554dc82_TypeKind> _field_dest;
	jule::Ptr<_1e554dc82_TypeKind> _field_src;
	jule::Ptr<_20d155596_Token> _field_errorToken;
	

	_1e550bab9_typeCompatibilityChecker(void) = default;

	inline bool operator==(_1e550bab9_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1e550bab9_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1e550db54_pushErr(_1e550d6e2_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e550ddb8_checkValidity(_1e550d6e2_assignTypeChecker*);
inline jule::Bool _1e550e12c_checkConst(_1e550d6e2_assignTypeChecker*);
inline jule::Bool _1e550e391_isPrim(_1e550d6e2_assignTypeChecker*);
inline jule::Bool _1e550e605_checkCompatibility(_1e550d6e2_assignTypeChecker*);
inline jule::Bool _1e550e869_check(_1e550d6e2_assignTypeChecker*);
struct _1e550d6e2_assignTypeChecker {
	jule::Ptr<_1e54ac295_Sema> _field_s;
	jule::Ptr<_1e554dc82_TypeKind> _field_dest;
	jule::Ptr<_1e5522d00_Data> _field_d;
	jule::Ptr<_20d155596_Token> _field_errorToken;
	

	_1e550d6e2_assignTypeChecker(void) = default;

	inline bool operator==(_1e550d6e2_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1e550d6e2_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e89aeca0_annotateConstraintElem(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e89ae497_annotateConstraintElem(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e89b171e_annotateConstraintElem(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e89b6bdb_annotateConstraintElem(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e5510aac_annotateConstraintMap(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e5510dba_annotateConstraintTup(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e55111c8_annotateConstraintFn(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e5511508_annotateConstraintIdent(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e5511827_annotateConstraint(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline void _1e5511b46_pushGeneric(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*, jule::I64);
inline jule::Bool _1e5511e54_annotatePrim(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e5512262_annotateArr(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e5512570_annotateSlc(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e5512927_checkMapKey(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e5512c35_annotateMap(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e5513043_annotateFn(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e5513351_annotatePtr(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e551365e_annotateSptr(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e551396c_annotateStruct(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e5513c7a_annotateAny(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e5514088_annotateKind(_1e55101c7_dynamicTypeAnnotation*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e55142ec_annotate(_1e55101c7_dynamicTypeAnnotation*);
struct _1e55101c7_dynamicTypeAnnotation {
	jule::Ptr<_1e552486d_Eval> _field_e;
	jule::Ptr<_1e5463b75_FnIns> _field_f;
	jule::Ptr<_1e5462ca6_ParamIns> _field_p;
	jule::Ptr<_1e5522d00_Data> _field_a;
	jule::Ptr<_20d155596_Token> _field_errorToken;
	jule::Ptr<_1e554dc82_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1e4773826_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1e554dc82_TypeKind>> _field_ignored;
	

	_1e55101c7_dynamicTypeAnnotation(void) = default;


};
inline void _1e55150de_pushErrToken(_1e5514a8e_fnCallArgChecker*, jule::Ptr<_20d155596_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e551540d_pushErr(_1e5514a8e_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1e5462ca6_ParamIns>> _1e5515672_getParams(_1e5514a8e_fnCallArgChecker*);
inline jule::Bool _1e5515980_checkCounts(_1e5514a8e_fnCallArgChecker*, jule::Slice<jule::Ptr<_1e5462ca6_ParamIns>>*);
inline jule::Bool _1e5515dd1_checkArg(_1e5514a8e_fnCallArgChecker*, jule::Ptr<_1e5462ca6_ParamIns>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_20d155596_Token>*);
inline jule::Bool _1e5516288_push(_1e5514a8e_fnCallArgChecker*, jule::Ptr<_1e5462ca6_ParamIns>*, jule::Ptr<_1e4777d47_Expr>);
inline jule::Bool _1e5516640_pushVariadic(_1e5514a8e_fnCallArgChecker*, jule::Ptr<_1e5462ca6_ParamIns>*, jule::I64);
inline jule::Bool _1e551694d_checkArgs(_1e5514a8e_fnCallArgChecker*, jule::Slice<jule::Ptr<_1e5462ca6_ParamIns>>*);
inline jule::Bool _1e5516bd4_checkDynamicTypeAnnotation(_1e5514a8e_fnCallArgChecker*);
inline jule::Bool _1e5516e59_check(_1e5514a8e_fnCallArgChecker*);
struct _1e5514a8e_fnCallArgChecker {
	jule::Ptr<_1e552486d_Eval> _field_e;
	jule::Slice<jule::Ptr<_1e4777d47_Expr>> _field_args;
	jule::Ptr<_20d155596_Token> _field_errorToken;
	jule::Ptr<_1e5463b75_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1e554dc82_TypeKind>> _field_ignored;
	

	_1e5514a8e_fnCallArgChecker(void) = default;


};
inline void _1e55179a4_pushErr(_1e5517498_structLitChecker*, jule::Ptr<_20d155596_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e5517cc3_pushSugggestion(_1e5517498_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1e551818b_pushMatch(_1e5517498_structLitChecker*, jule::Ptr<_1e4790205_FieldIns>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_20d155596_Token>*);
inline void _1e55184aa_checkPair(_1e5517498_structLitChecker*, jule::Ptr<_1e477c7a8_FieldExprPair>*, jule::Slice<jule::Ptr<_1e4777d47_Expr>>*);
inline jule::Bool _1e55187b8_readyExprs(_1e5517498_structLitChecker*, jule::Slice<jule::Ptr<_1e4777d47_Expr>>*);
inline void _1e5518a3d_check(_1e5517498_structLitChecker*, jule::Slice<jule::Ptr<_1e4777d47_Expr>>*);
struct _1e5517498_structLitChecker {
	jule::Ptr<_1e552486d_Eval> _field_e;
	jule::Ptr<_20d155596_Token> _field_errorToken;
	jule::Ptr<_1e47903e2_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1e545355a_StructArgExprModel>> _field_args;
	

	_1e5517498_structLitChecker(void) = default;


};
inline jule::Ptr<_1e54ca291_Var> _1e5519522_buildVar(_1e551907c_rangeChecker*, jule::Ptr<_1e4786284_VarDecl>*);
inline void _1e55196ed_setSizeKey(_1e551907c_rangeChecker*);
inline void _1e5519ab6_checkRangeExprValidity(_1e551907c_rangeChecker*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e54ca291_Var>*, jule::Ptr<_1e554dc82_TypeKind>*);
inline void _1e5519c92_checkSlice(_1e551907c_rangeChecker*);
inline void _1e5519e6d_checkArray(_1e551907c_rangeChecker*);
inline void _1e551a149_checkMapKeyA(_1e551907c_rangeChecker*);
inline void _1e551a325_checkMapKeyB(_1e551907c_rangeChecker*);
inline void _1e551a501_checkMap(_1e551907c_rangeChecker*);
inline void _1e551a6cc_checkStr(_1e551907c_rangeChecker*);
inline jule::Bool _1e551a941_check(_1e551907c_rangeChecker*);
struct _1e551907c_rangeChecker {
	jule::Ptr<_1e548c4a6_scopeChecker> _field_sc;
	jule::Ptr<_1e4787e12_RangeKind> _field_rang;
	jule::Ptr<_1e5482787_RangeIter> _field_Kind;
	jule::Ptr<_1e5522d00_Data> _field_d;
	

	_1e551907c_rangeChecker(void) = default;

	inline bool operator==(_1e551907c_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1e551907c_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _1e551b5ac_prepareTypes(_1e551b117_retTypeChecker*);
inline void _1e551b832_prepareExprs(_1e551b117_retTypeChecker*, jule::Ptr<_1e4777d47_Expr>*);
inline void _1e551ba0d_checkExprs(_1e551b117_retTypeChecker*);
inline jule::Bool _1e551bd1b_check(_1e551b117_retTypeChecker*, jule::Ptr<_1e4777d47_Expr>*);
struct _1e551b117_retTypeChecker {
	jule::Ptr<_1e548c4a6_scopeChecker> _field_sc;
	jule::Ptr<_1e5463b75_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1e554dc82_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1e4777d47_Expr>> _field_exprs;
	jule::Ptr<_20d155596_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	

	_1e551b117_retTypeChecker(void) = default;


};
inline jule::Ptr<_1e54a4149_ImportInfo> _1e551d4e3_FindPackage(_1e551cec6_SymbolTable*, jule::Str);
inline jule::Ptr<_1e54a4149_ImportInfo> _1e551d801_SelectPackage(_1e551cec6_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)>);
inline jule::Ptr<_1e54ca291_Var> _1e551dba8_FindVar(_1e551cec6_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e554d08e_TypeAlias> _1e551e060_FindTypeAlias(_1e551cec6_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e4790018_Struct> _1e551e417_FindStruct(_1e551cec6_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5460ec4_Fn> _1e551e7be_FindFn(_1e551cec6_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5472dc6_Trait> _1e551eacc_FindTrait(_1e551cec6_SymbolTable*, jule::Str);
inline jule::Ptr<_1e547501b_Enum> _1e551edda_FindEnum(_1e551cec6_SymbolTable*, jule::Str);
inline jule::Ptr<_1e5476616_TypeEnum> _1e55201e8_FindTypeEnum(_1e551cec6_SymbolTable*, jule::Str);
inline jule::Ptr<_1e54ca291_Var> _1e552076a_findVar(_1e551cec6_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1e554d08e_TypeAlias> _1e5520bbb_findTypeAlias(_1e551cec6_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1e5521073_defByIdent(_1e551cec6_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1e55214c4_isDuplicatedIdent(_1e551cec6_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1e551cec6_SymbolTable {
	jule::Ptr<_20d15a931_File> _field_File;
	jule::Slice<_1e5467e54_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1e54a4149_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1e54ca291_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1e4790018_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1e5460ec4_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1e5472dc6_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1e547501b_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1e5476616_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1e547aa7c_Impl>> _field_Impls;
	

	_1e551cec6_SymbolTable(void) = default;


};
inline jule::Bool _1e55231da_IsNil(_1e5522d00_Data*);
inline jule::Bool _1e552344e_IsVoid(_1e5522d00_Data*);
inline jule::Bool _1e55236b3_IsConst(_1e5522d00_Data*);
inline jule::Bool _1e55239c1_GoodOperand(_1e5522d00_Data*, jule::Ptr<_1e5522d00_Data>*);
struct _1e5522d00_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1e554dc82_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1e54469c1_Const> _field_Constant;
	

	_1e5522d00_Data(void) = default;

	inline bool operator==(_1e5522d00_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1e5522d00_Data _other) { return !this->operator==(_other); }


};
struct _1e5523d78_Value {
	jule::Ptr<_1e4777d47_Expr> _field_Expr;
	jule::Ptr<_1e5522d00_Data> _field_Data;
	

	_1e5523d78_Value(void) = default;

	inline bool operator==(_1e5523d78_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1e5523d78_Value _other) { return !this->operator==(_other); }


};
inline void _1e5524d79_pushErr(_1e552486d_Eval*, jule::Ptr<_20d155596_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e5525198_pushSugggestion(_1e552486d_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1e5525374_allowBuiltin(_1e552486d_Eval*);
inline void _1e5525550_disallowBuiltin(_1e552486d_Eval*);
inline jule::Bool _1e55257b4_isUnsafe(_1e552486d_Eval*);
inline jule::Bool _1e5525a28_isGlobal(_1e552486d_Eval*);
inline jule::Bool _1e5525d03_applyNumericPrefix(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e5526067_litNil(_1e552486d_Eval*);
inline jule::Ptr<_1e5522d00_Data> _1e5526375_litStr(_1e552486d_Eval*, jule::Ptr<_1e4778d7b_LitExpr>*);
inline jule::Ptr<_1e5522d00_Data> _1e5526683_litBool(_1e552486d_Eval*, jule::Ptr<_1e4778d7b_LitExpr>*);
inline jule::Ptr<_1e5522d00_Data> _1e5526991_litRune(_1e552486d_Eval*, jule::Ptr<_1e4778d7b_LitExpr>*);
inline jule::Ptr<_1e5522d00_Data> _1e5526c9e_litFloat(_1e552486d_Eval*, jule::Ptr<_1e4778d7b_LitExpr>*);
inline jule::Ptr<_1e5522d00_Data> _1e55270ac_litInt(_1e552486d_Eval*, jule::Ptr<_1e4778d7b_LitExpr>*);
inline jule::Ptr<_1e5522d00_Data> _1e55273ba_litNum(_1e552486d_Eval*, jule::Ptr<_1e4778d7b_LitExpr>*);
inline jule::Ptr<_1e5522d00_Data> _1e55276c8_evalLit(_1e552486d_Eval*, jule::Ptr<_1e4778d7b_LitExpr>);
inline jule::Any _1e55279d6_findBuiltins(_1e552486d_Eval*, jule::Str);
inline jule::Any _1e5527d8d_getDef(_1e552486d_Eval*, jule::Str, jule::Bool);
inline void _1e8ae3e7d_pushReference(_1e552486d_Eval*, jule::Ptr<_1e5463b75_FnIns>*);
inline void _1e8b07c72_pushReference(_1e552486d_Eval*, jule::Ptr<_1e54ca291_Var>*);
inline void _1e8b98164_pushReference(_1e552486d_Eval*, jule::Ptr<_1e47903e2_StructIns>*);
inline jule::Ptr<_1e5522d00_Data> _1e5528421__evalEnum(_1e552486d_Eval*, jule::Ptr<_1e547501b_Enum>);
inline jule::Ptr<_1e5522d00_Data> _1e55287c8_evalEnum(_1e552486d_Eval*, jule::Ptr<_1e547501b_Enum>, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e5528ad6__evalTypeEnum(_1e552486d_Eval*, jule::Ptr<_1e5476616_TypeEnum>);
inline jule::Ptr<_1e5522d00_Data> _1e5528e8d_evalTypeEnum(_1e552486d_Eval*, jule::Ptr<_1e5476616_TypeEnum>, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e552929b__evalStruct(_1e552486d_Eval*, jule::Ptr<_1e47903e2_StructIns>);
inline jule::Ptr<_1e5522d00_Data> _1e5529653_evalStruct(_1e552486d_Eval*, jule::Ptr<_1e47903e2_StructIns>, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e5529961_evalFnIns(_1e552486d_Eval*, jule::Ptr<_1e5463b75_FnIns>);
inline void _1e5529c80_checkDeprecated(_1e552486d_Eval*, jule::Slice<jule::Ptr<_1e474057e_Directive>>*, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e552a137_evalFn(_1e552486d_Eval*, jule::Ptr<_1e5460ec4_Fn>, jule::Ptr<_20d155596_Token>);
inline void _1e552a500_pushIllegalCycleError(_1e552486d_Eval*, jule::Ptr<_1e54ca291_Var>*, jule::Ptr<_1e54ca291_Var>*, jule::Str*);
inline jule::Bool _1e552a8a7_checkCrossCycle(_1e552486d_Eval*, jule::Ptr<_1e54ca291_Var>*, jule::Str*);
inline jule::Bool _1e552ac5e_checkIllegalCycles(_1e552486d_Eval*, jule::Ptr<_1e54ca291_Var>*, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e552b116_evalVar(_1e552486d_Eval*, jule::Ptr<_1e54ca291_Var>, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e552b4bd_evalTypeAlias(_1e552486d_Eval*, jule::Ptr<_1e554d08e_TypeAlias>, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e552b875_evalDef(_1e552486d_Eval*, jule::Any, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e552bb83_evalIdent(_1e552486d_Eval*, jule::Ptr<_1e4779a08_IdentExpr>);
inline jule::Ptr<_1e5522d00_Data> _1e552be91_evalUnary(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e477a212_UnaryExpr>);
inline jule::Ptr<_1e5522d00_Data> _1e552c29e_evalVariadic(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e477a5b9_VariadicExpr>);
inline jule::Ptr<_1e5522d00_Data> _1e552c5ac_evalUnsafe(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e4779585_UnsafeExpr>);
inline jule::Ptr<_1e5522d00_Data> _1e552c8ba_evalArr(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e477e436_SliceExpr>);
inline jule::Ptr<_1e5522d00_Data> _1e552cd1b_evalExpSlc(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e477e436_SliceExpr>, jule::Ptr<_1e554dc82_TypeKind>, jule::Any);
inline jule::Ptr<_1e5522d00_Data> _1e552d129_evalSliceExpr(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e477e436_SliceExpr>);
inline void _1e552d46a_checkIntegerIndexingByData(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_20d155596_Token>);
inline void _1e552d844_indexingPtr(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e477eca5_IndexingExpr>*);
inline void _1e552dc0c_indexingArr(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e477eca5_IndexingExpr>*);
inline void _1e552e0c5_indexingSlc(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e477eca5_IndexingExpr>*);
inline void _1e552e48d_indexingMap(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e477eca5_IndexingExpr>*);
inline void _1e552e856_indexingStr(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e477eca5_IndexingExpr>*);
inline void _1e552ec1e_toIndexing(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e477eca5_IndexingExpr>*);
inline jule::Bool _1e5530192_pushGenericsFromExprSubIdent(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e477b29b_SubIdentExpr>*, jule::Slice<jule::Ptr<_1e4773826_TypeDecl>>*, jule::Ptr<_1e4777d47_Expr>*);
inline jule::Bool _1e553055a_pushGenericsFromData(jule::Ptr<_1e552486d_Eval>, jule::Slice<jule::Ptr<_1e4773826_TypeDecl>>*, jule::Ptr<_1e4777d47_Expr>*);
inline void _1e553089b_evalIdentDeclFromIndexing(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e477eca5_IndexingExpr>*);
inline jule::Bool _1e5530d0d_checkGenericFn(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e5463b75_FnIns>*, jule::Ptr<_20d155596_Token>*, jule::Any*);
inline void _1e553114e_evalFnGenericFromIndexing(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e477eca5_IndexingExpr>*);
inline jule::Ptr<_1e5522d00_Data> _1e553146d_evalIndexing(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e477eca5_IndexingExpr>);
inline __jule_tuple_x_1e5522d00_Data__jule_tuple_x_1e5522d00_Data _1e553177b_evalSlicingExprs(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e47803b0_SlicingExpr>*);
inline void _1e5531a01_slicingArr(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>*);
inline void _1e5531db9_slicingStr(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*);
inline void _1e553232b_checkSlicing(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e47803b0_SlicingExpr>*);
inline jule::Ptr<_1e5522d00_Data> _1e5532639_evalSlicing(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e47803b0_SlicingExpr>);
inline void _1e5532a02_castPtr(_1e552486d_Eval*, jule::Ptr<_1e554dc82_TypeKind>, jule::Ptr<_1e5522d00_Data>, jule::Ptr<_20d155596_Token>);
inline void _1e5532dba_castStruct(_1e552486d_Eval*, jule::Ptr<_1e554dc82_TypeKind>, jule::Ptr<_1e5522d00_Data>, jule::Ptr<_20d155596_Token>);
inline void _1e5533283_castRef(_1e552486d_Eval*, jule::Ptr<_1e554dc82_TypeKind>, jule::Ptr<_1e5522d00_Data>, jule::Ptr<_20d155596_Token>);
inline void _1e553364b_castSlc(_1e552486d_Eval*, jule::Ptr<_1e554dc82_TypeKind>, jule::Ptr<_1e5522d00_Data>, jule::Ptr<_20d155596_Token>);
inline void _1e553396a_castStr(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>, jule::Ptr<_20d155596_Token>);
inline void _1e5533d33_castInt(_1e552486d_Eval*, jule::Ptr<_1e554dc82_TypeKind>, jule::Ptr<_1e5522d00_Data>, jule::Ptr<_20d155596_Token>);
inline void _1e55341eb_castNum(_1e552486d_Eval*, jule::Ptr<_1e554dc82_TypeKind>, jule::Ptr<_1e5522d00_Data>, jule::Ptr<_20d155596_Token>);
inline void _1e55345b4_castPrim(_1e552486d_Eval*, jule::Ptr<_1e554dc82_TypeKind>, jule::Ptr<_1e5522d00_Data>, jule::Ptr<_20d155596_Token>);
inline void _1e55348d3_castConstant(_1e552486d_Eval*, jule::Ptr<_1e554dc82_TypeKind>*, jule::Ptr<_1e5522d00_Data>*);
inline void _1e5534c9b_castTypeEnum(_1e552486d_Eval*, jule::Ptr<_1e554dc82_TypeKind>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_20d155596_Token>*);
inline void _1e5535164_castTypeEnumT(_1e552486d_Eval*, jule::Ptr<_1e554dc82_TypeKind>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_20d155596_Token>*);
inline jule::Ptr<_1e5522d00_Data> _1e55355b5_evalCastByTypeNData(_1e552486d_Eval*, jule::Ptr<_1e554dc82_TypeKind>, jule::Ptr<_1e5522d00_Data>, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e5535a16_evalCastT(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e554dc82_TypeKind>*, jule::Ptr<_1e4777d47_Expr>*, jule::Ptr<_20d155596_Token>*);
inline jule::Ptr<_1e5522d00_Data> _1e5535d24_evalCast(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e477a971_CastExpr>);
inline jule::Ptr<_1e5522d00_Data> _1e5536132_evalNsSelection(_1e552486d_Eval*, jule::Ptr<_1e477ad28_NsSelectionExpr>);
inline jule::Ptr<_1e5522d00_Data> _1e5536583_evalStructLitExplicit(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e47903e2_StructIns>, jule::Slice<jule::Ptr<_1e4777d47_Expr>>, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e5536891_evalStructLit(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e477d006_StructLit>);
inline _1e555c5ed_typeChecker _1e5536b05_typeChecker(_1e552486d_Eval*);
inline jule::Ptr<_1e5522d00_Data> _1e5536e13_evalType(_1e552486d_Eval*, jule::Ptr<_1e4773826_TypeDecl>);
inline void _1e5537232_callTypeFn(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline void _1e5537551_callBuiltinFn(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline void _1e5537892_checkFnOfConcurrentCall(_1e552486d_Eval*, jule::Ptr<_1e5463b75_FnIns>*, jule::Ptr<_20d155596_Token>);
inline void _1e5537c8d_processExceptionalHandler(_1e552486d_Eval*, jule::Ptr<_1e5463b75_FnIns>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline void _1e55380bd_callFn(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e55383cb_evalFnCall(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e477bd29_FnCallExpr>);
inline jule::Ptr<_1e5522d00_Data> _1e5538783_evalEnumStatic(_1e552486d_Eval*, jule::Ptr<_1e547501b_Enum>, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e5538b3a_evalTypeEnumStatic(_1e552486d_Eval*, jule::Ptr<_1e5476616_TypeEnum>, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e5538ee2_evalStructStatic(_1e552486d_Eval*, jule::Ptr<_1e47903e2_StructIns>, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e5539443_evalTraitSubIdent(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>, jule::Ptr<_1e5472dc6_Trait>, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e553993d_evalStructSubIdent(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>, jule::Ptr<_1e47903e2_StructIns>, jule::Ptr<_1e477b29b_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1e5522d00_Data> _1e5539ce5_evalSliceSubIdent(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e553a19c_evalArraySubIdent(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e553a4aa_evalIntTypeStatic(_1e552486d_Eval*, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e553a7b8_evalUintTypeStatic(_1e552486d_Eval*, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e553aac6_evalI8TypeStatic(_1e552486d_Eval*, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e553add4_evalI16TypeStatic(_1e552486d_Eval*, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e553b1e2_evalI32TypeStatic(_1e552486d_Eval*, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e553b500_evalI64TypeStatic(_1e552486d_Eval*, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e553b80d_evalU8TypeStatic(_1e552486d_Eval*, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e553bb1b_evalU16TypeStatic(_1e552486d_Eval*, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e553be29_evalU32TypeStatic(_1e552486d_Eval*, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e553c237_evalU64TypeStatic(_1e552486d_Eval*, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e553c545_evalF32TypeStatic(_1e552486d_Eval*, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e553c853_evalF64TypeStatic(_1e552486d_Eval*, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e553cc0a_evalPrimStatic(_1e552486d_Eval*, jule::Str, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e5522d00_Data> _1e553d0b2_evalTypeStatic(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>, jule::Ptr<_1e477b29b_SubIdentExpr>);
inline jule::Ptr<_1e5522d00_Data> _1e553d469_evalObjSubIdent(_1e552486d_Eval*, jule::Ptr<_1e5522d00_Data>, jule::Ptr<_1e477b29b_SubIdentExpr>);
inline jule::Ptr<_1e5522d00_Data> _1e553d777_evalSubIdent(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e477b29b_SubIdentExpr>);
inline jule::Ptr<_1e5522d00_Data> _1e553da85_evalTuple(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e47789c4_TupleExpr>);
inline jule::Ptr<_1e5522d00_Data> _1e553de3c_evalMap(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e5559276_Map>, jule::Ptr<_1e477d479_BraceLit>);
inline jule::Ptr<_1e5522d00_Data> _1e553e24a_evalBraceLit(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e477d479_BraceLit>);
inline jule::Ptr<_1e5522d00_Data> _1e553e558_evalAnonFn(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e47852a5_FnDecl>);
inline jule::Ptr<_1e5522d00_Data> _1e553e866_evalBinop(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e477b71e_BinopExpr>);
inline jule::Ptr<_1e5522d00_Data> _1e553eb74_evalExprKind(jule::Ptr<_1e552486d_Eval>, jule::Any);
inline jule::Ptr<_1e5522d00_Data> _1e553ee82_eval(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e4777d47_Expr>);
inline jule::Ptr<_1e5522d00_Data> _1e5540290_evalExpr(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_1e4777d47_Expr>);
struct _1e552486d_Eval {
	jule::Ptr<_1e54ac295_Sema> _field_s;
	jule::Trait<_1e5569c04_Lookup> _field_lookup;
	jule::Ptr<_1e554dc82_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1e54ca291_Var> _field_owner;
	jule::Ptr<_1e4790205_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	_1e552486d_Eval(void) = default;

	inline bool operator==(_1e552486d_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1e552486d_Eval _other) { return !this->operator==(_other); }


};
inline _1e5540713_unaryEval static__1e5540bb9_new(jule::Ptr<_1e552486d_Eval>);
inline void _1e5540d95_minus(_1e5540713_unaryEval*);
inline void _1e5541071_plus(_1e5540713_unaryEval*);
inline void _1e554124c_caret(_1e5540713_unaryEval*);
inline void _1e5541428_excl(_1e5540713_unaryEval*);
inline void _1e5541604_star(_1e5540713_unaryEval*);
inline void _1e55417d0_amper(_1e5540713_unaryEval*);
inline void _1e55419ab_typeDecl(_1e5540713_unaryEval*);
inline void _1e5541b87_evalData(_1e5540713_unaryEval*);
inline jule::Ptr<_1e5522d00_Data> _1e5541e62_eval(_1e5540713_unaryEval*, jule::Ptr<_1e477a212_UnaryExpr>);
struct _1e5540713_unaryEval {
	jule::Ptr<_1e552486d_Eval> _field_e;
	jule::Ptr<_1e5522d00_Data> _field_d;
	jule::Ptr<_1e477a212_UnaryExpr> _field_u;
	

	_1e5540713_unaryEval(void) = default;

	inline bool operator==(_1e5540713_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1e5540713_unaryEval _other) { return !this->operator==(_other); }


};
inline _1e55424a1_binaryEval static__1e5542a78_newPlain(jule::Ptr<_1e552486d_Eval>);
inline _1e55424a1_binaryEval static__1e5542db9_new(jule::Ptr<_1e552486d_Eval>, jule::Ptr<_20d155596_Token>);
inline jule::Bool _1e554312d_checkTypeCompatibility(_1e55424a1_binaryEval*);
inline jule::Bool _1e55433c5_checkStructCommonOperatorCompatibility(_1e55424a1_binaryEval*);
inline jule::Ptr<_1e5522d00_Data> _1e554366c_evalNil(_1e55424a1_binaryEval*);
inline jule::Ptr<_1e5522d00_Data> _1e55438d1_evalEnum(_1e55424a1_binaryEval*);
inline jule::Ptr<_1e5522d00_Data> _1e5543b45_evalTypeEnum(_1e55424a1_binaryEval*);
inline jule::Ptr<_1e5522d00_Data> _1e5543da9_evalSptr(_1e55424a1_binaryEval*);
inline jule::Ptr<_1e5522d00_Data> _1e554411d_evalPtr(_1e55424a1_binaryEval*);
inline jule::Ptr<_1e5522d00_Data> _1e5544382_evalArr(_1e55424a1_binaryEval*);
inline jule::Ptr<_1e5522d00_Data> _1e55445e6_evalSlc(_1e55424a1_binaryEval*);
inline jule::Ptr<_1e5522d00_Data> _1e554485a_evalFn(_1e55424a1_binaryEval*);
inline jule::Ptr<_1e5522d00_Data> _1e5544abe_evalStruct(_1e55424a1_binaryEval*);
inline jule::Ptr<_1e5522d00_Data> _1e5544d33_evalTrait(_1e55424a1_binaryEval*);
inline jule::Ptr<_1e5522d00_Data> _1e5545097_evalAny(_1e55424a1_binaryEval*);
inline jule::Ptr<_1e5522d00_Data> _1e554530b_evalBool(_1e55424a1_binaryEval*);
inline jule::Ptr<_1e5522d00_Data> _1e5545570_evalStr(_1e55424a1_binaryEval*);
inline void _1e554574b_setTypeToGreater(_1e55424a1_binaryEval*);
inline void _1e554598d_checkModData(_1e55424a1_binaryEval*, jule::Ptr<_1e5522d00_Data>*);
inline void _1e5545b69_mod(_1e55424a1_binaryEval*);
inline jule::Bool _1e5546021_numbersAreCompatibile(_1e55424a1_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1e5522d00_Data> _1e5546285_evalFloat(_1e55424a1_binaryEval*);
inline jule::Ptr<_1e5522d00_Data> _1e55464e9_evalInt(_1e55424a1_binaryEval*);
inline jule::Ptr<_1e5522d00_Data> _1e554675d_evalPrim(_1e55424a1_binaryEval*);
inline void _1e5546939_checkSpecialCases(_1e55424a1_binaryEval*);
inline jule::Ptr<_1e5522d00_Data> _1e5546b9d_evalOp(_1e55424a1_binaryEval*);
inline void _1e5546e23_evalConst(_1e55424a1_binaryEval*, jule::Ptr<_1e5522d00_Data>*);
inline void _1e5547198_checkData(_1e55424a1_binaryEval*, jule::Ptr<_1e5522d00_Data>*);
inline void _1e5547374_checkDatas(_1e55424a1_binaryEval*);
inline void _1e55475e9_setModel(_1e55424a1_binaryEval*, jule::Ptr<_1e5522d00_Data>*);
inline void _1e554786e_postEval(_1e55424a1_binaryEval*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e5547c26_solveExplicit(_1e55424a1_binaryEval*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e5548034_eval(_1e55424a1_binaryEval*, jule::Ptr<_1e477b71e_BinopExpr>*);
struct _1e55424a1_binaryEval {
	jule::Ptr<_1e552486d_Eval> _field_e;
	jule::Ptr<_1e5522d00_Data> _field_l;
	jule::Ptr<_1e5522d00_Data> _field_r;
	jule::Ptr<_20d155596_Token> _field_op;
	

	_1e55424a1_binaryEval(void) = default;

	inline bool operator==(_1e55424a1_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e55424a1_binaryEval _other) { return !this->operator==(_other); }


};
struct _1e554c555_InsGeneric {
	jule::Ptr<_1e554dc82_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1e554dc82_TypeKind>> _field_Constraint;
	

	_1e554c555_InsGeneric(void) = default;


};
struct _1e554d08e_TypeAlias {
	jule::Ptr<_1e47837ae_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e5553160_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>> _field_Generics;
	

	_1e554d08e_TypeAlias(void) = default;


};
inline jule::Str _1e554e17d_Str(_1e554dc82_TypeKind*);
inline jule::Bool _1e554e48b_Equal(jule::Ptr<_1e554dc82_TypeKind>, jule::Ptr<_1e554dc82_TypeKind>);
inline jule::Bool _1e554e953_CppLinked(_1e554dc82_TypeKind*);
inline jule::Bool _1e554ebb7_IsNil(_1e554dc82_TypeKind*);
inline jule::Bool _1e554ee2b_Void(_1e554dc82_TypeKind*);
inline jule::Bool _1e5550190_Comparable(_1e554dc82_TypeKind*);
inline jule::Bool _1e5550404_Mutable(_1e554dc82_TypeKind*);
inline jule::Bool _1e5550668_NilCompatible(_1e554dc82_TypeKind*);
inline jule::Bool _1e55508cc_PerformsRC(_1e554dc82_TypeKind*);
inline jule::Bool _1e5550b41_SupportsCloning(_1e554dc82_TypeKind*);
inline jule::Bool _1e5550da5_Variadicable(_1e554dc82_TypeKind*);
inline jule::Ptr<_1e55539ce_Prim> _1e5551119_Prim(_1e554dc82_TypeKind*);
inline jule::Ptr<_1e5557263_Sptr> _1e555137d_Sptr(_1e554dc82_TypeKind*);
inline jule::Ptr<_1e555a7c7_Ptr> _1e55515e2_Ptr(_1e554dc82_TypeKind*);
inline jule::Ptr<_1e547501b_Enum> _1e5551856_Enum(_1e554dc82_TypeKind*);
inline jule::Ptr<_1e5476616_TypeEnum> _1e5551aba_TypeEnum(_1e554dc82_TypeKind*);
inline jule::Ptr<_1e5559d6a_Arr> _1e5551d2e_Arr(_1e554dc82_TypeKind*);
inline jule::Ptr<_1e5557bc0_Slc> _1e5552093_Slc(_1e554dc82_TypeKind*);
inline jule::Ptr<_1e5463b75_FnIns> _1e5552307_Fn(_1e554dc82_TypeKind*);
inline jule::Ptr<_1e47903e2_StructIns> _1e555256b_Struct(_1e554dc82_TypeKind*);
inline jule::Ptr<_1e5472dc6_Trait> _1e55527d0_Trait(_1e554dc82_TypeKind*);
inline jule::Ptr<_1e5559276_Map> _1e5552a44_Map(_1e554dc82_TypeKind*);
inline jule::Ptr<_1e555874d_Tuple> _1e5552ca8_Tup(_1e554dc82_TypeKind*);
struct _1e554dc82_TypeKind {
	jule::Str _field_CppIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1e554d853_Kind> _field_Kind;
	

	_1e554dc82_TypeKind(void) = default;

	inline bool operator==(_1e554dc82_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e554dc82_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5553517_checked(_1e5553160_TypeSymbol*);
inline void _1e55536e3_removeKind(_1e5553160_TypeSymbol*);
struct _1e5553160_TypeSymbol {
	jule::Ptr<_1e4773826_TypeDecl> _field_Decl;
	jule::Ptr<_1e554dc82_TypeKind> _field_Kind;
	

	_1e5553160_TypeSymbol(void) = default;

	inline bool operator==(_1e5553160_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e5553160_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1e5553d42_Str(_1e55539ce_Prim*);
inline jule::Bool _1e5554150_Equal(jule::Ptr<_1e55539ce_Prim>, jule::Ptr<_1e554dc82_TypeKind>);
inline jule::Bool _1e55545c3_IsConstraint(_1e55539ce_Prim*);
inline jule::Bool _1e5554837_IsI8(_1e55539ce_Prim*);
inline jule::Bool _1e5554a9b_IsI16(_1e55539ce_Prim*);
inline jule::Bool _1e5554d10_IsI32(_1e55539ce_Prim*);
inline jule::Bool _1e5555074_IsI64(_1e55539ce_Prim*);
inline jule::Bool _1e55552d8_IsU8(_1e55539ce_Prim*);
inline jule::Bool _1e555554c_IsU16(_1e55539ce_Prim*);
inline jule::Bool _1e55557b1_IsU32(_1e55539ce_Prim*);
inline jule::Bool _1e5555a25_IsU64(_1e55539ce_Prim*);
inline jule::Bool _1e5555c89_IsF32(_1e55539ce_Prim*);
inline jule::Bool _1e5555eed_IsF64(_1e55539ce_Prim*);
inline jule::Bool _1e5556262_IsInt(_1e55539ce_Prim*);
inline jule::Bool _1e55564c6_IsUint(_1e55539ce_Prim*);
inline jule::Bool _1e555673a_IsUintptr(_1e55539ce_Prim*);
inline jule::Bool _1e555699e_IsBool(_1e55539ce_Prim*);
inline jule::Bool _1e5556c13_IsStr(_1e55539ce_Prim*);
inline jule::Bool _1e5556e77_IsAny(_1e55539ce_Prim*);
struct _1e55539ce_Prim {
	jule::Str _field_Kind;
	

	_1e55539ce_Prim(void) = default;

	inline bool operator==(_1e55539ce_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e55539ce_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1e55575c6_Str(_1e5557263_Sptr*);
inline jule::Bool _1e55578d4_Equal(jule::Ptr<_1e5557263_Sptr>, jule::Ptr<_1e554dc82_TypeKind>);
struct _1e5557263_Sptr {
	jule::Ptr<_1e554dc82_TypeKind> _field_Elem;
	

	_1e5557263_Sptr(void) = default;

	inline bool operator==(_1e5557263_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e5557263_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1e55581cb_Str(_1e5557bc0_Slc*);
inline jule::Bool _1e55584d9_Equal(jule::Ptr<_1e5557bc0_Slc>, jule::Ptr<_1e554dc82_TypeKind>);
struct _1e5557bc0_Slc {
	jule::Ptr<_1e554dc82_TypeKind> _field_Elem;
	

	_1e5557bc0_Slc(void) = default;

	inline bool operator==(_1e5557bc0_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e5557bc0_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1e5558ab1_Str(_1e555874d_Tuple*);
inline jule::Bool _1e5558dbe_Equal(jule::Ptr<_1e555874d_Tuple>, jule::Ptr<_1e554dc82_TypeKind>);
struct _1e555874d_Tuple {
	jule::Slice<jule::Ptr<_1e554dc82_TypeKind>> _field_Types;
	

	_1e555874d_Tuple(void) = default;


};
inline jule::Str _1e55595d9_Str(_1e5559276_Map*);
inline jule::Bool _1e55598e7_Equal(jule::Ptr<_1e5559276_Map>, jule::Ptr<_1e554dc82_TypeKind>);
struct _1e5559276_Map {
	jule::Ptr<_1e554dc82_TypeKind> _field_Key;
	jule::Ptr<_1e554dc82_TypeKind> _field_Val;
	

	_1e5559276_Map(void) = default;

	inline bool operator==(_1e5559276_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1e5559276_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1e555a1cd_Str(_1e5559d6a_Arr*);
inline jule::Bool _1e555a4db_Equal(jule::Ptr<_1e5559d6a_Arr>, jule::Ptr<_1e554dc82_TypeKind>);
struct _1e5559d6a_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1e554dc82_TypeKind> _field_Elem;
	

	_1e5559d6a_Arr(void) = default;

	inline bool operator==(_1e5559d6a_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e5559d6a_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1e555ab3a_Str(_1e555a7c7_Ptr*);
inline jule::Bool _1e555ae48_Equal(jule::Ptr<_1e555a7c7_Ptr>, jule::Ptr<_1e554dc82_TypeKind>);
inline jule::Bool _1e555b29a_IsUnsafe(_1e555a7c7_Ptr*);
struct _1e555a7c7_Ptr {
	jule::Ptr<_1e554dc82_TypeKind> _field_Elem;
	

	_1e555a7c7_Ptr(void) = default;

	inline bool operator==(_1e555a7c7_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e555a7c7_Ptr _other) { return !this->operator==(_other); }


};
struct _1e555b71d_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1e555b71d_referencer(void) = default;

	inline bool operator==(_1e555b71d_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1e555b71d_referencer _other) { return !this->operator==(_other); }


};
inline void _1e555cd07_pushErr(_1e555c5ed_typeChecker*, jule::Ptr<_20d155596_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e555ced3_allowBuiltin(_1e555c5ed_typeChecker*);
inline void _1e555d1ae_disallowBuiltin(_1e555c5ed_typeChecker*);
inline jule::Ptr<_1e55539ce_Prim> _1e555d4bc_buildPrim(_1e555c5ed_typeChecker*, jule::Ptr<_1e4773ddc_IdentTypeDecl>*);
inline void _1e8e96d36_pushReference(_1e555c5ed_typeChecker*, jule::Ptr<_1e47903e2_StructIns>*);
inline void _1e8e99bb3_pushReference(_1e555c5ed_typeChecker*, jule::Ptr<_1e5472dc6_Trait>*);
inline void _1e555d9b7_pushReferenceByKind(_1e555c5ed_typeChecker*, jule::Ptr<_1e554dc82_TypeKind>*);
inline void _1e555dd80_pushCycleError(_1e555c5ed_typeChecker*, jule::Any, jule::Any, jule::Str*);
inline jule::Bool _1e555e237_checkCrossCycle(_1e555c5ed_typeChecker*, jule::Any, jule::Str*);
inline jule::Bool _1e555e5de_checkIllegalCycles(_1e555c5ed_typeChecker*, jule::Ptr<_1e4773ddc_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1e554d853_Kind> _1e555e996_fromTypeAlias(_1e555c5ed_typeChecker*, jule::Ptr<_1e4773ddc_IdentTypeDecl>*, jule::Ptr<_1e554d08e_TypeAlias>*);
inline jule::Ptr<_1e547501b_Enum> _1e555ed4d_fromEnum(_1e555c5ed_typeChecker*, jule::Ptr<_1e4773ddc_IdentTypeDecl>*, jule::Ptr<_1e547501b_Enum>*);
inline jule::Ptr<_1e5476616_TypeEnum> _1e5560205_fromTypeEnum(_1e555c5ed_typeChecker*, jule::Ptr<_1e4773ddc_IdentTypeDecl>*, jule::Ptr<_1e5476616_TypeEnum>*);
inline jule::Ptr<_1e5472dc6_Trait> _1e55605ac_fromTrait(_1e555c5ed_typeChecker*, jule::Ptr<_1e4773ddc_IdentTypeDecl>*, jule::Ptr<_1e5472dc6_Trait>*);
inline jule::Bool _1e5560964_checkStructIns(_1e555c5ed_typeChecker*, jule::Ptr<_1e47903e2_StructIns>*, jule::Ptr<_20d155596_Token>*);
inline void _1e5560c0b_appendUsedStructReference(_1e555c5ed_typeChecker*, jule::Ptr<_1e4790018_Struct>*);
inline jule::Ptr<_1e47903e2_StructIns> _1e55610c4_buildStructInstance(_1e555c5ed_typeChecker*, jule::Ptr<_1e4773ddc_IdentTypeDecl>*, jule::Ptr<_1e4790018_Struct>*);
inline jule::Ptr<_1e47903e2_StructIns> _1e556147b_fromStruct(_1e555c5ed_typeChecker*, jule::Ptr<_1e4773ddc_IdentTypeDecl>*, jule::Ptr<_1e4790018_Struct>*);
inline jule::Trait<_1e554d853_Kind> _1e5561789_getDef(_1e555c5ed_typeChecker*, jule::Ptr<_1e4773ddc_IdentTypeDecl>*);
inline jule::Trait<_1e554d853_Kind> _1e5561a97_buildIdent(_1e555c5ed_typeChecker*, jule::Ptr<_1e4773ddc_IdentTypeDecl>);
inline jule::Trait<_1e554d853_Kind> _1e5561da5_buildSubIdent(_1e555c5ed_typeChecker*, jule::Ptr<_1e477453b_SubIdentTypeDecl>);
inline jule::Ptr<_1e5557263_Sptr> _1e55621b3_buildSptrFromType(_1e555c5ed_typeChecker*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Ptr<_1e5557263_Sptr> _1e55624c1_buildSptr(_1e555c5ed_typeChecker*, jule::Ptr<_1e4774bce_SptrTypeDecl>);
inline jule::Ptr<_1e555a7c7_Ptr> _1e55627ce_buildPtrFromType(_1e555c5ed_typeChecker*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Ptr<_1e555a7c7_Ptr> _1e5562adc_buildPtr(_1e555c5ed_typeChecker*, jule::Ptr<_1e47756a2_PtrTypeDecl>);
inline jule::Ptr<_1e5557bc0_Slc> _1e5562dea_buildSlc(_1e555c5ed_typeChecker*, jule::Ptr<_1e47750ca_SlcTypeDecl>);
inline jule::Ptr<_1e5559d6a_Arr> _1e5563208_buildArr(_1e555c5ed_typeChecker*, jule::Ptr<_1e4775d34_ArrTypeDecl>);
inline jule::Ptr<_1e5559276_Map> _1e5563516_buildMap(_1e555c5ed_typeChecker*, jule::Ptr<_1e4776582_MapTypeDecl>);
inline jule::Ptr<_1e555874d_Tuple> _1e5563824_buildTuple(_1e555c5ed_typeChecker*, jule::Ptr<_1e47753b6_TupleTypeDecl>);
inline jule::Bool _1e5563b32_checkFnTypes(_1e555c5ed_typeChecker*, jule::Ptr<_1e5463b75_FnIns>*);
inline jule::Ptr<_1e5463b75_FnIns> _1e5563e40_buildFn(_1e555c5ed_typeChecker*, jule::Ptr<_1e47852a5_FnDecl>);
inline jule::Trait<_1e554d853_Kind> _1e556424d_buildByNamespace(_1e555c5ed_typeChecker*, jule::Ptr<_1e47748e3_NamespaceTypeDecl>);
inline jule::Ptr<_1e554dc82_TypeKind> _1e556455b_build(_1e555c5ed_typeChecker*, jule::Any*);
inline jule::Ptr<_1e554dc82_TypeKind> _1e5564869_checkDecl(_1e555c5ed_typeChecker*, jule::Ptr<_1e4773826_TypeDecl>*);
inline void _1e5564ade_check(_1e555c5ed_typeChecker*, jule::Ptr<_1e5553160_TypeSymbol>*);
struct _1e555c5ed_typeChecker {
	jule::Ptr<_1e54ac295_Sema> _field_s;
	jule::Trait<_1e5569c04_Lookup> _field_rootLookup;
	jule::Trait<_1e5569c04_Lookup> _field_lookup;
	jule::Ptr<_1e555b71d_referencer> _field_referencer;
	jule::Ptr<_1e5466ae0_ReferenceStack> _field_refers;
	jule::Ptr<_20d155596_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1e554dc82_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>> _field_useGenerics;
	jule::Bool _field_notPlain = false;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1e554d08e_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	

	_1e555c5ed_typeChecker(void) = default;


};
inline jule::Bool static__1e556524e_prim(jule::Str*, jule::Ptr<_1e55539ce_Prim>);
inline jule::Bool static__1e5565590_exist(jule::Str*, jule::Ptr<_1e554dc82_TypeKind>*);
struct _1e5564d0e_identTypeLookup {
	

	_1e5564d0e_identTypeLookup(void) = default;

	inline bool operator==(_1e5564d0e_identTypeLookup _other) { return true; }

	inline bool operator!=(_1e5564d0e_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1e68db838_FileInfo {
	jule::Ptr<_1e473e391_Ast> _field_Ast;
	jule::Slice<_24305e4ae_Log> _field_Errors;
	

	_1e68db838_FileInfo(void) = default;


};
struct _1e69378b7_stmt {
	jule::Slice<jule::Ptr<_20d155596_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	

	_1e69378b7_stmt(void) = default;


};
inline void _1e6938874_stop(_1e69381e2_scopeParser*);
inline jule::Bool _1e6938ad8_stopped(_1e69381e2_scopeParser*);
inline jule::Bool _1e6938d4c_finished(_1e69381e2_scopeParser*);
inline jule::Bool _1e69390b1_isLastSt(_1e69381e2_scopeParser*);
inline void _1e69393d0_pushErr(_1e69381e2_scopeParser*, jule::Ptr<_20d155596_Token>, jule::Str);
inline void _1e69396ee_pushSuggestion(_1e69381e2_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1e6939974_insertAsNext(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e69378b7_stmt> _1e6939bd8_next(_1e69381e2_scopeParser*);
inline jule::Ptr<_1e47837ae_ScopeTree> _1e693a090_buildScope(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e4786284_VarDecl> _1e693a39d_buildVarSt(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e478663b_RetSt> _1e693a6ab_buildRetSt(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e4786c9b_Iter> _1e693a9b9_buildWhileNextIter(_1e69381e2_scopeParser*, jule::Ptr<_1e69378b7_stmt>*);
inline jule::Ptr<_1e4787571_WhileKind> _1e693acc7_buildWhileIterKind(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _1e693b0d5_getRangeKindKeysTokens(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e4786284_VarDecl> _1e693b3e3_buildRangeKindKey(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Slice<jule::Ptr<_1e4786284_VarDecl>> _1e693b701_buildRangeKindKeys(_1e69381e2_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>>*);
inline void _1e693ba42_setupRangeKindKeysPlain(_1e69381e2_scopeParser*, jule::Ptr<_1e4787e12_RangeKind>*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline void _1e693bd94_setupRangeKindKeysExplicit(_1e69381e2_scopeParser*, jule::Ptr<_1e4787e12_RangeKind>*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline void _1e693c1c4_setupRangeKindKeys(_1e69381e2_scopeParser*, jule::Ptr<_1e4787e12_RangeKind>*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e4787e12_RangeKind> _1e693c625_buildRangeIterKind(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Ptr<_20d155596_Token>*);
inline jule::Any _1e693c9cc_buildCommonIterKind(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Ptr<_20d155596_Token>*);
inline jule::Ptr<_1e4786c9b_Iter> _1e693ccda_buildCommonIter(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e4786c9b_Iter> _1e693d0e8_buildIterSt(_1e69381e2_scopeParser*, jule::Ptr<_1e69378b7_stmt>*);
inline jule::Ptr<_1e47882b9_BreakSt> _1e693d406_buildBreakSt(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e4788671_ContSt> _1e693d714_buildContSt(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e4788ae4_If> _1e693da22_buildIf(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e4788e9b_Else> _1e693dd30_buildElse(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e478941e_Conditional> _1e693e13d_buildIfElseChain(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e4777d47_Expr> _1e693e44b_buildCoCallSt(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e478137d_GotoSt> _1e693e759_buildGotoSt(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e4781669_FallSt> _1e693ea67_buildFallSt(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e4789ae5_TypeAliasDecl> _1e693ed75_buildTypeAliasSt(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline void _1e69402d7_pushCaseExpr(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>, jule::Ptr<_20d155596_Token>, jule::Bool, jule::Slice<jule::Ptr<_1e4777d47_Expr>>*);
inline jule::Slice<jule::Ptr<_1e4777d47_Expr>> _1e6940738_buildCaseExprs(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Ptr<_20d155596_Token>*, jule::Bool);
inline jule::Ptr<_1e47837ae_ScopeTree> _1e6940a46_buildCaseScope(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline __jule_tuple_x_1e478a068_Case__jule_tuple_bool _1e6940ded_buildCase(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Bool);
inline __jule_tuple_sx_1e478a068_Case__jule_tuple_x_1e4788e9b_Else _1e69412a5_buildCases(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>, jule::Bool);
inline jule::Ptr<_1e478a73e_MatchCase> _1e69415b3_buildMatchCase(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e47837ae_ScopeTree> _1e69418c1_buildScopeSt(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e4780ec6_LabelSt> _1e6941bce_buildLabelSt(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline __jule_tuple__1e4782e73_StmtData__jule_tuple_bool _1e6941edc_buildIdSt(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e695100c_assignInfo> _1e69422ea_buildAssignInfo(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e4781c74_AssignLeft> _1e6942608_buildAssignL(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Slice<jule::Ptr<_1e4781c74_AssignLeft>> _1e6942916_buildAssignLs(_1e69381e2_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>>*);
inline __jule_tuple_x_1e47822b3_AssignSt__jule_tuple_bool _1e6942c24_buildPlainAssign(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline __jule_tuple_x_1e47822b3_AssignSt__jule_tuple_bool _1e6943032_buildDeclAssign(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline __jule_tuple_x_1e47822b3_AssignSt__jule_tuple_bool _1e6943340_buildAssignSt(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e47786d8_UseExpr> _1e694364d_buildUseExpr(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Any _1e694395b_buildSt(_1e69381e2_scopeParser*, jule::Ptr<_1e69378b7_stmt>*);
inline void _1e6943c7a_build(_1e69381e2_scopeParser*, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Ptr<_1e47837ae_ScopeTree>*);
struct _1e69381e2_scopeParser {
	jule::Ptr<_1e695483a_parser> _field_p;
	jule::Ptr<_1e47837ae_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1e69378b7_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	

	_1e69381e2_scopeParser(void) = default;


};
inline void _1e6944e9b_pushErr(_1e6944709_exprBuilder*, jule::Ptr<_20d155596_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e69452ba_pushSuggestion(_1e6944709_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e47789c4_TupleExpr> _1e69455c8_buildTuple(_1e6944709_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>>*);
inline jule::Ptr<_1e4778d7b_LitExpr> _1e69458d6_buildLit(_1e6944709_exprBuilder*, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e4773826_TypeDecl> _1e6945be4_buildPrimitiveType(_1e6944709_exprBuilder*, jule::Ptr<_20d155596_Token>*);
inline jule::Any _1e6946002_buildSingle(_1e6944709_exprBuilder*, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e4779a08_IdentExpr> _1e6946310_buildCppLinkedIdent(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e477a212_UnaryExpr> _1e694661d_buildUnary(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e477b29b_SubIdentExpr> _1e694692b_buildObjSubIdent(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e477ad28_NsSelectionExpr> _1e6946c39_buildNsSubIdent(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e4773826_TypeDecl> _1e6947047_buildType(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Any _1e6947355_buildSubIdent(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e477a5b9_VariadicExpr> _1e6947663_buildVariadic(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Any _1e6947971_buildOpRight(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e4778133_RangeExpr> _1e6947ca1_buildBetweenParentheses(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e477a971_CastExpr> _1e69480c0_tryBuildCast(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline void _1e6948488_pushArg(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_1e4777d47_Expr>>*, jule::Slice<jule::Ptr<_20d155596_Token>>, jule::Ptr<_20d155596_Token>);
inline jule::Slice<jule::Ptr<_1e4777d47_Expr>> _1e6948796_buildArgs(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Slice<jule::Ptr<_1e4773826_TypeDecl>> _1e6948aa4_buildCallGenerics(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e477bd29_FnCallExpr> _1e6949005_buildFnCall(_1e6944709_exprBuilder*, jule::Ptr<_20d155596_Token>*, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Any _1e6949313_buildParenthesesRange(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e4779585_UnsafeExpr> _1e6949621_buildUnsafeExpr(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e47852a5_FnDecl> _1e694992e_buildAnonFn(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Any _1e6949c3c_buildUnsafe(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline void _1e694a105_pushRangeLitPart(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>, jule::Ptr<_20d155596_Token>, jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _1e694a435_getBraceRangeLitExprParts(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e477c7a8_FieldExprPair> _1e694a754_buildFieldExprPair(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e4777d47_Expr> _1e694aa62_buildStructLitExpr(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Slice<jule::Ptr<_1e4777d47_Expr>> _1e694ad70_buildStructLitExprs(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e477d006_StructLit> _1e694b1a0_buildTypedStructLiteral(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e4777d47_Expr> _1e694b4be_buildBraceLitPart(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e477d479_BraceLit> _1e694b7cc_buildBraceLit(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Any _1e694bada_buildBraceRange(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _1e694bde8_getEnumerableParts(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e477e436_SliceExpr> _1e694c206_buildSlice(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e477eca5_IndexingExpr> _1e694c657_buildIndexing(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>, jule::Slice<jule::Ptr<_20d155596_Token>>, jule::Ptr<_20d155596_Token>);
inline jule::Ptr<_1e47803b0_SlicingExpr> _1e694cbeb_buildSlicing(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Ptr<_20d155596_Token>*, jule::Ptr<_20d155596_Token>);
inline jule::Any _1e694d009_buildBracketRange(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Any _1e694d317_buildData(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Any _1e694d6be_buildBinop(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::I64);
inline jule::Any _1e694d9cc_build(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Any _1e694dcda_buildKind(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e4777d47_Expr> _1e694e0e8_buildFromTokens(_1e6944709_exprBuilder*, jule::Slice<jule::Ptr<_20d155596_Token>>);
struct _1e6944709_exprBuilder {
	jule::Ptr<_1e695483a_parser> _field_p;
	

	_1e6944709_exprBuilder(void) = default;

	inline bool operator==(_1e6944709_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1e6944709_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1e695100c_assignInfo {
	jule::Slice<jule::Ptr<_20d155596_Token>> _field_l;
	jule::Slice<jule::Ptr<_20d155596_Token>> _field_r;
	jule::Ptr<_20d155596_Token> _field_setter;
	jule::Bool _field_ok = false;
	

	_1e695100c_assignInfo(void) = default;


};
inline void _1e6954b6a_stop(_1e695483a_parser*);
inline jule::Bool _1e6954dce_stopped(_1e695483a_parser*);
inline void _1e6955297_pushErr(_1e695483a_parser*, jule::Ptr<_20d155596_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e69555b6_pushSuggestion(_1e695483a_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e4777d47_Expr> _1e69558c4_buildExpr(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e474057e_Directive> _1e6955bd2_buildDirective(_1e695483a_parser*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline void _1e6955e57_pushDirective(_1e695483a_parser*, jule::Ptr<_1e474057e_Directive>);
inline jule::Ptr<_1e47837ae_ScopeTree> _1e695630e_buildScope(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Ptr<_20d155596_Token>);
inline __jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool _1e6956760__buildType(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool _1e6956bb1_buildType(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1e4789ae5_TypeAliasDecl> _1e6956ebe_buildTypeAliasDecl(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline void _1e69572dd_buildVarTypeAndExpr(jule::Ptr<_1e695483a_parser>, jule::Ptr<_1e4786284_VarDecl>*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline void _1e695760c_buildVarCommon(jule::Ptr<_1e695483a_parser>, jule::Ptr<_1e4786284_VarDecl>*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline void _1e69579c5_buildVarBegin(_1e695483a_parser*, jule::Ptr<_1e4786284_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e4786284_VarDecl> _1e6957cd3_buildVar(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e4780b1e_GenericDecl> _1e69580e1_buildGeneric(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>> _1e6958498_buildGenerics(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Ptr<_20d155596_Token>*);
inline jule::Ptr<_1e4783e85_ParamDecl> _1e69587a6_buildSelfParam(_1e695483a_parser*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline void _1e6958b6e_paramTypeBegin(_1e695483a_parser*, jule::Ptr<_1e4783e85_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline void _1e6958e8d_buildParamType(jule::Ptr<_1e695483a_parser>, jule::Ptr<_1e4783e85_ParamDecl>*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline void _1e69592ac_buildParamBody(jule::Ptr<_1e695483a_parser>, jule::Ptr<_1e4783e85_ParamDecl>*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e4783e85_ParamDecl> _1e69595ba_buildParam(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline void _1e6959840_checkParams(_1e695483a_parser*, jule::Slice<jule::Ptr<_1e4783e85_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1e4783e85_ParamDecl>> _1e6959be7_buildParams(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Bool);
inline __jule_tuple_x_1e4776939_RetTypeDecl__jule_tuple_bool _1e695a09e_buildMultiRetType(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::I64*);
inline __jule_tuple_x_1e4776939_RetTypeDecl__jule_tuple_bool _1e695a456_buildRetType(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::I64*);
inline jule::Ptr<_1e47852a5_FnDecl> _1e695a8a7_buildFnPrototype(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1e47852a5_FnDecl> _1e695ad08_buildFn(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_20d155596_Token>> _1e695b116_getUseDeclSelectors(_1e695483a_parser*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline void _1e695b435_buildCppUseDecl(_1e695483a_parser*, jule::Ptr<_1e478aed1_UseDecl>*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline void _1e695b754_buildStdUseDecl(_1e695483a_parser*, jule::Ptr<_1e478aed1_UseDecl>*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline void _1e695ba73_buildIdentUseDecl(_1e695483a_parser*, jule::Ptr<_1e478aed1_UseDecl>*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline void _1e695bd92_parseUseDecl(_1e695483a_parser*, jule::Ptr<_1e478aed1_UseDecl>*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e478aed1_UseDecl> _1e695c249_buildUseDecl(_1e695483a_parser*, jule::Slice<jule::Ptr<_20d155596_Token>>, jule::Bool);
inline jule::Ptr<_1e4773826_TypeDecl> _1e695c601_buildTypeEnumItemKind(jule::Ptr<_1e695483a_parser>, jule::I64*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Slice<jule::Ptr<_1e478c983_TypeEnumItemDecl>> _1e695c90e_buildTypeEnumItems(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e478d08d_TypeEnumDecl> _1e695cc1c_buildTypeEnumDecl(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e4777d47_Expr> _1e695d0c4_buildEnumItemExpr(jule::Ptr<_1e695483a_parser>, jule::I64*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Slice<jule::Ptr<_1e478b454_EnumItemDecl>> _1e695d3d2_buildEnumItems(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e478be7c_EnumDecl> _1e695d6e0_buildEnumDecl(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Any _1e695d9ed_buildNodeEnumDecl(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e478d28b_FieldDecl> _1e695dd0b_buildField(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Slice<jule::Ptr<_1e478d28b_FieldDecl>> _1e695e119_buildStructDeclFields(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e478da3e_StructDecl> _1e695e427_buildStructDecl(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline void _1e695e69c_checkMethodReceiver(_1e695483a_parser*, jule::Ptr<_1e47852a5_FnDecl>*);
inline jule::Slice<jule::Ptr<_1e47852a5_FnDecl>> _1e695e9aa_buildTraitMethods(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e478e149_TraitDecl> _1e695ecb8_buildTraitDecl(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e47852a5_FnDecl> _1e69600c6_buildCppLinkFn(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e4786284_VarDecl> _1e69603d4_buildCppLinkVar(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e478da3e_StructDecl> _1e69606e2_buildCppLinkStruct(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e4789ae5_TypeAliasDecl> _1e6960a00_buildCppLinkTypeAlias(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e478aed1_UseDecl> _1e6960d0d_buildCppLinkUse(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Any _1e696111b_buildCppLink(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e47852a5_FnDecl> _1e6961429_getMethod(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline void _1e6961748_parseImplBody(jule::Ptr<_1e695483a_parser>, jule::Ptr<_1e478e754_Impl>*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e478e754_Impl> _1e6961a56_buildImpl(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Any _1e6961d64_buildNodeData(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline void _1e69620d9_applyFnMeta(_1e695483a_parser*, jule::Ptr<_1e47852a5_FnDecl>*);
inline void _1e696235e_applyMeta(_1e695483a_parser*, _1e4740183_Node*);
inline void _1e69625d4_pushUseDecl(jule::Ptr<_1e695483a_parser>, jule::Ptr<_1e478aed1_UseDecl>*);
inline jule::Bool _1e69628e2_pushMetaNodes(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline _1e4740183_Node _1e6962c00_parseNode(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline void _1e6962e75_appendNode(jule::Ptr<_1e695483a_parser>, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline void _1e69633d7_removeRange(_1e695483a_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Slice<jule::I64>*);
inline void _1e69637a0_pushWrongOrderCloseErr(_1e695483a_parser*, jule::Ptr<_20d155596_Token>*, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Slice<jule::I64>*);
inline void _1e6963c12_pushRangeClose(_1e695483a_parser*, jule::Ptr<_20d155596_Token>, jule::Str, jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Slice<jule::I64>*);
inline void _1e6963e87_checkRanges(_1e695483a_parser*, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline void _1e696420c_parse(jule::Ptr<_1e695483a_parser>, jule::Ptr<_20d15a931_File>*);
struct _1e695483a_parser {
	jule::Ptr<_1e473e391_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1e474057e_Directive>> _field_directives;
	jule::Slice<_24305e4ae_Log> _field_errors;
	

	_1e695483a_parser(void) = default;


};
inline void _1e6965b26_pushErr(_1e696554e_typeBuilder*, jule::Ptr<_20d155596_Token>, jule::Str);
inline void _1e6965e45_pushSuggestion(_1e696554e_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e4773826_TypeDecl> _1e69661a9_buildPrim(_1e696554e_typeBuilder*);
inline jule::Ptr<_1e4773826_TypeDecl> _1e696641d_buildNamespace(_1e696554e_typeBuilder*);
inline jule::Slice<jule::Ptr<_1e4773826_TypeDecl>> _1e6966682_buildGenerics(_1e696554e_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _1e69668e6_identGenerics(_1e696554e_typeBuilder*);
inline jule::Ptr<_1e4773826_TypeDecl> _1e6966b5a_buildIdent(_1e696554e_typeBuilder*);
inline jule::Ptr<_1e4773826_TypeDecl> _1e6966dbe_buildCppLink(_1e696554e_typeBuilder*);
inline jule::Ptr<_1e4773826_TypeDecl> _1e6967133_buildFn(_1e696554e_typeBuilder*);
inline jule::Ptr<_1e4773826_TypeDecl> _1e6967397_buildPtr(_1e696554e_typeBuilder*);
inline jule::Ptr<_1e4773826_TypeDecl> _1e696760b_buildSptr(_1e696554e_typeBuilder*);
inline jule::Ptr<_1e4773826_TypeDecl> _1e6967870_buildOp(_1e696554e_typeBuilder*);
inline jule::Ptr<_1e4773826_TypeDecl> _1e6967ad4_buildSlc(_1e696554e_typeBuilder*);
inline jule::Ptr<_1e4773826_TypeDecl> _1e6967d48_buildArr(_1e696554e_typeBuilder*);
inline jule::Ptr<_1e4773826_TypeDecl> _1e69680ac_buildMap(_1e696554e_typeBuilder*);
inline jule::Ptr<_1e4773826_TypeDecl> _1e6968321_buildEnumerable(_1e696554e_typeBuilder*);
inline jule::Ptr<_1e4773826_TypeDecl> _1e6968585_step(_1e696554e_typeBuilder*);
inline __jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool _1e69687e9_build(_1e696554e_typeBuilder*);
struct _1e696554e_typeBuilder {
	jule::Ptr<_1e695483a_parser> _field_p;
	jule::Slice<jule::Ptr<_20d155596_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	

	_1e696554e_typeBuilder(void) = default;


};
struct _1e62d85ba_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_1e62d85ba_CompileInfo(void) = default;

	inline bool operator==(_1e62d85ba_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1e62d85ba_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1e62d9e6d_pushErr(_1e62d991d_directiveEval*, jule::Ptr<_20d155596_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _1e62da325_splitOperans(_1e62d991d_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Bool _1e62da633_evalDirectiveIdent(_1e62d991d_directiveEval*, jule::Str);
inline jule::Bool _1e62da941_evalDirectivePart(_1e62d991d_directiveEval*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Bool _1e62daba5_eval(_1e62d991d_directiveEval*);
struct _1e62d991d_directiveEval {
	jule::Slice<_24305e4ae_Log> _field_logs;
	jule::Ptr<_1e474057e_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

	_1e62d991d_directiveEval(void) = default;


};
inline jule::Ptr<_1e685c028_JuleImporter> static__1e6386987_New(_1e62d85ba_CompileInfo);
inline jule::Slice<jule::Ptr<_1e54a4149_ImportInfo>> _1e63ca04c_AllPackages(_1e685c028_JuleImporter*);
inline void _1e63e918c_SetModPath(_1e685c028_JuleImporter*, jule::Str);
inline jule::Str _1e640a80d_GetModPath(_1e685c028_JuleImporter*);
inline jule::Str _1e6436e55_ModById(_1e685c028_JuleImporter*, jule::I64);
inline jule::Ptr<_1e54a4149_ImportInfo> _1e643b575_GetImport(_1e685c028_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1e473e391_Ast__jule_tuple_s_24305e4ae_Log _1e64ee47e_ImportPackage(_1e685c028_JuleImporter*, jule::Str, jule::Bool);
inline void _1e650d207_Imported(_1e685c028_JuleImporter*, jule::Ptr<_1e54a4149_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_24305e4ae_Log _1e6510a23_isPassBuildDirectives(_1e685c028_JuleImporter*, jule::Ptr<_1e473e391_Ast>*);
struct _1e685c028_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1e54a4149_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

	_1e685c028_JuleImporter(void) = default;


};
struct _1e4bec5b8_OrderedDefines {
	jule::Slice<jule::Ptr<_1e4790018_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1e54ca291_Var>> _field_Globals;
	

	_1e4bec5b8_OrderedDefines(void) = default;


};
inline jule::Bool _1e94ddaca_isCommonOrdered(jule::Slice<jule::Ptr<_1e4790018_Struct>>, jule::Ptr<_1e4790018_Struct>);
inline jule::Bool _1e94e5d35_isCommonOrdered(jule::Slice<jule::Ptr<_1e54ca291_Var>>, jule::Ptr<_1e54ca291_Var>);
inline void _1e94d8179_orderCommon(jule::Slice<jule::Ptr<_1e4790018_Struct>>*);
inline void _1e94d8a1a_orderCommon(jule::Slice<jule::Ptr<_1e54ca291_Var>>*);
inline void static__1e680051b_orderStructures(jule::Slice<jule::Ptr<_1e4790018_Struct>>*);
inline void static__1e683d735_orderVars(jule::Slice<jule::Ptr<_1e54ca291_Var>>*);
struct _1e637e991_defineOrderer {
	

	_1e637e991_defineOrderer(void) = default;

	inline bool operator==(_1e637e991_defineOrderer _other) { return true; }

	inline bool operator!=(_1e637e991_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1e6a381d2_liveTable {
	jule::Slice<jule::Ptr<_1e54ca291_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1e5463b75_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1e47903e2_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1e5472dc6_Trait>> _field_traits;
	

	_1e6a381d2_liveTable(void) = default;


};
inline void _1e6a74163_optimizeChild(jule::Ptr<_1e6a73b8a_scopeDeadCode>, jule::Ptr<_1e5480ad7_Scope>*);
inline void _1e6a7440a_optimizeBodyChildExceptional(jule::Ptr<_1e6a73b8a_scopeDeadCode>, jule::Ptr<_1e5480ad7_Scope>*);
inline void _1e6a74691_optimizeBodyChild(jule::Ptr<_1e6a73b8a_scopeDeadCode>, jule::Ptr<_1e5480ad7_Scope>*);
inline void _1e6a74916_optimizeExprModel(jule::Ptr<_1e6a73b8a_scopeDeadCode>, jule::Any*);
inline void _1e6a74ae2_eliminateFollowed(_1e6a73b8a_scopeDeadCode*);
inline void _1e6a74d67_pushGoto(jule::Ptr<_1e6a73b8a_scopeDeadCode>, jule::Ptr<_1e5483612_GotoSt>);
inline void _1e6a750dc_pushLabel(jule::Ptr<_1e6a73b8a_scopeDeadCode>, jule::Ptr<_1e5483326_Label>);
inline void _1e6a75362_optimizeRangeIter(jule::Ptr<_1e6a73b8a_scopeDeadCode>, jule::Ptr<_1e5482787_RangeIter>);
inline void _1e6a755d7_optimizeWhileIter(jule::Ptr<_1e6a73b8a_scopeDeadCode>, jule::Ptr<_1e5481da2_WhileIter>);
inline void _1e6a7585c_optimizeInfIter(jule::Ptr<_1e6a73b8a_scopeDeadCode>, jule::Ptr<_1e548192e_InfIter>);
inline void _1e6a75ad2_optimizeConditional(jule::Ptr<_1e6a73b8a_scopeDeadCode>, jule::Ptr<_1e5481643_Conditional>);
inline void _1e6a75d57_optimizeMatch(jule::Ptr<_1e6a73b8a_scopeDeadCode>, jule::Ptr<_1e5484833_Match>);
inline void _1e6a760cc_optimizeAssign(jule::Ptr<_1e6a73b8a_scopeDeadCode>, jule::Ptr<_1e5483e3c_Assign>);
inline void _1e6a76352_optimizeMultiAssign(jule::Ptr<_1e6a73b8a_scopeDeadCode>, jule::Ptr<_1e54842e4_MultiAssign>);
inline void _1e6a765c7_optimizeStmt(jule::Ptr<_1e6a73b8a_scopeDeadCode>, jule::Any);
inline void _1e6a767a3_optimizeStmts(jule::Ptr<_1e6a73b8a_scopeDeadCode>);
struct _1e6a73b8a_scopeDeadCode {
	jule::Ptr<_1e6a73b8a_scopeDeadCode> _field_parent;
	jule::Ptr<_1e5480ad7_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1e5483326_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1e5483612_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	_1e6a73b8a_scopeDeadCode(void) = default;

	inline bool operator==(_1e6a73b8a_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1e6a73b8a_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1e6a77ae5_exprDeadCode static__1e6a78222_new(jule::Ptr<_1e6a73b8a_scopeDeadCode>*);
inline void _1e6a78497_binary(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e5452ca7_BinopExprModel>);
inline void _1e6a7871c_unary(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545315e_UnaryExprModel>);
inline void _1e6a78992_structureLit(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e5453912_StructLitExprModel>);
inline void _1e6a78c17_allocStructure(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e5453c20_AllocStructLitExprModel>);
inline void _1e6a78e8c_casting(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e5454270_CastingExprModel>);
inline void _1e6a79212_args(_1e6a77ae5_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1e6a79487_funcCall(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e5454b22_FnCallExprModel>);
inline void _1e6a7970c_slice(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e5454ec9_SliceExprModel>);
inline void _1e6a79982_array(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e5457c02_ArrayExprModel>);
inline void _1e6a79c07_indexing(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545544c_IndexingExprModel>);
inline void _1e6a79e7c_anonFunc(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e5455804_AnonFnExprModel>);
inline void _1e6a7a202_mapExpr(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545612e_MapExprModel>);
inline void _1e6a7a477_slicing(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545666d_SlicingExprModel>);
inline void _1e6a7a6ec_traitSub(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e5456bac_TraitSubIdentExprModel>);
inline void _1e6a7a972_structureSub(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e5457493_StructSubIdentExprModel>);
inline void _1e6a7abe7_commonSub(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545854e_CommonSubIdentExprModel>);
inline void _1e6a7ae6c_tuple(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545884b_TupleExprModel>);
inline void _1e6a7b1e2_newCall(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e5459819_BuiltinNewCallExprModel>);
inline void _1e6a7b467_outCall(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e5458c25_BuiltinOutCallExprModel>);
inline void _1e6a7b6dc_outlnCall(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e5459110_BuiltinOutlnCallExprModel>);
inline void _1e6a7b962_panicCall(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e5459c04_BuiltinPanicCallExprModel>);
inline void _1e6a7bbd7_assertCall(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545a1aa_BuiltinAssertCallExprModel>);
inline void _1e6a7be5c_errorCall(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545c08b_BuiltinErrorCallExprModel>);
inline void _1e6a7c1d2_makeCall(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545a661_BuiltinMakeCallExprModel>);
inline void _1e6a7c457_appendCall(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545aa4b_BuiltinAppendCallExprModel>);
inline void _1e6a7c6cc_lenCall(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545ad6a_BuiltinLenCallExprModel>);
inline void _1e6a7c952_capCall(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545b189_BuiltinCapCallExprModel>);
inline void _1e6a7cbc7_cloneCall(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545942e_BuiltinCloneCallExprModel>);
inline void _1e6a7ce4c_deleteCall(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545b83d_BuiltinDeleteCallExprModel>);
inline void _1e6a7d1c2_sizeof(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545c388_SizeofExprModel>);
inline void _1e6a7d447_alignof(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545c674_AlignofExprModel>);
inline void _1e6a7d6bc_integratedToStr(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545cc6d_IntegratedToStrExprModel>);
inline void _1e6a7d942_free(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545d422_FreeExprModel>);
inline void _1e6a7dbb7_backendEmit(_1e6a77ae5_exprDeadCode*, jule::Ptr<_1e545d136_BackendEmitExprModel>);
inline void _1e6a7de3c_optimize(_1e6a77ae5_exprDeadCode*, jule::Any*);
struct _1e6a77ae5_exprDeadCode {
	jule::Ptr<_1e6a73b8a_scopeDeadCode> _field_s;
	

	_1e6a77ae5_exprDeadCode(void) = default;

	inline bool operator==(_1e6a77ae5_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1e6a77ae5_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _20d5b2c34_UnsafeBinopExprModel {
	jule::Ptr<_1e5452ca7_BinopExprModel> _field_Node;
	

	_20d5b2c34_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_20d5b2c34_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_20d5b2c34_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _226994c8a_UnsafeIndexingExprModel {
	jule::Ptr<_1e545544c_IndexingExprModel> _field_Node;
	

	_226994c8a_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_226994c8a_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_226994c8a_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _20d5b300e_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1e5454ec9_SliceExprModel> _field_Elems;
	

	_20d5b300e_PushToSliceExprModel(void) = default;

	inline bool operator==(_20d5b300e_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_20d5b300e_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _20d77659b_MutSlicingExprModel {
	jule::Ptr<_20d155596_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_20d77659b_MutSlicingExprModel(void) = default;

	inline bool operator==(_20d77659b_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_20d77659b_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1e6223802_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1e6223802_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1e6223802_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e6223802_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e62239de_scopeOptimizer> static__2269b51b7_new(jule::Ptr<_1e5480ad7_Scope>);
inline void _2269bb036_setCurrentStmt(_1e62239de_scopeOptimizer*, jule::Any);
inline void _2269bc037_optimizeData(_1e62239de_scopeOptimizer*, jule::Ptr<_1e5522d00_Data>);
inline void _2269aaae7_optimizeVar(_1e62239de_scopeOptimizer*, jule::Ptr<_1e54ca291_Var>);
inline void _2269c0e3c_optimizeConditional(_1e62239de_scopeOptimizer*, jule::Ptr<_1e5481643_Conditional>);
inline void _2269c4209_buildDefaultConstatTrueCase(_1e62239de_scopeOptimizer*, jule::Ptr<_1e548537d_Case>, jule::I64*, jule::Ptr<_1e5484833_Match>*);
inline void _2269c511c_optimizeMatch(_1e62239de_scopeOptimizer*, jule::Ptr<_1e5484833_Match>);
inline void _2269cd0ae_optimizeRangeIter(_1e62239de_scopeOptimizer*, jule::Ptr<_1e5482787_RangeIter>);
inline void _2269de4ee_optimizeWhileIter(_1e62239de_scopeOptimizer*, jule::Ptr<_1e5481da2_WhileIter>);
inline jule::Bool _2269e0973_substr(_1e62239de_scopeOptimizer*, jule::Ptr<_1e5483e3c_Assign>);
inline jule::Bool _226a16416_strInsert(_1e62239de_scopeOptimizer*, jule::Ptr<_1e5483e3c_Assign>);
inline jule::Bool _226a2ed58_strAssign(_1e62239de_scopeOptimizer*, jule::Ptr<_1e5483e3c_Assign>);
inline void _226a44ca2_optimizeAssign(_1e62239de_scopeOptimizer*, jule::Ptr<_1e5483e3c_Assign>);
inline void _226a66268_optimizeMultiAssign(_1e62239de_scopeOptimizer*, jule::Ptr<_1e54842e4_MultiAssign>);
inline void _20d4d93b9_optimizeRet(_1e62239de_scopeOptimizer*, jule::Ptr<_1e5485ca7_RetSt>);
inline void _20d4e754d_optimizeStmt(_1e62239de_scopeOptimizer*, jule::Any);
inline void _20d50e004_optimizeChild(_1e62239de_scopeOptimizer*, jule::Ptr<_1e5480ad7_Scope>);
inline void _20d5189e2_optimize(_1e62239de_scopeOptimizer*);
struct _1e62239de_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1e5480ad7_Scope> _field_scope;
	

	_1e62239de_scopeOptimizer(void) = default;

	inline bool operator==(_1e62239de_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e62239de_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__226a1568a_optimize(jule::Any*);
inline jule::Bool _226a5062b_strCond(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e5452ca7_BinopExprModel>);
inline void _20d4ebed1_binary(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e5452ca7_BinopExprModel>);
inline void _20d56591d_unary(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545315e_UnaryExprModel>);
inline void _20d5b2abe_structureLit(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e5453912_StructLitExprModel>);
inline void _20d5c7782_allocStructure(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e5453c20_AllocStructLitExprModel>);
inline void _2269c1c2e_casting(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e5454270_CastingExprModel>);
inline void _2269c5abd_args(_1e6223bcb_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _20d5bebec_scope(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e5480ad7_Scope>*);
inline void _20d776788_funcCall(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e5454b22_FnCallExprModel>);
inline void _2269bd632_slice(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e5454ec9_SliceExprModel>);
inline void _2269c1190_array(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e5457c02_ArrayExprModel>);
inline void _2269c2bb9_indexing(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545544c_IndexingExprModel>);
inline void _2269c72b7_anonFunc(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e5455804_AnonFnExprModel>);
inline void _2269d70eb_mapExpr(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545612e_MapExprModel>);
inline void _226a006a8_slicing(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545666d_SlicingExprModel>);
inline void _226a025cd_traitSub(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e5456bac_TraitSubIdentExprModel>);
inline void _226a08dcb_structureSub(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e5457493_StructSubIdentExprModel>);
inline void _226a0a251_commonSub(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545854e_CommonSubIdentExprModel>);
inline void _20d5b36d5_tuple(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545884b_TupleExprModel>);
inline void _20d5c1ade_newCall(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e5459819_BuiltinNewCallExprModel>);
inline void _20d5c9ac5_outCall(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e5458c25_BuiltinOutCallExprModel>);
inline void _2269be710_outlnCall(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e5459110_BuiltinOutlnCallExprModel>);
inline void _2269c436e_panicCall(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e5459c04_BuiltinPanicCallExprModel>);
inline void _226a471c2_assertCall(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545a1aa_BuiltinAssertCallExprModel>);
inline void _2269d2a86_errorCall(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545c08b_BuiltinErrorCallExprModel>);
inline void _20d5b4692_makeCall(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545a661_BuiltinMakeCallExprModel>);
inline void _20d5cabb4_appendCall(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545aa4b_BuiltinAppendCallExprModel>);
inline void _20d5d6582_lenCall(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545ad6a_BuiltinLenCallExprModel>);
inline void _2269962ca_capCall(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545b189_BuiltinCapCallExprModel>);
inline void _20d5d037d_cloneCall(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545942e_BuiltinCloneCallExprModel>);
inline void _20d5c894d_deleteCall(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545b83d_BuiltinDeleteCallExprModel>);
inline void _20d5c50ed_sizeof(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545c388_SizeofExprModel>);
inline void _20d5c6440_alignof(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545c674_AlignofExprModel>);
inline void _1e6224182_integratedToStr(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545cc6d_IntegratedToStrExprModel>);
inline void _1e62242b4_free(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545d422_FreeExprModel>);
inline void _1e62243e6_backendEmit(_1e6223bcb_exprOptimizer*, jule::Ptr<_1e545d136_BackendEmitExprModel>);
inline void _1e6224528_do(_1e6223bcb_exprOptimizer*);
struct _1e6223bcb_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	_1e6223bcb_exprOptimizer(void) = default;

	inline bool operator==(_1e6223bcb_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1e6223bcb_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e6974b57_Optimizer> static__1e699435d_New(jule::Ptr<_1e65154a6_IR>*);
inline void _1e69a27cd_optimizeGlobal(_1e6974b57_Optimizer*, jule::Ptr<_1e54ca291_Var>*);
inline void _1e69d1895_optimizeFunction(_1e6974b57_Optimizer*, jule::Ptr<_1e5460ec4_Fn>*);
inline void _1e69e1179_optimizeStruct(_1e6974b57_Optimizer*, jule::Ptr<_1e4790018_Struct>*);
inline void _1e69e9380_optimizeGlobals(_1e6974b57_Optimizer*, jule::Ptr<_1e54a70a3_Package>*);
inline void _1e6a090c6_optimizeFunctions(_1e6974b57_Optimizer*, jule::Ptr<_1e54a70a3_Package>*);
inline void _1e6a0a814_optimizeStructs(_1e6974b57_Optimizer*, jule::Ptr<_1e54a70a3_Package>*);
inline void _1e69a5d75_optimizePackage(_1e6974b57_Optimizer*, jule::Ptr<_1e54a70a3_Package>*);
inline void _1e69d46cd_Optimize(_1e6974b57_Optimizer*);
struct _1e6974b57_Optimizer {
	jule::Ptr<_1e65154a6_IR> _field_ir;
	

	_1e6974b57_Optimizer(void) = default;

	inline bool operator==(_1e6974b57_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1e6974b57_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1e6a91dea_Reset(void);
inline void static__1e6a93193_Print(jule::Str, jule::Str);
struct _1e6a92ea6_AnsiEscape {
	

	_1e6a92ea6_AnsiEscape(void) = default;

	inline bool operator==(_1e6a92ea6_AnsiEscape _other) { return true; }

	inline bool operator!=(_1e6a92ea6_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1e6a94727_LogFlat(_24305e4ae_Log*);
inline void static__1e6a94936_LogError(_24305e4ae_Log*);
inline void static__1e6a94b45_Log(_24305e4ae_Log*);
inline void static__1e6a94d54_PrintLogs(jule::Slice<_24305e4ae_Log>*);
struct _1e6a944c4_Logger {
	

	_1e6a944c4_Logger(void) = default;

	inline bool operator==(_1e6a944c4_Logger _other) { return true; }

	inline bool operator!=(_1e6a944c4_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1e71edab7_Unix(_1e71ed710_AbsTime*);
struct _1e71ed710_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	_1e71ed710_AbsTime(void) = default;

	inline bool operator==(_1e71ed710_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1e71ed710_AbsTime _other) { return !this->operator==(_other); }


};
inline _1e71edda3_Time static__1e71ee249_Unix(jule::U64);
inline _1e71edda3_Time static__1e71ee447_Now(void);
inline jule::U64 _1e71ee898_Unix(_1e71edda3_Time*);
inline jule::U64 _1e71eeb0c_Day(_1e71edda3_Time*);
inline jule::U64 _1e71eed71_Month(_1e71edda3_Time*);
inline jule::U64 _1e72000d5_Year(_1e71edda3_Time*);
inline jule::U64 _1e7200349_Second(_1e71edda3_Time*);
inline jule::U64 _1e72005ad_Minute(_1e71edda3_Time*);
inline jule::U64 _1e7200822_Hour(_1e71edda3_Time*);
inline _1e71ed710_AbsTime _1e7200a86_Abs(_1e71edda3_Time*);
struct _1e71edda3_Time {
	jule::U64 _field_sec = 0;
	

	_1e71edda3_Time(void) = default;

	inline bool operator==(_1e71edda3_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1e71edda3_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e714c83a_scopeCoder> static__1e714ce56_new(jule::Ptr<_1e7205bbd_ObjectCoder>*);
inline void _1e714d1cb_rangeIndexIter(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5482787_RangeIter>*);
inline void _1e714d451_rangeHashmapIter(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5482787_RangeIter>*);
inline void _1e714d6c6_ifCase(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5480ed3_If>);
inline void _1e714d94b_conditional(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5481643_Conditional>);
inline void _1e714dbc1_infIter(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e548192e_InfIter>);
inline void _1e714de46_whileIter(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5481da2_WhileIter>);
inline void _1e714e1bb_rangeIter(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5482787_RangeIter>);
inline void _1e714e441_cont(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5482b83_ContSt>);
inline void _1e714e6b6_label(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5483326_Label>);
inline void _1e714e93b_gotoSt(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5483612_GotoSt>);
inline void _1e714ebb1_postfix(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e54839b9_Postfix>);
inline void _1e714ee36_assign(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5483e3c_Assign>);
inline void _1e71501ab_mapLookupAssign(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e54842e4_MultiAssign>*);
inline void _1e7150431_multiAssignTup(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e54842e4_MultiAssign>*);
inline void _1e71506a6_multiAssignFn(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e54842e4_MultiAssign>*);
inline void _1e715092b_multiAssign(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e54842e4_MultiAssign>);
inline jule::Fn<void(void)> _1e7150c39_matchExpr(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5484833_Match>);
inline void _1e7151058_case(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5484833_Match>, jule::Ptr<_1e548537d_Case>);
inline void _1e71512cd_matchSt(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5484833_Match>);
inline void _1e7151553_fallSt(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5485933_FallSt>);
inline void _1e71517c8_breakSt(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e548303a_BreakSt>);
inline void _1e7151a4d_setResult(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5485ca7_RetSt>);
inline void _1e7151cc3_retSt(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5485ca7_RetSt>);
inline void _1e7152048_var(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e54ca291_Var>);
inline void _1e71522bd_st(jule::Ptr<_1e714c83a_scopeCoder>, jule::Any);
inline void _1e7152543_scopeStmts(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5480ad7_Scope>*);
inline void _1e71527b8_scope(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5480ad7_Scope>);
inline void _1e7152a3d_funcScope(jule::Ptr<_1e714c83a_scopeCoder>, jule::Ptr<_1e5463b75_FnIns>);
struct _1e714c83a_scopeCoder {
	jule::Ptr<_1e7205bbd_ObjectCoder> _field_oc;
	

	_1e714c83a_scopeCoder(void) = default;

	inline bool operator==(_1e714c83a_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1e714c83a_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e71554d0_exprCoder> static__1e71558cb_new(jule::Ptr<_1e7205bbd_ObjectCoder>*);
inline void _1e7155b51_string(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e54469c1_Const>*);
inline void _1e7155dc6_boolean(jule::Ptr<_1e71554d0_exprCoder>, jule::Bool);
inline void _1e71560a2_nilLit(jule::Ptr<_1e71554d0_exprCoder>);
inline jule::Bool _1e71563b0_ftoaSpecialCases(jule::Ptr<_1e71554d0_exprCoder>, jule::F64*);
inline void _1e7156635_float32(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e54469c1_Const>*);
inline void _1e71568aa_float64(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e54469c1_Const>*);
inline void _1e7156b30_constant(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e54469c1_Const>);
inline void _1e7156ee8_divByZeroBinary(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_20d155596_Token>*, jule::Ptr<_1e54527e0_OperandExprModel>*, jule::Ptr<_1e54527e0_OperandExprModel>*);
inline void _1e715726d_unsafeBinary(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5452ca7_BinopExprModel>);
inline void _1e71574e3_binary(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5452ca7_BinopExprModel>);
inline void _1e7157768_var(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e54ca291_Var>);
inline void _1e71579dd_structureIns(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e47903e2_StructIns>);
inline void _1e7157c63_unary(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545315e_UnaryExprModel>);
inline void _1e7157ed8_structureLit(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5453912_StructLitExprModel>);
inline void _1e715825d_allocStructure(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5453c20_AllocStructLitExprModel>);
inline void _1e71584d3_possibleRefExpr(jule::Ptr<_1e71554d0_exprCoder>, jule::Any);
inline void _1e7158758_casting(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5454270_CastingExprModel>);
inline void _1e71589cd_models(jule::Ptr<_1e71554d0_exprCoder>, jule::Slice<jule::Any>);
inline void _1e7158c53_args(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5454b22_FnCallExprModel>*);
inline void _1e7158ec8_modelForCall(jule::Ptr<_1e71554d0_exprCoder>, jule::Any);
inline void _1e715924d_pushCallInf(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5454b22_FnCallExprModel>*);
inline jule::Bool _1e715955b_isWrapped(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5454b22_FnCallExprModel>*);
inline void _1e71597d1_pureFuncCall(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5454b22_FnCallExprModel>*);
inline void _1e7159a56_coFuncCall(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5454b22_FnCallExprModel>*);
inline void _1e7159d75_writeUseExpr(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5463b75_FnIns>*, jule::Ptr<_1e5522d00_Data>);
inline void _1e715a0ea_funcCall(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5454b22_FnCallExprModel>);
inline void _1e715a370_slice(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5454ec9_SliceExprModel>);
inline void _1e715a5e5_indexing(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545544c_IndexingExprModel>);
inline void _1e715a86a_unsafeIndexing(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_226994c8a_UnsafeIndexingExprModel>);
inline void _1e715aae0_anonFunc(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5455804_AnonFnExprModel>);
inline void _1e715ad65_mapExpr(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545612e_MapExprModel>);
inline void _1e715b0da_slicing(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545666d_SlicingExprModel>);
inline void _1e715b360_traitSub(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5456bac_TraitSubIdentExprModel>);
inline void _1e715b5d5_structureSub(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5457493_StructSubIdentExprModel>);
inline void _1e715b85a_commonIdent(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5457edd_CommonIdentExprModel>);
inline void _1e715bad0_commonSub(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545854e_CommonSubIdentExprModel>);
inline void _1e715bd55_array(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5457c02_ArrayExprModel>);
inline void _1e715c0ca_funcInsCommon(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5463b75_FnIns>);
inline void _1e715c350_funcIns(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5463b75_FnIns>);
inline void _1e715c5c5_tuple(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545884b_TupleExprModel>);
inline void _1e715c84a_newCall(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5459819_BuiltinNewCallExprModel>);
inline void _1e715cac0_outCall(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5458c25_BuiltinOutCallExprModel>);
inline void _1e715cd45_outlnCall(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5459110_BuiltinOutlnCallExprModel>);
inline void _1e715d0ba_panicCall(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5459c04_BuiltinPanicCallExprModel>);
inline void _1e715d340_assertCall(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545a1aa_BuiltinAssertCallExprModel>);
inline void _1e715d5b5_errorCall(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545c08b_BuiltinErrorCallExprModel>);
inline void _1e715d83a_copyCall(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545bba1_BuiltinCopyCallExprModel>);
inline void _1e715dab0_lenCall(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545ad6a_BuiltinLenCallExprModel>);
inline void _1e715dd35_capCall(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545b189_BuiltinCapCallExprModel>);
inline void _1e715e0aa_deleteCall(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545b83d_BuiltinDeleteCallExprModel>);
inline void _1e715e330_makeCallSlice(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545a661_BuiltinMakeCallExprModel>*);
inline void _1e715e5a5_makeCallStr(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545a661_BuiltinMakeCallExprModel>*);
inline void _1e715e82a_makeCall(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545a661_BuiltinMakeCallExprModel>);
inline void _1e715eaa0_pushToSlice(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_20d5b300e_PushToSliceExprModel>);
inline void _1e715ed25_appendCall(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545aa4b_BuiltinAppendCallExprModel>);
inline void _1e716009a_cloneCall(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545942e_BuiltinCloneCallExprModel>);
inline void _1e7160320_sizeof(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545c388_SizeofExprModel>);
inline void _1e7160595_alignof(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545c674_AlignofExprModel>);
inline jule::Str _1e71608a3_runeLit(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545c960_RuneExprModel>);
inline void _1e7160b28_structureStatic(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e5457839_StructStaticIdentExprModel>);
inline void _1e7160d9d_integratedToStr(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545cc6d_IntegratedToStrExprModel>);
inline void _1e7161123_backendEmit(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545d136_BackendEmitExprModel>);
inline void _1e7161398_free(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e545d422_FreeExprModel>);
inline void _1e716161d_mutSlicing(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_20d77659b_MutSlicingExprModel>);
inline void _1e7161893_strInsertBegin(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e6223802_StrInsertBeginExprModel>);
inline void _1e7161b18_model(jule::Ptr<_1e71554d0_exprCoder>, jule::Any);
inline void _1e7161d8d_initExpr(jule::Ptr<_1e71554d0_exprCoder>, jule::Ptr<_1e554dc82_TypeKind>);
struct _1e71554d0_exprCoder {
	jule::Ptr<_1e7205bbd_ObjectCoder> _field_oc;
	

	_1e71554d0_exprCoder(void) = default;

	inline bool operator==(_1e71554d0_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1e71554d0_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e7164643_deriveCoder> static__1e7164a1c_new(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline jule::Str _1e7164d2a_cloneFuncDecl(_1e7164643_deriveCoder*, jule::Ptr<_1e4790018_Struct>*);
inline jule::Str _1e7165138_cloneFuncDef(_1e7164643_deriveCoder*, jule::Ptr<_1e4790018_Struct>*);
struct _1e7164643_deriveCoder {
	jule::Ptr<_1e7205bbd_ObjectCoder> _field_oc;
	

	_1e7164643_deriveCoder(void) = default;

	inline bool operator==(_1e7164643_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1e7164643_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e7166018_TestCoder> static__1e716648b_New(jule::Ptr<_1e7205bbd_ObjectCoder>*);
inline jule::Ptr<_1e54a4149_ImportInfo> _1e7166700_findTestingPackage(jule::Ptr<_1e7166018_TestCoder>);
inline void _1e7166975_appendTest(jule::Ptr<_1e7166018_TestCoder>, jule::Ptr<_1e5463b75_FnIns>);
inline void _1e7166bea_appendPackageTests(jule::Ptr<_1e7166018_TestCoder>, jule::Ptr<_1e54a70a3_Package>*);
inline jule::Bool _1e7166e5e_readyTestingPackage(jule::Ptr<_1e7166018_TestCoder>);
inline void _1e716713a_callTmReset(jule::Ptr<_1e7166018_TestCoder>);
inline void _1e7167316_callTmFailed(jule::Ptr<_1e7166018_TestCoder>);
inline void _1e71674e2_callTmSkipped(jule::Ptr<_1e7166018_TestCoder>);
inline void _1e71676bd_Serialize(jule::Ptr<_1e7166018_TestCoder>);
struct _1e7166018_TestCoder {
	jule::Ptr<_1e47903e2_StructIns> _field_t;
	jule::Ptr<_1e5460ec4_Fn> _field_tmReset;
	jule::Ptr<_1e5460ec4_Fn> _field_tmFailed;
	jule::Ptr<_1e5460ec4_Fn> _field_tmSkipped;
	jule::Ptr<_1e7205bbd_ObjectCoder> _field_oc;
	

	_1e7166018_TestCoder(void) = default;

	inline bool operator==(_1e7166018_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1e7166018_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1e7168b31_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__1e716901b_toLocal(jule::I64, jule::I64, jule::Str*);
inline jule::Str static__1e71692b3_func(jule::Ptr<_1e5460ec4_Fn>*);
inline jule::Str static__1e716955a_funcIns(jule::Ptr<_1e5463b75_FnIns>*);
inline jule::Str static__1e7169802_traitDecl(jule::Ptr<_1e5472dc6_Trait>);
inline jule::Str static__1e7169a99_param(jule::Ptr<_1e545e687_Param>*);
inline jule::Str static__1e7169d41_structure(jule::Ptr<_1e4790018_Struct>*);
inline jule::Str static__1e716a0d8_structureIns(jule::Ptr<_1e47903e2_StructIns>*);
inline jule::Str static__1e716a380_field(jule::Ptr<_1e4764075_Field>*);
inline jule::Str static__1e716a627_var(jule::Ptr<_1e54ca291_Var>);
inline jule::Str static__1e716a8be_iterBegin(jule::Uintptr);
inline jule::Str static__1e716ab66_iterEnd(jule::Uintptr);
inline jule::Str static__1e716ae0d_iterNext(jule::Uintptr);
inline jule::Str static__1e716b1a5_label(jule::Str*);
inline jule::Str static__1e716b44c_matchEnd(jule::Uintptr);
inline jule::Str static__1e716b6e4_caseBegin(jule::Uintptr);
struct _1e7168669_identCoder {
	

	_1e7168669_identCoder(void) = default;

	inline bool operator==(_1e7168669_identCoder _other) { return true; }

	inline bool operator!=(_1e7168669_identCoder _other) { return !this->operator==(_other); }


};
struct _1e719ae0a_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	_1e719ae0a_SerializationInfo(void) = default;

	inline bool operator==(_1e719ae0a_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1e719ae0a_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1e717141e_traitHash {
	jule::Ptr<_1e5472dc6_Trait> _field_t;
	jule::Ptr<_1e47903e2_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	_1e717141e_traitHash(void) = default;

	inline bool operator==(_1e717141e_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1e717141e_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1e720ba09_Str(_1e720b71d_customType*);
inline jule::Bool _1e720bd17_Equal(jule::Ptr<_1e720b71d_customType>, jule::Ptr<_1e554dc82_TypeKind>);
struct _1e720b71d_customType {
	jule::Str _field_kind;
	

	_1e720b71d_customType(void) = default;

	inline bool operator==(_1e720b71d_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e720b71d_customType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e720c1be_typeCoder> static__1e720c70d_new(jule::Ptr<_1e7205bbd_ObjectCoder>*);
inline jule::Str _1e720ca1b_toType(_1e720c1be_typeCoder*, jule::Str);
inline jule::Str _1e720cd29_prim(_1e720c1be_typeCoder*, jule::Ptr<_1e55539ce_Prim>);
inline jule::Str _1e720d137_tuple(_1e720c1be_typeCoder*, jule::Ptr<_1e555874d_Tuple>);
inline jule::Str _1e720d445_asSptr(_1e720c1be_typeCoder*, jule::Str);
inline jule::Str _1e720d753_asPtr(_1e720c1be_typeCoder*, jule::Str);
inline jule::Str _1e720da61_sptr(_1e720c1be_typeCoder*, jule::Ptr<_1e5557263_Sptr>);
inline jule::Str _1e720dd6e_ptr(_1e720c1be_typeCoder*, jule::Ptr<_1e555a7c7_Ptr>);
inline jule::Str _1e720e17c_enumDecl(_1e720c1be_typeCoder*, jule::Ptr<_1e547501b_Enum>);
inline jule::Str _1e720e48a_typeEnumDecl(_1e720c1be_typeCoder*, jule::Ptr<_1e5476616_TypeEnum>);
inline jule::Str _1e720e798_asSlice(_1e720c1be_typeCoder*, jule::Ptr<_1e554dc82_TypeKind>);
inline jule::Str _1e720eaa6_slice(_1e720c1be_typeCoder*, jule::Ptr<_1e5557bc0_Slc>);
inline jule::Str _1e720edb4_mapType(_1e720c1be_typeCoder*, jule::Ptr<_1e5559276_Map>);
inline jule::Str _1e72101c2_traitIdent(_1e720c1be_typeCoder*, jule::Str);
inline jule::Str _1e72104d0_traitDecl(_1e720c1be_typeCoder*, jule::Ptr<_1e5472dc6_Trait>);
inline jule::Str _1e72107dd_structure(_1e720c1be_typeCoder*, jule::Ptr<_1e4790018_Struct>);
inline jule::Str _1e7210aeb_structureIns(_1e720c1be_typeCoder*, jule::Ptr<_1e47903e2_StructIns>);
inline jule::Str _1e7210e09_array(_1e720c1be_typeCoder*, jule::Ptr<_1e5559d6a_Arr>);
inline jule::Str _1e7211525_paramIns(_1e720c1be_typeCoder*, jule::Ptr<_1e5462ca6_ParamIns>*);
inline void _1e7211b52_funcInsResult(_1e720c1be_typeCoder*, jule::Str*, jule::Ptr<_1e5463b75_FnIns>*);
inline jule::Str _1e7211e60_anonFunc(_1e720c1be_typeCoder*, jule::Ptr<_1e5463b75_FnIns>);
inline jule::Str _1e721226d_func(_1e720c1be_typeCoder*, jule::Ptr<_1e5463b75_FnIns>);
inline jule::Str _1e721257b_kind(_1e720c1be_typeCoder*, jule::Ptr<_1e554dc82_TypeKind>);
struct _1e720c1be_typeCoder {
	jule::Ptr<_1e7205bbd_ObjectCoder> _field_oc;
	jule::Ptr<_1e72149ac_resultCoder> _field_rc;
	

	_1e720c1be_typeCoder(void) = default;

	inline bool operator==(_1e720c1be_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1e720c1be_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e72149ac_resultCoder> static__1e7214eb8_new(jule::Ptr<_1e720c1be_typeCoder>*);
inline void _1e72152d7_ptr(_1e72149ac_resultCoder*, jule::Str*, jule::Ptr<_1e555a7c7_Ptr>);
inline void _1e7215606_sptr(_1e72149ac_resultCoder*, jule::Str*, jule::Ptr<_1e5557263_Sptr>);
inline void _1e7215925_mapType(_1e72149ac_resultCoder*, jule::Str*, jule::Ptr<_1e5559276_Map>);
inline void _1e7215c44_slice(_1e72149ac_resultCoder*, jule::Str*, jule::Ptr<_1e5557bc0_Slc>);
inline void _1e7216063_arr(_1e72149ac_resultCoder*, jule::Str*, jule::Ptr<_1e5559d6a_Arr>);
inline void _1e7216382_func(_1e72149ac_resultCoder*, jule::Str*, jule::Ptr<_1e5463b75_FnIns>);
inline void _1e72166a1_tup(_1e72149ac_resultCoder*, jule::Str*, jule::Ptr<_1e555874d_Tuple>);
inline void _1e72169c0_codeMut(_1e72149ac_resultCoder*, jule::Str*, jule::Ptr<_1e554dc82_TypeKind>*);
inline void _1e7216cde_codeMut1(_1e72149ac_resultCoder*, jule::Str*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Str _1e72170b9_code(_1e72149ac_resultCoder*, jule::Ptr<_1e554dc82_TypeKind>*);
struct _1e72149ac_resultCoder {
	jule::Ptr<_1e720c1be_typeCoder> _field_tc;
	

	_1e72149ac_resultCoder(void) = default;

	inline bool operator==(_1e72149ac_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1e72149ac_resultCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1e9c7ea0d_Name(_1e9c7e722_Flag*);
inline jule::Str _1e9c7eb40_What(_1e9c7e722_Flag*);
inline void _1e9c7ec72_Reset(_1e9c7e722_Flag*);
inline jule::I32 _1e9c7edb5_Short(_1e9c7e722_Flag*);
struct _1e9c7e722_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	_1e9c7e722_Flag(void) = default;

	inline bool operator==(_1e9c7e722_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1e9c7e722_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1e9c82e1d_Name(_1e9c83380_Flag*);
inline jule::Str _1e9c8366b_What(_1e9c83380_Flag*);
inline void _1e9c8379d_Reset(_1e9c83380_Flag*);
inline jule::I32 _1e9c838d0_Short(_1e9c83380_Flag*);
struct _1e9c83380_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	_1e9c83380_Flag(void) = default;

	inline bool operator==(_1e9c83380_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1e9c83380_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1e9c866d5_Name(_1e9c86b47_Flag*);
inline jule::Str _1e9c86e33_What(_1e9c86b47_Flag*);
inline void _1e9c87065_Reset(_1e9c86b47_Flag*);
inline jule::I32 _1e9c87197_Short(_1e9c86b47_Flag*);
struct _1e9c86b47_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	_1e9c86b47_Flag(void) = default;

	inline bool operator==(_1e9c86b47_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1e9c86b47_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1e9c89ee1_Name(_1e9c8a453_Flag*);
inline jule::Str _1e9c8a73e_What(_1e9c8a453_Flag*);
inline void _1e9c8a871_Reset(_1e9c8a453_Flag*);
inline jule::I32 _1e9c8a9a3_Short(_1e9c8a453_Flag*);
struct _1e9c8a453_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	_1e9c8a453_Flag(void) = default;

	inline bool operator==(_1e9c8a453_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1e9c8a453_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1e9c8d7a8_Name(_1e9c8dc1a_Flag*);
inline jule::Str _1e9c8e006_What(_1e9c8dc1a_Flag*);
inline void _1e9c8e138_Reset(_1e9c8dc1a_Flag*);
inline jule::I32 _1e9c8e26a_Short(_1e9c8dc1a_Flag*);
struct _1e9c8dc1a_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	_1e9c8dc1a_Flag(void) = default;

	inline bool operator==(_1e9c8dc1a_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1e9c8dc1a_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e724c4a6_FlagSet> static__1e724c792_New(void);
inline jule::Trait<_1e6ead7ab_CommonFlag> _1e724cc26_FindFlag(_1e724c4a6_FlagSet*, jule::Str);
inline jule::Trait<_1e6ead7ab_CommonFlag> _1e724d034_FindFlagShort(_1e724c4a6_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1e6ead7ab_CommonFlag>> _1e724d298_Flags(_1e724c4a6_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1e724d5a6_Parse(_1e724c4a6_FlagSet*, jule::Slice<jule::Str>);
inline void _1e724d782_Reset(_1e724c4a6_FlagSet*);
inline jule::Ptr<_1e9c8dc1a_Flag> _1e9d0e53d_addFlagCommon(_1e724c4a6_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1e9c8a453_Flag> _1e9d17d82_addFlagCommon(_1e724c4a6_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1e9d0c4c5_AddVar(_1e724c4a6_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1e9d15d4c_AddVar(_1e724c4a6_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1e724c4a6_FlagSet {
	jule::Slice<jule::Trait<_1e6ead7ab_CommonFlag>> _field_flags;
	

	_1e724c4a6_FlagSet(void) = default;


};
inline jule::Ptr<_242d3c358_Cmd> static__242d3c7a9_New(jule::Str);
inline jule::VoidExceptional _242d3c985_Spawn(_242d3c358_Cmd*);
inline jule::VoidExceptional _242d3cb61_Kill(_242d3c358_Cmd*);
inline jule::Exceptional<jule::I64> _242d3cdc5_Wait(_242d3c358_Cmd*);
inline jule::VoidExceptional _242d75c87_spawn(_242d3c358_Cmd*);
inline jule::VoidExceptional _242d75e63_kill(_242d3c358_Cmd*);
inline jule::Exceptional<jule::I64> _242d761c7_wait(_242d3c358_Cmd*);
struct _242d3c358_Cmd {
	_242d7511b_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

	_242d3c358_Cmd(void) = default;


};
inline __jule_tuple_x_1e65154a6_IR__jule_tuple_s_24305e4ae_Log static__1e6558197_Build(jule::Str, jule::I64);
inline void _1e656965e_appendStructs(_1e65154a6_IR*, jule::Ptr<_1e54a70a3_Package>*, jule::Slice<jule::Ptr<_1e4790018_Struct>>*);
inline jule::Slice<jule::Ptr<_1e4790018_Struct>> _1e657c0bc_GetAllStructures(_1e65154a6_IR*);
inline void _1e6590102_appendGlobals(_1e65154a6_IR*, jule::Ptr<_1e54a70a3_Package>*, jule::Slice<jule::Ptr<_1e54ca291_Var>>*);
inline jule::Slice<jule::Ptr<_1e54ca291_Var>> _1e659de68_GetAllGlobals(_1e65154a6_IR*);
inline void _1e672cb52_Order(_1e65154a6_IR*);
struct _1e65154a6_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1e54a70a3_Package> _field_Main;
	jule::Slice<jule::Ptr<_1e54a4149_ImportInfo>> _field_Used;
	_1e4bec5b8_OrderedDefines _field_Ordered;
	

	_1e65154a6_IR(void) = default;


};
inline jule::Ptr<_1e6a3849b_ObjectDeadCode> static__1e6a388ec_new(jule::Ptr<_1e65154a6_IR>*);
inline jule::Bool _1e951cdc3_isLive(jule::Ptr<_1e6a3849b_ObjectDeadCode>, jule::Ptr<_1e5472dc6_Trait>*);
inline jule::Bool _1e9522b0e_isLive(jule::Ptr<_1e6a3849b_ObjectDeadCode>, jule::Ptr<_1e5463b75_FnIns>*);
inline jule::Bool _1e952a6b6_isLive(jule::Ptr<_1e6a3849b_ObjectDeadCode>, jule::Ptr<_1e47903e2_StructIns>*);
inline jule::Bool _1e95311a0_isLive(jule::Ptr<_1e6a3849b_ObjectDeadCode>, jule::Ptr<_1e54ca291_Var>*);
inline void _1e951d225_pushLive(jule::Ptr<_1e6a3849b_ObjectDeadCode>, jule::Ptr<_1e5472dc6_Trait>);
inline void _1e9523703_pushLive(jule::Ptr<_1e6a3849b_ObjectDeadCode>, jule::Ptr<_1e5463b75_FnIns>);
inline void _1e95299a1_pushLive(jule::Ptr<_1e6a3849b_ObjectDeadCode>, jule::Ptr<_1e47903e2_StructIns>);
inline void _1e9531502_pushLive(jule::Ptr<_1e6a3849b_ObjectDeadCode>, jule::Ptr<_1e54ca291_Var>);
inline void _1e6a70934_setReferencesAsLive(jule::Ptr<_1e6a3849b_ObjectDeadCode>, jule::Ptr<_1e5466ae0_ReferenceStack>*);
inline void _1e6a70ba9_inits(jule::Ptr<_1e6a3849b_ObjectDeadCode>, jule::Ptr<_1e54a70a3_Package>*);
inline void _1e6a70e2e_collectLivePackage(jule::Ptr<_1e6a3849b_ObjectDeadCode>, jule::Ptr<_1e54a70a3_Package>*);
inline void _1e6a7110a_collectLive(jule::Ptr<_1e6a3849b_ObjectDeadCode>);
inline void _1e6a71380_removeDeadGlobals(jule::Ptr<_1e6a3849b_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e54ca291_Var>>*);
inline void _1e6a71605_removeDeadFns(jule::Ptr<_1e6a3849b_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e5460ec4_Fn>>*);
inline void _1e6a7187a_removeDeadStructs(jule::Ptr<_1e6a3849b_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e4790018_Struct>>*);
inline void _1e6a71b00_removeDeadTraits(jule::Ptr<_1e6a3849b_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e5472dc6_Trait>>*);
inline void _1e6a71d75_removeDeadsFile(jule::Ptr<_1e6a3849b_ObjectDeadCode>, jule::Ptr<_1e551cec6_SymbolTable>*);
inline void _1e6a720ea_removeDeadsPackage(jule::Ptr<_1e6a3849b_ObjectDeadCode>, jule::Ptr<_1e54a70a3_Package>*);
inline void _1e6a722c6_removeDeads(jule::Ptr<_1e6a3849b_ObjectDeadCode>);
inline void _1e6a724a2_elimanate(jule::Ptr<_1e6a3849b_ObjectDeadCode>);
struct _1e6a3849b_ObjectDeadCode {
	_1e6a381d2_liveTable _field_live;
	jule::Ptr<_1e65154a6_IR> _field_ir;
	

	_1e6a3849b_ObjectDeadCode(void) = default;


};
inline jule::Str _1e4765c47_Str(_1e47903e2_StructIns*);
inline jule::Bool _1e4766d9c_Equal(jule::Ptr<_1e47903e2_StructIns>, jule::Ptr<_1e554dc82_TypeKind>);
inline jule::Bool _1e4769201_Same(_1e47903e2_StructIns*, jule::Ptr<_1e47903e2_StructIns>);
inline jule::Ptr<_1e5460ec4_Fn> _1e476a521_FindMethod(_1e47903e2_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1e4790205_FieldIns> _1e474c48c_FindField(_1e47903e2_StructIns*, jule::Str);
inline jule::Ptr<_1e54ca291_Var> _1e47584a9_FindStatic(_1e47903e2_StructIns*, jule::Str);
struct _1e47903e2_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1e4790018_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1e554c555_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1e4790205_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1e54ca291_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1e5460ec4_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1e5466ae0_ReferenceStack> _field_Refers;
	_1e476b6ba_Operators _field_Operators;
	

	_1e47903e2_StructIns(void) = default;


};
inline jule::Ptr<_1e7205bbd_ObjectCoder> static__1e7170907_New(jule::Ptr<_1e65154a6_IR>*, _1e719ae0a_SerializationInfo);
inline void _1e7190ce0_write(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Str);
inline void _1e71cb831_addIndent(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e71cbd4d_doneIndent(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e71d03a1_indent(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline jule::I64 _1e71d6385_findAnyType(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::I64 _1e71953dd_pushAnyType(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e554dc82_TypeKind>*);
inline void _1e719461d_pushResultIns(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e5463b75_FnIns>*);
inline void _1e71cdcea_pushResult(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e5460ec4_Fn>*);
inline jule::I64 _1e7171177_findTypeOffset(_1e7205bbd_ObjectCoder*, jule::Ptr<_1e5472dc6_Trait>, jule::Ptr<_1e554dc82_TypeKind>);
inline void _1e72062b7_locInfo(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_20d155596_Token>*);
inline void _1e72063e9_head(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e720652b_links(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e720665d_prepareStructure(_1e7205bbd_ObjectCoder*, jule::Ptr<_1e4790018_Struct>*);
inline void _1e7206790_prepareStructures(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e72068c2_iterPackages(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Fn<void(jule::Ptr<_1e54a70a3_Package>*)>);
inline void _1e7206a04_buildTraitMap(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e7206b36_traitDecls(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e7206c68_structurePlainDecl(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e4790018_Struct>*);
inline void _1e7206d9a_structurePlainDecls(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e7206ecc_fieldDecl(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e4790205_FieldIns>*);
inline void _1e720710e_structureDestructor(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e47903e2_StructIns>*);
inline void _1e7207241_structureDeriveDefsDecls(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e47903e2_StructIns>*);
inline void _1e7207373_structureOperatorEq(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Str*, jule::Ptr<_1e47903e2_StructIns>*);
inline void _1e72074a5_structureOperatorNotEq(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Str*, jule::Ptr<_1e47903e2_StructIns>*);
inline void _1e72075d7_structureOperator(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Str*, jule::Ptr<_1e5463b75_FnIns>*, jule::Str);
inline void _1e7207719_structureOperators(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e47903e2_StructIns>*);
inline void _1e720784b_structureInsDecl(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e47903e2_StructIns>*);
inline void _1e720797d_structureDecl(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e4790018_Struct>*);
inline void _1e7207ab0_structureDecls(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e7207be2_paramsDecls(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Slice<jule::Ptr<_1e5462ca6_ParamIns>>*);
inline void _1e7207d24_funcHead(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e5463b75_FnIns>*, jule::Bool);
inline void _1e7207e56_funcDecl(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e5460ec4_Fn>*, jule::Bool);
inline void _1e7208088_funcDecls(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e72081ba_traitDataTypes(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e72082ec_paramIns(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e5462ca6_ParamIns>*);
inline void _1e720842e_paramsIns(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Slice<jule::Ptr<_1e5462ca6_ParamIns>>*);
inline void _1e7208561_varInitExpr(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e54ca291_Var>*, jule::Fn<void(void)>);
inline void _1e7208693_var(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e54ca291_Var>);
inline void _1e72087c5_func(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e5460ec4_Fn>*);
inline void _1e7208907_traitWrappers(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e7208a39_traitDatas(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e7208b6b_globals(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e7208c9d_decls(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e7208dd0_structureMethods(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e47903e2_StructIns>*);
inline void _1e7209012_structureDeriveDefs(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e47903e2_StructIns>*);
inline void _1e7209144_structureOstream(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e47903e2_StructIns>*);
inline void _1e720930e_structureIns(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e47903e2_StructIns>*);
inline void _1e7209584_structure(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e4790018_Struct>*);
inline void _1e7209760_structures(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e720993b_funcs(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e7209bb1_pushInit(jule::Ptr<_1e7205bbd_ObjectCoder>, jule::Ptr<_1e54a70a3_Package>*);
inline void _1e7209d8c_initCaller(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e720a068_end(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e720a244_serializeHead(jule::Ptr<_1e7205bbd_ObjectCoder>);
inline void _1e720a420_Serialize(jule::Ptr<_1e7205bbd_ObjectCoder>);
struct _1e7205bbd_ObjectCoder {
	jule::Str _field_Obj;
	jule::Slice<jule::Str> _field_resultDecls;
	jule::Str _field_anyObj;
	jule::Ptr<_1e65154a6_IR> _field_ir;
	_1e719ae0a_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1e717141e_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1e554dc82_TypeKind>> _field_anyTypeMap;
	jule::Ptr<_1e71554d0_exprCoder> _field_ec;
	jule::Ptr<_1e714c83a_scopeCoder> _field_sc;
	jule::Ptr<_1e720c1be_typeCoder> _field_tc;
	jule::Ptr<_1e7164643_deriveCoder> _field_dc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	

	_1e7205bbd_ObjectCoder(void) = default;


};
inline __jule_tuple_i64__jule_tuple_bool _1e9ca203b_parseInteger(_1e724eb7e_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1e9caa110_parseInteger(_1e724eb7e_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1e7250476_getData(_1e724eb7e_argParser*);
inline jule::VoidExceptional _1e72506b8_processFlag(_1e724eb7e_argParser*, jule::Trait<_1e6ead7ab_CommonFlag>*);
inline jule::VoidExceptional _1e725093d_singleDash(_1e724eb7e_argParser*, jule::Str*);
inline jule::VoidExceptional _1e7250bb3_doubleDash(_1e724eb7e_argParser*, jule::Str*);
inline jule::VoidExceptional _1e7250d8e_tryArg(_1e724eb7e_argParser*);
inline jule::VoidExceptional _1e725106a_parse(_1e724eb7e_argParser*);
struct _1e724eb7e_argParser {
	_1e724c4a6_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	

	_1e724eb7e_argParser(void) = default;


};
inline void _24118d546_Free(void*);
inline jule::Str _2411a2c75_BytePtrToStr(jule::U8*);
inline jule::I64 _2403d57b1_GetLastErrno(void);
inline jule::I64 _2411c0be9_Fcntl(jule::I64, jule::I64, jule::I64);
inline jule::I64 _2411c103a_Stat(jule::U8*, struct stat*);
inline jule::I64 _2411c1425_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _2411c1766_Getcwd(jule::U8*, jule::U64);
inline DIR* _2411c1c3e_Opendir(jule::U8*);
inline struct dirent* _2411c1ed6_Readdir(DIR*);
inline jule::I64 _2411c227d_Closedir(DIR*);
inline jule::I64 _2411c2b0d_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _2411c2da5_Rmdir(jule::U8*);
inline jule::I64 _2411c314c_Unlink(jule::U8*);
inline jule::I64 _2411dd84e_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _2411ddc39_Read(jule::I64, void*, jule::U64);
inline jule::I64 _2411de0ad_Close(jule::I64);
inline jule::I64 _2411de498_Write(jule::I64, void*, jule::U64);
inline void _2411de6a7_Exit(jule::I64);
inline jule::I64 _24128263a_getLastOsError(void);
inline jule::Slice<jule::Str> _24128311e_Args(void);
inline jule::Exceptional<jule::Str> _241283592_WorkingDir(void);
inline jule::Exceptional<jule::Str> _241284494_getwd(void);
inline jule::Bool _242c90d17_IsLetter(jule::I32);
inline jule::Bool _241ad2a4a_is16(jule::Slice<_241ad0e88_Range16>, jule::U16);
inline jule::Bool _241ad2d8b_is32(jule::Slice<_241ad140b_Range32>, jule::U32);
inline jule::Bool _241ad362d_isExcludingLatin(jule::Ptr<_241ad187e_RangeTable>, jule::I32);
inline jule::Bool _241ad38c5_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _242ea857e_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _242ea889d_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _242ea8b45_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _242ea98e3_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _242ea9c34_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _242eaa273_RuneCountStr(jule::Str);
inline jule::Bool _242eaa51a_RuneStart(jule::U8);
inline jule::Slice<jule::U8> _242ecb607_Stobs(jule::Str*);
inline void _242ed1be5_PushToStrBuffer(jule::Str*, jule::Slice<jule::U8>);
inline jule::I64 _242ed20ad_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _242ed21e0_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _242ed2322_FindByteStr(jule::Str*, jule::U8);
inline jule::I64 _242ed2465_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _242eaebe5_Repeat(jule::Str, jule::I64);
inline jule::Bool _242eb30a0_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _242eae332_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _242ed25ca_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _242ed2883_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _242ed2c6d_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _242ed35a9_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _242ed3961_FindLast(jule::Str, jule::Str);
inline jule::I64 _242ed9e84_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I64 _242eda7c0_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _242edb5d4_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _242edbd10_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _242edc151_Contains(jule::Str, jule::Str);
inline jule::Bool _242edcb24_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _242edce65_Count(jule::Str, jule::Str);
inline jule::Str _242edd3e9_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _242eda45c_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _242ede4a5_TrimLeft(jule::Str, jule::Str);
inline void _242ede75d_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _242edede0_Trim(jule::Str, jule::Str);
inline jule::Str _242ee0231_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _2412e0e29_Clean(jule::Str);
inline jule::Str _241310762_FromSlash(jule::Str);
inline jule::Str _241312d08_Join(jule::Slice<jule::Str>);
inline jule::Str _2413142c1_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _2412cc531_Abs(jule::Str);
inline jule::Str _2412e85c4_Base(jule::Str);
inline jule::Str _241316867_Dir(jule::Str);
inline jule::Str _2412bbc3a_VolumeName(jule::Str);
inline jule::Bool _242ee0572_IsPathSep(jule::U8);
inline jule::Bool _242ee06a4_IsAbs(jule::Str);
inline jule::I64 _242ee07d6_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _242ee0918_abs(jule::Str);
inline jule::Str _242ee0a4a_join(jule::Slice<jule::Str>);
inline jule::I64 _24040ebb4_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _242d3dc61_AtoiBp(jule::U8*, jule::I64);
inline jule::Str _242d72c0c_Itoa(jule::I64);
inline jule::Str _242d72ee8_Utoa(jule::U64);
inline jule::Slice<char*> _242d754b2_strSliceToCstrSlice(jule::Slice<jule::Str>*);
inline jule::I64 _242d75803_execvp(jule::Str*, jule::Slice<jule::Str>*);
inline jule::VoidExceptional _242d75a12_setenv(jule::Slice<jule::Str>*);
inline jule::I64 _242d768c0_processErrorFromCode(jule::I64);
inline jule::I64 _242d76b12_getLastProcessError(void);
inline void _242d773b5_Exit(jule::I64);
inline jule::Str _242d775b3_Executable(void);
inline jule::Bool _2430523d6_IsStdHeaderPath(jule::Str);
inline jule::Bool _243052606_IsValidHeaderExt(jule::Str);
inline jule::Bool _24305289d_IsValidCppExt(jule::Str);
inline jule::Str _24305e8ee_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _24305ebda_argToStr(jule::Any);
inline jule::I64 _24305ee82_findNextFmt(jule::Str);
inline jule::Str _243060317_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _243061390_IsTopDirective(jule::Str);
inline jule::Bool _2430627c0_IsWindows(jule::Str);
inline jule::Bool _243062a78_IsDarwin(jule::Str);
inline jule::Bool _243062d20_IsLinux(jule::Str);
inline jule::Bool _24306313e_IsI386(jule::Str);
inline jule::Bool _2430633d6_IsAmd64(jule::Str);
inline jule::Bool _24306367d_IsArm64(jule::Str);
inline jule::Bool _243063925_IsUnix(jule::Str);
inline jule::Bool _243063c99_Is32Bit(jule::Str);
inline jule::Bool _243064041_Is64Bit(jule::Str);
inline void _242d3763e_init(void);
inline jule::Bool _20d155ca0_IsUnaryOp(jule::Str);
inline jule::Bool _20d15608b_IsBinOp(jule::Str);
inline jule::Bool _20d156652_IsStr(jule::Str);
inline jule::Bool _20d1568e9_IsRawStr(jule::Str);
inline jule::Bool _20d156b91_IsRune(jule::Str);
inline jule::Bool _20d1572ac_IsBool(jule::Str);
inline jule::Bool _20d157554_IsFloat(jule::Str);
inline jule::Bool _20d1577eb_IsNum(jule::Str);
inline jule::Bool _20d157d3a_IsIgnoreIdent(jule::Str);
inline jule::Bool _20d1580d2_IsAnonIdent(jule::Str);
inline jule::Bool _20d158621_IsSpace(jule::I32);
inline jule::Bool _20d158a72_IsLetter(jule::I32);
inline jule::Bool _20d1590b1_IsDecimal(jule::U8);
inline jule::Bool _20d159358_IsBinary(jule::U8);
inline jule::Bool _20d159600_IsOctal(jule::U8);
inline jule::Bool _20d159897_IsHex(jule::U8);
inline jule::Bool _20d159b3e_IsAssign(jule::U64);
inline jule::Bool _20d159dd6_IsPostfixOp(jule::Str);
inline jule::Bool _20d15a17d_IsAssignOp(jule::Str);
inline jule::Ptr<_20d15a931_File> _20d15be60_NewFileSet(jule::Str);
inline _24305e4ae_Log _20d15d703_makeErr(jule::I64, jule::I64, jule::Ptr<_20d15a931_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20d15da88_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _20d15ddc9_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _20d15e25e_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _20d15e5a0_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _20d15e8e1_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _20d15ec32_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _20d160183_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _20d16042a_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _20d1606c2_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _20d160a13_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _20d160d54_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _20d161195_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _20d1614d6_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _20d161827_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _20d161c78_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _20d162020_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _20d162361_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _20d162608_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _20d1628c2_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _20d162a7b_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _20d162d12_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_24305e4ae_Log> _20d16780b_Lex(jule::Ptr<_20d15a931_File>, jule::I64);
inline jule::I64 _1e53dd1c6_LeadingZeros64(jule::U64);
inline jule::I64 _1e53de10b_TrailingZeros(jule::U64);
inline jule::I64 _1e53dea02_TrailingZeros32(jule::U32);
inline jule::I64 _1e53dec99_TrailingZeros64(jule::U64);
inline jule::I64 _1e53e53a9_Len32(jule::U32);
inline jule::I64 _1e53e5651_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1e53e6311_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1e53e7994_Mul64(jule::U64, jule::U64);
inline jule::U32 _1e4de310a_F32Bits(jule::F32);
inline jule::F32 _1e4de33e6_F32FromBits(jule::U32);
inline jule::U64 _1e4de368d_F64Bits(jule::F64);
inline jule::F64 _1e4de39ac_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _1e4de5e98_Frexp(jule::F64);
inline jule::F64 _1e53ebbb8_NaN(void);
inline jule::Bool _1e53ebcea_IsNaN(jule::F64);
inline jule::F64 _1e53ebe2c_Inf(jule::I64);
inline jule::Bool _1e53ec05e_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _1e53ec191_normalize(jule::F64);
inline jule::F64 _1e53ed060_Log(jule::F64);
inline jule::F64 _1e53ed67b_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1e540242c_Modf(jule::F64);
inline jule::F64 _1e540286c_Log2(jule::F64);
inline jule::Str _1e4d74476_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1e54293cc_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1e542950e_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1e5429003_floatInfo*);
inline jule::Slice<jule::U8> _1e5429641_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1e54291e0_decimalSlice, jule::I64, jule::U8);
inline void _1e5429773_roundShortest(_1e54395a7_decimal*, jule::U64, jule::I64, _1e5429003_floatInfo*);
inline jule::Slice<jule::U8> _1e5429971_fmtE(jule::Slice<jule::U8>, jule::Bool, _1e54291e0_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1e5429e05_fmtF(jule::Slice<jule::U8>, jule::Bool, _1e54291e0_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1e542a510_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1e5429003_floatInfo*);
inline jule::Slice<jule::U8> _1e542ab81_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1e5429003_floatInfo*);
inline jule::I64 _1e542aec2_min(jule::I64, jule::I64);
inline jule::I64 _1e542b313_max(jule::I64, jule::I64);
inline jule::U8 _1e542be29_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__20e3c3aee_ConvError _1e542c358_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1e542c743_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1e542cba5_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _1e542d7bb_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1e542dbb7_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1e54308cd_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1e5430bca_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1e5430e72_readFloat(jule::Str);
inline __jule_tuple_f64__jule_tuple_bool _1e5432902_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1e5432cdc_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__20e3c3aee_ConvError _1e54333b4_atofHex(jule::Str, _1e5429003_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__20e3c3aee_ConvError _1e543376b_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__20e3c3aee_ConvError _1e5433a13_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__20e3c3aee_ConvError _1e5433d54_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1e5434195_ParseFloat(jule::Str, jule::I64);
inline void _1e5434915_ryuFtoaFixed32(_1e54291e0_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _1e5434d55_ryuFtoaFixed64(_1e54291e0_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _1e543563b_formatDecimal(_1e54291e0_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1e5435aae_ryuFtoaShortest(_1e54291e0_decimalSlice*, jule::U64, jule::I64, _1e5429003_floatInfo*);
inline jule::I64 _1e5435d56_mulByLog2Log10(jule::I64);
inline jule::I64 _1e54360ed_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1e54364d8_computeBounds(jule::U64, jule::I64, _1e5429003_floatInfo*);
inline void _1e5436a7c_ryuDigits(_1e54291e0_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1e5437165_ryuDigits32(_1e54291e0_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1e5437550_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1e543793a_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1e5437c7b_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _1e5438023_divmod1e9(jule::U64);
inline void _1e543ac90_trim(_1e54395a7_decimal*);
inline void _1e543b048_rightShift(_1e54395a7_decimal*, jule::U64);
inline jule::Bool _1e543b4aa_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1e543b730_leftShift(_1e54395a7_decimal*, jule::U64);
inline jule::Bool _1e543ba71_shouldRoundUp(_1e54395a7_decimal*, jule::I64);
inline jule::Str _1e543d18d_FmtUint(jule::U64, jule::I64);
inline jule::Str _1e543d523_FmtInt(jule::I64, jule::I64);
inline jule::Str _1e543d7ba_Itoa(jule::I64);
inline jule::Str _1e543dad9_small(jule::I64);
inline jule::Bool _1e543dd81_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _1e543e3ae_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1e4d57ee8_RealKindOf(jule::Str);
inline jule::I64 _1e4d5845a_BitsizeOf(jule::Str);
inline jule::Str _1e4d17e42_IntFromBits(jule::I64);
inline jule::Str _1e4d37a99_UintFromBits(jule::I64);
inline jule::Str _1e4d1ec29_FloatFromBits(jule::I64);
inline jule::Bool _1e4d16eb8_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1e4ca4241_BitsizeOfFloat(jule::F64);
inline jule::I64 _1e4ca4373_BitsizeOfInt(jule::I64);
inline jule::I64 _1e4d5c3c6_BitsizeOfUint(jule::U64);
inline void _1e4d5c508_UpdateTarget(void);
inline void _1e4d29805_init(void);
inline jule::F64 _1e5441e94_Min(jule::Str);
inline jule::F64 _1e54420c6_Max(jule::Str);
inline jule::Bool _1e54423d4_IsI8Compatible(jule::Str);
inline jule::Bool _1e5442516_IsI16Compatible(jule::Str);
inline jule::Bool _1e5442648_IsI32Compatible(jule::Str);
inline jule::Bool _1e544277a_IsI64Compatible(jule::Str);
inline jule::Bool _1e54428ac_IsU8Compatible(jule::Str);
inline jule::Bool _1e54429de_IsU16Compatible(jule::Str);
inline jule::Bool _1e5442b21_IsU32Compatible(jule::Str);
inline jule::Bool _1e5442c53_IsU64Compatible(jule::Str);
inline jule::Bool _1e5442d85_IsF32Compatible(jule::Str);
inline jule::Bool _1e5442eb7_IsF64Compatible(jule::Str);
inline jule::Bool _1e54430e9_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1e544322b_IsI16Greater(jule::Str);
inline jule::Bool _1e544335d_IsI32Greater(jule::Str);
inline jule::Bool _1e5443517_IsI64Greater(jule::Str);
inline jule::Bool _1e54437ae_IsU16Greater(jule::Str);
inline jule::Bool _1e5443c10_IsU32Greater(jule::Str);
inline jule::Bool _1e5443ea7_IsU64Greater(jule::Str);
inline jule::Bool _1e544424e_IsF32Greater(jule::Str);
inline jule::Bool _1e54444e6_IsF64Greater(jule::Str);
inline jule::Bool _1e5444837_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1e544586b_IsSigInt(jule::Str);
inline jule::Bool _1e5445b57_IsUnsigInt(jule::Str);
inline jule::Bool _1e5445dee_IsInt(jule::Str);
inline jule::Bool _1e544621d_IsFloat(jule::Str);
inline jule::Bool _1e54464b5_IsNum(jule::Str);
inline jule::Bool _1e544675c_IsSigNum(jule::Str);
inline void _1e54501e4_lshiftUnsig(_1e54469c1_Const*, _1e54469c1_Const*);
inline void _1e54504e1_rshiftUnsig(_1e54469c1_Const*, _1e54469c1_Const*);
inline jule::Bool _1e54e37d7_IsAscii(jule::I32);
inline jule::I32 _1e54e395d_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1e550a997_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1e550ac94_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _1e550b03b_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1e550b349_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::Slice<jule::U8> _1e550b68a_strEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::I64 _1e6213061_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64*);
inline jule::Slice<jule::U8> _1e6218b5a_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1e6218e13_FmtByDefault(jule::Str*, jule::Any*);
inline void _1e62192dc_applyFmtByDefault(jule::Str*, jule::I64*, jule::Slice<jule::Any>*);
inline void _1e62196d8_applyFmt(jule::Slice<jule::U8>*, jule::Str*, jule::I64*, jule::Slice<jule::Any>*);
inline jule::Str _1e62199e6_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _1e621a310_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e5465c87_parameterUsesGenerics(jule::Ptr<_1e5462ca6_ParamIns>*, jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>>*);
inline jule::Ptr<_1e5553160_TypeSymbol> _1e54682a6_buildType(jule::Ptr<_1e4773826_TypeDecl>);
inline jule::Ptr<_1e5523d78_Value> _1e5468592_buildExpr(jule::Ptr<_1e4777d47_Expr>);
inline jule::Ptr<_1e554d08e_TypeAlias> _1e5468839_buildTypeAlias(jule::Ptr<_1e4789ae5_TypeAliasDecl>);
inline jule::Ptr<_1e4764075_Field> _1e5468b58_buildField(jule::Ptr<_1e478d28b_FieldDecl>);
inline jule::Slice<jule::Ptr<_1e4764075_Field>> _1e5468e00_buildFields(jule::Slice<jule::Ptr<_1e478d28b_FieldDecl>>*);
inline jule::Ptr<_1e4790018_Struct> _1e5469197_buildStruct(jule::Ptr<_1e478da3e_StructDecl>);
inline jule::Ptr<_1e545e687_Param> _1e546943e_buildParam(jule::Ptr<_1e4783e85_ParamDecl>);
inline jule::Slice<jule::Ptr<_1e545e687_Param>> _1e54697b3_buildParams(jule::Slice<jule::Ptr<_1e4783e85_ParamDecl>>*);
inline jule::Ptr<_1e545deb1_RetType> _1e5469a5a_buildRetType(jule::Ptr<_1e4776939_RetTypeDecl>);
inline jule::Ptr<_1e5460ec4_Fn> _1e5469d02_buildFn(jule::Ptr<_1e47852a5_FnDecl>);
inline jule::Slice<jule::Ptr<_1e5460ec4_Fn>> _1e546a099_buildMethods(jule::Slice<jule::Ptr<_1e47852a5_FnDecl>>*);
inline jule::Ptr<_1e5472dc6_Trait> _1e546a341_buildTrait(jule::Ptr<_1e478e149_TraitDecl>);
inline jule::Ptr<_1e5474526_EnumItem> _1e546a5d8_buildEnumItem(jule::Ptr<_1e478b454_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1e5474526_EnumItem>> _1e546a880_buildEnumItems(jule::Slice<jule::Ptr<_1e478b454_EnumItemDecl>>*);
inline jule::Ptr<_1e547501b_Enum> _1e546ab27_buildEnum(jule::Ptr<_1e478be7c_EnumDecl>);
inline jule::Ptr<_1e5476050_TypeEnumItem> _1e546b078_buildTypeEnumItem(jule::Ptr<_1e478c983_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1e5476050_TypeEnumItem>> _1e546b320_buildTypeEnumItems(jule::Slice<jule::Ptr<_1e478c983_TypeEnumItemDecl>>*);
inline jule::Ptr<_1e5476616_TypeEnum> _1e546b5b7_buildTypeEnum(jule::Ptr<_1e478d08d_TypeEnumDecl>);
inline jule::Ptr<_1e54ca291_Var> _1e546b85e_buildVar(jule::Ptr<_1e4786284_VarDecl>);
inline jule::Slice<jule::Ptr<_1e54ca291_Var>> _1e546bb06_buildVars(jule::Slice<jule::Ptr<_1e4786284_VarDecl>>);
inline jule::Ptr<_1e547aa7c_Impl> _1e546bd9d_buildImpl(jule::Ptr<_1e478e754_Impl>);
inline jule::Bool _1e5479e22_matchConstraint(jule::Str*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e547a20d_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1e548c4a6_scopeChecker> _1e547cb17_newScopeCheckerBase(jule::Ptr<_1e54ac295_Sema>*, jule::Ptr<_1e5463b75_FnIns>);
inline jule::Ptr<_1e548c4a6_scopeChecker> _1e547ce9c_newScopeChecker(jule::Ptr<_1e54ac295_Sema>*, jule::Ptr<_1e5463b75_FnIns>);
inline jule::Ptr<_1e548b3ea_scopeLabel> _1e547d2dd_findLabelParent(jule::Str, jule::Ptr<_1e548c4a6_scopeChecker>);
inline jule::Bool _1e547d673_modelIsGotoScope(jule::Any, jule::Ptr<_1e5480ad7_Scope>*);
inline jule::Bool _1e547d9b4_stmtIsGotoScope(jule::Any*, jule::Ptr<_1e5480ad7_Scope>*);
inline jule::I64 _1e547dd05_countMatchType(jule::Ptr<_1e5484833_Match>*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Slice<jule::Ptr<_1e5522d00_Data>> _1e547e09c_getDatasFromTupleData(jule::Ptr<_1e5522d00_Data>*);
inline jule::Bool _1e547e8d8_checkMut(jule::Ptr<_1e54ac295_Sema>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>, jule::Ptr<_20d155596_Token>);
inline jule::Bool _1e547ed6c_checkAssign(jule::Ptr<_1e54ac295_Sema>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>, jule::Ptr<_20d155596_Token>);
inline jule::Bool _1e5480114_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1e54803ab_isValidStForNextSt(jule::Any*);
inline jule::Bool _1e5480653_stmtIsDef(jule::Any*);
inline jule::Ptr<_1e54ca291_Var> _1e54a1861_findVarInPackage(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1e554d08e_TypeAlias> _1e54a1c90_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1e4790018_Struct> _1e54a217a_findStructInPackage(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5460ec4_Fn> _1e54a25dc_findFnInPackage(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1e5472dc6_Trait> _1e54a28ea_findTraitInPackage(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1e547501b_Enum> _1e54a2c3b_findEnumInPackage(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1e5476616_TypeEnum> _1e54a307c_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>*, jule::Str);
inline jule::Any _1e54a3577_defByIdentPackage(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1e54a967c_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1e54aa45d_isValidModelForRef(jule::Any*);
inline _24305e4ae_Log _1e54aa87b_compilerErr(jule::Ptr<_20d155596_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e54aabbc_impIsLookupable(jule::Ptr<_1e54a4149_ImportInfo>*, jule::Str);
inline void _1e54aaeb9_appendRetVars(jule::Slice<jule::Ptr<_1e54ca291_Var>>*, jule::Ptr<_1e5463b75_FnIns>*);
inline void _1e54ab272_appendParamVars(jule::Slice<jule::Ptr<_1e54ca291_Var>>*, jule::Ptr<_1e5463b75_FnIns>*);
inline void _1e54ab54c_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>*, jule::Ptr<_1e5463b75_FnIns>*);
inline jule::Ptr<_1e551cec6_SymbolTable> _1e54ab89e_findFile(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>*, jule::Ptr<_20d15a931_File>*);
inline void _1e54abd11_pushSugggestion(_24305e4ae_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e54e3c05_traitHasReferenceReceiver(jule::Ptr<_1e5472dc6_Trait>*);
inline jule::Bool _1e54e3d37_floatAssignable(jule::Str, jule::Ptr<_1e5522d00_Data>*);
inline jule::Bool _1e550a711_sigAssignable(jule::Str, jule::Ptr<_1e5522d00_Data>*);
inline jule::Bool _1e550a843_unsigAssignable(jule::Str, jule::Ptr<_1e5522d00_Data>*);
inline jule::Bool _1e550b8dd_intAssignable(jule::Str, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e554dc82_TypeKind> _1e551c04c_lenKind(void);
inline jule::Ptr<_1e474057e_Directive> _1e5548430_findDirective(jule::Slice<jule::Ptr<_1e474057e_Directive>>*, jule::Str);
inline jule::Any _1e55487b5_findBuiltinsImport(jule::Str, jule::Ptr<_1e54a4149_ImportInfo>);
inline void _1e55489c4_fitBitsize(jule::Ptr<_1e5522d00_Data>*);
inline void _1e5548cc1_makeStructLitAlloc(jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5453912_StructLitExprModel>*);
inline jule::Ptr<_1e54ca291_Var> _1e5549112_buildErrorVar(jule::Ptr<_1e5480ad7_Scope>*, jule::Ptr<_1e477bd29_FnCallExpr>*);
inline jule::Any _1e5549453_findBuiltinsSema(jule::Str, jule::Ptr<_1e54ac295_Sema>);
inline jule::Bool _1e55496ea_isOkForShifting(jule::Ptr<_1e5522d00_Data>*);
inline jule::Bool _1e5549aa2_isInstancedStruct(jule::Ptr<_1e47903e2_StructIns>);
inline jule::Bool _1e5549e15_isPtrArithmeticCompatible(jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*);
inline void _1e554a157_applyCastKindModel(jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e554dc82_TypeKind>*);
inline void _1e554a410_applyCastKind(jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Ptr<_1e5522d00_Data> _1e554a60d_buildVoidData(void);
inline jule::Str _1e554a8c7_checkDataForIntegerIndexing(jule::Ptr<_1e5522d00_Data>*);
inline void _1e554ab91_applyCastModelByEnum(jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e547501b_Enum>);
inline void _1e554ae49_castConstByType(jule::Str*, jule::Ptr<_1e5522d00_Data>*);
inline void _1e554b455_updateModelToGenericIns(jule::Any*, jule::Ptr<_1e5463b75_FnIns>*);
inline jule::Bool _1e554b697_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1e477453b_SubIdentTypeDecl>*);
inline jule::Bool _1e556598b_kindUsesGenerics(jule::Ptr<_1e554dc82_TypeKind>*, jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>>*);
inline jule::Bool _1e5565d21_hasDirective(jule::Slice<jule::Ptr<_1e474057e_Directive>>*, jule::Str);
inline jule::Bool _1e55660b8_canGetPtr(jule::Ptr<_1e5522d00_Data>*);
inline jule::Bool _1e55663d7_isValidForSptrType(jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e556667e_isValidForRef(jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Bool _1e5566948_isBuiltinStrConvertable(jule::Ptr<_1e554dc82_TypeKind>*);
inline jule::Str _1e5566bbd_buildLinkPathByTokens(jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e55539ce_Prim> _1e5567075_buildPrimType(jule::Str);
inline jule::Ptr<_1e4790018_Struct> _1e556731c_getStructFromKind(jule::Ptr<_1e554dc82_TypeKind>);
inline jule::Bool _1e55675b4_isPrim(jule::Str);
inline void _1e556786c_applyImplicitCast(jule::Ptr<_1e554dc82_TypeKind>*, jule::Ptr<_1e5522d00_Data>*);
inline __jule_tuple_x_1e551cec6_SymbolTable__jule_tuple_s_24305e4ae_Log _1e556a8d6_buildSymbols(jule::Ptr<_1e473e391_Ast>*, jule::Trait<_1e54a14cb_Importer>*, jule::Ptr<_1e546c3ed_symbolBuilder>);
inline __jule_tuple_x_1e54a70a3_Package__jule_tuple_s_24305e4ae_Log _1e556ad15_analyzePackage(jule::Slice<jule::Ptr<_1e473e391_Ast>>*, jule::Trait<_1e54a14cb_Importer>*, jule::I64*);
inline __jule_tuple_x_1e54a70a3_Package__jule_tuple_s_24305e4ae_Log _1e556b200_AnalyzePackage(jule::Slice<jule::Ptr<_1e473e391_Ast>>, jule::Trait<_1e54a14cb_Importer>, jule::I64);
inline jule::Ptr<_1e5463b75_FnIns> _1e55772b6_findBuiltinFn(jule::Str);
inline jule::Ptr<_1e554d08e_TypeAlias> _1e5578e00_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1e557d7c8_findBuiltinDef(jule::Str);
inline jule::Any _1e557c981_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1e557cab3_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1e5574a44_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1e5574b76_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1e5522d00_Data> _1e621a442_builtinCallerCommonPlain(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e621a6ea_builtinCallerCommon(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e621aad5_builtinCallerCommonMut(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e621ae26_builtinCallerError(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*);
inline jule::Ptr<_1e5522d00_Data> _1e621b311_builtinCallerOut(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e621b6eb_builtinCallerOutln(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e621bad6_builtinCallerNew(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e621bec1_builtinCallerPanic(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e621c5dc_builtinCallerMake(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e621c9c7_builtinCallerAppend(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e621ce5b_callerCopySlice(jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e621d3e0_callerCopyStr(jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e621d7ca_builtinCallerCopy(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e621db1b_callerLenSlice(jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e621de5c_callerLenMap(jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e621e29d_callerLenArr(jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e621e5de_callerLenStr(jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e621e9c9_builtinCallerLen(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e621ed1a_callerCapSlice(jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e622015b_callerCapStr(jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e6220546_builtinCallerCap(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e62209ca_callerDeleteMap(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e6220db5_builtinCallerDelete(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e62212a0_builtinCallerClone(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e6221866_builtinCallerAssert(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e6221bc9_builtinCallerStdMemSizeOf(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e62220e7_builtinCallerStdMemAlignOf(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e6222515_builtinCallerStdMemFree(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e6222944_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e6222d62_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e62232a2_builtinCallerStdDebugOut(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Ptr<_1e5522d00_Data> _1e622368c_builtinCallerStdDebugOutln(jule::Ptr<_1e552486d_Eval>*, jule::Ptr<_1e477bd29_FnCallExpr>*, jule::Ptr<_1e5522d00_Data>*);
inline jule::Bool _1e4bd57e3_FindModuleFile(jule::Slice<jule::Ptr<_24050355a_DirEntry>>*);
inline jule::Str _1e4be5cdc_FindModuleFileDeep(jule::Str);
inline jule::Slice<_24305e4ae_Log> _1e4be5ec9_CheckModuleFile(jule::Str);
inline jule::Ptr<_1e68db838_FileInfo> _1e68de440_ParseFile(jule::Ptr<_20d15a931_File>);
inline __jule_tuple_x_1e473e391_Ast__jule_tuple_s_24305e4ae_Log _1e6935d8d_parseFileset(jule::Ptr<_20d15a931_File>);
inline jule::Ptr<_1e47837ae_ScopeTree> _1e69367ea_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1e6936aa3_isSt(jule::Ptr<_20d155596_Token>, jule::Ptr<_20d155596_Token>);
inline jule::Bool _1e6936de4_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1e6937279_nextStPos(jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::I64);
inline __jule_tuple_sx_20d155596_Token__jule_tuple_bool _1e69375ba_skipSt(jule::I64*, jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Slice<jule::Ptr<_1e69378b7_stmt>> _1e6937c5d_splitStmts(jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Bool _1e694e44a_isTypeOp(jule::Str*);
inline jule::Bool _1e694e736_isTypeRange(jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Slice<jule::Ptr<_20d155596_Token>> _1e694e9cd_getBlockExpr(jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline __jule_tuple_sx_20d155596_Token__jule_tuple_sx_20d155596_Token _1e694ed63_splitDelim(jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::U64);
inline jule::I64 _1e695010a_findLowestPrecOp(jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Ptr<_1e4779a08_IdentExpr> _1e69503a2_buildIdentExpr(jule::Ptr<_20d155596_Token>*);
inline __jule_tuple_sx_20d155596_Token__jule_tuple_int _1e6950649_getRangeExprTokens(jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Bool _1e69513a3_checkAssignTokens(jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline _24305e4ae_Log _1e69525c4_makeErr(jule::I64, jule::I64, jule::Ptr<_20d15a931_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_20d155596_Token>> _1e6952a9c_range(jule::I64*, jule::Str, jule::Str, jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline __jule_tuple_sx_20d155596_Token__jule_tuple_sx_20d155596_Token _1e6952d44_rangeLast(jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline __jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log _1e695322e_partsKind(jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::Str, jule::Bool);
inline __jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log _1e6953619_parts(jule::Slice<jule::Ptr<_20d155596_Token>>*, jule::U64, jule::Bool);
inline jule::Str _1e69538b1_getCloseKindOfBrace(jule::Str);
inline _24305e4ae_Log _1e6953c9b_compilerErr(jule::Ptr<_20d155596_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1e69541ca_pushSuggestion(_24305e4ae_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1e6954472_tokstoa(jule::Slice<jule::Ptr<_20d155596_Token>>*);
inline jule::Bool _1e69644d7_isPub(jule::Str*);
inline jule::Ptr<_1e4773826_TypeDecl> _1e6964dab_buildVoidType(void);
inline jule::Ptr<_1e4773826_TypeDecl> _1e69650ba_buildPrimType(jule::Ptr<_20d155596_Token>);
inline __jule_tuple_bool__jule_tuple_bool _1e62c3a8e_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1e62d5034_checkArch(jule::Str);
inline jule::Bool _1e62bdcba_isPassFileAnnotation(jule::Str);
inline void _1e62d88c8_setOsVars(jule::Slice<jule::Str>*);
inline void _1e62d8b2b_setArchVars(jule::Slice<jule::Str>*);
inline void _1e62d8dd4_initVars(jule::Slice<jule::Str>*, _1e62d85ba_CompileInfo*);
inline jule::Slice<jule::U8> _1e4beec5d_readBuff(jule::Str);
inline _24305e4ae_Log _1e638129a_flatCompilerErr(jule::Str);
inline void _1e6734dbd_pushPasses(jule::Ptr<_1e54a70a3_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1e673883e_getAllUniquePasses(jule::Ptr<_1e54a70a3_Package>*, jule::Slice<jule::Ptr<_1e54a4149_ImportInfo>>);
inline _1e62d85ba_CompileInfo _1e67a28a8_buildCompileInfo(void);
inline void _1e6a7276b_EliminateDefines(jule::Ptr<_1e65154a6_IR>*);
inline jule::Ptr<_1e474057e_Directive> _1e6a72b01_findDirective(jule::Slice<jule::Ptr<_1e474057e_Directive>>*, jule::Str);
inline jule::Bool _1e6a72e42_hasDirective(jule::Slice<jule::Ptr<_1e474057e_Directive>>*, jule::Str);
inline void _1e6a76a8e_eliminateDeadCodeOfScope(jule::Ptr<_1e5480ad7_Scope>);
inline void _1e6a76d25_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1e5460ec4_Fn>>*);
inline void _1e6a77067_eliminateFunctionsScopePackage(jule::Ptr<_1e54a70a3_Package>*);
inline void _1e6a7730e_eliminateScopePackage(jule::Ptr<_1e54a70a3_Package>*);
inline void _1e6a7751d_EliminateScopes(jule::Ptr<_1e65154a6_IR>*);
inline jule::Bool _20d5b5561_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _20d5b8476_isConstantValidConditionalCase(jule::Ptr<_1e5480ed3_If>*);
inline jule::Bool _20d5bdc1d_isUnreachableExpr(jule::Any*);
inline jule::Bool _20d58d6c1_isConstantValidMatchCase(jule::Ptr<_1e548537d_Case>*);
inline jule::Bool _20d5d2ec9_isUnreachableConditionalCase(jule::Ptr<_1e5480ed3_If>*);
inline jule::Bool _2269d5418_isUnreachableMatchCase(jule::Ptr<_1e548537d_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1e622465a_checkForBitShiftOpt(jule::Ptr<_1e54527e0_OperandExprModel>*, jule::Ptr<_1e54527e0_OperandExprModel>*);
inline void _1e6224968_PushOptLevel(jule::I64);
inline void _1e6a048da_detectEnabled(void);
inline void _1e6a9577d_Throw(jule::Str);
inline jule::U64 _1e7200d3e_unix(void);
inline jule::U64 _1e720114c_unixYearToSeconds(jule::U64, jule::Bool*);
inline jule::U64 _1e72014d2_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1e7152d90_isCopyOptimizable(jule::Ptr<_1e5522d00_Data>*);
inline jule::Bool _1e7153225_isIterCopyOptimizable(jule::Ptr<_1e5522d00_Data>*, jule::Ptr<_1e54ca291_Var>*);
inline jule::Str _1e71621e0_decomposeCommonEsq(jule::U8);
inline jule::Str _1e71624cb_sbtoa(jule::U8);
inline jule::Str _1e7162773_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1e7162a92_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1e7162da0_ftoa(jule::F64, jule::I64);
inline jule::Str _1e7163147_itoa(jule::I64);
inline jule::Str _1e71633de_utoa(jule::U64);
inline jule::Bool _1e7163796_isForwarded(jule::Ptr<_1e5480ad7_Scope>*);
inline jule::Bool _1e7163a60_isBuiltinCallHasDebuginf(jule::Ptr<_1e5454b22_FnCallExprModel>*);
inline jule::Bool _1e7163c91_isExprComesFromBind(jule::Ptr<_1e5522d00_Data>*);
inline jule::Bool _1e7164038_isAny(jule::Ptr<_1e554dc82_TypeKind>*);
inline void _1e720a783_iterFiles(jule::Ptr<_1e54a70a3_Package>*, jule::Fn<void(jule::Ptr<_1e551cec6_SymbolTable>*)>);
inline jule::Str _1e720aa6e_concatAllParts(jule::Slice<jule::Ptr<_20d155596_Token>>);
inline jule::Ptr<_1e474057e_Directive> _1e72189a0_findDirective(jule::Slice<jule::Ptr<_1e474057e_Directive>>*, jule::Str);
inline jule::Bool _1e7218d35_hasDirective(jule::Slice<jule::Ptr<_1e474057e_Directive>>*, jule::Str);
inline jule::Bool _1e72190cc_shouldInitialized(jule::Ptr<_1e554dc82_TypeKind>*);
inline void _242d78bbe_printErrorMessage(jule::Str);
inline void _242d78d01_help(jule::Slice<jule::Str>*);
inline void _242d78e33_version(jule::Slice<jule::Str>*);
inline void _242d79065_toolDistos(void);
inline void _242d79197_toolDistarch(void);
inline void _242d792c9_tool(jule::Slice<jule::Str>*);
inline void _242d7940b_julenv(jule::Slice<jule::Str>*);
inline void _242d7964d_mod(jule::Slice<jule::Str>*);
inline jule::Bool _242d79780_processCommand(jule::Slice<jule::Str>*);
inline void _242d798b2_showInfo(void);
void entry_point(void);
inline void _1e6eedd3a_init(void);
inline jule::Ptr<_24042a4b5_File> _1e721b068_openOutput(jule::Str*);
inline void _1e704dd46_clearObjects(void);
inline void _1e721e654_compileIr(jule::Str, jule::Str);
inline jule::Bool _1e72305ee_isCppSourceFile(jule::Str);
inline void _1e72193a7_pushCompCmdClang(jule::Str*);
inline void _1e7240114_pushCompCmdGcc(jule::Str*);
inline __jule_tuple_str__jule_tuple_str _1e7244206_genCompileCmd(jule::Str, jule::Ptr<_1e65154a6_IR>*);
inline jule::Str _1e721c4dc_getCompilePath(void);
inline void _1e72265b2_applyTargetIndependentOptimizations(jule::Ptr<_1e65154a6_IR>*);
inline void _1e6d008a6_checkCompilerFlag(void);
inline void _1e721a2ed_checkTargetArch(jule::Str);
inline void _1e721a430_checkTargetOs(jule::Str);
inline void _1e725128a_checkTargetFlag(jule::Str*);
inline void _1e72513bc_checkOptFlag(jule::Str*);
inline void _1e7251730_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1e7251862_checkFlags(jule::Slice<jule::Str>*);
inline void _1e7251994_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1e65154a6_IR> _1e7251ac6_buildIr(jule::Slice<jule::Str>*);
inline void _1e7251c08_compileCommand(jule::Slice<jule::Str>*);


struct _1e54a14cb_ImporterMptrData {
	void(*_1e54a03dc_SetModPath)(jule::Trait<_1e54a14cb_Importer>, jule::Str);
	jule::Str(*_1e54a0640_GetModPath)(jule::Trait<_1e54a14cb_Importer>);
	jule::Str(*_1e54a094d_ModById)(jule::Trait<_1e54a14cb_Importer>, jule::I64);
	jule::Ptr<_1e54a4149_ImportInfo>(*_1e54a0c5b_GetImport)(jule::Trait<_1e54a14cb_Importer>, jule::Str);
	__jule_tuple_sx_1e473e391_Ast__jule_tuple_s_24305e4ae_Log(*_1e54a1113_ImportPackage)(jule::Trait<_1e54a14cb_Importer>, jule::Str, jule::Bool);
	void(*_1e54a1388_Imported)(jule::Trait<_1e54a14cb_Importer>, jule::Ptr<_1e54a4149_ImportInfo>);
};

struct _1e554d853_KindMptrData {
	jule::Str(*_1e554d402_Str)(jule::Trait<_1e554d853_Kind>);
	jule::Bool(*_1e554d710_Equal)(jule::Trait<_1e554d853_Kind>, jule::Ptr<_1e554dc82_TypeKind>);
};

struct _1e5569c04_LookupMptrData {
	jule::Ptr<_1e54a4149_ImportInfo>(*_1e5567dab_FindPackage)(jule::Trait<_1e5569c04_Lookup>, jule::Str);
	jule::Ptr<_1e54a4149_ImportInfo>(*_1e55681b9_SelectPackage)(jule::Trait<_1e5569c04_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)>);
	jule::Ptr<_1e54ca291_Var>(*_1e5568571_FindVar)(jule::Trait<_1e5569c04_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e554d08e_TypeAlias>(*_1e5568928_FindTypeAlias)(jule::Trait<_1e5569c04_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e4790018_Struct>(*_1e5568cd0_FindStruct)(jule::Trait<_1e5569c04_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e5460ec4_Fn>(*_1e5569187_FindFn)(jule::Trait<_1e5569c04_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e5472dc6_Trait>(*_1e5569495_FindTrait)(jule::Trait<_1e5569c04_Lookup>, jule::Str);
	jule::Ptr<_1e547501b_Enum>(*_1e55697a3_FindEnum)(jule::Trait<_1e5569c04_Lookup>, jule::Str);
	jule::Ptr<_1e5476616_TypeEnum>(*_1e5569ab1_FindTypeEnum)(jule::Trait<_1e5569c04_Lookup>, jule::Str);
};

struct _1e6ead7ab_CommonFlagMptrData {
	jule::Str(*_1e6ead679_Name)(jule::Trait<_1e6ead7ab_CommonFlag>);
	jule::I32(*_1e72294c7_Short)(jule::Trait<_1e6ead7ab_CommonFlag>);
	jule::Str(*_1e724aa26_What)(jule::Trait<_1e6ead7ab_CommonFlag>);
	void(*_1e724ab58_Reset)(jule::Trait<_1e6ead7ab_CommonFlag>);
};



inline void _1e54a03dc_SetModPath_0(jule::Trait<_1e54a14cb_Importer> _self_, jule::Str _1729_path) {
	_1e63e918c_SetModPath(_self_.safe_ptr<_1e685c028_JuleImporter>(), _1729_path);
}
inline jule::Str _1e54a0640_GetModPath_0(jule::Trait<_1e54a14cb_Importer> _self_) {
	return _1e640a80d_GetModPath(_self_.safe_ptr<_1e685c028_JuleImporter>());
}
inline jule::Str _1e54a094d_ModById_0(jule::Trait<_1e54a14cb_Importer> _self_, jule::I64 _2522_id) {
	return _1e6436e55_ModById(_self_.safe_ptr<_1e685c028_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1e54a4149_ImportInfo> _1e54a0c5b_GetImport_0(jule::Trait<_1e54a14cb_Importer> _self_, jule::Str _3128_path) {
	return _1e643b575_GetImport(_self_.safe_ptr<_1e685c028_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1e473e391_Ast__jule_tuple_s_24305e4ae_Log _1e54a1113_ImportPackage_0(jule::Trait<_1e54a14cb_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1e64ee47e_ImportPackage(_self_.safe_ptr<_1e685c028_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1e54a1388_Imported_0(jule::Trait<_1e54a14cb_Importer> _self_, jule::Ptr<_1e54a4149_ImportInfo> _4131__0) {
	_1e650d207_Imported(_self_.safe_ptr<_1e685c028_JuleImporter>(), _4131__0);
}
inline jule::Str _1e554d402_Str_0(jule::Trait<_1e554d853_Kind> _self_) {
	return _1e4765c47_Str(_self_.safe_ptr<_1e47903e2_StructIns>());
}
inline jule::Bool _1e554d710_Equal_0(jule::Trait<_1e554d853_Kind> _self_, jule::Ptr<_1e554dc82_TypeKind> _5621_other) {
	return _1e4766d9c_Equal(_self_.data.as<_1e47903e2_StructIns>(), _5621_other);
}
inline jule::Str _1e554d402_Str_1(jule::Trait<_1e554d853_Kind> _self_) {
	return _1e5463ea5_Str(_self_.safe_ptr<_1e5463b75_FnIns>());
}
inline jule::Bool _1e554d710_Equal_1(jule::Trait<_1e554d853_Kind> _self_, jule::Ptr<_1e554dc82_TypeKind> _5621_other) {
	return _1e54642b3_Equal(_self_.data.as<_1e5463b75_FnIns>(), _5621_other);
}
inline jule::Str _1e554d402_Str_2(jule::Trait<_1e554d853_Kind> _self_) {
	return _1e54732c2_Str(_self_.safe_ptr<_1e5472dc6_Trait>());
}
inline jule::Bool _1e554d710_Equal_2(jule::Trait<_1e554d853_Kind> _self_, jule::Ptr<_1e554dc82_TypeKind> _5621_other) {
	return _1e54735d0_Equal(_self_.data.as<_1e5472dc6_Trait>(), _5621_other);
}
inline jule::Str _1e554d402_Str_3(jule::Trait<_1e554d853_Kind> _self_) {
	return _1e547537e_Str(_self_.safe_ptr<_1e547501b_Enum>());
}
inline jule::Bool _1e554d710_Equal_3(jule::Trait<_1e554d853_Kind> _self_, jule::Ptr<_1e554dc82_TypeKind> _5621_other) {
	return _1e547568c_Equal(_self_.data.as<_1e547501b_Enum>(), _5621_other);
}
inline jule::Str _1e554d402_Str_4(jule::Trait<_1e554d853_Kind> _self_) {
	return _1e5476946_Str(_self_.safe_ptr<_1e5476616_TypeEnum>());
}
inline jule::Bool _1e554d710_Equal_4(jule::Trait<_1e554d853_Kind> _self_, jule::Ptr<_1e554dc82_TypeKind> _5621_other) {
	return _1e5476c54_Equal(_self_.data.as<_1e5476616_TypeEnum>(), _5621_other);
}
inline jule::Str _1e554d402_Str_5(jule::Trait<_1e554d853_Kind> _self_) {
	return _1e554e17d_Str(_self_.safe_ptr<_1e554dc82_TypeKind>());
}
inline jule::Bool _1e554d710_Equal_5(jule::Trait<_1e554d853_Kind> _self_, jule::Ptr<_1e554dc82_TypeKind> _5621_other) {
	return _1e554e48b_Equal(_self_.data.as<_1e554dc82_TypeKind>(), _5621_other);
}
inline jule::Str _1e554d402_Str_6(jule::Trait<_1e554d853_Kind> _self_) {
	return _1e5553d42_Str(_self_.safe_ptr<_1e55539ce_Prim>());
}
inline jule::Bool _1e554d710_Equal_6(jule::Trait<_1e554d853_Kind> _self_, jule::Ptr<_1e554dc82_TypeKind> _5621_other) {
	return _1e5554150_Equal(_self_.data.as<_1e55539ce_Prim>(), _5621_other);
}
inline jule::Str _1e554d402_Str_7(jule::Trait<_1e554d853_Kind> _self_) {
	return _1e55575c6_Str(_self_.safe_ptr<_1e5557263_Sptr>());
}
inline jule::Bool _1e554d710_Equal_7(jule::Trait<_1e554d853_Kind> _self_, jule::Ptr<_1e554dc82_TypeKind> _5621_other) {
	return _1e55578d4_Equal(_self_.data.as<_1e5557263_Sptr>(), _5621_other);
}
inline jule::Str _1e554d402_Str_8(jule::Trait<_1e554d853_Kind> _self_) {
	return _1e55581cb_Str(_self_.safe_ptr<_1e5557bc0_Slc>());
}
inline jule::Bool _1e554d710_Equal_8(jule::Trait<_1e554d853_Kind> _self_, jule::Ptr<_1e554dc82_TypeKind> _5621_other) {
	return _1e55584d9_Equal(_self_.data.as<_1e5557bc0_Slc>(), _5621_other);
}
inline jule::Str _1e554d402_Str_9(jule::Trait<_1e554d853_Kind> _self_) {
	return _1e5558ab1_Str(_self_.safe_ptr<_1e555874d_Tuple>());
}
inline jule::Bool _1e554d710_Equal_9(jule::Trait<_1e554d853_Kind> _self_, jule::Ptr<_1e554dc82_TypeKind> _5621_other) {
	return _1e5558dbe_Equal(_self_.data.as<_1e555874d_Tuple>(), _5621_other);
}
inline jule::Str _1e554d402_Str_10(jule::Trait<_1e554d853_Kind> _self_) {
	return _1e55595d9_Str(_self_.safe_ptr<_1e5559276_Map>());
}
inline jule::Bool _1e554d710_Equal_10(jule::Trait<_1e554d853_Kind> _self_, jule::Ptr<_1e554dc82_TypeKind> _5621_other) {
	return _1e55598e7_Equal(_self_.data.as<_1e5559276_Map>(), _5621_other);
}
inline jule::Str _1e554d402_Str_11(jule::Trait<_1e554d853_Kind> _self_) {
	return _1e555a1cd_Str(_self_.safe_ptr<_1e5559d6a_Arr>());
}
inline jule::Bool _1e554d710_Equal_11(jule::Trait<_1e554d853_Kind> _self_, jule::Ptr<_1e554dc82_TypeKind> _5621_other) {
	return _1e555a4db_Equal(_self_.data.as<_1e5559d6a_Arr>(), _5621_other);
}
inline jule::Str _1e554d402_Str_12(jule::Trait<_1e554d853_Kind> _self_) {
	return _1e555ab3a_Str(_self_.safe_ptr<_1e555a7c7_Ptr>());
}
inline jule::Bool _1e554d710_Equal_12(jule::Trait<_1e554d853_Kind> _self_, jule::Ptr<_1e554dc82_TypeKind> _5621_other) {
	return _1e555ae48_Equal(_self_.data.as<_1e555a7c7_Ptr>(), _5621_other);
}
inline jule::Str _1e554d402_Str_13(jule::Trait<_1e554d853_Kind> _self_) {
	return _1e720ba09_Str(_self_.safe_ptr<_1e720b71d_customType>());
}
inline jule::Bool _1e554d710_Equal_13(jule::Trait<_1e554d853_Kind> _self_, jule::Ptr<_1e554dc82_TypeKind> _5621_other) {
	return _1e720bd17_Equal(_self_.data.as<_1e720b71d_customType>(), _5621_other);
}
inline jule::Ptr<_1e54a4149_ImportInfo> _1e5567dab_FindPackage_0(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _930_ident) {
	return _1e548c93a_FindPackage(_self_.safe_ptr<_1e548c4a6_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_1e54a4149_ImportInfo> _1e55681b9_SelectPackage_0(jule::Trait<_1e5569c04_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)> _1332_selector) {
	return _1e548cc48_SelectPackage(_self_.safe_ptr<_1e548c4a6_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_1e54ca291_Var> _1e5568571_FindVar_0(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1e548d100_FindVar(_self_.safe_ptr<_1e548c4a6_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1e554d08e_TypeAlias> _1e5568928_FindTypeAlias_0(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1e548d4a7_FindTypeAlias(_self_.safe_ptr<_1e548c4a6_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1e4790018_Struct> _1e5568cd0_FindStruct_0(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1e548d85e_FindStruct(_self_.safe_ptr<_1e548c4a6_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1e5460ec4_Fn> _1e5569187_FindFn_0(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1e548dc16_FindFn(_self_.safe_ptr<_1e548c4a6_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1e5472dc6_Trait> _1e5569495_FindTrait_0(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _3328_ident) {
	return _1e548e024_FindTrait(_self_.safe_ptr<_1e548c4a6_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_1e547501b_Enum> _1e55697a3_FindEnum_0(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _3727_ident) {
	return _1e548e332_FindEnum(_self_.safe_ptr<_1e548c4a6_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_1e5476616_TypeEnum> _1e5569ab1_FindTypeEnum_0(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _4131_ident) {
	return _1e548e640_FindTypeEnum(_self_.safe_ptr<_1e548c4a6_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_1e54a4149_ImportInfo> _1e5567dab_FindPackage_1(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _930_ident) {
	return _1e54a4666_FindPackage(_self_.safe_ptr<_1e54a4149_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_1e54a4149_ImportInfo> _1e55681b9_SelectPackage_1(jule::Trait<_1e5569c04_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)> _1332_selector) {
	return _1e54a4974_SelectPackage(_self_.safe_ptr<_1e54a4149_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_1e54ca291_Var> _1e5568571_FindVar_1(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1e54a4d2b_FindVar(_self_.safe_ptr<_1e54a4149_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1e554d08e_TypeAlias> _1e5568928_FindTypeAlias_1(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1e54a51d3_FindTypeAlias(_self_.safe_ptr<_1e54a4149_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1e4790018_Struct> _1e5568cd0_FindStruct_1(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1e54a558a_FindStruct(_self_.safe_ptr<_1e54a4149_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1e5460ec4_Fn> _1e5569187_FindFn_1(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1e54a5942_FindFn(_self_.safe_ptr<_1e54a4149_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1e5472dc6_Trait> _1e5569495_FindTrait_1(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _3328_ident) {
	return _1e54a5c50_FindTrait(_self_.safe_ptr<_1e54a4149_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_1e547501b_Enum> _1e55697a3_FindEnum_1(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _3727_ident) {
	return _1e54a605d_FindEnum(_self_.safe_ptr<_1e54a4149_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_1e5476616_TypeEnum> _1e5569ab1_FindTypeEnum_1(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _4131_ident) {
	return _1e54a636b_FindTypeEnum(_self_.safe_ptr<_1e54a4149_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_1e54a4149_ImportInfo> _1e5567dab_FindPackage_2(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _930_ident) {
	return _1e54a757b_FindPackage(_self_.safe_ptr<_1e54a70a3_Package>(), _930_ident);
}
inline jule::Ptr<_1e54a4149_ImportInfo> _1e55681b9_SelectPackage_2(jule::Trait<_1e5569c04_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)> _1332_selector) {
	return _1e54a7889_SelectPackage(_self_.safe_ptr<_1e54a70a3_Package>(), _1332_selector);
}
inline jule::Ptr<_1e54ca291_Var> _1e5568571_FindVar_2(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1e54a7c41_FindVar(_self_.safe_ptr<_1e54a70a3_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1e554d08e_TypeAlias> _1e5568928_FindTypeAlias_2(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1e54a80e8_FindTypeAlias(_self_.safe_ptr<_1e54a70a3_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1e4790018_Struct> _1e5568cd0_FindStruct_2(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1e54a84a0_FindStruct(_self_.safe_ptr<_1e54a70a3_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1e5460ec4_Fn> _1e5569187_FindFn_2(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1e54a8857_FindFn(_self_.safe_ptr<_1e54a70a3_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1e5472dc6_Trait> _1e5569495_FindTrait_2(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _3328_ident) {
	return _1e54a8b65_FindTrait(_self_.safe_ptr<_1e54a70a3_Package>(), _3328_ident);
}
inline jule::Ptr<_1e547501b_Enum> _1e55697a3_FindEnum_2(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _3727_ident) {
	return _1e54a8e73_FindEnum(_self_.safe_ptr<_1e54a70a3_Package>(), _3727_ident);
}
inline jule::Ptr<_1e5476616_TypeEnum> _1e5569ab1_FindTypeEnum_2(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _4131_ident) {
	return _1e54a9281_FindTypeEnum(_self_.safe_ptr<_1e54a70a3_Package>(), _4131_ident);
}
inline jule::Ptr<_1e54a4149_ImportInfo> _1e5567dab_FindPackage_3(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _930_ident) {
	return _1e54ac7b2_FindPackage(_self_.safe_ptr<_1e54ac295_Sema>(), _930_ident);
}
inline jule::Ptr<_1e54a4149_ImportInfo> _1e55681b9_SelectPackage_3(jule::Trait<_1e5569c04_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)> _1332_selector) {
	return _1e54acac0_SelectPackage(_self_.safe_ptr<_1e54ac295_Sema>(), _1332_selector);
}
inline jule::Ptr<_1e54ca291_Var> _1e5568571_FindVar_3(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1e54ace77_FindVar(_self_.safe_ptr<_1e54ac295_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1e554d08e_TypeAlias> _1e5568928_FindTypeAlias_3(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1e54ad32e_FindTypeAlias(_self_.safe_ptr<_1e54ac295_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1e4790018_Struct> _1e5568cd0_FindStruct_3(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1e54ad6d6_FindStruct(_self_.safe_ptr<_1e54ac295_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1e5460ec4_Fn> _1e5569187_FindFn_3(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1e54ada8d_FindFn(_self_.safe_ptr<_1e54ac295_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1e5472dc6_Trait> _1e5569495_FindTrait_3(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _3328_ident) {
	return _1e54add9b_FindTrait(_self_.safe_ptr<_1e54ac295_Sema>(), _3328_ident);
}
inline jule::Ptr<_1e547501b_Enum> _1e55697a3_FindEnum_3(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _3727_ident) {
	return _1e54ae1a9_FindEnum(_self_.safe_ptr<_1e54ac295_Sema>(), _3727_ident);
}
inline jule::Ptr<_1e5476616_TypeEnum> _1e5569ab1_FindTypeEnum_3(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _4131_ident) {
	return _1e54ae4b7_FindTypeEnum(_self_.safe_ptr<_1e54ac295_Sema>(), _4131_ident);
}
inline jule::Ptr<_1e54a4149_ImportInfo> _1e5567dab_FindPackage_4(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _930_ident) {
	return _1e551d4e3_FindPackage(_self_.safe_ptr<_1e551cec6_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_1e54a4149_ImportInfo> _1e55681b9_SelectPackage_4(jule::Trait<_1e5569c04_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)> _1332_selector) {
	return _1e551d801_SelectPackage(_self_.safe_ptr<_1e551cec6_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_1e54ca291_Var> _1e5568571_FindVar_4(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1e551dba8_FindVar(_self_.safe_ptr<_1e551cec6_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1e554d08e_TypeAlias> _1e5568928_FindTypeAlias_4(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1e551e060_FindTypeAlias(_self_.safe_ptr<_1e551cec6_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1e4790018_Struct> _1e5568cd0_FindStruct_4(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1e551e417_FindStruct(_self_.safe_ptr<_1e551cec6_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1e5460ec4_Fn> _1e5569187_FindFn_4(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1e551e7be_FindFn(_self_.safe_ptr<_1e551cec6_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1e5472dc6_Trait> _1e5569495_FindTrait_4(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _3328_ident) {
	return _1e551eacc_FindTrait(_self_.safe_ptr<_1e551cec6_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_1e547501b_Enum> _1e55697a3_FindEnum_4(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _3727_ident) {
	return _1e551edda_FindEnum(_self_.safe_ptr<_1e551cec6_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_1e5476616_TypeEnum> _1e5569ab1_FindTypeEnum_4(jule::Trait<_1e5569c04_Lookup> _self_, jule::Str _4131_ident) {
	return _1e55201e8_FindTypeEnum(_self_.safe_ptr<_1e551cec6_SymbolTable>(), _4131_ident);
}
inline jule::Str _1e6ead679_Name_0(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	return _1e9c7ea0d_Name(_self_.safe_ptr<_1e9c7e722_Flag>());
}
inline jule::I32 _1e72294c7_Short_0(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	return _1e9c7edb5_Short(_self_.safe_ptr<_1e9c7e722_Flag>());
}
inline jule::Str _1e724aa26_What_0(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	return _1e9c7eb40_What(_self_.safe_ptr<_1e9c7e722_Flag>());
}
inline void _1e724ab58_Reset_0(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	_1e9c7ec72_Reset(_self_.safe_ptr<_1e9c7e722_Flag>());
}
inline jule::Str _1e6ead679_Name_1(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	return _1e9c82e1d_Name(_self_.safe_ptr<_1e9c83380_Flag>());
}
inline jule::I32 _1e72294c7_Short_1(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	return _1e9c838d0_Short(_self_.safe_ptr<_1e9c83380_Flag>());
}
inline jule::Str _1e724aa26_What_1(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	return _1e9c8366b_What(_self_.safe_ptr<_1e9c83380_Flag>());
}
inline void _1e724ab58_Reset_1(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	_1e9c8379d_Reset(_self_.safe_ptr<_1e9c83380_Flag>());
}
inline jule::Str _1e6ead679_Name_2(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	return _1e9c866d5_Name(_self_.safe_ptr<_1e9c86b47_Flag>());
}
inline jule::I32 _1e72294c7_Short_2(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	return _1e9c87197_Short(_self_.safe_ptr<_1e9c86b47_Flag>());
}
inline jule::Str _1e724aa26_What_2(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	return _1e9c86e33_What(_self_.safe_ptr<_1e9c86b47_Flag>());
}
inline void _1e724ab58_Reset_2(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	_1e9c87065_Reset(_self_.safe_ptr<_1e9c86b47_Flag>());
}
inline jule::Str _1e6ead679_Name_3(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	return _1e9c89ee1_Name(_self_.safe_ptr<_1e9c8a453_Flag>());
}
inline jule::I32 _1e72294c7_Short_3(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	return _1e9c8a9a3_Short(_self_.safe_ptr<_1e9c8a453_Flag>());
}
inline jule::Str _1e724aa26_What_3(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	return _1e9c8a73e_What(_self_.safe_ptr<_1e9c8a453_Flag>());
}
inline void _1e724ab58_Reset_3(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	_1e9c8a871_Reset(_self_.safe_ptr<_1e9c8a453_Flag>());
}
inline jule::Str _1e6ead679_Name_4(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	return _1e9c8d7a8_Name(_self_.safe_ptr<_1e9c8dc1a_Flag>());
}
inline jule::I32 _1e72294c7_Short_4(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	return _1e9c8e26a_Short(_self_.safe_ptr<_1e9c8dc1a_Flag>());
}
inline jule::Str _1e724aa26_What_4(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	return _1e9c8e006_What(_self_.safe_ptr<_1e9c8dc1a_Flag>());
}
inline void _1e724ab58_Reset_4(jule::Trait<_1e6ead7ab_CommonFlag> _self_) {
	_1e9c8e138_Reset(_self_.safe_ptr<_1e9c8dc1a_Flag>());
}


static _1e54a14cb_ImporterMptrData _1e54a14cb_Importer_mptr_data[] = {
	{
		._1e54a03dc_SetModPath=_1e54a03dc_SetModPath_0,
		._1e54a0640_GetModPath=_1e54a0640_GetModPath_0,
		._1e54a094d_ModById=_1e54a094d_ModById_0,
		._1e54a0c5b_GetImport=_1e54a0c5b_GetImport_0,
		._1e54a1113_ImportPackage=_1e54a1113_ImportPackage_0,
		._1e54a1388_Imported=_1e54a1388_Imported_0,
	},
};
static _1e554d853_KindMptrData _1e554d853_Kind_mptr_data[] = {
	{
		._1e554d402_Str=_1e554d402_Str_0,
		._1e554d710_Equal=_1e554d710_Equal_0,
	},
	{
		._1e554d402_Str=_1e554d402_Str_1,
		._1e554d710_Equal=_1e554d710_Equal_1,
	},
	{
		._1e554d402_Str=_1e554d402_Str_2,
		._1e554d710_Equal=_1e554d710_Equal_2,
	},
	{
		._1e554d402_Str=_1e554d402_Str_3,
		._1e554d710_Equal=_1e554d710_Equal_3,
	},
	{
		._1e554d402_Str=_1e554d402_Str_4,
		._1e554d710_Equal=_1e554d710_Equal_4,
	},
	{
		._1e554d402_Str=_1e554d402_Str_5,
		._1e554d710_Equal=_1e554d710_Equal_5,
	},
	{
		._1e554d402_Str=_1e554d402_Str_6,
		._1e554d710_Equal=_1e554d710_Equal_6,
	},
	{
		._1e554d402_Str=_1e554d402_Str_7,
		._1e554d710_Equal=_1e554d710_Equal_7,
	},
	{
		._1e554d402_Str=_1e554d402_Str_8,
		._1e554d710_Equal=_1e554d710_Equal_8,
	},
	{
		._1e554d402_Str=_1e554d402_Str_9,
		._1e554d710_Equal=_1e554d710_Equal_9,
	},
	{
		._1e554d402_Str=_1e554d402_Str_10,
		._1e554d710_Equal=_1e554d710_Equal_10,
	},
	{
		._1e554d402_Str=_1e554d402_Str_11,
		._1e554d710_Equal=_1e554d710_Equal_11,
	},
	{
		._1e554d402_Str=_1e554d402_Str_12,
		._1e554d710_Equal=_1e554d710_Equal_12,
	},
	{
		._1e554d402_Str=_1e554d402_Str_13,
		._1e554d710_Equal=_1e554d710_Equal_13,
	},
};
static _1e5569c04_LookupMptrData _1e5569c04_Lookup_mptr_data[] = {
	{
		._1e5567dab_FindPackage=_1e5567dab_FindPackage_0,
		._1e55681b9_SelectPackage=_1e55681b9_SelectPackage_0,
		._1e5568571_FindVar=_1e5568571_FindVar_0,
		._1e5568928_FindTypeAlias=_1e5568928_FindTypeAlias_0,
		._1e5568cd0_FindStruct=_1e5568cd0_FindStruct_0,
		._1e5569187_FindFn=_1e5569187_FindFn_0,
		._1e5569495_FindTrait=_1e5569495_FindTrait_0,
		._1e55697a3_FindEnum=_1e55697a3_FindEnum_0,
		._1e5569ab1_FindTypeEnum=_1e5569ab1_FindTypeEnum_0,
	},
	{
		._1e5567dab_FindPackage=_1e5567dab_FindPackage_1,
		._1e55681b9_SelectPackage=_1e55681b9_SelectPackage_1,
		._1e5568571_FindVar=_1e5568571_FindVar_1,
		._1e5568928_FindTypeAlias=_1e5568928_FindTypeAlias_1,
		._1e5568cd0_FindStruct=_1e5568cd0_FindStruct_1,
		._1e5569187_FindFn=_1e5569187_FindFn_1,
		._1e5569495_FindTrait=_1e5569495_FindTrait_1,
		._1e55697a3_FindEnum=_1e55697a3_FindEnum_1,
		._1e5569ab1_FindTypeEnum=_1e5569ab1_FindTypeEnum_1,
	},
	{
		._1e5567dab_FindPackage=_1e5567dab_FindPackage_2,
		._1e55681b9_SelectPackage=_1e55681b9_SelectPackage_2,
		._1e5568571_FindVar=_1e5568571_FindVar_2,
		._1e5568928_FindTypeAlias=_1e5568928_FindTypeAlias_2,
		._1e5568cd0_FindStruct=_1e5568cd0_FindStruct_2,
		._1e5569187_FindFn=_1e5569187_FindFn_2,
		._1e5569495_FindTrait=_1e5569495_FindTrait_2,
		._1e55697a3_FindEnum=_1e55697a3_FindEnum_2,
		._1e5569ab1_FindTypeEnum=_1e5569ab1_FindTypeEnum_2,
	},
	{
		._1e5567dab_FindPackage=_1e5567dab_FindPackage_3,
		._1e55681b9_SelectPackage=_1e55681b9_SelectPackage_3,
		._1e5568571_FindVar=_1e5568571_FindVar_3,
		._1e5568928_FindTypeAlias=_1e5568928_FindTypeAlias_3,
		._1e5568cd0_FindStruct=_1e5568cd0_FindStruct_3,
		._1e5569187_FindFn=_1e5569187_FindFn_3,
		._1e5569495_FindTrait=_1e5569495_FindTrait_3,
		._1e55697a3_FindEnum=_1e55697a3_FindEnum_3,
		._1e5569ab1_FindTypeEnum=_1e5569ab1_FindTypeEnum_3,
	},
	{
		._1e5567dab_FindPackage=_1e5567dab_FindPackage_4,
		._1e55681b9_SelectPackage=_1e55681b9_SelectPackage_4,
		._1e5568571_FindVar=_1e5568571_FindVar_4,
		._1e5568928_FindTypeAlias=_1e5568928_FindTypeAlias_4,
		._1e5568cd0_FindStruct=_1e5568cd0_FindStruct_4,
		._1e5569187_FindFn=_1e5569187_FindFn_4,
		._1e5569495_FindTrait=_1e5569495_FindTrait_4,
		._1e55697a3_FindEnum=_1e55697a3_FindEnum_4,
		._1e5569ab1_FindTypeEnum=_1e5569ab1_FindTypeEnum_4,
	},
};
static _1e6ead7ab_CommonFlagMptrData _1e6ead7ab_CommonFlag_mptr_data[] = {
	{
		._1e6ead679_Name=_1e6ead679_Name_0,
		._1e72294c7_Short=_1e72294c7_Short_0,
		._1e724aa26_What=_1e724aa26_What_0,
		._1e724ab58_Reset=_1e724ab58_Reset_0,
	},
	{
		._1e6ead679_Name=_1e6ead679_Name_1,
		._1e72294c7_Short=_1e72294c7_Short_1,
		._1e724aa26_What=_1e724aa26_What_1,
		._1e724ab58_Reset=_1e724ab58_Reset_1,
	},
	{
		._1e6ead679_Name=_1e6ead679_Name_2,
		._1e72294c7_Short=_1e72294c7_Short_2,
		._1e724aa26_What=_1e724aa26_What_2,
		._1e724ab58_Reset=_1e724ab58_Reset_2,
	},
	{
		._1e6ead679_Name=_1e6ead679_Name_3,
		._1e72294c7_Short=_1e72294c7_Short_3,
		._1e724aa26_What=_1e724aa26_What_3,
		._1e724ab58_Reset=_1e724ab58_Reset_3,
	},
	{
		._1e6ead679_Name=_1e6ead679_Name_4,
		._1e72294c7_Short=_1e72294c7_Short_4,
		._1e724aa26_What=_1e724aa26_What_4,
		._1e724ab58_Reset=_1e724ab58_Reset_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I32*>(alloc) == *static_cast<jule::I32*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U64*>(alloc) == *static_cast<jule::U64*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Bool*>(alloc) == *static_cast<jule::Bool*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *static_cast<jule::F64*>(alloc) == *static_cast<jule::F64*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5463b75_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1e5463b75_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e54ca291_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1e54ca291_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e47903e2_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1e47903e2_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5472dc6_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1e5472dc6_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e478e754_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1e478e754_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4789ae5_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1e4789ae5_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e478da3e_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1e478da3e_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e47852a5_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1e47852a5_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e478e149_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1e478e149_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4786284_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1e4786284_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e478be7c_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1e478be7c_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e478d08d_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1e478d08d_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4773ddc_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1e4773ddc_IdentTypeDecl> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5483326_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1e5483326_Label> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5480ad7_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1e5480ad7_Scope> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545c08b_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1e545c08b_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5522d00_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1e5522d00_Data> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545d136_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1e545d136_BackendEmitExprModel> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545aa4b_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1e545aa4b_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545942e_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1e545942e_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5458c25_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1e5458c25_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5459110_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1e5459110_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5459c04_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1e5459c04_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545a1aa_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1e545a1aa_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545bba1_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1e545bba1_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545b83d_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1e545b83d_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545d422_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1e545d422_FreeExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5454b22_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1e5454b22_FnCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5481643_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1e5481643_Conditional> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e548192e_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1e548192e_InfIter> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4787571_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1e4787571_WhileKind> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5481da2_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1e5481da2_WhileIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4787e12_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1e4787e12_RangeKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5482787_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1e5482787_RangeIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5482b83_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1e5482b83_ContSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5483612_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1e5483612_GotoSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e54839b9_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1e54839b9_Postfix> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5483e3c_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1e5483e3c_Assign> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545544c_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1e545544c_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e54842e4_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1e54842e4_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e54469c1_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1e54469c1_Const> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5484833_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1e5484833_Match> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5485933_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1e5485933_FallSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e548303a_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1e548303a_BreakSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5485ca7_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1e5485ca7_RetSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e47837ae_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1e47837ae_ScopeTree> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4777d47_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1e4777d47_Expr> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e478941e_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1e478941e_Conditional> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4786c9b_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1e4786c9b_Iter> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4788671_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1e4788671_ContSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4780ec6_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1e4780ec6_LabelSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e478137d_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1e478137d_GotoSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e47822b3_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1e47822b3_AssignSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e478a73e_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1e478a73e_MatchCase> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4781669_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1e4781669_FallSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e47882b9_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1e47882b9_BreakSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e478663b_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1e478663b_RetSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e47786d8_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1e47786d8_UseExpr> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5460ec4_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1e5460ec4_Fn> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4790018_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1e4790018_Struct> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e554d08e_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1e554d08e_TypeAlias> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e547501b_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1e547501b_Enum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5476616_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1e5476616_TypeEnum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5456bac_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1e5456bac_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5457493_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1e5457493_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5457edd_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1e5457edd_CommonIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545854e_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1e545854e_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545315e_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1e545315e_UnaryExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type75_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type75_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=__jule_any_type75_eq, .to_str=__jule_any_type75_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type75 && __jule_any_type75_eq(any.data.alloc, (void*)&other); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4775d34_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1e4775d34_ArrTypeDecl> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e47750ca_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1e47750ca_SlcTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e47756a2_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1e47756a2_PtrTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4774bce_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1e4774bce_SptrTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4776582_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1e4776582_MapTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e47753b6_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1e47753b6_TupleTypeDecl> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e477a5b9_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1e477a5b9_VariadicExpr> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5454ec9_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1e5454ec9_SliceExprModel> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e477c7a8_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1e477c7a8_FieldExprPair> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e477dc4e_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1e477dc4e_KeyValPair> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4779a08_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1e4779a08_IdentExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e47789c4_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1e47789c4_TupleExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545884b_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1e545884b_TupleExprModel> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545c960_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1e545c960_RuneExprModel> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e554dc82_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1e554dc82_TypeKind> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5457c02_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1e5457c02_ArrayExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e477b29b_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1e477b29b_SubIdentExpr> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e477453b_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1e477453b_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e477a212_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1e477a212_UnaryExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4773826_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1e4773826_TypeDecl> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e477ad28_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1e477ad28_NsSelectionExpr> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e47748e3_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1e47748e3_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545666d_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1e545666d_SlicingExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type99_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type99_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=__jule_any_type99_eq, .to_str=__jule_any_type99_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type99 && __jule_any_type99_eq(any.data.alloc, (void*)&other); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5454270_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1e5454270_CastingExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e477e436_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1e477e436_SliceExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5453912_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1e5453912_StructLitExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5457839_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1e5457839_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545612e_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1e545612e_MapExprModel> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5455804_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1e5455804_AnonFnExprModel> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4778133_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1e4778133_RangeExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4778d7b_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1e4778d7b_LitExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e4779585_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1e4779585_UnsafeExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e477eca5_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1e477eca5_IndexingExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e47803b0_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1e47803b0_SlicingExpr> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e477a971_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1e477a971_CastExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e477d006_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1e477d006_StructLit> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e477bd29_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1e477bd29_FnCallExpr> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e477d479_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1e477d479_BraceLit> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e477b71e_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1e477b71e_BinopExpr> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type116_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type116_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=__jule_any_type116_eq, .to_str=__jule_any_type116_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type116 && __jule_any_type116_eq(any.data.alloc, (void*)&other); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5452ca7_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1e5452ca7_BinopExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5453c20_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1e5453c20_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5459819_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1e5459819_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545a661_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1e545a661_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545ad6a_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1e545ad6a_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545b189_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1e545b189_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545c388_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1e545c388_SizeofExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545c674_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1e545c674_AlignofExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e545cc6d_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1e545cc6d_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d77659b_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_20d77659b_MutSlicingExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e6223802_StrInsertBeginExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1e6223802_StrInsertBeginExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d5b300e_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_20d5b300e_PushToSliceExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d5b2c34_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_20d5b2c34_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_226994c8a_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_226994c8a_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U8*>(alloc) == *static_cast<jule::U8*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *static_cast<jule::F32*>(alloc) == *static_cast<jule::F32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I8*>(alloc) == *static_cast<jule::I8*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
void __jule_any_type137_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I16*>(alloc) == *static_cast<jule::I16*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_any_type137_dealloc, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
void __jule_any_type138_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U16*>(alloc) == *static_cast<jule::U16*>(other); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_any_type138_dealloc, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
void __jule_any_type139_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U32*>(alloc) == *static_cast<jule::U32*>(other); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_any_type139_dealloc, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
jule::Str _1e6de6d10_OutDir = jule::Str("dist", 4);
jule::Str _1e721c08b_OutName = jule::Str("ir.cpp", 6);
jule::Str _1e7229719_Out = jule::Str();
jule::Str _24029d0a2_Compiler = jule::Str();
jule::Str _240358613_CompilerPath = jule::Str();
jule::Str _240358833_CppStd = jule::Str("cpp17", 5);
jule::Bool _240358a53_Shadowing = false;
jule::Bool _240358ca6_Transpilation = false;
jule::Bool _240359070_Test = false;
jule::Bool _240359339_RC = true;
jule::Bool _240359713_Safety = true;
jule::Bool _2403599cc_Production = false;
jule::Ptr<_241ad187e_RangeTable> _242c92d5d__L = jule::new_ptr<_241ad187e_RangeTable>(_241ad187e_RangeTable{._field_R16=jule::Slice<_241ad0e88_Range16>::make({_241ad0e88_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_241ad0e88_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_241ad0e88_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_241ad0e88_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_241ad0e88_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_241ad0e88_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_241ad0e88_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_241ad0e88_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_241ad0e88_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_241ad0e88_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_241ad0e88_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_241ad0e88_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_241ad0e88_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_241ad0e88_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_241ad0e88_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_241ad0e88_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_241ad0e88_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_241ad0e88_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_241ad0e88_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_241ad0e88_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_241ad0e88_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_241ad0e88_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_241ad0e88_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_241ad0e88_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_241ad0e88_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_241ad0e88_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_241ad0e88_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_241ad0e88_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_241ad0e88_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_241ad0e88_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_241ad0e88_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_241ad0e88_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_241ad0e88_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_241ad0e88_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_241ad0e88_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_241ad0e88_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_241ad0e88_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_241ad0e88_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_241ad0e88_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_241ad0e88_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_241ad0e88_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_241ad0e88_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_241ad0e88_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_241ad0e88_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_241ad0e88_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_241ad0e88_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_241ad0e88_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_241ad0e88_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_241ad0e88_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_241ad0e88_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_241ad0e88_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_241ad0e88_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_241ad0e88_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_241ad0e88_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_241ad0e88_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_241ad0e88_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_241ad0e88_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_241ad0e88_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_241ad0e88_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_241ad0e88_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_241ad140b_Range32>::make({_241ad140b_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_241ad140b_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_241ad140b_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_241ad140b_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_241ad140b_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_241ad140b_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_241ad140b_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_241ad140b_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_241ad140b_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_241ad140b_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_241ad140b_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_241ad140b_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_241ad140b_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_241ad140b_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_241ad140b_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_241ad140b_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_241ad140b_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_241ad140b_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_241ad140b_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_241ad140b_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_241ad140b_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_241ad140b_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_241ad140b_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_241ad140b_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_241ad140b_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_241ad140b_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_241ad140b_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_241ad140b_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_241ad140b_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_241ad140b_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_241ad140b_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_241ad140b_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_241ad140b_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_241ad140b_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_241ad140b_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_241ad140b_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_241ad140b_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_241ad140b_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_241ad140b_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_241ad140b_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_241ad140b_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_241ad140b_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_241ad140b_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_241ad187e_RangeTable> _242c93d4d__LU = jule::new_ptr<_241ad187e_RangeTable>(_241ad187e_RangeTable{._field_R16=jule::Slice<_241ad0e88_Range16>::make({_241ad0e88_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_241ad0e88_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_241ad0e88_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_241ad0e88_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_241ad0e88_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_241ad0e88_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_241ad0e88_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_241ad0e88_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_241ad0e88_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_241ad0e88_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_241ad0e88_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_241ad0e88_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_241ad0e88_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_241ad0e88_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_241ad0e88_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_241ad0e88_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_241ad0e88_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_241ad140b_Range32>::make({_241ad140b_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_241ad140b_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_241ad140b_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_241ad140b_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_241ad140b_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_241ad140b_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_241ad140b_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::Str,4> _240374145_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _24305068c_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _2430522d7_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _242d165c9_PathStdlib = jule::Str();
jule::Str _242d17212_PathExec = jule::Str();
jule::Str _242d176b8_PathWd = jule::Str();
jule::Str _242d3ae4a_PathApi = jule::Str();
jule::Array<jule::I32,5> _20d0a97b4_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _20d0a99d4_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _20d0a9d14_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _20d14ea9b_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _20d14ed98_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_20d15c988_kindPair,47> _20d15cdb7_keywords = jule::Array<_20d15c988_kindPair,47>({_20d15c988_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_20d15c988_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20d15c988_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20d15c988_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20d15c988_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_20d15c988_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20d15c988_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20d15c988_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20d15c988_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20d15c988_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20d15c988_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_20d15c988_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20d15c988_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_20d15c988_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_20d15c988_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20d15c988_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20d15c988_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_20d15c988_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_20d15c988_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_20d15c988_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_20d15c988_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_20d15c988_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_20d15c988_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_20d15c988_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_20d15c988_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_20d15c988_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_20d15c988_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_20d15c988_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_20d15c988_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_20d15c988_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(21LLU)},_20d15c988_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(23LLU)},_20d15c988_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(24LLU)},_20d15c988_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(25LLU)},_20d15c988_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(26LLU)},_20d15c988_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(27LLU)},_20d15c988_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(28LLU)},_20d15c988_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(29LLU)},_20d15c988_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(30LLU)},_20d15c988_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(31LLU)},_20d15c988_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(32LLU)},_20d15c988_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(33LLU)},_20d15c988_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(34LLU)},_20d15c988_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(35LLU)},_20d15c988_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(36LLU)},_20d15c988_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(37LLU)},_20d15c988_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(39LLU)},_20d15c988_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_20d15c988_kindPair,39> _20d15d208_basicOps = jule::Array<_20d15c988_kindPair,39>({_20d15c988_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(22LLU)},_20d15c988_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_20d15c988_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_20d15c988_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_20d15c988_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_20d15c988_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20d15c988_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(38LLU)}});
jule::Array<jule::U8,32> _1e53dd7d1__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1e53ddd97__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1e5429003_floatInfo _1e4d720ab_f32info = _1e5429003_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1e5429003_floatInfo _1e4d8d616_f64info = _1e5429003_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1e542e635_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1e54312b3_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1e5431d1e_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1e5432160_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1e5435185_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1e5438ad4_leftCheat> _1e5439013_leftCheats = jule::Slice<_1e5438ad4_leftCheat>::make({_1e5438ad4_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1e5438ad4_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1e5438ad4_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1e5438ad4_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1e5438ad4_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1e5438ad4_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1e5438ad4_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1e5438ad4_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1e5438ad4_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1e5438ad4_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1e5438ad4_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1e5438ad4_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1e5438ad4_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1e5438ad4_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1e5438ad4_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1e5438ad4_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1e5438ad4_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1e5438ad4_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1e5438ad4_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1e5438ad4_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1e5438ad4_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1e5438ad4_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1e5438ad4_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1e5438ad4_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1e5438ad4_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1e5438ad4_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1e5438ad4_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1e5438ad4_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1e5438ad4_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1e5438ad4_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1e5438ad4_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1e5438ad4_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1e5438ad4_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1e5438ad4_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1e5438ad4_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1e5438ad4_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1e5438ad4_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1e5438ad4_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1e5438ad4_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1e5438ad4_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1e5438ad4_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1e5438ad4_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1e5438ad4_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1e5438ad4_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1e5438ad4_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1e5438ad4_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1e5438ad4_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1e5438ad4_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1e5438ad4_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1e5438ad4_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1e5438ad4_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1e5438ad4_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1e5438ad4_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1e5438ad4_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1e5438ad4_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1e5438ad4_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1e5438ad4_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1e5438ad4_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1e5438ad4_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1e5438ad4_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1e5438ad4_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1e4d17bab_BitSize = 0LL;
jule::Str _1e4d17a13_SysInt = jule::Str();
jule::Str _1e4d2b571_SysUint = jule::Str();
jule::Slice<jule::Str> _1e5478382_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _2269bc9a5_Copy = false;
jule::Bool _2269c80ed_Deadcode = false;
jule::Bool _2269c85b5_Append = false;
jule::Bool _2269ca067_Math = false;
jule::Bool _2269d4e40_Access = false;
jule::Bool _2269d50a5_Inline = false;
jule::Bool _2269da7d6_Ptr = false;
jule::Bool _226a3480d_Cond = false;
jule::Bool _1e697651b_exprEnabled = false;
jule::Bool _1e6977187_scopeEnabled = false;
jule::Array<jule::U64,12> _1e71ecc92_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1e714c461_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_241ad187e_RangeTable> _242ca63b0_Upper = _242c93d4d__LU;
jule::Array<jule::U8,256> _241aca207__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _242ea745c_first = jule::Array<jule::U8,256>({});
jule::Array<_242ea79e0_acceptRange,16> _242ea7ced_acceptRanges = jule::Array<_242ea79e0_acceptRange,16>({_242ea79e0_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_242ea79e0_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_242ea79e0_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_242ea79e0_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_242ea79e0_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _242d78ac0_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _242d1e44a_Os = jule::Str("darwin", 6);
jule::Str _242d1dbec_Arch = jule::Str("amd64", 5);
jule::Ptr<_241ad187e_RangeTable> _242c99eec_Letter = _242c92d5d__L;





std::ostream &operator<<(std::ostream &_Stream, _241ad0e88_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _241ad140b_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _241ad187e_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _242ea79e0_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _2412c7ebb_index(_2412bba4d_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5424_i];;
	};
	return (*(_self_))._field_path[_5424_i];;
}



inline void _2412ca7e8_append(_2412bba4d_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6125_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), (static_cast<jule::Slice<jule::U8>>((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w))));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6125_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _2412cc124_string(_2412bba4d_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _2412bba4d_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24050355a_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_24050355a_DirEntry>>> static__2412335ca_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_24050355a_DirEntry>> __jule_func_result;
	DIR* _1617_dir = _2411c1c3e_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_24050355a_DirEntry>>>(jule::Any(_24040ebb4_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _2411c1ed6_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1e7a8c059;
			};
			jule::Str _2517_name = _2411a2c75_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_2411eda29_Status> _2621_stat = ({
				auto except = static__240409a38_Of(_241312d08_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_24050355a_DirEntry>>>(except.error);
				} jule::Ptr<_2411eda29_Status>(nullptr);});
			});;
			__jule_func_result = jule::alloc_for_append(__jule_func_result,1);__jule_func_result.__push(jule::new_ptr<_24050355a_DirEntry>(_24050355a_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat}));;
		}
	_iter_next_1e7a8c059:;
	}
	_iter_end_1e7a8c059:;;
	_2411c227d_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_24050355a_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__24125d11b_Create(jule::Str _3922_path) {
	if ((_2411c2b0d_Mkdir((&(_3922_path[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_24040ebb4_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__241237e81_Remove(jule::Str _5122_path) {
	if ((_2411c2da5_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_24040ebb4_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _240538a24_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_24042a4b5_File>> static__24042b40b_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _1913_handle = _2411c1425_Open((&(_1820_path[0LL])), static_cast<jule::I64>(_1831_flag), _1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_24042a4b5_File>>(jule::Any(_24040ebb4_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_24042a4b5_File>>(jule::Any(), static__24042a6a2_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));;
}



inline jule::VoidExceptional static__24042c75e_Remove(jule::Str _3022_path) {
	if ((_2411c314c_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_24040ebb4_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2403ddea1_Write(_24042a4b5_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_2411de498_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4424_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_24040ebb4_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _240408c35_Read(_24042a4b5_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_2411ddc39_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_6427_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_24040ebb4_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_24042a4b5_File> static__24042a6a2_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_24042a4b5_File>(_24042a4b5_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_24042a4b5_File>> static__24040a1ba_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_24042a4b5_File>>(jule::Any(), ({
		auto except = static__24042b40b_Open(_5522_path, static_cast<jule::I64>(1538LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_24042a4b5_File>>(except.error);
		} jule::Ptr<_24042a4b5_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__24050435d_Read(jule::Str _6720_path) {
	jule::Ptr<_2411eda29_Status> _6813_s = ({
		auto except = static__240409a38_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2411eda29_Status>(nullptr);});
	});;
	if ((!(_24053967e_IsReg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_6813_s.get()._field_Size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_24042a4b5_File> _7817_f = ({
		auto except = static__24042b40b_Open(_6720_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_24042a4b5_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _24042b252_Close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_Size), static_cast<jule::I64>(_6813_s.get()._field_Size), 0);;
	jule::I64 _8213_n = ({
		auto except = _240408c35_Read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8117_buff.slice(0LL, _8213_n));;
}



inline jule::VoidExceptional static__240504924_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_24042a4b5_File> _9217_f = ({
		auto except = static__24042b40b_Open(_9121_path, static_cast<jule::I64>(1537LL), _9146_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_24042a4b5_File>(nullptr);});
	});;
	({
		auto except = _2403ddea1_Write(_9217_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _24042b252_Close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2404092eb_Seek(_24042a4b5_File* _self_, jule::I64 _10523_offset, jule::I64 _10536_origin) {
	jule::I64 _10613_pos = _2411dd84e_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), _10523_offset, static_cast<jule::I64>(_10536_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_24040ebb4_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _10613_pos);;
}



inline jule::VoidExceptional _24042b252_Close(_24042a4b5_File* _self_) {
	if ((_2411de0ad_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_24040ebb4_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _24042a4b5_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_2411eda29_Status>> static__240409a38_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_2411eda29_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _2411c103a_Stat((&(_1118_path[0LL])), (&(_1517_handle)));;
	if ((_1613_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_2411eda29_Status>>(jule::Any(), jule::new_ptr<_2411eda29_Status>(_2411eda29_Status{._field_Mode=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_mode)), ._field_Size=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_size))}));;
	};
	return jule::Exceptional<jule::Ptr<_2411eda29_Status>>(jule::Any(_24040ebb4_getLastFsError(), &__jule_any_type0));
}



inline jule::Bool _240503c53_IsDir(_2411eda29_Status* _self_) {
	return (((*(_self_))._field_Mode & 16384LLU) == 16384LLU);;
}



inline jule::Bool _24053967e_IsReg(_2411eda29_Status* _self_) {
	return (((*(_self_))._field_Mode & 32768LLU) == 32768LLU);;
}







std::ostream &operator<<(std::ostream &_Stream, _2411eda29_Status _Src) {
	_Stream << "Status{";
	_Stream << "Mode:" << _Src._field_Mode << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _242d7511b_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24305e4ae_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _20d15594d_Prec(_20d155596_Token* _self_) {
	if (((*(_self_))._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1e7b81b32:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1e7b81b98:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1e7b81549:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1e7b815c1:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1e7b81648:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1e7b8134b:;
			{
				return 0LLU;;
			}
		}
		_match_end_1e7b807ac:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d155596_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d15ad3d_IsOk(_20d15a931_File* _self_) {
	({
		auto except = static__240409a38_Of((*(_self_))._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} jule::Ptr<_2411eda29_Status>(nullptr);});
	});
	return true;;
}



inline void _20d15b0b3_Fill(_20d15a931_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*(_self_))._field_Data=_2327_data;
}



inline jule::Str _20d15b327_Dir(_20d15a931_File* _self_) {
	return _241316867_Dir((*(_self_))._field_Path);;
}



inline jule::Str _20d15b58b_Name(_20d15a931_File* _self_) {
	return _2412e85c4_Base((*(_self_))._field_Path);;
}



inline jule::Uintptr _20d15b800_Addr(_20d15a931_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*(_self_)))))));;
}



inline jule::Str _20d15bb0d_GetRow(_20d15a931_File* _self_, jule::I64 _4421_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*(_self_))._field_Data.len()); (_4717_i)++) {
		{
			if (((*(_self_))._field_Data[_4717_i] != '\n')) {
				goto _iter_next_1e7b86692;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4617_lineStart, _4717_i));;
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1e7b86692:;
	}
	_iter_end_1e7b86692:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _20d15a931_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d15c988_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _20d163a8d_pushErr(_20d1634e9_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_20d15d703_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _45826_fmt, _45839_args));;
}



inline void _20d163dac_pushErrTok(_20d1634e9_lex* _self_, jule::Ptr<_20d155596_Token>* _46330_token, jule::Str _46345_fmt) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_20d15d703_makeErr((*(_46330_token)).get()._field_Row, (*(_46330_token)).get()._field_Column, &((*(_self_))._field_file), _46345_fmt, jule::Slice<jule::Any>()));;
}



inline void _20d164088_lex(_20d1634e9_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_20d16608a_newLine(_self_);
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_20d155596_Token> _47321_token = _20d167410_token(_self_);;
			if ((_47321_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*(_self_))._field_tokens = jule::alloc_for_append((*(_self_))._field_tokens,1);(*(_self_))._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1e7bb9d57:;
	}
	_iter_end_1e7bb9d57:;;
}



inline jule::Str _20d164396_id(_20d1634e9_lex* _self_, jule::Slice<jule::U8>* _48222_ln) {
	if (((*(_48222_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _48614_r = 0;;
	jule::I64 _48621_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _242ea857e_DecodeRune((*(_48222_ln)));
		_48614_r = __jule_assign_result.__jule_result_arg0;
		_48621_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_48614_r != '_') && (!(_20d158a72_IsLetter(_48614_r))))) {
		return jule::Str();;
	};
	while ((_48621_i < (*(_48222_ln)).len())) {
		{
			jule::I32 _49218_pr = 0;;
			jule::I64 _49222_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _242ea857e_DecodeRune((*(_48222_ln)).slice(_48621_i));
				_49218_pr = __jule_assign_result.__jule_result_arg0;
				_49222_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_49218_pr != '_') && (!(_20d1590b1_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_20d158a72_IsLetter(_49218_pr))))) {
				(*(_self_))._field_pos+=_48621_i;
				return static_cast<jule::Str>((*(_48222_ln)).slice(0LL, _48621_i));;
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1e7bbd0e1:;
	}
	_iter_end_1e7bbd0e1:;;
	(*(_self_))._field_pos+=(*(_48222_ln)).len();
	return static_cast<jule::Str>((*(_48222_ln)));;
}



inline jule::Slice<jule::U8> _20d16460a_resume(_20d1634e9_lex* _self_) {
	jule::I64 _50717_i = (*(_self_))._field_pos;;
	for (; (_50717_i < (*(_self_))._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*(_self_))._field_file.get()._field_Data[_50717_i]);;
			if (_20d158621_IsSpace(_50917_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1e7bc2a1e:;
						{
							_20d16608a_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1e7bc2502:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1e7bbd058:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1e7bc23d1:;
				};
				goto _iter_next_1e7bc0c1a;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*(_self_))._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*(_self_))._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_1e7bc17ed;
					};
				}
			_iter_next_1e7bc17ed:;
			}
			_iter_end_1e7bc17ed:;;
			return (*(_self_))._field_file.get()._field_Data.slice(_50717_i, _52421_j);;
		}
	_iter_next_1e7bc0c1a:;
	}
	_iter_end_1e7bc0c1a:;;
	return nullptr;;
}



inline void _20d164880_lexLineComment(_20d1634e9_lex* _self_, jule::Ptr<_20d155596_Token>* _53538_token) {
	jule::I64 _53613_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _53917_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_1e7bc51e7;
			};
		}
	_iter_next_1e7bc51e7:;
	}
	_iter_end_1e7bc51e7:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*(_53538_token)).get()._field_Id=static_cast<jule::U64>(18LLU);
		(*(_53538_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_53613_start, (*(_self_))._field_pos));
	};
}



inline void _20d164b05_lexRangeComment(_20d1634e9_lex* _self_, jule::Ptr<_20d155596_Token>* _55039_token) {
	jule::I64 _55113_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _55417_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_1e7bc84e7;
			};
			if ((_55417_r == '\n')) {
				_20d16608a_newLine(_self_);
				goto _iter_next_1e7bc84e7;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(_self_))._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*(_self_))._field_file.get()._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*(_55039_token)).get()._field_Id=static_cast<jule::U64>(18LLU);
					(*(_55039_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_55113_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1e7bc84e7:;
	}
	_iter_end_1e7bc84e7:;;
	_20d163a8d_pushErr(_self_, jule::Str("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _20d164e13_num(_20d1634e9_lex* _self_, jule::Slice<jule::U8>* _57823_txt) {
	jule::Str __jule_func_result;
	if (((*(_57823_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_20d162020_hexNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_20d161c78_octalNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_20d1606c2_binaryNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_20d16042a_commonNum(_57823_txt);
	_julec_label_end:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _20d165221_escapeSeq(_20d1634e9_lex* _self_, jule::Slice<jule::U8>* _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if (((*(_60029_txt)).len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ (*(_60029_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1e7bd80ea:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_60029_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1e7bd802e:;
			{
				_60117_seq=_20d162608_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1e7bd7c65:;
			{
				_60117_seq=_20d1628c2_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1e7bd7ccb:;
			{
				_60117_seq=_20d162a7b_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_1e7bd7506:;
			{
				_60117_seq=_20d162d12_byteEscape(_60029_txt);
			}
		}
		_match_end_1e7bd7b44:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*(_self_))._field_pos)++;
		_20d163a8d_pushErr(_self_, jule::Str("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_60117_seq.len();
	return _60117_seq;;
}



inline jule::Str _20d1655c8_getRune(_20d1634e9_lex* _self_, jule::Slice<jule::U8>* _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && ((*(_63027_txt))[0LL] == '\\'))) {
		return _20d165221_escapeSeq(_self_, _63027_txt);;
	};
	jule::I32 _63414_r = 0;;
	jule::I64 _63417_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _242ea857e_DecodeRune((*(_63027_txt)));
		_63414_r = __jule_assign_result.__jule_result_arg0;
		_63417_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_63417_n;
	return static_cast<jule::Str>(_63414_r);;
}



inline jule::Str _20d1658d6_lexRune(_20d1634e9_lex* _self_, jule::Slice<jule::U8>* _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*(_self_))._field_column)++;
	jule::I64 _64217_n = 0LL;;
	jule::I64 _64317_i = 1LL;;
	for (; (_64317_i < (*(_63927_txt)).len()); (_64317_i)++) {
		{
			if (((*(_63927_txt))[_64317_i] == '\r')) {
				goto _iter_next_1e75ab804;
			};
			if (((*(_63927_txt))[_64317_i] == '\n')) {
				_20d163a8d_pushErr(_self_, jule::Str("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_20d16608a_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _65517_part = (*(_63927_txt)).slice(_64317_i);;
			jule::Str _65617_r = _20d1655c8_getRune(_self_, &(_65517_part), false);;
			_64017_run+=_65617_r;
			(*(_self_))._field_column+=_242eaa273_RuneCountStr(_65617_r);
			if ((_65617_r == jule::Str("'", 1))) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1e75ab804;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_1e75ab804:;
	}
	_iter_end_1e75ab804:;;
	if ((_64217_n == 0LL)) {
		_20d163a8d_pushErr(_self_, jule::Str("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_20d163a8d_pushErr(_self_, jule::Str("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _64017_run;;
}



inline jule::Str _20d165b4a_lexStr(_20d1634e9_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	_67917_s+=static_cast<jule::Str>(_68013_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_1e75b3069;
			};
			if ((_68717_ch == '\n')) {
				_20d16608a_newLine(_self_);
				if ((!(_68213_raw))) {
					_20d163a8d_pushErr(_self_, jule::Str("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _69921_part = (*(_self_))._field_file.get()._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _70017_r = _20d1655c8_getRune(_self_, &(_69921_part), _68213_raw);;
			_67917_s+=_70017_r;
			(*(_self_))._field_column+=_242eaa273_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_1e75b3069;
			};
		}
	_iter_next_1e75b3069:;
	}
	_iter_end_1e75b3069:;;
	return _67917_s;;
}



inline jule::Bool _20d165dae_isFirstTokenOfLine(_20d1634e9_lex* _self_) {
	return ((*(_self_))._field_column == 1LL);;
}



inline void _20d16608a_newLine(_20d1634e9_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _20d166585_isOp(_20d1634e9_lex* _self_, jule::Slice<jule::U8>* _72024_txt, jule::Str _72037_kind, jule::U64 _72048_id, jule::Ptr<_20d155596_Token>* _72066_t) {
	if ((!(_20d15da88_bytesHasPrefix(_72024_txt, _72037_kind)))) {
		return false;;
	};
	(*(_72066_t)).get()._field_Kind=_72037_kind;
	(*(_72066_t)).get()._field_Id=_72048_id;
	(*(_self_))._field_pos+=_72037_kind.len();
	return true;;
}



inline jule::Bool _20d16693c_lexBasicOps(_20d1634e9_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_20d155596_Token>* _73048_tok) {
	{
		auto expr = &(_20d15d208_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e75b936c:;
		if (it != expr_end) {
			_20d15c988_kindPair *_73116_pair = it;
			{
				if (_20d166585_isOp(_self_, &(_73030_txt), (*(_73116_pair))._field_kind, (*(_73116_pair))._field_id, _73048_tok)) {
					return true;;
				};
			}
			_iter_next_1e75b936c:;
			++it;
			goto _iter_begin_1e75b936c;
		}
		_iter_end_1e75b936c:;
	};
	return false;;
}



inline jule::Bool _20d166ce4_lexId(_20d1634e9_lex* _self_, jule::Slice<jule::U8>* _74025_txt, jule::Ptr<_20d155596_Token>* _74043_t) {
	jule::Str _74113_lex = _20d164396_id(_self_, _74025_txt);;
	if (_74113_lex.empty()) {
		return false;;
	};
	(*(_74043_t)).get()._field_Kind=_74113_lex;
	(*(_74043_t)).get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;;
}



inline jule::Bool _20d16719b_lexNum(_20d1634e9_lex* _self_, jule::Slice<jule::U8>* _75026_txt, jule::Ptr<_20d155596_Token>* _75044_t) {
	jule::Str _75113_lex = _20d164e13_num(_self_, _75026_txt);;
	if (_75113_lex.empty()) {
		return false;;
	};
	(*(_75044_t)).get()._field_Kind=_75113_lex;
	(*(_75044_t)).get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;;
}



inline jule::Ptr<_20d155596_Token> _20d167410_token(_20d1634e9_lex* _self_) {
	jule::Ptr<_20d155596_Token> _76217_t = jule::new_ptr<_20d155596_Token>(_20d155596_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _20d16460a_resume(_self_);;
	if ((_76713_txt == nullptr)) {
		return _76217_t;;
	};
	_76217_t.get()._field_Column=(*(_self_))._field_column;
	_76217_t.get()._field_Row=(*(_self_))._field_row;
	{
		
		if (_20d16719b_lexNum(_self_, &(_76713_txt), &(_76217_t))) {
			_case_begin_1e75c03b7:;
			{
				goto _match_end_1e75be7b2;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_1e75c0b26:;
			{
				_76217_t.get()._field_Kind=_20d1658d6_lexRune(_self_, &(_76713_txt));
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_1e75c0b8c:;
			{
				_76217_t.get()._field_Kind=_20d165b4a_lexStr(_self_);
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (_20d15da88_bytesHasPrefix(&(_76713_txt), jule::Str("//", 2))) {
			_case_begin_1e75c0dbd:;
			{
				_20d164880_lexLineComment(_self_, &(_76217_t));
				return _76217_t;;
			}
		}
		else if (_20d15da88_bytesHasPrefix(&(_76713_txt), jule::Str("/*", 2))) {
			_case_begin_1e75c0e34:;
			{
				_20d164b05_lexRangeComment(_self_, &(_76217_t));
				return _76217_t;;
			}
		}
		else if (_20d166585_isOp(_self_, &(_76713_txt), jule::Str("(", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _20d166585_isOp(_self_, &(_76713_txt), jule::Str(")", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _20d166585_isOp(_self_, &(_76713_txt), jule::Str("{", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _20d166585_isOp(_self_, &(_76713_txt), jule::Str("}", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _20d166585_isOp(_self_, &(_76713_txt), jule::Str("[", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _20d166585_isOp(_self_, &(_76713_txt), jule::Str("]", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _20d16693c_lexBasicOps(_self_, _76713_txt, &(_76217_t))) {
			_case_begin_1e75c0e9a:;
			{
				goto _match_end_1e75be7b2;
			}
		}
		else if (_20d166ce4_lexId(_self_, &(_76713_txt), &(_76217_t))) {
			_case_begin_1e75be87d:;
			{
				{
					auto expr = &(_20d15cdb7_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e75c605a:;
					if (it != expr_end) {
						_20d15c988_kindPair *_80520_pair = it;
						{
							if (((*(_80520_pair))._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=(*(_80520_pair))._field_id;
								goto _iter_end_1e75c605a;
							};
						}
						_iter_next_1e75c605a:;
						++it;
						goto _iter_begin_1e75c605a;
					}
					_iter_end_1e75c605a:;
				};
			}
		}
		else {
			_case_begin_1e75be817:;
			{
				jule::I32 _81218_r = 0;;
				jule::I64 _81221_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _242ea857e_DecodeRune(_76713_txt);
					_81218_r = __jule_assign_result.__jule_result_arg0;
					_81221_sz = __jule_assign_result.__jule_result_arg1;
				});
				_20d163a8d_pushErr(_self_, jule::Str("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_81218_r, &__jule_any_type1)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_81221_sz;
				return _76217_t;;
			}
		}
		_match_end_1e75be7b2:;
	};
	(*(_self_))._field_column+=_242eaa273_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d1634e9_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e473e391_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4740183_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e474057e_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4773826_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4774250_IsPrim(_1e4773ddc_IdentTypeDecl* _self_) {
	return ((*(_self_))._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4773ddc_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e477453b_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e47748e3_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4774bce_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e47750ca_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e47753b6_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4775a04_IsUnsafe(_1e47756a2_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e47756a2_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e477620d_AutoSized(_1e4775d34_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4775d34_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4776582_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4776939_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4777d47_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4778133_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e47786d8_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e47789c4_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e47791cd_IsNil(_1e4778d7b_LitExpr* _self_) {
	return ((*(_self_))._field_Value == jule::Str("nil", 3));;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4778d7b_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4779585_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4779d5a_IsSelf(_1e4779a08_IdentExpr* _self_) {
	return ((*(_self_))._field_Ident == jule::Str("self", 4));;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4779a08_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e477a212_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e477a5b9_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e477a971_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e477ad28_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e477b29b_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e477b71e_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e477c18c_Unhandled(_1e477bd29_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1e477c401_Ignored(_1e477bd29_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(_self_))._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e477bd29_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e477cb0a_IsTargeted(_1e477c7a8_FieldExprPair* _self_) {
	return ((*(_self_))._field_Field != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e477c7a8_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e477d006_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e477d7cb_IsEmpty(_1e477d479_BraceLit* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e477d479_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e477dc4e_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e477e766_IsEmpty(_1e477e436_SliceExpr* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e477e436_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e477eca5_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e47803b0_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e478069b_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4780b1e_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4780ec6_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e478137d_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4781669_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4781c74_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e47822b3_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e47831a4_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e47837ae_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e47842e8_IsSelf(_1e4783e85_ParamDecl* _self_) {
	return (((*(_self_))._field_Ident == jule::Str("&self", 5)) || ((*(_self_))._field_Ident == jule::Str("self", 4)));;
}



inline jule::Bool _1e478455c_IsRef(_1e4783e85_ParamDecl* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4783e85_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e4785607_IsAnon(_1e47852a5_FnDecl* _self_) {
	return ((*(_self_))._field_Ident == jule::Str("<anonymous>", 11));;
}







std::ostream &operator<<(std::ostream &_Stream, _1e47852a5_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4786284_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e478663b_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e47870ed_IsInf(_1e4786c9b_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4786c9b_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e47878c3_IsWhileNext(_1e4787571_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4787571_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4787e12_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e47882b9_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4788671_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4788ae4_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4788e9b_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e478941e_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4789ae5_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e478a068_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e478a73e_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e478aed1_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e478b7a6_AutoExpr(_1e478b454_EnumItemDecl* _self_) {
	return ((*(_self_))._field_Expr == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e478b454_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e478c510_DefaultTyped(_1e478be7c_EnumDecl* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e478be7c_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e478c983_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e478d08d_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e478d28b_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e478da3e_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e478e149_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e478eab7_IsTraitImpl(_1e478e754_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1e478ed2b_IsStructImpl(_1e478e754_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e478e754_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5429003_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e54291e0_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5438ad4_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5431626_set(_1e54395a7_decimal* _self_, jule::Str _23322_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23417_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1e807c3b2:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1e807c439:;
			{
				(*(_self_))._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1e807c24c:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1e807e590:;
					{
						goto _iter_next_1e807dd64;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1e807e617:;
					{
						if (_25117_sawdot) {
							return __jule_func_result;;
						};
						_25117_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1e807dd64;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1e807e68e:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1e807dd64;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23322_s[_23417_i];
							((*(_self_))._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1e807dd64;
					}
				}
				_match_end_1e807e46e:;
			};
			goto _iter_end_1e807dd64;
		}
	_iter_next_1e807dd64:;
	}
	_iter_end_1e807dd64:;;
	if ((!(_25217_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25117_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1e542be29_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1e8086cb2;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1e8086cb2:;
		}
		_iter_end_1e8086cb2:;;
		(*(_self_))._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1e5431934_floatBits(_1e54395a7_decimal* _self_, _1e5429003_floatInfo* _32729_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*(_self_))._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*(_self_))._field_dp >= _1e54312b3_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1e54312b3_powtab[(*(_self_))._field_dp];
			};
			_1e5439c06_shift(_self_, static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1e808d659:;
	}
	_iter_end_1e808d659:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1e54312b3_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1e54312b3_powtab[(-((*(_self_))._field_dp))];
			};
			_1e5439c06_shift(_self_, _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1e808e68d:;
	}
	_iter_end_1e808e68d:;;
	(_32817_exp)--;
	if ((_32817_exp < ((*(_32729_flt))._field_bias + 1LL))) {
		jule::I64 _38117_n = (((*(_32729_flt))._field_bias + 1LL) - _32817_exp);;
		_1e5439c06_shift(_self_, static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1e5439c06_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_32729_flt))._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1e543a6da_roundedInteger(_self_));
	if ((_32917_mant == (2LLU << (*(_32729_flt))._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << (*(_32729_flt))._field_mantbits)) == 0LLU)) {
		_32817_exp=(*(_32729_flt))._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_32729_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_32729_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << (*(_32729_flt))._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - (*(_32729_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) << (*(_32729_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_41717_bits|=((1LLU << (*(_32729_flt))._field_mantbits) << (*(_32729_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _41717_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1e5439981_assign(_1e54395a7_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1e809bb40:;
	}
	_iter_end_1e809bb40:;;
	(*(_self_))._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_33117_buf[_33417_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1e809c5ad:;
	}
	_iter_end_1e809c5ad:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1e543ac90_trim(_self_);
}



inline void _1e5439c06_shift(_1e54395a7_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1e809e68c:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1e809e714:;
			{
				while ((_35528_k > 60LL)) {
					{
						_1e543b730_leftShift(_self_, 60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1e80a046d:;
				}
				_iter_end_1e80a046d:;;
				_1e543b730_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1e809e78b:;
			{
				while ((_35528_k < -60LL)) {
					{
						_1e543b048_rightShift(_self_, 60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1e80a03d5:;
				}
				_iter_end_1e80a03d5:;;
				_1e543b048_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_1e809e56b:;
	};
}



inline void _1e5439e7b_roundDown(_1e54395a7_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_37528_nd;
	_1e543ac90_trim(_self_);
}



inline void _1e543a201_roundUp(_1e54395a7_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*(_self_))._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*(_self_))._field_d[_39017_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1e80a40a9:;
	}
	_iter_end_1e80a40a9:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1e543a476_round(_1e54395a7_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1e543ba71_shouldRoundUp(_self_, _41124_nd)) {
		_1e543a201_roundUp(_self_, _41124_nd);
	} else {
		_1e5439e7b_roundDown(_self_, _41124_nd);
	};
}



inline jule::U64 _1e543a6da_roundedInteger(_1e54395a7_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*(_self_))._field_dp) && (_42817_i < (*(_self_))._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_42817_i] - '0'))));
		}
	_iter_next_1e80a6c27:;
	}
	_iter_end_1e80a6c27:;;
	for (; (_42817_i < (*(_self_))._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1e80a891b:;
	}
	_iter_end_1e80a891b:;;
	if (_1e543ba71_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e54395a7_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e54469c1_Const> static__1e5446e44_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1e54469c1_Const>(_1e54469c1_Const{._field_data=jule::Any(_1622_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1e54469c1_Const> static__1e54471db_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1e54469c1_Const>(_1e54469c1_Const{._field_data=jule::Any(_1922_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1e54469c1_Const> static__1e5447483_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1e54469c1_Const>(_1e54469c1_Const{._field_data=jule::Any(_2223_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1e54469c1_Const> static__1e544772a_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1e54469c1_Const>(_1e54469c1_Const{._field_data=jule::Any(_2522_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1e54469c1_Const> static__1e54479c2_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1e54469c1_Const>(_1e54469c1_Const{._field_data=jule::Any(_2822_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1e54469c1_Const> static__1e5447bc0_NewNil(void) {
	return jule::new_ptr<_1e54469c1_Const>(_1e54469c1_Const{._field_data=nullptr});;
}



inline jule::I64 _1e54482b9_ReadI64(_1e54469c1_Const* _self_) {
	if ((!(_1e544a662_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
}



inline jule::U64 _1e544852d_ReadU64(_1e54469c1_Const* _self_) {
	if ((!(_1e544a8c6_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
}



inline jule::Bool _1e5448792_ReadBool(_1e54469c1_Const* _self_) {
	if ((!(_1e544ab3a_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1e5448a06_ReadStr(_1e54469c1_Const* _self_) {
	if ((!(_1e544ad9e_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1e5448c6a_ReadF64(_1e54469c1_Const* _self_) {
	if ((!(_1e544b113_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
}



inline jule::I64 _1e5448ece_AsI64(_1e54469c1_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1e8291362:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1e82913c8:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1e8290cce:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1e8290be1:;
			{
				return 0LL;;
			}
		}
		_match_end_1e8290b8b:;
	};
}



inline jule::U64 _1e5449243_AsU64(_1e54469c1_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1e8292c8c:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1e8292d03:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1e8292808:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1e82914a5:;
			{
				return 0LLU;;
			}
		}
		_match_end_1e8291450:;
	};
}



inline jule::F64 _1e54494a7_AsF64(_1e54469c1_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1e82946b7:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1e829472d:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1e8294233:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else {
			_case_begin_1e8292dd0:;
			{
				return 0LL;;
			}
		}
		_match_end_1e8292d7a:;
	};
}



inline void _1e544972c_SetI64(_1e54469c1_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type2);
}



inline void _1e54499a2_SetU64(_1e54469c1_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type3);
}



inline void _1e5449c27_SetBool(_1e54469c1_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type4);
}



inline void _1e5449e9c_SetStr(_1e54469c1_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type5);
}



inline void _1e544a222_SetF64(_1e54469c1_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type6);
}



inline void _1e544a3ed_SetNil(_1e54469c1_Const* _self_) {
	(*(_self_))._field_data=nullptr;
}



inline jule::Bool _1e544a662_IsI64(_1e54469c1_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1e82980d3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e8298358:;
			{
				return false;;
			}
		}
		_match_end_1e8298303:;
	};
}



inline jule::Bool _1e544a8c6_IsU64(_1e54469c1_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1e8298c0a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e8298578:;
			{
				return false;;
			}
		}
		_match_end_1e8298435:;
	};
}



inline jule::Bool _1e544ab3a_IsBool(_1e54469c1_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1e8298e91:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e8299656:;
			{
				return false;;
			}
		}
		_match_end_1e8299601:;
	};
}



inline jule::Bool _1e544ad9e_IsStr(_1e54469c1_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1e8299953:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e829a118:;
			{
				return false;;
			}
		}
		_match_end_1e829a0b3:;
	};
}



inline jule::Bool _1e544b113_IsF64(_1e54469c1_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1e829a415:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e829aaca:;
			{
				return false;;
			}
		}
		_match_end_1e829aa75:;
	};
}



inline jule::Bool _1e544b377_IsNil(_1e54469c1_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1e544b685_AreSameTypes(_1e54469c1_Const* _self_, _1e54469c1_Const _21327_x) {
	{
		
		if ((_1e544a662_IsI64(_self_) == _1e544a662_IsI64(&_21327_x))) {
			_case_begin_1e829c67b:;
			{
				return true;;
			}
		}
		else if ((_1e544a8c6_IsU64(_self_) == _1e544a8c6_IsU64(&_21327_x))) {
			_case_begin_1e829be83:;
			{
				return true;;
			}
		}
		else if ((_1e544b113_IsF64(_self_) == _1e544b113_IsF64(&_21327_x))) {
			_case_begin_1e829c00a:;
			{
				return true;;
			}
		}
		else if ((_1e544ab3a_IsBool(_self_) == _1e544ab3a_IsBool(&_21327_x))) {
			_case_begin_1e829c082:;
			{
				return true;;
			}
		}
		else if ((_1e544ad9e_IsStr(_self_) == _1e544ad9e_IsStr(&_21327_x))) {
			_case_begin_1e829c109:;
			{
				return true;;
			}
		}
		else if ((_1e544b377_IsNil(_self_) == _1e544b377_IsNil(&_21327_x))) {
			_case_begin_1e829c35c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e829be0b:;
			{
				return false;;
			}
		}
		_match_end_1e829bd40:;
	};
}



inline jule::Bool _1e544b993_And(_1e54469c1_Const* _self_, _1e54469c1_Const _23818_x) {
	{
		
		if ((_1e544ab3a_IsBool(_self_) && _1e544ab3a_IsBool(&_23818_x))) {
			_case_begin_1e82a087c:;
			{
				return (_1e5448792_ReadBool(_self_) && _1e5448792_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1e82a0184:;
			{
				return false;;
			}
		}
		_match_end_1e829ee86:;
	};
}



inline jule::Bool _1e544bca1_Or(_1e54469c1_Const* _self_, _1e54469c1_Const _24917_x) {
	{
		
		if ((_1e544ab3a_IsBool(_self_) && _1e544ab3a_IsBool(&_24917_x))) {
			_case_begin_1e82a1be1:;
			{
				return (_1e5448792_ReadBool(_self_) || _1e5448792_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1e82a153c:;
			{
				return false;;
			}
		}
		_match_end_1e82a0bac:;
	};
}



inline jule::Bool _1e544c0ae_Eq(_1e54469c1_Const* _self_, _1e54469c1_Const _26017_x) {
	{
		
		if (_1e544b377_IsNil(_self_)) {
			_case_begin_1e82a30bb:;
			{
				return _1e544b377_IsNil(&_26017_x);;
			}
		}
		else if (_1e544ab3a_IsBool(_self_)) {
			_case_begin_1e82a2928:;
			{
				return (_1e544ab3a_IsBool(&_26017_x) && (_1e5448792_ReadBool(_self_) == _1e5448792_ReadBool(&_26017_x)));;
			}
		}
		else if (_1e544ad9e_IsStr(_self_)) {
			_case_begin_1e82a298e:;
			{
				return (_1e544ad9e_IsStr(&_26017_x) && (_1e5448a06_ReadStr(_self_) == _1e5448a06_ReadStr(&_26017_x)));;
			}
		}
		else if (_1e544a662_IsI64(_self_)) {
			_case_begin_1e82a2a16:;
			{
				return (_1e54482b9_ReadI64(_self_) == _1e5448ece_AsI64(&_26017_x));;
			}
		}
		else if (_1e544a8c6_IsU64(_self_)) {
			_case_begin_1e82a2a8d:;
			{
				return (_1e544852d_ReadU64(_self_) == _1e5449243_AsU64(&_26017_x));;
			}
		}
		else if (_1e544b113_IsF64(_self_)) {
			_case_begin_1e82a2cbe:;
			{
				return (_1e5448c6a_ReadF64(_self_) == _1e54494a7_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1e82a28b2:;
			{
				return false;;
			}
		}
		_match_end_1e82a2010:;
	};
}



inline jule::Bool _1e544c3bc_Lt(_1e54469c1_Const* _self_, _1e54469c1_Const _28717_x) {
	{
		
		if (_1e544ad9e_IsStr(_self_)) {
			_case_begin_1e82a6db1:;
			{
				return (_1e544ad9e_IsStr(&_28717_x) && (_1e5448a06_ReadStr(_self_) < _1e5448a06_ReadStr(&_28717_x)));;
			}
		}
		else if (_1e544a662_IsI64(_self_)) {
			_case_begin_1e82a6773:;
			{
				return (_1e54482b9_ReadI64(_self_) < _1e5448ece_AsI64(&_28717_x));;
			}
		}
		else if (_1e544a8c6_IsU64(_self_)) {
			_case_begin_1e82a67d9:;
			{
				return (_1e544852d_ReadU64(_self_) < _1e5449243_AsU64(&_28717_x));;
			}
		}
		else if (_1e544b113_IsF64(_self_)) {
			_case_begin_1e82a6850:;
			{
				return (_1e5448c6a_ReadF64(_self_) < _1e54494a7_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1e82a33eb:;
			{
				return false;;
			}
		}
		_match_end_1e82a3330:;
	};
}



inline jule::Bool _1e544c6ca_LtEq(_1e54469c1_Const* _self_, _1e54469c1_Const _31019_x) {
	{
		
		if (_1e544ad9e_IsStr(_self_)) {
			_case_begin_1e82a9bb6:;
			{
				return (_1e544ad9e_IsStr(&_31019_x) && (_1e5448a06_ReadStr(_self_) <= _1e5448a06_ReadStr(&_31019_x)));;
			}
		}
		else if (_1e544a662_IsI64(_self_)) {
			_case_begin_1e82a9578:;
			{
				return (_1e54482b9_ReadI64(_self_) <= _1e5448ece_AsI64(&_31019_x));;
			}
		}
		else if (_1e544a8c6_IsU64(_self_)) {
			_case_begin_1e82a95de:;
			{
				return (_1e544852d_ReadU64(_self_) <= _1e5449243_AsU64(&_31019_x));;
			}
		}
		else if (_1e544b113_IsF64(_self_)) {
			_case_begin_1e82a9655:;
			{
				return (_1e5448c6a_ReadF64(_self_) <= _1e54494a7_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1e82a7136:;
			{
				return false;;
			}
		}
		_match_end_1e82a706a:;
	};
}



inline jule::Bool _1e544c9d8_Gt(_1e54469c1_Const* _self_, _1e54469c1_Const _33317_x) {
	{
		
		if (_1e544ad9e_IsStr(_self_)) {
			_case_begin_1e82ac9bb:;
			{
				return (_1e544ad9e_IsStr(&_33317_x) && (_1e5448a06_ReadStr(_self_) > _1e5448a06_ReadStr(&_33317_x)));;
			}
		}
		else if (_1e544a662_IsI64(_self_)) {
			_case_begin_1e82ac37d:;
			{
				return (_1e54482b9_ReadI64(_self_) > _1e5448ece_AsI64(&_33317_x));;
			}
		}
		else if (_1e544a8c6_IsU64(_self_)) {
			_case_begin_1e82ac3e4:;
			{
				return (_1e544852d_ReadU64(_self_) > _1e5449243_AsU64(&_33317_x));;
			}
		}
		else if (_1e544b113_IsF64(_self_)) {
			_case_begin_1e82ac45a:;
			{
				return (_1e5448c6a_ReadF64(_self_) > _1e54494a7_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1e82a9e3b:;
			{
				return false;;
			}
		}
		_match_end_1e82a9d70:;
	};
}



inline jule::Bool _1e544cce6_GtEq(_1e54469c1_Const* _self_, _1e54469c1_Const _35619_x) {
	{
		
		if (_1e544ad9e_IsStr(_self_)) {
			_case_begin_1e82b07c1:;
			{
				return (_1e544ad9e_IsStr(&_35619_x) && (_1e5448a06_ReadStr(_self_) >= _1e5448a06_ReadStr(&_35619_x)));;
			}
		}
		else if (_1e544a662_IsI64(_self_)) {
			_case_begin_1e82b0183:;
			{
				return (_1e54482b9_ReadI64(_self_) >= _1e5448ece_AsI64(&_35619_x));;
			}
		}
		else if (_1e544a8c6_IsU64(_self_)) {
			_case_begin_1e82b01e9:;
			{
				return (_1e544852d_ReadU64(_self_) >= _1e5449243_AsU64(&_35619_x));;
			}
		}
		else if (_1e544b113_IsF64(_self_)) {
			_case_begin_1e82b0260:;
			{
				return (_1e5448c6a_ReadF64(_self_) >= _1e54494a7_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1e82acc41:;
			{
				return false;;
			}
		}
		_match_end_1e82acb75:;
	};
}



inline jule::Bool _1e544d104_Add(_1e54469c1_Const* _self_, _1e54469c1_Const _37722_x) {
	{
		
		if (_1e544ad9e_IsStr(_self_)) {
			_case_begin_1e82b35c6:;
			{
				if ((!(_1e544ad9e_IsStr(&_37722_x)))) {
					return false;;
				};
				_1e5449e9c_SetStr(_self_, (_1e5448a06_ReadStr(_self_) + _1e5448a06_ReadStr(&_37722_x)));
			}
		}
		else if (_1e544b113_IsF64(_self_)) {
			_case_begin_1e82b2e88:;
			{
				_1e544a222_SetF64(_self_, static_cast<jule::F64>((_1e5448c6a_ReadF64(_self_) + _1e54494a7_AsF64(&_37722_x))));
			}
		}
		else if (_1e544a662_IsI64(_self_)) {
			_case_begin_1e82b2eee:;
			{
				if (_1e544b113_IsF64(&_37722_x)) {
					_1e544a222_SetF64(_self_, static_cast<jule::F64>((_1e54494a7_AsF64(_self_) + _1e5448c6a_ReadF64(&_37722_x))));
				} else {
					_1e544972c_SetI64(_self_, static_cast<jule::I64>((_1e54482b9_ReadI64(_self_) + _1e5448ece_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1e544a8c6_IsU64(_self_)) {
			_case_begin_1e82b3065:;
			{
				if (_1e544b113_IsF64(&_37722_x)) {
					_1e544a222_SetF64(_self_, static_cast<jule::F64>((_1e54494a7_AsF64(_self_) + _1e5448c6a_ReadF64(&_37722_x))));
				} else {
					_1e54499a2_SetU64(_self_, static_cast<jule::U64>((_1e544852d_ReadU64(_self_) + _1e5449243_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1e82b0a46:;
			{
				return false;;
			}
		}
		_match_end_1e82b097a:;
	};
	return true;;
}



inline jule::Bool _1e544d412_Sub(_1e54469c1_Const* _self_, _1e54469c1_Const _40622_x) {
	{
		
		if (_1e544b113_IsF64(_self_)) {
			_case_begin_1e82b8a0a:;
			{
				_1e544a222_SetF64(_self_, static_cast<jule::F64>((_1e5448c6a_ReadF64(_self_) - _1e54494a7_AsF64(&_40622_x))));
			}
		}
		else if (_1e544a662_IsI64(_self_)) {
			_case_begin_1e82b8334:;
			{
				if (_1e544b113_IsF64(&_40622_x)) {
					_1e544a222_SetF64(_self_, static_cast<jule::F64>((_1e54494a7_AsF64(_self_) - _1e5448c6a_ReadF64(&_40622_x))));
				} else {
					_1e544972c_SetI64(_self_, static_cast<jule::I64>((_1e54482b9_ReadI64(_self_) - _1e5448ece_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1e544a8c6_IsU64(_self_)) {
			_case_begin_1e82b839a:;
			{
				if (_1e544b113_IsF64(&_40622_x)) {
					_1e544a222_SetF64(_self_, static_cast<jule::F64>((_1e54494a7_AsF64(_self_) - _1e5448c6a_ReadF64(&_40622_x))));
				} else {
					_1e54499a2_SetU64(_self_, static_cast<jule::U64>((_1e544852d_ReadU64(_self_) - _1e5449243_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1e82b82bd:;
			{
				return false;;
			}
		}
		_match_end_1e82b7a1a:;
	};
	return true;;
}



inline jule::Bool _1e544d720_Mul(_1e54469c1_Const* _self_, _1e54469c1_Const _43022_x) {
	{
		
		if (_1e544b113_IsF64(_self_)) {
			_case_begin_1e82bce93:;
			{
				_1e544a222_SetF64(_self_, static_cast<jule::F64>((_1e5448c6a_ReadF64(_self_) * _1e54494a7_AsF64(&_43022_x))));
			}
		}
		else if (_1e544a662_IsI64(_self_)) {
			_case_begin_1e82bc7bc:;
			{
				if (_1e544b113_IsF64(&_43022_x)) {
					_1e544a222_SetF64(_self_, static_cast<jule::F64>((_1e54494a7_AsF64(_self_) * _1e5448c6a_ReadF64(&_43022_x))));
				} else {
					_1e544972c_SetI64(_self_, static_cast<jule::I64>((_1e54482b9_ReadI64(_self_) * _1e5448ece_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1e544a8c6_IsU64(_self_)) {
			_case_begin_1e82bc833:;
			{
				if (_1e544b113_IsF64(&_43022_x)) {
					_1e544a222_SetF64(_self_, static_cast<jule::F64>((_1e54494a7_AsF64(_self_) * _1e5448c6a_ReadF64(&_43022_x))));
				} else {
					_1e54499a2_SetU64(_self_, static_cast<jule::U64>((_1e544852d_ReadU64(_self_) * _1e5449243_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1e82bc756:;
			{
				return false;;
			}
		}
		_match_end_1e82bbd60:;
	};
	return true;;
}



inline jule::Bool _1e544da2d_Div(_1e54469c1_Const* _self_, _1e54469c1_Const _45822_x) {
	{
		
		if (_1e544b113_IsF64(_self_)) {
			_case_begin_1e82c242b:;
			{
				jule::F64 _46117_l = _1e54494a7_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_1e544a222_SetF64(_self_, static_cast<jule::F64>(jule::div(_1e5448c6a_ReadF64(_self_),_46117_l)));
			}
		}
		else if (_1e544a662_IsI64(_self_)) {
			_case_begin_1e82c1c55:;
			{
				jule::F64 _46717_l = _1e54494a7_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_1e544a222_SetF64(_self_, static_cast<jule::F64>(jule::div(_1e54494a7_AsF64(_self_),_46717_l)));
			}
		}
		else if (_1e544a8c6_IsU64(_self_)) {
			_case_begin_1e82c1cbb:;
			{
				jule::F64 _47317_l = _1e54494a7_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_1e544a222_SetF64(_self_, static_cast<jule::F64>(jule::div(_1e54494a7_AsF64(_self_),_47317_l)));
			}
		}
		else {
			_case_begin_1e82c1bde:;
			{
				return false;;
			}
		}
		_match_end_1e82c12e8:;
	};
	return true;;
}



inline jule::Bool _1e544dd3b_Mod(_1e54469c1_Const* _self_, _1e54469c1_Const _48722_x) {
	{
		
		if (_1e544a662_IsI64(_self_)) {
			_case_begin_1e82c68a3:;
			{
				jule::I64 _49017_l = _1e5448ece_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_1e544972c_SetI64(_self_, static_cast<jule::I64>(jule::mod(_1e54482b9_ReadI64(_self_),_49017_l)));
			}
		}
		else if (_1e544a8c6_IsU64(_self_)) {
			_case_begin_1e82c61dd:;
			{
				jule::U64 _49617_l = _1e5449243_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_1e54499a2_SetU64(_self_, static_cast<jule::U64>(jule::mod(_1e544852d_ReadU64(_self_),_49617_l)));
			}
		}
		else {
			_case_begin_1e82c6177:;
			{
				return false;;
			}
		}
		_match_end_1e82c6100:;
	};
	return true;;
}



inline jule::Bool _1e544e149_BitwiseAnd(_1e54469c1_Const* _self_, _1e54469c1_Const _50929_x) {
	{
		
		if (_1e544a662_IsI64(_self_)) {
			_case_begin_1e82c99c7:;
			{
				_1e544972c_SetI64(_self_, static_cast<jule::I64>((_1e54482b9_ReadI64(_self_) & _1e5448ece_AsI64(&_50929_x))));
			}
		}
		else if (_1e544a8c6_IsU64(_self_)) {
			_case_begin_1e82c9312:;
			{
				_1e54499a2_SetU64(_self_, static_cast<jule::U64>((_1e544852d_ReadU64(_self_) & _1e5449243_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1e82c929b:;
			{
				return false;;
			}
		}
		_match_end_1e82c9224:;
	};
	return true;;
}



inline jule::Bool _1e544e457_BitwiseOr(_1e54469c1_Const* _self_, _1e54469c1_Const _52328_x) {
	{
		
		if (_1e544a662_IsI64(_self_)) {
			_case_begin_1e82cba51:;
			{
				_1e544972c_SetI64(_self_, static_cast<jule::I64>((_1e54482b9_ReadI64(_self_) | _1e5448ece_AsI64(&_52328_x))));
			}
		}
		else if (_1e544a8c6_IsU64(_self_)) {
			_case_begin_1e82cb38b:;
			{
				_1e54499a2_SetU64(_self_, static_cast<jule::U64>((_1e544852d_ReadU64(_self_) | _1e5449243_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1e82cb325:;
			{
				return false;;
			}
		}
		_match_end_1e82cb259:;
	};
	return true;;
}



inline jule::Bool _1e544e765_Xor(_1e54469c1_Const* _self_, _1e54469c1_Const _53722_x) {
	{
		
		if (_1e544a662_IsI64(_self_)) {
			_case_begin_1e82cdaca:;
			{
				_1e544972c_SetI64(_self_, static_cast<jule::I64>((_1e54482b9_ReadI64(_self_) ^ _1e5448ece_AsI64(&_53722_x))));
			}
		}
		else if (_1e544a8c6_IsU64(_self_)) {
			_case_begin_1e82cd415:;
			{
				_1e54499a2_SetU64(_self_, static_cast<jule::U64>((_1e544852d_ReadU64(_self_) ^ _1e5449243_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1e82cd39e:;
			{
				return false;;
			}
		}
		_match_end_1e82cd2d3:;
	};
	return true;;
}



inline jule::Bool _1e544ea73_Lshift(_1e54469c1_Const* _self_, _1e54469c1_Const _55125_x) {
	{
		
		if (_1e544a662_IsI64(_self_)) {
			_case_begin_1e82d0b54:;
			{
				jule::I64 _55417_l = _1e5448ece_AsI64(_self_);;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _1e5449243_AsU64(&_55125_x);;
					_1e544972c_SetI64(_self_, static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_1e54501e4_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1e544a8c6_IsU64(_self_)) {
			_case_begin_1e82d048e:;
			{
				_1e54501e4_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1e82d0428:;
			{
				return false;;
			}
		}
		_match_end_1e82d035c:;
	};
	return true;;
}



inline jule::Bool _1e544ed81_Rshift(_1e54469c1_Const* _self_, _1e54469c1_Const _57125_x) {
	{
		
		if (_1e544a662_IsI64(_self_)) {
			_case_begin_1e82d34b4:;
			{
				jule::I64 _57417_l = _1e5448ece_AsI64(_self_);;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _1e5449243_AsU64(&_57125_x);;
					_1e544972c_SetI64(_self_, static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_1e54504e1_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1e544a8c6_IsU64(_self_)) {
			_case_begin_1e82d2cee:;
			{
				_1e54504e1_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1e82d2c88:;
			{
				return false;;
			}
		}
		_match_end_1e82d2bbc:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e54469c1_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4790205_FieldIns> _1e474b7bb_instance(jule::Ptr<_1e4764075_Field> _self_) {
	return jule::new_ptr<_1e4790205_FieldIns>(_1e4790205_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4764075_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e476b6ba_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e47903e2_StructIns> _1e475058e_instance(jule::Ptr<_1e4790018_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_1e47903e2_StructIns> _9917_ins = jule::new_ptr<_1e47903e2_StructIns>(_1e47903e2_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1e4790205_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1e54ca291_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__1e5466d76_new(), });;
	{
		auto expr = &(_self_.get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e84ee56a:;
		if (it != expr_end) {
			jule::Ptr<_1e54ca291_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_1e54ca291_Var>((*(_10621_s))));;
			}
			_iter_next_1e84ee56a:;
			++it;
			goto _iter_begin_1e84ee56a;
		}
		_iter_end_1e84ee56a:;
	};
	{
		auto expr = &(_self_.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e85009cd:;
		if (it != expr_end) {
			jule::Ptr<_1e4764075_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_1e474b7bb_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1e5550404_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1e85009cd:;
			++it;
			goto _iter_begin_1e85009cd;
		}
		_iter_end_1e85009cd:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1e5460ec4_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto expr = &(_self_.get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e8502d65:;
			if (it != expr_end) {
				jule::Ptr<_1e5460ec4_Fn> _12125_f = *it;
				{
					jule::Ptr<_1e5460ec4_Fn> _12225_fins = jule::new_ptr<_1e5460ec4_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_1e8502d65:;
				++it;
				goto _iter_begin_1e8502d65;
			}
			_iter_end_1e8502d65:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_1e47903e2_StructIns> _1e47512e8_appendInstance(_1e4790018_Struct* _self_, jule::Ptr<_1e47903e2_StructIns>* _13338_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e85051b9:;
		if (it != expr_end) {
			jule::Ptr<_1e47903e2_StructIns> _13921_ains = *it;
			{
				if (_1e4769201_Same(_13921_ains.ptr(), (*(_13338_ins)))) {
					return _13921_ains;;
				};
			}
			_iter_next_1e85051b9:;
			++it;
			goto _iter_begin_1e85051b9;
		}
		_iter_end_1e85051b9:;
	};
	(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_13338_ins)));;
	return nullptr;;
}



inline jule::Ptr<_1e5460ec4_Fn> _1e4754450_FindMethod(_1e4790018_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e85065c7:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_1e85065c7:;
			++it;
			goto _iter_begin_1e85065c7;
		}
		_iter_end_1e85065c7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e54ca291_Var> _1e47538a0_FindStatic(_1e4790018_Struct* _self_, jule::Str _16229_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8507793:;
		if (it != expr_end) {
			jule::Ptr<_1e54ca291_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_1e8507793:;
			++it;
			goto _iter_begin_1e8507793;
		}
		_iter_end_1e8507793:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e4764075_Field> _1e4755c7b_FindField(_1e4790018_Struct* _self_, jule::Str _17328_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8508673:;
		if (it != expr_end) {
			jule::Ptr<_1e4764075_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_1e8508673:;
			++it;
			goto _iter_begin_1e8508673;
		}
		_iter_end_1e8508673:;
	};
	return nullptr;;
}



inline jule::Bool _1e4755077_IsImplements(_1e4790018_Struct* _self_, jule::Ptr<_1e5472dc6_Trait> _18327_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8509553:;
		if (it != expr_end) {
			jule::Ptr<_1e5472dc6_Trait> *_18416_it = it;
			{
				if ((_18327_t == (*(_18416_it)))) {
					return true;;
				};
			}
			_iter_next_1e8509553:;
			++it;
			goto _iter_begin_1e8509553;
		}
		_iter_end_1e8509553:;
	};
	return false;;
}



inline jule::Bool _1e4759048_IsDerives(_1e4790018_Struct* _self_, jule::Str _19324_ident) {
	{
		auto expr = &((*(_self_))._field_Directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8509ab4:;
		if (it != expr_end) {
			jule::Ptr<_1e474057e_Directive> *_19416_d = it;
			{
				if (((*(_19416_d)).get()._field_Tag.get()._field_Kind == jule::Str("derive", 6))) {
					if ((((*(_19416_d)).get()._field_Args.len() == 1LL) && ((*(_19416_d)).get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_1e8509ab4:;
			++it;
			goto _iter_begin_1e8509ab4;
		}
		_iter_end_1e8509ab4:;
	};
	return false;;
}



inline jule::Bool _1e475970d_IsUses(_1e4790018_Struct* _self_, jule::Ptr<_1e4790018_Struct> _20521_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e850c248:;
		if (it != expr_end) {
			jule::Ptr<_1e4790018_Struct> *_20616_u = it;
			{
				while ((_20521_s == (*(_20616_u)))) {
					{
						return true;;
					}
				_iter_next_1e850c996:;
				}
				_iter_end_1e850c996:;;
			}
			_iter_next_1e850c248:;
			++it;
			goto _iter_begin_1e850c248;
		}
		_iter_end_1e850c248:;
	};
	return false;;
}



inline jule::Bool _1e475ebca_HasRefAccessible(_1e4790018_Struct* _self_) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e850cb61:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> *_21616_m = it;
			{
				if ((((*(_21616_m)).get()._field_Params.len() > 0LL) && _1e5460028_IsRef((*(_21616_m)).get()._field_Params[0LL].ptr()))) {
					return true;;
				};
			}
			_iter_next_1e850cb61:;
			++it;
			goto _iter_begin_1e850cb61;
		}
		_iter_end_1e850cb61:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4790018_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4790205_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e54527e0_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5452ca7_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545315e_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545355a_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5453912_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5453c20_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5454270_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5454b22_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5454ec9_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545544c_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5455804_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5455bab_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545612e_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545666d_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5456bac_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5457493_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5457839_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5457c02_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5457edd_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545854e_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545884b_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5458c25_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5459110_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545942e_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5459819_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5459c04_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545a1aa_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545a661_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545aa4b_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545ad6a_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545b189_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545b83d_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545bba1_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545c08b_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545c388_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545c674_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545c960_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545cc6d_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545d136_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545d422_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545deb1_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e5462ca6_ParamIns> _1e545ea50_instance(jule::Ptr<_1e545e687_Param> _self_) {
	return jule::new_ptr<_1e5462ca6_ParamIns>(_1e5462ca6_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1e545ecb4_IsSelf(_1e545e687_Param* _self_) {
	return (((*(_self_))._field_Ident == jule::Str("&self", 5)) || ((*(_self_))._field_Ident == jule::Str("self", 4)));;
}



inline jule::Bool _1e5460028_IsRef(_1e545e687_Param* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1e545e687_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5461436_IsVoid(_1e5460ec4_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1e546169a_IsMethod(_1e5460ec4_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1e546190e_IsEntryPoint(_1e5460ec4_Fn* _self_) {
	return ((*(_self_))._field_Ident == jule::Str("main", 4));;
}



inline jule::Bool _1e5461b73_IsInit(_1e5460ec4_Fn* _self_) {
	return ((*(_self_))._field_Ident == jule::Str("init", 4));;
}



inline jule::Bool _1e5461dd7_IsAnon(_1e5460ec4_Fn* _self_) {
	return _20d1580d2_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1e546214b_AnyVar(_1e5460ec4_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(_self_))._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1e5463b75_FnIns> _1e54623b0_instanceForce(jule::Ptr<_1e5460ec4_Fn> _self_) {
	jule::Ptr<_1e5463b75_FnIns> _10017_ins = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1e5480ad7_Scope>(), ._field_Refers=static__1e5466d76_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1e5462ca6_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto expr = &(_self_.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e852673a:;
		if (it != expr_end) {
			jule::Ptr<_1e545e687_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_1e545ea50_instance(_10721_p));;
			}
			_iter_next_1e852673a:;
			++it;
			goto _iter_begin_1e852673a;
		}
		_iter_end_1e852673a:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_1e5463b75_FnIns> _1e5462624_instance(jule::Ptr<_1e5460ec4_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _1e54623b0_instanceForce(_self_);;
}



inline jule::Ptr<_1e5463b75_FnIns> _1e54628ee_appendInstance(_1e5460ec4_Fn* _self_, jule::Ptr<_1e5463b75_FnIns>* _12838_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e852a51e:;
		if (it != expr_end) {
			jule::Ptr<_1e5463b75_FnIns> _14421_ains = *it;
			{
				if (_1e546557d_Same(_14421_ains.ptr(), (*(_12838_ins)))) {
					return _14421_ains;;
				};
			}
			_iter_next_1e852a51e:;
			++it;
			goto _iter_begin_1e852a51e;
		}
		_iter_end_1e852a51e:;
	};
	(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5460ec4_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e5463180_Str(_1e5462ca6_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*(_self_))._field_Decl.get()._field_Reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1e545ecb4_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1e5460028_IsRef((*(_self_))._field_Decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;;
	};
	if ((*(_self_))._field_Decl.get()._field_Variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_16617_s+=_1e554e17d_Str((*(_self_))._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5462ca6_ParamIns _Src) {
	_Stream << _1e5463180_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e5463ea5_Str(_1e5463b75_FnIns* _self_) {
	;
	return _1e546588b_GetKindStr(_self_, false);;
}



inline jule::Bool _1e54642b3_Equal(jule::Ptr<_1e5463b75_FnIns> _self_, jule::Ptr<_1e554dc82_TypeKind> _21721_other) {
	jule::Ptr<_1e5463b75_FnIns> _21813_f = _1e5552307_Fn(_21721_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _1e5464725_EqualFn(_self_, &(_21813_f));;
}



inline jule::Bool _1e5464725_EqualFn(jule::Ptr<_1e5463b75_FnIns> _self_, jule::Ptr<_1e5463b75_FnIns>* _22824_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != (*(_22824_f)).get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != (*(_22824_f)).get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_1e5461436_IsVoid(_self_.get()._field_Decl.ptr()) != _1e5461436_IsVoid((*(_22824_f)).get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1e5462ca6_ParamIns>,jule::Ptr<_1e5462ca6_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1e5462ca6_ParamIns>,jule::Ptr<_1e5462ca6_ParamIns>)>([=](jule::Ptr<_1e5462ca6_ParamIns> _23830_p1, jule::Ptr<_1e5462ca6_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_1e545ecb4_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1e545ecb4_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1e5460028_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1e5460028_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _1e554e48b_Equal(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if (((*(_22824_f)).get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i], (*(_22824_f)).get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_1e85387a2:;
	}
	_iter_end_1e85387a2:;;
	if ((!(_1e5461436_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1e554e48b_Equal(_self_.get()._field_Result, (*(_22824_f)).get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1e5464a33_equalTrait(jule::Ptr<_1e5463b75_FnIns> _self_, jule::Ptr<_1e5463b75_FnIns>* _28727_other) {
	if ((!(_1e5464725_EqualFn(_self_, _28727_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != (*(_28727_other)).get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1e554dc82_TypeKind>> _1e5464c97_Types(_1e5463b75_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1e853bbe5:;
			{
				return nullptr;;
			}
		}
		else if ((_1e5552ca8_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1e853bc5b:;
			{
				return jule::Slice<jule::Ptr<_1e554dc82_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1e853bb7e:;
			{
				return _1e5552ca8_Tup((*(_self_))._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_1e853bab3:;
	};
}



inline jule::Bool _1e546500b_IsBuiltin(_1e5463b75_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1e5465270_IsAnon(_1e5463b75_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1e5461dd7_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1e546557d_Same(_1e5463b75_FnIns* _self_, jule::Ptr<_1e5463b75_FnIns> _32419_f) {
	if ((((*(_self_))._field_Decl != _32419_f.get()._field_Decl) || (_32419_f.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e854049b:;
		if (it != expr_end) {
			jule::I64 _32913_i = it - expr->begin();
			jule::Ptr<_1e554c555_InsGeneric> *_32916_g = it;
			{
				if ((!(_1e554e48b_Equal((*(_32916_g)).get()._field_Kind, _32419_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1e854049b:;
			++it;
			_32913_i++;
			goto _iter_begin_1e854049b;
		}
		_iter_end_1e854049b:;
	};
	return true;;
}



inline jule::Str _1e546588b_GetKindStr(_1e5463b75_FnIns* _self_, jule::Bool _34025_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Unsafety) {
		_34117_s+=jule::Str("unsafe ", 7);
	};
	_34117_s+=jule::Str("fn", 2);
	if ((_34025_ident && ((*(_self_))._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*(_self_))._field_Decl.get()._field_Ident);
	};
	_34117_s+=jule::Str("(", 1);
	jule::I64 _35413_n = (*(_self_))._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e854422a:;
			if (it != expr_end) {
				jule::Ptr<_1e5462ca6_ParamIns> *_35620_p = it;
				{
					_34117_s+=_1e5463180_Str((*(_35620_p)).ptr());
					_34117_s+=jule::Str(",", 1);
				}
				_iter_next_1e854422a:;
				++it;
				goto _iter_begin_1e854422a;
			}
			_iter_end_1e854422a:;
		};
		(_34117_s).mut_slice(0LL, (_34117_s.len() - 1LL));;
	};
	_34117_s+=jule::Str(")", 1);
	if ((*(_self_))._field_Decl.get()._field_Exceptional) {
		_34117_s+=jule::Str("!", 1);
	};
	if ((!(_1e5461436_IsVoid((*(_self_))._field_Decl.ptr())))) {
		_34117_s+=jule::Str(":", 1);
		_34117_s+=_1e554e17d_Str((*(_self_))._field_Result.ptr());
	};
	return _34117_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5463b75_FnIns _Src) {
	_Stream << _1e5463ea5_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1e5466ae0_ReferenceStack> static__1e5466d76_new(void) {
	return jule::new_ptr<_1e5466ae0_ReferenceStack>(_1e5466ae0_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1e546720b_Len(_1e5466ae0_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1e5467519_At(_1e5466ae0_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1e546778e_Push(_1e5466ae0_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*(_self_))._field_buffer = jule::alloc_for_append((*(_self_))._field_buffer,1);(*(_self_))._field_buffer.__push(_7327_ref);;
}



inline jule::Bool _1e8ae65e0_Exist(_1e5466ae0_ReferenceStack* _self_, jule::Ptr<_1e5463b75_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8ae78ee:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1e8ae78ee:;
			++it;
			goto _iter_begin_1e8ae78ee;
		}
		_iter_end_1e8ae78ee:;
	};
	return false;;
}

inline jule::Bool _1e8b0a34b_Exist(_1e5466ae0_ReferenceStack* _self_, jule::Ptr<_1e54ca291_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8b0b616:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1e8b0b616:;
			++it;
			goto _iter_begin_1e8b0b616;
		}
		_iter_end_1e8b0b616:;
	};
	return false;;
}

inline jule::Bool _1e8b9a82b_Exist(_1e5466ae0_ReferenceStack* _self_, jule::Ptr<_1e47903e2_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8b9bb3a:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1e8b9bb3a:;
			++it;
			goto _iter_begin_1e8b9bb3a;
		}
		_iter_end_1e8b9bb3a:;
	};
	return false;;
}

inline jule::Bool _1e8e9b81e_Exist(_1e5466ae0_ReferenceStack* _self_, jule::Ptr<_1e5472dc6_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8e9ca51:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1e8e9ca51:;
			++it;
			goto _iter_begin_1e8e9ca51;
		}
		_iter_end_1e8e9ca51:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5466ae0_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5467e54_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e546c3ed_symbolBuilder> _1e546c8a4_getRoot(jule::Ptr<_1e546c3ed_symbolBuilder> _self_) {
	jule::Ptr<_1e546c3ed_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1e855b60a:;
	}
	_iter_end_1e855b60a:;;
	return _31617_root;;
}



inline void _1e546cc6c_pushErr(_1e546c3ed_symbolBuilder* _self_, jule::Ptr<_20d155596_Token>* _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1e54aa87b_compilerErr(_32327_token, true, _32342_fmt, _32355_args));;
}



inline void _1e546d135_pushErrText(_1e546c3ed_symbolBuilder* _self_, jule::Ptr<_20d155596_Token>* _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1e54aa87b_compilerErr(_32731_token, false, _32746_fmt, _32759_args));;
}



inline void _1e546d454_pushSuggestion(_1e546c3ed_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_1e54abd11_pushSugggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _33233_fmt, _33246_args);
	};
}



inline jule::Bool _1e546d80b_checkCppUseDeclPath(_1e546c3ed_symbolBuilder* _self_, jule::Ptr<_1e478aed1_UseDecl>* _33639_decl, jule::Str _33655_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _33713_ext = _2413142c1_Ext(_33655_path);;
	if (((!(_243052606_IsValidHeaderExt(_33713_ext))) && (!(_24305289d_IsValidCppExt(_33713_ext))))) {
		_1e546cc6c_pushErr(_self_, &((*(_33639_decl)).get()._field_Token), jule::Str("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_33713_ext, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2411eda29_Status> _34413_info = ({
		auto except = static__240409a38_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_1e546cc6c_pushErr(_self_, &((*(_33639_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_33639_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_2411eda29_Status>(nullptr);});
	});;
	if (_240503c53_IsDir(_34413_info.ptr())) {
		_1e546cc6c_pushErr(_self_, &((*(_33639_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_33639_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1e54a4149_ImportInfo> _1e546dad6_buildCppHeaderImport(_1e546c3ed_symbolBuilder* _self_, jule::Ptr<_1e478aed1_UseDecl>* _35644_decl) {
	jule::Str _35717_path = (*(_35644_decl)).get()._field_LinkPath;;
	if ((!(_2430523d6_IsStdHeaderPath((*(_35644_decl)).get()._field_LinkPath)))) {
		_35717_path=_241312d08_Join(jule::Slice<jule::Str>::make({_20d15b327_Dir((*(_35644_decl)).get()._field_Token.get()._field_File.ptr()),(*(_35644_decl)).get()._field_LinkPath}));
		jule::Bool _36121_ok = _1e546d80b_checkCppUseDeclPath(_self_, _35644_decl, _35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2412cc531_Abs(_35717_path);
			_35717_path = __jule_assign_result.__jule_result_arg0;
			_36121_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_36121_ok))) {
			_1e546cc6c_pushErr(_self_, &((*(_35644_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_35644_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		};
	};
	return jule::new_ptr<_1e54a4149_ImportInfo>(_1e54a4149_ImportInfo{._field_Token=(*(_35644_decl)).get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=(*(_35644_decl)).get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1e54a4149_ImportInfo> _1e546dde4_buildStdImport(_1e546c3ed_symbolBuilder* _self_, jule::Ptr<_1e478aed1_UseDecl>* _38438_decl) {
	jule::Str _38517_path = (*(_38438_decl)).get()._field_LinkPath.slice(5LL);;
	_38517_path=_242edd3e9_Replace(_38517_path, jule::Str("::", 2), static_cast<jule::Str>(47LL), -1LL);
	_38517_path=_241312d08_Join(jule::Slice<jule::Str>::make({_242d165c9_PathStdlib,_38517_path}));
	jule::Bool _38820_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2412cc531_Abs(_38517_path);
		_38517_path = __jule_assign_result.__jule_result_arg0;
		_38820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_38820_ok))) {
		_1e546cc6c_pushErr(_self_, &((*(_38438_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_38438_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2411eda29_Status> _39513_info = ({
		auto except = static__240409a38_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_1e546cc6c_pushErr(_self_, &((*(_38438_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_38438_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_2411eda29_Status>(nullptr);});
	});;
	if ((!(_240503c53_IsDir(_39513_info.ptr())))) {
		_1e546cc6c_pushErr(_self_, &((*(_38438_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_38438_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _40513_i = (_242ed3961_FindLast((*(_38438_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = (*(_38438_decl)).get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_1e54a4149_ImportInfo>(_1e54a4149_ImportInfo{._field_Token=(*(_38438_decl)).get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=(*(_38438_decl)).get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=(*(_38438_decl)).get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=(*(_38438_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1e54a70a3_Package>(_1e54a70a3_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1e54a4149_ImportInfo> _1e546e202_buildIdentImport(jule::Ptr<_1e546c3ed_symbolBuilder> _self_, jule::Ptr<_1e478aed1_UseDecl>* _42341_decl) {
	jule::Str _42413_modPath = _1e54a14cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e54a0640_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_1e546cc6c_pushErr(_self_.ptr(), &((*(_42341_decl)).get()._field_Token), jule::Str("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1e546d454_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _43117_path = (*(_42341_decl)).get()._field_LinkPath;;
	_43117_path=_242edd3e9_Replace(_43117_path, jule::Str("::", 2), static_cast<jule::Str>(47LL), -1LL);
	_43117_path=_241312d08_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2412cc531_Abs(_43117_path);
		_43117_path = __jule_assign_result.__jule_result_arg0;
		_43520_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_43520_ok))) {
		_1e546cc6c_pushErr(_self_.ptr(), &((*(_42341_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_42341_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2411eda29_Status> _44213_info = ({
		auto except = static__240409a38_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_1e546cc6c_pushErr(_self_.ptr(), &((*(_42341_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_42341_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_2411eda29_Status>(nullptr);});
	});;
	if ((!(_240503c53_IsDir(_44213_info.ptr())))) {
		_1e546cc6c_pushErr(_self_.ptr(), &((*(_42341_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_42341_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _45213_i = (_242ed3961_FindLast((*(_42341_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = (*(_42341_decl)).get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_1e54a4149_ImportInfo>(_1e54a4149_ImportInfo{._field_Token=(*(_42341_decl)).get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=(*(_42341_decl)).get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=(*(_42341_decl)).get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=(*(_42341_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1e54a70a3_Package>(_1e54a70a3_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1e54a4149_ImportInfo> _1e546e510_buildImport(jule::Ptr<_1e546c3ed_symbolBuilder> _self_, jule::Ptr<_1e478aed1_UseDecl>* _47036_decl) {
	{
		
		if ((*(_47036_decl)).get()._field_CppLinked) {
			_case_begin_1e8573b2d:;
			{
				return _1e546dad6_buildCppHeaderImport(_self_.ptr(), _47036_decl);;
			}
		}
		else if ((*(_47036_decl)).get()._field_Std) {
			_case_begin_1e8573d70:;
			{
				return _1e546dde4_buildStdImport(_self_.ptr(), _47036_decl);;
			}
		}
		else {
			_case_begin_1e8573435:;
			{
				return _1e546e202_buildIdentImport(_self_, _47036_decl);;
			}
		}
		_match_end_1e8573369:;
	};
}



inline jule::Bool _1e546e81d_checkDuplicateUseDecl(_1e546c3ed_symbolBuilder* _self_, jule::Ptr<_1e54a4149_ImportInfo>* _48141_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e54a4149_ImportInfo> _48313_lpkg = _1e551d801_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)>([=](jule::Ptr<_1e54a4149_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return ((*(_48141_pkg)).get()._field_Path == _48348_spkg.get()._field_Path);;
	}));;
	if ((_48313_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1e546cc6c_pushErr(_self_, &((*(_48141_pkg)).get()._field_Token), jule::Str("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*(_48141_pkg)).get()._field_LinkPath, &__jule_any_type5)}));
	_1e546d454_pushSuggestion(_self_, jule::Str("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1e546eb3c_implImportSelections(_1e546c3ed_symbolBuilder* _self_, jule::Ptr<_1e54a4149_ImportInfo>* _49544_imp, jule::Ptr<_1e478aed1_UseDecl>* _49567_decl) {
	(*(_49544_imp)).get()._field_Selected=(*(_49567_decl)).get()._field_Selected;
	{
		auto expr = &((*(_49544_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8577703:;
		if (it != expr_end) {
			jule::Ptr<_20d155596_Token> _49716_item = *it;
			{
				{
					auto expr = &((*(_49544_imp)).get()._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e8577e40:;
					if (it != expr_end) {
						jule::Ptr<_20d155596_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1e8577e40;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_1e546cc6c_pushErr(_self_, &(_49716_item), jule::Str("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind, &__jule_any_type5)}));
								_1e546d454_pushSuggestion(_self_, jule::Str("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1e8577e40;
							};
						}
						_iter_next_1e8577e40:;
						++it;
						goto _iter_begin_1e8577e40;
					}
					_iter_end_1e8577e40:;
				};
			}
			_iter_next_1e8577703:;
			++it;
			goto _iter_begin_1e8577703;
		}
		_iter_end_1e8577703:;
	};
}



inline jule::Str _1e546ee4a_getAsLinkPath(jule::Ptr<_1e546c3ed_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_242eae332_HasPrefix(_51037_path, _242d165c9_PathStdlib)) {
		(_51037_path).mut_slice(_242d165c9_PathStdlib.len());;
		return (jule::Str("std", 3) + _242edd3e9_Replace(_51037_path, static_cast<jule::Str>(47LL), jule::Str("::", 2), -1LL));;
	};
	jule::Str _51614_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2412cc531_Abs(_1e54a14cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e54a0640_GetModPath(_self_.get()._field_importer));
		_51614_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 47LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _242edd3e9_Replace(_51037_path, static_cast<jule::Str>(47LL), jule::Str("::", 2), -1LL);;
}



inline void _1e5470313_pushCycleError(jule::Ptr<_1e546c3ed_symbolBuilder> _self_, jule::Ptr<_1e546c3ed_symbolBuilder>* _52435_sb, jule::Str _52455_path, jule::Str* _52471_message) {
	;
	jule::Str _52613_refersTo = _24305e8ee_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1e546ee4a_getAsLinkPath(_self_, _20d15b327_Dir((*(_52435_sb)).get()._field_table.get()._field_File.ptr())), &__jule_any_type5),jule::Any(_1e546ee4a_getAsLinkPath(_self_, _52455_path), &__jule_any_type5)}));;
	((*(_52471_message))).buffer.insert(0, (((_242eaebe5_Repeat(jule::Str(" ", 1), 4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _1e54706cb_pushCrossCycleError(jule::Ptr<_1e546c3ed_symbolBuilder> _self_, jule::Ptr<_1e546c3ed_symbolBuilder>* _53340_target, jule::Ptr<_1e54a4149_ImportInfo>* _53365_imp, jule::Ptr<_20d155596_Token>* _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_1e5470313_pushCycleError(_self_, &(_self_), (*(_53365_imp)).get()._field_Path, &(_53417_message));
	jule::Ptr<_1e546c3ed_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_1e546c3ed_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_1e5470313_pushCycleError(_self_, &(_53917_old.get()._field_owner), _20d15b327_Dir(_53917_old.get()._field_table.get()._field_File.ptr()), &(_53417_message));
			if ((_53817_owner.get()._field_owner == (*(_53340_target)))) {
				_1e5470313_pushCycleError(_self_, _53340_target, _20d15b327_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()), &(_53417_message));
				goto _iter_end_1e85807c7;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_1e85807c7:;
	}
	_iter_end_1e85807c7:;;
	_1e546cc6c_pushErr(_self_.ptr(), _53384_errorToken, jule::Str("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_53417_message, &__jule_any_type5)}));
}



inline jule::Bool _1e5470a83_checkImportCycles(jule::Ptr<_1e546c3ed_symbolBuilder> _self_, jule::Ptr<_1e54a4149_ImportInfo> _55637_imp, jule::Ptr<_1e478aed1_UseDecl>* _55656_decl) {
	if ((_55637_imp.get()._field_Path == _20d15b327_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1e546cc6c_pushErr(_self_.ptr(), &((*(_55656_decl)).get()._field_Token), jule::Str("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1e546ee4a_getAsLinkPath(_self_, _55637_imp.get()._field_Path), &__jule_any_type5)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_20d15b327_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1e54706cb_pushCrossCycleError(_self_, &(_self_.get()._field_owner), &(_55637_imp), &((*(_55656_decl)).get()._field_Token));
		return false;;
	};
	jule::Ptr<_1e546c3ed_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_20d15b327_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1e54706cb_pushCrossCycleError(_self_, &(_57117_owner), &(_55637_imp), &((*(_55656_decl)).get()._field_Token));
		return false;;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _1e5470e6d_checkPackageAccessibility(_1e546c3ed_symbolBuilder* _self_, jule::Ptr<_1e478aed1_UseDecl>* _59245_decl, jule::Str* _59262_mod, jule::Str* _59273_path) {
	if (((_1e54a14cb_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1e54a0640_GetModPath((*(_self_))._field_importer) != (*(_59262_mod))) && _242edc151_Contains((*(_59273_path)), jule::Str("internal", 8)))) {
		_1e546cc6c_pushErr(_self_, &((*(_59245_decl)).get()._field_Token), jule::Str("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e5471336_importPackage(jule::Ptr<_1e546c3ed_symbolBuilder> _self_, jule::Ptr<_1e54a4149_ImportInfo>* _59838_imp, jule::Ptr<_1e478aed1_UseDecl>* _59861_decl) {
	jule::Bool __jule_func_result = false;
	if ((*(_59838_imp)).get()._field_CppLinked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1e54a4149_ImportInfo> _60317_port = _1e54a14cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e54a0c5b_GetImport(_self_.get()._field_importer, (*(_59838_imp)).get()._field_Path);;
	if ((_60317_port != nullptr)) {
		(*(_59838_imp)).get()._field_Package=_60317_port.get()._field_Package;
		(*(_59838_imp)).get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _1e54a14cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e54a0640_GetModPath(_self_.get()._field_importer);;
		_1e54a14cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e54a03dc_SetModPath(_self_.get()._field_importer, _1e54a14cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e54a094d_ModById(_self_.get()._field_importer, (*(_59838_imp)).get()._field_ModId));
		_1e5470e6d_checkPackageAccessibility(_self_.ptr(), _59861_decl, &(_60817_oldMod), &(_60317_port.get()._field_Path));
		_1e54a14cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e54a03dc_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_1e5470a83_checkImportCycles(_self_, (*(_59838_imp)), _59861_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _61717_oldMod = _1e54a14cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e54a0640_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1e54a14cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e54a03dc_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if ((*(_59838_imp)).get()._field_Std) {
			_1e54a14cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e54a03dc_SetModPath(_self_.get()._field_importer, _242d165c9_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1e473e391_Ast>> _62222_asts;;
		jule::Slice<_24305e4ae_Log> _62232_errors;;
		({
			__jule_tuple_sx_1e473e391_Ast__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e54a14cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e54a1113_ImportPackage(_self_.get()._field_importer, (*(_59838_imp)).get()._field_Path, (!((*(_59838_imp)).get()._field_Std)));
			_62222_asts = __jule_assign_result.__jule_result_arg0;
			_62232_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1e5470e6d_checkPackageAccessibility(_self_.ptr(), _59861_decl, &(_61717_oldMod), &((*(_59838_imp)).get()._field_Path));
		{
			auto expr = &(_62222_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e858e6b5:;
			if (it != expr_end) {
				jule::Ptr<_1e473e391_Ast> _63025_ast = *it;
				{
					jule::Ptr<_1e551cec6_SymbolTable> _63125_table = nullptr;;
					({
						__jule_tuple_x_1e551cec6_SymbolTable__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e556a8d6_buildSymbols(&(_63025_ast), &(_self_.get()._field_importer), _self_);
						_63125_table = __jule_assign_result.__jule_result_arg0;
						_62232_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*(_59838_imp)).get()._field_Package.get()._field_Files = jule::alloc_for_append((*(_59838_imp)).get()._field_Package.get()._field_Files,1);(*(_59838_imp)).get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_1e858e6b5:;
				++it;
				goto _iter_begin_1e858e6b5;
			}
			_iter_end_1e858e6b5:;
		};
	};
	_1e546eb3c_implImportSelections(_self_.ptr(), _59838_imp, _59861_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1e54a4149_ImportInfo> _1e5471644_importUseDecl(jule::Ptr<_1e546c3ed_symbolBuilder> _self_, jule::Ptr<_1e478aed1_UseDecl>* _64538_decl) {
	jule::Ptr<_1e54a4149_ImportInfo> _64617_imp = _1e546e510_buildImport(_self_, _64538_decl);;
	if ((_64617_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _65217_ok = _1e546e81d_checkDuplicateUseDecl(_self_.ptr(), &(_64617_imp));;
	if ((!(_65217_ok))) {
		return nullptr;;
	};
	_65217_ok=_1e5471336_importPackage(_self_, &(_64617_imp), _64538_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_64617_imp);;
	if (_65217_ok) {
		_1e54a14cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e54a1388_Imported(_self_.get()._field_importer, _64617_imp);
		return _64617_imp;;
	};
	return nullptr;;
}



inline void _1e5471820_importUseDecls(jule::Ptr<_1e546c3ed_symbolBuilder> _self_) {
	{
		auto expr = &(_self_.get()._field_ast.get()._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8593de5:;
		if (it != expr_end) {
			jule::Ptr<_1e478aed1_UseDecl> _66721_decl = *it;
			{
				_1e5471644_importUseDecl(_self_, &(_66721_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1e8593de5;
				};
			}
			_iter_next_1e8593de5:;
			++it;
			goto _iter_begin_1e8593de5;
		}
		_iter_end_1e8593de5:;
	};
}



inline void _1e5471a95_appendNode(_1e546c3ed_symbolBuilder* _self_, _1e4740183_Node* _67634_node) {
	{
		auto &_match_expr{ (*(_67634_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1e859491d:;
			{
				(*(_self_))._field_table.get()._field_Impls = jule::alloc_for_append((*(_self_))._field_table.get()._field_Impls,1);(*(_self_))._field_table.get()._field_Impls.__push(_1e546bd9d_buildImpl((*(_67634_node))._field_Data.cast_ptr<_1e478e754_Impl>(&__jule_any_type11)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1e85957dc:;
			{
				jule::Ptr<_1e554d08e_TypeAlias> _68121_ta = _1e5468839_buildTypeAlias((*(_67634_node))._field_Data.cast_ptr<_1e4789ae5_TypeAliasDecl>(&__jule_any_type12));;
				(*(_self_))._field_table.get()._field_TypeAliases = jule::alloc_for_append((*(_self_))._field_table.get()._field_TypeAliases,1);(*(_self_))._field_table.get()._field_TypeAliases.__push(_68121_ta);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1e8595853:;
			{
				jule::Ptr<_1e4790018_Struct> _68421_srct = _1e5469197_buildStruct((*(_67634_node))._field_Data.cast_ptr<_1e478da3e_StructDecl>(&__jule_any_type13));;
				(*(_self_))._field_table.get()._field_Structs = jule::alloc_for_append((*(_self_))._field_table.get()._field_Structs,1);(*(_self_))._field_table.get()._field_Structs.__push(_68421_srct);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1e85958b9:;
			{
				jule::Ptr<_1e5460ec4_Fn> _68721_f = _1e5469d02_buildFn((*(_67634_node))._field_Data.cast_ptr<_1e47852a5_FnDecl>(&__jule_any_type14));;
				(*(_self_))._field_table.get()._field_Funcs = jule::alloc_for_append((*(_self_))._field_table.get()._field_Funcs,1);(*(_self_))._field_table.get()._field_Funcs.__push(_68721_f);;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1e8596106:;
			{
				jule::Ptr<_1e5472dc6_Trait> _69021_t = _1e546a341_buildTrait((*(_67634_node))._field_Data.cast_ptr<_1e478e149_TraitDecl>(&__jule_any_type15));;
				(*(_self_))._field_table.get()._field_Traits = jule::alloc_for_append((*(_self_))._field_table.get()._field_Traits,1);(*(_self_))._field_table.get()._field_Traits.__push(_69021_t);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1e859616c:;
			{
				jule::Ptr<_1e54ca291_Var> _69321_v = _1e546b85e_buildVar((*(_67634_node))._field_Data.cast_ptr<_1e4786284_VarDecl>(&__jule_any_type16));;
				(*(_self_))._field_table.get()._field_Vars = jule::alloc_for_append((*(_self_))._field_table.get()._field_Vars,1);(*(_self_))._field_table.get()._field_Vars.__push(_69321_v);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1e85961d3:;
			{
				jule::Ptr<_1e547501b_Enum> _69621_e = _1e546ab27_buildEnum((*(_67634_node))._field_Data.cast_ptr<_1e478be7c_EnumDecl>(&__jule_any_type17));;
				(*(_self_))._field_table.get()._field_Enums = jule::alloc_for_append((*(_self_))._field_table.get()._field_Enums,1);(*(_self_))._field_table.get()._field_Enums.__push(_69621_e);;
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1e8596249:;
			{
				jule::Ptr<_1e5476616_TypeEnum> _69921_e = _1e546b5b7_buildTypeEnum((*(_67634_node))._field_Data.cast_ptr<_1e478d08d_TypeEnumDecl>(&__jule_any_type18));;
				(*(_self_))._field_table.get()._field_TypeEnums = jule::alloc_for_append((*(_self_))._field_table.get()._field_TypeEnums,1);(*(_self_))._field_table.get()._field_TypeEnums.__push(_69921_e);;
			}
		}
		else {
			_case_begin_1e85956cc:;
			{
				_1e546cc6c_pushErr(_self_, &((*(_67634_node))._field_Token), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e8595677:;
	};
}



inline void _1e5471c71_appendNodes(_1e546c3ed_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e859d5d6:;
		if (it != expr_end) {
			_1e4740183_Node _70721_node = *it;
			{
				_1e5471a95_appendNode(_self_, &(_70721_node));
			}
			_iter_next_1e859d5d6:;
			++it;
			goto _iter_begin_1e859d5d6;
		}
		_iter_end_1e859d5d6:;
	};
}



inline void _1e5471ee6_pushDirectivePass(_1e546c3ed_symbolBuilder* _self_, jule::Ptr<_1e474057e_Directive>* _71241_d) {
	if (((*(_71241_d)).get()._field_Args.len() == 0LL)) {
		_1e546cc6c_pushErr(_self_, &((*(_71241_d)).get()._field_Tag), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_71241_d)).get()._field_Args.len() > 1LL)) {
		jule::Ptr<_20d155596_Token> _71717_arg = (*(_71241_d)).get()._field_Args[1LL];;
		_1e546cc6c_pushErr(_self_, &(_71717_arg), jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d155596_Token> _72113_arg = (*(_71241_d)).get()._field_Args[0LL];;
	if ((_72113_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1e546cc6c_pushErr(_self_, &(_72113_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_72113_arg.get()._field_Kind[0LL] != '\"')) {
		_1e546cc6c_pushErr(_self_, &(_72113_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_self_))._field_table.get()._field_Passes = jule::alloc_for_append((*(_self_))._field_table.get()._field_Passes,1);(*(_self_))._field_table.get()._field_Passes.__push(_1e5467e54_Pass{._field_Token=(*(_71241_d)).get()._field_Tag, ._field_Text=_72113_arg.get()._field_Kind.slice(1LL, (_72113_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _1e54721c2_appendTopDirectives(_1e546c3ed_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e85a1dae:;
		if (it != expr_end) {
			jule::Ptr<_1e474057e_Directive> _73921_d = *it;
			{
				{
					auto &_match_expr{ _73921_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1e85a5137:;
						{
							_1e5471ee6_pushDirectivePass(_self_, &(_73921_d));
						}
					}
					_match_end_1e85a50b0:;
				};
			}
			_iter_next_1e85a1dae:;
			++it;
			goto _iter_begin_1e85a1dae;
		}
		_iter_end_1e85a1dae:;
	};
}



inline void _1e547239d_build(jule::Ptr<_1e546c3ed_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1e551cec6_SymbolTable>(_1e551cec6_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1e54721c2_appendTopDirectives(_self_.ptr());
	_1e5471820_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1e5471c71_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e546c3ed_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e54732c2_Str(_1e5472dc6_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1e54735d0_Equal(jule::Ptr<_1e5472dc6_Trait> _self_, jule::Ptr<_1e554dc82_TypeKind> _2521_other) {
	jule::Ptr<_1e5472dc6_Trait> _2613_trt = _1e55527d0_Trait(_2521_other.ptr());;
	return (_self_ == _2613_trt);;
}



inline jule::Bool _1e5473943_IsBuiltin(_1e5472dc6_Trait* _self_) {
	return ((*(_self_))._field_Token == nullptr);;
}



inline jule::Ptr<_1e5460ec4_Fn> _1e5473c51_FindMethod(_1e5472dc6_Trait* _self_, jule::Str _3929_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e85a8d72:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;;
				};
			}
			_iter_next_1e85a8d72:;
			++it;
			goto _iter_begin_1e85a8d72;
		}
		_iter_end_1e85a8d72:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5472dc6_Trait _Src) {
	_Stream << _1e54732c2_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1e5474911_AutoExpr(_1e5474526_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5474526_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e547537e_Str(_1e547501b_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1e547568c_Equal(jule::Ptr<_1e547501b_Enum> _self_, jule::Ptr<_1e554dc82_TypeKind> _3821_other) {
	jule::Ptr<_1e547501b_Enum> _3913_enm = _1e5551856_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_1e5474526_EnumItem> _1e5475acc_FindItem(_1e547501b_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e85ab4c3:;
		if (it != expr_end) {
			jule::Ptr<_1e5474526_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1e85ab4c3:;
			++it;
			goto _iter_begin_1e85ab4c3;
		}
		_iter_end_1e85ab4c3:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e547501b_Enum _Src) {
	_Stream << _1e547537e_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5476050_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e5476946_Str(_1e5476616_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1e5476c54_Equal(jule::Ptr<_1e5476616_TypeEnum> _self_, jule::Ptr<_1e554dc82_TypeKind> _8021_other) {
	jule::Ptr<_1e5476616_TypeEnum> _8113_tenm = _1e5551aba_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_1e5476050_TypeEnumItem> _1e5477150_FindItem(_1e5476616_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e85ad591:;
		if (it != expr_end) {
			jule::Ptr<_1e5476050_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1e85ad591:;
			++it;
			goto _iter_begin_1e85ad591;
		}
		_iter_end_1e85ad591:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5476616_TypeEnum _Src) {
	_Stream << _1e5476946_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1e54ac295_Sema>*,jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>*)> _1e5479075_readyFn(jule::Ptr<_1e5478b46_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1e54ac295_Sema>*,jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>*)>([=](jule::Ptr<_1e54ac295_Sema>* _6321_sema, jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &(_self_.get()._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e85ba7e0:;
			if (it != expr_end) {
				jule::I64 _6418_i = it - expr->begin();
				jule::Ptr<_1e4780b1e_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1e554c555_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1e85ba7e0;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1e554dc82_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto expr = &(_6425_g.get()._field_Constraint.get()._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e85bc7ae:;
						if (it != expr_end) {
							jule::Ptr<_1e4773826_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = (*(_6321_sema)).get()._field_errors.len();;
								jule::Ptr<_1e554dc82_TypeKind> _7229_kind = _1e54b4599_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_1e5569c04_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type19) {
											_case_begin_1e85be9ae:;
											{
												jule::Ptr<_1e4773ddc_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_1e4773ddc_IdentTypeDecl>(&__jule_any_type19);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1e547a20d_isBuiltinConstraint(&(_7637_itd.get()._field_Ident)))) {
													_7229_kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													(*(_6321_sema)).get()._field_errors=(*(_6321_sema)).get()._field_errors.slice(0LL, _7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1e85be959:;
									};
									return false;;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1e85bc7ae:;
							++it;
							goto _iter_begin_1e85bc7ae;
						}
						_iter_end_1e85bc7ae:;
					};
				}
				_iter_next_1e85ba7e0:;
				++it;
				_6418_i++;
				goto _iter_begin_1e85ba7e0;
			}
			_iter_end_1e85ba7e0:;
		};
		return true;;
	});;
}



inline jule::Bool _1e54792d9_readyFi(jule::Ptr<_1e5478b46_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1e54b8b75_fnEnvironment(_self_.get()._field_s, &(_self_.get()._field_fi), _1e5479075_readyFn(_self_)));;
}



inline jule::Bool _1e547954d_readySi(jule::Ptr<_1e5478b46_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1e5479075_readyFn(_self_)(&(_self_.get()._field_s), &(_self_.get()._field_genericsA)));;
}



inline jule::Bool _1e54797b2_ready(jule::Ptr<_1e5478b46_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1e54792d9_readyFi(_self_);;
	};
	return _1e547954d_readySi(_self_);;
}



inline jule::Bool _1e5479a26_check(jule::Ptr<_1e5478b46_constraintChecker> _self_) {
	if ((!(_1e54797b2_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto expr = &(_self_.get()._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e85c6697:;
		if (it != expr_end) {
			jule::I64 _11914_i = it - expr->begin();
			jule::Ptr<_1e554c555_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1e85c6697;
				};
				{
					auto expr = &(_11921_g.get()._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e85c72be:;
					if (it != expr_end) {
						jule::Ptr<_1e554dc82_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1e55539ce_Prim> _12425_prim = _1e5551119_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1e55545c3_IsConstraint(_12425_prim.ptr()))) {
								if (_1e5479e22_matchConstraint(&(_12425_prim.get()._field_Kind), &(_11921_g.get()._field_Kind))) {
									goto _iter_next_1e85c6697;
								};
								goto _iter_next_1e85c72be;
							};
							if (_1e554e48b_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1e85c6697;
							};
						}
						_iter_next_1e85c72be:;
						++it;
						goto _iter_begin_1e85c72be;
					}
					_iter_end_1e85c72be:;
				};
				_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et, jule::Str("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type5)}));
				return false;;
			}
			_iter_next_1e85c6697:;
			++it;
			_11914_i++;
			goto _iter_begin_1e85c6697;
		}
		_iter_end_1e85c6697:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5478b46_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e547ae78_IsTraitImpl(_1e547aa7c_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1e547b1dc_IsStructImpl(_1e547aa7c_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e547aa7c_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5480ad7_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5480ed3_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e54812be_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5481643_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e548192e_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5482248_IsWhileNext(_1e5481da2_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5481da2_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5482787_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5482b83_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e548303a_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5483326_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5483612_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e54839b9_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5483e3c_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e54842e4_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5484d3e_IsGenericTypeMatch(_1e5484833_Match* _self_) {
	return (((*(_self_))._field_TypeMatch && ((*(_self_))._field_Expr != nullptr)) && (*(_self_))._field_Expr.get()._field_Kind.get()._field_Generic);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5484833_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5485647_isDefault(_1e548537d_Case* _self_) {
	return ((*(_self_))._field_Exprs == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e548537d_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5485933_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5485ca7_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e548b3ea_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e548b692_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e54a4149_ImportInfo> _1e548c93a_FindPackage(_1e548c4a6_scopeChecker* _self_, jule::Str _45430_ident) {
	return _1e54ac7b2_FindPackage((*(_self_))._field_s.ptr(), _45430_ident);;
}



inline jule::Ptr<_1e54a4149_ImportInfo> _1e548cc48_SelectPackage(_1e548c4a6_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)> _46432_selector) {
	return _1e54acac0_SelectPackage((*(_self_))._field_s.ptr(), _46432_selector);;
}



inline jule::Ptr<_1e54ca291_Var> _1e548d100_FindVar(_1e548c4a6_scopeChecker* _self_, jule::Str _47526_ident, jule::Bool _47538_cpp_linked) {
	;
	jule::Ptr<_1e54ca291_Var> _47817_v = _1e552076a_findVar((*(_self_))._field_table.ptr(), _47526_ident, _47538_cpp_linked, true);;
	if ((_47817_v != nullptr)) {
		return _47817_v;;
	};
	jule::Ptr<_1e548c4a6_scopeChecker> _48317_parent = (*(_self_))._field_parent;;
	while ((_48317_parent != nullptr)) {
		{
			_47817_v=_1e552076a_findVar(_48317_parent.get()._field_table.ptr(), _47526_ident, _47538_cpp_linked, true);
			if ((_47817_v != nullptr)) {
				return _47817_v;;
			};
			_48317_parent=_48317_parent.get()._field_parent;
		}
	_iter_next_1e8601084:;
	}
	_iter_end_1e8601084:;;
	return _1e54ace77_FindVar((*(_self_))._field_s.ptr(), _47526_ident, _47538_cpp_linked);;
}



inline jule::Ptr<_1e554d08e_TypeAlias> _1e548d4a7_FindTypeAlias(_1e548c4a6_scopeChecker* _self_, jule::Str _50232_ident, jule::Bool _50244_cppLinked) {
	;
	jule::Ptr<_1e554d08e_TypeAlias> _50517_ta = _1e5520bbb_findTypeAlias((*(_self_))._field_table.ptr(), _50232_ident, _50244_cppLinked, true);;
	if ((_50517_ta != nullptr)) {
		return _50517_ta;;
	};
	jule::Ptr<_1e548c4a6_scopeChecker> _51017_parent = (*(_self_))._field_parent;;
	while ((_51017_parent != nullptr)) {
		{
			_50517_ta=_1e5520bbb_findTypeAlias(_51017_parent.get()._field_table.ptr(), _50232_ident, _50244_cppLinked, true);
			if ((_50517_ta != nullptr)) {
				return _50517_ta;;
			};
			_51017_parent=_51017_parent.get()._field_parent;
		}
	_iter_next_1e8603be1:;
	}
	_iter_end_1e8603be1:;;
	return _1e54ad32e_FindTypeAlias((*(_self_))._field_s.ptr(), _50232_ident, _50244_cppLinked);;
}



inline jule::Ptr<_1e4790018_Struct> _1e548d85e_FindStruct(_1e548c4a6_scopeChecker* _self_, jule::Str _52729_ident, jule::Bool _52741_cppLinked) {
	return _1e54ad6d6_FindStruct((*(_self_))._field_s.ptr(), _52729_ident, _52741_cppLinked);;
}



inline jule::Ptr<_1e5460ec4_Fn> _1e548dc16_FindFn(_1e548c4a6_scopeChecker* _self_, jule::Str _53625_ident, jule::Bool _53637_cppLinked) {
	return _1e54ada8d_FindFn((*(_self_))._field_s.ptr(), _53625_ident, _53637_cppLinked);;
}



inline jule::Ptr<_1e5472dc6_Trait> _1e548e024_FindTrait(_1e548c4a6_scopeChecker* _self_, jule::Str _54528_ident) {
	return _1e54add9b_FindTrait((*(_self_))._field_s.ptr(), _54528_ident);;
}



inline jule::Ptr<_1e547501b_Enum> _1e548e332_FindEnum(_1e548c4a6_scopeChecker* _self_, jule::Str _55427_ident) {
	return _1e54ae1a9_FindEnum((*(_self_))._field_s.ptr(), _55427_ident);;
}



inline jule::Ptr<_1e5476616_TypeEnum> _1e548e640_FindTypeEnum(_1e548c4a6_scopeChecker* _self_, jule::Str _56331_ident) {
	return _1e54ae4b7_FindTypeEnum((*(_self_))._field_s.ptr(), _56331_ident);;
}



inline jule::Bool _1e548e970_isUnsafe(jule::Ptr<_1e548c4a6_scopeChecker> _self_) {
	jule::Ptr<_1e548c4a6_scopeChecker> _57117_scope = _self_;;
	_julec_label_iter:;
	if (_57117_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_57117_scope.get()._field_parent != nullptr)) {
		_57117_scope=_57117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1e548ebd4_isRoot(_1e548c4a6_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1e548edb0_stop(_1e548c4a6_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1e5490124_stopped(_1e548c4a6_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1e5490388_isDeferred(jule::Ptr<_1e548c4a6_scopeChecker> _self_) {
	jule::Ptr<_1e548c4a6_scopeChecker> _60417_scope = _self_;;
	_julec_label_iter:;
	if (_60417_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_60417_scope.get()._field_parent != nullptr)) {
		_60417_scope=_60417_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1e548c4a6_scopeChecker> _1e54905ec_getRoot(jule::Ptr<_1e548c4a6_scopeChecker> _self_) {
	jule::Ptr<_1e548c4a6_scopeChecker> _62217_root = _self_;;
	while (((_62217_root.get()._field_parent != nullptr) && (_62217_root.get()._field_owner == nullptr))) {
		{
			_62217_root=_62217_root.get()._field_parent;
		}
	_iter_next_1e860d13a:;
	}
	_iter_end_1e860d13a:;;
	return _62217_root;;
}



inline jule::Ptr<_1e548c4a6_scopeChecker> _1e5490861_getHardRoot(jule::Ptr<_1e548c4a6_scopeChecker> _self_) {
	jule::Ptr<_1e548c4a6_scopeChecker> _63217_root = _self_;;
	while ((_63217_root.get()._field_parent != nullptr)) {
		{
			_63217_root=_63217_root.get()._field_parent;
		}
	_iter_next_1e860e35b:;
	}
	_iter_end_1e860e35b:;;
	return _63217_root;;
}



inline jule::Ptr<_1e5483326_Label> _1e5490b6e_findLabel(_1e548c4a6_scopeChecker* _self_, jule::Str _64228_ident) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e860ed95:;
		if (it != expr_end) {
			jule::Any _64321_st = *it;
			{
				{
					auto &_match_expr{ _64321_st };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1e86108ac:;
						{
							jule::Ptr<_1e5483326_Label> _64625_label = _64321_st.cast_ptr<_1e5483326_Label>(&__jule_any_type20);;
							if ((_64625_label.get()._field_Ident == _64228_ident)) {
								return _64625_label;;
							};
						}
					}
					_match_end_1e86107ad:;
				};
			}
			_iter_next_1e860ed95:;
			++it;
			goto _iter_begin_1e860ed95;
		}
		_iter_end_1e860ed95:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e548b3ea_scopeLabel> _1e5490e7c_findLabelScope(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Str _65834_ident) {
	jule::Ptr<_1e548b3ea_scopeLabel> _65917_label = _1e549128a_findLabelAll(_self_.ptr(), _65834_ident);;
	if (((_65917_label != nullptr) && (_65917_label.get()._field_scope == _self_))) {
		return _65917_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1e548b3ea_scopeLabel> _1e549128a_findLabelAll(_1e548c4a6_scopeChecker* _self_, jule::Str _67031_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8612ae0:;
		if (it != expr_end) {
			jule::Ptr<_1e548b3ea_scopeLabel> _67121_lbl = *it;
			{
				if ((_67121_lbl.get()._field_label.get()._field_Ident == _67031_ident)) {
					return _67121_lbl;;
				};
			}
			_iter_next_1e8612ae0:;
			++it;
			goto _iter_begin_1e8612ae0;
		}
		_iter_end_1e8612ae0:;
	};
	return nullptr;;
}



inline jule::Bool _1e5491642_isDuplicatedIdent(_1e548c4a6_scopeChecker* _self_, jule::Uintptr _68236_itself, jule::Str _68253_ident) {
	jule::Ptr<_1e54ca291_Var> _68313_v = _1e548d100_FindVar(_self_, _68253_ident, false);;
	if (((_68313_v != nullptr) && (static_cast<jule::Uintptr>(_68313_v) != _68236_itself))) {
		if ((_68313_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_v.get()._field_Scope == (*(_self_))._field_scope) || (!(_1e54ae819_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1e554d08e_TypeAlias> _69113_ta = _1e548d4a7_FindTypeAlias(_self_, _68253_ident, false);;
	if (((_69113_ta != nullptr) && (static_cast<jule::Uintptr>(_69113_ta) != _68236_itself))) {
		if ((_69113_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_69113_ta.get()._field_Scope == (*(_self_))._field_tree) || (!(_1e54ae819_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1e54918b7_checkVarDecl(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e4786284_VarDecl> _70236_decl) {
	jule::Ptr<_1e54ca291_Var> _70317_v = _1e546b85e_buildVar(_70236_decl);;
	_70317_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70317_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_70317_v, &__jule_any_type8));;
	});;
	if (_1e5491642_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70317_v)), _70317_v.get()._field_Ident)) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _70317_v.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_70317_v.get()._field_Ident, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1e548edb0_stop(_self_.ptr());
		return;;
	};
	_1e54be5e8_checkVarDecl(_self_.get()._field_s, &(_70317_v), jule::Trait<_1e5569c04_Lookup>(_self_, 0));
	if (((!(_1e54ca8bd_IsTypeInferred(_70317_v.ptr()))) && ((_70317_v.get()._field_Kind == nullptr) || (_70317_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1e54c2c39_checkTypeVar(_self_.get()._field_s, &(_70317_v), jule::Trait<_1e5569c04_Lookup>(_self_, 0));
}



inline void _1e5491b3c_checkTypeAliasDecl(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e4789ae5_TypeAliasDecl> _72642_decl) {
	jule::Ptr<_1e554d08e_TypeAlias> _72717_ta = _1e5468839_buildTypeAlias(_72642_decl);;
	if (_1e5491642_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72717_ta)), _72717_ta.get()._field_Ident)) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _72717_ta.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_72717_ta.get()._field_Ident, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1e548edb0_stop(_self_.ptr());
		return;;
	};
	_1e54ba43a_checkTypeAliasDecl(_self_.get()._field_s, &(_72717_ta), jule::Trait<_1e5569c04_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72717_ta);;
	if ((_72717_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1e548edb0_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1e5480ad7_Scope> _1e5491da1_getChild(_1e548c4a6_scopeChecker* _self_) {
	return jule::new_ptr<_1e5480ad7_Scope>(_1e5480ad7_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1e5492269_checkChildSsc(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e47837ae_ScopeTree>* _75038_tree, jule::Ptr<_1e5480ad7_Scope>* _75061_s, jule::Ptr<_1e548c4a6_scopeChecker>* _75077_ssc) {
	(*(_75077_ssc)).get()._field_parent=_self_;
	_1e549c2a7_check((*(_75077_ssc)), _75038_tree, _75061_s);
}



inline jule::Ptr<_1e5480ad7_Scope> _1e5492621_checkChildSc(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e47837ae_ScopeTree>* _75537_tree, jule::Ptr<_1e548c4a6_scopeChecker>* _75560_ssc) {
	jule::Ptr<_1e5480ad7_Scope> _75617_s = _1e5491da1_getChild(_self_.ptr());;
	_1e5492269_checkChildSsc(_self_, _75537_tree, &(_75617_s), _75560_ssc);
	return _75617_s;;
}



inline jule::Ptr<_1e5480ad7_Scope> _1e549292e_checkChild(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e47837ae_ScopeTree>* _76135_tree) {
	jule::Ptr<_1e548c4a6_scopeChecker> _76217_ssc = _1e549c51b_newChildChecker(_self_);;
	return _1e5492621_checkChildSc(_self_, _76135_tree, &(_76217_ssc));;
}



inline void _1e5492ba4_checkAnonScope(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e47837ae_ScopeTree> _76638_tree) {
	jule::Ptr<_1e5480ad7_Scope> _76717_s = _1e549292e_checkChild(_self_, &(_76638_tree));;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_76717_s, &__jule_any_type21));;
}



inline void _1e5492ec3_processErrorCall(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e545c08b_BuiltinErrorCallExprModel>* _77141_m, jule::Ptr<_20d155596_Token> _77172_err) {
	if (_1e5490388_isDeferred(_self_)) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _77172_err, jule::Str("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e548c4a6_scopeChecker> _77617_root = _1e54905ec_getRoot(_self_);;
	if ((!(_77617_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _77172_err, jule::Str("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1e54b0276_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*(_77141_m)).get()._field_Func=_77617_root.get()._field_owner;
}



inline void _1e5493248_checkExpr(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e4777d47_Expr> _78433_expr) {
	jule::Ptr<_1e552486d_Eval> _78517_eval = _1e54b6843_eval(_self_.get()._field_s, jule::Trait<_1e5569c04_Lookup>(_self_, 0));;
	_78517_eval.get()._field_ignored=true;
	jule::Ptr<_1e5522d00_Data> _78717_d = _1e5540290_evalExpr(_78517_eval, _78433_expr);;
	if ((_78717_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78717_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1e862862d:;
			{
				jule::Ptr<_1e545c08b_BuiltinErrorCallExprModel> _79421_m = _78717_d.get()._field_Model.cast_ptr<_1e545c08b_BuiltinErrorCallExprModel>(&__jule_any_type22);;
				_1e5492ec3_processErrorCall(_self_, &(_79421_m), _78433_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type23));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34) {
			_case_begin_1e862883c:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type23));;
			}
		}
		else {
			_case_begin_1e8628782:;
			{
				_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _78433_expr.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e8628595:;
	};
}



inline jule::Ptr<_1e5480ed3_If> _1e5493556_checkIf(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e4788ae4_If> _81431_i) {
	jule::Ptr<_1e5480ad7_Scope> _81517_s = _1e549292e_checkChild(_self_, &(_81431_i.get()._field_Scope));;
	jule::Ptr<_1e5522d00_Data> _81717_d = _1e5540290_evalExpr(_1e54b6843_eval(_self_.get()._field_s, jule::Trait<_1e5569c04_Lookup>(_self_, 0)), _81431_i.get()._field_Expr);;
	if ((_81717_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e55539ce_Prim> _82217_prim = _1e5551119_Prim(_81717_d.get()._field_Kind.ptr());;
	if (((_82217_prim == nullptr) || (!(_1e555699e_IsBool(_82217_prim.ptr()))))) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _81431_i.get()._field_Expr.get()._field_Token, jule::Str("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1e5480ed3_If>(_1e5480ed3_If{._field_Expr=_81717_d.get()._field_Model, ._field_Scope=_81517_s});;
}



inline jule::Ptr<_1e54812be_Else> _1e5493864_checkElse(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e4788e9b_Else> _83433_e) {
	return jule::new_ptr<_1e54812be_Else>(_1e54812be_Else{._field_Scope=_1e549292e_checkChild(_self_, &(_83433_e.get()._field_Scope))});;
}



inline void _1e5493ad9_checkConditional(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e478941e_Conditional> _84040_conditional) {
	jule::Ptr<_1e5481643_Conditional> _84117_c = jule::new_ptr<_1e5481643_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_84117_c, &__jule_any_type35));;
	_84117_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1e5480ed3_If>>::alloc(0LL, (_84040_conditional.get()._field_Tail.len() + 1LL));
	_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_1e5493556_checkIf(_self_, _84040_conditional.get()._field_Head));;
	{
		auto expr = &(_84040_conditional.get()._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8632bcb:;
		if (it != expr_end) {
			jule::Ptr<_1e4788ae4_If> _84721_elif = *it;
			{
				_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_1e5493556_checkIf(_self_, _84721_elif));;
			}
			_iter_next_1e8632bcb:;
			++it;
			goto _iter_begin_1e8632bcb;
		}
		_iter_end_1e8632bcb:;
	};
	if ((_84040_conditional.get()._field_Default != nullptr)) {
		_84117_c.get()._field_Default=_1e5493864_checkElse(_self_, _84040_conditional.get()._field_Default);
	};
}



inline void _1e549404b_checkIterScopeSsc(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Uintptr _85637_it, jule::Ptr<_1e47837ae_ScopeTree> _85654_tree, jule::Ptr<_1e5480ad7_Scope>* _85677_s, jule::Ptr<_1e548c4a6_scopeChecker> _85692_ssc) {
	_85692_ssc.get()._field_it=_85637_it;
	_1e5492269_checkChildSsc(_self_, &(_85654_tree), _85677_s, &(_85692_ssc));
}



inline jule::Ptr<_1e5480ad7_Scope> _1e549449c_checkIterScopeSc(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Uintptr _86136_it, jule::Ptr<_1e47837ae_ScopeTree> _86153_tree, jule::Ptr<_1e548c4a6_scopeChecker> _86175_ssc) {
	jule::Ptr<_1e5480ad7_Scope> _86217_scope = _1e5491da1_getChild(_self_.ptr());;
	_1e549404b_checkIterScopeSsc(_self_, _86136_it, _86153_tree, &(_86217_scope), _86175_ssc);
	return _86217_scope;;
}



inline jule::Ptr<_1e5480ad7_Scope> _1e5494854_checkIterScope(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Uintptr _86734_it, jule::Ptr<_1e47837ae_ScopeTree>* _86752_tree) {
	jule::Ptr<_1e548c4a6_scopeChecker> _86817_ssc = _1e549c51b_newChildChecker(_self_);;
	return _1e549449c_checkIterScopeSc(_self_, _86734_it, (*(_86752_tree)), _86817_ssc);;
}



inline void _1e5494ac9_checkInfIter(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e4786c9b_Iter>* _87237_it) {
	jule::Ptr<_1e548192e_InfIter> _87317_kind = jule::new_ptr<_1e548192e_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_87317_kind, &__jule_any_type36));;
	_87317_kind.get()._field_Scope=_1e5494854_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87317_kind)), &((*(_87237_it)).get()._field_Scope));
}



inline void _1e5494d4e_checkWhileIter(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e4786c9b_Iter>* _87839_it) {
	jule::Ptr<_1e4787571_WhileKind> _87917_wh = (*(_87839_it)).get()._field_Kind.cast_ptr<_1e4787571_WhileKind>(&__jule_any_type37);;
	if (((_87917_wh.get()._field_Expr == nullptr) && (_87917_wh.get()._field_Next == nullptr))) {
		_1e5494ac9_checkInfIter(_self_, _87839_it);
		return;;
	};
	jule::Ptr<_1e5481da2_WhileIter> _88517_kind = jule::new_ptr<_1e5481da2_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_88517_kind, &__jule_any_type38));;
	_88517_kind.get()._field_Scope=_1e5494854_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_88517_kind)), &((*(_87839_it)).get()._field_Scope));
	if ((_87917_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1e5522d00_Data> _89021_d = _1e5540290_evalExpr(_1e54b6843_eval(_self_.get()._field_s, jule::Trait<_1e5569c04_Lookup>(_self_, 0)), _87917_wh.get()._field_Expr);;
		if ((_89021_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1e55539ce_Prim> _89517_prim = _1e5551119_Prim(_89021_d.get()._field_Kind.ptr());;
		if ((_89517_prim == nullptr)) {
			_1e54aee57_pushErr(_self_.get()._field_s.ptr(), (*(_87839_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1e555699e_IsBool(_89517_prim.ptr())))) {
			_1e54aee57_pushErr(_self_.get()._field_s.ptr(), (*(_87839_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		_88517_kind.get()._field_Expr=_89021_d.get()._field_Model;
	};
	if (_1e47878c3_IsWhileNext(_87917_wh.ptr())) {
		if ((!(_1e5480114_isValidAstStForNextSt(&(_87917_wh.get()._field_Next))))) {
			_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _91517_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1e549b053_checkNode(_self_, &(_87917_wh.get()._field_Next));
		if ((_91517_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91825_st = _self_.get()._field_scope.get()._field_Stmts[_91517_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL, _91517_n);
			if ((!(_1e54803ab_isValidStForNextSt(&(_91825_st))))) {
				_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			_88517_kind.get()._field_Next=_91825_st;
		};
	};
}



inline void _1e54950c4_checkRangeIter(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e4786c9b_Iter>* _92839_it) {
	jule::Ptr<_1e4787e12_RangeKind> _92917_rang = (*(_92839_it)).get()._field_Kind.cast_ptr<_1e4787e12_RangeKind>(&__jule_any_type39);;
	jule::Ptr<_1e5522d00_Data> _93117_d = _1e5540290_evalExpr(_1e54b6843_eval(_self_.get()._field_s, jule::Trait<_1e5569c04_Lookup>(_self_, 0)), _92917_rang.get()._field_Expr);;
	if ((_93117_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1e5482787_RangeIter> _93617_kind = jule::new_ptr<_1e5482787_RangeIter>(_1e5482787_RangeIter{._field_Expr=_93117_d, });;
	_1e551907c_rangeChecker _94017_rc = _1e551907c_rangeChecker{._field_sc=_self_, ._field_rang=_92917_rang, ._field_Kind=_93617_kind, ._field_d=_93117_d};;
	jule::Bool _94613_ok = _1e551a941_check(&_94017_rc);;
	if ((!(_94613_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_93617_kind, &__jule_any_type40));;
	jule::Ptr<_1e548c4a6_scopeChecker> _95317_ssc = _1e549c51b_newChildChecker(_self_);;
	jule::Ptr<_1e5480ad7_Scope> _95417_scope = _1e5491da1_getChild(_self_.ptr());;
	if ((_93617_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1e54ae819_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1e5491642_isDuplicatedIdent(_self_.ptr(), 0LLU, _93617_kind.get()._field_KeyA.get()._field_Ident))) {
			_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1e54b0276_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyA.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyA);;
	};
	if ((_93617_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1e54ae819_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1e5491642_isDuplicatedIdent(_self_.ptr(), 0LLU, _93617_kind.get()._field_KeyB.get()._field_Ident))) {
			_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1e54b0276_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyB.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyB);;
	};
	_1e549404b_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_93617_kind)), (*(_92839_it)).get()._field_Scope, &(_95417_scope), _95317_ssc);
	_93617_kind.get()._field_Scope=_95417_scope;
}



inline void _1e5495349_checkIter(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e4786c9b_Iter> _97833_it) {
	if (_1e47870ed_IsInf(_97833_it.ptr())) {
		_1e5494ac9_checkInfIter(_self_, &(_97833_it));
		return;;
	};
	{
		auto &_match_expr{ _97833_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1e7e4dd88:;
			{
				_1e5494d4e_checkWhileIter(_self_, &(_97833_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1e7e4ea15:;
			{
				_1e54950c4_checkRangeIter(_self_, &(_97833_it));
			}
		}
		else {
			_case_begin_1e7e4dc67:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1e7e4dc12:;
	};
}



inline jule::Bool _1e5495657_checkValidContLabel(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Uintptr _99439_it) {
	jule::Ptr<_1e548c4a6_scopeChecker> _99517_scope = _self_;;
	_julec_label_iter:;
	if ((_99517_scope.get()._field_it == _99439_it)) {
		return true;;
	};
	if ((_99517_scope.get()._field_parent != nullptr)) {
		_99517_scope=_99517_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1e5495965_checkValidBreakLabel(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Uintptr _101040_ptr) {
	jule::Ptr<_1e548c4a6_scopeChecker> _101117_scope = _self_;;
	_julec_label_iter:;
	if ((_101117_scope.get()._field_it == _101040_ptr)) {
		return true;;
	};
	if ((_101117_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _101917_mtch = static_cast<jule::Uintptr>(((_1e548537d_Case*)(_101117_scope.get()._field_cse))->_field_Owner);;
		if ((_101917_mtch == _101040_ptr)) {
			return true;;
		};
	};
	if ((_101117_scope.get()._field_parent != nullptr)) {
		_101117_scope=_101117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1e5482b83_ContSt> _1e5495c73_checkContValidScope(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e4788671_ContSt> _103339_c) {
	if (_1e5490388_isDeferred(_self_)) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_103339_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1e5482b83_ContSt>();;
	};
	jule::Ptr<_1e548c4a6_scopeChecker> _104317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_104317_scope.get()._field_it == 0LLU) && (_104317_scope.get()._field_parent != nullptr)) && (_104317_scope.get()._field_owner == nullptr))) {
			_case_begin_1e7e56b3d:;
			{
				_104317_scope=_104317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_104317_scope.get()._field_it != 0LLU)) {
			_case_begin_1e7e56bb5:;
			{
				return jule::new_ptr<_1e5482b83_ContSt>(_1e5482b83_ContSt{._field_It=_104317_scope.get()._field_it});;
			}
		}
		_match_end_1e7e56a83:;
	};
	_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1e5495ee8_checkCont(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e4788671_ContSt> _105729_c) {
	jule::Ptr<_1e5482b83_ContSt> _105817_cont = _1e5495c73_checkContValidScope(_self_, _105729_c);;
	if ((_105817_cont == nullptr)) {
		return;;
	};
	if ((_105729_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1e548b3ea_scopeLabel> _106421_label = _1e547d2dd_findLabelParent(_105729_c.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
		if ((_106421_label == nullptr)) {
			_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		_106421_label.get()._field_used=true;
		if (((_106421_label.get()._field_pos + 1LL) >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		jule::I64 _107717_i = (_106421_label.get()._field_pos + 1LL);;
		if ((_107717_i >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _108125_st = _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_107717_i];;
			{
				auto &_match_expr{ _108125_st };
				
				if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1e7e5d87b:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1e548192e_InfIter>(&__jule_any_type36)));
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1e7e6022e:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1e5482787_RangeIter>(&__jule_any_type40)));
					}
				}
				else if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1e7e60295:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1e5481da2_WhileIter>(&__jule_any_type38)));
					}
				}
				else {
					_case_begin_1e7e600a8:;
					{
						_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					}
				}
				_match_end_1e7e60053:;
			};
		};
	};
	if ((_105817_cont.get()._field_It != 0LLU)) {
		if ((!(_1e5495657_checkValidContLabel(_self_, _105817_cont.get()._field_It)))) {
			_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_105817_cont, &__jule_any_type41));;
}



inline void _1e549626d_checkLabel(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e4780ec6_LabelSt> _110434_l) {
	if ((_1e5490b6e_findLabel(_self_.ptr(), _110434_l.get()._field_Ident) != nullptr)) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _110434_l.get()._field_Token, jule::Str("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any(_110434_l.get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1e5483326_Label> _111017_label = jule::new_ptr<_1e5483326_Label>(_1e5483326_Label{._field_Ident=_110434_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_111017_label, &__jule_any_type20));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1e548b3ea_scopeLabel>>::make({jule::new_ptr<_1e548b3ea_scopeLabel>(_1e548b3ea_scopeLabel{._field_token=_110434_l.get()._field_Token, ._field_label=_111017_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1e54964e3_pushGoto(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e478137d_GotoSt> _112332_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1e5483612_GotoSt>(_1e5483612_GotoSt{._field_Ident=_112332_gt.get()._field_Label.get()._field_Kind}), &__jule_any_type42));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1e548b692_scopeGoto>>::make({jule::new_ptr<_1e548b692_scopeGoto>(_1e548b692_scopeGoto{._field_gt=_112332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _1e5496768_checkPostfix(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e47822b3_AssignSt> _113536_a) {
	if ((_113536_a.get()._field_Left.len() > 1LL)) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e4777d47_Expr> _114117_expr = _113536_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1e5522d00_Data> _114217_d = _1e5540290_evalExpr(_1e54b6843_eval(_self_.get()._field_s, jule::Trait<_1e5569c04_Lookup>(_self_, 0)), _114117_expr);;
	if ((_114217_d == nullptr)) {
		return;;
	};
	_1e547ed6c_checkAssign(&(_self_.get()._field_s), &(_114217_d), nullptr, _113536_a.get()._field_Setter);
	if ((_1e55515e2_Ptr(_114217_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e555a7c7_Ptr> _115021_ptr = _1e55515e2_Ptr(_114217_d.get()._field_Kind.ptr());;
		if (_1e555b29a_IsUnsafe(_115021_ptr.ptr())) {
			_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else {
		if (((_1e5551119_Prim(_114217_d.get()._field_Kind.ptr()) == nullptr) || (!(_1e54464b5_IsNum(_1e5551119_Prim(_114217_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1e54839b9_Postfix>(_1e54839b9_Postfix{._field_Expr=_114217_d.get()._field_Model, ._field_Op=_113536_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type43));;
}



inline jule::Bool _1e5496a76_isNewAssignIdent(_1e548c4a6_scopeChecker* _self_, jule::Str _116835_ident) {
	if ((_20d157d3a_IsIgnoreIdent(_116835_ident) || _116835_ident.empty())) {
		return false;;
	};
	return (_1e5521073_defByIdent((*(_self_))._field_table.ptr(), _116835_ident, false) == nullptr);;
}



inline jule::Bool _1e5496ec7_checkStructureAssignOp(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e47903e2_StructIns>* _117547_s, jule::Ptr<_1e47822b3_AssignSt>* _117567_a, jule::Ptr<_1e5522d00_Data>* _117586_r) {
	jule::Ptr<_1e5463b75_FnIns> _117817_overload = nullptr;;
	{
		auto &_match_expr{ (*(_117567_a)).get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1e7e72197:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1e7e7350b:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1e7e73572:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1e7e735d8:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1e7e725d7:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1e7e7264d:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1e7e726b4:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1e7e7272a:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1e7e737c5:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1e7e7383b:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1e7e72571:;
			{
				_1e54aee57_pushErr(_self_.get()._field_s.ptr(), (*(_117567_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_117567_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1e4765c47_Str((*(_117547_s)).ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1e7e71ecc:;
	};
	if ((_117817_overload == nullptr)) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), (*(_117567_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_117567_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1e4765c47_Str((*(_117547_s)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1e5462ca6_ParamIns> _121017_p = _117817_overload.get()._field_Params[1LL];;
	return _1e54b6d3d_checkAssignType(_self_.get()._field_s, _121017_p.get()._field_Decl.get()._field_Reference, &(_121017_p.get()._field_Kind), _117586_r, (*(_117567_a)).get()._field_Setter);;
}



inline void _1e549724c_checkSingleAssign(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e47822b3_AssignSt>* _121442_a) {
	jule::Ptr<_1e5522d00_Data> _121517_l = nullptr;;
	if ((!(_20d157d3a_IsIgnoreIdent((*(_121442_a)).get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1e4777d47_Expr> _121821_expr = (*(_121442_a)).get()._field_Left[0LL].get()._field_Expr;;
		_121517_l=_1e5540290_evalExpr(_1e54b6843_eval(_self_.get()._field_s, jule::Trait<_1e5569c04_Lookup>(_self_, 0)), _121821_expr);
		if ((_121517_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1e552486d_Eval> _122517_eval = nullptr;;
	if ((_121517_l != nullptr)) {
		_122517_eval=_1e54b6535_evalp(_self_.get()._field_s, jule::Trait<_1e5569c04_Lookup>(_self_, 0), _121517_l.get()._field_Kind);
	} else {
		_122517_eval=_1e54b6843_eval(_self_.get()._field_s, jule::Trait<_1e5569c04_Lookup>(_self_, 0));
	};
	_122517_eval.get()._field_unsafety=_1e548e970_isUnsafe(_self_);
	jule::Ptr<_1e5522d00_Data> _123217_r = _1e5540290_evalExpr(_122517_eval, (*(_121442_a)).get()._field_Right);;
	if ((_123217_r == nullptr)) {
		return;;
	};
	if ((_121517_l == nullptr)) {
		if (_1e554ee2b_Void(_123217_r.get()._field_Kind.ptr())) {
			_1e54aee57_pushErr(_self_.get()._field_s.ptr(), (*(_121442_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_123217_r, &__jule_any_type23));;
		return;;
	};
	if ((!(_1e547ed6c_checkAssign(&(_self_.get()._field_s), &(_121517_l), _123217_r, (*(_121442_a)).get()._field_Setter)))) {
		return;;
	};
	if ((_1e5552ca8_Tup(_123217_r.get()._field_Kind.ptr()) != nullptr)) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), (*(_121442_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e54527e0_OperandExprModel> _125417_lm = jule::new_ptr<_1e54527e0_OperandExprModel>(_1e54527e0_OperandExprModel{._field_Kind=_121517_l.get()._field_Kind, ._field_Model=_121517_l.get()._field_Model});;
	jule::Ptr<_1e54527e0_OperandExprModel> _125817_rm = jule::new_ptr<_1e54527e0_OperandExprModel>(_1e54527e0_OperandExprModel{._field_Kind=_123217_r.get()._field_Kind, ._field_Model=_123217_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1e5483e3c_Assign>(_1e5483e3c_Assign{._field_L=_125417_lm, ._field_R=_125817_rm, ._field_Op=(*(_121442_a)).get()._field_Setter}), &__jule_any_type44));;
	if (((*(_121442_a)).get()._field_Setter.get()._field_Kind != jule::Str("=", 1))) {
		jule::Ptr<_1e47903e2_StructIns> _126521_strct = _1e555256b_Struct(_121517_l.get()._field_Kind.ptr());;
		if ((_126521_strct != nullptr)) {
			_1e5496ec7_checkStructureAssignOp(_self_, &(_126521_strct), _121442_a, &(_123217_r));
			return;;
		};
		(*(_121442_a)).get()._field_Setter.get()._field_Kind=(*(_121442_a)).get()._field_Setter.get()._field_Kind.slice(0LL, ((*(_121442_a)).get()._field_Setter.get()._field_Kind.len() - 1LL));
		_1e55424a1_binaryEval _127221_solver = static__1e5542db9_new(_122517_eval, (*(_121442_a)).get()._field_Setter);;
		_123217_r=_1e5547c26_solveExplicit(&_127221_solver, &(_121517_l), &(_123217_r));
		if ((_123217_r == nullptr)) {
			return;;
		};
		(*(_121442_a)).get()._field_Setter.get()._field_Kind+=jule::Str("=", 1);
		return;;
	};
	_1e550d6e2_assignTypeChecker _128117_checker = _1e550d6e2_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_121517_l.get()._field_Kind, ._field_d=_123217_r, ._field_errorToken=(*(_121442_a)).get()._field_Setter};;
	if (_1e550e869_check(&_128117_checker)) {
		_125817_rm.get()._field_Model=_123217_r.get()._field_Model;
		_125417_lm.get()._field_Model=_121517_l.get()._field_Model;
	};
}



inline void _1e549777a_processEndPartOfMultiAssign(_1e548c4a6_scopeChecker* _self_, jule::Ptr<_1e54842e4_MultiAssign>* _129351_st, jule::Ptr<_1e47822b3_AssignSt>* _129414_a, jule::Ptr<_1e4781c74_AssignLeft>* _129433_lexpr, jule::Ptr<_1e5522d00_Data>* _129458_l, jule::Ptr<_1e5522d00_Data>* _129473_r) {
	if (((!((*(_129433_lexpr)).get()._field_Reference)) && _20d157d3a_IsIgnoreIdent((*(_129433_lexpr)).get()._field_Ident))) {
		if (_1e554ee2b_Void((*(_129473_r)).get()._field_Kind.ptr())) {
			_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_129414_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*(_129351_st)).get()._field_L = jule::alloc_for_append((*(_129351_st)).get()._field_L,1);(*(_129351_st)).get()._field_L.__push(nullptr);;
		return;;
	};
	if (((*(_129414_a)).get()._field_Declarative && ((*(_129433_lexpr)).get()._field_Reference || _1e5496a76_isNewAssignIdent(_self_, (*(_129433_lexpr)).get()._field_Ident)))) {
		if (_1e5491642_isDuplicatedIdent(_self_, 0LLU, (*(_129433_lexpr)).get()._field_Ident)) {
			_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_129433_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_129433_lexpr)).get()._field_Ident, &__jule_any_type5)}));
			_1e54b0276_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1e548edb0_stop(_self_);
			return;;
		};
		if (_20d157d3a_IsIgnoreIdent((*(_129433_lexpr)).get()._field_Ident)) {
			_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_129433_lexpr)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e54ca291_Var> _131521_v = jule::new_ptr<_1e54ca291_Var>(_1e54ca291_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_129433_lexpr)).get()._field_Token, ._field_Ident=(*(_129433_lexpr)).get()._field_Ident, ._field_Mutable=(*(_129433_lexpr)).get()._field_Mutable, ._field_Reference=(*(_129433_lexpr)).get()._field_Reference, ._field_Value=jule::new_ptr<_1e5523d78_Value>(_1e5523d78_Value{._field_Expr=(*(_129414_a)).get()._field_Right, ._field_Data=(*(_129473_r))}), });;
		_1e54c291a_checkVar((*(_self_))._field_s, &(_131521_v));
		_131521_v.get()._field_Value=nullptr;
		(*(_129351_st)).get()._field_L = jule::alloc_for_append((*(_129351_st)).get()._field_L,1);(*(_129351_st)).get()._field_L.__push(jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=_131521_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_131521_v.get()._field_Mutable, ._field_Reference=_131521_v.get()._field_Reference, ._field_Lvalue=(!(_131521_v.get()._field_Constant)), ._field_Model=jule::Any(_131521_v, &__jule_any_type8), }));;
		(*(_self_))._field_table.get()._field_Vars = jule::alloc_for_append((*(_self_))._field_table.get()._field_Vars,1);(*(_self_))._field_table.get()._field_Vars.__push(_131521_v);;
		(*(_self_))._field_scope.get()._field_Stmts = jule::alloc_for_append((*(_self_))._field_scope.get()._field_Stmts,1);(*(_self_))._field_scope.get()._field_Stmts.__push(jule::Any(_131521_v, &__jule_any_type8));;
		return;;
	};
	if (((*(_129433_lexpr)).get()._field_Mutable || (*(_129433_lexpr)).get()._field_Reference)) {
		_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_129433_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_129433_lexpr)).get()._field_Ident, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1e547ed6c_checkAssign(&((*(_self_))._field_s), _129458_l, (*(_129473_r)), (*(_129414_a)).get()._field_Setter)))) {
		return;;
	};
	;
	_1e54b9c53_checkValidityForInitExpr((*(_self_))._field_s, (*(_129458_l)).get()._field_Mutable, false, &((*(_129458_l)).get()._field_Kind), _129473_r, &((*(_129414_a)).get()._field_Setter));
	_1e550d6e2_assignTypeChecker _135817_checker = _1e550d6e2_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_129458_l)).get()._field_Kind, ._field_d=(*(_129473_r)), ._field_errorToken=(*(_129414_a)).get()._field_Setter};;
	_1e550e869_check(&_135817_checker);
	(*(_129351_st)).get()._field_L = jule::alloc_for_append((*(_129351_st)).get()._field_L,1);(*(_129351_st)).get()._field_L.__push((*(_129458_l)));;
}



inline void _1e5497a11_checkMultiAssign(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e47822b3_AssignSt>* _136841_a) {
	jule::Ptr<_1e5522d00_Data> _136917_rd = _1e5540290_evalExpr(_1e54b6843_eval(_self_.get()._field_s, jule::Trait<_1e5569c04_Lookup>(_self_, 0)), (*(_136841_a)).get()._field_Right);;
	if ((_136917_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e5522d00_Data>> _137317_right = _1e547e09c_getDatasFromTupleData(&(_136917_rd));;
	if ((_137317_right.len() == 1LL)) {
		{
			auto &_match_expr{ _137317_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1e868290c:;
				{
					jule::Ptr<_1e545544c_IndexingExprModel> _137725_iem = _137317_right[0LL].get()._field_Model.cast_ptr<_1e545544c_IndexingExprModel>(&__jule_any_type45);;
					if ((_1e5552a44_Map(_137725_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_137317_right=jule::Slice<jule::Ptr<_1e5522d00_Data>>::make({jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=_1e5552a44_Map(_137725_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), })});
					};
				}
			}
			_match_end_1e86828a7:;
		};
	};
	{
		
		if (((*(_136841_a)).get()._field_Left.len() > _137317_right.len())) {
			_case_begin_1e8682c5e:;
			{
				_1e54aee57_pushErr(_self_.get()._field_s.ptr(), (*(_136841_a)).get()._field_Setter, jule::Str("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*(_136841_a)).get()._field_Left.len() < _137317_right.len())) {
			_case_begin_1e8682cc5:;
			{
				_1e54aee57_pushErr(_self_.get()._field_s.ptr(), (*(_136841_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1e8684b2e:;
	};
	jule::Ptr<_1e54842e4_MultiAssign> _139617_st = jule::new_ptr<_1e54842e4_MultiAssign>(_1e54842e4_MultiAssign{._field_R=_136917_rd.get()._field_Model});;
	{
		auto expr = &((*(_136841_a)).get()._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8687093:;
		if (it != expr_end) {
			jule::I64 _139913_i = it - expr->begin();
			{
				jule::Ptr<_1e4781c74_AssignLeft> _140021_lexpr = (*(_136841_a)).get()._field_Left[_139913_i];;
				jule::Ptr<_1e5522d00_Data> _140121_l = nullptr;;
				if (((!(_20d157d3a_IsIgnoreIdent(_140021_lexpr.get()._field_Ident))) && ((!((*(_136841_a)).get()._field_Declarative)) || (!(_1e5496a76_isNewAssignIdent(_self_.ptr(), _140021_lexpr.get()._field_Ident)))))) {
					_140121_l=_1e5540290_evalExpr(_1e54b6843_eval(_self_.get()._field_s, jule::Trait<_1e5569c04_Lookup>(_self_, 0)), _140021_lexpr.get()._field_Expr);
					if ((_140121_l == nullptr)) {
						goto _iter_next_1e8687093;
					};
				};
				jule::Ptr<_1e5522d00_Data> _140921_r = _137317_right[_139913_i];;
				_1e549777a_processEndPartOfMultiAssign(_self_.ptr(), &(_139617_st), _136841_a, &(_140021_lexpr), &(_140121_l), &(_140921_r));
			}
			_iter_next_1e8687093:;
			++it;
			_139913_i++;
			goto _iter_begin_1e8687093;
		}
		_iter_end_1e8687093:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_139617_st, &__jule_any_type46));;
}



inline void _1e5497c86_checkAssignSt(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e47822b3_AssignSt> _141537_a) {
	{
		
		if (_20d159dd6_IsPostfixOp(_141537_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1e868b141:;
			{
				_1e5496768_checkPostfix(_self_, _141537_a);
			}
		}
		else if (((_141537_a.get()._field_Left.len() == 1LL) && (!(_141537_a.get()._field_Declarative)))) {
			_case_begin_1e868ad44:;
			{
				_1e549724c_checkSingleAssign(_self_, &(_141537_a));
			}
		}
		else {
			_case_begin_1e868a75b:;
			{
				_1e5497a11_checkMultiAssign(_self_, &(_141537_a));
			}
		}
		_match_end_1e868a690:;
	};
}



inline jule::Ptr<_1e5480ad7_Scope> _1e549813d_checkCaseScope(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e548537d_Case>* _142635_c, jule::Ptr<_1e47837ae_ScopeTree>* _142650_tree) {
	jule::Ptr<_1e548c4a6_scopeChecker> _142717_ssc = _1e549c51b_newChildChecker(_self_);;
	_142717_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_142635_c))));
	return _1e5492621_checkChildSc(_self_, _142650_tree, &(_142717_ssc));;
}



inline jule::Ptr<_1e548537d_Case> _1e5498638_checkCase(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e5484833_Match> _143233_m, jule::I64 _143244_i, jule::Ptr<_1e478a068_Case> _143256_c, jule::Ptr<_1e5522d00_Data> _143275_expr) {
	jule::Ptr<_1e548537d_Case> _143317_case = _143233_m.get()._field_Cases[_143244_i];;
	_143317_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1e5522d00_Data>>::alloc(0LL, _143256_c.get()._field_Exprs.len());
	jule::Bool _143517_genericMatched = false;;
	jule::Ptr<_1e552486d_Eval> _143617_eval = _1e54b6843_eval(_self_.get()._field_s, jule::Trait<_1e5569c04_Lookup>(_self_, 0));;
	{
		auto expr = &(_143256_c.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8690b07:;
		if (it != expr_end) {
			jule::Ptr<_1e4777d47_Expr> _143721_e = *it;
			{
				jule::Ptr<_1e5522d00_Data> _143821_d = _1e553eb74_evalExprKind(_143617_eval, _143721_e.get()._field_Kind);;
				if ((_143821_d == nullptr)) {
					goto _iter_next_1e8690b07;
				};
				if (_143233_m.get()._field_TypeMatch) {
					_143317_case.get()._field_Exprs = jule::alloc_for_append(_143317_case.get()._field_Exprs,1);_143317_case.get()._field_Exprs.__push(_143821_d);;
					if ((_1e547dd05_countMatchType(&(_143233_m), &(_143821_d.get()._field_Kind)) > 1LL)) {
						_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _143721_e.get()._field_Token, jule::Str("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_143821_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
					if (_143275_expr.get()._field_Kind.get()._field_Generic) {
						_143517_genericMatched=(_143517_genericMatched || _1e554e48b_Equal(_143275_expr.get()._field_Kind, _143821_d.get()._field_Kind));
					} else {
						if ((_1e5551aba_TypeEnum(_143275_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1e54b728e_checkTypeCompatibility(_self_.get()._field_s, &(_143275_expr.get()._field_Kind), &(_143821_d.get()._field_Kind), &(_143721_e.get()._field_Token));
						} else {
							jule::Ptr<_1e5472dc6_Trait> _145329_trt = _1e55527d0_Trait(_143275_expr.get()._field_Kind.ptr());;
							if ((_145329_trt != nullptr)) {
								_1e54b728e_checkTypeCompatibility(_self_.get()._field_s, &(_143275_expr.get()._field_Kind), &(_143821_d.get()._field_Kind), &(_143721_e.get()._field_Token));
							};
						};
					};
					goto _iter_next_1e8690b07;
				};
				if (_143821_d.get()._field_Decl) {
					_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _143721_e.get()._field_Token, jule::Str("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1e54b0276_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1e8690b07;
				};
				_143317_case.get()._field_Exprs = jule::alloc_for_append(_143317_case.get()._field_Exprs,1);_143317_case.get()._field_Exprs.__push(_143821_d);;
				_1e550d6e2_assignTypeChecker _147121_checker = _1e550d6e2_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_143275_expr.get()._field_Kind, ._field_d=_143821_d, ._field_errorToken=_143721_e.get()._field_Token};;
				_1e550e869_check(&_147121_checker);
			}
			_iter_next_1e8690b07:;
			++it;
			goto _iter_begin_1e8690b07;
		}
		_iter_end_1e8690b07:;
	};
	if ((((!(_143233_m.get()._field_TypeMatch)) || (!(_143275_expr.get()._field_Kind.get()._field_Generic))) || _143517_genericMatched)) {
		_143317_case.get()._field_Scope=_1e549813d_checkCaseScope(_self_, &(_143317_case), &(_143256_c.get()._field_Scope));
	};
	return _143317_case;;
}



inline void _1e5498a01_checkCases(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e478a73e_MatchCase>* _148535_m, jule::Ptr<_1e5484833_Match> _148554_rm, jule::Ptr<_1e5522d00_Data> _148570_expr) {
	_148554_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1e548537d_Case>>::alloc(0LL, (*(_148535_m)).get()._field_Cases.len());
	{
		auto expr = &((*(_148535_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e869914e:;
		if (it != expr_end) {
			jule::I64 _148713_i = it - expr->begin();
			{
				jule::Ptr<_1e548537d_Case> _148821_case = jule::new_ptr<_1e548537d_Case>(_1e548537d_Case{._field_Owner=_148554_rm, });;
				if ((_148713_i > 0LL)) {
					_148554_rm.get()._field_Cases[(_148713_i - 1LL)].get()._field_Next=_148821_case;
				};
				_148554_rm.get()._field_Cases = jule::alloc_for_append(_148554_rm.get()._field_Cases,1);_148554_rm.get()._field_Cases.__push(_148821_case);;
			}
			_iter_next_1e869914e:;
			++it;
			_148713_i++;
			goto _iter_begin_1e869914e;
		}
		_iter_end_1e869914e:;
	};
	if (((_148554_rm.get()._field_Default != nullptr) && ((*(_148535_m)).get()._field_Cases.len() > 0LL))) {
		_148554_rm.get()._field_Cases[(_148554_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_148554_rm.get()._field_Default;
	};
	{
		auto expr = &((*(_148535_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e869c619:;
		if (it != expr_end) {
			jule::I64 _150114_i = it - expr->begin();
			jule::Ptr<_1e478a068_Case> _150121_c = *it;
			{
				_1e5498638_checkCase(_self_, _148554_rm, _150114_i, _150121_c, _148570_expr);
			}
			_iter_next_1e869c619:;
			++it;
			_150114_i++;
			goto _iter_begin_1e869c619;
		}
		_iter_end_1e869c619:;
	};
}



inline jule::Ptr<_1e548537d_Case> _1e5498da8_checkDefault(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e5484833_Match> _150636_m, jule::Ptr<_1e4788e9b_Else> _150651_d) {
	jule::Ptr<_1e548537d_Case> _150717_def = jule::new_ptr<_1e548537d_Case>(_1e548537d_Case{._field_Owner=_150636_m, });;
	_150717_def.get()._field_Scope=_1e549813d_checkCaseScope(_self_, &(_150717_def), &(_150651_d.get()._field_Scope));
	return _150717_def;;
}



inline void _1e549912d_checkComptimePanic(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e5480ad7_Scope>* _151439_s) {
	if (((*(_151439_s)).get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _151913_stmt = (*(_151439_s)).get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _151913_stmt };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1e86a07d7:;
			{
				jule::Ptr<_1e5522d00_Data> _152217_d = _151913_stmt.cast_ptr<_1e5522d00_Data>(&__jule_any_type23);;
				{
					auto &_match_expr{ _152217_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1e86a15b8:;
						{
							jule::Ptr<_1e5459c04_BuiltinPanicCallExprModel> _152521_m = _152217_d.get()._field_Model.cast_ptr<_1e5459c04_BuiltinPanicCallExprModel>(&__jule_any_type29);;
							{
								auto &_match_expr{ _152521_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type47) {
									_case_begin_1e86a2575:;
									{
										jule::Ptr<_1e54469c1_Const> _152825_c = _152521_m.get()._field_Expr.cast_ptr<_1e54469c1_Const>(&__jule_any_type47);;
										if (_1e544ad9e_IsStr(_152825_c.ptr())) {
											jule::Ptr<_1e548c4a6_scopeChecker> _153033_root = _1e5490861_getHardRoot(_self_);;
											_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _153033_root.get()._field_calledFrom, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1e5448a06_ReadStr(_152825_c.ptr()), &__jule_any_type5)}));
										};
									}
								}
								_match_end_1e86a2366:;
							};
						}
					}
					_match_end_1e86a11bc:;
				};
			}
		}
		_match_end_1e86a0782:;
	};
}



inline void _1e549944c_pushTypeMatch(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e5484833_Match> _153837_tm, jule::Ptr<_1e478a73e_MatchCase>* _153854_m) {
	if (_153837_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto expr = &(_153837_tm.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e86a1a19:;
			if (it != expr_end) {
				jule::Ptr<_1e548537d_Case> _154225_c = *it;
				{
					if ((_154225_c.get()._field_Scope != nullptr)) {
						_1e549912d_checkComptimePanic(_self_, &(_154225_c.get()._field_Scope));
						_153837_tm.get()._field_Default=_154225_c;
						_153837_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1e86a1a19:;
				++it;
				goto _iter_begin_1e86a1a19;
			}
			_iter_end_1e86a1a19:;
		};
		if (((*(_153854_m)).get()._field_Default != nullptr)) {
			_153837_tm.get()._field_Cases=nullptr;
			_153837_tm.get()._field_Default=_1e5498da8_checkDefault(_self_, _153837_tm, (*(_153854_m)).get()._field_Default);
			if ((_153837_tm.get()._field_Default != nullptr)) {
				_1e549912d_checkComptimePanic(_self_, &(_153837_tm.get()._field_Default.get()._field_Scope));
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_153837_tm, &__jule_any_type48));;
}



inline void _1e54996c2_checkTypeMatch(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e478a73e_MatchCase>* _156239_m) {
	jule::Ptr<_1e5522d00_Data> _156317_d = _1e553ee82_eval(_1e54b6843_eval(_self_.get()._field_s, jule::Trait<_1e5569c04_Lookup>(_self_, 0)), (*(_156239_m)).get()._field_Expr);;
	if ((_156317_d == nullptr)) {
		return;;
	};
	if (((!(_156317_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1e5551119_Prim(_156317_d.get()._field_Kind.ptr()) != nullptr) && _1e5556e77_IsAny(_1e5551119_Prim(_156317_d.get()._field_Kind.ptr()).ptr())) || (_1e55527d0_Trait(_156317_d.get()._field_Kind.ptr()) != nullptr)) || (_1e5551aba_TypeEnum(_156317_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), (*(_156239_m)).get()._field_Expr.get()._field_Token, jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5484833_Match> _157417_tm = jule::new_ptr<_1e5484833_Match>(_1e5484833_Match{._field_Expr=_156317_d, ._field_TypeMatch=true, });;
	if (((!(_157417_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && ((*(_156239_m)).get()._field_Default != nullptr))) {
		_157417_tm.get()._field_Default=_1e5498da8_checkDefault(_self_, _157417_tm, (*(_156239_m)).get()._field_Default);
	};
	_1e5498a01_checkCases(_self_, _156239_m, _157417_tm, _156317_d);
	_1e549944c_pushTypeMatch(_self_, _157417_tm, _156239_m);
}



inline void _1e5499947_checkCommonMatch(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e478a73e_MatchCase>* _158741_m) {
	jule::Ptr<_1e5522d00_Data> _158817_d = nullptr;;
	if (((*(_158741_m)).get()._field_Expr == nullptr)) {
		_158817_d=jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__1e5447483_NewBool(true)});
		_158817_d.get()._field_Model=jule::Any(_158817_d.get()._field_Constant, &__jule_any_type47);
	} else {
		_158817_d=_1e5540290_evalExpr(_1e54b6843_eval(_self_.get()._field_s, jule::Trait<_1e5569c04_Lookup>(_self_, 0)), (*(_158741_m)).get()._field_Expr);
		if ((_158817_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1e5484833_Match> _160217_mc = jule::new_ptr<_1e5484833_Match>(_1e5484833_Match{._field_Expr=_158817_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_160217_mc, &__jule_any_type48));;
	if (((*(_158741_m)).get()._field_Default != nullptr)) {
		_160217_mc.get()._field_Default=_1e5498da8_checkDefault(_self_, _160217_mc, (*(_158741_m)).get()._field_Default);
	};
	_1e5498a01_checkCases(_self_, _158741_m, _160217_mc, _158817_d);
}



inline void _1e5499bbc_checkMatch(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e478a73e_MatchCase> _161434_m) {
	if (_161434_m.get()._field_TypeMatch) {
		_1e54996c2_checkTypeMatch(_self_, &(_161434_m));
		return;;
	};
	_1e5499947_checkCommonMatch(_self_, &(_161434_m));
}



inline void _1e5499e42_checkFall(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e4781669_FallSt> _162229_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1e5490388_isDeferred(_self_))) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _162229_f.get()._field_Token, jule::Str("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1e548537d_Case* _163017_case = ((_1e548537d_Case*)(_self_.get()._field_cse));;
	if ((_163017_case->_field_Next == nullptr)) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _162229_f.get()._field_Token, jule::Str("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1e54b0276_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1e5485933_FallSt>(_1e5485933_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_163017_case->_field_Next))}), &__jule_any_type49));;
}



inline jule::Ptr<_1e548303a_BreakSt> _1e549a250_checkBreakWithLabel(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e47882b9_BreakSt> _164239_b) {
	jule::Ptr<_1e548303a_BreakSt> _164317_brk = _1e549a55d_checkPlainBreak(_self_, _164239_b);;
	if ((_164317_brk == nullptr)) {
		return nullptr;;
	};
	_164317_brk.get()._field_It=0LLU;
	_164317_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1e548b3ea_scopeLabel> _165317_label = _1e547d2dd_findLabelParent(_164239_b.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
	if ((_165317_label == nullptr)) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_165317_label.get()._field_used=true;
	if (((_165317_label.get()._field_pos + 1LL) >= _165317_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _166613_i = (_165317_label.get()._field_pos + 1LL);;
	if ((_166613_i >= _165317_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
	} else {
		jule::Any _167021_st = _165317_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_166613_i];;
		{
			auto &_match_expr{ _167021_st };
			
			if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1e86bba89:;
				{
					_164317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_1e548192e_InfIter>(&__jule_any_type36)));
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1e86bd6b2:;
				{
					_164317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_1e5482787_RangeIter>(&__jule_any_type40)));
				}
			}
			else if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1e86bd728:;
				{
					_164317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_1e5481da2_WhileIter>(&__jule_any_type38)));
				}
			}
			else if (_match_expr.type == &__jule_any_type48) {
				_case_begin_1e86bd7a0:;
				{
					_164317_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_1e5484833_Match>(&__jule_any_type48)));
				}
			}
			else {
				_case_begin_1e86bd53b:;
				{
					_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				}
			}
			_match_end_1e86bd4d6:;
		};
	};
	if ((_164317_brk.get()._field_It != 0LLU)) {
		if ((!(_1e5495965_checkValidBreakLabel(_self_, _164317_brk.get()._field_It)))) {
			_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	if ((_164317_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1e5495965_checkValidBreakLabel(_self_, _164317_brk.get()._field_Mtch)))) {
			_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	return _164317_brk;;
}



inline jule::Ptr<_1e548303a_BreakSt> _1e549a55d_checkPlainBreak(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e47882b9_BreakSt> _170035_b) {
	if (_1e5490388_isDeferred(_self_)) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _170035_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e548c4a6_scopeChecker> _170617_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_170617_scope.get()._field_it == 0LLU) && (_170617_scope.get()._field_cse == 0LLU)) && (_170617_scope.get()._field_parent != nullptr)) && (_170617_scope.get()._field_owner == nullptr))) {
			_case_begin_1e86c47a6:;
			{
				_170617_scope=_170617_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_170617_scope.get()._field_it != 0LLU)) {
			_case_begin_1e86c482d:;
			{
				return jule::new_ptr<_1e548303a_BreakSt>(_1e548303a_BreakSt{._field_It=_170617_scope.get()._field_it, });;
			}
		}
		else if ((_170617_scope.get()._field_cse != 0LLU)) {
			_case_begin_1e86c48a5:;
			{
				return jule::new_ptr<_1e548303a_BreakSt>(_1e548303a_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1e548537d_Case*)(_170617_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_1e86c46da:;
	};
	_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _170035_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1e549a7d3_checkBreak(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e47882b9_BreakSt> _172230_b) {
	if ((_172230_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1e548303a_BreakSt> _172421_brk = _1e549a250_checkBreakWithLabel(_self_, _172230_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172421_brk, &__jule_any_type50));;
		return;;
	};
	jule::Ptr<_1e548303a_BreakSt> _172917_brk = _1e549a55d_checkPlainBreak(_self_, _172230_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172917_brk, &__jule_any_type50));;
}



inline void _1e549aa58_checkRet(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e478663b_RetSt> _173332_r) {
	if (_1e5490388_isDeferred(_self_)) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _173332_r.get()._field_Token, jule::Str("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5485ca7_RetSt> _173817_rt = jule::new_ptr<_1e5485ca7_RetSt>(_1e5485ca7_RetSt{._field_Func=_1e54905ec_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_173817_rt, &__jule_any_type51));;
	jule::Ptr<_1e551b117_retTypeChecker> _174317_rtc = jule::new_ptr<_1e551b117_retTypeChecker>(_1e551b117_retTypeChecker{._field_sc=_self_, ._field_f=_173817_rt.get()._field_Func, ._field_errorToken=_173332_r.get()._field_Token, });;
	jule::Bool _174813_ok = _1e551bd1b_check(_174317_rtc.ptr(), &(_173332_r.get()._field_Expr));;
	if ((!(_174813_ok))) {
		return;;
	};
	if ((_173332_r.get()._field_Expr != nullptr)) {
		_173817_rt.get()._field_Expr=_174317_rtc.get()._field_model;
	};
}



inline void _1e549accd_checkUseExpr(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e47786d8_UseExpr> _175832_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _175832_ue.get()._field_Token, jule::Str("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1e5490388_isDeferred(_self_)) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _175832_ue.get()._field_Token, jule::Str("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _175832_ue.get()._field_Token, jule::Str("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1e549b053_checkNode(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Any* _177434_node) {
	{
		auto &_match_expr{ (*(_177434_node)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1e86d1b59:;
			{
				_1e5492ba4_checkAnonScope(_self_, (*(_177434_node)).cast_ptr<_1e47837ae_ScopeTree>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1e86d1571:;
			{
				_1e54918b7_checkVarDecl(_self_, (*(_177434_node)).cast_ptr<_1e4786284_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1e86d196c:;
			{
				_1e5491b3c_checkTypeAliasDecl(_self_, (*(_177434_node)).cast_ptr<_1e4789ae5_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1e86d1c8b:;
			{
				_1e5493248_checkExpr(_self_, (*(_177434_node)).cast_ptr<_1e4777d47_Expr>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1e86d1d02:;
			{
				_1e5493ad9_checkConditional(_self_, (*(_177434_node)).cast_ptr<_1e478941e_Conditional>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1e86d1eab:;
			{
				_1e5495349_checkIter(_self_, (*(_177434_node)).cast_ptr<_1e4786c9b_Iter>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1e86d2022:;
			{
				_1e5495ee8_checkCont(_self_, (*(_177434_node)).cast_ptr<_1e4788671_ContSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1e86d2088:;
			{
				_1e549626d_checkLabel(_self_, (*(_177434_node)).cast_ptr<_1e4780ec6_LabelSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1e86d20ee:;
			{
				_1e54964e3_pushGoto(_self_, (*(_177434_node)).cast_ptr<_1e478137d_GotoSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1e86d2165:;
			{
				_1e5497c86_checkAssignSt(_self_, (*(_177434_node)).cast_ptr<_1e47822b3_AssignSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1e86d21cb:;
			{
				_1e5499bbc_checkMatch(_self_, (*(_177434_node)).cast_ptr<_1e478a73e_MatchCase>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1e86d2242:;
			{
				_1e5499e42_checkFall(_self_, (*(_177434_node)).cast_ptr<_1e4781669_FallSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1e86d22a8:;
			{
				_1e549a7d3_checkBreak(_self_, (*(_177434_node)).cast_ptr<_1e47882b9_BreakSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1e86d231e:;
			{
				_1e549aa58_checkRet(_self_, (*(_177434_node)).cast_ptr<_1e478663b_RetSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1e86d2385:;
			{
				_1e549accd_checkUseExpr(_self_, (*(_177434_node)).cast_ptr<_1e47786d8_UseExpr>(&__jule_any_type64));
			}
		}
		else {
			_case_begin_1e86d16e7:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1e86d161a:;
	};
}



inline void _1e549b22e_checkResult(jule::Ptr<_1e548c4a6_scopeChecker> _self_) {
	_1e47831a4_Stmt _181217_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _181217_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1e86daaa8:;
			{
				jule::Ptr<_1e47786d8_UseExpr> _181521_ue = _181217_stmt._field_Data.cast_ptr<_1e47786d8_UseExpr>(&__jule_any_type64);;
				jule::Ptr<_1e5522d00_Data> _181621_d = _1e5540290_evalExpr(_1e54b6843_eval(_self_.get()._field_s, jule::Trait<_1e5569c04_Lookup>(_self_, 0)), _181521_ue.get()._field_Expr);;
				if ((_181621_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_181621_d, &__jule_any_type23));;
				jule::Ptr<_1e551b117_retTypeChecker> _182121_rtc = jule::new_ptr<_1e551b117_retTypeChecker>(_1e551b117_retTypeChecker{._field_sc=_self_, ._field_types=_1e5464c97_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_181521_ue.get()._field_Expr.get()._field_Token, });;
				_1e551bd1b_check(_182121_rtc.ptr(), &(_181521_ue.get()._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1e86da2d3:;
			{
				jule::Ptr<_1e4777d47_Expr> _182821_expr = _181217_stmt._field_Data.cast_ptr<_1e4777d47_Expr>(&__jule_any_type53);;
				jule::Ptr<_1e5522d00_Data> _182921_d = _1e5540290_evalExpr(_1e54b6843_eval(_self_.get()._field_s, jule::Trait<_1e5569c04_Lookup>(_self_, 0)), _182821_expr);;
				if ((_182921_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _182921_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1e86e04d6:;
						{
							jule::Ptr<_1e545c08b_BuiltinErrorCallExprModel> _183525_m = _182921_d.get()._field_Model.cast_ptr<_1e545c08b_BuiltinErrorCallExprModel>(&__jule_any_type22);;
							_1e5492ec3_processErrorCall(_self_, &(_183525_m), _182821_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_182921_d, &__jule_any_type23));;
						}
					}
					else {
						_case_begin_1e86e00c9:;
						{
							return;;
						}
					}
					_match_end_1e86dedba:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type63) {
			_case_begin_1e86da349:;
			{
				_1e549b053_checkNode(_self_, &(_181217_stmt._field_Data));
			}
		}
		else {
			_case_begin_1e86da26c:;
			{
				_1e549b053_checkNode(_self_, &(_181217_stmt._field_Data));
				return;;
			}
		}
		_match_end_1e86da0e6:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1e549b40a_checkTree(jule::Ptr<_1e548c4a6_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _185717_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_185717_n)--;
	};
	for (; (_self_.get()._field_i < _185717_n); (_self_.get()._field_i)++) {
		{
			_1e47831a4_Stmt _186521_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1e549b053_checkNode(_self_, &(_186521_stmt._field_Data));
			if (_1e5490124_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1e86e2be2:;
	}
	_iter_end_1e86e2be2:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1e549b22e_checkResult(_self_);
	};
}



inline void _1e549b729_checkGoto(_1e548c4a6_scopeChecker* _self_, jule::Ptr<_1e548b692_scopeGoto>* _187633_gt, jule::Ptr<_1e548b3ea_scopeLabel>* _187654_label) {
	jule::Ptr<_1e548c4a6_scopeChecker> _187717_gtsc = (*(_187633_gt)).get()._field_scope;;
	while (((_187717_gtsc.get()._field_childIndex - 1LL) > (*(_187654_label)).get()._field_scope.get()._field_childIndex)) {
		{
			_187717_gtsc=_187717_gtsc.get()._field_parent;
		}
	_iter_next_1e86e62cd:;
	}
	_iter_end_1e86e62cd:;;
	jule::I64 _188217_n = 0LL;;
	if ((_187717_gtsc.get()._field_scope == (*(_187654_label)).get()._field_scope.get()._field_scope)) {
		if (((*(_187633_gt)).get()._field_pos > (*(_187654_label)).get()._field_pos)) {
			return;;
		};
		_188217_n=(*(_187633_gt)).get()._field_pos;
	};
	jule::I64 _189517_i = ((*(_187654_label)).get()._field_pos - 1LL);;
	if ((_188217_n == 0LL)) {
		{
			auto expr = &((*(_187654_label)).get()._field_scope.get()._field_scope.get()._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e86e880d:;
			if (it != expr_end) {
				jule::I64 _189817_j = it - expr->begin();
				jule::Any _189820_stmt = *it;
				{
					if (_1e547d9b4_stmtIsGotoScope(&(_189820_stmt), &(_187717_gtsc.get()._field_scope))) {
						_188217_n=_189817_j;
						goto _iter_end_1e86e880d;
					};
				}
				_iter_next_1e86e880d:;
				++it;
				_189817_j++;
				goto _iter_begin_1e86e880d;
			}
			_iter_end_1e86e880d:;
		};
	};
	for (; (_189517_i >= _188217_n); (_189517_i)--) {
		{
			jule::Any _190821_stmt = (*(_187654_label)).get()._field_scope.get()._field_scope.get()._field_Stmts[_189517_i];;
			if (_1e5480653_stmtIsDef(&(_190821_stmt))) {
				_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_187633_gt)).get()._field_gt.get()._field_Token, jule::Str("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*(_187633_gt)).get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				return;;
			};
		}
	_iter_next_1e86e96ee:;
	}
	_iter_end_1e86e96ee:;;
}



inline void _1e549b905_checkGotos(_1e548c4a6_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e86e9149:;
		if (it != expr_end) {
			jule::Ptr<_1e548b692_scopeGoto> _191721_gt = *it;
			{
				jule::Ptr<_1e548b3ea_scopeLabel> _191821_label = _1e549128a_findLabelAll(_self_, _191721_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_191821_label == nullptr)) {
					_1e54aee57_pushErr((*(_self_))._field_s.ptr(), _191721_gt.get()._field_gt.get()._field_Token, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_191721_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					goto _iter_next_1e86e9149;
				};
				_191821_label.get()._field_used=true;
				_1e549b729_checkGoto(_self_, &(_191721_gt), &(_191821_label));
			}
			_iter_next_1e86e9149:;
			++it;
			goto _iter_begin_1e86e9149;
		}
		_iter_end_1e86e9149:;
	};
}



inline void _1e549bad1_checkLabels(_1e548c4a6_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e86ed7e1:;
		if (it != expr_end) {
			jule::Ptr<_1e548b3ea_scopeLabel> _193016_l = *it;
			{
				if ((!(_193016_l.get()._field_used))) {
					_1e54aee57_pushErr((*(_self_))._field_s.ptr(), _193016_l.get()._field_token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_193016_l.get()._field_label.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1e86ed7e1:;
			++it;
			goto _iter_begin_1e86ed7e1;
		}
		_iter_end_1e86ed7e1:;
	};
}



inline void _1e549bcac_checkVars(_1e548c4a6_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e86edc20:;
		if (it != expr_end) {
			jule::Ptr<_1e54ca291_Var> _193816_v = *it;
			{
				if (((((!(_193816_v.get()._field_Used)) && (!(_20d157d3a_IsIgnoreIdent(_193816_v.get()._field_Ident)))) && (!(_20d1580d2_IsAnonIdent(_193816_v.get()._field_Ident)))) && (_193816_v.get()._field_Ident != jule::Str("self", 4)))) {
					_1e54aee57_pushErr((*(_self_))._field_s.ptr(), _193816_v.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_193816_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1e86edc20:;
			++it;
			goto _iter_begin_1e86edc20;
		}
		_iter_end_1e86edc20:;
	};
}



inline void _1e549be88_checkAliases(_1e548c4a6_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8701c45:;
		if (it != expr_end) {
			jule::Ptr<_1e554d08e_TypeAlias> _194616_a = *it;
			{
				if ((((!(_194616_a.get()._field_Used)) && (!(_20d157d3a_IsIgnoreIdent(_194616_a.get()._field_Ident)))) && (!(_20d1580d2_IsAnonIdent(_194616_a.get()._field_Ident))))) {
					_1e54aee57_pushErr((*(_self_))._field_s.ptr(), _194616_a.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_194616_a.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1e8701c45:;
			++it;
			goto _iter_begin_1e8701c45;
		}
		_iter_end_1e8701c45:;
	};
}



inline void _1e549c2a7_check(jule::Ptr<_1e548c4a6_scopeChecker> _self_, jule::Ptr<_1e47837ae_ScopeTree>* _195430_tree, jule::Ptr<_1e5480ad7_Scope>* _195453_s) {
	(*(_195453_s)).get()._field_Deferred=(*(_195430_tree)).get()._field_Deferred;
	(*(_195453_s)).get()._field_Unsafety=(*(_195430_tree)).get()._field_Unsafety;
	jule::I64 _195813_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=(*(_195430_tree));
	_self_.get()._field_scope=(*(_195453_s));
	_1e549b40a_checkTree(_self_);
	if ((_195813_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1e549bcac_checkVars(_self_.ptr());
		_1e549be88_checkAliases(_self_.ptr());
		if (_1e548ebd4_isRoot(_self_.ptr())) {
			_1e549b905_checkGotos(_self_.ptr());
			_1e549bad1_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1e548c4a6_scopeChecker> _1e549c51b_newChildChecker(jule::Ptr<_1e548c4a6_scopeChecker> _self_) {
	jule::Ptr<_1e548c4a6_scopeChecker> _197817_base = _1e547cb17_newScopeCheckerBase(&(_self_.get()._field_s), nullptr);;
	_197817_base.get()._field_parent=_self_;
	_197817_base.get()._field_labels=_self_.get()._field_labels;
	_197817_base.get()._field_gotos=_self_.get()._field_gotos;
	_197817_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _197817_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e548c4a6_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1e549d50b_checkCdef(_1e549d0bb_directiveChecker* _self_, jule::Ptr<_1e474057e_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1e8707da0:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1e5460ec4_Fn>(&__jule_any_type65).get()._field_CppLinked) {
					goto _match_end_1e87080d1;
				};
				goto _case_begin_1e8708136;
			}
		}
		else {
			_case_begin_1e8708136:;
			{
				_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_1629_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1e87080d1:;
	};
	if (((*(_1629_d)).get()._field_Args.len() > 0LL)) {
		_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1e549d781_checkTypedef(_1e549d0bb_directiveChecker* _self_, jule::Ptr<_1e474057e_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1e870a59a:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1e4790018_Struct>(&__jule_any_type66).get()._field_CppLinked) {
					goto _match_end_1e870a7ba;
				};
				goto _case_begin_1e870a820;
			}
		}
		else {
			_case_begin_1e870a820:;
			{
				_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_3232_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1e870a7ba:;
	};
	if (((*(_3232_d)).get()._field_Args.len() > 0LL)) {
		_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1e549da06_checkDerive(_1e549d0bb_directiveChecker* _self_, jule::Ptr<_1e474057e_Directive>* _4831_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1e870ccb7:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1e4790018_Struct>(&__jule_any_type66).get()._field_CppLinked))) {
					goto _match_end_1e870ced7;
				};
				goto _case_begin_1e870d03c;
			}
		}
		else {
			_case_begin_1e870d03c:;
			{
				_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e870ced7:;
	};
	if (((*(_4831_d)).get()._field_Args.len() == 0LL)) {
		_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1e54b0276_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_4831_d)).get()._field_Args.len() > 1LL)) {
		_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ (*(_4831_d)).get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1e8711837:;
		}
		else {
			_case_begin_1e870dbca:;
			{
				_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[0LL], jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_4831_d)).get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1e871146e:;
	};
}



inline void _1e549dc7b_checkNamespace(_1e549d0bb_directiveChecker* _self_, jule::Ptr<_1e474057e_Directive>* _7438_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1e871176b:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1e4790018_Struct>(&__jule_any_type66).get()._field_CppLinked))) {
					_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1e8712d44:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1e5460ec4_Fn>(&__jule_any_type65).get()._field_CppLinked))) {
					_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e8712daa:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1e54ca291_Var>(&__jule_any_type8).get()._field_CppLinked))) {
					_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1e8712c89:;
			{
				_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1e8712c34:;
	};
	if (((*(_7438_d)).get()._field_Args.len() == 0LL)) {
		_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_7438_d)).get()._field_Args.len() > 1LL)) {
		_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d155596_Token> _9913_arg = (*(_7438_d)).get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1e54aee57_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1e54aee57_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_7438_d)).get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL, (_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1e871b15a:;
			{
				if ((_1e5548430_findDirective(&((*((*(_self_))._field_d))), jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1e474057e_Directive> _11625_typedef = jule::new_ptr<_1e474057e_Directive>(_1e474057e_Directive{._field_Tag=(*(_7438_d)).get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*(_self_))._field_d))=jule::append((*((*(_self_))._field_d)),jule::Slice<jule::Ptr<_1e474057e_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1e871ac09:;
	};
}



inline void _1e549e001_checkDeprecated(_1e549d0bb_directiveChecker* _self_, jule::Ptr<_1e474057e_Directive>* _12539_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1e871b303:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1e4790018_Struct>(&__jule_any_type66).get()._field_CppLinked) {
					_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1e871d3d2:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1e5460ec4_Fn>(&__jule_any_type65).get()._field_CppLinked) {
					_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e871d448:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1e54ca291_Var>(&__jule_any_type8).get()._field_CppLinked) {
					_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1e871cc94:;
			{
				_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1e871caeb:;
	};
	if (((*(_12539_d)).get()._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*(_12539_d)).get()._field_Args.len() > 1LL)) {
		_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d155596_Token> _15013_arg = (*(_12539_d)).get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1e54aee57_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1e54aee57_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_12539_d)).get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL, (_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1e549e276_checkTest(_1e549d0bb_directiveChecker* _self_, jule::Ptr<_1e474057e_Directive>* _16429_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1e8725928:;
			{
				jule::Ptr<_1e5460ec4_Fn> _16717_f = (*(_self_))._field_o.cast_ptr<_1e5460ec4_Fn>(&__jule_any_type65);;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_1e5461b73_IsInit(_16717_f.ptr())))) && (!(_1e546190e_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1e8726231;
				};
				if (_1e546169a_IsMethod(_16717_f.ptr())) {
					_1e54aee57_pushErr((*(_self_))._field_s.ptr(), _16717_f.get()._field_Token, jule::Str("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1e8726231;
				};
				goto _case_begin_1e8726374;
			}
		}
		else {
			_case_begin_1e8726374:;
			{
				_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_16429_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1e8726231:;
	};
	if (((*(_16429_d)).get()._field_Args.len() > 0LL)) {
		_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1e549e4eb_checkDirective(_1e549d0bb_directiveChecker* _self_, jule::Ptr<_1e474057e_Directive>* _18538_d) {
	{
		auto &_match_expr{ (*(_18538_d)).get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1e872a158:;
			{
				_1e549d50b_checkCdef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1e872a1be:;
			{
				_1e549d781_checkTypedef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1e872a235:;
			{
				_1e549da06_checkDerive(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1e872a29b:;
			{
				_1e549dc7b_checkNamespace(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1e872ad7e:;
			{
				_1e549e001_checkDeprecated(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1e872ade5:;
			{
				_1e549e276_checkTest(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1e872ae5b:;
			{
				_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1e872a0e2:;
			{
				_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1e872a08c:;
	};
}



inline void _1e549e6c7_check(_1e549d0bb_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e872d4be:;
		if (it != expr_end) {
			jule::Ptr<_1e474057e_Directive> _20821_d = *it;
			{
				_1e549e4eb_checkDirective(_self_, &(_20821_d));
			}
			_iter_next_1e872d4be:;
			++it;
			goto _iter_begin_1e872d4be;
		}
		_iter_end_1e872d4be:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e549d0bb_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e54a4149_ImportInfo> _1e54a4666_FindPackage(_1e54a4149_ImportInfo* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_1e54a4149_ImportInfo> _1e54a4974_SelectPackage(_1e54a4149_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1e54ca291_Var> _1e54a4d2b_FindVar(_1e54a4149_ImportInfo* _self_, jule::Str _19226_ident, jule::Bool ) {
	if ((!(_1e54a6712_isLookupable(_self_, _19226_ident)))) {
		return nullptr;;
	};
	return _1e54a1861_findVarInPackage(&((*(_self_))._field_Package.get()._field_Files), _19226_ident, false);;
}



inline jule::Ptr<_1e554d08e_TypeAlias> _1e54a51d3_FindTypeAlias(_1e54a4149_ImportInfo* _self_, jule::Str _20432_ident, jule::Bool ) {
	if ((!(_1e54a6712_isLookupable(_self_, _20432_ident)))) {
		return nullptr;;
	};
	return _1e54a1c90_findTypeAliasInPackage(&((*(_self_))._field_Package.get()._field_Files), _20432_ident, false);;
}



inline jule::Ptr<_1e4790018_Struct> _1e54a558a_FindStruct(_1e54a4149_ImportInfo* _self_, jule::Str _21629_ident, jule::Bool ) {
	if ((!(_1e54a6712_isLookupable(_self_, _21629_ident)))) {
		return nullptr;;
	};
	return _1e54a217a_findStructInPackage(&((*(_self_))._field_Package.get()._field_Files), _21629_ident, false);;
}



inline jule::Ptr<_1e5460ec4_Fn> _1e54a5942_FindFn(_1e54a4149_ImportInfo* _self_, jule::Str _22825_ident, jule::Bool ) {
	if ((!(_1e54a6712_isLookupable(_self_, _22825_ident)))) {
		return nullptr;;
	};
	return _1e54a25dc_findFnInPackage(&((*(_self_))._field_Package.get()._field_Files), _22825_ident, false);;
}



inline jule::Ptr<_1e5472dc6_Trait> _1e54a5c50_FindTrait(_1e54a4149_ImportInfo* _self_, jule::Str _23928_ident) {
	if ((!(_1e54a6712_isLookupable(_self_, _23928_ident)))) {
		return nullptr;;
	};
	return _1e54a28ea_findTraitInPackage(&((*(_self_))._field_Package.get()._field_Files), _23928_ident);;
}



inline jule::Ptr<_1e547501b_Enum> _1e54a605d_FindEnum(_1e54a4149_ImportInfo* _self_, jule::Str _25027_ident) {
	if ((!(_1e54a6712_isLookupable(_self_, _25027_ident)))) {
		return nullptr;;
	};
	return _1e54a2c3b_findEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _25027_ident);;
}



inline jule::Ptr<_1e5476616_TypeEnum> _1e54a636b_FindTypeEnum(_1e54a4149_ImportInfo* _self_, jule::Str _26131_ident) {
	if ((!(_1e54a6712_isLookupable(_self_, _26131_ident)))) {
		return nullptr;;
	};
	return _1e54a307c_findTypeEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _26131_ident);;
}



inline jule::Bool _1e54a6712_isLookupable(_1e54a4149_ImportInfo* _self_, jule::Str _27027_ident) {
	if ((*(_self_))._field_CppLinked) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1e54a6a20_existIdent(_self_, jule::Str("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1e54a6a20_existIdent(_self_, _27027_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1e54a6a20_existIdent(_1e54a4149_ImportInfo* _self_, jule::Str _29025_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e874378c:;
		if (it != expr_end) {
			jule::Ptr<_20d155596_Token> *_29116_sident = it;
			{
				if (((*(_29116_sident)).get()._field_Kind == _29025_ident)) {
					return true;;
				};
			}
			_iter_next_1e874378c:;
			++it;
			goto _iter_begin_1e874378c;
		}
		_iter_end_1e874378c:;
	};
	return false;;
}



inline jule::Bool _1e54a6ca6_isAccessibleViaSelection(_1e54a4149_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1e54a6a20_existIdent(_self_, jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1e54a4149_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e54a4149_ImportInfo> _1e54a757b_FindPackage(_1e54a70a3_Package* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_1e54a4149_ImportInfo> _1e54a7889_SelectPackage(_1e54a70a3_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1e54ca291_Var> _1e54a7c41_FindVar(_1e54a70a3_Package* _self_, jule::Str _32026_ident, jule::Bool _32038_cpp_linked) {
	return _1e54a1861_findVarInPackage(&((*(_self_))._field_Files), _32026_ident, _32038_cpp_linked);;
}



inline jule::Ptr<_1e554d08e_TypeAlias> _1e54a80e8_FindTypeAlias(_1e54a70a3_Package* _self_, jule::Str _32632_ident, jule::Bool _32644_cpp_linked) {
	return _1e54a1c90_findTypeAliasInPackage(&((*(_self_))._field_Files), _32632_ident, _32644_cpp_linked);;
}



inline jule::Ptr<_1e4790018_Struct> _1e54a84a0_FindStruct(_1e54a70a3_Package* _self_, jule::Str _33229_ident, jule::Bool _33241_cpp_linked) {
	return _1e54a217a_findStructInPackage(&((*(_self_))._field_Files), _33229_ident, _33241_cpp_linked);;
}



inline jule::Ptr<_1e5460ec4_Fn> _1e54a8857_FindFn(_1e54a70a3_Package* _self_, jule::Str _33825_ident, jule::Bool _33837_cpp_linked) {
	return _1e54a25dc_findFnInPackage(&((*(_self_))._field_Files), _33825_ident, _33837_cpp_linked);;
}



inline jule::Ptr<_1e5472dc6_Trait> _1e54a8b65_FindTrait(_1e54a70a3_Package* _self_, jule::Str _34428_ident) {
	return _1e54a28ea_findTraitInPackage(&((*(_self_))._field_Files), _34428_ident);;
}



inline jule::Ptr<_1e547501b_Enum> _1e54a8e73_FindEnum(_1e54a70a3_Package* _self_, jule::Str _35027_ident) {
	return _1e54a2c3b_findEnumInPackage(&((*(_self_))._field_Files), _35027_ident);;
}



inline jule::Ptr<_1e5476616_TypeEnum> _1e54a9281_FindTypeEnum(_1e54a70a3_Package* _self_, jule::Str _35631_ident) {
	return _1e54a307c_findTypeEnumInPackage(&((*(_self_))._field_Files), _35631_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e54a70a3_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e54a4149_ImportInfo> _1e54ac7b2_FindPackage(_1e54ac295_Sema* _self_, jule::Str _22330_ident) {
	return _1e551d4e3_FindPackage((*(_self_))._field_file.ptr(), _22330_ident);;
}



inline jule::Ptr<_1e54a4149_ImportInfo> _1e54acac0_SelectPackage(_1e54ac295_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)> _23332_selector) {
	return _1e551d801_SelectPackage((*(_self_))._field_file.ptr(), _23332_selector);;
}



inline jule::Ptr<_1e54ca291_Var> _1e54ace77_FindVar(_1e54ac295_Sema* _self_, jule::Str _24326_ident, jule::Bool _24338_cpp_linked) {
	jule::Ptr<_1e54ca291_Var> _24517_v = _1e54a1861_findVarInPackage(&((*(_self_))._field_files), _24326_ident, _24338_cpp_linked);;
	if ((_24517_v != nullptr)) {
		return _24517_v;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e876653a:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _25121_imp = *it;
			{
				if ((!(_1e54aabbc_impIsLookupable(&(_25121_imp), _24326_ident)))) {
					goto _iter_next_1e876653a;
				};
				_24517_v=_1e54a4d2b_FindVar(_25121_imp.ptr(), _24326_ident, _24338_cpp_linked);
				if (((_24517_v != nullptr) && _1e54b062d_isAccessibleDefine(_self_, _24517_v.get()._field_Public, _24517_v.get()._field_Token))) {
					return _24517_v;;
				};
			}
			_iter_next_1e876653a:;
			++it;
			goto _iter_begin_1e876653a;
		}
		_iter_end_1e876653a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e554d08e_TypeAlias> _1e54ad32e_FindTypeAlias(_1e54ac295_Sema* _self_, jule::Str _27032_ident, jule::Bool _27044_cpp_linked) {
	jule::Ptr<_1e554d08e_TypeAlias> _27217_ta = _1e54a1c90_findTypeAliasInPackage(&((*(_self_))._field_files), _27032_ident, _27044_cpp_linked);;
	if ((_27217_ta != nullptr)) {
		return _27217_ta;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8768cbd:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _27821_imp = *it;
			{
				if ((!(_1e54aabbc_impIsLookupable(&(_27821_imp), _27032_ident)))) {
					goto _iter_next_1e8768cbd;
				};
				_27217_ta=_1e54a51d3_FindTypeAlias(_27821_imp.ptr(), _27032_ident, _27044_cpp_linked);
				if (((_27217_ta != nullptr) && _1e54b062d_isAccessibleDefine(_self_, _27217_ta.get()._field_Public, _27217_ta.get()._field_Token))) {
					return _27217_ta;;
				};
			}
			_iter_next_1e8768cbd:;
			++it;
			goto _iter_begin_1e8768cbd;
		}
		_iter_end_1e8768cbd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e4790018_Struct> _1e54ad6d6_FindStruct(_1e54ac295_Sema* _self_, jule::Str _29729_ident, jule::Bool _29741_cppLinked) {
	jule::Ptr<_1e4790018_Struct> _29917_s = _1e54a217a_findStructInPackage(&((*(_self_))._field_files), _29729_ident, _29741_cppLinked);;
	if ((_29917_s != nullptr)) {
		return _29917_s;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e876b551:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _30421_imp = *it;
			{
				if ((!(_1e54aabbc_impIsLookupable(&(_30421_imp), _29729_ident)))) {
					goto _iter_next_1e876b551;
				};
				_29917_s=_1e54a558a_FindStruct(_30421_imp.ptr(), _29729_ident, _29741_cppLinked);
				if (((_29917_s != nullptr) && _1e54b062d_isAccessibleDefine(_self_, _29917_s.get()._field_Public, _29917_s.get()._field_Token))) {
					return _29917_s;;
				};
			}
			_iter_next_1e876b551:;
			++it;
			goto _iter_begin_1e876b551;
		}
		_iter_end_1e876b551:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5460ec4_Fn> _1e54ada8d_FindFn(_1e54ac295_Sema* _self_, jule::Str _32225_ident, jule::Bool _32237_cpp_linked) {
	jule::Ptr<_1e5460ec4_Fn> _32417_f = _1e54a25dc_findFnInPackage(&((*(_self_))._field_files), _32225_ident, _32237_cpp_linked);;
	if ((_32417_f != nullptr)) {
		return _32417_f;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e876dcd4:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _33021_imp = *it;
			{
				if ((!(_1e54aabbc_impIsLookupable(&(_33021_imp), _32225_ident)))) {
					goto _iter_next_1e876dcd4;
				};
				_32417_f=_1e54a5942_FindFn(_33021_imp.ptr(), _32225_ident, _32237_cpp_linked);
				if (((_32417_f != nullptr) && _1e54b062d_isAccessibleDefine(_self_, _32417_f.get()._field_Public, _32417_f.get()._field_Token))) {
					return _32417_f;;
				};
			}
			_iter_next_1e876dcd4:;
			++it;
			goto _iter_begin_1e876dcd4;
		}
		_iter_end_1e876dcd4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5472dc6_Trait> _1e54add9b_FindTrait(_1e54ac295_Sema* _self_, jule::Str _34928_ident) {
	jule::Ptr<_1e5472dc6_Trait> _35117_t = _1e54a28ea_findTraitInPackage(&((*(_self_))._field_files), _34928_ident);;
	if ((_35117_t != nullptr)) {
		return _35117_t;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87716cc:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _35721_imp = *it;
			{
				if ((!(_1e54aabbc_impIsLookupable(&(_35721_imp), _34928_ident)))) {
					goto _iter_next_1e87716cc;
				};
				_35117_t=_1e54a5c50_FindTrait(_35721_imp.ptr(), _34928_ident);
				if (((_35117_t != nullptr) && _1e54b062d_isAccessibleDefine(_self_, _35117_t.get()._field_Public, _35117_t.get()._field_Token))) {
					return _35117_t;;
				};
			}
			_iter_next_1e87716cc:;
			++it;
			goto _iter_begin_1e87716cc;
		}
		_iter_end_1e87716cc:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e547501b_Enum> _1e54ae1a9_FindEnum(_1e54ac295_Sema* _self_, jule::Str _37627_ident) {
	jule::Ptr<_1e547501b_Enum> _37817_e = _1e54a2c3b_findEnumInPackage(&((*(_self_))._field_files), _37627_ident);;
	if ((_37817_e != nullptr)) {
		return _37817_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8773c0c:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _38421_imp = *it;
			{
				if ((!(_1e54aabbc_impIsLookupable(&(_38421_imp), _37627_ident)))) {
					goto _iter_next_1e8773c0c;
				};
				_37817_e=_1e54a605d_FindEnum(_38421_imp.ptr(), _37627_ident);
				if (((_37817_e != nullptr) && _1e54b062d_isAccessibleDefine(_self_, _37817_e.get()._field_Public, _37817_e.get()._field_Token))) {
					return _37817_e;;
				};
			}
			_iter_next_1e8773c0c:;
			++it;
			goto _iter_begin_1e8773c0c;
		}
		_iter_end_1e8773c0c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5476616_TypeEnum> _1e54ae4b7_FindTypeEnum(_1e54ac295_Sema* _self_, jule::Str _40331_ident) {
	jule::Ptr<_1e5476616_TypeEnum> _40517_e = _1e54a307c_findTypeEnumInPackage(&((*(_self_))._field_files), _40331_ident);;
	if ((_40517_e != nullptr)) {
		return _40517_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e877623c:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _41121_imp = *it;
			{
				if ((!(_1e54aabbc_impIsLookupable(&(_41121_imp), _40331_ident)))) {
					goto _iter_next_1e877623c;
				};
				_40517_e=_1e54a636b_FindTypeEnum(_41121_imp.ptr(), _40331_ident);
				if (((_40517_e != nullptr) && _1e54b062d_isAccessibleDefine(_self_, _40517_e.get()._field_Public, _40517_e.get()._field_Token))) {
					return _40517_e;;
				};
			}
			_iter_next_1e877623c:;
			++it;
			goto _iter_begin_1e877623c;
		}
		_iter_end_1e877623c:;
	};
	return nullptr;;
}



inline jule::Bool _1e54ae819_isFlag(_1e54ac295_Sema* _self_, jule::I64 _42721_flags) {
	return (((*(_self_))._field_flags & _42721_flags) == _42721_flags);;
}



inline void _1e54aea8e_setCurrentFile(_1e54ac295_Sema* _self_, jule::Ptr<_1e551cec6_SymbolTable> _42937_f) {
	(*(_self_))._field_file=_42937_f;
}



inline void _1e54aee57_pushErr(_1e54ac295_Sema* _self_, jule::Ptr<_20d155596_Token> _43126_token, jule::Str _43141_fmt, jule::Slice<jule::Any> _43154_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1e54aa87b_compilerErr(&(_43126_token), true, _43141_fmt, _43154_args));;
}



inline void _1e54b0276_pushSugggestion(_1e54ac295_Sema* _self_, jule::Str _43634_fmt, jule::Slice<jule::Any> _43647_args) {
	{
		_1e54abd11_pushSugggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _43634_fmt, _43647_args);
	};
}



inline jule::Bool _1e54b062d_isAccessibleDefine(_1e54ac295_Sema* _self_, jule::Bool _44133_public, jule::Ptr<_20d155596_Token> _44147_token) {
	return ((_44133_public || (_44147_token.get()._field_File == nullptr)) || (_20d15b327_Dir((*(_self_))._field_file.get()._field_File.ptr()) == _20d15b327_Dir(_44147_token.get()._field_File.ptr())));;
}



inline jule::Bool _1e54b0a7e_isDuplicatedIdent(_1e54ac295_Sema* _self_, jule::Uintptr _44832_itself, jule::Str _44849_ident, jule::Bool _44861_cpp_linked) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e877c584:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> *_44916_f = it;
			{
				if (_1e55214c4_isDuplicatedIdent((*(_44916_f)).ptr(), _44832_itself, _44849_ident, _44861_cpp_linked)) {
					return true;;
				};
				{
					auto expr = &((*(_44916_f)).get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e877d3dc:;
					if (it != expr_end) {
						jule::Ptr<_1e54a4149_ImportInfo> *_45420_imp = it;
						{
							{
								auto expr = &((*(_45420_imp)).get()._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1e877dbb2:;
								if (it != expr_end) {
									jule::Ptr<_20d155596_Token> *_45524_selected = it;
									{
										if (((*(_45524_selected)).get()._field_Kind == _44849_ident)) {
											return true;;
										};
									}
									_iter_next_1e877dbb2:;
									++it;
									goto _iter_begin_1e877dbb2;
								}
								_iter_end_1e877dbb2:;
							};
						}
						_iter_next_1e877d3dc:;
						++it;
						goto _iter_begin_1e877d3dc;
					}
					_iter_end_1e877d3dc:;
				};
			}
			_iter_next_1e877c584:;
			++it;
			goto _iter_begin_1e877c584;
		}
		_iter_end_1e877c584:;
	};
	return false;;
}



inline void _1e54b0d9d_checkDirectives(jule::Ptr<_1e54ac295_Sema> _self_, jule::Slice<jule::Ptr<_1e474057e_Directive>>* _46540_d, jule::Any _46566_o) {
	_1e549d0bb_directiveChecker _46617_dc = _1e549d0bb_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1e474057e_Directive>>>)((&((*(_46540_d)))))), ._field_o=_46566_o};;
	_1e549e6c7_check(&_46617_dc);
}



inline jule::Bool _1e54b12ee_checkGenericQuantity(_1e54ac295_Sema* _self_, jule::I64 _47439_required, jule::I64 _47454_given, jule::Ptr<_20d155596_Token> _47466_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_47439_required == 0LL) && (_47454_given > 0LL))) {
			_case_begin_1e8781885:;
			{
				_1e54aee57_pushErr(_self_, _47466_token, jule::Str("define not has generics", 23), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_47439_required > 0LL) && (_47454_given == 0LL))) {
			_case_begin_1e878119d:;
			{
				_1e54aee57_pushErr(_self_, _47466_token, jule::Str("define has generics", 19), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required < _47454_given)) {
			_case_begin_1e8781214:;
			{
				_1e54aee57_pushErr(_self_, _47466_token, jule::Str("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required > _47454_given)) {
			_case_begin_1e878128b:;
			{
				_1e54aee57_pushErr(_self_, _47466_token, jule::Str("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1e8781137:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1e878106b:;
	};
}



inline jule::Bool _1e54b16c8_isDuplicatedImportSelection(_1e54ac295_Sema* _self_, jule::Uintptr _49342_itself, jule::Str _49359_ident) {
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8782b72:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> *_49416_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_49416_imp))) == _49342_itself)) {
					goto _iter_end_1e8782b72;
				};
				if (_1e54a6a20_existIdent((*(_49416_imp)).ptr(), _49359_ident)) {
					return true;;
				};
			}
			_iter_next_1e8782b72:;
			++it;
			goto _iter_begin_1e8782b72;
		}
		_iter_end_1e8782b72:;
	};
	return false;;
}



inline jule::Any _1e54b1a91_getImportDef(_1e54ac295_Sema* _self_, jule::Str _50627_ident, jule::Ptr<_1e54a4149_ImportInfo>* _50644_imp) {
	if ((_1e5574b76_findPackageBuiltinDef((*(_50644_imp)).get()._field_LinkPath, _50627_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type4);;
	};
	{
		auto expr = &((*(_50644_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8785bb9:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _51021_f = *it;
			{
				;
				jule::Any _51321_def = _1e5521073_defByIdent(_51021_f.ptr(), _50627_ident, false);;
				if ((_51321_def != nullptr)) {
					return _51321_def;;
				};
			}
			_iter_next_1e8785bb9:;
			++it;
			goto _iter_begin_1e8785bb9;
		}
		_iter_end_1e8785bb9:;
	};
	return nullptr;;
}



inline jule::Bool _1e878c64e_checkImportSelection(_1e54ac295_Sema* _self_, jule::Ptr<_20d155596_Token>* _52143_ident, jule::Ptr<_1e54ca291_Var>* _52159_s) {
	if ((!(_1e54b062d_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1e54aee57_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e54a3577_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1e54aee57_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1e87915ba_checkImportSelection(_1e54ac295_Sema* _self_, jule::Ptr<_20d155596_Token>* _52143_ident, jule::Ptr<_1e554d08e_TypeAlias>* _52159_s) {
	if ((!(_1e54b062d_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1e54aee57_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e54a3577_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1e54aee57_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1e879537c_checkImportSelection(_1e54ac295_Sema* _self_, jule::Ptr<_20d155596_Token>* _52143_ident, jule::Ptr<_1e4790018_Struct>* _52159_s) {
	if ((!(_1e54b062d_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1e54aee57_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e54a3577_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1e54aee57_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1e879978d_checkImportSelection(_1e54ac295_Sema* _self_, jule::Ptr<_20d155596_Token>* _52143_ident, jule::Ptr<_1e5472dc6_Trait>* _52159_s) {
	if ((!(_1e54b062d_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1e54aee57_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e54a3577_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1e54aee57_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1e879d561_checkImportSelection(_1e54ac295_Sema* _self_, jule::Ptr<_20d155596_Token>* _52143_ident, jule::Ptr<_1e547501b_Enum>* _52159_s) {
	if ((!(_1e54b062d_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1e54aee57_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e54a3577_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1e54aee57_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1e87a2455_checkImportSelection(_1e54ac295_Sema* _self_, jule::Ptr<_20d155596_Token>* _52143_ident, jule::Ptr<_1e5476616_TypeEnum>* _52159_s) {
	if ((!(_1e54b062d_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1e54aee57_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e54a3577_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1e54aee57_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1e87a61e5_checkImportSelection(_1e54ac295_Sema* _self_, jule::Ptr<_20d155596_Token>* _52143_ident, jule::Ptr<_1e5460ec4_Fn>* _52159_s) {
	if ((!(_1e54b062d_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1e54aee57_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e54a3577_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1e54aee57_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1e54b2278_checkImportSelectedSelections(_1e54ac295_Sema* _self_, jule::Ptr<_1e54a4149_ImportInfo>* _53553_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_53553_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8787eeb:;
		if (it != expr_end) {
			jule::Ptr<_20d155596_Token> _53716_ident = *it;
			{
				if ((_53716_ident.get()._field_Kind == jule::Str("self", 4))) {
					goto _iter_next_1e8787eeb;
				};
				if (_1e54b16c8_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_53553_imp)))), _53716_ident.get()._field_Kind)) {
					_1e54aee57_pushErr(_self_, _53716_ident, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type5)}));
					_1e54b0276_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1e8787eeb;
				};
				jule::Any _54921_def = _1e54b1a91_getImportDef(_self_, _53716_ident.get()._field_Kind, _53553_imp);;
				{
					auto &_match_expr{ _54921_def };
					
					if (_match_expr.type == &__jule_any_type4) {
						_case_begin_1e878b20d:;
						{
							goto _iter_next_1e8787eeb;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1e87886e4:;
						{
							jule::Ptr<_1e54ca291_Var> _55525_v = _54921_def.cast_ptr<_1e54ca291_Var>(&__jule_any_type8);;
							__jule_func_result=(_1e878c64e_checkImportSelection(_self_, &(_53716_ident), &(_55525_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1e878a85b:;
						{
							jule::Ptr<_1e554d08e_TypeAlias> _55825_ta = _54921_def.cast_ptr<_1e554d08e_TypeAlias>(&__jule_any_type67);;
							__jule_func_result=(_1e87915ba_checkImportSelection(_self_, &(_53716_ident), &(_55825_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1e878a8c2:;
						{
							jule::Ptr<_1e4790018_Struct> _56125_s = _54921_def.cast_ptr<_1e4790018_Struct>(&__jule_any_type66);;
							__jule_func_result=(_1e879537c_checkImportSelection(_self_, &(_53716_ident), &(_56125_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1e878b41c:;
						{
							jule::Ptr<_1e5472dc6_Trait> _56425_t = _54921_def.cast_ptr<_1e5472dc6_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1e879978d_checkImportSelection(_self_, &(_53716_ident), &(_56425_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1e878b483:;
						{
							jule::Ptr<_1e547501b_Enum> _56725_e = _54921_def.cast_ptr<_1e547501b_Enum>(&__jule_any_type68);;
							__jule_func_result=(_1e879d561_checkImportSelection(_self_, &(_53716_ident), &(_56725_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_1e878b4e9:;
						{
							jule::Ptr<_1e5476616_TypeEnum> _57025_e = _54921_def.cast_ptr<_1e5476616_TypeEnum>(&__jule_any_type69);;
							__jule_func_result=(_1e87a2455_checkImportSelection(_self_, &(_53716_ident), &(_57025_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1e878b560:;
						{
							jule::Ptr<_1e5460ec4_Fn> _57325_f = _54921_def.cast_ptr<_1e5460ec4_Fn>(&__jule_any_type65);;
							__jule_func_result=(_1e87a61e5_checkImportSelection(_self_, &(_53716_ident), &(_57325_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1e878a64c:;
						{
							_1e54aee57_pushErr(_self_, _53716_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type5)}));
							__jule_func_result=false;
							goto _iter_next_1e8787eeb;
						}
					}
					_match_end_1e878a5e7:;
				};
			}
			_iter_next_1e8787eeb:;
			++it;
			goto _iter_begin_1e8787eeb;
		}
		_iter_end_1e8787eeb:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e87aa639_checkImportsAllSelectionsFromCollection(_1e54ac295_Sema* _self_, jule::Slice<jule::Ptr<_1e54ca291_Var>>* _58462_s, jule::Ptr<_20d155596_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87ac30b:;
		if (it != expr_end) {
			jule::Ptr<_1e54ca291_Var> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1e878c64e_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1e87ac30b:;
			++it;
			goto _iter_begin_1e87ac30b;
		}
		_iter_end_1e87ac30b:;
	};
	return _58517_ok;;
}

inline jule::Bool _1e87adb8c_checkImportsAllSelectionsFromCollection(_1e54ac295_Sema* _self_, jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>* _58462_s, jule::Ptr<_20d155596_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87b0023:;
		if (it != expr_end) {
			jule::Ptr<_1e554d08e_TypeAlias> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1e87915ba_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1e87b0023:;
			++it;
			goto _iter_begin_1e87b0023;
		}
		_iter_end_1e87b0023:;
	};
	return _58517_ok;;
}

inline jule::Bool _1e87ae264_checkImportsAllSelectionsFromCollection(_1e54ac295_Sema* _self_, jule::Slice<jule::Ptr<_1e4790018_Struct>>* _58462_s, jule::Ptr<_20d155596_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87b2c29:;
		if (it != expr_end) {
			jule::Ptr<_1e4790018_Struct> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1e879537c_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1e87b2c29:;
			++it;
			goto _iter_begin_1e87b2c29;
		}
		_iter_end_1e87b2c29:;
	};
	return _58517_ok;;
}

inline jule::Bool _1e87b45aa_checkImportsAllSelectionsFromCollection(_1e54ac295_Sema* _self_, jule::Slice<jule::Ptr<_1e5460ec4_Fn>>* _58462_s, jule::Ptr<_20d155596_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87b5952:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1e87a61e5_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1e87b5952:;
			++it;
			goto _iter_begin_1e87b5952;
		}
		_iter_end_1e87b5952:;
	};
	return _58517_ok;;
}

inline jule::Bool _1e87b4b93_checkImportsAllSelectionsFromCollection(_1e54ac295_Sema* _self_, jule::Slice<jule::Ptr<_1e5472dc6_Trait>>* _58462_s, jule::Ptr<_20d155596_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87b8614:;
		if (it != expr_end) {
			jule::Ptr<_1e5472dc6_Trait> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1e879978d_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1e87b8614:;
			++it;
			goto _iter_begin_1e87b8614;
		}
		_iter_end_1e87b8614:;
	};
	return _58517_ok;;
}

inline jule::Bool _1e87b7855_checkImportsAllSelectionsFromCollection(_1e54ac295_Sema* _self_, jule::Slice<jule::Ptr<_1e547501b_Enum>>* _58462_s, jule::Ptr<_20d155596_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87bb2c6:;
		if (it != expr_end) {
			jule::Ptr<_1e547501b_Enum> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1e879d561_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1e87bb2c6:;
			++it;
			goto _iter_begin_1e87bb2c6;
		}
		_iter_end_1e87bb2c6:;
	};
	return _58517_ok;;
}

inline jule::Bool _1e87ba517_checkImportsAllSelectionsFromCollection(_1e54ac295_Sema* _self_, jule::Slice<jule::Ptr<_1e5476616_TypeEnum>>* _58462_s, jule::Ptr<_20d155596_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87be021:;
		if (it != expr_end) {
			jule::Ptr<_1e5476616_TypeEnum> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1e87a2455_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1e87be021:;
			++it;
			goto _iter_begin_1e87be021;
		}
		_iter_end_1e87be021:;
	};
	return _58517_ok;;
}



inline jule::Bool _1e54b29a4_checkImportAllSelections(_1e54ac295_Sema* _self_, jule::Ptr<_1e54a4149_ImportInfo>* _59444_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_59444_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e878b780:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> *_59616_file = it;
			{
				__jule_func_result=(_1e87aa639_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Vars), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1e87adb8c_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_TypeAliases), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1e87ae264_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Structs), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1e87b45aa_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Funcs), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1e87b4b93_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Traits), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1e87b7855_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Enums), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1e87ba517_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_TypeEnums), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
			}
			_iter_next_1e878b780:;
			++it;
			goto _iter_begin_1e878b780;
		}
		_iter_end_1e878b780:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e54b2cc3_checkImportSelections(_1e54ac295_Sema* _self_, jule::Ptr<_1e54a4149_ImportInfo>* _60845_imp) {
	jule::Bool __jule_func_result = false;
	if (((*(_60845_imp)).get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _1e54b2278_checkImportSelectedSelections(_self_, _60845_imp);
		return __jule_func_result;;
	} else if ((*(_60845_imp)).get()._field_ImportAll) {
		__jule_func_result = _1e54b29a4_checkImportAllSelections(_self_, _60845_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e54b30d1_isUseAliasDuplication(_1e54ac295_Sema* _self_, jule::Ptr<_1e54a4149_ImportInfo>* _61741_imp) {
	if (((*(_61741_imp)).get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87c1919:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _62221_imp2 = *it;
			{
				if ((_62221_imp2 == (*(_61741_imp)))) {
					goto _iter_end_1e87c1919;
				};
				if ((_62221_imp2.get()._field_Alias == (*(_61741_imp)).get()._field_Alias)) {
					return true;;
				};
				if (((_62221_imp2.get()._field_Ident == _62221_imp2.get()._field_LinkPath) && (_62221_imp2.get()._field_Ident == (*(_61741_imp)).get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1e87c1919:;
			++it;
			goto _iter_begin_1e87c1919;
		}
		_iter_end_1e87c1919:;
	};
	return false;;
}



inline jule::Bool _1e54b33de_checkImport(_1e54ac295_Sema* _self_, jule::Ptr<_1e54a4149_ImportInfo>* _63735_imp) {
	if (((*(_63735_imp)).get()._field_CppLinked || ((*(_63735_imp)).get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_1e54b30d1_isUseAliasDuplication(_self_, _63735_imp)) {
		_1e54aee57_pushErr(_self_, (*(_63735_imp)).get()._field_Token, jule::Str("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*(_63735_imp)).get()._field_Alias, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_, jule::Str("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*(_63735_imp)).get()._field_Duplicate))) {
		jule::Ptr<_1e54ac295_Sema> _64821_sema = jule::new_ptr<_1e54ac295_Sema>(_1e54ac295_Sema{._field_flags=(*(_self_))._field_flags});;
		_1e54c71e4_check(_64821_sema, &((*(_63735_imp)).get()._field_Package.get()._field_Files));
		if ((_64821_sema.get()._field_errors.len() != 0LL)) {
			(*(_self_))._field_errors=jule::append((*(_self_))._field_errors,_64821_sema.get()._field_errors);
			_64821_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _1e54b2cc3_checkImportSelections(_self_, _63735_imp);;
}



inline void _1e54b35ba_checkImports(_1e54ac295_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87c5302:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _66221_file = *it;
			{
				_1e54aea8e_setCurrentFile(_self_, _66221_file);
				{
					auto expr = &(_66221_file.get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e87c7dd7:;
					if (it != expr_end) {
						jule::Ptr<_1e54a4149_ImportInfo> _66425_imp = *it;
						{
							jule::Bool _66521_ok = _1e54b33de_checkImport(_self_, &(_66425_imp));;
							if ((!(_66521_ok))) {
								return;;
							};
						}
						_iter_next_1e87c7dd7:;
						++it;
						goto _iter_begin_1e87c7dd7;
					}
					_iter_end_1e87c7dd7:;
				};
			}
			_iter_next_1e87c5302:;
			++it;
			goto _iter_begin_1e87c5302;
		}
		_iter_end_1e87c5302:;
	};
}



inline void _1e54b3796_implFileImpls(jule::Ptr<_1e54ac295_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87c78ed:;
		if (it != expr_end) {
			jule::Ptr<_1e547aa7c_Impl> _67521_imp = *it;
			{
				_1e54be2c9_implImpl(_self_, &(_67521_imp));
			}
			_iter_next_1e87c78ed:;
			++it;
			goto _iter_begin_1e87c78ed;
		}
		_iter_end_1e87c78ed:;
	};
}



inline void _1e54b3972_implImpls(jule::Ptr<_1e54ac295_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87c98ab:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _68121_file = *it;
			{
				_1e54aea8e_setCurrentFile(_self_.ptr(), _68121_file);
				_1e54b3796_implFileImpls(_self_);
			}
			_iter_next_1e87c98ab:;
			++it;
			goto _iter_begin_1e87c98ab;
		}
		_iter_end_1e87c98ab:;
	};
}



inline void _1e54b3b4d_checkEnums(jule::Ptr<_1e54ac295_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87ca923:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _68821_file = *it;
			{
				_1e54aea8e_setCurrentFile(_self_.ptr(), _68821_file);
				_1e54bb903_checkEnumDecls(_self_);
			}
			_iter_next_1e87ca923:;
			++it;
			goto _iter_begin_1e87ca923;
		}
		_iter_end_1e87ca923:;
	};
}



inline _1e555c5ed_typeChecker _1e54b409e_typeChecker(jule::Ptr<_1e54ac295_Sema> _self_, jule::Trait<_1e5569c04_Lookup> _69435_l, jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>> _69450_generics, jule::Ptr<_1e555b71d_referencer> _69513_referencer) {
	_1e555c5ed_typeChecker _69617_tc = _1e555c5ed_typeChecker{._field_s=_self_, ._field_rootLookup=_69435_l, ._field_lookup=_69435_l, ._field_referencer=_69513_referencer, ._field_useGenerics=_69450_generics, };;
	{
		auto &_match_expr{ _69435_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e87cc381:;
			{
				jule::Ptr<_1e548c4a6_scopeChecker> _70521_hard = _1e5490861_getHardRoot(_69435_l.cast_ptr<_1e548c4a6_scopeChecker>(0));;
				_69617_tc._field_refers=_70521_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1e87cc095:;
	};
	if (((_69513_referencer != nullptr) && (_69513_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _69513_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1e87cd75b:;
				{
					_69617_tc._field_ownerAlias=_69513_referencer.get()._field_owner.cast_ptr<_1e554d08e_TypeAlias>(&__jule_any_type67);
				}
			}
			_match_end_1e87cd706:;
		};
	};
	return _69617_tc;;
}



inline jule::Ptr<_1e554dc82_TypeKind> _1e54b4599_buildTypeWithRefers(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e4773826_TypeDecl>* _72144_t, jule::Trait<_1e5569c04_Lookup> _72167_l, jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>> _72213_generics, jule::Ptr<_1e555b71d_referencer> _72241_referencer) {
	return ({ auto _wrap_copy = _1e54b409e_typeChecker(_self_, _72167_l, _72213_generics, _72241_referencer); _1e5564869_checkDecl(&_wrap_copy, _72144_t); });;
}



inline jule::Bool _1e54b4a94_checkTypeWithRefers(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5553160_TypeSymbol>* _72844_t, jule::Trait<_1e5569c04_Lookup> _72864_l, jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>> _72913_generics, jule::Ptr<_1e555b71d_referencer> _72941_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1e5553517_checked((*(_72844_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_72844_t)).get()._field_Kind=_1e54b4599_buildTypeWithRefers(_self_, &((*(_72844_t)).get()._field_Decl), _72864_l, _72913_generics, _72941_referencer);
	__jule_func_result = _1e5553517_checked((*(_72844_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1e5478b46_constraintChecker> _1e54b4d08_constraintChecker(jule::Ptr<_1e54ac295_Sema> _self_) {
	return jule::new_ptr<_1e5478b46_constraintChecker>(_1e5478b46_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1e54b51b0_checkType(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5553160_TypeSymbol>* _74334_t, jule::Trait<_1e5569c04_Lookup> _74354_l) {
	return _1e54b4a94_checkTypeWithRefers(_self_, _74334_t, _74354_l, nullptr, nullptr);;
}



inline jule::Ptr<_1e554dc82_TypeKind> _1e54b5611_buildTypeWithGenerics(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e4773826_TypeDecl>* _74946_t, jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>> _75013_generics, jule::Ptr<_1e5466ae0_ReferenceStack> _75041_refers) {
	jule::Ptr<_1e555c5ed_typeChecker> _75117_tc = jule::new_ptr<_1e555c5ed_typeChecker>(_1e555c5ed_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1e5569c04_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1e5569c04_Lookup>(_self_, 3), ._field_refers=_75041_refers, ._field_useGenerics=_75013_generics, });;
	return _1e5564869_checkDecl(_75117_tc.ptr(), _74946_t);;
}



inline jule::Ptr<_1e554dc82_TypeKind> _1e54b591e_buildType(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e4773826_TypeDecl>* _76234_t) {
	return _1e54b5611_buildTypeWithGenerics(_self_, _76234_t, nullptr, nullptr);;
}



inline jule::Ptr<_1e554dc82_TypeKind> _1e54b5c2c_selectType(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e4773826_TypeDecl>* _76735_t) {
	jule::Ptr<_1e555c5ed_typeChecker> _76817_tc = jule::new_ptr<_1e555c5ed_typeChecker>(_1e555c5ed_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1e5569c04_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1e5569c04_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1e5564869_checkDecl(_76817_tc.ptr(), _76735_t);;
}



inline jule::Ptr<_1e552486d_Eval> _1e54b617d_evalpd(jule::Ptr<_1e54ac295_Sema> _self_, jule::Trait<_1e5569c04_Lookup> _77930_l, jule::Ptr<_1e554dc82_TypeKind> _77945_p, jule::Ptr<_1e54ca291_Var> _77963_owner) {
	jule::Ptr<_1e552486d_Eval> _78017_e = jule::new_ptr<_1e552486d_Eval>(_1e552486d_Eval{._field_s=_self_, ._field_lookup=_77930_l, ._field_owner=_77963_owner, });;
	{
		auto &_match_expr{ _77930_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e87db77a:;
			{
				_78017_e.get()._field_unsafety=_1e548e970_isUnsafe(_77930_l.cast_ptr<_1e548c4a6_scopeChecker>(0));
			}
		}
		_match_end_1e87db714:;
	};
	_78017_e.get()._field_prefix=_77945_p;
	return _78017_e;;
}



inline jule::Ptr<_1e552486d_Eval> _1e54b6535_evalp(jule::Ptr<_1e54ac295_Sema> _self_, jule::Trait<_1e5569c04_Lookup> _79429_l, jule::Ptr<_1e554dc82_TypeKind> _79444_p) {
	return _1e54b617d_evalpd(_self_, _79429_l, _79444_p, nullptr);;
}



inline jule::Ptr<_1e552486d_Eval> _1e54b6843_eval(jule::Ptr<_1e54ac295_Sema> _self_, jule::Trait<_1e5569c04_Lookup> _79928_l) {
	return _1e54b6535_evalp(_self_, _79928_l, nullptr);;
}



inline jule::Bool _1e54b6d3d_checkAssignType(jule::Ptr<_1e54ac295_Sema> _self_, jule::Bool _80335_destIsRef, jule::Ptr<_1e554dc82_TypeKind>* _80357_dest, jule::Ptr<_1e5522d00_Data>* _80414_d, jule::Ptr<_20d155596_Token> _80428_errorToken) {
	if ((*(_80414_d)).get()._field_Decl) {
		_1e54aee57_pushErr(_self_.ptr(), _80428_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_80335_destIsRef) {
		if ((!(_1e554e48b_Equal((*(_80357_dest)), (*(_80414_d)).get()._field_Kind)))) {
			_1e54aee57_pushErr(_self_.ptr(), _80428_errorToken, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_80357_dest)).ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_80414_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	} else {
		jule::Ptr<_1e550d6e2_assignTypeChecker> _81521_atc = jule::new_ptr<_1e550d6e2_assignTypeChecker>(_1e550d6e2_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_80357_dest)), ._field_d=(*(_80414_d)), ._field_errorToken=_80428_errorToken});;
		jule::Bool _82117_ok = _1e550e869_check(_81521_atc.ptr());;
		if ((!(_82117_ok))) {
			return false;;
		};
	};
	if (((!(_1e55236b3_IsConst((*(_80414_d)).ptr()))) || (_1e5551119_Prim((*(_80357_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _83117_kind = _1e5551119_Prim((*(_80357_dest)).ptr()).get()._field_Kind;;
	{
		
		if (_1e544586b_IsSigInt(_83117_kind)) {
			_case_begin_1e87e2c9d:;
			{
				_1e544972c_SetI64((*(_80414_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1e5448ece_AsI64((*(_80414_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1e5445b57_IsUnsigInt(_83117_kind)) {
			_case_begin_1e87e2d25:;
			{
				_1e54499a2_SetU64((*(_80414_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1e5449243_AsU64((*(_80414_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1e544621d_IsFloat(_83117_kind)) {
			_case_begin_1e87e2d9c:;
			{
				_1e544a222_SetF64((*(_80414_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1e54494a7_AsF64((*(_80414_d)).get()._field_Constant.ptr())));
			}
		}
		_match_end_1e87e2bd2:;
	};
	return true;;
}



inline jule::Bool _1e54b728e_checkTypeCompatibility(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e554dc82_TypeKind>* _84547_dest, jule::Ptr<_1e554dc82_TypeKind>* _84614_src, jule::Ptr<_20d155596_Token>* _84635_errorToken) {
	if (((*(_84614_src)) == nullptr)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_84635_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_84547_dest)).ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_84614_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	if ((_1e5552ca8_Tup((*(_84614_src)).ptr()) != nullptr)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_84635_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_84547_dest)).ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_84614_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	_1e550bab9_typeCompatibilityChecker _86017_tcc = _1e550bab9_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_84547_dest)), ._field_src=(*(_84614_src)), ._field_errorToken=(*(_84635_errorToken))};;
	if (_1e550d1a3_check(&_86017_tcc)) {
		return true;;
	};
	_1e54aee57_pushErr(_self_.ptr(), (*(_84635_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_84547_dest)).ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_84614_src)).ptr()), &__jule_any_type5)}));
	return false;;
}



inline jule::Ptr<_1e554dc82_TypeKind> _1e54b7712_buildNonGenericTypeKind(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e4773826_TypeDecl>* _88148_ast, jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>>* _88214_generics, jule::Slice<jule::Ptr<_1e554dc82_TypeKind>>* _88250_ignored) {
	jule::Ptr<_1e555c5ed_typeChecker> _88317_tc = jule::new_ptr<_1e555c5ed_typeChecker>(_1e555c5ed_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1e5569c04_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1e5569c04_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_88214_generics)), ._field_ignoredGenerics=(&((*(_88250_ignored)))), });;
	return _1e5564869_checkDecl(_88317_tc.ptr(), _88148_ast);;
}



inline jule::Bool _1e54b7aec_buildFnNonGenericTypeKinds(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5463b75_FnIns>* _89351_f, jule::Slice<jule::Ptr<_1e554dc82_TypeKind>>* _89367_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>> _89517_generics = nullptr;;
	if (_1e546169a_IsMethod((*(_89351_f)).get()._field_Decl.ptr())) {
		_89517_generics=jule::append((*(_89351_f)).get()._field_Decl.get()._field_Generics,(*(_89351_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_89517_generics=(*(_89351_f)).get()._field_Decl.get()._field_Generics;
	};
	{
		auto expr = &((*(_89351_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87eb9ee:;
		if (it != expr_end) {
			jule::Ptr<_1e5462ca6_ParamIns> _90221_p = *it;
			{
				if ((!(_1e545ecb4_IsSelf(_90221_p.get()._field_Decl.ptr())))) {
					_90221_p.get()._field_Kind=_1e54b7712_buildNonGenericTypeKind(_self_, &(_90221_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), &(_89517_generics), _89367_ignored);
					__jule_func_result=(__jule_func_result && (_90221_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_1e87eb9ee:;
			++it;
			goto _iter_begin_1e87eb9ee;
		}
		_iter_end_1e87eb9ee:;
	};
	if ((!(_1e5461436_IsVoid((*(_89351_f)).get()._field_Decl.ptr())))) {
		(*(_89351_f)).get()._field_Result=_1e54b7712_buildNonGenericTypeKind(_self_, &((*(_89351_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), &(_89517_generics), _89367_ignored);
		__jule_func_result=(__jule_func_result && ((*(_89351_f)).get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1e5463b75_FnIns> _1e54b7e1b_getTraitCheckFnKind(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5460ec4_Fn>* _91544_f) {
	if (((*(_91544_f)).get()._field_Instances.len() == 1LL)) {
		return (*(_91544_f)).get()._field_Instances[0LL];;
	};
	jule::Ptr<_1e5463b75_FnIns> _91917_ins = _1e54623b0_instanceForce((*(_91544_f)));;
	jule::Ptr<_1e555c5ed_typeChecker> _92117_tc = jule::new_ptr<_1e555c5ed_typeChecker>(_1e555c5ed_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1e5569c04_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1e5569c04_Lookup>(_self_, 3), });;
	{
		auto expr = &(_91917_ins.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e880121d:;
		if (it != expr_end) {
			jule::Ptr<_1e5462ca6_ParamIns> _92621_p = *it;
			{
				if ((!(_1e545ecb4_IsSelf(_92621_p.get()._field_Decl.ptr())))) {
					_92621_p.get()._field_Kind=_1e5564869_checkDecl(_92117_tc.ptr(), &(_92621_p.get()._field_Decl.get()._field_Kind.get()._field_Decl));
				};
			}
			_iter_next_1e880121d:;
			++it;
			goto _iter_begin_1e880121d;
		}
		_iter_end_1e880121d:;
	};
	if ((!(_1e5461436_IsVoid((*(_91544_f)).ptr())))) {
		_91917_ins.get()._field_Result=_1e5564869_checkDecl(_92117_tc.ptr(), &((*(_91544_f)).get()._field_Result.get()._field_Kind.get()._field_Decl));
	};
	return _91917_ins;;
}



inline jule::Bool _1e54b836c_checkConstraintsFn(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5463b75_FnIns>* _93843_f, jule::Ptr<_20d155596_Token>* _93859_et, jule::Ptr<_1e5463b75_FnIns> _93875_exist) {
	jule::Ptr<_1e5478b46_constraintChecker> _93917_cc = _1e54b4d08_constraintChecker(_self_);;
	_93917_cc.get()._field_et=(*(_93859_et));
	_93917_cc.get()._field_fi=(*(_93843_f));
	if ((_93875_exist != nullptr)) {
		{
			auto expr = &(_93875_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e880451d:;
			if (it != expr_end) {
				jule::I64 _94318_i = it - expr->begin();
				jule::Ptr<_1e554c555_InsGeneric> _94325_g = *it;
				{
					(*(_93843_f)).get()._field_Generics[_94318_i].get()._field_Constraint=_94325_g.get()._field_Constraint;
				}
				_iter_next_1e880451d:;
				++it;
				_94318_i++;
				goto _iter_begin_1e880451d;
			}
			_iter_end_1e880451d:;
		};
	} else {
		_93917_cc.get()._field_uniq=true;
	};
	return _1e5479a26_check(_93917_cc);;
}



inline jule::Bool _1e54b87bd_checkConstraintsStruct(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e47903e2_StructIns>* _95247_s, jule::Ptr<_20d155596_Token>* _95267_et, jule::Ptr<_1e47903e2_StructIns> _95283_exist) {
	jule::Ptr<_1e5478b46_constraintChecker> _95317_cc = _1e54b4d08_constraintChecker(_self_);;
	_95317_cc.get()._field_et=(*(_95267_et));
	_95317_cc.get()._field_si=(*(_95247_s));
	if ((_95283_exist != nullptr)) {
		{
			auto expr = &(_95283_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e8806e7c:;
			if (it != expr_end) {
				jule::I64 _95718_i = it - expr->begin();
				jule::Ptr<_1e554c555_InsGeneric> _95725_g = *it;
				{
					(*(_95247_s)).get()._field_Generics[_95718_i].get()._field_Constraint=_95725_g.get()._field_Constraint;
				}
				_iter_next_1e8806e7c:;
				++it;
				_95718_i++;
				goto _iter_begin_1e8806e7c;
			}
			_iter_end_1e8806e7c:;
		};
	} else {
		_95317_cc.get()._field_uniq=true;
	};
	return _1e5479a26_check(_95317_cc);;
}



inline jule::Bool _1e54b8b75_fnEnvironment(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5463b75_FnIns>* _96938_f, jule::Fn<jule::Bool(jule::Ptr<_1e54ac295_Sema>*,jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>*)> _96949_algo) {
	jule::Ptr<_1e54ac295_Sema> _97017_sema = (*(_96938_f)).get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1e551cec6_SymbolTable> _97117_old = (*(_96938_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1e54aea8e_setCurrentFile((*(_96938_f)).get()._field_Decl.get()._field_sema.ptr(), _97117_old);
	});;
	jule::Ptr<_1e551cec6_SymbolTable> _97317_file = _1e54ab89e_findFile(&((*(_96938_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_96938_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_97317_file != nullptr)) {
		_1e54aea8e_setCurrentFile((*(_96938_f)).get()._field_Decl.get()._field_sema.ptr(), _97317_file);
	};
	jule::I64 _97817_size = (*(_96938_f)).get()._field_Generics.len();;
	if ((((*(_96938_f)).get()._field_Decl != nullptr) && ((*(_96938_f)).get()._field_Decl.get()._field_Owner != nullptr))) {
		_97817_size+=(*(_96938_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>> _98317_generics = jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>::alloc(0LL, _97817_size);;
	_1e54ab54c_appendGenericTypeAliases(&(_98317_generics), _96938_f);
	jule::Bool _98613_ok = _96949_algo(&(_97017_sema), &(_98317_generics));;
	if ((_97017_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_97017_sema.get()._field_errors);
		_97017_sema.get()._field_errors=nullptr;
	};
	return _98613_ok;;
}



inline void _1e54b8dea_checkFnParamKind(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5462ca6_ParamIns>* _99641_p) {
	(*(_99641_p)).get()._field_Kind.get()._field_Variadic=(*(_99641_p)).get()._field_Decl.get()._field_Variadic;
	if (((*(_99641_p)).get()._field_Decl.get()._field_Reference && (!(_1e556667e_isValidForRef(&((*(_99641_p)).get()._field_Kind)))))) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_99641_p)).get()._field_Decl.get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_99641_p)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Bool _1e54b9208_reloadFnInsTypes(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5463b75_FnIns> _100340_f) {
	if ((_1e546500b_IsBuiltin(_100340_f.ptr()) || _1e5465270_IsAnon(_100340_f.ptr()))) {
		return true;;
	};
	return _1e54b8b75_fnEnvironment(_self_, &(_100340_f), jule::Fn<jule::Bool(jule::Ptr<_1e54ac295_Sema>*,jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>*)>([=](jule::Ptr<_1e54ac295_Sema>* _100743_sema, jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>* _100761_generics) mutable -> jule::Bool {
		jule::Bool _100821_ok = true;;
		{
			auto expr = &(_100340_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e8812d12:;
			if (it != expr_end) {
				jule::Ptr<_1e5462ca6_ParamIns> _100925_p = *it;
				{
					if (_1e545ecb4_IsSelf(_100925_p.get()._field_Decl.ptr())) {
						if (_1e5460028_IsRef(_100925_p.get()._field_Decl.ptr())) {
							_100925_p.get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(jule::new_ptr<_1e5557263_Sptr>(_1e5557263_Sptr{._field_Elem=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_100340_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_100925_p.get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_100340_f.get()._field_Owner, 0)});
						};
					} else {
						_100925_p.get()._field_Kind=_1e54b5611_buildTypeWithGenerics((*(_100743_sema)), &(_100925_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), (*(_100761_generics)), _100340_f.get()._field_Refers);
						if ((_100925_p.get()._field_Kind != nullptr)) {
							_1e54b8dea_checkFnParamKind(_self_, &(_100925_p));
						} else {
							_100821_ok=false;
						};
					};
				}
				_iter_next_1e8812d12:;
				++it;
				goto _iter_begin_1e8812d12;
			}
			_iter_end_1e8812d12:;
		};
		if ((!(_1e5461436_IsVoid(_100340_f.get()._field_Decl.ptr())))) {
			_100340_f.get()._field_Result=_1e54b5611_buildTypeWithGenerics((*(_100743_sema)), &(_100340_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), (*(_100761_generics)), _100340_f.get()._field_Refers);
			_100821_ok=((_100340_f.get()._field_Result != nullptr) && _100821_ok);
		};
		return _100821_ok;;
	}));;
}



inline jule::Bool _1e54b967b_checkRefValidityForInitExpr(jule::Ptr<_1e54ac295_Sema> _self_, jule::Bool _103947_leftMut, jule::Ptr<_1e5522d00_Data>* _103967_d, jule::Ptr<_20d155596_Token>* _103982_errorToken) {
	{
		auto &_match_expr{ (*(_103967_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e88183bc:;
			{
				goto _match_end_1e881770c;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1e8818433:;
			{
				jule::Ptr<_1e5456bac_TraitSubIdentExprModel> _104421_model = (*(_103967_d)).get()._field_Model.cast_ptr<_1e5456bac_TraitSubIdentExprModel>(&__jule_any_type70);;
				if ((!(_1e54aa45d_isValidModelForRef(&(_104421_model.get()._field_Expr))))) {
					_1e54aee57_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_104421_model.get()._field_Method.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1e8818213:;
			{
				jule::Ptr<_1e5457493_StructSubIdentExprModel> _105021_model = (*(_103967_d)).get()._field_Model.cast_ptr<_1e5457493_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_1e54aa45d_isValidModelForRef(&(_105021_model.get()._field_Expr.get()._field_Model))))) {
					_1e54aee57_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_105021_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72 || _match_expr.type == &__jule_any_type73) {
			_case_begin_1e8818279:;
			{
				_1e54aee57_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("built-in defines cannot pass to references", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1e88182e0:;
			{
				jule::Ptr<_1e545315e_UnaryExprModel> _106021_unary = (*(_103967_d)).get()._field_Model.cast_ptr<_1e545315e_UnaryExprModel>(&__jule_any_type74);;
				if ((_106021_unary.get()._field_Op.get()._field_Kind == jule::Str("*", 1))) {
					if ((!(_1e54aa45d_isValidModelForRef(&((*(_103967_d)).get()._field_Model))))) {
						_1e54aee57_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type5)}));
						return false;;
					};
					goto _match_end_1e881770c;
				};
				goto _case_begin_1e88178a5;
			}
		}
		else {
			_case_begin_1e88178a5:;
			{
				_1e54aee57_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("references requires variable for assignment", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1e881770c:;
	};
	if ((_103947_leftMut && (!((*(_103967_d)).get()._field_Mutable)))) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1e54b9c53_checkValidityForInitExpr(jule::Ptr<_1e54ac295_Sema> _self_, jule::Bool _108044_leftMut, jule::Bool _108059_leftRef, jule::Ptr<_1e554dc82_TypeKind>* _108110_leftKind, jule::Ptr<_1e5522d00_Data>* _108136_d, jule::Ptr<_20d155596_Token>* _108151_errorToken) {
	if (((_108044_leftMut && (!((*(_108136_d)).get()._field_Mutable))) && _1e5550404_Mutable((*(_108136_d)).get()._field_Kind.ptr()))) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_108151_errorToken)), jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_108136_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	if (_108059_leftRef) {
		if ((!(_1e54b967b_checkRefValidityForInitExpr(_self_, _108044_leftMut, _108136_d, _108151_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1e550d6e2_assignTypeChecker> _109117_atc = jule::new_ptr<_1e550d6e2_assignTypeChecker>(_1e550d6e2_assignTypeChecker{._field_s=_self_, ._field_d=(*(_108136_d)), ._field_errorToken=(*(_108151_errorToken))});;
	return _1e550ddb8_checkValidity(_109117_atc.ptr());;
}



inline jule::Bool _1e54ba11b_checkTypeAliasDeclKind(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e554d08e_TypeAlias>* _109947_ta, jule::Trait<_1e5569c04_Lookup> _109967_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e551cec6_SymbolTable> _110017_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1e54aea8e_setCurrentFile(_self_.ptr(), _110017_old);
	});;
	if (((*(_109947_ta)).get()._field_Token != nullptr)) {
		jule::Ptr<_1e551cec6_SymbolTable> _110521_file = _1e54ab89e_findFile(&(_self_.get()._field_files), &((*(_109947_ta)).get()._field_Token.get()._field_File));;
		if ((_110521_file != nullptr)) {
			_1e54aea8e_setCurrentFile(_self_.ptr(), _110521_file);
		};
	};
	__jule_func_result=_1e54b4a94_checkTypeWithRefers(_self_, &((*(_109947_ta)).get()._field_Kind), _109967_l, nullptr, jule::new_ptr<_1e555b71d_referencer>(_1e555b71d_referencer{._field_ident=(*(_109947_ta)).get()._field_Ident, ._field_owner=jule::Any((*(_109947_ta)), &__jule_any_type67), ._field_refs=(&((*(_109947_ta)).get()._field_Refers))}));
	if (((__jule_func_result && (_1e5551d2e_Arr((*(_109947_ta)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1e5551d2e_Arr((*(_109947_ta)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_109947_ta)).get()._field_Kind.get()._field_Decl.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1e54ba43a_checkTypeAliasDecl(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e554d08e_TypeAlias>* _112243_ta, jule::Trait<_1e5569c04_Lookup> _112263_l) {
	if (_20d157d3a_IsIgnoreIdent((*(_112243_ta)).get()._field_Ident)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_112243_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1e54ba11b_checkTypeAliasDeclKind(_self_, _112243_ta, _112263_l);
}



inline void _1e54ba6b0_checkTypeAliasDeclDup(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e554d08e_TypeAlias>* _113046_ta) {
	if (_20d157d3a_IsIgnoreIdent((*(_113046_ta)).get()._field_Ident)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_113046_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1e54b0a7e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_113046_ta)))), (*(_113046_ta)).get()._field_Ident, (*(_113046_ta)).get()._field_CppLinked)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_113046_ta)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_113046_ta)).get()._field_Ident, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1e54ba11b_checkTypeAliasDeclKind(_self_, _113046_ta, jule::Trait<_1e5569c04_Lookup>(_self_, 3));
}



inline jule::Bool _1e54ba924_checkTypeAliasDecls(jule::Ptr<_1e54ac295_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8829bb4:;
		if (it != expr_end) {
			jule::Ptr<_1e554d08e_TypeAlias> _114321_ta = *it;
			{
				_1e54ba6b0_checkTypeAliasDeclDup(_self_, &(_114321_ta));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e8829bb4:;
			++it;
			goto _iter_begin_1e8829bb4;
		}
		_iter_end_1e8829bb4:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1e883a60e_checkEnumItemsDup(_1e54ac295_Sema* _self_, jule::Slice<jule::Ptr<_1e5474526_EnumItem>> _115439_items) {
	{
		auto expr = &(_115439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e883b896:;
		if (it != expr_end) {
			jule::Ptr<_1e5474526_EnumItem> *_115516_item = it;
			{
				if ((*(_115516_item)).get()._field_Ident.empty()) {
					goto _iter_next_1e883b896;
				} else if (_20d157d3a_IsIgnoreIdent((*(_115516_item)).get()._field_Ident)) {
					_1e54aee57_pushErr(_self_, (*(_115516_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_115439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e883c622:;
						if (it != expr_end) {
							jule::Ptr<_1e5474526_EnumItem> *_116124_citem = it;
							{
								if (((*(_115516_item)) == (*(_116124_citem)))) {
									goto _iter_end_1e883c622;
								} else if (((*(_115516_item)).get()._field_Ident == (*(_116124_citem)).get()._field_Ident)) {
									_1e54aee57_pushErr(_self_, (*(_115516_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_115516_item)).get()._field_Ident, &__jule_any_type5)}));
									_1e54b0276_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1e883c622;
								};
							}
							_iter_next_1e883c622:;
							++it;
							goto _iter_begin_1e883c622;
						}
						_iter_end_1e883c622:;
					};
				};
			}
			_iter_next_1e883b896:;
			++it;
			goto _iter_begin_1e883b896;
		}
		_iter_end_1e883b896:;
	};
}

inline void _1e8845905_checkEnumItemsDup(_1e54ac295_Sema* _self_, jule::Slice<jule::Ptr<_1e5476050_TypeEnumItem>> _115439_items) {
	{
		auto expr = &(_115439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8846b48:;
		if (it != expr_end) {
			jule::Ptr<_1e5476050_TypeEnumItem> *_115516_item = it;
			{
				if ((*(_115516_item)).get()._field_Ident.empty()) {
					goto _iter_next_1e8846b48;
				} else if (_20d157d3a_IsIgnoreIdent((*(_115516_item)).get()._field_Ident)) {
					_1e54aee57_pushErr(_self_, (*(_115516_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_115439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e88478c4:;
						if (it != expr_end) {
							jule::Ptr<_1e5476050_TypeEnumItem> *_116124_citem = it;
							{
								if (((*(_115516_item)) == (*(_116124_citem)))) {
									goto _iter_end_1e88478c4;
								} else if (((*(_115516_item)).get()._field_Ident == (*(_116124_citem)).get()._field_Ident)) {
									_1e54aee57_pushErr(_self_, (*(_115516_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_115516_item)).get()._field_Ident, &__jule_any_type5)}));
									_1e54b0276_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1e88478c4;
								};
							}
							_iter_next_1e88478c4:;
							++it;
							goto _iter_begin_1e88478c4;
						}
						_iter_end_1e88478c4:;
					};
				};
			}
			_iter_next_1e8846b48:;
			++it;
			goto _iter_begin_1e8846b48;
		}
		_iter_end_1e8846b48:;
	};
}



inline void _1e54bae1e_checkEnumItemsStr(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e547501b_Enum>* _117442_e) {
	jule::Ptr<_1e552486d_Eval> _117517_eval = _1e54b6843_eval(_self_, jule::Trait<_1e5569c04_Lookup>(_self_, 3));;
	{
		auto expr = &((*(_117442_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e882b6ee:;
		if (it != expr_end) {
			jule::Ptr<_1e5474526_EnumItem> _117621_item = *it;
			{
				if (_1e5474911_AutoExpr(_117621_item.ptr())) {
					_117621_item.get()._field_Value=jule::new_ptr<_1e5523d78_Value>(_1e5523d78_Value{._field_Data=jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Constant=static__1e544772a_NewStr(_117621_item.get()._field_Ident)})});
					_117621_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_117621_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type47);
				} else {
					jule::Ptr<_1e5522d00_Data> _118525_d = _1e5540290_evalExpr(_117517_eval, _117621_item.get()._field_Value.get()._field_Expr);;
					if ((_118525_d == nullptr)) {
						goto _iter_next_1e882b6ee;
					};
					if ((!(_1e55236b3_IsConst(_118525_d.ptr())))) {
						_1e54aee57_pushErr(_self_.ptr(), _117621_item.get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1e54b6d3d_checkAssignType(_self_, false, &((*(_117442_e)).get()._field_Kind.get()._field_Kind), &(_118525_d), _117621_item.get()._field_Token);
					_117621_item.get()._field_Value.get()._field_Data=_118525_d;
				};
			}
			_iter_next_1e882b6ee:;
			++it;
			goto _iter_begin_1e882b6ee;
		}
		_iter_end_1e882b6ee:;
	};
}



inline void _1e54bb194_checkEnumItemsInt(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e547501b_Enum>* _120042_e) {
	jule::Ptr<_1e55539ce_Prim> _120113_prim = _1e5551119_Prim((*(_120042_e)).get()._field_Kind.get()._field_Kind.ptr());;
	jule::U64 _120217_max = static_cast<jule::U64>(_1e54420c6_Max(_1e5553d42_Str(_120113_prim.ptr())));;
	jule::Ptr<_1e552486d_Eval> _120317_eval = _1e54b6843_eval(_self_, jule::Trait<_1e5569c04_Lookup>(_self_, 3));;
	{
		auto expr = &((*(_120042_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8831902:;
		if (it != expr_end) {
			jule::I64 _120414_i = it - expr->begin();
			jule::Ptr<_1e5474526_EnumItem> _120421_item = *it;
			{
				if ((_120217_max == 0LLU)) {
					_1e54aee57_pushErr(_self_.ptr(), _120421_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(_120217_max)--;
				};
				if (_1e5474911_AutoExpr(_120421_item.ptr())) {
					_120421_item.get()._field_Value=jule::new_ptr<_1e5523d78_Value>(_1e5523d78_Value{._field_Data=jule::new_ptr<_1e5522d00_Data>()});
					{
						
						if (_1e544586b_IsSigInt(_1e5553d42_Str(_120113_prim.ptr()))) {
							_case_begin_1e8833c12:;
							{
								_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1e5446e44_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((_120217_max - (_120217_max - static_cast<jule::U64>(_120414_i))))));
							}
						}
						else {
							_case_begin_1e883389e:;
							{
								_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1e54471db_NewU64(static_cast<jule::U64>((_120217_max - (_120217_max - static_cast<jule::U64>(_120414_i)))));
							}
						}
						_match_end_1e8833849:;
					};
					_120421_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type47);
				} else {
					jule::Ptr<_1e5522d00_Data> _122225_d = _1e5540290_evalExpr(_120317_eval, _120421_item.get()._field_Value.get()._field_Expr);;
					if ((_122225_d == nullptr)) {
						goto _iter_next_1e8831902;
					};
					if ((!(_1e55236b3_IsConst(_122225_d.ptr())))) {
						_1e54aee57_pushErr(_self_.ptr(), _120421_item.get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1e54b6d3d_checkAssignType(_self_, false, &((*(_120042_e)).get()._field_Kind.get()._field_Kind), &(_122225_d), _120421_item.get()._field_Token);
					_120421_item.get()._field_Value.get()._field_Data=_122225_d;
				};
			}
			_iter_next_1e8831902:;
			++it;
			_120414_i++;
			goto _iter_begin_1e8831902;
		}
		_iter_end_1e8831902:;
	};
}



inline void _1e54bb419_checkEnumDecl(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e547501b_Enum>* _123538_e) {
	if (_20d157d3a_IsIgnoreIdent((*(_123538_e)).get()._field_Ident)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_123538_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1e54b0a7e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_123538_e)))), (*(_123538_e)).get()._field_Ident, false)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_123538_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_123538_e)).get()._field_Ident, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_123538_e)).get()._field_Items.len() == 0LL)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_123538_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_123538_e)).get()._field_Ident, &__jule_any_type5)}));
	};
	_1e883a60e_checkEnumItemsDup(_self_.ptr(), (*(_123538_e)).get()._field_Items);
	if (((*(_123538_e)).get()._field_Kind != nullptr)) {
		if ((!(_1e54b51b0_checkType(_self_, &((*(_123538_e)).get()._field_Kind), jule::Trait<_1e5569c04_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*(_123538_e)).get()._field_Kind=jule::new_ptr<_1e5553160_TypeSymbol>(_1e5553160_TypeSymbol{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1e55539ce_Prim> _126217_t = _1e5551119_Prim((*(_123538_e)).get()._field_Kind.get()._field_Kind.ptr());;
	if ((_126217_t == nullptr)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_123538_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1e5556c13_IsStr(_126217_t.ptr())) {
			_case_begin_1e884188a:;
			{
				_1e54bae1e_checkEnumItemsStr(_self_, _123538_e);
			}
		}
		else if (_1e5445dee_IsInt(_1e5553d42_Str(_126217_t.ptr()))) {
			_case_begin_1e884158d:;
			{
				_1e54bb194_checkEnumItemsInt(_self_, _123538_e);
			}
		}
		else {
			_case_begin_1e8840aba:;
			{
				_1e54aee57_pushErr(_self_.ptr(), (*(_123538_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e8840a65:;
	};
}



inline void _1e54bb68e_checkTypeEnumDecl(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5476616_TypeEnum>* _127942_e) {
	if (_20d157d3a_IsIgnoreIdent((*(_127942_e)).get()._field_Ident)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_127942_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1e54b0a7e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_127942_e)))), (*(_127942_e)).get()._field_Ident, false)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_127942_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_127942_e)).get()._field_Ident, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_127942_e)).get()._field_Items.len() == 0LL)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_127942_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_127942_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1e8845905_checkEnumItemsDup(_self_.ptr(), (*(_127942_e)).get()._field_Items);
	{
		auto expr = &((*(_127942_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8843073:;
		if (it != expr_end) {
			jule::Ptr<_1e5476050_TypeEnumItem> _129321_item = *it;
			{
				if ((_129321_item.get()._field_Kind == nullptr)) {
					_1e54aee57_pushErr(_self_.ptr(), _129321_item.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1e8843073;
				};
				jule::Bool _129817_ok = _1e54b51b0_checkType(_self_, &(_129321_item.get()._field_Kind), jule::Trait<_1e5569c04_Lookup>(_self_, 3));;
				if ((!(_129817_ok))) {
					goto _iter_next_1e8843073;
				};
				jule::Ptr<_1e55539ce_Prim> _130217_p = _1e5551119_Prim(_129321_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_130217_p != nullptr) && _1e5556e77_IsAny(_130217_p.ptr()))) {
					_1e54aee57_pushErr(_self_.ptr(), _129321_item.get()._field_Token, jule::Str("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1e8843073:;
			++it;
			goto _iter_begin_1e8843073;
		}
		_iter_end_1e8843073:;
	};
	if (((*(_127942_e)).get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1e5476050_TypeEnumItem> _130821_item = (*(_127942_e)).get()._field_Items[0LL];;
		_1e554dc82_TypeKind _130917_tk = _1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>((*(_127942_e)), 4)};;
		if (((_130821_item.get()._field_Kind.get()._field_Kind != nullptr) && _1e554e48b_Equal(_130821_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1e554dc82_TypeKind>)((&(_130917_tk))))))) {
			_1e54aee57_pushErr(_self_.ptr(), _130821_item.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1e5476946_Str((*(_127942_e)).ptr()), &__jule_any_type5)}));
		};
	};
}



inline jule::Bool _1e54bb903_checkEnumDecls(jule::Ptr<_1e54ac295_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e884eb40:;
		if (it != expr_end) {
			jule::Ptr<_1e547501b_Enum> _132021_e = *it;
			{
				_1e54bb419_checkEnumDecl(_self_, &(_132021_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e884eb40:;
			++it;
			goto _iter_begin_1e884eb40;
		}
		_iter_end_1e884eb40:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e54bbb67_checkTypeEnumDecls(jule::Ptr<_1e54ac295_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e885105e:;
		if (it != expr_end) {
			jule::Ptr<_1e5476616_TypeEnum> _133221_e = *it;
			{
				_1e54bb68e_checkTypeEnumDecl(_self_, &(_133221_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e885105e:;
			++it;
			goto _iter_begin_1e885105e;
		}
		_iter_end_1e885105e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e54bbe75_checkDeclGenerics(_1e54ac295_Sema* _self_, jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>>* _134237_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _134237_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8852648:;
		if (it != expr_end) {
			jule::I64 _134413_i = it - expr->begin();
			jule::Ptr<_1e4780b1e_GenericDecl> *_134416_g = it;
			{
				if (_20d157d3a_IsIgnoreIdent((*(_134416_g)).get()._field_Ident)) {
					_1e54aee57_pushErr(_self_, (*(_134416_g)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1e8852648;
				};
				_julec_label_duplicationLookup:;
				{
					auto expr = _134237_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e8853d75:;
					if (it != expr_end) {
						jule::I64 _135317_j = it - expr->begin();
						jule::Ptr<_1e4780b1e_GenericDecl> *_135320_ct = it;
						{
							{
								
								if ((_135317_j >= _134413_i)) {
									_case_begin_1e8854c99:;
									{
										goto _iter_end_1e8853d75;
									}
								}
								else if (((*(_134416_g)).get()._field_Ident == (*(_135320_ct)).get()._field_Ident)) {
									_case_begin_1e8854d21:;
									{
										_1e54aee57_pushErr(_self_, (*(_134416_g)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_134416_g)).get()._field_Ident, &__jule_any_type5)}));
										_1e54b0276_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1e8853d75;
									}
								}
								_match_end_1e8854b89:;
							};
						}
						_iter_next_1e8853d75:;
						++it;
						_135317_j++;
						goto _iter_begin_1e8853d75;
					}
					_iter_end_1e8853d75:;
				};
			}
			_iter_next_1e8852648:;
			++it;
			_134413_i++;
			goto _iter_begin_1e8852648;
		}
		_iter_end_1e8852648:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e54bc283_checkFnDeclParamsDup(_1e54ac295_Sema* _self_, jule::Ptr<_1e5460ec4_Fn>* _136940_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto expr = &((*(_136940_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88570a9:;
		if (it != expr_end) {
			jule::I64 _137213_i = it - expr->begin();
			jule::Ptr<_1e545e687_Param> *_137216_p = it;
			{
				{
					auto expr = &((*(_136940_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e8857c36:;
					if (it != expr_end) {
						jule::Ptr<_1e4780b1e_GenericDecl> *_137420_g = it;
						{
							if (((*(_137216_p)).get()._field_Ident == (*(_137420_g)).get()._field_Ident)) {
								__jule_func_result=false;
								_1e54aee57_pushErr(_self_, (*(_137216_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_137216_p)).get()._field_Ident, &__jule_any_type5)}));
								_1e54b0276_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1e88570a9;
							};
						}
						_iter_next_1e8857c36:;
						++it;
						goto _iter_begin_1e8857c36;
					}
					_iter_end_1e8857c36:;
				};
				_julec_label_paramsLookup:;
				{
					auto expr = &((*(_136940_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e885872b:;
					if (it != expr_end) {
						jule::I64 _138417_j = it - expr->begin();
						jule::Ptr<_1e545e687_Param> *_138420_jp = it;
						{
							{
								
								if ((_138417_j >= _137213_i)) {
									_case_begin_1e885a354:;
									{
										goto _iter_end_1e885872b;
									}
								}
								else if ((_20d1580d2_IsAnonIdent((*(_137216_p)).get()._field_Ident) || _20d1580d2_IsAnonIdent((*(_138420_jp)).get()._field_Ident))) {
									_case_begin_1e885a3cb:;
									{
										goto _iter_end_1e885872b;
									}
								}
								else if (((*(_137216_p)).get()._field_Ident == (*(_138420_jp)).get()._field_Ident)) {
									_case_begin_1e885a453:;
									{
										__jule_func_result=false;
										_1e54aee57_pushErr(_self_, (*(_137216_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_137216_p)).get()._field_Ident, &__jule_any_type5)}));
										_1e54b0276_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1e88570a9;
									}
								}
								_match_end_1e885a233:;
							};
						}
						_iter_next_1e885872b:;
						++it;
						_138417_j++;
						goto _iter_begin_1e885872b;
					}
					_iter_end_1e885872b:;
				};
			}
			_iter_next_1e88570a9:;
			++it;
			_137213_i++;
			goto _iter_begin_1e88570a9;
		}
		_iter_end_1e88570a9:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e54bc591_checkFnDeclResultDup(_1e54ac295_Sema* _self_, jule::Ptr<_1e5460ec4_Fn>* _140340_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1e5461436_IsVoid((*(_140340_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_140340_f)).get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e885ce5b:;
		if (it != expr_end) {
			jule::I64 _141013_i = it - expr->begin();
			jule::Ptr<_20d155596_Token> *_141016_v = it;
			{
				if ((_20d157d3a_IsIgnoreIdent((*(_141016_v)).get()._field_Kind) || _20d1580d2_IsAnonIdent((*(_141016_v)).get()._field_Kind))) {
					goto _iter_next_1e885ce5b;
				};
				{
					auto expr = &((*(_140340_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e885e49b:;
					if (it != expr_end) {
						jule::Ptr<_1e4780b1e_GenericDecl> *_141520_g = it;
						{
							if (((*(_141016_v)).get()._field_Kind == (*(_141520_g)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1e885e49b:;
						++it;
						goto _iter_begin_1e885e49b;
					}
					_iter_end_1e885e49b:;
				};
				{
					auto expr = &((*(_140340_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e88606ab:;
					if (it != expr_end) {
						jule::Ptr<_1e545e687_Param> *_142120_p = it;
						{
							if (((*(_141016_v)).get()._field_Kind == (*(_142120_p)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1e88606ab:;
						++it;
						goto _iter_begin_1e88606ab;
					}
					_iter_end_1e88606ab:;
				};
				_julec_label_itself_lookup:;
				{
					auto expr = &((*(_140340_f)).get()._field_Result.get()._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e88618bb:;
					if (it != expr_end) {
						jule::I64 _142917_j = it - expr->begin();
						jule::Ptr<_20d155596_Token> *_142920_jv = it;
						{
							{
								
								if ((_142917_j >= _141013_i)) {
									_case_begin_1e88625c0:;
									{
										goto _iter_end_1e88618bb;
									}
								}
								else if (((*(_142920_jv)).get()._field_Kind == (*(_141016_v)).get()._field_Kind)) {
									_case_begin_1e8862647:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1e88624b0:;
							};
						}
						_iter_next_1e88618bb:;
						++it;
						_142917_j++;
						goto _iter_begin_1e88618bb;
					}
					_iter_end_1e88618bb:;
				};
				goto _iter_next_1e885ce5b;
				_julec_label_exist:;
				_1e54aee57_pushErr(_self_, (*(_141016_v)), jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_141016_v)).get()._field_Kind, &__jule_any_type5)}));
				_1e54b0276_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1e885ce5b:;
			++it;
			_141013_i++;
			goto _iter_begin_1e885ce5b;
		}
		_iter_end_1e885ce5b:;
	};
	return __jule_func_result;;
}



inline void _1e54bc816_checkFnDeclPrototype(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5460ec4_Fn>* _145045_f) {
	if (((*(_145045_f)).get()._field_Exceptional && (*(_145045_f)).get()._field_CppLinked)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_145045_f)).get()._field_Token, jule::Str("cpp-linked defines cannot be exceptional", 40), jule::Slice<jule::Any>());
		return;;
	};
	if ((*(_145045_f)).get()._field_Exceptional) {
		if (_1e546190e_IsEntryPoint((*(_145045_f)).ptr())) {
			_1e54aee57_pushErr(_self_.ptr(), (*(_145045_f)).get()._field_Token, jule::Str("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1e5461b73_IsInit((*(_145045_f)).ptr())) {
			_1e54aee57_pushErr(_self_.ptr(), (*(_145045_f)).get()._field_Token, jule::Str("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1e54bbe75_checkDeclGenerics(_self_.ptr(), &((*(_145045_f)).get()._field_Generics))))) {
			_case_begin_1e8865727:;
		}
		else if ((!(_1e54bc283_checkFnDeclParamsDup(_self_.ptr(), _145045_f)))) {
			_case_begin_1e886578d:;
		}
		else if ((!(_1e54bc591_checkFnDeclResultDup(_self_.ptr(), _145045_f)))) {
			_case_begin_1e8866abe:;
		}
		_match_end_1e8865617:;
	};
}



inline void _1e54bca8b_checkTraitDeclMethod(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5460ec4_Fn>* _147145_f) {
	if (_20d157d3a_IsIgnoreIdent((*(_147145_f)).get()._field_Ident)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_147145_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	(*(_147145_f)).get()._field_sema=_self_;
	_1e54bc816_checkFnDeclPrototype(_self_, _147145_f);
	jule::Ptr<_1e5463b75_FnIns> _147817_ins = _1e5462624_instance((*(_147145_f)));;
	_1e54b9208_reloadFnInsTypes(_self_, _147817_ins);
	_147817_ins.get()._field_reloaded=true;
	_1e54628ee_appendInstance((*(_147145_f)).ptr(), &(_147817_ins));
}



inline void _1e54bcd11_checkTraitDeclMethods(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5472dc6_Trait>* _148446_t) {
	{
		auto expr = &((*(_148446_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8869e68:;
		if (it != expr_end) {
			jule::I64 _148514_i = it - expr->begin();
			jule::Ptr<_1e5460ec4_Fn> _148521_f = *it;
			{
				_1e54bca8b_checkTraitDeclMethod(_self_, &(_148521_f));
				(*(_148446_t)).get()._field_Mutable=((*(_148446_t)).get()._field_Mutable || _148521_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto expr = &((*(_148446_t)).get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e886be26:;
					if (it != expr_end) {
						jule::I64 _149617_j = it - expr->begin();
						jule::Ptr<_1e5460ec4_Fn> _149620_jf = *it;
						{
							{
								
								if ((_149617_j >= _148514_i)) {
									_case_begin_1e886cba2:;
									{
										goto _iter_end_1e886be26;
									}
								}
								else if ((_148521_f.get()._field_Ident == _149620_jf.get()._field_Ident)) {
									_case_begin_1e886cc29:;
									{
										_1e54aee57_pushErr(_self_.ptr(), _148521_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_148521_f.get()._field_Ident, &__jule_any_type5)}));
										_1e54b0276_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1e886be26;
									}
								}
								_match_end_1e886ca92:;
							};
						}
						_iter_next_1e886be26:;
						++it;
						_149617_j++;
						goto _iter_begin_1e886be26;
					}
					_iter_end_1e886be26:;
				};
			}
			_iter_next_1e8869e68:;
			++it;
			_148514_i++;
			goto _iter_begin_1e8869e68;
		}
		_iter_end_1e8869e68:;
	};
}



inline void _1e54bd086_checkTraitDecl(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5472dc6_Trait>* _151539_t) {
	if (_20d157d3a_IsIgnoreIdent((*(_151539_t)).get()._field_Ident)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_151539_t)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1e54b0a7e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_151539_t)))), (*(_151539_t)).get()._field_Ident, false)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_151539_t)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_151539_t)).get()._field_Ident, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1e54bcd11_checkTraitDeclMethods(_self_, _151539_t);
}



inline jule::Bool _1e54bd2ea_checkTraitDecls(jule::Ptr<_1e54ac295_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8871a30:;
		if (it != expr_end) {
			jule::Ptr<_1e5472dc6_Trait> _152821_t = *it;
			{
				_1e54bd086_checkTraitDecl(_self_, &(_152821_t));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e8871a30:;
			++it;
			goto _iter_begin_1e8871a30;
		}
		_iter_end_1e8871a30:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e54bd6a2_checkTraitImplMethods(_1e54ac295_Sema* _self_, jule::Ptr<_1e5472dc6_Trait>* _153845_base, jule::Ptr<_1e547aa7c_Impl>* _153860_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_153860_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88734d2:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> *_154016_f = it;
			{
				if ((_1e5473c51_FindMethod((*(_153845_base)).ptr(), (*(_154016_f)).get()._field_Ident) == nullptr)) {
					_1e54aee57_pushErr(_self_, (*(_154016_f)).get()._field_Token, jule::Str("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*(_153845_base)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_154016_f)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1e88734d2:;
			++it;
			goto _iter_begin_1e88734d2;
		}
		_iter_end_1e88734d2:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e54bda59_implToStruct(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e4790018_Struct>* _154937_dest, jule::Ptr<_1e547aa7c_Impl>* _154957_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_154957_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8875726:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> _155321_f = *it;
			{
				if (((_1e4754450_FindMethod((*(_154937_dest)).ptr(), _155321_f.get()._field_Ident, _155321_f.get()._field_Statically) != nullptr) || (_1e4755c7b_FindField((*(_154937_dest)).ptr(), _155321_f.get()._field_Ident) != nullptr))) {
					_1e54aee57_pushErr(_self_.ptr(), _155321_f.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_154937_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_155321_f.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1e8875726;
				};
				if ((((*(_154937_dest)).get()._field_Generics.len() > 0LL) && (_155321_f.get()._field_Generics.len() > 0LL))) {
					{
						auto expr = &(_155321_f.get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e8877c34:;
						if (it != expr_end) {
							jule::Ptr<_1e4780b1e_GenericDecl> _156124_fg = *it;
							{
								{
									auto expr = &((*(_154937_dest)).get()._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1e887851a:;
									if (it != expr_end) {
										jule::Ptr<_1e4780b1e_GenericDecl> _156228_dg = *it;
										{
											if ((_156124_fg.get()._field_Ident == _156228_dg.get()._field_Ident)) {
												_1e54aee57_pushErr(_self_.ptr(), _156124_fg.get()._field_Token, jule::Str("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1e887851a:;
										++it;
										goto _iter_begin_1e887851a;
									}
									_iter_end_1e887851a:;
								};
							}
							_iter_next_1e8877c34:;
							++it;
							goto _iter_begin_1e8877c34;
						}
						_iter_end_1e8877c34:;
					};
				};
				_1e54b0d9d_checkDirectives(_self_, &(_155321_f.get()._field_Directives), jule::Any(_155321_f, &__jule_any_type65));
				_155321_f.get()._field_sema=_self_;
				_155321_f.get()._field_Owner=(*(_154937_dest));
				(*(_154937_dest)).get()._field_Methods = jule::alloc_for_append((*(_154937_dest)).get()._field_Methods,1);(*(_154937_dest)).get()._field_Methods.__push(_155321_f);;
			}
			_iter_next_1e8875726:;
			++it;
			goto _iter_begin_1e8875726;
		}
		_iter_end_1e8875726:;
	};
	{
		auto expr = &((*(_154957_ipl)).get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e887ac8c:;
		if (it != expr_end) {
			jule::Ptr<_1e54ca291_Var> _157821_v = *it;
			{
				;
				if (((_1e4754450_FindMethod((*(_154937_dest)).ptr(), _157821_v.get()._field_Ident, true) != nullptr) || (_1e47538a0_FindStatic((*(_154937_dest)).ptr(), _157821_v.get()._field_Ident) != nullptr))) {
					_1e54aee57_pushErr(_self_.ptr(), _157821_v.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_154937_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_157821_v.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1e887ac8c;
				};
				(*(_154937_dest)).get()._field_Statics = jule::alloc_for_append((*(_154937_dest)).get()._field_Statics,1);(*(_154937_dest)).get()._field_Statics.__push(_157821_v);;
			}
			_iter_next_1e887ac8c:;
			++it;
			goto _iter_begin_1e887ac8c;
		}
		_iter_end_1e887ac8c:;
	};
	return __jule_func_result;;
}



inline void _1e54bdcce_implTrait(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e547aa7c_Impl>* _159134_decl) {
	jule::Ptr<_1e554dc82_TypeKind> _159217_base_t = _1e54b5c2c_selectType(_self_, &((*(_159134_decl)).get()._field_Base));;
	if ((_159217_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1e5472dc6_Trait> _159617_base = _1e55527d0_Trait(_159217_base_t.ptr());;
	if ((_159617_base == nullptr)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_159134_decl)).get()._field_Base.get()._field_Token, jule::Str("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_159217_base_t.ptr()), &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e554dc82_TypeKind> _160317_destT = _1e54b5c2c_selectType(_self_, &((*(_159134_decl)).get()._field_Dest));;
	if ((_160317_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1e47903e2_StructIns> _160717_destS = _1e555256b_Struct(_160317_destT.ptr());;
	if ((_160717_destS == nullptr)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_159134_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_160317_destT.ptr()), &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e4790018_Struct> _161417_dest = _160717_destS.get()._field_Decl;;
	if ((_20d15b327_Dir(_161417_dest.get()._field_Token.get()._field_File.ptr()) != _20d15b327_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_159134_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_159617_base.get()._field_Implemented = jule::alloc_for_append(_159617_base.get()._field_Implemented,1);_159617_base.get()._field_Implemented.__push(_161417_dest);;
	_161417_dest.get()._field_Implements = jule::alloc_for_append(_161417_dest.get()._field_Implements,1);_161417_dest.get()._field_Implements.__push(_159617_base);;
	if (((*(_159134_decl)).get()._field_Statics.len() > 0LL)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_159134_decl)).get()._field_Statics[0LL].get()._field_Token, jule::Str("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1e54bd6a2_checkTraitImplMethods(_self_.ptr(), &(_159617_base), _159134_decl)))) {
			_case_begin_1e8884d62:;
			{
				return;;
			}
		}
		else if ((!(_1e54bda59_implToStruct(_self_, &(_161417_dest), _159134_decl)))) {
			_case_begin_1e8884dd9:;
			{
				return;;
			}
		}
		_match_end_1e88832a0:;
	};
}



inline void _1e54be054_implStruct(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e547aa7c_Impl>* _163635_decl) {
	jule::Ptr<_1e554dc82_TypeKind> _163717_destT = _1e54b5c2c_selectType(_self_, &((*(_163635_decl)).get()._field_Dest));;
	if ((_163717_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1e47903e2_StructIns> _164117_destS = _1e555256b_Struct(_163717_destT.ptr());;
	if ((_164117_destS == nullptr)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_163635_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_163717_destT.ptr()), &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e4790018_Struct> _164817_dest = _164117_destS.get()._field_Decl;;
	if ((_20d15b327_Dir(_164817_dest.get()._field_Token.get()._field_File.ptr()) != _20d15b327_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_163635_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1e54bda59_implToStruct(_self_, &(_164817_dest), _163635_decl)))) {
			_case_begin_1e888954d:;
			{
				return;;
			}
		}
		_match_end_1e8886da8:;
	};
}



inline void _1e54be2c9_implImpl(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e547aa7c_Impl>* _166133_decl) {
	{
		
		if (_1e547ae78_IsTraitImpl((*(_166133_decl)).ptr())) {
			_case_begin_1e888a142:;
			{
				_1e54bdcce_implTrait(_self_, _166133_decl);
			}
		}
		else if (_1e547b1dc_IsStructImpl((*(_166133_decl)).ptr())) {
			_case_begin_1e888a1b9:;
			{
				_1e54be054_implStruct(_self_, _166133_decl);
			}
		}
		_match_end_1e888a032:;
	};
}



inline void _1e54be5e8_checkVarDecl(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e54ca291_Var>* _167237_decl, jule::Trait<_1e5569c04_Lookup> _167253_l) {
	if (_20d157d3a_IsIgnoreIdent((*(_167237_decl)).get()._field_Ident)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_167237_decl)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1e54ca8bd_IsTypeInferred((*(_167237_decl)).ptr())) {
		if ((!(_1e54ca659_IsInitialized((*(_167237_decl)).ptr())))) {
			_1e54aee57_pushErr(_self_.ptr(), (*(_167237_decl)).get()._field_Token, jule::Str("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1e54b51b0_checkType(_self_, &((*(_167237_decl)).get()._field_Kind), _167253_l);
	};
	if (((*(_167237_decl)).get()._field_Constant && (*(_167237_decl)).get()._field_Reference)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_167237_decl)).get()._field_Token, jule::Str("references cannot be constant", 29), jule::Slice<jule::Any>());
	};
	if ((!(_1e54ca659_IsInitialized((*(_167237_decl)).ptr())))) {
		if ((*(_167237_decl)).get()._field_Constant) {
			_1e54aee57_pushErr(_self_.ptr(), (*(_167237_decl)).get()._field_Token, jule::Str("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*(_167237_decl)).get()._field_Statically) {
			_1e54aee57_pushErr(_self_.ptr(), (*(_167237_decl)).get()._field_Token, jule::Str("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*(_167237_decl)).get()._field_Reference) {
			_1e54aee57_pushErr(_self_.ptr(), (*(_167237_decl)).get()._field_Token, jule::Str("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1e54be86d_checkGlobalVarDecl(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e54ca291_Var>* _170443_decl) {
	if (_1e54b0a7e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_170443_decl)))), (*(_170443_decl)).get()._field_Ident, (*(_170443_decl)).get()._field_CppLinked)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_170443_decl)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_170443_decl)).get()._field_Ident, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_170443_decl)).get()._field_CppLinked && (*(_170443_decl)).get()._field_Constant)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_170443_decl)).get()._field_Token, jule::Str("cpp linked variables cannot be constant", 39), jule::Slice<jule::Any>());
	};
	if ((((!((*(_170443_decl)).get()._field_CppLinked)) && (!((*(_170443_decl)).get()._field_Constant))) && (!((*(_170443_decl)).get()._field_Statically)))) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_170443_decl)).get()._field_Token, jule::Str("global variables must be static", 31), jule::Slice<jule::Any>());
		_1e54b0276_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1e54b0d9d_checkDirectives(_self_, &((*(_170443_decl)).get()._field_Directives), jule::Any((*(_170443_decl)), &__jule_any_type8));
	_1e54be5e8_checkVarDecl(_self_, _170443_decl, jule::Trait<_1e5569c04_Lookup>(_self_, 3));
}



inline jule::Bool _1e54bead2_checkGlobalDecls(jule::Ptr<_1e54ac295_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e889469b:;
		if (it != expr_end) {
			jule::Ptr<_1e54ca291_Var> _172221_decl = *it;
			{
				_1e54be86d_checkGlobalVarDecl(_self_, &(_172221_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e889469b:;
			++it;
			goto _iter_begin_1e889469b;
		}
		_iter_end_1e889469b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e54bee89_checkStructTraitImpl(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e4790018_Struct>* _173245_strct, jule::Ptr<_1e5472dc6_Trait>* _173266_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_173266_trt)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8895dea:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> _173321_tf = *it;
			{
				jule::Bool _173421_exist = false;;
				jule::Ptr<_1e5460ec4_Fn> _173521_sf = _1e4754450_FindMethod((*(_173245_strct)).ptr(), _173321_tf.get()._field_Ident, _173321_tf.get()._field_Statically);;
				jule::Ptr<_1e5463b75_FnIns> _173617_tfK = _1e54b7e1b_getTraitCheckFnKind(_self_, &(_173321_tf));;
				if ((_173521_sf != nullptr)) {
					jule::Ptr<_1e5463b75_FnIns> _173825_sfK = _1e54b7e1b_getTraitCheckFnKind(_self_, &(_173521_sf));;
					_173421_exist=(((_173617_tfK.get()._field_Decl.get()._field_Public == _173825_sfK.get()._field_Decl.get()._field_Public) && (_173617_tfK.get()._field_Decl.get()._field_Ident == _173825_sfK.get()._field_Decl.get()._field_Ident)) && _1e5464a33_equalTrait(_173617_tfK, &(_173825_sfK)));
				};
				if (_173421_exist) {
					jule::Ptr<_1e474057e_Directive> _174421_d = _1e5548430_findDirective(&(_173521_sf.get()._field_Directives), jule::Str("deprecated", 10));;
					if ((_174421_d != nullptr)) {
						_1e54aee57_pushErr(_self_.ptr(), _174421_d.get()._field_Tag, jule::Str("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					jule::Str _175125_s = _1e546588b_GetKindStr(_173617_tfK.ptr(), true);;
					if (_173321_tf.get()._field_Public) {
						(_175125_s).buffer.insert(0, (jule::Str()));;
					};
					_1e54aee57_pushErr(_self_.ptr(), (*(_173245_strct)).get()._field_Token, jule::Str("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_173266_trt)).get()._field_Ident, &__jule_any_type5),jule::Any(_175125_s, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1e8895dea:;
			++it;
			goto _iter_begin_1e8895dea;
		}
		_iter_end_1e8895dea:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e54c0297_checkStructImpls(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e4790018_Struct>* _176241_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_176241_s)).get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e889c64e:;
		if (it != expr_end) {
			jule::Ptr<_1e5472dc6_Trait> _176421_trt = *it;
			{
				__jule_func_result=(_1e54bee89_checkStructTraitImpl(_self_, _176241_s, &(_176421_trt)) && __jule_func_result);
			}
			_iter_next_1e889c64e:;
			++it;
			goto _iter_begin_1e889c64e;
		}
		_iter_end_1e889c64e:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e54c05a5_checkStructFields(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e4790018_Struct>* _177042_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_177042_st)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e889d9b3:;
		if (it != expr_end) {
			jule::Ptr<_1e4764075_Field> _177221_f = *it;
			{
				_177221_f.get()._field_Owner=(*(_177042_st));
				{
					auto expr = &((*(_177042_st)).get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e889e50d:;
					if (it != expr_end) {
						jule::Ptr<_1e4764075_Field> _177420_cf = *it;
						{
							if ((_177221_f == _177420_cf)) {
								goto _iter_end_1e889e50d;
							} else if ((_177221_f.get()._field_Ident == _177420_cf.get()._field_Ident)) {
								_1e54aee57_pushErr(_self_.ptr(), _177221_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_177221_f.get()._field_Ident, &__jule_any_type5)}));
								_1e54b0276_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1e889e50d:;
						++it;
						goto _iter_begin_1e889e50d;
					}
					_iter_end_1e889e50d:;
				};
			}
			_iter_next_1e889d9b3:;
			++it;
			goto _iter_begin_1e889d9b3;
		}
		_iter_end_1e889d9b3:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1e54c082a_checkStructDecl(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e4790018_Struct>* _178740_s) {
	if (_20d157d3a_IsIgnoreIdent((*(_178740_s)).get()._field_Ident)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_178740_s)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1e54b0a7e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_178740_s)))), (*(_178740_s)).get()._field_Ident, (*(_178740_s)).get()._field_CppLinked)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_178740_s)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_178740_s)).get()._field_Ident, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1e54b0d9d_checkDirectives(_self_, &((*(_178740_s)).get()._field_Directives), jule::Any((*(_178740_s)), &__jule_any_type66));
	{
		
		if ((!(_1e54bbe75_checkDeclGenerics(_self_.ptr(), &((*(_178740_s)).get()._field_Generics))))) {
			_case_begin_1e88a1378:;
		}
		else if ((!(_1e54c05a5_checkStructFields(_self_, _178740_s)))) {
			_case_begin_1e88a319e:;
		}
		else if ((!(_1e54c0297_checkStructImpls(_self_, _178740_s)))) {
			_case_begin_1e88a3226:;
		}
		_match_end_1e88a308e:;
	};
}



inline jule::Bool _1e54c0a8e_checkStructDecls(jule::Ptr<_1e54ac295_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88a4546:;
		if (it != expr_end) {
			jule::Ptr<_1e4790018_Struct> _180621_s = *it;
			{
				_1e54c082a_checkStructDecl(_self_, &(_180621_s));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e88a4546:;
			++it;
			goto _iter_begin_1e88a4546;
		}
		_iter_end_1e88a4546:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1e54c0d14_checkFnDecl(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5460ec4_Fn>* _181636_f) {
	if (_20d157d3a_IsIgnoreIdent((*(_181636_f)).get()._field_Ident)) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_181636_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1e54b0d9d_checkDirectives(_self_, &((*(_181636_f)).get()._field_Directives), jule::Any((*(_181636_f)), &__jule_any_type65));
	(*(_181636_f)).get()._field_sema=_self_;
	_1e54bc816_checkFnDeclPrototype(_self_, _181636_f);
	if (_1e54b0a7e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_181636_f)))), (*(_181636_f)).get()._field_Ident, (*(_181636_f)).get()._field_CppLinked)) {
		if (((*(_181636_f)).get()._field_Ident == jule::Str("init", 4))) {
			jule::Ptr<_1e5460ec4_Fn> _182821_init = _1e54ada8d_FindFn(_self_.ptr(), jule::Str("init", 4), false);;
			if ((_182821_init != nullptr)) {
				return;;
			};
		};
		_1e54aee57_pushErr(_self_.ptr(), (*(_181636_f)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_181636_f)).get()._field_Ident, &__jule_any_type5)}));
		_1e54b0276_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e54c1078_checkFnDecls(jule::Ptr<_1e54ac295_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88a924e:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> _184021_f = *it;
			{
				_1e54c0d14_checkFnDecl(_self_, &(_184021_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e88a924e:;
			++it;
			goto _iter_begin_1e88a924e;
		}
		_iter_end_1e88a924e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1e54c1441_pushCycleError(_1e54ac295_Sema* _self_, jule::Ptr<_1e4790018_Struct>* _185030_st1, jule::Ptr<_1e4790018_Struct>* _185045_st2, jule::Str* _185064_message) {
	;
	jule::Str _185213_refers_to = _24305e8ee_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_185030_st1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_185045_st2)).get()._field_Ident, &__jule_any_type5)}));;
	((*(_185064_message))).buffer.insert(0, (((_242eaebe5_Repeat(jule::Str(" ", 1), 4LL) + _185213_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1e54c1892_checkCrossCycle(_1e54ac295_Sema* _self_, jule::Ptr<_1e4790018_Struct>* _185631_st1, jule::Ptr<_1e4790018_Struct>* _185646_st2, jule::Str* _185665_message) {
	{
		auto expr = &((*(_185646_st2)).get()._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88ac483:;
		if (it != expr_end) {
			jule::Ptr<_1e4790018_Struct> *_185716_u = it;
			{
				if (((*(_185716_u)) == (*(_185631_st1)))) {
					_1e54c1441_pushCycleError(_self_, _185646_st2, _185716_u, _185665_message);
					return false;;
				};
				if ((!(_1e54c1892_checkCrossCycle(_self_, _185631_st1, _185716_u, _185665_message)))) {
					_1e54c1441_pushCycleError(_self_, _185646_st2, _185716_u, _185665_message);
					return false;;
				};
			}
			_iter_next_1e88ac483:;
			++it;
			goto _iter_begin_1e88ac483;
		}
		_iter_end_1e88ac483:;
	};
	return true;;
}



inline jule::Bool _1e54c1d15_checkStructDeriveIllegalCycles(_1e54ac295_Sema* _self_, jule::Str _187149_derive, jule::Ptr<_1e4790018_Struct>* _187163_st1, jule::Ptr<_1e554dc82_TypeKind>* _187182_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e4790018_Struct> _187217_st2 = _1e556731c_getStructFromKind((*(_187182_k)));;
	if ((_187217_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_187163_st1)) == _187217_st2)) {
		_1e54aee57_pushErr(_self_, (*(_187163_st1)).get()._field_Token, jule::Str("illegal cycle for derive @, struct @ refers to itself", 53), jule::Slice<jule::Any>::make({jule::Any(_187149_derive, &__jule_any_type5),jule::Any((*(_187163_st1)).get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _188417_message = jule::Str();;
	if ((!(_1e54c1892_checkCrossCycle(_self_, _187163_st1, &(_187217_st2), &(_188417_message))))) {
		jule::Str _188621_errMsg = _188417_message;;
		_188417_message=jule::Str();
		_1e54c1441_pushCycleError(_self_, _187163_st1, &(_187217_st2), &(_188417_message));
		_188621_errMsg+=_188417_message;
		_1e54aee57_pushErr(_self_, (*(_187163_st1)).get()._field_Token, jule::Str("illegal cross cycle for derive @;\n@", 35), jule::Slice<jule::Any>::make({jule::Any(_187149_derive, &__jule_any_type5),jule::Any(_188621_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e54c2156_checkStructInsDeriveClone(_1e54ac295_Sema* _self_, jule::Ptr<_1e47903e2_StructIns> _189648_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_1e4759048_IsDerives(_189648_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto expr = &(_189648_st.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88b2c6e:;
		if (it != expr_end) {
			jule::Ptr<_1e4790205_FieldIns> _190021_f = *it;
			{
				if ((_190021_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1e88b2c6e;
				};
				if ((!(_1e5550b41_SupportsCloning(_190021_f.get()._field_Kind.ptr())))) {
					_1e54aee57_pushErr(_self_, _189648_st.get()._field_Decl.get()._field_Token, jule::Str("type @ is not compatible to derive @", 36), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_190021_f.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type75)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1e54c1d15_checkStructDeriveIllegalCycles(_self_, jule::Str("Clone", 5), &(_189648_st.get()._field_Decl), &(_190021_f.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e88b2c6e:;
			++it;
			goto _iter_begin_1e88b2c6e;
		}
		_iter_end_1e88b2c6e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1e54c2343_checkPackageDecls(jule::Ptr<_1e54ac295_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88b57ee:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _191821_f = *it;
			{
				_1e54aea8e_setCurrentFile(_self_.ptr(), _191821_f);
				if ((!(_1e54bbb67_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_1e54ba924_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1e88b57ee:;
			++it;
			goto _iter_begin_1e88b57ee;
		}
		_iter_end_1e88b57ee:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88b5aa7:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _192821_f = *it;
			{
				_1e54aea8e_setCurrentFile(_self_.ptr(), _192821_f);
				if ((!(_1e54bd2ea_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1e88b5aa7:;
			++it;
			goto _iter_begin_1e88b5aa7;
		}
		_iter_end_1e88b5aa7:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88b6a64:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _193521_f = *it;
			{
				_1e54aea8e_setCurrentFile(_self_.ptr(), _193521_f);
				if ((!(_1e54bead2_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1e88b6a64:;
			++it;
			goto _iter_begin_1e88b6a64;
		}
		_iter_end_1e88b6a64:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88b83a1:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _194221_f = *it;
			{
				_1e54aea8e_setCurrentFile(_self_.ptr(), _194221_f);
				{
					
					if ((!(_1e54c1078_checkFnDecls(_self_)))) {
						_case_begin_1e88b9050:;
					}
					else if ((!(_1e54c0a8e_checkStructDecls(_self_)))) {
						_case_begin_1e88b90b6:;
					}
					else {
						_case_begin_1e88b8ed9:;
						{
							goto _iter_next_1e88b83a1;
						}
					}
					_match_end_1e88b8e73:;
				};
				return;;
			}
			_iter_next_1e88b83a1:;
			++it;
			goto _iter_begin_1e88b83a1;
		}
		_iter_end_1e88b83a1:;
	};
}



inline void _1e54c2684_checkDataForTypeInference(_1e54ac295_Sema* _self_, jule::Ptr<_1e5522d00_Data>* _195445_d, jule::Ptr<_20d155596_Token>* _195456_err_token) {
	{
		
		if (_1e55231da_IsNil((*(_195445_d)).ptr())) {
			_case_begin_1e88b9eda:;
			{
				_1e54aee57_pushErr(_self_, (*(_195456_err_token)), jule::Str("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1e552344e_IsVoid((*(_195445_d)).ptr())) {
			_case_begin_1e88ba062:;
			{
				_1e54aee57_pushErr(_self_, (*(_195456_err_token)), jule::Str("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*(_195445_d)).get()._field_Kind.get()._field_Variadic) {
			_case_begin_1e88ba0d9:;
			{
				_1e54aee57_pushErr(_self_, (*(_195456_err_token)), jule::Str("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e88b9db9:;
	};
}



inline void _1e54c291a_checkVar(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e54ca291_Var>* _196533_v) {
	if ((*(_196533_v)).get()._field_CppLinked) {
		return;;
	};
	if (_1e54ca8bd_IsTypeInferred((*(_196533_v)).ptr())) {
		(*(_196533_v)).get()._field_Kind=jule::new_ptr<_1e5553160_TypeSymbol>(_1e5553160_TypeSymbol{._field_Kind=(*(_196533_v)).get()._field_Value.get()._field_Data.get()._field_Kind});
		_1e54c2684_checkDataForTypeInference(_self_.ptr(), &((*(_196533_v)).get()._field_Value.get()._field_Data), &((*(_196533_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		_1e54b9c53_checkValidityForInitExpr(_self_, (*(_196533_v)).get()._field_Mutable, (*(_196533_v)).get()._field_Reference, &((*(_196533_v)).get()._field_Kind.get()._field_Kind), &((*(_196533_v)).get()._field_Value.get()._field_Data), &((*(_196533_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
	} else {
		jule::Ptr<_1e5559d6a_Arr> _198221_arr = _1e5551d2e_Arr((*(_196533_v)).get()._field_Kind.get()._field_Kind.ptr());;
		if ((_198221_arr != nullptr)) {
			if (_198221_arr.get()._field_Auto) {
				jule::Ptr<_1e5559d6a_Arr> _198525_dataArr = _1e5551d2e_Arr((*(_196533_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_198525_dataArr != nullptr)) {
					_198221_arr.get()._field_N=_198525_dataArr.get()._field_N;
				};
			};
		};
		if (_1e54b6d3d_checkAssignType(_self_, (*(_196533_v)).get()._field_Reference, &((*(_196533_v)).get()._field_Kind.get()._field_Kind), &((*(_196533_v)).get()._field_Value.get()._field_Data), (*(_196533_v)).get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1e54b9c53_checkValidityForInitExpr(_self_, (*(_196533_v)).get()._field_Mutable, (*(_196533_v)).get()._field_Reference, &((*(_196533_v)).get()._field_Kind.get()._field_Kind), &((*(_196533_v)).get()._field_Value.get()._field_Data), &((*(_196533_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		};
	};
	if (((*(_196533_v)).get()._field_Reference && (!(_1e556667e_isValidForRef(&((*(_196533_v)).get()._field_Kind.get()._field_Kind)))))) {
		_1e54aee57_pushErr(_self_.ptr(), (*(_196533_v)).get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_196533_v)).get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
	if ((*(_196533_v)).get()._field_Constant) {
		if ((!(_1e55236b3_IsConst((*(_196533_v)).get()._field_Value.get()._field_Data.ptr())))) {
			_1e54aee57_pushErr(_self_.ptr(), (*(_196533_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*(_196533_v)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1e5552ca8_Tup((*(_196533_v)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		(*(_196533_v)).get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1e54c2c39_checkTypeVar(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e54ca291_Var>* _202037_decl, jule::Trait<_1e5569c04_Lookup> _202053_l) {
	if (((*(_202037_decl)).get()._field_CppLinked || (!(_1e54ca659_IsInitialized((*(_202037_decl)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1e552486d_Eval> _202517_eval = nullptr;;
	if (((*(_202037_decl)).get()._field_Kind != nullptr)) {
		_202517_eval=_1e54b617d_evalpd(_self_, _202053_l, (*(_202037_decl)).get()._field_Kind.get()._field_Kind, (*(_202037_decl)));
	} else {
		_202517_eval=_1e54b617d_evalpd(_self_, _202053_l, nullptr, (*(_202037_decl)));
	};
	_202517_eval.get()._field_immutable=(!((*(_202037_decl)).get()._field_Mutable));
	(*(_202037_decl)).get()._field_Value.get()._field_Data=_1e5540290_evalExpr(_202517_eval, (*(_202037_decl)).get()._field_Value.get()._field_Expr);
	if (((*(_202037_decl)).get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1e54c291a_checkVar(_self_, _202037_decl);
}



inline void _1e54c2e15_checkGlobalTypes(jule::Ptr<_1e54ac295_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88c8cc9:;
		if (it != expr_end) {
			jule::Ptr<_1e54ca291_Var> _204121_decl = *it;
			{
				if (((_1e54ca659_IsInitialized(_204121_decl.ptr()) && (_204121_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1e54ca8bd_IsTypeInferred(_204121_decl.ptr()) && (_204121_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1e54c2c39_checkTypeVar(_self_, &(_204121_decl), jule::Trait<_1e5569c04_Lookup>(_self_, 3));
				};
			}
			_iter_next_1e88c8cc9:;
			++it;
			goto _iter_begin_1e88c8cc9;
		}
		_iter_end_1e88c8cc9:;
	};
}



inline jule::Ptr<_1e5463b75_FnIns> _1e54c32bc_readyToCheckFn(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e47903e2_StructIns>* _205239_s, jule::Ptr<_1e5460ec4_Fn>* _205259_f) {
	jule::Ptr<_1e5463b75_FnIns> _205317_ins = _1e5462624_instance((*(_205259_f)));;
	if (((*(_205259_f)).get()._field_Instances.len() != 0LL)) {
		return _205317_ins;;
	};
	_205317_ins.get()._field_Owner=(*(_205239_s));
	_1e54628ee_appendInstance((*(_205259_f)).ptr(), &(_205317_ins));
	_205317_ins.get()._field_reloaded=true;
	if (_1e54b9208_reloadFnInsTypes(_self_, _205317_ins)) {
		return _205317_ins;;
	};
	return nullptr;;
}



inline void _1e54c35db_checkTypeMethod(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e47903e2_StructIns>* _206640_s, jule::Ptr<_1e5460ec4_Fn>* _206660_f) {
	if (((*(_206660_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1e5463b75_FnIns> _207117_ins = (*(_206660_f)).get()._field_Instances[0LL];;
	if ((_207117_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1e54c5cb4_checkFnIns(_self_, &(_207117_ins));
}



inline jule::Ptr<_1e5463b75_FnIns> _1e54c3a3c_checkStructInsOp(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e47903e2_StructIns>* _207941_s, jule::Ptr<_1e5460ec4_Fn>* _207961_f, jule::Fn<jule::Bool(jule::Ptr<_1e5460ec4_Fn>)> _207969_p) {
	if (((((*(_207961_f)) == nullptr) || ((*(_207961_f)).get()._field_Generics.len() > 0LL)) || (!(_207969_p((*(_207961_f))))))) {
		return nullptr;;
	};
	return (*(_207961_f)).get()._field_Instances[0LL];;
}



inline jule::Bool _1e54c3de4_checkStructEnv(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e47903e2_StructIns>* _208939_s, jule::Ptr<_20d155596_Token> _208958_errorToken) {
	jule::Bool __jule_func_result = false;
	_1e555c5ed_typeChecker _209017_tc = _1e555c5ed_typeChecker{._field_s=(*(_208939_s)).get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_1e5569c04_Lookup>((*(_208939_s)).get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_1e5569c04_Lookup>((*(_208939_s)).get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1e555b71d_referencer>(_1e555b71d_referencer{._field_ident=(*(_208939_s)).get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any((*(_208939_s)).get()._field_Decl, &__jule_any_type66), }), ._field_refers=(*(_208939_s)).get()._field_Refers, };;
	if (((*(_208939_s)).get()._field_Generics.len() > 0LL)) {
		_209017_tc._field_useGenerics=jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>::alloc(0LL, (*(_208939_s)).get()._field_Generics.len());
		{
			auto expr = &((*(_208939_s)).get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e88d291a:;
			if (it != expr_end) {
				jule::I64 _210318_i = it - expr->begin();
				jule::Ptr<_1e554c555_InsGeneric> _210325_g = *it;
				{
					jule::Ptr<_1e4780b1e_GenericDecl> _210425_decl = (*(_208939_s)).get()._field_Decl.get()._field_Generics[_210318_i];;
					_209017_tc._field_useGenerics = jule::alloc_for_append(_209017_tc._field_useGenerics,1);_209017_tc._field_useGenerics.__push(jule::new_ptr<_1e554d08e_TypeAlias>(_1e554d08e_TypeAlias{._field_Token=_210425_decl.get()._field_Token, ._field_Ident=_210425_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1e5553160_TypeSymbol>(_1e5553160_TypeSymbol{._field_Kind=_210325_g.get()._field_Kind}), }));;
				}
				_iter_next_1e88d291a:;
				++it;
				_210318_i++;
				goto _iter_begin_1e88d291a;
			}
			_iter_end_1e88d291a:;
		};
	};
	jule::Ptr<_1e551cec6_SymbolTable> _211317_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1e54aea8e_setCurrentFile(_self_.ptr(), _211317_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != (*(_208939_s)).get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1e551cec6_SymbolTable> _211721_file = _1e54ab89e_findFile(&(_self_.get()._field_files), &((*(_208939_s)).get()._field_Decl.get()._field_Token.get()._field_File));;
		if ((_211721_file != nullptr)) {
			_1e54aea8e_setCurrentFile(_self_.ptr(), _211721_file);
		};
	};
	if (((*(_208939_s)).get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1e5478b46_constraintChecker> _212421_cc = _1e54b4d08_constraintChecker(_self_);;
		_212421_cc.get()._field_et=_208958_errorToken;
		_212421_cc.get()._field_si=(*(_208939_s));
		_212421_cc.get()._field_genericsA=_209017_tc._field_useGenerics;
		_212421_cc.get()._field_uniq=true;
		if ((!(_1e5479a26_check(_212421_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*(_208939_s)).get()._field_Statics.len() > 0LL)) {
		jule::I64 _213721_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_209017_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto expr = &((*(_208939_s)).get()._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e88d99dd:;
			if (it != expr_end) {
				jule::Ptr<_1e54ca291_Var> _213925_v = *it;
				{
					_1e54be5e8_checkVarDecl(_self_, &(_213925_v), jule::Trait<_1e5569c04_Lookup>(_self_, 3));
					_1e54c2c39_checkTypeVar(_self_, &(_213925_v), jule::Trait<_1e5569c04_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _213721_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1e88d99dd:;
				++it;
				goto _iter_begin_1e88d99dd;
			}
			_iter_end_1e88d99dd:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_209017_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1e552486d_Eval> _215017_eval = _1e54b6843_eval(_self_, jule::Trait<_1e5569c04_Lookup>(_self_, 3));;
	(*(_208939_s)).get()._field_Comparable=true;
	{
		auto expr = &((*(_208939_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88dc88c:;
		if (it != expr_end) {
			jule::Ptr<_1e4790205_FieldIns> _215221_f = *it;
			{
				jule::Ptr<_1e554dc82_TypeKind> _215321_kind = _1e5564869_checkDecl(&_209017_tc, &(_215221_f.get()._field_Decl.get()._field_Kind.get()._field_Decl));;
				__jule_func_result=((_215321_kind != nullptr) && __jule_func_result);
				if ((_215321_kind == nullptr)) {
					if (((_self_ != (*(_208939_s)).get()._field_Decl.get()._field_sema) && ((*(_208939_s)).get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,(*(_208939_s)).get()._field_Decl.get()._field_sema.get()._field_errors);
						(*(_208939_s)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1e88dc88c;
				};
				_215221_f.get()._field_Kind=_215321_kind;
				(*(_208939_s)).get()._field_Mutable=((*(_208939_s)).get()._field_Mutable || ((!(_215221_f.get()._field_Decl.get()._field_Mutable)) && _1e5550404_Mutable(_215221_f.get()._field_Kind.ptr())));
				(*(_208939_s)).get()._field_Comparable=((*(_208939_s)).get()._field_Comparable && _1e5550190_Comparable(_215221_f.get()._field_Kind.ptr()));
				_1e54c2156_checkStructInsDeriveClone(_self_.ptr(), (*(_208939_s)));
				if ((_215221_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1e88dc88c;
				};
				_215017_eval.get()._field_prefix=_215221_f.get()._field_Kind;
				_215017_eval.get()._field_field=_215221_f;
				_215221_f.get()._field_Default=_1e5540290_evalExpr(_215017_eval, _215221_f.get()._field_Decl.get()._field_Default);
				if ((_215221_f.get()._field_Default == nullptr)) {
					goto _iter_next_1e88dc88c;
				};
				;
				_1e54b6d3d_checkAssignType(_self_, false, &(_215221_f.get()._field_Kind), &(_215221_f.get()._field_Default), _215221_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1e88dc88c:;
			++it;
			goto _iter_begin_1e88dc88c;
		}
		_iter_end_1e88dc88c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e54c429b_precheckStructIns(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e47903e2_StructIns>* _218742_s, jule::Ptr<_20d155596_Token> _218761_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1e54c3de4_checkStructEnv(_self_, _218742_s, _218761_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_218742_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88e4784:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> _219221_f = *it;
			{
				if ((_219221_f.get()._field_Generics.len() == 0LL)) {
					if ((_1e54c32bc_readyToCheckFn(_self_, _218742_s, &(_219221_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1e88e4784:;
			++it;
			goto _iter_begin_1e88e4784;
		}
		_iter_end_1e88e4784:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1e54c4521_checkStructIns(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e47903e2_StructIns>* _220239_s) {
	{
		auto expr = &((*(_220239_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88e60d2:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> _220321_f = *it;
			{
				_1e54c35db_checkTypeMethod(_self_, _220239_s, &(_220321_f));
			}
			_iter_next_1e88e60d2:;
			++it;
			goto _iter_begin_1e88e60d2;
		}
		_iter_end_1e88e60d2:;
	};
}



inline void _1e54c4796_checkTypeStruct(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e4790018_Struct>* _220840_s) {
	if ((*(_220840_s)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_220840_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_220840_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88e7930:;
		if (it != expr_end) {
			jule::Ptr<_1e47903e2_StructIns> _222121_ins = *it;
			{
				_1e54c4521_checkStructIns(_self_, &(_222121_ins));
			}
			_iter_next_1e88e7930:;
			++it;
			goto _iter_begin_1e88e7930;
		}
		_iter_end_1e88e7930:;
	};
}



inline void _1e54c4972_checkStructTypes(jule::Ptr<_1e54ac295_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88e84e1:;
		if (it != expr_end) {
			jule::Ptr<_1e4790018_Struct> _222721_s = *it;
			{
				_1e54c4796_checkTypeStruct(_self_, &(_222721_s));
			}
			_iter_next_1e88e84e1:;
			++it;
			goto _iter_begin_1e88e84e1;
		}
		_iter_end_1e88e84e1:;
	};
}



inline void _1e54c4c19_checkStructInsOperators(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e47903e2_StructIns> _223247_s) {
	{
		auto expr = &(_223247_s.get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e88e9338:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> _223321_m = *it;
			{
				{
					auto &_match_expr{ _223321_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1e88ea092:;
						{
							_223247_s.get()._field_Operators._field_Eq=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54cc040_Eq);
							_223247_s.get()._field_Comparable=(_223247_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1e88ea108:;
						{
							_223247_s.get()._field_Operators._field_Gt=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54cc2d7_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1e88ea16e:;
						{
							_223247_s.get()._field_Operators._field_GtEq=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54cc57e_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1e88ea1e6:;
						{
							_223247_s.get()._field_Operators._field_Lt=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54cc826_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1e88ea26d:;
						{
							_223247_s.get()._field_Operators._field_LtEq=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54ccabd_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1e88ea2e5:;
						{
							_223247_s.get()._field_Operators._field_Shl=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54cd1a6_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1e88ea36c:;
						{
							_223247_s.get()._field_Operators._field_Shr=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54cd44d_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1e88ea3e4:;
						{
							_223247_s.get()._field_Operators._field_Add=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54cd6e5_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1e88ea46b:;
						{
							_223247_s.get()._field_Operators._field_Sub=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54cd98c_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1e88ea4e3:;
						{
							_223247_s.get()._field_Operators._field_Div=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54cdc34_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1e88ea56a:;
						{
							_223247_s.get()._field_Operators._field_Mul=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54cdecb_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1e88ea5e2:;
						{
							_223247_s.get()._field_Operators._field_Mod=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54ce273_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1e88ea669:;
						{
							_223247_s.get()._field_Operators._field_BitAnd=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54ce51a_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1e88ea6e1:;
						{
							_223247_s.get()._field_Operators._field_BitOr=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54ce7b2_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1e88ea768:;
						{
							_223247_s.get()._field_Operators._field_BitXor=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54cea59_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1e88ea7e0:;
						{
							_223247_s.get()._field_Operators._field_Neg=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54d0142_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1e88ea867:;
						{
							_223247_s.get()._field_Operators._field_Pos=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54d03d9_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1e88ea8de:;
						{
							_223247_s.get()._field_Operators._field_BitNot=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54d0681_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1e88ea966:;
						{
							_223247_s.get()._field_Operators._field_AddAssign=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54d0c69_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1e88ea9dd:;
						{
							_223247_s.get()._field_Operators._field_SubAssign=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54d1011_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1e88eaa65:;
						{
							_223247_s.get()._field_Operators._field_DivAssign=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54d12a8_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1e88eaadc:;
						{
							_223247_s.get()._field_Operators._field_MulAssign=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54d1550_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1e88eab64:;
						{
							_223247_s.get()._field_Operators._field_ModAssign=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54d17e7_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1e88eabdb:;
						{
							_223247_s.get()._field_Operators._field_ShlAssign=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54d1a8e_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1e88eac63:;
						{
							_223247_s.get()._field_Operators._field_ShrAssign=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54d1d36_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1e88eacda:;
						{
							_223247_s.get()._field_Operators._field_BitOrAssign=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54d20cd_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1e88ead62:;
						{
							_223247_s.get()._field_Operators._field_BitAndAssign=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54d2375_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1e88eadd9:;
						{
							_223247_s.get()._field_Operators._field_BitXorAssign=_1e54c3a3c_checkStructInsOp(_self_, &(_223247_s), &(_223321_m), static__1e54d261c_BitXorAssign);
						}
					}
					_match_end_1e88e9b74:;
				};
			}
			_iter_next_1e88e9338:;
			++it;
			goto _iter_begin_1e88e9338;
		}
		_iter_end_1e88e9338:;
	};
}



inline void _1e54c4ea0_precheckStructType(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e4790018_Struct>* _229643_s) {
	if ((*(_229643_s)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_229643_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_229643_s)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1e47903e2_StructIns> _230721_ins = _1e475058e_instance((*(_229643_s)));;
		_230721_ins.get()._field_Checked=true;
		_1e47512e8_appendInstance((*(_229643_s)).ptr(), &(_230721_ins));
		_1e54c429b_precheckStructIns(_self_, &(_230721_ins), nullptr);
	};
	_1e54c4c19_checkStructInsOperators(_self_, (*(_229643_s)).get()._field_Instances[0LL]);
}



inline void _1e54c517b_precheckStructTypes(jule::Ptr<_1e54ac295_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e890d407:;
		if (it != expr_end) {
			jule::Ptr<_1e4790018_Struct> _231721_s = *it;
			{
				_1e54c4ea0_precheckStructType(_self_, &(_231721_s));
			}
			_iter_next_1e890d407:;
			++it;
			goto _iter_begin_1e890d407;
		}
		_iter_end_1e890d407:;
	};
}



inline void _1e54c5401_checkRets(_1e54ac295_Sema* _self_, jule::Ptr<_1e5463b75_FnIns>* _232233_f) {
	if (_1e5461436_IsVoid((*(_232233_f)).get()._field_Decl.ptr())) {
		return;;
	};
	_1e54c759b_missingRetChecker _232613_mrc = static__1e54c7964_new();;
	jule::Bool _232713_ok = _1e54c8976_check(&_232613_mrc, (*(_232233_f)).get()._field_Scope);;
	if ((!(_232713_ok))) {
		_1e54aee57_pushErr(_self_, (*(_232233_f)).get()._field_Decl.get()._field_Token, jule::Str("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1e54c5720_checkFnInsSc(_1e54ac295_Sema* _self_, jule::Ptr<_1e5463b75_FnIns>* _233336_f, jule::Ptr<_1e548c4a6_scopeChecker>* _233352_sc) {
	_1e54aaeb9_appendRetVars(&((*(_233352_sc)).get()._field_table.get()._field_Vars), _233336_f);
	_1e54ab272_appendParamVars(&((*(_233352_sc)).get()._field_table.get()._field_Vars), _233336_f);
	_1e54ab54c_appendGenericTypeAliases(&((*(_233352_sc)).get()._field_table.get()._field_TypeAliases), _233336_f);
	_1e549c2a7_check((*(_233352_sc)), &((*(_233336_f)).get()._field_Decl.get()._field_Scope), &((*(_233336_f)).get()._field_Scope));
	if ((!(_1e5490124_stopped((*(_233352_sc)).ptr())))) {
		_1e54c5401_checkRets(_self_, _233336_f);
	};
}



inline void _1e54c5a3e_checkFnInsCaller(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5463b75_FnIns>* _234641_f, jule::Ptr<_20d155596_Token> _234656_caller) {
	if ((*(_234641_f)).get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_1e551cec6_SymbolTable> _235117_old = (*(_234641_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1e54aea8e_setCurrentFile((*(_234641_f)).get()._field_Decl.get()._field_sema.ptr(), _235117_old);
	});;
	jule::Ptr<_1e551cec6_SymbolTable> _235317_file = _1e54ab89e_findFile(&((*(_234641_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_234641_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_235317_file != nullptr)) {
		_1e54aea8e_setCurrentFile((*(_234641_f)).get()._field_Decl.get()._field_sema.ptr(), _235317_file);
	};
	jule::Ptr<_1e548c4a6_scopeChecker> _235817_sc = _1e547ce9c_newScopeChecker(&((*(_234641_f)).get()._field_Decl.get()._field_sema), (*(_234641_f)));;
	_235817_sc.get()._field_calledFrom=_234656_caller;
	_1e54c5720_checkFnInsSc(_self_.ptr(), _234641_f, &(_235817_sc));
	if (((*(_234641_f)).get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,(*(_234641_f)).get()._field_Decl.get()._field_sema.get()._field_errors);
		(*(_234641_f)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1e54c5cb4_checkFnIns(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5463b75_FnIns>* _236835_f) {
	_1e54c5a3e_checkFnInsCaller(_self_, _236835_f, nullptr);
}



inline void _1e54c6039_checkTypeFn(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5460ec4_Fn>* _237236_f) {
	if ((*(_237236_f)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_237236_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_237236_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e89188c9:;
		if (it != expr_end) {
			jule::Ptr<_1e5463b75_FnIns> _238221_ins = *it;
			{
				_1e54c5cb4_checkFnIns(_self_, &(_238221_ins));
			}
			_iter_next_1e89188c9:;
			++it;
			goto _iter_begin_1e89188c9;
		}
		_iter_end_1e89188c9:;
	};
}



inline void _1e54c62ae_checkTestFn(_1e54ac295_Sema* _self_, jule::Ptr<_1e5463b75_FnIns>* _238735_f) {
	if ((*(_238735_f)).get()._field_Decl.get()._field_Public) {
		_1e54aee57_pushErr(_self_, (*(_238735_f)).get()._field_Decl.get()._field_Token, jule::Str("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1e54b0276_pushSugggestion(_self_, jule::Str("remove \"pub\" modifier", 21), jule::Slice<jule::Any>());
		return;;
	};
	if ((((*(_238735_f)).get()._field_Params.len() != 1LL) || ((*(_238735_f)).get()._field_Result != nullptr))) {
		_1e54aee57_pushErr(_self_, (*(_238735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1e54b0276_pushSugggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5557263_Sptr> _240017_sptr = _1e555137d_Sptr((*(_238735_f)).get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_240017_sptr == nullptr)) {
		_1e54aee57_pushErr(_self_, (*(_238735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1e54b0276_pushSugggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e47903e2_StructIns> _240713_s = _1e555256b_Struct(_240017_sptr.get()._field_Elem.ptr());;
	if (((_240713_s == nullptr) || (!(_1e54a967c_isStdPackage(_240713_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("testing", 7)))))) {
		_1e54aee57_pushErr(_self_, (*(_238735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1e54b0276_pushSugggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1e54c6534_precheckTypeFn(jule::Ptr<_1e54ac295_Sema> _self_, jule::Ptr<_1e5460ec4_Fn>* _241539_f) {
	if ((*(_241539_f)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_241539_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_241539_f)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1e5463b75_FnIns> _242621_ins = _1e54623b0_instanceForce((*(_241539_f)));;
		(*(_241539_f)).get()._field_Instances = jule::alloc_for_append((*(_241539_f)).get()._field_Instances,1);(*(_241539_f)).get()._field_Instances.__push(_242621_ins);;
		_1e54b9208_reloadFnInsTypes(_self_, _242621_ins);
		_242621_ins.get()._field_reloaded=true;
		if (_1e5565d21_hasDirective(&((*(_241539_f)).get()._field_Directives), jule::Str("test", 4))) {
			_1e54c62ae_checkTestFn(_self_.ptr(), &(_242621_ins));
		};
	};
}



inline void _1e54c6710_precheckFnTypes(jule::Ptr<_1e54ac295_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8922a37:;
		if (it != expr_end) {
			jule::Ptr<_1e5472dc6_Trait> _243921_decl = *it;
			{
				{
					auto expr = &(_243921_decl.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e8923395:;
					if (it != expr_end) {
						jule::Ptr<_1e5460ec4_Fn> _244025_m = *it;
						{
							_1e54c6534_precheckTypeFn(_self_, &(_244025_m));
						}
						_iter_next_1e8923395:;
						++it;
						goto _iter_begin_1e8923395;
					}
					_iter_end_1e8923395:;
				};
			}
			_iter_next_1e8922a37:;
			++it;
			goto _iter_begin_1e8922a37;
		}
		_iter_end_1e8922a37:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8923065:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> _244421_decl = *it;
			{
				_1e54c6534_precheckTypeFn(_self_, &(_244421_decl));
			}
			_iter_next_1e8923065:;
			++it;
			goto _iter_begin_1e8923065;
		}
		_iter_end_1e8923065:;
	};
}



inline void _1e54c68db_checkFnTypes(jule::Ptr<_1e54ac295_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8924671:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> _245121_decl = *it;
			{
				_1e54c6039_checkTypeFn(_self_, &(_245121_decl));
			}
			_iter_next_1e8924671:;
			++it;
			goto _iter_begin_1e8924671;
		}
		_iter_end_1e8924671:;
	};
}



inline void _1e54c6ab7_checkPackageTypes(jule::Ptr<_1e54ac295_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8925386:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _245921_f = *it;
			{
				_1e54aea8e_setCurrentFile(_self_.ptr(), _245921_f);
				_1e54c2e15_checkGlobalTypes(_self_);
				_1e54c6710_precheckFnTypes(_self_);
				_1e54c517b_precheckStructTypes(_self_);
			}
			_iter_next_1e8925386:;
			++it;
			goto _iter_begin_1e8925386;
		}
		_iter_end_1e8925386:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8926b5c:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _247021_f = *it;
			{
				_1e54aea8e_setCurrentFile(_self_.ptr(), _247021_f);
				_1e54c68db_checkFnTypes(_self_);
				_1e54c4972_checkStructTypes(_self_);
			}
			_iter_next_1e8926b5c:;
			++it;
			goto _iter_begin_1e8926b5c;
		}
		_iter_end_1e8926b5c:;
	};
}



inline void _1e54c6c93_setFileSemaFields(jule::Ptr<_1e54ac295_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8927245:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> _247821_f = *it;
			{
				_247821_f.get()._field_sema=_self_;
			}
			_iter_next_1e8927245:;
			++it;
			goto _iter_begin_1e8927245;
		}
		_iter_end_1e8927245:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8928235:;
		if (it != expr_end) {
			jule::Ptr<_1e4790018_Struct> _248121_st = *it;
			{
				_248121_st.get()._field_sema=_self_;
			}
			_iter_next_1e8928235:;
			++it;
			goto _iter_begin_1e8928235;
		}
		_iter_end_1e8928235:;
	};
}



inline void _1e54c6e6e_setSemaFields(jule::Ptr<_1e54ac295_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8928c6e:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _248721_file = *it;
			{
				_1e54aea8e_setCurrentFile(_self_.ptr(), _248721_file);
				_1e54c6c93_setFileSemaFields(_self_);
			}
			_iter_next_1e8928c6e:;
			++it;
			goto _iter_begin_1e8928c6e;
		}
		_iter_end_1e8928c6e:;
	};
}



inline void _1e54c71e4_check(jule::Ptr<_1e54ac295_Sema> _self_, jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>* _249330_files) {
	_self_.get()._field_files=(*(_249330_files));
	_1e54b35ba_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e54c6e6e_setSemaFields(_self_);
	_1e54b3b4d_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e54b3972_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e54c2343_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e54c6ab7_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1e54ac295_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1e54c759b_missingRetChecker static__1e54c7964_new(void) {
	return _1e54c759b_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1e54c7c3e_checkConditional(_1e54c759b_missingRetChecker* _self_, jule::Ptr<_1e5481643_Conditional> _253635_c) {
	{
		auto expr = &(_253635_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e892d669:;
		if (it != expr_end) {
			jule::Ptr<_1e5480ed3_If> _253721_elif = *it;
			{
				if ((_253721_elif == nullptr)) {
					return false;;
				};
				if ((!(_1e54c8668_checkScope(_self_, _253721_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1e892d669:;
			++it;
			goto _iter_begin_1e892d669;
		}
		_iter_end_1e892d669:;
	};
	return ((_253635_c.get()._field_Default != nullptr) && _1e54c8668_checkScope(_self_, _253635_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1e54c804c_checkMatch(_1e54c759b_missingRetChecker* _self_, jule::Ptr<_1e5484833_Match> _254829_m) {
	{
		auto expr = &(_254829_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e893025e:;
		if (it != expr_end) {
			jule::Ptr<_1e548537d_Case> _254921_c = *it;
			{
				if ((_254921_c == nullptr)) {
					return false;;
				};
				jule::I64 _255317_n = (*(_self_))._field_breaked.len();;
				jule::Bool _255417_ok = _1e54c8668_checkScope(_self_, _254921_c.get()._field_Scope);;
				{
					
					if ((_255317_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1e8931da9:;
						{
							return false;;
						}
					}
					else if ((!(_255417_ok))) {
						_case_begin_1e8931e20:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1e8931e97;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1e8931e97:;
						{
							(*(_self_))._field_falled=false;
							if ((_254921_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1e893025e;
						}
					}
					_match_end_1e8931d54:;
				};
			}
			_iter_next_1e893025e:;
			++it;
			goto _iter_begin_1e893025e;
		}
		_iter_end_1e893025e:;
	};
	return ((_254829_m.get()._field_Default != nullptr) && _1e54c8668_checkScope(_self_, _254829_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1e54c835a_checkInfIter(_1e54c759b_missingRetChecker* _self_, jule::Ptr<_1e548192e_InfIter> _257431_it) {
	jule::I64 _257513_n = (*(_self_))._field_breaked.len();;
	if (_1e54c8668_checkScope(_self_, _257431_it.get()._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _257513_n);
		return true;;
	};
	if ((_257513_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _258117_itaddr = static_cast<jule::Uintptr>(_257431_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_257513_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1e8935bc1:;
			if (it != expr_end) {
				jule::Uintptr _258220_addr = *it;
				{
					if ((_258117_itaddr == _258220_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _257513_n);
						return false;;
					};
				}
				_iter_next_1e8935bc1:;
				++it;
				goto _iter_begin_1e8935bc1;
			}
			_iter_end_1e8935bc1:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _257513_n);
	};
	return true;;
}



inline jule::Bool _1e54c8668_checkScope(_1e54c759b_missingRetChecker* _self_, jule::Ptr<_1e5480ad7_Scope> _259329_s) {
	if ((_259329_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_259329_s.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8937783:;
		if (it != expr_end) {
			jule::Any _259721_st = *it;
			{
				{
					auto &_match_expr{ _259721_st };
					
					if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1e8937ec0:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1e8938069:;
						{
							jule::Uintptr _260321_addr = _259721_st.cast_ptr<_1e548303a_BreakSt>(&__jule_any_type50).get()._field_It;;
							if ((_260321_addr != 0LLU)) {
								(*(_self_))._field_breaked = jule::alloc_for_append((*(_self_))._field_breaked,1);(*(_self_))._field_breaked.__push(_260321_addr);;
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1e89380d0:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1e8938146:;
						{
							if (_1e54c835a_checkInfIter(_self_, _259721_st.cast_ptr<_1e548192e_InfIter>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_1e89381ac:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1e8938223:;
						{
							if (_1e54c8668_checkScope(_self_, _259721_st.cast_ptr<_1e5480ad7_Scope>(&__jule_any_type21))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1e8938289:;
						{
							{
								auto &_match_expr{ _259721_st.cast_ptr<_1e5522d00_Data>(&__jule_any_type23).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type22) {
									_case_begin_1e893bbd8:;
									{
										return true;;
									}
								}
								_match_end_1e893b930:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1e8938311:;
						{
							if (_1e54c7c3e_checkConditional(_self_, _259721_st.cast_ptr<_1e5481643_Conditional>(&__jule_any_type35))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1e8938388:;
						{
							if (_1e54c804c_checkMatch(_self_, _259721_st.cast_ptr<_1e5484833_Match>(&__jule_any_type48))) {
								return true;;
							};
						}
					}
					_match_end_1e8937d27:;
				};
			}
			_iter_next_1e8937783:;
			++it;
			goto _iter_begin_1e8937783;
		}
		_iter_end_1e8937783:;
	};
	return false;;
}



inline jule::Bool _1e54c8976_check(_1e54c759b_missingRetChecker* _self_, jule::Ptr<_1e5480ad7_Scope> _263924_s) {
	return _1e54c8668_checkScope(_self_, _263924_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e54c759b_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e54c925c_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e54ca659_IsInitialized(_1e54ca291_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1e54ca8bd_IsTypeInferred(_1e54ca291_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*(_self_))._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _1e54cab32_untypedConstant(_1e54ca291_Var* _self_) {
	return (_1e54ca8bd_IsTypeInferred(_self_) && (*(_self_))._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e54ca291_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1e54cb6b0_Dispose(jule::Ptr<_1e5460ec4_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && (_1023_f.get()._field_Ident == jule::Str("Dispose", 7))) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1e5461436_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1e5460028_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1e54cb957_Str(jule::Ptr<_1e5460ec4_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (_2419_f.get()._field_Ident != jule::Str("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1e5461436_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1e5460028_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1e5463b75_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1e55539ce_Prim> _3913_prim = _1e5551119_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _1e5556c13_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__1e54cbc98_logical(jule::Ptr<_1e5460ec4_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*(_4624_f)).get()._field_Ident != _4632_ident)) || ((*(_4624_f)).get()._field_Owner == nullptr)) || ((*(_4624_f)).get()._field_Instances.len() == 0LL)) || (*(_4624_f)).get()._field_Statically) || (*(_4624_f)).get()._field_Unsafety) || _1e5461436_IsVoid((*(_4624_f)).ptr())) || ((*(_4624_f)).get()._field_Generics.len() != 0LL)) || ((*(_4624_f)).get()._field_Params.len() != 2LL)) || (*(_4624_f)).get()._field_Params[0LL].get()._field_Mutable) || _1e5460028_IsRef((*(_4624_f)).get()._field_Params[0LL].ptr())) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1e5463b75_FnIns> _6317_ins = (*(_4624_f)).get()._field_Instances[0LL];;
	jule::Ptr<_1e55539ce_Prim> _6413_prim = _1e5551119_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1e555699e_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _1e555256b_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__1e54cc040_Eq(jule::Ptr<_1e5460ec4_Fn> _7218_f) {
	return static__1e54cbc98_logical(&(_7218_f), jule::Str("Eq", 2));;
}



inline jule::Bool static__1e54cc2d7_Gt(jule::Ptr<_1e5460ec4_Fn> _7718_f) {
	return static__1e54cbc98_logical(&(_7718_f), jule::Str("Gt", 2));;
}



inline jule::Bool static__1e54cc57e_GtEq(jule::Ptr<_1e5460ec4_Fn> _8220_f) {
	return static__1e54cbc98_logical(&(_8220_f), jule::Str("GtEq", 4));;
}



inline jule::Bool static__1e54cc826_Lt(jule::Ptr<_1e5460ec4_Fn> _8718_f) {
	return static__1e54cbc98_logical(&(_8718_f), jule::Str("Lt", 2));;
}



inline jule::Bool static__1e54ccabd_LtEq(jule::Ptr<_1e5460ec4_Fn> _9220_f) {
	return static__1e54cbc98_logical(&(_9220_f), jule::Str("LtEq", 4));;
}



inline jule::Bool static__1e54cce0e_result(jule::Ptr<_1e5460ec4_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*(_9623_f)).get()._field_Ident != _9631_ident)) || ((*(_9623_f)).get()._field_Owner == nullptr)) || ((*(_9623_f)).get()._field_Instances.len() == 0LL)) || (*(_9623_f)).get()._field_Statically) || (*(_9623_f)).get()._field_Unsafety) || _1e5461436_IsVoid((*(_9623_f)).ptr())) || ((*(_9623_f)).get()._field_Generics.len() != 0LL)) || ((*(_9623_f)).get()._field_Params.len() != 2LL)) || (*(_9623_f)).get()._field_Params[0LL].get()._field_Mutable) || _1e5460028_IsRef((*(_9623_f)).get()._field_Params[0LL].ptr())) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1e5463b75_FnIns> _11317_ins = (*(_9623_f)).get()._field_Instances[0LL];;
	return (_1e555256b_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__1e54cd1a6_Shl(jule::Ptr<_1e5460ec4_Fn> _11819_f) {
	return static__1e54cce0e_result(&(_11819_f), jule::Str("Shl", 3));;
}



inline jule::Bool static__1e54cd44d_Shr(jule::Ptr<_1e5460ec4_Fn> _12319_f) {
	return static__1e54cce0e_result(&(_12319_f), jule::Str("Shr", 3));;
}



inline jule::Bool static__1e54cd6e5_Add(jule::Ptr<_1e5460ec4_Fn> _12819_f) {
	return static__1e54cce0e_result(&(_12819_f), jule::Str("Add", 3));;
}



inline jule::Bool static__1e54cd98c_Sub(jule::Ptr<_1e5460ec4_Fn> _13319_f) {
	return static__1e54cce0e_result(&(_13319_f), jule::Str("Sub", 3));;
}



inline jule::Bool static__1e54cdc34_Div(jule::Ptr<_1e5460ec4_Fn> _13819_f) {
	return static__1e54cce0e_result(&(_13819_f), jule::Str("Div", 3));;
}



inline jule::Bool static__1e54cdecb_Mul(jule::Ptr<_1e5460ec4_Fn> _14319_f) {
	return static__1e54cce0e_result(&(_14319_f), jule::Str("Mul", 3));;
}



inline jule::Bool static__1e54ce273_Mod(jule::Ptr<_1e5460ec4_Fn> _14819_f) {
	return static__1e54cce0e_result(&(_14819_f), jule::Str("Mod", 3));;
}



inline jule::Bool static__1e54ce51a_BitAnd(jule::Ptr<_1e5460ec4_Fn> _15322_f) {
	return static__1e54cce0e_result(&(_15322_f), jule::Str("BitAnd", 6));;
}



inline jule::Bool static__1e54ce7b2_BitOr(jule::Ptr<_1e5460ec4_Fn> _15821_f) {
	return static__1e54cce0e_result(&(_15821_f), jule::Str("BitOr", 5));;
}



inline jule::Bool static__1e54cea59_BitXor(jule::Ptr<_1e5460ec4_Fn> _16322_f) {
	return static__1e54cce0e_result(&(_16322_f), jule::Str("BitXor", 6));;
}



inline jule::Bool static__1e54ced9a_unary(jule::Ptr<_1e5460ec4_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*(_16722_f)).get()._field_Ident != _16730_ident)) || ((*(_16722_f)).get()._field_Owner == nullptr)) || ((*(_16722_f)).get()._field_Instances.len() == 0LL)) || (*(_16722_f)).get()._field_Statically) || (*(_16722_f)).get()._field_Unsafety) || _1e5461436_IsVoid((*(_16722_f)).ptr())) || ((*(_16722_f)).get()._field_Generics.len() != 0LL)) || ((*(_16722_f)).get()._field_Params.len() != 1LL)) || (*(_16722_f)).get()._field_Params[0LL].get()._field_Mutable) || _1e5460028_IsRef((*(_16722_f)).get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1e5463b75_FnIns> _18217_ins = (*(_16722_f)).get()._field_Instances[0LL];;
	return (_1e555256b_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__1e54d0142_Neg(jule::Ptr<_1e5460ec4_Fn> _18719_f) {
	return static__1e54ced9a_unary(&(_18719_f), jule::Str("Neg", 3));;
}



inline jule::Bool static__1e54d03d9_Pos(jule::Ptr<_1e5460ec4_Fn> _19219_f) {
	return static__1e54ced9a_unary(&(_19219_f), jule::Str("Pos", 3));;
}



inline jule::Bool static__1e54d0681_BitNot(jule::Ptr<_1e5460ec4_Fn> _19722_f) {
	return static__1e54ced9a_unary(&(_19722_f), jule::Str("BitNot", 6));;
}



inline jule::Bool static__1e54d09c2_assign(jule::Ptr<_1e5460ec4_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*(_20123_f)).get()._field_Ident != _20131_ident)) || ((*(_20123_f)).get()._field_Owner == nullptr)) || ((*(_20123_f)).get()._field_Instances.len() == 0LL)) || (*(_20123_f)).get()._field_Statically) || (*(_20123_f)).get()._field_Unsafety) || (!(_1e5461436_IsVoid((*(_20123_f)).ptr())))) || ((*(_20123_f)).get()._field_Generics.len() != 0LL)) || ((*(_20123_f)).get()._field_Params.len() != 2LL)) || (!((*(_20123_f)).get()._field_Params[0LL].get()._field_Mutable))) || _1e5460028_IsRef((*(_20123_f)).get()._field_Params[0LL].ptr())) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1e54d0c69_AddAssign(jule::Ptr<_1e5460ec4_Fn> _22125_f) {
	return static__1e54d09c2_assign(&(_22125_f), jule::Str("AddAssign", 9));;
}



inline jule::Bool static__1e54d1011_SubAssign(jule::Ptr<_1e5460ec4_Fn> _22625_f) {
	return static__1e54d09c2_assign(&(_22625_f), jule::Str("SubAssign", 9));;
}



inline jule::Bool static__1e54d12a8_DivAssign(jule::Ptr<_1e5460ec4_Fn> _23125_f) {
	return static__1e54d09c2_assign(&(_23125_f), jule::Str("DivAssign", 9));;
}



inline jule::Bool static__1e54d1550_MulAssign(jule::Ptr<_1e5460ec4_Fn> _23625_f) {
	return static__1e54d09c2_assign(&(_23625_f), jule::Str("MulAssign", 9));;
}



inline jule::Bool static__1e54d17e7_ModAssign(jule::Ptr<_1e5460ec4_Fn> _24125_f) {
	return static__1e54d09c2_assign(&(_24125_f), jule::Str("ModAssign", 9));;
}



inline jule::Bool static__1e54d1a8e_ShlAssign(jule::Ptr<_1e5460ec4_Fn> _24625_f) {
	return static__1e54d09c2_assign(&(_24625_f), jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__1e54d1d36_ShrAssign(jule::Ptr<_1e5460ec4_Fn> _25125_f) {
	return static__1e54d09c2_assign(&(_25125_f), jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__1e54d20cd_BitOrAssign(jule::Ptr<_1e5460ec4_Fn> _25627_f) {
	return static__1e54d09c2_assign(&(_25627_f), jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__1e54d2375_BitAndAssign(jule::Ptr<_1e5460ec4_Fn> _26128_f) {
	return static__1e54d09c2_assign(&(_26128_f), jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__1e54d261c_BitXorAssign(jule::Ptr<_1e5460ec4_Fn> _26628_f) {
	return static__1e54d09c2_assign(&(_26628_f), jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _1e54cb03e_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1e550c0d6_pushErr(_1e550bab9_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11726_fmt, _11739_args);
}



inline jule::Bool _1e550c34a_checkTrait(_1e550bab9_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1e554ebb7_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5472dc6_Trait> _12513_trt = _1e55527d0_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1e555137d_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1e8979ae4:;
			{
				_12617_ref=true;
				(*(_self_))._field_src=_1e555137d_Sptr((*(_self_))._field_src.ptr()).get()._field_Elem;
				if ((_1e555256b_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1e8979462;
			}
		}
		else if ((_1e555256b_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1e8979462:;
			{
				jule::Ptr<_1e47903e2_StructIns> _13617_s = _1e555256b_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1e4755077_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _1e54e3c05_traitHasReferenceReceiver(&(_12513_trt)))) {
					_1e550c0d6_pushErr(_self_, jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e55527d0_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1e89794c8:;
			{
				__jule_func_result = (_12513_trt == _1e55527d0_Trait((*(_self_))._field_src.ptr()));
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1e89793eb:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1e8979385:;
	};
}



inline jule::Bool _1e550c5ae_checkPtr(_1e550bab9_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1e554ebb7_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1e555a7c7_Ptr> _15617_dest = _1e55515e2_Ptr((*(_self_))._field_dest.ptr());;
	if (_1e555b29a_IsUnsafe(_15617_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1e554e48b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1e550c823_checkPrim(_1e550bab9_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*(_self_))._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1e55539ce_Prim> _16517_prim = _1e5551119_Prim((*(_self_))._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _1e5556e77_IsAny(_16517_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1e554e48b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1e550cbca_typeEnum(_1e550bab9_typeCompatibilityChecker* _self_, jule::Ptr<_1e5476616_TypeEnum>* _17328_e, jule::Ptr<_1e554dc82_TypeKind>* _17347_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_17328_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8981931:;
		if (it != expr_end) {
			jule::Ptr<_1e5476050_TypeEnumItem> _17421_item = *it;
			{
				if (_1e554e48b_Equal(_17421_item.get()._field_Kind.get()._field_Kind, (*(_17347_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1e5476616_TypeEnum> _17821_ke = _1e5551aba_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1e8981931;
				};
				if (_1e550cbca_typeEnum(_self_, &(_17821_ke), _17347_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1e8981931:;
			++it;
			goto _iter_begin_1e8981931;
		}
		_iter_end_1e8981931:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e550ce3e_checkTypeEnum(_1e550bab9_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1e554e48b_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5476616_TypeEnum> _19317_e = _1e5551aba_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1e550cbca_typeEnum(_self_, &(_19317_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1e550d1a3_check(_1e550bab9_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1e55515e2_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1e550c5ae_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1e5550668_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1e554ebb7_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1e5551119_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1e8986518:;
			{
				__jule_func_result = _1e550c823_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1e5551aba_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1e8986903:;
			{
				__jule_func_result = _1e550ce3e_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1e55527d0_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1e8986969:;
			{
				__jule_func_result = _1e550c34a_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1e8985924:;
			{
				__jule_func_result = _1e554e48b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1e8985616:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e550bab9_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1e550db54_pushErr(_1e550d6e2_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_1e54aee57_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _22926_fmt, _22939_args);
}



inline jule::Bool _1e550ddb8_checkValidity(_1e550d6e2_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_1e5552307_Fn((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e898962b:;
			{
				jule::Ptr<_1e5463b75_FnIns> _23717_f = _1e5552307_Fn((*(_self_))._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1e546500b_IsBuiltin(_23717_f.ptr())) {
						_case_begin_1e898ab9e:;
						{
							_1e550db54_pushErr(_self_, jule::Str("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_1e898ac26:;
						{
							_1e550db54_pushErr(_self_, jule::Str("cpp-linked functions cannot use as anonymous function", 53), jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _1e546169a_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_1e898ac9d:;
						{
							_1e550db54_pushErr(_self_, jule::Str("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1e898ad25:;
						{
							_1e550db54_pushErr(_self_, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1e54b0276_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1e898aac2:;
				};
			}
		}
		else if ((_1e5552ca8_Tup((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e89896a3:;
			{
				_1e550db54_pushErr(_self_, jule::Str("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1e8989571:;
	};
	return _23417_valid;;
}



inline jule::Bool _1e550e12c_checkConst(_1e550d6e2_assignTypeChecker* _self_) {
	if (((((!(_1e55236b3_IsConst((*(_self_))._field_d.ptr()))) || (_1e5551119_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_1e5551119_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1e54464b5_IsNum(_1e5551119_Prim((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type47_compare((*(_self_))._field_d.get()._field_Model, (*(_self_))._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _27413_kind = _1e5551119_Prim((*(_self_))._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1e544621d_IsFloat(_27413_kind)) {
			_case_begin_1e899327d:;
			{
				if ((!(_1e54e3d37_floatAssignable(_27413_kind, &((*(_self_))._field_d))))) {
					_1e550db54_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else if (_1e5445dee_IsInt(_27413_kind)) {
			_case_begin_1e8992b0c:;
			{
				if ((!(_1e550b8dd_intAssignable(_27413_kind, &((*(_self_))._field_d))))) {
					_1e550db54_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else {
			_case_begin_1e8992a96:;
			{
				return false;;
			}
		}
		_match_end_1e8992a30:;
	};
	return true;;
}



inline jule::Bool _1e550e391_isPrim(_1e550d6e2_assignTypeChecker* _self_) {
	if (((*(_self_))._field_dest.get()._field_Variadic || (*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_1e554e953_CppLinked((*(_self_))._field_dest.ptr()) || _1e554e953_CppLinked((*(_self_))._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1e5551119_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_1e5551119_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1e550e605_checkCompatibility(_1e550d6e2_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1e89972c6:;
			{
				return false;;
			}
		}
		else if ((!(_1e550ddb8_checkValidity(_self_)))) {
			_case_begin_1e899734d:;
			{
				return false;;
			}
		}
		else if (_1e550e12c_checkConst(_self_)) {
			_case_begin_1e89973c5:;
			{
				return true;;
			}
		}
		else if ((_1e5551856_Enum((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e899744c:;
			{
				jule::Ptr<_1e554dc82_TypeKind> _31821_dkind = (*(_self_))._field_dest;;
				if ((_1e5551856_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_31821_dkind=_1e5551856_Enum((*(_self_))._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1e5551119_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1e8997183;
				};
				if (_1e54430e9_TypesAreCompatible(_1e5551119_Prim(_1e5551856_Enum((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind, _1e5551119_Prim(_31821_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1e550e391_isPrim(_self_)) {
			_case_begin_1e89974c4:;
			{
				jule::Ptr<_1e55539ce_Prim> _32817_dest = _1e5551119_Prim((*(_self_))._field_dest.ptr());;
				if (_1e5556e77_IsAny(_32817_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1e55539ce_Prim> _33221_src = _1e5551119_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1e54430e9_TypesAreCompatible(_32817_dest.get()._field_Kind, _33221_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1e8997183:;
	};
	return _1e54b728e_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d.get()._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1e550e869_check(_1e550d6e2_assignTypeChecker* _self_) {
	jule::Bool _34113_ok = _1e550e605_checkCompatibility(_self_);;
	if ((_34113_ok && (!((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_1e556786c_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _34113_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e550d6e2_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e89aeca0_annotateConstraintElem(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _36149_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1e89b13ab:;
			{
				jule::Ptr<_1e554dc82_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1e89b21c0:;
						{
							_36421_elem=_1e5551d2e_Arr((*(_36149_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1e89b1c3b:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1e4775d34_ArrTypeDecl>(&__jule_any_type76).get()._field_Elem;
				return _1e5511827_annotateConstraint(_self_, &(_36421_elem));;
			}
		}
		_match_end_1e89b1301:;
	};
	return false;;
}

inline jule::Bool _1e89ae497_annotateConstraintElem(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _36149_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1e89b48ba:;
			{
				jule::Ptr<_1e554dc82_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1e89b5767:;
						{
							_36421_elem=_1e5552093_Slc((*(_36149_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1e89b524a:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1e47750ca_SlcTypeDecl>(&__jule_any_type77).get()._field_Elem;
				return _1e5511827_annotateConstraint(_self_, &(_36421_elem));;
			}
		}
		_match_end_1e89b4810:;
	};
	return false;;
}

inline jule::Bool _1e89b171e_annotateConstraintElem(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _36149_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1e89b7e95:;
			{
				jule::Ptr<_1e554dc82_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1e89b8da8:;
						{
							_36421_elem=_1e55515e2_Ptr((*(_36149_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1e89b8825:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1e47756a2_PtrTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _1e5511827_annotateConstraint(_self_, &(_36421_elem));;
			}
		}
		_match_end_1e89b7dda:;
	};
	return false;;
}

inline jule::Bool _1e89b6bdb_annotateConstraintElem(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _36149_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1e89bb11e:;
			{
				jule::Ptr<_1e554dc82_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1e89bc0a9:;
						{
							_36421_elem=_1e555137d_Sptr((*(_36149_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1e89bb99e:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1e4774bce_SptrTypeDecl>(&__jule_any_type79).get()._field_Elem;
				return _1e5511827_annotateConstraint(_self_, &(_36421_elem));;
			}
		}
		_match_end_1e89bb064:;
	};
	return false;;
}



inline jule::Bool _1e5510aac_annotateConstraintMap(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _38145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1e899ec07:;
			{
				jule::Ptr<_1e5559276_Map> _38421_m = _1e5552a44_Map((*(_38145_k)).ptr());;
				jule::Ptr<_1e4776582_MapTypeDecl> _38521_m2 = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1e4776582_MapTypeDecl>(&__jule_any_type80);;
				(*(_self_))._field_c=_38521_m2.get()._field_Key;
				if ((!(_1e5511827_annotateConstraint(_self_, &(_38421_m.get()._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=_38521_m2.get()._field_Val;
				__jule_func_result = _1e5511827_annotateConstraint(_self_, &(_38421_m.get()._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1e899eb80:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e5510dba_annotateConstraintTup(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _39645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1e89a2413:;
			{
				jule::Ptr<_1e47753b6_TupleTypeDecl> _39921_tup = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1e47753b6_TupleTypeDecl>(&__jule_any_type81);;
				jule::Ptr<_1e555874d_Tuple> _40021_tup2 = _1e5552ca8_Tup((*(_39645_k)).ptr());;
				{
					auto expr = &(_40021_tup2.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e89a37aa:;
					if (it != expr_end) {
						jule::Ptr<_1e554dc82_TypeKind> _40125_t2 = *it;
						{
							{
								auto expr = &(_39921_tup.get()._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1e89a406e:;
								if (it != expr_end) {
									jule::Ptr<_1e4773826_TypeDecl> _40229_t = *it;
									{
										(*(_self_))._field_c=_40229_t;
										if (_1e5511827_annotateConstraint(_self_, &(_40125_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1e89a406e:;
									++it;
									goto _iter_begin_1e89a406e;
								}
								_iter_end_1e89a406e:;
							};
						}
						_iter_next_1e89a37aa:;
						++it;
						goto _iter_begin_1e89a37aa;
					}
					_iter_end_1e89a37aa:;
				};
			}
		}
		_match_end_1e89a23ad:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e55111c8_annotateConstraintFn(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _41344_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1e89a3c83:;
			{
				jule::Ptr<_1e47852a5_FnDecl> _41621_pf = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1e47852a5_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1e5463b75_FnIns> _41721_f = _1e5552307_Fn((*(_41344_k)).ptr());;
				{
					auto expr = &(_41721_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e89a61b4:;
					if (it != expr_end) {
						jule::I64 _41818_i = it - expr->begin();
						jule::Ptr<_1e5462ca6_ParamIns> _41825_fp = *it;
						{
							(*(_self_))._field_c=_41621_pf.get()._field_Params[_41818_i].get()._field_Kind;
							if (_1e5511827_annotateConstraint(_self_, &(_41825_fp.get()._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1e89a61b4:;
						++it;
						_41818_i++;
						goto _iter_begin_1e89a61b4;
					}
					_iter_end_1e89a61b4:;
				};
				if ((_41621_pf.get()._field_Result != nullptr)) {
					(*(_self_))._field_c=_41621_pf.get()._field_Result.get()._field_Kind;
					if (_1e5511827_annotateConstraint(_self_, &(_41721_f.get()._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1e89a2754:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e5511508_annotateConstraintIdent(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _43447_k) {
	jule::Ptr<_1e4773ddc_IdentTypeDecl> _43517_ident = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1e4773ddc_IdentTypeDecl>(&__jule_any_type19);;
	jule::Ptr<_1e47903e2_StructIns> _43617_s = _1e555256b_Struct((*(_43447_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e89a8b34:;
		if (it != expr_end) {
			jule::I64 _43713_i = it - expr->begin();
			jule::Ptr<_1e4780b1e_GenericDecl> _43716_g = *it;
			{
				if ((_43716_g.get()._field_Ident == _43517_ident.get()._field_Ident)) {
					jule::Ptr<_1e554c555_InsGeneric> _43925_fg = (*(_self_))._field_f.get()._field_Generics[_43713_i];;
					if ((_43925_fg != nullptr)) {
						return false;;
					};
					_1e5511b46_pushGeneric(_self_, _43447_k, _43713_i);
					return true;;
				};
				if ((_43617_s == nullptr)) {
					goto _iter_next_1e89a8b34;
				};
				jule::Ptr<_1e4773826_TypeDecl> _44921_c = (*(_self_))._field_c;;
				{
					auto expr = &(_43517_ident.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e89aae33:;
					if (it != expr_end) {
						jule::Ptr<_1e4773826_TypeDecl> _45025_ig = *it;
						{
							(*(_self_))._field_c=_45025_ig;
							{
								auto expr = &(_43617_s.get()._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1e89ac495:;
								if (it != expr_end) {
									jule::Ptr<_1e554c555_InsGeneric> _45229_sg = *it;
									{
										if (_1e5511827_annotateConstraint(_self_, &(_45229_sg.get()._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1e89ac495:;
									++it;
									goto _iter_begin_1e89ac495;
								}
								_iter_end_1e89ac495:;
							};
						}
						_iter_next_1e89aae33:;
						++it;
						goto _iter_begin_1e89aae33;
					}
					_iter_end_1e89aae33:;
				};
				(*(_self_))._field_c=_44921_c;
			}
			_iter_next_1e89a8b34:;
			++it;
			_43713_i++;
			goto _iter_begin_1e89a8b34;
		}
		_iter_end_1e89a8b34:;
	};
	return false;;
}



inline jule::Bool _1e5511827_annotateConstraint(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _46342_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1e89ac82a:;
			{
				return _1e5511508_annotateConstraintIdent(_self_, _46342_k);;
			}
		}
		_match_end_1e89ac088:;
	};
	{
		
		if ((_1e5551d2e_Arr((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1e89a9a9c:;
			{
				return _1e89aeca0_annotateConstraintElem(_self_, _46342_k);;
			}
		}
		else if ((_1e5552093_Slc((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1e89add37:;
			{
				return _1e89ae497_annotateConstraintElem(_self_, _46342_k);;
			}
		}
		else if ((_1e55515e2_Ptr((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1e89add9d:;
			{
				return _1e89b171e_annotateConstraintElem(_self_, _46342_k);;
			}
		}
		else if ((_1e555137d_Sptr((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1e89ade9c:;
			{
				return _1e89b6bdb_annotateConstraintElem(_self_, _46342_k);;
			}
		}
		else if ((_1e5552a44_Map((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1e89ae013:;
			{
				return _1e5510aac_annotateConstraintMap(_self_, _46342_k);;
			}
		}
		else if ((_1e5552307_Fn((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1e89ad463:;
			{
				return _1e55111c8_annotateConstraintFn(_self_, _46342_k);;
			}
		}
		else if ((_1e5552ca8_Tup((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1e89ad4c9:;
			{
				return _1e5510dba_annotateConstraintTup(_self_, _46342_k);;
			}
		}
		else {
			_case_begin_1e89adc6b:;
			{
				return false;;
			}
		}
		_match_end_1e89adc16:;
	};
}



inline void _1e5511b46_pushGeneric(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _48835_k, jule::I64 _48849_i) {
	(*(_self_))._field_f.get()._field_Generics[_48849_i]=jule::new_ptr<_1e554c555_InsGeneric>(_1e554c555_InsGeneric{._field_Kind=(*(_48835_k)), });
	jule::Ptr<_1e4780b1e_GenericDecl> _49017_gd = (*(_self_))._field_f.get()._field_Decl.get()._field_Generics[_48849_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e89be980:;
		if (it != expr_end) {
			jule::Ptr<_1e554dc82_TypeKind> _49121_ignored = *it;
			{
				if ((_49017_gd.get()._field_Ident == _1e554e17d_Str(_49121_ignored.ptr()))) {
					_49121_ignored.get()._field_Kind=(*(_48835_k)).get()._field_Kind;
				};
			}
			_iter_next_1e89be980:;
			++it;
			goto _iter_begin_1e89be980;
		}
		_iter_end_1e89be980:;
	};
	if (((_49017_gd.get()._field_Constraint == nullptr) || (_49017_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=_49017_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1e5511827_annotateConstraint(_self_, _48835_k);
}



inline jule::Bool _1e5511e54_annotatePrim(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _50343_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1e5513c7a_annotateAny(_self_, _50343_k);
	return __jule_func_result;;
}



inline jule::Bool _1e5512262_annotateArr(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _50742_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5559d6a_Arr> _50817_parr = _1e5551d2e_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_50817_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5559d6a_Arr> _51217_arr = _1e5551d2e_Arr((*(_50742_k)).ptr());;
	(*(_self_))._field_k=(&(_50817_parr.get()._field_Elem));
	__jule_func_result = _1e5514088_annotateKind(_self_, &(_51217_arr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1e5512570_annotateSlc(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _51742_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5557bc0_Slc> _51817_pslc = _1e5552093_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_51817_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5557bc0_Slc> _52217_slc = _1e5552093_Slc((*(_51742_k)).ptr());;
	(*(_self_))._field_k=(&(_51817_pslc.get()._field_Elem));
	__jule_func_result = _1e5514088_annotateKind(_self_, &(_52217_slc.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1e5512927_checkMapKey(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _52741_k, jule::Ptr<_1e554dc82_TypeKind>* _52761_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e554dc82_TypeKind>* _52817_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52741_k;
	__jule_func_result=_1e5514088_annotateKind(_self_, _52761_ck);
	(*(_self_))._field_k=_52817_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e5512c35_annotateMap(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _53542_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5559276_Map> _53617_pmap = _1e5552a44_Map((*((*(_self_))._field_k)).ptr());;
	if ((_53617_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5559276_Map> _54017_m = _1e5552a44_Map((*(_53542_k)).ptr());;
	__jule_func_result = (_1e5512927_checkMapKey(_self_, (&(_53617_pmap.get()._field_Key)), &(_54017_m.get()._field_Key)) && _1e5512927_checkMapKey(_self_, (&(_53617_pmap.get()._field_Val)), &(_54017_m.get()._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1e5513043_annotateFn(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _54541_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5463b75_FnIns> _54617_pf = _1e5552307_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_54617_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5463b75_FnIns> _55017_f = _1e5552307_Fn((*(_54541_k)).ptr());;
	{
		
		if ((_54617_pf.get()._field_Params.len() != _55017_f.get()._field_Params.len())) {
			_case_begin_1e89caa79:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1e5461436_IsVoid(_54617_pf.get()._field_Decl.ptr()) != _1e5461436_IsVoid(_55017_f.get()._field_Decl.ptr()))) {
			_case_begin_1e89cab01:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1e89caa02:;
	};
	__jule_func_result=true;
	jule::Ptr<_1e554dc82_TypeKind>* _55917_old = (*(_self_))._field_k;;
	{
		auto expr = &(_55017_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e89cc372:;
		if (it != expr_end) {
			jule::I64 _56014_i = it - expr->begin();
			jule::Ptr<_1e5462ca6_ParamIns> _56021_fp = *it;
			{
				(*(_self_))._field_k=(&(_54617_pf.get()._field_Params[_56014_i].get()._field_Kind));
				__jule_func_result=(_1e5514088_annotateKind(_self_, &(_56021_fp.get()._field_Kind)) && __jule_func_result);
			}
			_iter_next_1e89cc372:;
			++it;
			_56014_i++;
			goto _iter_begin_1e89cc372;
		}
		_iter_end_1e89cc372:;
	};
	if ((!(_1e5461436_IsVoid(_54617_pf.get()._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&(_54617_pf.get()._field_Result));
		__jule_func_result=(_1e5514088_annotateKind(_self_, &(_55017_f.get()._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_55917_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e5513351_annotatePtr(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _57442_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e555a7c7_Ptr> _57517_pptr = _1e55515e2_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_57517_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e555a7c7_Ptr> _57917_ptr = _1e55515e2_Ptr((*(_57442_k)).ptr());;
	(*(_self_))._field_k=(&(_57517_pptr.get()._field_Elem));
	__jule_func_result = _1e5514088_annotateKind(_self_, &(_57917_ptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1e551365e_annotateSptr(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _58443_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5557263_Sptr> _58517_ssptr = _1e555137d_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_58517_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5557263_Sptr> _58917_sptr = _1e555137d_Sptr((*(_58443_k)).ptr());;
	(*(_self_))._field_k=(&(_58517_ssptr.get()._field_Elem));
	__jule_func_result = _1e5514088_annotateKind(_self_, &(_58917_sptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1e551396c_annotateStruct(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _59445_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e47903e2_StructIns> _59517_s = _1e555256b_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_59517_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e47903e2_StructIns> _59917_s2 = _1e555256b_Struct((*(_59445_k)).ptr());;
	if ((_59517_s.get()._field_Generics.len() != _59917_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_59517_s.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e89d4c1a:;
		if (it != expr_end) {
			jule::I64 _60314_i = it - expr->begin();
			jule::Ptr<_1e554c555_InsGeneric> _60321_g = *it;
			{
				jule::Ptr<_1e554c555_InsGeneric> _60421_g2 = _59917_s2.get()._field_Generics[_60314_i];;
				if (_1e554e48b_Equal(_60321_g.get()._field_Kind, _60421_g2.get()._field_Kind)) {
					goto _iter_next_1e89d4c1a;
				};
				(*(_self_))._field_k=(&(_60321_g.get()._field_Kind));
				if ((!(_1e5514088_annotateKind(_self_, &(_60421_g2.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e89d4c1a:;
			++it;
			_60314_i++;
			goto _iter_begin_1e89d4c1a;
		}
		_iter_end_1e89d4c1a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e5513c7a_annotateAny(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _61642_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _61713_kind = _1e554e17d_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e89d7c62:;
		if (it != expr_end) {
			jule::I64 _61813_i = it - expr->begin();
			jule::Ptr<_1e4780b1e_GenericDecl> _61816_g = *it;
			{
				if ((_61713_kind != _61816_g.get()._field_Ident)) {
					goto _iter_next_1e89d7c62;
				};
				jule::Ptr<_1e554c555_InsGeneric> _62217_t = (*(_self_))._field_f.get()._field_Generics[_61813_i];;
				{
					
					if ((_62217_t == nullptr) || (_62217_t.get()._field_Kind == nullptr)) {
						_case_begin_1e89d9747:;
						{
							_1e5511b46_pushGeneric(_self_, _61642_k, _61813_i);
						}
					}
					else if ((!(_1e554e48b_Equal(_62217_t.get()._field_Kind, (*(_61642_k)))))) {
						_case_begin_1e89d97ad:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1e89d9604:;
				};
				(*((*(_self_))._field_k)).get()._field_Kind=(*(_61642_k)).get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1e89d7c62:;
			++it;
			_61813_i++;
			goto _iter_begin_1e89d7c62;
		}
		_iter_end_1e89d7c62:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e5514088_annotateKind(_1e55101c7_dynamicTypeAnnotation* _self_, jule::Ptr<_1e554dc82_TypeKind>* _63743_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1e5513c7a_annotateAny(_self_, _63743_k)) {
			_case_begin_1e89dbc55:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e5551119_Prim((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1e89dbcbb:;
			{
				__jule_func_result = _1e5511e54_annotatePrim(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e5551d2e_Arr((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1e89dbd32:;
			{
				__jule_func_result = _1e5512262_annotateArr(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e5552093_Slc((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1e89dbd98:;
			{
				__jule_func_result = _1e5512570_annotateSlc(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e5552a44_Map((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1e89dc11d:;
			{
				__jule_func_result = _1e5512c35_annotateMap(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e5552307_Fn((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1e89dc184:;
			{
				__jule_func_result = _1e5513043_annotateFn(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e55515e2_Ptr((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1e89dc1ea:;
			{
				__jule_func_result = _1e5513351_annotatePtr(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e555137d_Sptr((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1e89dc261:;
			{
				__jule_func_result = _1e551365e_annotateSptr(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e555256b_Struct((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1e89dc4b4:;
			{
				__jule_func_result = _1e551396c_annotateStruct(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1e89dbbde:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1e89dbb89:;
	};
}



inline jule::Bool _1e55142ec_annotate(_1e55101c7_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*(_self_))._field_p.get()._field_Kind));
	__jule_func_result = _1e5514088_annotateKind(_self_, &((*(_self_))._field_a.get()._field_Kind));
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e55101c7_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1e55150de_pushErrToken(_1e5514a8e_fnCallArgChecker* _self_, jule::Ptr<_20d155596_Token> _68231_token, jule::Str _68246_fmt, jule::Slice<jule::Any> _68259_args) {
	_1e54aee57_pushErr((*(_self_))._field_e.get()._field_s.ptr(), _68231_token, _68246_fmt, _68259_args);
}



inline void _1e551540d_pushErr(_1e5514a8e_fnCallArgChecker* _self_, jule::Str _68626_fmt, jule::Slice<jule::Any> _68639_args) {
	_1e55150de_pushErrToken(_self_, (*(_self_))._field_errorToken, _68626_fmt, _68639_args);
}



inline jule::Slice<jule::Ptr<_1e5462ca6_ParamIns>> _1e5515672_getParams(_1e5514a8e_fnCallArgChecker* _self_) {
	if (((((*(_self_))._field_f.get()._field_Params.len() > 0LL) && ((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1e545ecb4_IsSelf((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*(_self_))._field_f.get()._field_Params.slice(1LL);;
	};
	return (*(_self_))._field_f.get()._field_Params;;
}



inline jule::Bool _1e5515980_checkCounts(_1e5514a8e_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e5462ca6_ParamIns>>* _69931_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _70017_n = (*(_69931_params)).len();;
	if (((_70017_n > 0LL) && _1e545ecb4_IsSelf((*(_69931_params))[0LL].get()._field_Decl.ptr()))) {
		(_70017_n)--;
	};
	jule::I64 _70517_diff = (_70017_n - (*(_self_))._field_args.len());;
	{
		
		if ((_70517_diff == 0LL)) {
			_case_begin_1e89e7c83:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70017_n > 0LL) && (*(_69931_params))[(_70017_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1e89e7d0a:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70517_diff < 0LL) || (_70517_diff > (*(_69931_params)).len()))) {
			_case_begin_1e89e7d82:;
			{
				_1e551540d_pushErr(_self_, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1e89e7c0b:;
	};
	jule::Str _71617_idents = jule::Str();;
	for (; (_70517_diff > 0LL); (_70517_diff)--) {
		{
			_71617_idents+=(jule::Str(", ", 2) + (*(_69931_params))[(_70017_n - _70517_diff)].get()._field_Decl.get()._field_Ident);
		}
	_iter_next_1e89e9812:;
	}
	_iter_end_1e89e9812:;;
	(_71617_idents).mut_slice(2LL);;
	_1e551540d_pushErr(_self_, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(_71617_idents, &__jule_any_type5)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e5515dd1_checkArg(_1e5514a8e_fnCallArgChecker* _self_, jule::Ptr<_1e5462ca6_ParamIns>* _72632_p, jule::Ptr<_1e5522d00_Data>* _72651_arg, jule::Ptr<_20d155596_Token>* _72668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1e5465c87_parameterUsesGenerics(_72632_p, &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics)))) {
		__jule_func_result=(!((*(_72632_p)).get()._field_Decl.get()._field_Variadic));
		if (__jule_func_result) {
			_1e55101c7_dynamicTypeAnnotation _73025_dta = _1e55101c7_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72632_p)), ._field_a=(*(_72651_arg)), ._field_errorToken=(*(_72668_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1e55142ec_annotate(&_73025_dta);
		};
		if ((!(__jule_func_result))) {
			_1e55150de_pushErrToken(_self_, (*(_72668_errorToken)), jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1e54b9c53_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (*(_72632_p)).get()._field_Decl.get()._field_Mutable, (*(_72632_p)).get()._field_Decl.get()._field_Reference, &((*(_72632_p)).get()._field_Kind), _72651_arg, _72668_errorToken)) {
		_1e54b6d3d_checkAssignType((*(_self_))._field_e.get()._field_s, (*(_72632_p)).get()._field_Decl.get()._field_Reference, &((*(_72632_p)).get()._field_Kind), _72651_arg, (*(_72668_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e5516288_push(_1e5514a8e_fnCallArgChecker* _self_, jule::Ptr<_1e5462ca6_ParamIns>* _75428_p, jule::Ptr<_1e4777d47_Expr> _75446_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e554dc82_TypeKind> _75517_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _75613_oldImmut = (*(_self_))._field_e.get()._field_immutable;;
	(*(_self_))._field_e.get()._field_immutable=(!((*(_75428_p)).get()._field_Decl.get()._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(_75428_p)).get()._field_Decl.get()._field_Variadic)))) {
		(*(_self_))._field_e.get()._field_prefix=(*(_75428_p)).get()._field_Kind;
	} else {
		(*(_self_))._field_e.get()._field_prefix=nullptr;
	};
	jule::Ptr<_1e5522d00_Data> _76417_d = _1e553eb74_evalExprKind((*(_self_))._field_e, _75446_arg.get()._field_Kind);;
	(*(_self_))._field_e.get()._field_prefix=_75517_old;
	(*(_self_))._field_e.get()._field_immutable=_75613_oldImmut;
	if ((_76417_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1e5515dd1_checkArg(_self_, _75428_p, &(_76417_d), &(_75446_arg.get()._field_Token));
	(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(_76417_d.get()._field_Model);;
	return __jule_func_result;;
}



inline jule::Bool _1e5516640_pushVariadic(_1e5514a8e_fnCallArgChecker* _self_, jule::Ptr<_1e5462ca6_ParamIns>* _77836_p, jule::I64 _77854_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _78017_variadiced = false;;
	jule::Bool _78113_more = ((_77854_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1e5454ec9_SliceExprModel> _78217_model = jule::new_ptr<_1e5454ec9_SliceExprModel>(_1e5454ec9_SliceExprModel{._field_ElemKind=(*(_77836_p)).get()._field_Kind, });;
	jule::Ptr<_1e554dc82_TypeKind> _78617_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _79113_variadic = (*(_77836_p)).get()._field_Kind.get()._field_Variadic;;
	(*(_77836_p)).get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		(*(_77836_p)).get()._field_Kind.get()._field_Variadic=_79113_variadic;
	});;
	for (; (_77854_i < (*(_self_))._field_args.len()); (_77854_i)++) {
		{
			jule::Ptr<_1e4777d47_Expr> _79821_arg = (*(_self_))._field_args[_77854_i];;
			{
				auto &_match_expr{ _79821_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type82) {
					_case_begin_1e8a07963:;
					{
						(*(_self_))._field_e.get()._field_prefix=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(jule::new_ptr<_1e5557bc0_Slc>(_1e5557bc0_Slc{._field_Elem=(*(_77836_p)).get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_1e8a08249:;
					{
						(*(_self_))._field_e.get()._field_prefix=(*(_77836_p)).get()._field_Kind;
					}
				}
				_match_end_1e8a081e4:;
			};
			jule::Ptr<_1e5522d00_Data> _81121_d = _1e553ee82_eval((*(_self_))._field_e, _79821_arg);;
			if ((_81121_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1e8a06dc4;
			};
			if (_81121_d.get()._field_Kind.get()._field_Variadic) {
				_78017_variadiced=true;
				(*(_77836_p)).get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1e5515dd1_checkArg(_self_, _77836_p, &(_81121_d), &(_79821_arg.get()._field_Token)));
				{
					auto &_match_expr{ _81121_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1e8a0a3d3:;
						{
							_78217_model=_81121_d.get()._field_Model.cast_ptr<_1e5454ec9_SliceExprModel>(&__jule_any_type83);
							_78217_model.get()._field_ElemKind=(*(_77836_p)).get()._field_Kind;
						}
					}
					else {
						_case_begin_1e8a0b15e:;
						{
							_78217_model=nullptr;
							(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(_81121_d.get()._field_Model);;
						}
					}
					_match_end_1e8a0b24c:;
				};
				(_77854_i)++;
				goto _iter_end_1e8a06dc4;
			};
			__jule_func_result=(__jule_func_result && _1e5515dd1_checkArg(_self_, _77836_p, &(_81121_d), &(_79821_arg.get()._field_Token)));
			_78217_model.get()._field_Elems = jule::alloc_for_append(_78217_model.get()._field_Elems,1);_78217_model.get()._field_Elems.__push(_81121_d.get()._field_Model);;
		}
	_iter_next_1e8a06dc4:;
	}
	_iter_end_1e8a06dc4:;;
	(*(_self_))._field_e.get()._field_prefix=_78617_old;
	if ((_78017_variadiced && _78113_more)) {
		_1e55150de_pushErrToken(_self_, (*(_self_))._field_args[_77854_i].get()._field_Token, jule::Str("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_78217_model != nullptr)) {
		(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(jule::Any(_78217_model, &__jule_any_type83));;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e551694d_checkArgs(_1e5514a8e_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e5462ca6_ParamIns>>* _85433_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _85513_arg = (*(_self_))._field_e.get()._field_arg;;
	(*(_self_))._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I64 _85917_i = 0LL;;
	if ((((*(_85433_params)).len() > 0LL) && _1e545ecb4_IsSelf((*(_85433_params))[0LL].get()._field_Decl.ptr()))) {
		(_85917_i)++;
	};
	_julec_label_iter:;
	while ((_85917_i < (*(_85433_params)).len())) {
		{
			jule::Ptr<_1e5462ca6_ParamIns> _86621_p = (*(_85433_params))[_85917_i];;
			{
				
				if (_86621_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1e8a124ea:;
					{
						__jule_func_result=(_1e5516640_pushVariadic(_self_, &(_86621_p), _85917_i) && __jule_func_result);
						goto _iter_end_1e8a10a9d;
					}
				}
				else if (((*(_self_))._field_args.len() <= _85917_i)) {
					_case_begin_1e8a11c25:;
					{
						__jule_func_result=false;
						goto _iter_end_1e8a10a9d;
					}
				}
				else {
					_case_begin_1e8a12154:;
					{
						__jule_func_result=(_1e5516288_push(_self_, &(_86621_p), (*(_self_))._field_args[_85917_i]) && __jule_func_result);
					}
				}
				_match_end_1e8a120dd:;
			};
			(_85917_i)++;
		}
	_iter_next_1e8a10a9d:;
	}
	_iter_end_1e8a10a9d:;;
	(*(_self_))._field_e.get()._field_arg=_85513_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e5516bd4_checkDynamicTypeAnnotation(_1e5514a8e_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a14475:;
		if (it != expr_end) {
			jule::Ptr<_1e554c555_InsGeneric> _88616_g = *it;
			{
				if ((_88616_g == nullptr)) {
					_1e551540d_pushErr(_self_, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1e8a14475:;
			++it;
			goto _iter_begin_1e8a14475;
		}
		_iter_end_1e8a14475:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e5516e59_check(_1e5514a8e_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1e5462ca6_ParamIns>> _89617_params = _1e5515672_getParams(_self_);;
	__jule_func_result=_1e5515980_checkCounts(_self_, &(_89617_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1e551694d_checkArgs(_self_, &(_89617_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1e5516bd4_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5514a8e_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1e55179a4_pushErr(_1e5517498_structLitChecker* _self_, jule::Ptr<_20d155596_Token> _91726_token, jule::Str _91741_fmt, jule::Slice<jule::Any> _91754_args) {
	_1e5524d79_pushErr((*(_self_))._field_e.ptr(), _91726_token, _91741_fmt, _91754_args);
}



inline void _1e5517cc3_pushSugggestion(_1e5517498_structLitChecker* _self_, jule::Str _92234_fmt, jule::Slice<jule::Any> _92247_args) {
	_1e5525198_pushSugggestion((*(_self_))._field_e.ptr(), _92234_fmt, _92247_args);
}



inline void _1e551818b_pushMatch(_1e5517498_structLitChecker* _self_, jule::Ptr<_1e4790205_FieldIns>* _92633_f, jule::Ptr<_1e5522d00_Data>* _92652_d, jule::Ptr<_20d155596_Token>* _92667_errorToken) {
	;
	if (_1e54b9c53_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (!((*(_self_))._field_e.get()._field_immutable)), false, &((*(_92633_f)).get()._field_Kind), _92652_d, _92667_errorToken)) {
		_1e54b6d3d_checkAssignType((*(_self_))._field_e.get()._field_s, false, &((*(_92633_f)).get()._field_Kind), _92652_d, (*(_92667_errorToken)));
	};
	(*(_self_))._field_args = jule::alloc_for_append((*(_self_))._field_args,1);(*(_self_))._field_args.__push(jule::new_ptr<_1e545355a_StructArgExprModel>(_1e545355a_StructArgExprModel{._field_Field=(*(_92633_f)), ._field_Expr=(*(_92652_d)).get()._field_Model}));;
}



inline void _1e55184aa_checkPair(_1e5517498_structLitChecker* _self_, jule::Ptr<_1e477c7a8_FieldExprPair>* _93933_pair, jule::Slice<jule::Ptr<_1e4777d47_Expr>>* _93960_exprs) {
	jule::Ptr<_1e4790205_FieldIns> _94117_f = _1e474c48c_FindField((*(_self_))._field_s.ptr(), (*(_93933_pair)).get()._field_Field.get()._field_Kind);;
	if ((_94117_f == nullptr)) {
		_1e55179a4_pushErr(_self_, (*(_93933_pair)).get()._field_Field, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_93933_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		return;;
	};
	if ((!(_1e54b062d_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _94117_f.get()._field_Decl.get()._field_Public, _94117_f.get()._field_Decl.get()._field_Token)))) {
		_1e55179a4_pushErr(_self_, (*(_93933_pair)).get()._field_Field, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_93933_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		_1e5517cc3_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto expr = _93960_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a1db66:;
		if (it != expr_end) {
			jule::Ptr<_1e4777d47_Expr> _95321_expr = *it;
			{
				{
					auto &_match_expr{ _95321_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1e8a1e4d5:;
						{
							jule::Ptr<_1e477c7a8_FieldExprPair> _95625_dpair = _95321_expr.get()._field_Kind.cast_ptr<_1e477c7a8_FieldExprPair>(&__jule_any_type84);;
							{
								
								if (((*(_93933_pair)) == _95625_dpair)) {
									_case_begin_1e8a20481:;
									{
										goto _iter_end_1e8a1db66;
									}
								}
								else if (((*(_93933_pair)).get()._field_Field.get()._field_Kind == _95625_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1e8a20508:;
									{
										_1e55179a4_pushErr(_self_, (*(_93933_pair)).get()._field_Field, jule::Str("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(_93933_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
										goto _iter_end_1e8a1db66;
									}
								}
								_match_end_1e8a203c6:;
							};
						}
					}
					_match_end_1e8a1e32b:;
				};
			}
			_iter_next_1e8a1db66:;
			++it;
			goto _iter_begin_1e8a1db66;
		}
		_iter_end_1e8a1db66:;
	};
	jule::Ptr<_1e554dc82_TypeKind> _96717_prefix = (*(_self_))._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_96717_prefix;
	});;
	(*(_self_))._field_e.get()._field_prefix=_94117_f.get()._field_Kind;
	jule::Ptr<_1e5522d00_Data> _97117_d = _1e553eb74_evalExprKind((*(_self_))._field_e, (*(_93933_pair)).get()._field_Expr.get()._field_Kind);;
	if ((_97117_d == nullptr)) {
		return;;
	};
	_1e551818b_pushMatch(_self_, &(_94117_f), &(_97117_d), &((*(_93933_pair)).get()._field_Field));
}



inline jule::Bool _1e55187b8_readyExprs(_1e5517498_structLitChecker* _self_, jule::Slice<jule::Ptr<_1e4777d47_Expr>>* _97834_exprs) {
	jule::Bool _97917_ok = true;;
	{
		auto expr = _97834_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a23c15:;
		if (it != expr_end) {
			jule::I64 _98014_i = it - expr->begin();
			jule::Ptr<_1e4777d47_Expr> _98021_expr = *it;
			{
				{
					auto &_match_expr{ _98021_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1e8a2495d:;
						{
							jule::Ptr<_1e477dc4e_KeyValPair> _98325_pair = _98021_expr.get()._field_Kind.cast_ptr<_1e477dc4e_KeyValPair>(&__jule_any_type85);;
							{
								auto &_match_expr{ _98325_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type86) {
									_case_begin_1e8a26498:;
									{
										goto _match_end_1e8a2570b;
									}
								}
								else {
									_case_begin_1e8a25981:;
									{
										_1e55179a4_pushErr(_self_, _98325_pair.get()._field_Colon, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
										_97917_ok=false;
										goto _iter_next_1e8a23c15;
									}
								}
								_match_end_1e8a2570b:;
							};
							(*(_97834_exprs))[_98014_i].get()._field_Kind=jule::Any(jule::new_ptr<_1e477c7a8_FieldExprPair>(_1e477c7a8_FieldExprPair{._field_Field=_98325_pair.get()._field_Key.get()._field_Token, ._field_Expr=_98325_pair.get()._field_Val}), &__jule_any_type84);
						}
					}
					_match_end_1e8a247a4:;
				};
			}
			_iter_next_1e8a23c15:;
			++it;
			_98014_i++;
			goto _iter_begin_1e8a23c15;
		}
		_iter_end_1e8a23c15:;
	};
	return _97917_ok;;
}



inline void _1e5518a3d_check(_1e5517498_structLitChecker* _self_, jule::Slice<jule::Ptr<_1e4777d47_Expr>>* _100229_exprs) {
	if (((*(_100229_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1e55187b8_readyExprs(_self_, _100229_exprs)))) {
		return;;
	};
	jule::Bool _100917_paired = false;;
	{
		auto expr = _100229_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a246e9:;
		if (it != expr_end) {
			jule::I64 _101014_i = it - expr->begin();
			jule::Ptr<_1e4777d47_Expr> _101021_expr = *it;
			{
				{
					auto &_match_expr{ _101021_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1e8a2d15e:;
						{
							jule::Ptr<_1e477c7a8_FieldExprPair> _101325_pair = _101021_expr.get()._field_Kind.cast_ptr<_1e477c7a8_FieldExprPair>(&__jule_any_type84);;
							if (((_101014_i > 0LL) && (!(_100917_paired)))) {
								_1e55179a4_pushErr(_self_, _101325_pair.get()._field_Field, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_100917_paired=true;
							_1e55184aa_checkPair(_self_, &(_101325_pair), _100229_exprs);
						}
					}
					else {
						_case_begin_1e8a289c8:;
						{
							if (_100917_paired) {
								_1e55179a4_pushErr(_self_, _101021_expr.get()._field_Token, jule::Str("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_101014_i >= (*(_self_))._field_s.get()._field_Fields.len())) {
								_1e55179a4_pushErr(_self_, _101021_expr.get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
								goto _iter_next_1e8a246e9;
							};
							jule::Ptr<_1e4790205_FieldIns> _102825_field = (*(_self_))._field_s.get()._field_Fields[_101014_i];;
							if ((!(_1e54b062d_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _102825_field.get()._field_Decl.get()._field_Public, _102825_field.get()._field_Decl.get()._field_Token)))) {
								_1e55179a4_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1e5517cc3_pushSugggestion(_self_, jule::Str("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1e554dc82_TypeKind> _103625_prefix = (*(_self_))._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*(_self_))._field_e.get()._field_prefix=_103625_prefix;
							});;
							(*(_self_))._field_e.get()._field_prefix=_102825_field.get()._field_Kind;
							jule::Ptr<_1e5522d00_Data> _104025_d = _1e553eb74_evalExprKind((*(_self_))._field_e, _101021_expr.get()._field_Kind);;
							if ((_104025_d == nullptr)) {
								goto _iter_next_1e8a246e9;
							};
							_1e551818b_pushMatch(_self_, &(_102825_field), &(_104025_d), &(_101021_expr.get()._field_Token));
						}
					}
					_match_end_1e8a28852:;
				};
			}
			_iter_next_1e8a246e9:;
			++it;
			_101014_i++;
			goto _iter_begin_1e8a246e9;
		}
		_iter_end_1e8a246e9:;
	};
	if ((!(_100917_paired))) {
		jule::I64 _105117_n = (*(_self_))._field_s.get()._field_Fields.len();;
		jule::I64 _105221_diff = (_105117_n - (*(_100229_exprs)).len());;
		{
			
			if ((_105221_diff <= 0LL)) {
				_case_begin_1e8a3101e:;
				{
					return;;
				}
			}
			_match_end_1e8a30ded:;
		};
		jule::Str _105821_idents = jule::Str();;
		for (; (_105221_diff > 0LL); (_105221_diff)--) {
			{
				_105821_idents+=(jule::Str(", ", 2) + (*(_self_))._field_s.get()._field_Fields[(_105117_n - _105221_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1e8a31915:;
		}
		_iter_end_1e8a31915:;;
		(_105821_idents).mut_slice(2LL);;
		_1e55179a4_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(_105821_idents, &__jule_any_type5)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e5517498_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e54ca291_Var> _1e5519522_buildVar(_1e551907c_rangeChecker* _self_, jule::Ptr<_1e4786284_VarDecl>* _107728_decl) {
	jule::Ptr<_1e54ca291_Var> _107817_v = _1e546b85e_buildVar((*(_107728_decl)));;
	return _107817_v;;
}



inline void _1e55196ed_setSizeKey(_1e551907c_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _20d157d3a_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyA=_1e5519522_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1e5553160_TypeSymbol>(_1e5553160_TypeSymbol{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e8a353ca:;
			{
				(*(_self_))._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1e54c925c_IterRelation>(_1e54c925c_IterRelation{._field_Range=(*(_self_))._field_d.get()._field_Model.cast_ptr<_1e54ca291_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1e8a35375:;
	};
}



inline void _1e5519ab6_checkRangeExprValidity(_1e551907c_rangeChecker* _self_, jule::Ptr<_1e5522d00_Data>* _110846_d, jule::Ptr<_1e54ca291_Var>* _110857_key, jule::Ptr<_1e554dc82_TypeKind>* _110873_k) {
	jule::Bool _110917__mut = (*(_110857_key)).get()._field_Mutable;;
	if ((_110917__mut && (!(_1e5550404_Mutable((*(_110873_k)).ptr()))))) {
		_110917__mut=false;
	};
	_1e54b9c53_checkValidityForInitExpr((*(_self_))._field_sc.get()._field_s, _110917__mut, (*(_110857_key)).get()._field_Reference, &((*(_110857_key)).get()._field_Kind.get()._field_Kind), _110846_d, &((*(_self_))._field_rang.get()._field_InToken));
}



inline void _1e5519c92_checkSlice(_1e551907c_rangeChecker* _self_) {
	_1e55196ed_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _20d157d3a_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e5557bc0_Slc> _112717_slc = _1e5552093_Slc((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1e5519522_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1e5553160_TypeSymbol>(_1e5553160_TypeSymbol{._field_Kind=_112717_slc.get()._field_Elem});
	_1e5519ab6_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_112717_slc.get()._field_Elem));
}



inline void _1e5519e6d_checkArray(_1e551907c_rangeChecker* _self_) {
	_1e55196ed_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _20d157d3a_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e5559d6a_Arr> _114017_arr = _1e5551d2e_Arr((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1e5519522_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1e5553160_TypeSymbol>(_1e5553160_TypeSymbol{._field_Kind=_114017_arr.get()._field_Elem});
	_1e5519ab6_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_114017_arr.get()._field_Elem));
}



inline void _1e551a149_checkMapKeyA(_1e551907c_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _20d157d3a_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e5559276_Map> _115217_m = _1e5552a44_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyA=_1e5519522_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1e5553160_TypeSymbol>(_1e5553160_TypeSymbol{._field_Kind=_115217_m.get()._field_Key});
	jule::Ptr<_1e5522d00_Data> _115617_d = jule::new_ptr<_1e5522d00_Data>((*((*(_self_))._field_d)));;
	_115617_d.get()._field_Kind=_115217_m.get()._field_Key;
	_1e5519ab6_checkRangeExprValidity(_self_, &(_115617_d), &((*(_self_))._field_Kind.get()._field_KeyA), &(_115217_m.get()._field_Key));
}



inline void _1e551a325_checkMapKeyB(_1e551907c_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _20d157d3a_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e5559276_Map> _116717_m = _1e5552a44_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1e5519522_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1e5553160_TypeSymbol>(_1e5553160_TypeSymbol{._field_Kind=_116717_m.get()._field_Val});
	jule::Ptr<_1e5522d00_Data> _117117_d = jule::new_ptr<_1e5522d00_Data>((*((*(_self_))._field_d)));;
	_117117_d.get()._field_Kind=_116717_m.get()._field_Val;
	_1e5519ab6_checkRangeExprValidity(_self_, &(_117117_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_116717_m.get()._field_Val));
}



inline void _1e551a501_checkMap(_1e551907c_rangeChecker* _self_) {
	_1e551a149_checkMapKeyA(_self_);
	_1e551a325_checkMapKeyB(_self_);
}



inline void _1e551a6cc_checkStr(_1e551907c_rangeChecker* _self_) {
	_1e55196ed_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _20d157d3a_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1e5519522_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1e5553160_TypeSymbol>(_1e5553160_TypeSymbol{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1e551a941_check(_1e551907c_rangeChecker* _self_) {
	{
		
		if ((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1e8a48113:;
		}
		else if ((_1e5552093_Slc((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8a47a08:;
			{
				_1e5519c92_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1e5551d2e_Arr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8a47a6e:;
			{
				_1e5519e6d_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1e5552a44_Map((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8a47ad5:;
			{
				_1e551a501_checkMap(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1e8a47992:;
			{
				jule::Ptr<_1e55539ce_Prim> _120917_prim = _1e5551119_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (((_120917_prim != nullptr) && _1e5556c13_IsStr(_120917_prim.ptr()))) {
					_1e551a6cc_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1e8a478c6:;
	};
	_1e54aee57_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e551907c_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1e551b5ac_prepareTypes(_1e551b117_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1e5464c97_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1e551b832_prepareExprs(_1e551b117_retTypeChecker* _self_, jule::Ptr<_1e4777d47_Expr>* _123736_e) {
	if (((*(_123736_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_123736_e)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1e8a4d13a:;
			{
				(*(_self_))._field_exprs=(*(_123736_e)).get()._field_Kind.cast_ptr<_1e47789c4_TupleExpr>(&__jule_any_type87).get()._field_Expr;
			}
		}
		else {
			_case_begin_1e8a4d338:;
			{
				(*(_self_))._field_exprs = jule::alloc_for_append((*(_self_))._field_exprs,1);(*(_self_))._field_exprs.__push((*(_123736_e)));;
			}
		}
		_match_end_1e8a4ce70:;
	};
}



inline void _1e551ba0d_checkExprs(_1e551b117_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e5522d00_Data>> _125317_datas = jule::Slice<jule::Ptr<_1e5522d00_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a4ecc9:;
		if (it != expr_end) {
			jule::I64 _125414_i = it - expr->begin();
			jule::Ptr<_1e4777d47_Expr> _125421_expr = *it;
			{
				if ((_125414_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1e8a4ecc9;
				};
				jule::Ptr<_1e554dc82_TypeKind> _125921_t = (*(_self_))._field_types[_125414_i];;
				jule::Ptr<_1e5522d00_Data> _126121_d = _1e5540290_evalExpr(_1e54b6535_evalp((*(_self_))._field_sc.get()._field_s, jule::Trait<_1e5569c04_Lookup>((*(_self_))._field_sc, 0), _125921_t), _125421_expr);;
				if ((_126121_d == nullptr)) {
					goto _iter_next_1e8a4ecc9;
				};
				_125317_datas = jule::alloc_for_append(_125317_datas,1);_125317_datas.__push(_126121_d);;
				if (((!(_126121_d.get()._field_Mutable)) && _1e5550404_Mutable(_126121_d.get()._field_Kind.ptr()))) {
					_1e54aee57_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1e550d6e2_assignTypeChecker _127321_ac = _1e550d6e2_assignTypeChecker{._field_s=(*(_self_))._field_sc.get()._field_s, ._field_dest=_125921_t, ._field_d=_126121_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1e550e869_check(&_127321_ac);
			}
			_iter_next_1e8a4ecc9:;
			++it;
			_125414_i++;
			goto _iter_begin_1e8a4ecc9;
		}
		_iter_end_1e8a4ecc9:;
	};
	if ((_125317_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1e545884b_TupleExprModel>(_1e545884b_TupleExprModel{._field_Datas=_125317_datas}), &__jule_any_type88);
	} else if ((_125317_datas.len() == 1LL)) {
		(*(_self_))._field_model=_125317_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1e551bd1b_check(_1e551b117_retTypeChecker* _self_, jule::Ptr<_1e4777d47_Expr>* _129229_e) {
	_1e551b5ac_prepareTypes(_self_);
	_1e551b832_prepareExprs(_self_, _129229_e);
	jule::I64 _129613_n = (*(_self_))._field_exprs.len();;
	if (((_129613_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1e546214b_AnyVar((*(_self_))._field_f.get()._field_Decl.ptr())))) {
			_1e54aee57_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_129613_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1e5461436_IsVoid((*(_self_))._field_f.get()._field_Decl.ptr()))) {
		_1e54aee57_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_129613_n > (*(_self_))._field_types.len())) {
		_1e54aee57_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_129613_n < (*(_self_))._field_types.len())) {
		_1e54aee57_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1e551ba0d_checkExprs(_self_);
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e551b117_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e54a4149_ImportInfo> _1e551d4e3_FindPackage(_1e551cec6_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a5b016:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;;
				};
			}
			_iter_next_1e8a5b016:;
			++it;
			goto _iter_begin_1e8a5b016;
		}
		_iter_end_1e8a5b016:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e54a4149_ImportInfo> _1e551d801_SelectPackage(_1e551cec6_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a5c08e:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;;
				};
			}
			_iter_next_1e8a5c08e:;
			++it;
			goto _iter_begin_1e8a5c08e;
		}
		_iter_end_1e8a5c08e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e54ca291_Var> _1e551dba8_FindVar(_1e551cec6_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _1e552076a_findVar(_self_, _5226_ident, _5238_cppLinked, false);;
}



inline jule::Ptr<_1e554d08e_TypeAlias> _1e551e060_FindTypeAlias(_1e551cec6_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _1e5520bbb_findTypeAlias(_self_, _5832_ident, _5844_cppLinked, false);;
}



inline jule::Ptr<_1e4790018_Struct> _1e551e417_FindStruct(_1e551cec6_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a5e7bc:;
		if (it != expr_end) {
			jule::Ptr<_1e4790018_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;;
				};
			}
			_iter_next_1e8a5e7bc:;
			++it;
			goto _iter_begin_1e8a5e7bc;
		}
		_iter_end_1e8a5e7bc:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5460ec4_Fn> _1e551e7be_FindFn(_1e551cec6_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a60bb9:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;;
				};
			}
			_iter_next_1e8a60bb9:;
			++it;
			goto _iter_begin_1e8a60bb9;
		}
		_iter_end_1e8a60bb9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5472dc6_Trait> _1e551eacc_FindTrait(_1e551cec6_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a61d85:;
		if (it != expr_end) {
			jule::Ptr<_1e5472dc6_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;;
				};
			}
			_iter_next_1e8a61d85:;
			++it;
			goto _iter_begin_1e8a61d85;
		}
		_iter_end_1e8a61d85:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e547501b_Enum> _1e551edda_FindEnum(_1e551cec6_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a62c65:;
		if (it != expr_end) {
			jule::Ptr<_1e547501b_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1e8a62c65:;
			++it;
			goto _iter_begin_1e8a62c65;
		}
		_iter_end_1e8a62c65:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5476616_TypeEnum> _1e55201e8_FindTypeEnum(_1e551cec6_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a63b45:;
		if (it != expr_end) {
			jule::Ptr<_1e5476616_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;;
				};
			}
			_iter_next_1e8a63b45:;
			++it;
			goto _iter_begin_1e8a63b45;
		}
		_iter_end_1e8a63b45:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e54ca291_Var> _1e552076a_findVar(_1e551cec6_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_1e54ca291_Var> _12325_v = (*(_self_))._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;;
				};
			}
		_iter_next_1e8a65b14:;
		}
		_iter_end_1e8a65b14:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e8a65680:;
			if (it != expr_end) {
				jule::Ptr<_1e54ca291_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;;
					};
				}
				_iter_next_1e8a65680:;
				++it;
				goto _iter_begin_1e8a65680;
			}
			_iter_end_1e8a65680:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1e554d08e_TypeAlias> _1e5520bbb_findTypeAlias(_1e551cec6_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_1e554d08e_TypeAlias> _14225_ta = (*(_self_))._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;;
				};
			}
		_iter_next_1e8a68c38:;
		}
		_iter_end_1e8a68c38:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e8a687a4:;
			if (it != expr_end) {
				jule::Ptr<_1e554d08e_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;;
					};
				}
				_iter_next_1e8a687a4:;
				++it;
				goto _iter_begin_1e8a687a4;
			}
			_iter_end_1e8a687a4:;
		};
	};
	return nullptr;;
}



inline jule::Any _1e5521073_defByIdent(_1e551cec6_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a6aee3:;
		if (it != expr_end) {
			jule::Ptr<_1e54ca291_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v, &__jule_any_type8);;
				};
			}
			_iter_next_1e8a6aee3:;
			++it;
			goto _iter_begin_1e8a6aee3;
		}
		_iter_end_1e8a6aee3:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a6a553:;
		if (it != expr_end) {
			jule::Ptr<_1e554d08e_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta, &__jule_any_type67);;
				};
			}
			_iter_next_1e8a6a553:;
			++it;
			goto _iter_begin_1e8a6a553;
		}
		_iter_end_1e8a6a553:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a6bd90:;
		if (it != expr_end) {
			jule::Ptr<_1e4790018_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s, &__jule_any_type66);;
				};
			}
			_iter_next_1e8a6bd90:;
			++it;
			goto _iter_begin_1e8a6bd90;
		}
		_iter_end_1e8a6bd90:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a6d578:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f, &__jule_any_type65);;
				};
			}
			_iter_next_1e8a6d578:;
			++it;
			goto _iter_begin_1e8a6d578;
		}
		_iter_end_1e8a6d578:;
	};
	if (_15941_cppLinked) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a6e9db:;
		if (it != expr_end) {
			jule::Ptr<_1e5472dc6_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t, &__jule_any_type10);;
				};
			}
			_iter_next_1e8a6e9db:;
			++it;
			goto _iter_begin_1e8a6e9db;
		}
		_iter_end_1e8a6e9db:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a70767:;
		if (it != expr_end) {
			jule::Ptr<_1e547501b_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e, &__jule_any_type68);;
				};
			}
			_iter_next_1e8a70767:;
			++it;
			goto _iter_begin_1e8a70767;
		}
		_iter_end_1e8a70767:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a71119:;
		if (it != expr_end) {
			jule::Ptr<_1e5476616_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te, &__jule_any_type69);;
				};
			}
			_iter_next_1e8a71119:;
			++it;
			goto _iter_begin_1e8a71119;
		}
		_iter_end_1e8a71119:;
	};
	return nullptr;;
}



inline jule::Bool _1e55214c4_isDuplicatedIdent(_1e551cec6_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a71d95:;
		if (it != expr_end) {
			jule::Ptr<_1e54ca291_Var> *_21316_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21316_v))) != _21232_itself) && ((*(_21316_v)).get()._field_Ident == _21249_ident)) && ((*(_21316_v)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1e8a71d95:;
			++it;
			goto _iter_begin_1e8a71d95;
		}
		_iter_end_1e8a71d95:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a71d51:;
		if (it != expr_end) {
			jule::Ptr<_1e554d08e_TypeAlias> *_21916_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21916_ta))) != _21232_itself) && ((*(_21916_ta)).get()._field_Ident == _21249_ident)) && ((*(_21916_ta)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1e8a71d51:;
			++it;
			goto _iter_begin_1e8a71d51;
		}
		_iter_end_1e8a71d51:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a72d63:;
		if (it != expr_end) {
			jule::Ptr<_1e4790018_Struct> *_22516_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22516_s))) != _21232_itself) && ((*(_22516_s)).get()._field_Ident == _21249_ident)) && ((*(_22516_s)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1e8a72d63:;
			++it;
			goto _iter_begin_1e8a72d63;
		}
		_iter_end_1e8a72d63:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a744b3:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> *_23116_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_23116_f))) != _21232_itself) && ((*(_23116_f)).get()._field_Ident == _21249_ident)) && ((*(_23116_f)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1e8a744b3:;
			++it;
			goto _iter_begin_1e8a744b3;
		}
		_iter_end_1e8a744b3:;
	};
	if (_21261_cppLinked) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a76927:;
		if (it != expr_end) {
			jule::Ptr<_1e5472dc6_Trait> *_24116_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24116_t))) != _21232_itself) && ((*(_24116_t)).get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1e8a76927:;
			++it;
			goto _iter_begin_1e8a76927;
		}
		_iter_end_1e8a76927:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a76eee:;
		if (it != expr_end) {
			jule::Ptr<_1e547501b_Enum> *_24716_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24716_e))) != _21232_itself) && ((*(_24716_e)).get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1e8a76eee:;
			++it;
			goto _iter_begin_1e8a76eee;
		}
		_iter_end_1e8a76eee:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a781ed:;
		if (it != expr_end) {
			jule::Ptr<_1e5476616_TypeEnum> *_25316_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25316_te))) != _21232_itself) && ((*(_25316_te)).get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1e8a781ed:;
			++it;
			goto _iter_begin_1e8a781ed;
		}
		_iter_end_1e8a781ed:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e551cec6_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e55231da_IsNil(_1e5522d00_Data* _self_) {
	return _1e554ebb7_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1e552344e_IsVoid(_1e5522d00_Data* _self_) {
	return _1e554ee2b_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1e55236b3_IsConst(_1e5522d00_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1e55239c1_GoodOperand(_1e5522d00_Data* _self_, jule::Ptr<_1e5522d00_Data>* _10031_other) {
	if ((_1e5551aba_TypeEnum((*(_10031_other)).get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1e5551119_Prim((*(_10031_other)).get()._field_Kind.ptr()) == nullptr) || (!(_1e5556e77_IsAny(_1e5551119_Prim((*(_10031_other)).get()._field_Kind.ptr()).ptr())))) && (_1e55527d0_Trait((*(_10031_other)).get()._field_Kind.ptr()) == nullptr)) && (!(_1e554ebb7_IsNil((*(_self_))._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5522d00_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5523d78_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1e5524d79_pushErr(_1e552486d_Eval* _self_, jule::Ptr<_20d155596_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_1e54aee57_pushErr((*(_self_))._field_s.ptr(), _13126_token, _13141_fmt, _13154_args);
}



inline void _1e5525198_pushSugggestion(_1e552486d_Eval* _self_, jule::Str _13634_fmt, jule::Slice<jule::Any> _13647_args) {
	_1e54b0276_pushSugggestion((*(_self_))._field_s.ptr(), _13634_fmt, _13647_args);
}



inline void _1e5525374_allowBuiltin(_1e552486d_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1e5525550_disallowBuiltin(_1e552486d_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1e55257b4_isUnsafe(_1e552486d_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1e5525a28_isGlobal(_1e552486d_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1e8aaca90:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e8aabe9b:;
			{
				return false;;
			}
		}
		_match_end_1e8aac51d:;
	};
}



inline jule::Bool _1e5525d03_applyNumericPrefix(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data>* _16342_d) {
	if ((((((*(_16342_d)) == nullptr) || (!(_1e55236b3_IsConst((*(_16342_d)).ptr())))) || (_1e5551119_Prim((*(_16342_d)).get()._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1e55539ce_Prim> _17013_prim = _1e5551119_Prim((*(_self_))._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1e544621d_IsFloat(_1e5553d42_Str(_17013_prim.ptr()))) {
			_case_begin_1e8aaec7e:;
			{
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>((*((*(_self_))._field_prefix)));
				_1e544a222_SetF64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1e54494a7_AsF64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1e544586b_IsSigInt(_1e5553d42_Str(_17013_prim.ptr()))) {
			_case_begin_1e8aaece5:;
			{
				if ((!(_1e550a711_sigAssignable(_1e5553d42_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>((*((*(_self_))._field_prefix)));
				_1e544972c_SetI64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1e5448ece_AsI64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1e5445b57_IsUnsigInt(_1e5553d42_Str(_17013_prim.ptr()))) {
			_case_begin_1e8aaed5b:;
			{
				if ((!(_1e550a843_unsigAssignable(_1e5553d42_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>((*((*(_self_))._field_prefix)));
				_1e54499a2_SetU64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1e5449243_AsU64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		_match_end_1e8aaea5e:;
	};
	return true;;
}



inline jule::Ptr<_1e5522d00_Data> _1e5526067_litNil(_1e552486d_Eval* _self_) {
	jule::Ptr<_1e54469c1_Const> _20217_constant = static__1e5447bc0_NewNil();;
	return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=jule::Any(_20217_constant, &__jule_any_type47), ._field_Constant=_20217_constant});;
}



inline jule::Ptr<_1e5522d00_Data> _1e5526375_litStr(_1e552486d_Eval* _self_, jule::Ptr<_1e4778d7b_LitExpr>* _21122_l) {
	jule::Str _21217_s = (*(_21122_l)).get()._field_Value.slice(1LL, ((*(_21122_l)).get()._field_Value.len() - 1LL));;
	if (_20d1568e9_IsRawStr((*(_21122_l)).get()._field_Value)) {
		_21217_s=_1e550a997_ToRawStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	} else {
		_21217_s=_1e550ac94_ToStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	};
	jule::Ptr<_1e54469c1_Const> _21817_constant = static__1e544772a_NewStr(_21217_s);;
	return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_21817_constant, &__jule_any_type47), ._field_Constant=_21817_constant});;
}



inline jule::Ptr<_1e5522d00_Data> _1e5526683_litBool(_1e552486d_Eval* _self_, jule::Ptr<_1e4778d7b_LitExpr>* _23023_l) {
	jule::Ptr<_1e54469c1_Const> _23117_constant = static__1e5447483_NewBool(((*(_23023_l)).get()._field_Value == jule::Str("true", 4)));;
	return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_23117_constant, &__jule_any_type47), ._field_Constant=_23117_constant});;
}



inline jule::Ptr<_1e5522d00_Data> _1e5526991_litRune(_1e552486d_Eval* _self_, jule::Ptr<_1e4778d7b_LitExpr>* _24223_l) {
	;
	;
	jule::Str _24713_lt = (*(_24223_l)).get()._field_Value.slice(1LL, ((*(_24223_l)).get()._field_Value.len() - 1LL));;
	jule::I32 _24813_r = _1e54e395d_ToRune(static_cast<jule::Slice<jule::U8>>(_24713_lt));;
	jule::Ptr<_1e5522d00_Data> _24917_data = jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Constant=static__1e5446e44_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24813_r)))});;
	jule::Bool _25313_isAscii = _1e54e37d7_IsAscii(_24813_r);;
	if (_25313_isAscii) {
		_24917_data.get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_24917_data.get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_24917_data.get()._field_Mutable=true;
	_24917_data.get()._field_Model=jule::Any(jule::new_ptr<_1e545c960_RuneExprModel>(_1e545c960_RuneExprModel{._field_Code=_24813_r}), &__jule_any_type89);
	_24917_data.get()._field_IsRune=true;
	_24917_data.get()._field_untyped=true;
	return _24917_data;;
}



inline jule::Ptr<_1e5522d00_Data> _1e5526c9e_litFloat(_1e552486d_Eval* _self_, jule::Ptr<_1e4778d7b_LitExpr>* _27124_l) {
	;
	jule::F64 _27313_f = ({
		auto except = _1e5434195_ParseFloat((*(_27124_l)).get()._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1e54469c1_Const> _27417_constant = static__1e54479c2_NewF64(_27313_f);;
	return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_untyped=true, ._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_27417_constant, &__jule_any_type47), ._field_Constant=_27417_constant});;
}



inline jule::Ptr<_1e5522d00_Data> _1e55270ac_litInt(_1e552486d_Eval* _self_, jule::Ptr<_1e4778d7b_LitExpr>* _28626_l) {
	;
	jule::Str _28917_lit = (*(_28626_l)).get()._field_Value;;
	jule::I64 _29017_base = 0LL;;
	{
		
		if (_242eae332_HasPrefix(_28917_lit, jule::Str("0x", 2))) {
			_case_begin_1e8ac1675:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=16LLU;
			}
		}
		else if (_242eae332_HasPrefix(_28917_lit, jule::Str("0b", 2))) {
			_case_begin_1e8ac16db:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=2LLU;
			}
		}
		else if (_242eae332_HasPrefix(_28917_lit, jule::Str("0o", 2))) {
			_case_begin_1e8ac1389:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=8LLU;
			}
		}
		else if (((_28917_lit[0LL] == '0') && (_28917_lit.len() > 1LL))) {
			_case_begin_1e8ac1400:;
			{
				(_28917_lit).mut_slice(1LL);;
				_29017_base=8LLU;
			}
		}
		else {
			_case_begin_1e8ac1323:;
			{
				_29017_base=10LLU;
			}
		}
		_match_end_1e8ac12ac:;
	};
	jule::Ptr<_1e5522d00_Data> _31017_d = jule::new_ptr<_1e5522d00_Data>();;
	jule::Bool _31217_ok = true;;
	jule::I64 _31313_sig = ({
		auto except = _1e542cba5_ParseInt(_28917_lit, _29017_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_31217_ok=false;

			0LL;
		});
	});;
	if (_31217_ok) {
		_31017_d.get()._field_Constant=static__1e5446e44_NewI64(_31313_sig);
		_31017_d.get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _32317_unsig = ({
			auto except = _1e542c743_ParseUint(_28917_lit, _29017_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1e5524d79_pushErr(_self_, (*(_28626_l)).get()._field_Token, jule::Str("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1e5525198_pushSugggestion(_self_, jule::Str("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_31017_d.get()._field_Constant=static__1e54471db_NewU64(_32317_unsig);
		_31017_d.get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_31017_d.get()._field_Model=jule::Any(_31017_d.get()._field_Constant, &__jule_any_type47);
	if ((!(_1e5525d03_applyNumericPrefix(_self_, &(_31017_d))))) {
		_1e55489c4_fitBitsize(&(_31017_d));
	};
	_31017_d.get()._field_Mutable=true;
	_31017_d.get()._field_untyped=true;
	return _31017_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e55273ba_litNum(_1e552486d_Eval* _self_, jule::Ptr<_1e4778d7b_LitExpr>* _34626_l) {
	{
		
		if (_20d157554_IsFloat((*(_34626_l)).get()._field_Value)) {
			_case_begin_1e8ac97c1:;
			{
				return _1e5526c9e_litFloat(_self_, _34626_l);;
			}
		}
		else {
			_case_begin_1e8ac90c8:;
			{
				return _1e55270ac_litInt(_self_, _34626_l);;
			}
		}
		_match_end_1e8ac900c:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e55276c8_evalLit(_1e552486d_Eval* _self_, jule::Ptr<_1e4778d7b_LitExpr> _35526_lit) {
	{
		
		if (_1e47791cd_IsNil(_35526_lit.ptr())) {
			_case_begin_1e8aca8d2:;
			{
				return _1e5526067_litNil(_self_);;
			}
		}
		else if (_20d156652_IsStr(_35526_lit.get()._field_Value)) {
			_case_begin_1e8aca30a:;
			{
				return _1e5526375_litStr(_self_, &(_35526_lit));;
			}
		}
		else if (_20d1572ac_IsBool(_35526_lit.get()._field_Value)) {
			_case_begin_1e8aca382:;
			{
				return _1e5526683_litBool(_self_, &(_35526_lit));;
			}
		}
		else if (_20d156b91_IsRune(_35526_lit.get()._field_Value)) {
			_case_begin_1e8aca409:;
			{
				return _1e5526991_litRune(_self_, &(_35526_lit));;
			}
		}
		else if (_20d1577eb_IsNum(_35526_lit.get()._field_Value)) {
			_case_begin_1e8aca607:;
			{
				return _1e55273ba_litNum(_self_, &(_35526_lit));;
			}
		}
		else {
			_case_begin_1e8ac9d21:;
			{
				return nullptr;;
			}
		}
		_match_end_1e8ac9c55:;
	};
}



inline jule::Any _1e55279d6_findBuiltins(_1e552486d_Eval* _self_, jule::Str _37231_ident) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1e8acc84b:;
			{
				jule::Any _37521_def = _1e55487b5_findBuiltinsImport(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_1e54a4149_ImportInfo>(1));;
				if ((_37521_def != nullptr)) {
					return _37521_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1e8acccad:;
			{
				jule::Any _38021_def = _1e5549453_findBuiltinsSema(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_1e54ac295_Sema>(3));;
				if ((_38021_def != nullptr)) {
					return _38021_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1e8accd24:;
			{
				jule::Any _38521_def = _1e5549453_findBuiltinsSema(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_1e548c4a6_scopeChecker>(0).get()._field_s);;
				if ((_38521_def != nullptr)) {
					return _38521_def;;
				};
			}
		}
		_match_end_1e8acc0a9:;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1e557d7c8_findBuiltinDef(_37231_ident);;
}



inline jule::Any _1e5527d8d_getDef(_1e552486d_Eval* _self_, jule::Str _39625_ident, jule::Bool _39637_cppLinked) {
	jule::Ptr<_1e54ca291_Var> _40117_v = _1e5569c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e5568571_FindVar((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_40117_v != nullptr)) {
		return jule::Any(_40117_v, &__jule_any_type8);;
	};
	jule::Ptr<_1e554d08e_TypeAlias> _40617_ta = _1e5569c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e5568928_FindTypeAlias((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_40617_ta != nullptr)) {
		return jule::Any(_40617_ta, &__jule_any_type67);;
	};
	if ((!(_39637_cppLinked))) {
		jule::Ptr<_1e547501b_Enum> _41221_enm = _1e5569c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e55697a3_FindEnum((*(_self_))._field_lookup, _39625_ident);;
		if ((_41221_enm != nullptr)) {
			return jule::Any(_41221_enm, &__jule_any_type68);;
		};
		jule::Ptr<_1e5476616_TypeEnum> _41721_tenm = _1e5569c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e5569ab1_FindTypeEnum((*(_self_))._field_lookup, _39625_ident);;
		if ((_41721_tenm != nullptr)) {
			return jule::Any(_41721_tenm, &__jule_any_type69);;
		};
	};
	jule::Ptr<_1e5460ec4_Fn> _42317_f = _1e5569c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e5569187_FindFn((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_42317_f != nullptr)) {
		return jule::Any(_42317_f, &__jule_any_type65);;
	};
	jule::Ptr<_1e4790018_Struct> _42817_s = _1e5569c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e5568cd0_FindStruct((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_42817_s != nullptr)) {
		return jule::Any(_42817_s, &__jule_any_type66);;
	};
	return _1e55279d6_findBuiltins(_self_, _39625_ident);;
}



inline void _1e8ae3e7d_pushReference(_1e552486d_Eval* _self_, jule::Ptr<_1e5463b75_FnIns>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e8ae86be:;
			{
				jule::Ptr<_1e548c4a6_scopeChecker> _43921_sc = _1e5490861_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1e548c4a6_scopeChecker>(0));;
				if ((!(_1e8ae65e0_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_1e546778e_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_1e8ae5336:;
			{
				if ((((*(_self_))._field_owner != nullptr) && (!(_1e8ae65e0_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_1e546778e_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_1e8ae52d1:;
	};
}

inline void _1e8b07c72_pushReference(_1e552486d_Eval* _self_, jule::Ptr<_1e54ca291_Var>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e8b0c282:;
			{
				jule::Ptr<_1e548c4a6_scopeChecker> _43921_sc = _1e5490861_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1e548c4a6_scopeChecker>(0));;
				if ((!(_1e8b0a34b_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_1e546778e_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_1e8b09092:;
			{
				if ((((*(_self_))._field_owner != nullptr) && (!(_1e8b0a34b_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_1e546778e_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_1e8b0903c:;
	};
}

inline void _1e8b98164_pushReference(_1e552486d_Eval* _self_, jule::Ptr<_1e47903e2_StructIns>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e8b992ec:;
			{
				jule::Ptr<_1e548c4a6_scopeChecker> _43921_sc = _1e5490861_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1e548c4a6_scopeChecker>(0));;
				if ((!(_1e8b9a82b_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_1e546778e_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1e8b99572:;
			{
				if ((((*(_self_))._field_owner != nullptr) && (!(_1e8b9a82b_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_1e546778e_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_1e8b9951c:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e5528421__evalEnum(_1e552486d_Eval* _self_, jule::Ptr<_1e547501b_Enum> _45028_enm) {
	return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_45028_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1e5522d00_Data> _1e55287c8_evalEnum(_1e552486d_Eval* _self_, jule::Ptr<_1e547501b_Enum> _45931_enm, jule::Ptr<_20d155596_Token> _45943_errorToken) {
	if ((!(_1e54b062d_isAccessibleDefine((*(_self_))._field_s.ptr(), _45931_enm.get()._field_Public, _45931_enm.get()._field_Token)))) {
		_1e5524d79_pushErr(_self_, _45943_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_45931_enm.get()._field_Ident, &__jule_any_type5)}));
		_1e5525198_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1e5528421__evalEnum(_self_, _45931_enm);;
}



inline jule::Ptr<_1e5522d00_Data> _1e5528ad6__evalTypeEnum(_1e552486d_Eval* _self_, jule::Ptr<_1e5476616_TypeEnum> _46832_enm) {
	return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_46832_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1e5522d00_Data> _1e5528e8d_evalTypeEnum(_1e552486d_Eval* _self_, jule::Ptr<_1e5476616_TypeEnum> _47735_enm, jule::Ptr<_20d155596_Token> _47751_errorToken) {
	if ((!(_1e54b062d_isAccessibleDefine((*(_self_))._field_s.ptr(), _47735_enm.get()._field_Public, _47735_enm.get()._field_Token)))) {
		_1e5524d79_pushErr(_self_, _47751_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_47735_enm.get()._field_Ident, &__jule_any_type5)}));
		_1e5525198_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1e5528ad6__evalTypeEnum(_self_, _47735_enm);;
}



inline jule::Ptr<_1e5522d00_Data> _1e552929b__evalStruct(_1e552486d_Eval* _self_, jule::Ptr<_1e47903e2_StructIns> _48630_s) {
	jule::Ptr<_1e5522d00_Data> _48717_d = jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_48630_s, 0)}), ._field_Model=jule::Any(_48630_s, &__jule_any_type9), ._field_Decl=true, });;
	if (((_48630_s.get()._field_Decl != nullptr) && _48630_s.get()._field_Decl.get()._field_CppLinked)) {
		_48717_d.get()._field_Kind.get()._field_CppIdent=_48630_s.get()._field_Decl.get()._field_Ident;
	};
	return _48717_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e5529653_evalStruct(_1e552486d_Eval* _self_, jule::Ptr<_1e47903e2_StructIns> _50033_s, jule::Ptr<_20d155596_Token> _50048_errorToken) {
	if ((!(_1e54b062d_isAccessibleDefine((*(_self_))._field_s.ptr(), _50033_s.get()._field_Decl.get()._field_Public, _50033_s.get()._field_Decl.get()._field_Token)))) {
		_1e5524d79_pushErr(_self_, _50048_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_50033_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
		_1e5525198_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1e5529c80_checkDeprecated(_self_, &(_50033_s.get()._field_Decl.get()._field_Directives), _50048_errorToken);
	return _1e552929b__evalStruct(_self_, _50033_s);;
}



inline jule::Ptr<_1e5522d00_Data> _1e5529961_evalFnIns(_1e552486d_Eval* _self_, jule::Ptr<_1e5463b75_FnIns> _51028_f) {
	return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_51028_f, 1)}), ._field_Model=jule::Any(_51028_f, &__jule_any_type7), });;
}



inline void _1e5529c80_checkDeprecated(_1e552486d_Eval* _self_, jule::Slice<jule::Ptr<_1e474057e_Directive>>* _51939_directives, jule::Ptr<_20d155596_Token> _51970_tok) {
	if (_1e55257b4_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1e474057e_Directive> _52413_d = _1e5548430_findDirective(_51939_directives, jule::Str("deprecated", 10));;
	if ((_52413_d != nullptr)) {
		if ((_52413_d.get()._field_Args.len() == 0LL)) {
			_1e5524d79_pushErr(_self_, _51970_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type5)}));
		} else {
			_1e5524d79_pushErr(_self_, _51970_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(_52413_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
		};
		_1e5525198_pushSugggestion(_self_, jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e552a137_evalFn(_1e552486d_Eval* _self_, jule::Ptr<_1e5460ec4_Fn> _53529_f, jule::Ptr<_20d155596_Token> _53537_errorToken) {
	if ((!(_1e54b062d_isAccessibleDefine((*(_self_))._field_s.ptr(), _53529_f.get()._field_Public, _53529_f.get()._field_Token)))) {
		_1e5524d79_pushErr(_self_, _53537_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_53529_f.get()._field_Ident, &__jule_any_type5)}));
		_1e5525198_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1e5529c80_checkDeprecated(_self_, &(_53529_f.get()._field_Directives), _53537_errorToken);
	jule::Ptr<_1e5463b75_FnIns> _54417_ins = _1e5462624_instance(_53529_f);;
	_1e8ae3e7d_pushReference(_self_, &(_54417_ins));
	return _1e5529961_evalFnIns(_self_, _54417_ins);;
}



inline void _1e552a500_pushIllegalCycleError(_1e552486d_Eval* _self_, jule::Ptr<_1e54ca291_Var>* _54941_v1, jule::Ptr<_1e54ca291_Var>* _54952_v2, jule::Str* _54967_message) {
	;
	jule::Str _55113_refers_to = _24305e8ee_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_54941_v1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_54952_v2)).get()._field_Ident, &__jule_any_type5)}));;
	((*(_54967_message))).buffer.insert(0, (((_242eaebe5_Repeat(jule::Str(" ", 1), 4LL) + _55113_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1e552a8a7_checkCrossCycle(_1e552486d_Eval* _self_, jule::Ptr<_1e54ca291_Var>* _55535_v, jule::Str* _55549_message) {
	{
		auto expr = &((*(_55535_v)).get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8aeb6e4:;
		if (it != expr_end) {
			jule::Ptr<_1e54ca291_Var> *_55616_d = it;
			{
				if (((*(_55616_d)) == (*(_self_))._field_owner)) {
					_1e552a500_pushIllegalCycleError(_self_, _55535_v, _55616_d, _55549_message);
					return false;;
				};
				if ((!(_1e552a8a7_checkCrossCycle(_self_, _55616_d, _55549_message)))) {
					_1e552a500_pushIllegalCycleError(_self_, _55535_v, _55616_d, _55549_message);
					return false;;
				};
			}
			_iter_next_1e8aeb6e4:;
			++it;
			goto _iter_begin_1e8aeb6e4;
		}
		_iter_end_1e8aeb6e4:;
	};
	return true;;
}



inline jule::Bool _1e552ac5e_checkIllegalCycles(_1e552486d_Eval* _self_, jule::Ptr<_1e54ca291_Var>* _57442_v, jule::Ptr<_20d155596_Token> _57451_decl_token) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_owner == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_57442_v)))) {
		_1e5524d79_pushErr(_self_, (*(_self_))._field_owner.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_owner.get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _58617_message = jule::Str();;
	if ((!(_1e552a8a7_checkCrossCycle(_self_, _57442_v, &(_58617_message))))) {
		jule::Str _58921_errMsg = _58617_message;;
		_58617_message=jule::Str();
		_1e552a500_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _57442_v, &(_58617_message));
		_58921_errMsg+=_58617_message;
		_1e5524d79_pushErr(_self_, _57451_decl_token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_58921_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*(_self_))._field_owner.get()._field_Depends = jule::alloc_for_append((*(_self_))._field_owner.get()._field_Depends,1);(*(_self_))._field_owner.get()._field_Depends.__push((*(_57442_v)));;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1e5522d00_Data> _1e552b116_evalVar(_1e552486d_Eval* _self_, jule::Ptr<_1e54ca291_Var> _60130_v, jule::Ptr<_20d155596_Token> _60139_errorToken) {
	if ((!(_1e54b062d_isAccessibleDefine((*(_self_))._field_s.ptr(), _60130_v.get()._field_Public, _60130_v.get()._field_Token)))) {
		_1e5524d79_pushErr(_self_, _60139_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_60130_v.get()._field_Ident, &__jule_any_type5)}));
		_1e5525198_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1e5529c80_checkDeprecated(_self_, &(_60130_v.get()._field_Directives), _60139_errorToken);
	_60130_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1e8b03a2b:;
			{
				jule::Bool _61517_ok = _1e552ac5e_checkIllegalCycles(_self_, &(_60130_v), _60139_errorToken);;
				if ((!(_61517_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1e8b03ad6:;
			{
				if (((!(_60130_v.get()._field_Reference)) || _1e55257b4_isUnsafe(_self_))) {
					goto _match_end_1e8b039c6;
				};
				jule::Ptr<_1e548c4a6_scopeChecker> _62321_s = (*(_self_))._field_lookup.cast_ptr<_1e548c4a6_scopeChecker>(0);;
				while (((_62321_s.get()._field_owner == nullptr) && (_62321_s.get()._field_parent != nullptr))) {
					{
						_62321_s=_62321_s.get()._field_parent;
					}
				_iter_next_1e8b05be8:;
				}
				_iter_end_1e8b05be8:;;
				if ((((_62321_s.get()._field_owner != nullptr) && _62321_s.get()._field_owner.get()._field_Anon) && (_60130_v.get()._field_Scope != _62321_s.get()._field_owner.get()._field_Scope))) {
					_1e5524d79_pushErr(_self_, _60139_errorToken, jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any(_60130_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
		}
		_match_end_1e8b039c6:;
	};
	if ((_60130_v.get()._field_Scope == nullptr)) {
		_1e8b07c72_pushReference(_self_, &(_60130_v));
	};
	if (((!(_60130_v.get()._field_CppLinked)) && ((_60130_v.get()._field_Value == nullptr) || (_60130_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_60130_v.get()._field_Constant) {
			_1e54c2c39_checkTypeVar((*(_self_))._field_s, &(_60130_v), jule::Trait<_1e5569c04_Lookup>((*(_self_))._field_s, 3));
			if ((_60130_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;;
			};
		};
	};
	if (((_60130_v.get()._field_Kind == nullptr) || (_60130_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_60130_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1e54c2c39_checkTypeVar((*(_self_))._field_s, &(_60130_v), (*(_self_))._field_lookup);
		if (((_60130_v.get()._field_Kind == nullptr) || (_60130_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_1e5522d00_Data> _66617_d = jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=_60130_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_60130_v.get()._field_Mutable, ._field_Reference=_60130_v.get()._field_Reference, ._field_Lvalue=(!(_60130_v.get()._field_Constant)), ._field_Model=jule::Any(_60130_v, &__jule_any_type8), });;
	if ((((!(_60130_v.get()._field_CppLinked)) && _1e54ca659_IsInitialized(_60130_v.ptr())) && (_60130_v.get()._field_Value.get()._field_Data != nullptr))) {
		_66617_d.get()._field_IsRune=_60130_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_60130_v.get()._field_Constant && (_60130_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_66617_d.get()._field_Constant=jule::new_ptr<_1e54469c1_Const>((*(_60130_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_66617_d.get()._field_Model=jule::Any(_66617_d.get()._field_Constant, &__jule_any_type47);
		if (_1e54cab32_untypedConstant(_60130_v.ptr())) {
			_1e5525d03_applyNumericPrefix(_self_, &(_66617_d));
			_66617_d.get()._field_untyped=true;
		};
	};
	return _66617_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e552b4bd_evalTypeAlias(_1e552486d_Eval* _self_, jule::Ptr<_1e554d08e_TypeAlias> _69036_ta, jule::Ptr<_20d155596_Token> _69052_errorToken) {
	if ((!(_1e54b062d_isAccessibleDefine((*(_self_))._field_s.ptr(), _69036_ta.get()._field_Public, _69036_ta.get()._field_Token)))) {
		_1e5524d79_pushErr(_self_, _69052_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_69036_ta.get()._field_Ident, &__jule_any_type5)}));
		_1e5525198_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_69036_ta.get()._field_Used=true;
	jule::Trait<_1e554d853_Kind> _69917_kind = _69036_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1e5522d00_Data> _70017_d = nullptr;;
	{
		auto &_match_expr{ _69917_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e8b18d93:;
			{
				_70017_d=_1e552929b__evalStruct(_self_, _69917_kind.cast_ptr<_1e47903e2_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1e8b17974:;
			{
				_70017_d=_1e5528421__evalEnum(_self_, _69917_kind.cast_ptr<_1e547501b_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1e8b179da:;
			{
				_70017_d=_1e5528ad6__evalTypeEnum(_self_, _69917_kind.cast_ptr<_1e5476616_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1e8b17853:;
			{
				_70017_d=jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=_69036_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_69036_ta.get()._field_CppLinked) {
					_70017_d.get()._field_Kind.get()._field_CppIdent=_69036_ta.get()._field_Ident;
				} else {
					_70017_d.get()._field_Kind.get()._field_CppIdent=_69036_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_70017_d.get()._field_Model=jule::Any(_70017_d.get()._field_Kind, &__jule_any_type90);
			}
		}
		_match_end_1e8b177ed:;
	};
	_70017_d.get()._field_Kind.get()._field_Generic=_69036_ta.get()._field_Generic;
	return _70017_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e552b875_evalDef(_1e552486d_Eval* _self_, jule::Any _72630_def, jule::Ptr<_20d155596_Token> _72640_ident) {
	{
		auto &_match_expr{ _72630_def };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e8b1b769:;
			{
				return _1e552b116_evalVar(_self_, _72630_def.cast_ptr<_1e54ca291_Var>(&__jule_any_type8), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1e8b1b7d0:;
			{
				return _1e55287c8_evalEnum(_self_, _72630_def.cast_ptr<_1e547501b_Enum>(&__jule_any_type68), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1e8b1b846:;
			{
				return _1e5528e8d_evalTypeEnum(_self_, _72630_def.cast_ptr<_1e5476616_TypeEnum>(&__jule_any_type69), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1e8b1b8bd:;
			{
				return _1e5529653_evalStruct(_self_, _1e475058e_instance(_72630_def.cast_ptr<_1e4790018_Struct>(&__jule_any_type66)), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1e8b1b934:;
			{
				jule::Ptr<_1e5460ec4_Fn> _73721_f = _72630_def.cast_ptr<_1e5460ec4_Fn>(&__jule_any_type65);;
				if ((_73721_f.get()._field_Ident != jule::Str("init", 4))) {
					return _1e552a137_evalFn(_self_, _73721_f, _72640_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1e8b1b9ab:;
			{
				return _1e5529961_evalFnIns(_self_, _72630_def.cast_ptr<_1e5463b75_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1e8b1ba33:;
			{
				return _1e552b4bd_evalTypeAlias(_self_, _72630_def.cast_ptr<_1e554d08e_TypeAlias>(&__jule_any_type67), _72640_ident);;
			}
		}
		_match_end_1e8b1b67b:;
	};
	_1e5524d79_pushErr(_self_, _72640_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_72640_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1e5522d00_Data> _1e552bb83_evalIdent(_1e552486d_Eval* _self_, jule::Ptr<_1e4779a08_IdentExpr> _75028_ident) {
	jule::Any _75117_def = _1e5527d8d_getDef(_self_, _75028_ident.get()._field_Ident, _75028_ident.get()._field_CppLinked);;
	return _1e552b875_evalDef(_self_, _75117_def, _75028_ident.get()._field_Token);;
}



inline jule::Ptr<_1e5522d00_Data> _1e552be91_evalUnary(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e477a212_UnaryExpr> _75533_u) {
	_1e5540713_unaryEval _75617_unary = static__1e5540bb9_new(_self_);;
	return _1e5541e62_eval(&_75617_unary, _75533_u);;
}



inline jule::Ptr<_1e5522d00_Data> _1e552c29e_evalVariadic(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e477a5b9_VariadicExpr> _76036_v) {
	if ((_76036_v.get()._field_Expr == nullptr)) {
		_1e5524d79_pushErr(_self_.ptr(), _76036_v.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e554dc82_TypeKind> _76617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_76617_prefix;
	});;
	jule::Ptr<_1e5522d00_Data> _77017_d = _1e553eb74_evalExprKind(_self_, _76036_v.get()._field_Expr.get()._field_Kind);;
	if ((_77017_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e5550da5_Variadicable(_77017_d.get()._field_Kind.ptr())))) {
		_1e5524d79_pushErr(_self_.ptr(), _76036_v.get()._field_Token, jule::Str("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_77017_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e5557bc0_Slc> _78013_slc = _1e5552093_Slc(_77017_d.get()._field_Kind.ptr());;
	_77017_d.get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_CppIdent=_78013_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_78013_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_78013_slc.get()._field_Elem.get()._field_Kind});
	return _77017_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e552c5ac_evalUnsafe(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e4779585_UnsafeExpr> _79034_u) {
	jule::Bool _79113_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1e5522d00_Data> _79317_d = _1e553eb74_evalExprKind(_self_, _79034_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_79113_unsafety;
	return _79317_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e552c8ba_evalArr(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e477e436_SliceExpr> _79831_s) {
	jule::Ptr<_1e5559d6a_Arr> _80017_pt = _1e5551d2e_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1e5559d6a_Arr> _80217_arr = jule::new_ptr<_1e5559d6a_Arr>(_1e5559d6a_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_80017_pt.get()._field_Elem});;
	jule::Bool _80817_filled = false;;
	if ((_79831_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _79831_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type82) {
				_case_begin_1e8b2a6bd:;
				{
					if ((_79831_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_1e477a5b9_VariadicExpr>(&__jule_any_type82).get()._field_Expr != nullptr)) {
						goto _match_end_1e8b2a668;
					};
					if (_80017_pt.get()._field_Auto) {
						_1e5524d79_pushErr(_self_.ptr(), _79831_s.get()._field_Token, jule::Str("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_80817_filled=true;
					_79831_s.get()._field_Exprs=_79831_s.get()._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1e8b2a668:;
		};
	};
	_80217_arr.get()._field_N=static_cast<jule::I64>(_79831_s.get()._field_Exprs.len());
	if ((!(_80017_pt.get()._field_Auto))) {
		if ((_80217_arr.get()._field_N > _80017_pt.get()._field_N)) {
			_1e5524d79_pushErr(_self_.ptr(), _79831_s.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if ((_80217_arr.get()._field_N < _80017_pt.get()._field_N)) {
			_80217_arr.get()._field_N=_80017_pt.get()._field_N;
		};
	};
	jule::Ptr<_1e5457c02_ArrayExprModel> _83717_model = jule::new_ptr<_1e5457c02_ArrayExprModel>(_1e5457c02_ArrayExprModel{._field_Kind=_80217_arr, });;
	if (_80817_filled) {
		_83717_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_83717_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _79831_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1e554dc82_TypeKind> _84617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_80217_arr.get()._field_Elem;
	{
		auto expr = &(_79831_s.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8b3085a:;
		if (it != expr_end) {
			jule::Ptr<_1e4777d47_Expr> _84821_elem = *it;
			{
				jule::Ptr<_1e5522d00_Data> _84921_d = _1e553eb74_evalExprKind(_self_, _84821_elem.get()._field_Kind);;
				if ((_84921_d == nullptr)) {
					goto _iter_next_1e8b3085a;
				};
				_1e54b6d3d_checkAssignType(_self_.get()._field_s, false, &(_80217_arr.get()._field_Elem), &(_84921_d), _79831_s.get()._field_Token);
				_83717_model.get()._field_Elems = jule::alloc_for_append(_83717_model.get()._field_Elems,1);_83717_model.get()._field_Elems.__push(_84921_d.get()._field_Model);;
			}
			_iter_next_1e8b3085a:;
			++it;
			goto _iter_begin_1e8b3085a;
		}
		_iter_end_1e8b3085a:;
	};
	_self_.get()._field_prefix=_84617_prefix;
	if (_80817_filled) {
		_83717_model.get()._field_Elems = jule::alloc_for_append(_83717_model.get()._field_Elems,1);_83717_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_80217_arr, 11)}), ._field_Mutable=true, ._field_Model=jule::Any(_83717_model, &__jule_any_type91), });;
}



inline jule::Ptr<_1e5522d00_Data> _1e552cd1b_evalExpSlc(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e477e436_SliceExpr> _87334_s, jule::Ptr<_1e554dc82_TypeKind> _87353_t, jule::Any _87371_first) {
	jule::Ptr<_1e5557bc0_Slc> _87417_slc = jule::new_ptr<_1e5557bc0_Slc>(_1e5557bc0_Slc{._field_Elem=_87353_t});;
	jule::I64 _87817_i = 0LL;;
	jule::Ptr<_1e5454ec9_SliceExprModel> _87917_model = jule::new_ptr<_1e5454ec9_SliceExprModel>(_1e5454ec9_SliceExprModel{._field_ElemKind=_87353_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _87334_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_87371_first != nullptr)) {
		_87917_model.get()._field_Elems = jule::alloc_for_append(_87917_model.get()._field_Elems,1);_87917_model.get()._field_Elems.__push(_87371_first);;
		_87817_i=1LL;
	};
	jule::Ptr<_1e554dc82_TypeKind> _88817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_87417_slc.get()._field_Elem;
	{
		auto expr = _87334_s.get()._field_Exprs.slice(_87817_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1e8b35eae:;
		if (it != expr_end) {
			jule::Ptr<_1e4777d47_Expr> _89021_elem = *it;
			{
				jule::Ptr<_1e5522d00_Data> _89121_d = _1e553eb74_evalExprKind(_self_, _89021_elem.get()._field_Kind);;
				if ((_89121_d == nullptr)) {
					goto _iter_next_1e8b35eae;
				};
				_1e54b6d3d_checkAssignType(_self_.get()._field_s, false, &(_87417_slc.get()._field_Elem), &(_89121_d), _87334_s.get()._field_Token);
				_87917_model.get()._field_Elems = jule::alloc_for_append(_87917_model.get()._field_Elems,1);_87917_model.get()._field_Elems.__push(_89121_d.get()._field_Model);;
			}
			_iter_next_1e8b35eae:;
			++it;
			goto _iter_begin_1e8b35eae;
		}
		_iter_end_1e8b35eae:;
	};
	_self_.get()._field_prefix=_88817_prefix;
	return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_87417_slc, 8)}), ._field_Mutable=true, ._field_Model=jule::Any(_87917_model, &__jule_any_type83), });;
}



inline jule::Ptr<_1e5522d00_Data> _1e552d129_evalSliceExpr(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e477e436_SliceExpr> _90937_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1e5551d2e_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1e8b38a3e:;
				{
					return _1e552c8ba_evalArr(_self_, _90937_s);;
				}
			}
			else if ((_1e5552093_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1e8b38ab6:;
				{
					jule::Ptr<_1e5557bc0_Slc> _91525_pt = _1e5552093_Slc(_self_.get()._field_prefix.ptr());;
					return _1e552cd1b_evalExpSlc(_self_, _90937_s, _91525_pt.get()._field_Elem, nullptr);;
				}
			}
			_match_end_1e8b3892e:;
		};
	};
	jule::Ptr<_1e554dc82_TypeKind> _92017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_90937_s.get()._field_Exprs.len() == 0LL)) {
		_1e5524d79_pushErr(_self_.ptr(), _90937_s.get()._field_Token, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5522d00_Data> _92817_firstElem = _1e553eb74_evalExprKind(_self_, _90937_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_92817_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e5522d00_Data> _93317_d = _1e552cd1b_evalExpSlc(_self_, _90937_s, _92817_firstElem.get()._field_Kind, _92817_firstElem.get()._field_Model);;
	_self_.get()._field_prefix=_92017_prefix;
	return _93317_d;;
}



inline void _1e552d46a_checkIntegerIndexingByData(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data>* _93950_d, jule::Ptr<_20d155596_Token> _93960_token) {
	jule::Str _94013_err_key = _1e554a8c7_checkDataForIntegerIndexing(_93950_d);;
	{
		auto &_match_expr{ _94013_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1e8b3d9ab:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1e8b3de95:;
			{
				_1e5524d79_pushErr(_self_, _93960_token, _94013_err_key, jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_93950_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1e8b3dd30:;
			{
				_1e5524d79_pushErr(_self_, _93960_token, _94013_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1e8b3dc53:;
	};
}



inline void _1e552d844_indexingPtr(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data>* _95135_d, jule::Ptr<_1e5522d00_Data>* _95150_index, jule::Ptr<_1e477eca5_IndexingExpr>* _95165_i) {
	_1e552d46a_checkIntegerIndexingByData(_self_, _95150_index, (*(_95165_i)).get()._field_Token);
	jule::Ptr<_1e555a7c7_Ptr> _95417_ptr = _1e55515e2_Ptr((*(_95135_d)).get()._field_Kind.ptr());;
	{
		
		if (_1e555b29a_IsUnsafe(_95417_ptr.ptr())) {
			_case_begin_1e8b41629:;
			{
				_1e5524d79_pushErr(_self_, (*(_95165_i)).get()._field_Token, jule::Str("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1e55257b4_isUnsafe(_self_)))) {
			_case_begin_1e8b41690:;
			{
				_1e5524d79_pushErr(_self_, (*(_95165_i)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e8b41508:;
	};
	(*(_95135_d)).get()._field_Kind=_95417_ptr.get()._field_Elem;
}



inline void _1e552dc0c_indexingArr(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data>* _96635_d, jule::Ptr<_1e5522d00_Data>* _96650_index, jule::Ptr<_1e477eca5_IndexingExpr>* _96665_i) {
	jule::Ptr<_1e5559d6a_Arr> _96717_arr = _1e5551d2e_Arr((*(_96635_d)).get()._field_Kind.ptr());;
	(*(_96635_d)).get()._field_Kind=_96717_arr.get()._field_Elem;
	_1e552d46a_checkIntegerIndexingByData(_self_, _96650_index, (*(_96665_i)).get()._field_Token);
	if ((_1e55236b3_IsConst((*(_96650_index)).ptr()) && (_1e54494a7_AsF64((*(_96650_index)).get()._field_Constant.ptr()) >= static_cast<jule::F64>(_96717_arr.get()._field_N)))) {
		_1e5524d79_pushErr(_self_, (*(_96665_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1e552e0c5_indexingSlc(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data>* _97535_d, jule::Ptr<_1e5522d00_Data>* _97550_index, jule::Ptr<_1e477eca5_IndexingExpr>* _97565_i) {
	jule::Ptr<_1e5557bc0_Slc> _97617_slc = _1e5552093_Slc((*(_97535_d)).get()._field_Kind.ptr());;
	(*(_97535_d)).get()._field_Kind=_97617_slc.get()._field_Elem;
	_1e552d46a_checkIntegerIndexingByData(_self_, _97550_index, (*(_97565_i)).get()._field_Token);
	if ((!(_1e55236b3_IsConst((*(_97550_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_97535_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1e8b46d5a:;
			{
				jule::Ptr<_1e5454ec9_SliceExprModel> _98621_m = (*(_97535_d)).get()._field_Model.cast_ptr<_1e5454ec9_SliceExprModel>(&__jule_any_type83);;
				jule::F64 _98717_indx = _1e54494a7_AsF64((*(_97550_index)).get()._field_Constant.ptr());;
				if ((_98717_indx >= static_cast<jule::F64>(_98621_m.get()._field_Elems.len()))) {
					_1e5524d79_pushErr(_self_, (*(_97565_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*(_97535_d)).get()._field_Model=_98621_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_98717_indx))];
					(*(_97535_d)).get()._field_Decl=true;
				};
			}
		}
		_match_end_1e8b46cc2:;
	};
}



inline void _1e552e48d_indexingMap(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data>* _99735_d, jule::Ptr<_1e5522d00_Data>* _99750_index, jule::Ptr<_1e477eca5_IndexingExpr>* _99769_i) {
	if (((*(_99750_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1e5559276_Map> _100117_m = _1e5552a44_Map((*(_99735_d)).get()._field_Kind.ptr());;
	_1e550d6e2_assignTypeChecker _100217_atc = _1e550d6e2_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=_100117_m.get()._field_Key, ._field_d=(*(_99750_index)), ._field_errorToken=(*(_99769_i)).get()._field_Token};;
	_1e550e869_check(&_100217_atc);
	(*(_99735_d)).get()._field_Kind=_100117_m.get()._field_Val;
}



inline void _1e552e856_indexingStr(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data>* _101235_d, jule::Ptr<_1e5522d00_Data>* _101250_index, jule::Ptr<_1e477eca5_IndexingExpr>* _101265_i) {
	;
	(*(_101235_d)).get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("u8", 2)), 6)});
	if (((*(_101250_index)) == nullptr)) {
		return;;
	};
	_1e552d46a_checkIntegerIndexingByData(_self_, _101250_index, (*(_101265_i)).get()._field_Token);
	if ((!(_1e55236b3_IsConst((*(_101250_index)).ptr())))) {
		(*(_101235_d)).get()._field_Constant=nullptr;
		return;;
	};
	if (_1e55236b3_IsConst((*(_101235_d)).ptr())) {
		jule::Ptr<_20d155596_Token> _102817_errorToken = (*(_101265_i)).get()._field_Token;;
		jule::I64 _102917_j = _1e5448ece_AsI64((*(_101250_index)).get()._field_Constant.ptr());;
		jule::Str _103017_s = _1e5448a06_ReadStr((*(_101235_d)).get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_102917_j) >= _103017_s.len())) {
			_1e5524d79_pushErr(_self_, _102817_errorToken, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1e54499a2_SetU64((*(_101235_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_103017_s[_102917_j])));
		};
	};
}



inline void _1e552ec1e_toIndexing(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data>* _103934_d, jule::Ptr<_1e5522d00_Data>* _103949_index, jule::Ptr<_1e477eca5_IndexingExpr>* _103968_i) {
	{
		
		if ((_1e55515e2_Ptr((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8b517c1:;
			{
				_1e552d844_indexingPtr(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_1e5551d2e_Arr((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8b51848:;
			{
				_1e552dc0c_indexingArr(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_1e5552093_Slc((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8b518c0:;
			{
				_1e552e0c5_indexingSlc(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_1e5552a44_Map((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8b51947:;
			{
				_1e552e48d_indexingMap(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_1e5551119_Prim((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8b519be:;
			{
				jule::Ptr<_1e55539ce_Prim> _105417_prim = _1e5551119_Prim((*(_103934_d)).get()._field_Kind.ptr());;
				{
					
					if (_1e5556c13_IsStr(_105417_prim.ptr())) {
						_case_begin_1e8b55907:;
						{
							_1e552e856_indexingStr(_self_, _103934_d, _103949_index, _103968_i);
							return;;
						}
					}
					_match_end_1e8b5585d:;
				};
			}
		}
		_match_end_1e8b5167d:;
	};
	_1e5524d79_pushErr(_self_, (*(_103968_i)).get()._field_Token, jule::Str("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_103934_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Bool _1e5530192_pushGenericsFromExprSubIdent(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e477b29b_SubIdentExpr>* _106453_sexpr, jule::Slice<jule::Ptr<_1e4773826_TypeDecl>>* _106514_generics, jule::Ptr<_1e4777d47_Expr>* _106542_expr) {
	jule::Ptr<_1e477453b_SubIdentTypeDecl> _106617_t = jule::new_ptr<_1e477453b_SubIdentTypeDecl>();;
	if ((!(_1e554b697_pushSubIdentFromExpr(jule::Any((*(_106453_sexpr)), &__jule_any_type92), &(_106617_t))))) {
		_1e5524d79_pushErr(_self_.ptr(), (*(_106542_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	(*(_106514_generics)) = jule::alloc_for_append((*(_106514_generics)),1);(*(_106514_generics)).__push(jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Kind=jule::Any(_106617_t, &__jule_any_type93)}));;
	return true;;
}



inline jule::Bool _1e553055a_pushGenericsFromData(jule::Ptr<_1e552486d_Eval> _self_, jule::Slice<jule::Ptr<_1e4773826_TypeDecl>>* _107545_generics, jule::Ptr<_1e4777d47_Expr>* _107573_expr) {
	{
		auto &_match_expr{ (*(_107573_expr)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1e8b59741:;
			{
				jule::Ptr<_1e477a212_UnaryExpr> _107821_u = (*(_107573_expr)).get()._field_Kind.cast_ptr<_1e477a212_UnaryExpr>(&__jule_any_type94);;
				{
					auto &_match_expr{ _107821_u.get()._field_Op.get()._field_Kind };
					
					if (_match_expr == jule::Str("*", 1)) {
						_case_begin_1e8b59e4a:;
						{
							jule::Ptr<_1e47756a2_PtrTypeDecl> _108125_kind = jule::new_ptr<_1e47756a2_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1e4773826_TypeDecl>> _108225__generics = jule::Slice<jule::Ptr<_1e4773826_TypeDecl>>::alloc(0LL, 1LL);;
							_1e553055a_pushGenericsFromData(_self_, &(_108225__generics), &(_107821_u.get()._field_Expr));
							_108125_kind.get()._field_Elem=_108225__generics[0LL];
							(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Token=(*(_107573_expr)).get()._field_Token, ._field_Kind=jule::Any(_108125_kind, &__jule_any_type78)}));;
						}
					}
					else if (_match_expr == jule::Str("&", 1)) {
						_case_begin_1e8b5b08e:;
						{
							jule::Ptr<_1e4774bce_SptrTypeDecl> _109025_kind = jule::new_ptr<_1e4774bce_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1e4773826_TypeDecl>> _109125__generics = jule::Slice<jule::Ptr<_1e4773826_TypeDecl>>::alloc(0LL, 1LL);;
							_1e553055a_pushGenericsFromData(_self_, &(_109125__generics), &(_107821_u.get()._field_Expr));
							_109025_kind.get()._field_Elem=_109125__generics[0LL];
							(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Token=(*(_107573_expr)).get()._field_Token, ._field_Kind=jule::Any(_109025_kind, &__jule_any_type79)}));;
						}
					}
					else {
						_case_begin_1e8b5a643:;
						{
							_1e5524d79_pushErr(_self_.ptr(), _107821_u.get()._field_Op, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1e8b5a3bd:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1e8b597a7:;
			{
				(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push((*(_107573_expr)).get()._field_Kind.cast_ptr<_1e4773826_TypeDecl>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1e8b59587:;
			{
				jule::Ptr<_1e477b29b_SubIdentExpr> _110521_sexpr = (*(_107573_expr)).get()._field_Kind.cast_ptr<_1e477b29b_SubIdentExpr>(&__jule_any_type92);;
				return _1e5530192_pushGenericsFromExprSubIdent(_self_, &(_110521_sexpr), _107545_generics, _107573_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1e8b595ed:;
			{
				jule::Ptr<_1e4779a08_IdentExpr> _110821_ident = (*(_107573_expr)).get()._field_Kind.cast_ptr<_1e4779a08_IdentExpr>(&__jule_any_type86);;
				(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1e4773ddc_IdentTypeDecl>(_1e4773ddc_IdentTypeDecl{._field_Token=_110821_ident.get()._field_Token, ._field_Ident=_110821_ident.get()._field_Ident, ._field_CppLinked=_110821_ident.get()._field_CppLinked, }), &__jule_any_type19)}));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1e8b59664:;
			{
				{
					auto expr = &((*(_107573_expr)).get()._field_Kind.cast_ptr<_1e47789c4_TupleExpr>(&__jule_any_type87).get()._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e8b612e7:;
					if (it != expr_end) {
						jule::Ptr<_1e4777d47_Expr> _111725_texpr = *it;
						{
							if ((!(_1e553055a_pushGenericsFromData(_self_, _107545_generics, &(_111725_texpr))))) {
								return false;;
							};
						}
						_iter_next_1e8b612e7:;
						++it;
						goto _iter_begin_1e8b612e7;
					}
					_iter_end_1e8b612e7:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1e8b58c18:;
			{
				jule::Ptr<_1e477ad28_NsSelectionExpr> _112321_ns = (*(_107573_expr)).get()._field_Kind.cast_ptr<_1e477ad28_NsSelectionExpr>(&__jule_any_type96);;
				jule::Ptr<_1e4773ddc_IdentTypeDecl> _112421_decl = jule::new_ptr<_1e4773ddc_IdentTypeDecl>(_1e4773ddc_IdentTypeDecl{._field_Token=_112321_ns.get()._field_Ident, ._field_Ident=_112321_ns.get()._field_Ident.get()._field_Kind, });;
				(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Token=_112421_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1e47748e3_NamespaceTypeDecl>(_1e47748e3_NamespaceTypeDecl{._field_Idents=_112321_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Token=_112421_decl.get()._field_Token, ._field_Kind=jule::Any(_112421_decl, &__jule_any_type19)})}), &__jule_any_type97)}));;
			}
		}
		else {
			_case_begin_1e8b58b91:;
			{
				_1e5524d79_pushErr(_self_.ptr(), (*(_107573_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1e8b58b3b:;
	};
	return true;;
}



inline void _1e553089b_evalIdentDeclFromIndexing(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e5522d00_Data>* _114550_d, jule::Ptr<_1e477eca5_IndexingExpr>* _114565_i) {
	jule::Ptr<_1e47903e2_StructIns> _114617_s = _1e555256b_Struct((*(_114550_d)).get()._field_Kind.ptr());;
	if ((_114617_s == nullptr)) {
		_1e5524d79_pushErr(_self_.ptr(), (*(_114565_i)).get()._field_Expr.get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_114550_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		(*(_114550_d))=nullptr;
		return;;
	};
	jule::Ptr<_1e4773ddc_IdentTypeDecl> _115317_decl = nullptr;;
	{
		auto &_match_expr{ (*(_114565_i)).get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1e8b6664e:;
			{
				jule::Ptr<_1e4779a08_IdentExpr> _115621_expr = (*(_114565_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1e4779a08_IdentExpr>(&__jule_any_type86);;
				_115317_decl=jule::new_ptr<_1e4773ddc_IdentTypeDecl>(_1e4773ddc_IdentTypeDecl{._field_Token=_115621_expr.get()._field_Token, ._field_Ident=_115621_expr.get()._field_Ident, ._field_CppLinked=_115621_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1e8b676b6:;
			{
				jule::Ptr<_1e477ad28_NsSelectionExpr> _116321_expr = (*(_114565_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1e477ad28_NsSelectionExpr>(&__jule_any_type96);;
				_115317_decl=jule::new_ptr<_1e4773ddc_IdentTypeDecl>(_1e4773ddc_IdentTypeDecl{._field_Token=_116321_expr.get()._field_Ident, ._field_Ident=_116321_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1e8b66a4a:;
			{
				_1e5524d79_pushErr(_self_.ptr(), (*(_114565_i)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_114550_d))=nullptr;
				return;;
			}
		}
		_match_end_1e8b669e5:;
	};
	if ((!(_1e553055a_pushGenericsFromData(_self_, &(_115317_decl.get()._field_Generics), &((*(_114565_i)).get()._field_Index))))) {
		(*(_114550_d))=nullptr;
		return;;
	};
	_114617_s=({ auto _wrap_copy = _1e5536b05_typeChecker(_self_.ptr()); _1e556147b_fromStruct(&_wrap_copy, &(_115317_decl), &(_114617_s.get()._field_Decl)); });
	if ((_114617_s == nullptr)) {
		(*(_114550_d))=nullptr;
		return;;
	};
	(*(_114550_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1e554d853_Kind>(_114617_s, 0);
}



inline jule::Bool _1e5530d0d_checkGenericFn(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e5463b75_FnIns>* _118839_f, jule::Ptr<_20d155596_Token>* _118855_et, jule::Any* _118872_model) {
	jule::Bool _118913_ok = _1e54b9208_reloadFnInsTypes(_self_.get()._field_s, (*(_118839_f)));;
	(*(_118839_f)).get()._field_reloaded=true;
	if ((!(_118913_ok))) {
		return false;;
	};
	jule::Ptr<_1e5463b75_FnIns> _119417_existInstance = _1e54628ee_appendInstance((*(_118839_f)).get()._field_Decl.ptr(), _118839_f);;
	if ((!(_1e54b836c_checkConstraintsFn(_self_.get()._field_s, _118839_f, _118855_et, _119417_existInstance)))) {
		return false;;
	};
	if ((_119417_existInstance != nullptr)) {
		(*(_118839_f))=_119417_existInstance;
		_1e554b455_updateModelToGenericIns(_118872_model, &(_119417_existInstance));
	} else {
		_1e54c5a3e_checkFnInsCaller(_self_.get()._field_s, _118839_f, (*(_118855_et)));
	};
	return true;;
}



inline void _1e553114e_evalFnGenericFromIndexing(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e5522d00_Data>* _121350_d, jule::Ptr<_1e477eca5_IndexingExpr>* _121365_i) {
	jule::Slice<jule::Ptr<_1e4773826_TypeDecl>> _121417_generics = jule::Slice<jule::Ptr<_1e4773826_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1e553055a_pushGenericsFromData(_self_, &(_121417_generics), &((*(_121365_i)).get()._field_Index))))) {
		(*(_121350_d))=nullptr;
		return;;
	};
	jule::Ptr<_1e5463b75_FnIns> _122017_f = _1e5552307_Fn((*(_121350_d)).get()._field_Kind.ptr());;
	jule::I64 _122117_genericsLen = 0LL;;
	if ((_122017_f.get()._field_Decl != nullptr)) {
		_122117_genericsLen=static_cast<jule::I64>(_122017_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1e54b12ee_checkGenericQuantity(_self_.get()._field_s.ptr(), _122117_genericsLen, static_cast<jule::I64>(_121417_generics.len()), (*(_121365_i)).get()._field_Expr.get()._field_Token)))) {
		(*(_121350_d))=nullptr;
		return;;
	};
	_122017_f.get()._field_Generics=jule::Slice<jule::Ptr<_1e554c555_InsGeneric>>::alloc(0LL, _122017_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto expr = &(_121417_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8b71b87:;
		if (it != expr_end) {
			jule::Ptr<_1e4773826_TypeDecl> _123221_g = *it;
			{
				jule::Ptr<_1e5522d00_Data> _123321_k = _1e5536e13_evalType(_self_.ptr(), _123221_g);;
				if ((_123321_k == nullptr)) {
					(*(_121350_d))=nullptr;
					return;;
				};
				_122017_f.get()._field_Generics = jule::alloc_for_append(_122017_f.get()._field_Generics,1);_122017_f.get()._field_Generics.__push(jule::new_ptr<_1e554c555_InsGeneric>(_1e554c555_InsGeneric{._field_Kind=_123321_k.get()._field_Kind, }));;
			}
			_iter_next_1e8b71b87:;
			++it;
			goto _iter_begin_1e8b71b87;
		}
		_iter_end_1e8b71b87:;
	};
	if (_1e546500b_IsBuiltin(_122017_f.ptr())) {
		return;;
	};
	if (_1e5530d0d_checkGenericFn(_self_, &(_122017_f), &((*(_121365_i)).get()._field_Expr.get()._field_Token), &((*(_121350_d)).get()._field_Model))) {
		(*(_121350_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1e554d853_Kind>(_122017_f, 1);
	} else {
		(*(_121350_d))=nullptr;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553146d_evalIndexing(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e477eca5_IndexingExpr> _125236_i) {
	jule::Ptr<_1e554dc82_TypeKind> _125317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_125317_prefix;
	});;
	jule::Ptr<_1e5522d00_Data> _125717_d = _1e553eb74_evalExprKind(_self_, _125236_i.get()._field_Expr.get()._field_Kind);;
	if ((_125717_d == nullptr)) {
		return nullptr;;
	};
	if (_125717_d.get()._field_Decl) {
		_1e553089b_evalIdentDeclFromIndexing(_self_, &(_125717_d), &(_125236_i));
		return _125717_d;;
	};
	if ((_1e5552307_Fn(_125717_d.get()._field_Kind.ptr()) != nullptr)) {
		_1e553114e_evalFnGenericFromIndexing(_self_, &(_125717_d), &(_125236_i));
		return _125717_d;;
	};
	_1e5522d00_Data _127317_old_d = (*(_125717_d));;
	jule::Ptr<_1e5522d00_Data> _127517_index = _1e553eb74_evalExprKind(_self_, _125236_i.get()._field_Index.get()._field_Kind);;
	if ((_127517_index == nullptr)) {
		return nullptr;;
	};
	_125717_d.get()._field_Decl=false;
	_1e552ec1e_toIndexing(_self_.ptr(), &(_125717_d), &(_127517_index), &(_125236_i));
	if (_1e55236b3_IsConst(_125717_d.ptr())) {
		_125717_d.get()._field_Decl=false;
		_125717_d.get()._field_Model=jule::Any(_125717_d.get()._field_Constant, &__jule_any_type47);
	} else if (_125717_d.get()._field_Decl) {
		_125717_d.get()._field_Decl=false;
	} else {
		_125717_d.get()._field_Model=jule::Any(jule::new_ptr<_1e545544c_IndexingExprModel>(_1e545544c_IndexingExprModel{._field_Token=_125236_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1e5522d00_Data>(_127317_old_d), ._field_Index=_127517_index}), &__jule_any_type45);
	};
	return _125717_d;;
}



inline __jule_tuple_x_1e5522d00_Data__jule_tuple_x_1e5522d00_Data _1e553177b_evalSlicingExprs(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e47803b0_SlicingExpr>* _130641_s) {
	__jule_tuple_x_1e5522d00_Data__jule_tuple_x_1e5522d00_Data __jule_func_result;
	jule::Ptr<_1e554dc82_TypeKind> _130717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_130717_prefix;
	});;
	jule::Ptr<_1e5522d00_Data> _131117_l = nullptr;;
	jule::Ptr<_1e5522d00_Data> _131217_r = nullptr;;
	if (((*(_130641_s)).get()._field_Start != nullptr)) {
		_131117_l=_1e553eb74_evalExprKind(_self_, (*(_130641_s)).get()._field_Start.get()._field_Kind);
		if ((_131117_l != nullptr)) {
			_1e552d46a_checkIntegerIndexingByData(_self_.ptr(), &(_131117_l), (*(_130641_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_131117_l=jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__1e5446e44_NewI64(0LL)});
		_131117_l.get()._field_Model=jule::Any(_131117_l.get()._field_Constant, &__jule_any_type47);
	};
	if (((*(_130641_s)).get()._field_To != nullptr)) {
		_131217_r=_1e553eb74_evalExprKind(_self_, (*(_130641_s)).get()._field_To.get()._field_Kind);
		if ((_131217_r != nullptr)) {
			_1e552d46a_checkIntegerIndexingByData(_self_.ptr(), &(_131217_r), (*(_130641_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _131117_l;
	__jule_func_result.__jule_result_arg1 = _131217_r;
	return __jule_func_result;;
}



inline void _1e5531a01_slicingArr(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data>* _134130_d) {
	jule::Ptr<_1e554dc82_TypeKind> _134217_elemType = _1e5551d2e_Arr((*(_134130_d)).get()._field_Kind.ptr()).get()._field_Elem;;
	(*(_134130_d)).get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(jule::new_ptr<_1e5557bc0_Slc>(_1e5557bc0_Slc{._field_Elem=_134217_elemType}), 8)});
	(*(_134130_d)).get()._field_Lvalue=false;
	(*(_134130_d)).get()._field_Mutable=((*(_134130_d)).get()._field_Mutable || (!(_1e5550404_Mutable(_134217_elemType.ptr()))));
}



inline void _1e5531db9_slicingStr(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data>* _135630_d, jule::Ptr<_1e5522d00_Data>* _135641_l, jule::Ptr<_1e5522d00_Data>* _135652_r) {
	(*(_135630_d)).get()._field_Lvalue=false;
	(*(_135630_d)).get()._field_Mutable=true;
	if ((!(_1e55236b3_IsConst((*(_135630_d)).ptr())))) {
		return;;
	};
	if ((((*(_135641_l)) == nullptr) || ((*(_135652_r)) == nullptr))) {
		(*(_135630_d)).get()._field_Constant=nullptr;
		return;;
	};
	if ((_1e55236b3_IsConst((*(_135641_l)).ptr()) && _1e55236b3_IsConst((*(_135652_r)).ptr()))) {
		jule::I64 _136917_left = _1e5448ece_AsI64((*(_135641_l)).get()._field_Constant.ptr());;
		if ((_136917_left < 0LL)) {
			return;;
		};
		jule::Str _137417_s = _1e5448a06_ReadStr((*(_135630_d)).get()._field_Constant.ptr());;
		jule::I64 _137521_right = 0LL;;
		if (((*(_135652_r)) == nullptr)) {
			_137521_right=static_cast<jule::I64>(static_cast<jule::I64>(_137417_s.len()));
		} else {
			_137521_right=static_cast<jule::I64>(_1e5448ece_AsI64((*(_135652_r)).get()._field_Constant.ptr()));
		};
		if ((_136917_left > _137521_right)) {
			return;;
		};
		_1e5449e9c_SetStr((*(_135630_d)).get()._field_Constant.ptr(), _137417_s.slice(_136917_left, _137521_right));
		(*(_135630_d)).get()._field_Decl=true;
	} else {
		(*(_135630_d)).get()._field_Constant=nullptr;
	};
}



inline void _1e553232b_checkSlicing(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data>* _139236_d, jule::Ptr<_1e5522d00_Data>* _139247_l, jule::Ptr<_1e5522d00_Data>* _139258_r, jule::Ptr<_1e47803b0_SlicingExpr>* _139269_s) {
	{
		
		if ((_1e5551d2e_Arr((*(_139236_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8b88385:;
			{
				_1e5531a01_slicingArr(_self_, _139236_d);
				return;;
			}
		}
		else if ((_1e5552093_Slc((*(_139236_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8b8840c:;
			{
				return;;
			}
		}
		else if ((_1e5551119_Prim((*(_139236_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8b88484:;
			{
				jule::Ptr<_1e55539ce_Prim> _140017_prim = _1e5551119_Prim((*(_139236_d)).get()._field_Kind.ptr());;
				{
					
					if (_1e5556c13_IsStr(_140017_prim.ptr())) {
						_case_begin_1e8b8a871:;
						{
							_1e5531db9_slicingStr(_self_, _139236_d, _139247_l, _139258_r);
							return;;
						}
					}
					_match_end_1e8b8a7c7:;
				};
			}
		}
		_match_end_1e8b88264:;
	};
	_1e5524d79_pushErr(_self_, (*(_139269_s)).get()._field_Token, jule::Str("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_139236_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Ptr<_1e5522d00_Data> _1e5532639_evalSlicing(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e47803b0_SlicingExpr> _141135_s) {
	jule::Ptr<_1e5522d00_Data> _141217_d = _1e553eb74_evalExprKind(_self_, _141135_s.get()._field_Expr.get()._field_Kind);;
	if ((_141217_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e5522d00_Data> _141718_l;;
	jule::Ptr<_1e5522d00_Data> _141725_r;;
	({
		__jule_tuple_x_1e5522d00_Data__jule_tuple_x_1e5522d00_Data __jule_assign_result = _1e553177b_evalSlicingExprs(_self_, &(_141135_s));
		_141718_l = __jule_assign_result.__jule_result_arg0;
		_141725_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_141718_l == nullptr)) {
		return _141217_d;;
	};
	_141217_d.get()._field_Decl=false;
	_1e553232b_checkSlicing(_self_.ptr(), &(_141217_d), &(_141718_l), &(_141725_r), &(_141135_s));
	if (_1e55236b3_IsConst(_141217_d.ptr())) {
		_141217_d.get()._field_Decl=false;
		_141217_d.get()._field_Model=jule::Any(_141217_d.get()._field_Constant, &__jule_any_type47);
	} else if (_141217_d.get()._field_Decl) {
		_141217_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1e545666d_SlicingExprModel> _143521_model = jule::new_ptr<_1e545666d_SlicingExprModel>(_1e545666d_SlicingExprModel{._field_Token=_141135_s.get()._field_Token, ._field_Expr=_141217_d.get()._field_Model, ._field_Left=_141718_l.get()._field_Model, });;
		if ((_141725_r != nullptr)) {
			_143521_model.get()._field_Right=_141725_r.get()._field_Model;
		};
		_141217_d.get()._field_Model=jule::Any(_143521_model, &__jule_any_type98);
	};
	return _141217_d;;
}



inline void _1e5532a02_castPtr(_1e552486d_Eval* _self_, jule::Ptr<_1e554dc82_TypeKind> _144830_t, jule::Ptr<_1e5522d00_Data> _144848_d, jule::Ptr<_20d155596_Token> _144858_errorToken) {
	_144848_d.get()._field_Constant=nullptr;
	jule::Ptr<_1e5557263_Sptr> _145013_sptr = _1e555137d_Sptr(_144848_d.get()._field_Kind.ptr());;
	if ((_145013_sptr != nullptr)) {
		if ((!(_1e554e48b_Equal(_1e55515e2_Ptr(_144830_t.ptr()).get()._field_Elem, _145013_sptr.get()._field_Elem)))) {
			_1e5524d79_pushErr(_self_, _144858_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_144848_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str(_144830_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((!(_1e55257b4_isUnsafe(_self_)))) {
		_1e5524d79_pushErr(_self_, _144858_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e55539ce_Prim> _146313_prim = _1e5551119_Prim(_144848_d.get()._field_Kind.ptr());;
	if (((_1e55515e2_Ptr(_144848_d.get()._field_Kind.ptr()) == nullptr) && ((_146313_prim == nullptr) || (!(_1e5445dee_IsInt(_1e5553d42_Str(_146313_prim.ptr()))))))) {
		_1e5524d79_pushErr(_self_, _144858_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_144848_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str(_144830_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1e5532dba_castStruct(_1e552486d_Eval* _self_, jule::Ptr<_1e554dc82_TypeKind> _146933_t, jule::Ptr<_1e5522d00_Data> _146951_d, jule::Ptr<_20d155596_Token> _146961_errorToken) {
	_146951_d.get()._field_Constant=nullptr;
	jule::Ptr<_1e5472dc6_Trait> _147117_tr = _1e55527d0_Trait(_146951_d.get()._field_Kind.ptr());;
	if ((_147117_tr == nullptr)) {
		_1e5524d79_pushErr(_self_, _146961_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_146951_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str(_146933_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1e47903e2_StructIns> _147717_s = _1e555256b_Struct(_146933_t.ptr());;
	_1e8b98164_pushReference(_self_, &(_147717_s));
	if ((!(_1e4755077_IsImplements(_147717_s.get()._field_Decl.ptr(), _147117_tr)))) {
		_1e5524d79_pushErr(_self_, _146961_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_146951_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str(_146933_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1e5533283_castRef(_1e552486d_Eval* _self_, jule::Ptr<_1e554dc82_TypeKind> _148530_t, jule::Ptr<_1e5522d00_Data> _148548_d, jule::Ptr<_20d155596_Token> _148558_errorToken) {
	_148548_d.get()._field_Constant=nullptr;
	jule::Ptr<_1e5557263_Sptr> _148717_sptr = _1e555137d_Sptr(_148530_t.ptr());;
	jule::Ptr<_1e555a7c7_Ptr> _148917_ptr = _1e55515e2_Ptr(_148548_d.get()._field_Kind.ptr());;
	if (((_148917_ptr != nullptr) && _1e554e48b_Equal(_148717_sptr.get()._field_Elem, _148917_ptr.get()._field_Elem))) {
		if ((!(_1e55257b4_isUnsafe(_self_)))) {
			_1e5524d79_pushErr(_self_, _148558_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1e555256b_Struct(_148717_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1e5532dba_castStruct(_self_, _148717_sptr.get()._field_Elem, _148548_d, _148558_errorToken);
		return;;
	};
	_1e5524d79_pushErr(_self_, _148558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_148548_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str(_148530_t.ptr()), &__jule_any_type5)}));
}



inline void _1e553364b_castSlc(_1e552486d_Eval* _self_, jule::Ptr<_1e554dc82_TypeKind> _150730_t, jule::Ptr<_1e5522d00_Data> _150748_d, jule::Ptr<_20d155596_Token> _150758_errorToken) {
	_150748_d.get()._field_Constant=nullptr;
	if ((_1e5551856_Enum(_150748_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1e5551119_Prim(_1e5551856_Enum(_150748_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1e5556c13_IsStr(_1e5551119_Prim(_1e5551856_Enum(_150748_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1e5524d79_pushErr(_self_, _150758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_150748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str(_150730_t.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else if (((_1e5551119_Prim(_150748_d.get()._field_Kind.ptr()) == nullptr) || (!(_1e5556c13_IsStr(_1e5551119_Prim(_150748_d.get()._field_Kind.ptr()).ptr()))))) {
		_1e5524d79_pushErr(_self_, _150758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_150748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str(_150730_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	_150730_t=_1e5552093_Slc(_150730_t.ptr()).get()._field_Elem;
	jule::Ptr<_1e55539ce_Prim> _152013_prim = _1e5551119_Prim(_150730_t.ptr());;
	if (((_152013_prim == nullptr) || ((!(_1e55552d8_IsU8(_152013_prim.ptr()))) && (!(_1e5554d10_IsI32(_152013_prim.ptr())))))) {
		_1e5524d79_pushErr(_self_, _150758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_150748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str(_150730_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1e553396a_castStr(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data> _152630_d, jule::Ptr<_20d155596_Token> _152640_errorToken) {
	_152630_d.get()._field_Constant=nullptr;
	if ((_1e5551856_Enum(_152630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e547501b_Enum> _152921_e = _1e5551856_Enum(_152630_d.get()._field_Kind.ptr());;
		if (((_1e5551119_Prim(_152921_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1e5556c13_IsStr(_1e5551119_Prim(_152921_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1e5551119_Prim(_152630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e55539ce_Prim> _153617_prim = _1e5551119_Prim(_152630_d.get()._field_Kind.ptr());;
		if (((!(_1e55552d8_IsU8(_153617_prim.ptr()))) && (!(_1e5554d10_IsI32(_153617_prim.ptr()))))) {
			_1e5524d79_pushErr(_self_, _152640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_1e554e17d_Str(_152630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_1e5552093_Slc(_152630_d.get()._field_Kind.ptr()) == nullptr)) {
		_1e5524d79_pushErr(_self_, _152640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_1e554e17d_Str(_152630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1e554dc82_TypeKind> _154817_t = _1e5552093_Slc(_152630_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_1e55539ce_Prim> _154913_prim = _1e5551119_Prim(_154817_t.ptr());;
	if (((_154913_prim == nullptr) || ((!(_1e55552d8_IsU8(_154913_prim.ptr()))) && (!(_1e5554d10_IsI32(_154913_prim.ptr())))))) {
		_1e5524d79_pushErr(_self_, _152640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_1e554e17d_Str(_152630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline void _1e5533d33_castInt(_1e552486d_Eval* _self_, jule::Ptr<_1e554dc82_TypeKind> _155530_t, jule::Ptr<_1e5522d00_Data> _155548_d, jule::Ptr<_20d155596_Token> _155558_errorToken) {
	if (_1e55236b3_IsConst(_155548_d.ptr())) {
		jule::Ptr<_1e55539ce_Prim> _155717_prim = _1e5551119_Prim(_155530_t.ptr());;
		{
			
			if (_1e544586b_IsSigInt(_155717_prim.get()._field_Kind)) {
				_case_begin_1e8bb2920:;
				{
					_1e544972c_SetI64(_155548_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e5448ece_AsI64(_155548_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1e5445b57_IsUnsigInt(_155717_prim.get()._field_Kind)) {
				_case_begin_1e8bb2997:;
				{
					_1e54499a2_SetU64(_155548_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e5449243_AsU64(_155548_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1e8bb2865:;
		};
	} else {
		_155548_d.get()._field_Constant=nullptr;
	};
	if ((_1e5551856_Enum(_155548_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e547501b_Enum> _156917_e = _1e5551856_Enum(_155548_d.get()._field_Kind.ptr());;
		if (_1e54464b5_IsNum(_1e554e17d_Str(_156917_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1e555137d_Sptr(_155548_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e55539ce_Prim> _157617_prim = _1e5551119_Prim(_155530_t.ptr());;
		if ((!(_1e555673a_IsUintptr(_157617_prim.ptr())))) {
			_1e5524d79_pushErr(_self_, _155558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_155548_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str(_155530_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_1e55515e2_Ptr(_155548_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e55539ce_Prim> _158317_prim = _1e5551119_Prim(_155530_t.ptr());;
		if (_1e555673a_IsUintptr(_158317_prim.ptr())) {
		} else if ((!(_1e55257b4_isUnsafe(_self_)))) {
			_1e5524d79_pushErr(_self_, _155558_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1e55539ce_Prim> _159213_prim = _1e5551119_Prim(_155548_d.get()._field_Kind.ptr());;
	if (((_159213_prim != nullptr) && _1e54464b5_IsNum(_1e5553d42_Str(_159213_prim.ptr())))) {
		return;;
	};
	_1e5524d79_pushErr(_self_, _155558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_155548_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str(_155530_t.ptr()), &__jule_any_type5)}));
}



inline void _1e55341eb_castNum(_1e552486d_Eval* _self_, jule::Ptr<_1e554dc82_TypeKind> _160030_t, jule::Ptr<_1e5522d00_Data> _160048_d, jule::Ptr<_20d155596_Token> _160058_errorToken) {
	if (_1e55236b3_IsConst(_160048_d.ptr())) {
		jule::Ptr<_1e55539ce_Prim> _160217_prim = _1e5551119_Prim(_160030_t.ptr());;
		{
			
			if (_1e544621d_IsFloat(_160217_prim.get()._field_Kind)) {
				_case_begin_1e8bbb495:;
				{
					_1e544a222_SetF64(_160048_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1e54494a7_AsF64(_160048_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1e544586b_IsSigInt(_160217_prim.get()._field_Kind)) {
				_case_begin_1e8bbb51c:;
				{
					_1e544972c_SetI64(_160048_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e5448ece_AsI64(_160048_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1e5445b57_IsUnsigInt(_160217_prim.get()._field_Kind)) {
				_case_begin_1e8bbb594:;
				{
					_1e54499a2_SetU64(_160048_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e5449243_AsU64(_160048_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1e8bbb3c9:;
		};
	} else {
		_160048_d.get()._field_Constant=nullptr;
	};
	if ((_1e5551856_Enum(_160048_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e547501b_Enum> _161617_e = _1e5551856_Enum(_160048_d.get()._field_Kind.ptr());;
		if (_1e54464b5_IsNum(_1e554e17d_Str(_161617_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1e55539ce_Prim> _162213_prim = _1e5551119_Prim(_160048_d.get()._field_Kind.ptr());;
	if (((_162213_prim != nullptr) && _1e54464b5_IsNum(_1e5553d42_Str(_162213_prim.ptr())))) {
		return;;
	};
	_1e5524d79_pushErr(_self_, _160058_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_160048_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str(_160030_t.ptr()), &__jule_any_type5)}));
}



inline void _1e55345b4_castPrim(_1e552486d_Eval* _self_, jule::Ptr<_1e554dc82_TypeKind> _163031_t, jule::Ptr<_1e5522d00_Data> _163049_d, jule::Ptr<_20d155596_Token> _163059_errorToken) {
	jule::Ptr<_1e55539ce_Prim> _163113_prim = _1e5551119_Prim(_163031_t.ptr());;
	{
		
		if (_1e5556e77_IsAny(_163113_prim.ptr())) {
			_case_begin_1e8bc1ee5:;
			{
				_163049_d.get()._field_Constant=nullptr;
			}
		}
		else if (_1e5556c13_IsStr(_163113_prim.ptr())) {
			_case_begin_1e8bc2556:;
			{
				_1e553396a_castStr(_self_, _163049_d, _163059_errorToken);
			}
		}
		else if (_1e5445dee_IsInt(_1e5553d42_Str(_163113_prim.ptr()))) {
			_case_begin_1e8bc25bc:;
			{
				_1e5533d33_castInt(_self_, _163031_t, _163049_d, _163059_errorToken);
			}
		}
		else if (_1e54464b5_IsNum(_1e5553d42_Str(_163113_prim.ptr()))) {
			_case_begin_1e8bc2644:;
			{
				_1e55341eb_castNum(_self_, _163031_t, _163049_d, _163059_errorToken);
			}
		}
		else {
			_case_begin_1e8bc24e0:;
			{
				_1e5524d79_pushErr(_self_, _163059_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_163031_t.ptr()), &__jule_any_type5)}));
			}
		}
		_match_end_1e8bc2479:;
	};
}



inline void _1e55348d3_castConstant(_1e552486d_Eval* _self_, jule::Ptr<_1e554dc82_TypeKind>* _164736_t, jule::Ptr<_1e5522d00_Data>* _164755_d) {
	if ((((*(_164755_d)) == nullptr) || (!(_1e55236b3_IsConst((*(_164755_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1e55539ce_Prim> _165113_prim = _1e5551119_Prim((*(_164736_t)).ptr());;
	_1e554ae49_castConstByType(&(_165113_prim.get()._field_Kind), _164755_d);
	(*(_164755_d)).get()._field_Model=jule::Any((*(_164755_d)).get()._field_Constant, &__jule_any_type47);
}



inline void _1e5534c9b_castTypeEnum(_1e552486d_Eval* _self_, jule::Ptr<_1e554dc82_TypeKind>* _165636_t, jule::Ptr<_1e5522d00_Data>* _165655_d, jule::Ptr<_20d155596_Token>* _165670_errorToken) {
	jule::I64 _165713_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1e54b728e_checkTypeCompatibility((*(_self_))._field_s, &((*(_165655_d)).get()._field_Kind), _165636_t, _165670_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _165713_n);
		_1e5524d79_pushErr(_self_, (*(_165670_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_165655_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_165636_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_165655_d)).get()._field_Constant=nullptr;
}



inline void _1e5535164_castTypeEnumT(_1e552486d_Eval* _self_, jule::Ptr<_1e554dc82_TypeKind>* _166537_t, jule::Ptr<_1e5522d00_Data>* _166556_d, jule::Ptr<_20d155596_Token>* _166571_errorToken) {
	jule::I64 _166613_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1e54b728e_checkTypeCompatibility((*(_self_))._field_s, _166537_t, &((*(_166556_d)).get()._field_Kind), _166571_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _166613_n);
		_1e5524d79_pushErr(_self_, (*(_166571_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_166556_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_166537_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_166556_d)).get()._field_Constant=nullptr;
}



inline jule::Ptr<_1e5522d00_Data> _1e55355b5_evalCastByTypeNData(_1e552486d_Eval* _self_, jule::Ptr<_1e554dc82_TypeKind> _167442_t, jule::Ptr<_1e5522d00_Data> _167460_d, jule::Ptr<_20d155596_Token> _167474_errorToken) {
	if (((_167460_d != nullptr) && _167460_d.get()._field_Decl)) {
		_1e5524d79_pushErr(_self_, _167474_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1e55231da_IsNil(_167460_d.ptr())) {
			_case_begin_1e8bcd81a:;
			{
				if ((!(_1e5550668_NilCompatible(_167442_t.ptr())))) {
					_1e5524d79_pushErr(_self_, _167474_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type5),jule::Any(_1e554e17d_Str(_167442_t.ptr()), &__jule_any_type5)}));
				};
				_167460_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_1e5551119_Prim(_167460_d.get()._field_Kind.ptr()) != nullptr) && _1e5556e77_IsAny(_1e5551119_Prim(_167460_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1e8bcceac:;
			{
				if ((_1e5551856_Enum(_167442_t.ptr()) != nullptr)) {
					_1e5524d79_pushErr(_self_, _167474_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1e5525198_pushSugggestion(_self_, jule::Str("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1e5551aba_TypeEnum(_167442_t.ptr()) != nullptr)) {
					_1e5524d79_pushErr(_self_, _167474_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				_167460_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_1e5551aba_TypeEnum(_167460_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8bccc37:;
			{
				_1e5534c9b_castTypeEnum(_self_, &(_167442_t), &(_167460_d), &(_167474_errorToken));
			}
		}
		else if ((_1e5551aba_TypeEnum(_167442_t.ptr()) != nullptr)) {
			_case_begin_1e8bccc9d:;
			{
				_1e5535164_castTypeEnumT(_self_, &(_167442_t), &(_167460_d), &(_167474_errorToken));
			}
		}
		else if ((_1e55515e2_Ptr(_167442_t.ptr()) != nullptr)) {
			_case_begin_1e8bccd14:;
			{
				_1e5532a02_castPtr(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_1e555137d_Sptr(_167442_t.ptr()) != nullptr)) {
			_case_begin_1e8bcd95d:;
			{
				_1e5533283_castRef(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_1e5552093_Slc(_167442_t.ptr()) != nullptr)) {
			_case_begin_1e8bcd9c4:;
			{
				_1e553364b_castSlc(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_1e555256b_Struct(_167442_t.ptr()) != nullptr)) {
			_case_begin_1e8bcda3a:;
			{
				_1e5532dba_castStruct(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_1e5551119_Prim(_167442_t.ptr()) != nullptr)) {
			_case_begin_1e8bcdab2:;
			{
				_1e55345b4_castPrim(_self_, _167442_t, _167460_d, _167474_errorToken);
				_1e55348d3_castConstant(_self_, &(_167442_t), &(_167460_d));
			}
		}
		else {
			_case_begin_1e8bccb16:;
			{
				_1e5524d79_pushErr(_self_, _167474_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_167442_t.ptr()), &__jule_any_type5)}));
				_167460_d=nullptr;
			}
		}
		_match_end_1e8bccab1:;
	};
	if ((_167460_d == nullptr)) {
		return nullptr;;
	};
	_167460_d.get()._field_Mutable=(_167460_d.get()._field_Mutable || ((!(_1e5550404_Mutable(_167460_d.get()._field_Kind.ptr()))) && _1e5550404_Mutable(_167442_t.ptr())));
	_167460_d.get()._field_Lvalue=false;
	_167460_d.get()._field_Decl=false;
	if (((_1e5551856_Enum(_167460_d.get()._field_Kind.ptr()) == nullptr) || (!(_1e554e48b_Equal(_1e5551856_Enum(_167460_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _167442_t))))) {
		_1e554a410_applyCastKind(&(_167460_d), &(_167442_t));
		_167460_d.get()._field_Model.cast_ptr<_1e5454270_CastingExprModel>(&__jule_any_type100).get()._field_Token=_167474_errorToken;
	} else {
		_167460_d.get()._field_Kind=_167442_t;
	};
	_167460_d.get()._field_untyped=false;
	if (_1e55236b3_IsConst(_167460_d.ptr())) {
		_167460_d.get()._field_Constant.get()._field_Kind=_1e5551119_Prim(_167442_t.ptr()).get()._field_Kind;
	};
	return _167460_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e5535a16_evalCastT(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e554dc82_TypeKind>* _173934_t, jule::Ptr<_1e4777d47_Expr>* _173953_e, jule::Ptr<_20d155596_Token>* _173968_et) {
	jule::Ptr<_1e554dc82_TypeKind> _174017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_174017_prefix;
	});;
	if ((_1e5552093_Slc((*(_173934_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_173953_e)).get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1e8bdb5a3:;
				{
					_self_.get()._field_prefix=(*(_173934_t));
				}
			}
			_match_end_1e8bdb509:;
		};
	};
	jule::Ptr<_1e5522d00_Data> _174917_d = _1e553eb74_evalExprKind(_self_, (*(_173953_e)).get()._field_Kind);;
	if (((_174917_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _174917_d;;
	};
	return _1e55355b5_evalCastByTypeNData(_self_.ptr(), (*(_173934_t)), _174917_d, (*(_173968_et)));;
}



inline jule::Ptr<_1e5522d00_Data> _1e5535d24_evalCast(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e477a971_CastExpr> _175632_c) {
	jule::Ptr<_1e5553160_TypeSymbol> _175717_t = _1e54682a6_buildType(_175632_c.get()._field_Kind);;
	jule::Bool _175813_ok = _1e54b51b0_checkType(_self_.get()._field_s, &(_175717_t), _self_.get()._field_lookup);;
	if ((!(_175813_ok))) {
		return nullptr;;
	};
	return _1e5535a16_evalCastT(_self_, &(_175717_t.get()._field_Kind), &(_175632_c.get()._field_Expr), &(_175632_c.get()._field_Kind.get()._field_Token));;
}



inline jule::Ptr<_1e5522d00_Data> _1e5536132_evalNsSelection(_1e552486d_Eval* _self_, jule::Ptr<_1e477ad28_NsSelectionExpr> _176534_s) {
	jule::Str _176613_path = _1e5566bbd_buildLinkPathByTokens(&(_176534_s.get()._field_Ns));;
	jule::Ptr<_1e54a4149_ImportInfo> _176717_imp = _1e5569c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e55681b9_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)>([=](jule::Ptr<_1e54a4149_ImportInfo> _176752_imp) mutable -> jule::Bool {
		if (((_176534_s.get()._field_Ns.len() == 1LL) && (_176752_imp.get()._field_Alias == _176613_path))) {
			return true;;
		};
		return ((_176752_imp.get()._field_LinkPath == _176613_path) && _1e54a6ca6_isAccessibleViaSelection(_176752_imp.ptr()));;
	}));;
	if ((_176717_imp == nullptr)) {
		_1e5524d79_pushErr(_self_, _176534_s.get()._field_Ns[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_176613_path, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Trait<_1e5569c04_Lookup> _177917_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1e5569c04_Lookup>(_176717_imp, 1);
	;
	_1e5525550_disallowBuiltin(_self_);
	jule::Any _178417_def = _1e5527d8d_getDef(_self_, _176534_s.get()._field_Ident.get()._field_Kind, false);;
	_1e5525374_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_177917_lookup;
	jule::Ptr<_1e5522d00_Data> _178717_d = _1e552b875_evalDef(_self_, _178417_def, _176534_s.get()._field_Ident);;
	return _178717_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e5536583_evalStructLitExplicit(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e47903e2_StructIns> _179145_s, jule::Slice<jule::Ptr<_1e4777d47_Expr>> _179213_exprs, jule::Ptr<_20d155596_Token> _179233_errorToken) {
	jule::Bool _179313_ok = _1e54b12ee_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_179145_s.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_179145_s.get()._field_Generics.len()), _179233_errorToken);;
	if ((!(_179313_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _179145_s.get()._field_Decl))) {
		_1e5524d79_pushErr(_self_.ptr(), _179233_errorToken, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_179145_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
	};
	_1e8b98164_pushReference(_self_.ptr(), &(_179145_s));
	_1e5529c80_checkDeprecated(_self_.ptr(), &(_179145_s.get()._field_Decl.get()._field_Directives), _179233_errorToken);
	_1e5517498_structLitChecker _180617_slc = _1e5517498_structLitChecker{._field_e=_self_, ._field_errorToken=_179233_errorToken, ._field_s=_179145_s, };;
	_1e5518a3d_check(&_180617_slc, &(_179213_exprs));
	jule::Ptr<_1e5522d00_Data> _181317_d = jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_179145_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1e5453912_StructLitExprModel>(_1e5453912_StructLitExprModel{._field_Strct=_179145_s, ._field_Args=_180617_slc._field_args}), &__jule_any_type102), });;
	if (_179145_s.get()._field_Decl.get()._field_CppLinked) {
		_181317_d.get()._field_Kind.get()._field_CppIdent=_179145_s.get()._field_Decl.get()._field_Ident;
	};
	return _181317_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e5536891_evalStructLit(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e477d006_StructLit> _182937_lit) {
	jule::Ptr<_1e5553160_TypeSymbol> _183017_t = _1e54682a6_buildType(_182937_lit.get()._field_Kind);;
	jule::Bool _183113_ok = _1e54b51b0_checkType(_self_.get()._field_s, &(_183017_t), _self_.get()._field_lookup);;
	if ((!(_183113_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1e47903e2_StructIns> _183617_s = _1e555256b_Struct(_183017_t.get()._field_Kind.ptr());;
	if ((_183617_s == nullptr)) {
		if ((_1e555137d_Sptr(_183017_t.get()._field_Kind.ptr()) != nullptr)) {
			_183617_s=_1e555256b_Struct(_1e555137d_Sptr(_183017_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_183617_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1e5524d79_pushErr(_self_.ptr(), _182937_lit.get()._field_Kind.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_1e5522d00_Data> _184917_d = _1e5536583_evalStructLitExplicit(_self_, _183617_s, _182937_lit.get()._field_Exprs, _182937_lit.get()._field_Kind.get()._field_Token);;
	if ((_1e555137d_Sptr(_183017_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e5453912_StructLitExprModel> _185121_model = _184917_d.get()._field_Model.cast_ptr<_1e5453912_StructLitExprModel>(&__jule_any_type102);;
		_1e5548cc1_makeStructLitAlloc(&(_184917_d), &(_185121_model));
	};
	return _184917_d;;
}



inline _1e555c5ed_typeChecker _1e5536b05_typeChecker(_1e552486d_Eval* _self_) {
	return _1e54b409e_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1e5522d00_Data> _1e5536e13_evalType(_1e552486d_Eval* _self_, jule::Ptr<_1e4773826_TypeDecl> _186131_t) {
	jule::Ptr<_1e5553160_TypeSymbol> _186217_tk = _1e54682a6_buildType(_186131_t);;
	jule::Bool _186313_ok = _1e54b51b0_checkType((*(_self_))._field_s, &(_186217_tk), (*(_self_))._field_lookup);;
	if ((!(_186313_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=_186217_tk.get()._field_Kind, ._field_Model=jule::Any(_186217_tk.get()._field_Kind, &__jule_any_type90), ._field_Decl=true, });;
}



inline void _1e5537232_callTypeFn(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e477bd29_FnCallExpr>* _187435_fc, jule::Ptr<_1e5522d00_Data>* _187457_d) {
	if (((*(_187435_fc)).get()._field_Args.len() < 1LL)) {
		_1e5524d79_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
	} else if (((*(_187435_fc)).get()._field_Args.len() > 1LL)) {
		_1e5524d79_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	} else if ((*(_187435_fc)).get()._field_IsCo) {
		_1e5524d79_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Token, jule::Str("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_187457_d))=nullptr;
		return;;
	} else if (((*(_187435_fc)).get()._field_Exception != nullptr)) {
		_1e5524d79_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Token, jule::Str("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_187457_d))=nullptr;
		return;;
	};
	if (((*(_187435_fc)).get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1e4777d47_Expr> _189021_arg = (*(_187435_fc)).get()._field_Args[0LL];;
		(*(_187457_d))=_1e5535a16_evalCastT(_self_, &((*(_187457_d)).get()._field_Kind), &(_189021_arg), &(_189021_arg.get()._field_Token));
		return;;
	};
	if (((*(_187457_d)) != nullptr)) {
		(*(_187457_d)).get()._field_Decl=false;
	};
}



inline void _1e5537551_callBuiltinFn(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e477bd29_FnCallExpr>* _190038_fc, jule::Ptr<_1e5522d00_Data>* _190060_d) {
	(*(_190060_d))=_1e5552307_Fn((*(_190060_d)).get()._field_Kind.ptr()).get()._field_caller(&(_self_), _190038_fc, _190060_d);
	if (((*(_190060_d)) == nullptr)) {
		return;;
	};
	(*(_190060_d)).get()._field_Mutable=true;
}



inline void _1e5537892_checkFnOfConcurrentCall(_1e552486d_Eval* _self_, jule::Ptr<_1e5463b75_FnIns>* _190843_f, jule::Ptr<_20d155596_Token> _190854_errorToken) {
	if (_1e55257b4_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*(_190843_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8c10ae4:;
		if (it != expr_end) {
			jule::Ptr<_1e5462ca6_ParamIns> *_191216_p = it;
			{
				if (_1e545ecb4_IsSelf((*(_191216_p)).get()._field_Decl.ptr())) {
					if ((!(_1e5460028_IsRef((*(_191216_p)).get()._field_Decl.ptr())))) {
						_1e5524d79_pushErr(_self_, _190854_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1e5525198_pushSugggestion(_self_, jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(_191216_p)).get()._field_Decl.get()._field_Reference) {
					_1e5524d79_pushErr(_self_, _190854_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1e5525198_pushSugggestion(_self_, jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1e8c10ae4:;
			++it;
			goto _iter_begin_1e8c10ae4;
		}
		_iter_end_1e8c10ae4:;
	};
}



inline void _1e5537c8d_processExceptionalHandler(_1e552486d_Eval* _self_, jule::Ptr<_1e5463b75_FnIns>* _192749_f, jule::Ptr<_1e477bd29_FnCallExpr>* _192765_fc, jule::Ptr<_1e5522d00_Data>* _192787_d) {
	jule::Bool _192813_resultNeeded = ((!(_1e5461436_IsVoid((*(_192749_f)).get()._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1e548c4a6_scopeChecker> _192917_csc = nullptr;;
	jule::Ptr<_1e5480ad7_Scope> _193017_ch = nullptr;;
	jule::Ptr<_1e5454b22_FnCallExprModel> _193217_model = (*(_192787_d)).get()._field_Model.cast_ptr<_1e5454b22_FnCallExprModel>(&__jule_any_type34);;
	jule::Ptr<_1e548c4a6_scopeChecker> _193617_sc = (*(_self_))._field_lookup.cast_ptr<_1e548c4a6_scopeChecker>(0);;
	_192917_csc=_1e549c51b_newChildChecker(_193617_sc);
	if (_192813_resultNeeded) {
		_192917_csc.get()._field_result=(*(_192749_f));
	};
	_193017_ch=_1e5491da1_getChild(_193617_sc.ptr());
	(*(_192765_fc)).get()._field_Exception.get()._field_Parent=_193617_sc.get()._field_tree;
	_192917_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_192917_csc.get()._field_table.get()._field_Vars,1);_192917_csc.get()._field_table.get()._field_Vars.__push(_1e5549112_buildErrorVar(&(_193017_ch), _192765_fc));;
	_1e5492269_checkChildSsc(_193617_sc, &((*(_192765_fc)).get()._field_Exception), &(_193017_ch), &(_192917_csc));
	_193217_model.get()._field_Assigned=_192813_resultNeeded;
	_193217_model.get()._field_Except=_193017_ch;
	if ((_192813_resultNeeded && (_192917_csc.get()._field_result != nullptr))) {
		_1e5524d79_pushErr(_self_, (*(_192765_fc)).get()._field_Token, jule::Str("assignments requires expression", 31), jule::Slice<jule::Any>());
	};
}



inline void _1e55380bd_callFn(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e477bd29_FnCallExpr>* _195431_fc, jule::Ptr<_1e5522d00_Data>* _195453_d) {
	jule::Ptr<_1e5463b75_FnIns> _195517_f = _1e5552307_Fn((*(_195453_d)).get()._field_Kind.ptr());;
	if (_1e546500b_IsBuiltin(_195517_f.ptr())) {
		_1e5537551_callBuiltinFn(_self_, _195431_fc, _195453_d);
		return;;
	};
	if ((_1e5525a28_isGlobal(_self_.ptr()) && _195517_f.get()._field_Decl.get()._field_Exceptional)) {
		_1e5524d79_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1e5525198_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_195453_d))=nullptr;
		return;;
	};
	if (((!(_1e546169a_IsMethod(_195517_f.get()._field_Decl.ptr()))) && _1e5565d21_hasDirective(&(_195517_f.get()._field_Decl.get()._field_Directives), jule::Str("test", 4)))) {
		_1e5524d79_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_195453_d))=nullptr;
		return;;
	};
	if (((((!((*(_195453_d)).get()._field_Mutable)) && _1e546169a_IsMethod(_195517_f.get()._field_Decl.ptr())) && (!(_195517_f.get()._field_Decl.get()._field_Statically))) && _195517_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_1e5524d79_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	} else if (((!(_1e55257b4_isUnsafe(_self_.ptr()))) && _195517_f.get()._field_Decl.get()._field_Unsafety)) {
		_1e5524d79_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _197917_dynamicAnnotation = (((_195517_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_195517_f.get()._field_Generics.len() == 0LL)) && (_195517_f.get()._field_Params.len() > 0LL));;
	if (_197917_dynamicAnnotation) {
		_195517_f.get()._field_Generics=jule::Slice<jule::Ptr<_1e554c555_InsGeneric>>::alloc(_195517_f.get()._field_Decl.get()._field_Generics.len(), _195517_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_195517_f.get()._field_Generics.len() != _195517_f.get()._field_Decl.get()._field_Generics.len())) {
		_1e54b12ee_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_195517_f.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_195517_f.get()._field_Generics.len()), (*(_195431_fc)).get()._field_Token);
		(*(_195453_d))=nullptr;
		return;;
	};
	jule::Ptr<_1e54ac295_Sema> _198817_old = _self_.get()._field_s;;
	if ((_195517_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_195517_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_198817_old != _self_.get()._field_s)) {
			_198817_old.get()._field_errors=jule::append(_198817_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_198817_old;
	});;
	_1e5514a8e_fnCallArgChecker _200117_fcac = _1e5514a8e_fnCallArgChecker{._field_e=_self_, ._field_args=(*(_195431_fc)).get()._field_Args, ._field_errorToken=(*(_195431_fc)).get()._field_Token, ._field_dynamicAnnotation=_197917_dynamicAnnotation, };;
	if ((!(_197917_dynamicAnnotation))) {
		if ((!(_195517_f.get()._field_reloaded))) {
			jule::Bool _201021_ok = _1e54b9208_reloadFnInsTypes(_self_.get()._field_s, _195517_f);;
			_195517_f.get()._field_reloaded=true;
			if ((!(_201021_ok))) {
				(*(_195453_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1e5463b75_FnIns> _201721_existInstance = _1e54628ee_appendInstance(_195517_f.get()._field_Decl.ptr(), &(_195517_f));;
		if ((_201721_existInstance != nullptr)) {
			_195517_f=_201721_existInstance;
		};
	} else if ((!(_1e54b7aec_buildFnNonGenericTypeKinds(_self_.get()._field_s, &(_195517_f), &(_200117_fcac._field_ignored))))) {
		(*(_195453_d))=nullptr;
		return;;
	};
	_200117_fcac._field_f=_195517_f;
	jule::Bool _202817_ok = false;;
	if ((_195517_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_1e54ac295_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1e54ac295_Sema> _1___jule_assign_arg = _198817_old;
			_198817_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_202817_ok=_1e5516e59_check(&_200117_fcac);
		({
			jule::Ptr<_1e54ac295_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1e54ac295_Sema> _1___jule_assign_arg = _198817_old;
			_198817_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_202817_ok=_1e5516e59_check(&_200117_fcac);
	};
	if (_197917_dynamicAnnotation) {
		if ((!(_202817_ok))) {
			(*(_195453_d))=nullptr;
			return;;
		};
		if ((!(_1e5530d0d_checkGenericFn(_self_, &(_195517_f), &((*(_195431_fc)).get()._field_Token), &((*(_195453_d)).get()._field_Model))))) {
			(*(_195453_d))=nullptr;
			return;;
		};
	};
	jule::Any _204817_callModel = (*(_195453_d)).get()._field_Model;;
	if (_1e5461436_IsVoid(_195517_f.get()._field_Decl.ptr())) {
		(*(_195453_d))=_1e554a60d_buildVoidData();
	} else {
		(*(_195453_d)).get()._field_Kind=_195517_f.get()._field_Result;
		(*(_195453_d)).get()._field_Lvalue=false;
	};
	jule::Ptr<_1e5454b22_FnCallExprModel> _205717_model = jule::new_ptr<_1e5454b22_FnCallExprModel>(_1e5454b22_FnCallExprModel{._field_Token=(*(_195431_fc)).get()._field_Token, ._field_Func=_195517_f, ._field_IsCo=(*(_195431_fc)).get()._field_IsCo, ._field_Expr=_204817_callModel, ._field_Args=_200117_fcac._field_argModels, });;
	(*(_195453_d)).get()._field_Model=jule::Any(_205717_model, &__jule_any_type34);
	(*(_195453_d)).get()._field_Mutable=true;
	if (_195517_f.get()._field_Decl.get()._field_Exceptional) {
		if ((*(_195431_fc)).get()._field_IsCo) {
			_1e54aee57_pushErr(_self_.get()._field_s.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1e54b0276_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1e477c18c_Unhandled((*(_195431_fc)).ptr())) {
				_case_begin_1e8c2d56d:;
				{
					_1e5524d79_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1e5525198_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1e477c401_Ignored((*(_195431_fc)).ptr())) {
				_case_begin_1e8c2d10b:;
				{
					goto _match_end_1e8c2c1d7;
				}
			}
			else {
				_case_begin_1e8c2c24d:;
				{
					_1e5537c8d_processExceptionalHandler(_self_.ptr(), &(_195517_f), _195431_fc, _195453_d);
				}
			}
			_match_end_1e8c2c1d7:;
		};
	} else if ((!(_1e477c18c_Unhandled((*(_195431_fc)).ptr())))) {
		_1e5524d79_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*(_195431_fc)).get()._field_IsCo) {
		_1e5537892_checkFnOfConcurrentCall(_self_.ptr(), &(_205717_model.get()._field_Func), (*(_195431_fc)).get()._field_Token);
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e55383cb_evalFnCall(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e477bd29_FnCallExpr> _209234_fc) {
	jule::Ptr<_1e554dc82_TypeKind> _209317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_209317_prefix;
	});;
	{
		auto &_match_expr{ _209234_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1e8c310a9:;
			{
				if ((_209234_fc.get()._field_Expr.get()._field_Token.get()._field_Kind == jule::Str("error", 5))) {
					return _1e621ae26_builtinCallerError(&(_self_), &(_209234_fc));;
				};
			}
		}
		_match_end_1e8c31054:;
	};
	jule::Ptr<_1e5522d00_Data> _210617_d = _1e553eb74_evalExprKind(_self_, _209234_fc.get()._field_Expr.get()._field_Kind);;
	if ((_210617_d == nullptr)) {
		return nullptr;;
	};
	if (_210617_d.get()._field_Decl) {
		_1e5537232_callTypeFn(_self_, &(_209234_fc), &(_210617_d));
		return _210617_d;;
	};
	if ((_1e5552307_Fn(_210617_d.get()._field_Kind.ptr()) == nullptr)) {
		_1e5524d79_pushErr(_self_.ptr(), _209234_fc.get()._field_Token, jule::Str("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1e55380bd_callFn(_self_, &(_209234_fc), &(_210617_d));
	return _210617_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e5538783_evalEnumStatic(_1e552486d_Eval* _self_, jule::Ptr<_1e547501b_Enum> _212537_enm, jule::Ptr<_20d155596_Token> _212549_ident) {
	jule::Ptr<_1e5522d00_Data> _212617_d = jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_212537_enm, 3)}), });;
	jule::Ptr<_1e5474526_EnumItem> _213217_item = _1e5475acc_FindItem(_212537_enm.ptr(), _212549_ident.get()._field_Kind);;
	if ((_213217_item == nullptr)) {
		_1e5524d79_pushErr(_self_, _212549_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_212537_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_212549_ident.get()._field_Kind, &__jule_any_type5)}));
	} else {
		_212617_d.get()._field_Constant=jule::new_ptr<_1e54469c1_Const>((*(_213217_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_212617_d.get()._field_Model=jule::Any(_212617_d.get()._field_Constant, &__jule_any_type47);
		_1e554ab91_applyCastModelByEnum(&(_212617_d), _212537_enm);
	};
	return _212617_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e5538b3a_evalTypeEnumStatic(_1e552486d_Eval* _self_, jule::Ptr<_1e5476616_TypeEnum> _214441_enm, jule::Ptr<_20d155596_Token> _214457_ident) {
	jule::Ptr<_1e5476050_TypeEnumItem> _214517_item = _1e5477150_FindItem(_214441_enm.ptr(), _214457_ident.get()._field_Kind);;
	if ((_214517_item == nullptr)) {
		_1e5524d79_pushErr(_self_, _214457_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_214441_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_214457_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if ((_1e5551856_Enum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8c38e08:;
			{
				return _1e5528421__evalEnum(_self_, _1e5551856_Enum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1e5551aba_TypeEnum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8c3959b:;
			{
				return _1e5528ad6__evalTypeEnum(_self_, _1e5551aba_TypeEnum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1e555256b_Struct(_214517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8c38930:;
			{
				return _1e552929b__evalStruct(_self_, _1e555256b_Struct(_214517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1e8c38765:;
			{
				jule::Ptr<_1e5522d00_Data> _215821_d = jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=_214517_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_215821_d.get()._field_Model=jule::Any(_215821_d.get()._field_Kind, &__jule_any_type90);
				return _215821_d;;
			}
		}
		_match_end_1e8c38710:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e5538ee2_evalStructStatic(_1e552486d_Eval* _self_, jule::Ptr<_1e47903e2_StructIns> _216739_s, jule::Ptr<_20d155596_Token> _216754_ident) {
	jule::Ptr<_1e5522d00_Data> _216817_d = jule::new_ptr<_1e5522d00_Data>();;
	;
	jule::Ptr<_1e5460ec4_Fn> _217217_method = _1e476a521_FindMethod(_216739_s.ptr(), _216754_ident.get()._field_Kind, true);;
	if ((_217217_method != nullptr)) {
		if ((!(_1e54b062d_isAccessibleDefine((*(_self_))._field_s.ptr(), _217217_method.get()._field_Public, _217217_method.get()._field_Token)))) {
			_1e5524d79_pushErr(_self_, _216754_ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_216754_ident.get()._field_Kind, &__jule_any_type5)}));
			_1e5525198_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e5463b75_FnIns> _217921_ins = _1e5462624_instance(_217217_method);;
		_217921_ins.get()._field_Owner=_216739_s;
		_1e8ae3e7d_pushReference(_self_, &(_217921_ins));
		_216817_d.get()._field_Model=jule::Any(jule::new_ptr<_1e5457839_StructStaticIdentExprModel>(_1e5457839_StructStaticIdentExprModel{._field_Structure=_216739_s, ._field_Expr=_216817_d.get()._field_Model, ._field_Method=_217921_ins}), &__jule_any_type103);
		_216817_d.get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_217921_ins, 1)});
		return _216817_d;;
	};
	jule::Ptr<_1e54ca291_Var> _219317_sttc = _1e47584a9_FindStatic(_216739_s.ptr(), _216754_ident.get()._field_Kind);;
	if ((_219317_sttc != nullptr)) {
		return _1e552b116_evalVar(_self_, _219317_sttc, _216754_ident);;
	};
	_1e5524d79_pushErr(_self_, _216754_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_216739_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_216754_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1e5522d00_Data> _1e5539443_evalTraitSubIdent(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data> _220240_d, jule::Ptr<_1e5472dc6_Trait> _220254_trt, jule::Ptr<_20d155596_Token> _220271_ident) {
	jule::Ptr<_1e5460ec4_Fn> _220317_f = _1e5473c51_FindMethod(_220254_trt.ptr(), _220271_ident.get()._field_Kind);;
	if ((_220317_f == nullptr)) {
		_1e5524d79_pushErr(_self_, _220271_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_220254_trt.get()._field_Ident, &__jule_any_type5),jule::Any(_220271_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5462624_instance(_220317_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1e5456bac_TraitSubIdentExprModel>(_1e5456bac_TraitSubIdentExprModel{._field_Token=_220271_ident, ._field_Expr=_220240_d.get()._field_Model, ._field_Method=_220317_f, ._field_Trt=_220254_trt}), &__jule_any_type70), });;
}



inline jule::Ptr<_1e5522d00_Data> _1e553993d_evalStructSubIdent(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data> _222141_d, jule::Ptr<_1e47903e2_StructIns> _222155_s, jule::Ptr<_1e477b29b_SubIdentExpr> _222174_si, jule::Bool _222193_ref) {
	jule::Ptr<_1e4790205_FieldIns> _222217_f = _1e474c48c_FindField(_222155_s.ptr(), _222174_si.get()._field_Ident.get()._field_Kind);;
	if ((_222217_f != nullptr)) {
		if ((!(_1e54b062d_isAccessibleDefine((*(_self_))._field_s.ptr(), _222217_f.get()._field_Decl.get()._field_Public, _222217_f.get()._field_Decl.get()._field_Token)))) {
			_1e5524d79_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_222217_f.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
			_1e5525198_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e5457493_StructSubIdentExprModel> _222921_model = jule::new_ptr<_1e5457493_StructSubIdentExprModel>(_1e5457493_StructSubIdentExprModel{._field_Token=_222174_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_1e5522d00_Data>((*(_222141_d))), ._field_Field=_222217_f, ._field_Owner=_222155_s});;
		_222141_d.get()._field_Model=jule::Any(_222921_model, &__jule_any_type71);
		_222141_d.get()._field_Kind=_222217_f.get()._field_Kind;
		_222141_d.get()._field_Lvalue=true;
		if ((_222217_f.get()._field_Decl.get()._field_Mutable && (!(_222141_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*(_self_))._field_lookup };
				
				if (_match_expr.type_is(true, 0)) {
					_case_begin_1e8c49b61:;
					{
						jule::Ptr<_1e548c4a6_scopeChecker> _224325_scope = _1e54905ec_getRoot((*(_self_))._field_lookup.cast_ptr<_1e548c4a6_scopeChecker>(0));;
						_222141_d.get()._field_Mutable=((_224325_scope.get()._field_owner != nullptr) && (_224325_scope.get()._field_owner.get()._field_Owner == _222155_s));
					}
				}
				_match_end_1e8c49b0b:;
			};
		};
		return _222141_d;;
	};
	;
	jule::Ptr<_1e5460ec4_Fn> _225217_m = _1e476a521_FindMethod(_222155_s.ptr(), _222174_si.get()._field_Ident.get()._field_Kind, false);;
	if ((_225217_m == nullptr)) {
		_1e5524d79_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_222155_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_222174_si.get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((!(_1e54b062d_isAccessibleDefine((*(_self_))._field_s.ptr(), _225217_m.get()._field_Public, _225217_m.get()._field_Token)))) {
		_1e5524d79_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_225217_m.get()._field_Ident, &__jule_any_type5)}));
		_1e5525198_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
	};
	if ((_1e5460028_IsRef(_225217_m.get()._field_Params[0LL].ptr()) && (!(_222193_ref)))) {
		_1e5524d79_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1e5529c80_checkDeprecated(_self_, &(_225217_m.get()._field_Directives), _222174_si.get()._field_Ident);
	jule::Ptr<_1e5463b75_FnIns> _226817_ins = _1e5462624_instance(_225217_m);;
	_226817_ins.get()._field_Owner=_222155_s;
	_1e8ae3e7d_pushReference(_self_, &(_226817_ins));
	jule::Ptr<_1e5522d00_Data> _227117_model = jule::new_ptr<_1e5522d00_Data>((*(_222141_d)));;
	_222141_d.get()._field_Model=jule::Any(jule::new_ptr<_1e5457493_StructSubIdentExprModel>(_1e5457493_StructSubIdentExprModel{._field_Token=_222174_si.get()._field_Ident, ._field_Expr=_227117_model, ._field_Method=_226817_ins, ._field_Owner=_222155_s}), &__jule_any_type71);
	_222141_d.get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_226817_ins, 1)});
	return _222141_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e5539ce5_evalSliceSubIdent(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data> _228240_d, jule::Ptr<_20d155596_Token> _228254_ident) {
	{
		auto &_match_expr{ _228254_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1e8c52d89:;
			{
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_Params=jule::Slice<jule::Ptr<_1e5462ca6_ParamIns>>::make({jule::new_ptr<_1e5462ca6_ParamIns>(_1e5462ca6_ParamIns{._field_Decl=jule::new_ptr<_1e545e687_Param>(_1e545e687_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1e5462ca6_ParamIns>(_1e5462ca6_ParamIns{._field_Decl=jule::new_ptr<_1e545e687_Param>(_1e545e687_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e621aad5_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_228240_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1e545854e_CommonSubIdentExprModel>(_1e545854e_CommonSubIdentExprModel{._field_ExprKind=_228240_d.get()._field_Kind, ._field_Expr=_228240_d.get()._field_Model, ._field_Token=_228254_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1e8c53164:;
			{
				_1e5524d79_pushErr(_self_, _228254_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_228240_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_228254_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8c52e22:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553a19c_evalArraySubIdent(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data> _231940_d, jule::Ptr<_20d155596_Token> _231954_ident) {
	{
		auto &_match_expr{ _231954_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1e8c543c9:;
			{
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_Params=jule::Slice<jule::Ptr<_1e5462ca6_ParamIns>>::make({jule::new_ptr<_1e5462ca6_ParamIns>(_1e5462ca6_ParamIns{._field_Decl=jule::new_ptr<_1e545e687_Param>(_1e545e687_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1e5462ca6_ParamIns>(_1e5462ca6_ParamIns{._field_Decl=jule::new_ptr<_1e545e687_Param>(_1e545e687_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e621aad5_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_231940_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1e545854e_CommonSubIdentExprModel>(_1e545854e_CommonSubIdentExprModel{._field_ExprKind=_231940_d.get()._field_Kind, ._field_Expr=_231940_d.get()._field_Model, ._field_Token=_231954_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1e8c56574:;
			{
				_1e5524d79_pushErr(_self_, _231954_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_231940_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_231954_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8c564ca:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553a4aa_evalIntTypeStatic(_1e552486d_Eval* _self_, jule::Ptr<_20d155596_Token> _235636_ident) {
	;
	{
		auto &_match_expr{ _235636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e8c5a941:;
			{
				jule::Ptr<_1e54469c1_Const> _236021_c = static__1e5446e44_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e54420c6_Max(jule::Str("int", 3)))));;
				_236021_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_236021_c, &__jule_any_type47), ._field_Constant=_236021_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1e8c5a9a7:;
			{
				jule::Ptr<_1e54469c1_Const> _236821_c = static__1e5446e44_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e5441e94_Min(jule::Str("int", 3)))));;
				_236821_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_236821_c, &__jule_any_type47), ._field_Constant=_236821_c});;
			}
		}
		else {
			_case_begin_1e8c59be8:;
			{
				_1e5524d79_pushErr(_self_, _235636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type5),jule::Any(_235636_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8c59a50:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553a7b8_evalUintTypeStatic(_1e552486d_Eval* _self_, jule::Ptr<_20d155596_Token> _238137_ident) {
	;
	{
		auto &_match_expr{ _238137_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e8c5aa62:;
			{
				jule::Ptr<_1e54469c1_Const> _238521_c = static__1e54471db_NewU64(static_cast<jule::U64>(static_cast<jule::U64>(_1e54420c6_Max(jule::Str("uint", 4)))));;
				_238521_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=jule::Any(_238521_c, &__jule_any_type47), ._field_Constant=_238521_c});;
			}
		}
		else {
			_case_begin_1e8c5d867:;
			{
				_1e5524d79_pushErr(_self_, _238137_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type5),jule::Any(_238137_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8c5d6be:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553aac6_evalI8TypeStatic(_1e552486d_Eval* _self_, jule::Ptr<_20d155596_Token> _239835_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _239835_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e8c60a9a:;
			{
				jule::Ptr<_1e54469c1_Const> _240421_c = static__1e5446e44_NewI64(127LL);;
				_240421_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_240421_c, &__jule_any_type47), ._field_Constant=_240421_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1e8c62607:;
			{
				jule::Ptr<_1e54469c1_Const> _241221_c = static__1e5446e44_NewI64(-128LL);;
				_241221_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_241221_c, &__jule_any_type47), ._field_Constant=_241221_c});;
			}
		}
		else {
			_case_begin_1e8c61848:;
			{
				_1e5524d79_pushErr(_self_, _239835_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type5),jule::Any(_239835_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8c6055b:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553add4_evalI16TypeStatic(_1e552486d_Eval* _self_, jule::Ptr<_20d155596_Token> _242536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _242536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e8c66551:;
			{
				jule::Ptr<_1e54469c1_Const> _243121_c = static__1e5446e44_NewI64(32767LL);;
				_243121_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_243121_c, &__jule_any_type47), ._field_Constant=_243121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1e8c665b7:;
			{
				jule::Ptr<_1e54469c1_Const> _243921_c = static__1e5446e44_NewI64(-32768LL);;
				_243921_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_243921_c, &__jule_any_type47), ._field_Constant=_243921_c});;
			}
		}
		else {
			_case_begin_1e8c65891:;
			{
				_1e5524d79_pushErr(_self_, _242536_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type5),jule::Any(_242536_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8c65792:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553b1e2_evalI32TypeStatic(_1e552486d_Eval* _self_, jule::Ptr<_20d155596_Token> _245236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _245236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e8c6a49a:;
			{
				jule::Ptr<_1e54469c1_Const> _245821_c = static__1e5446e44_NewI64(2147483647LL);;
				_245821_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_245821_c, &__jule_any_type47), ._field_Constant=_245821_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1e8c6a511:;
			{
				jule::Ptr<_1e54469c1_Const> _246621_c = static__1e5446e44_NewI64(-2147483648LL);;
				_246621_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_246621_c, &__jule_any_type47), ._field_Constant=_246621_c});;
			}
		}
		else {
			_case_begin_1e8c697da:;
			{
				_1e5524d79_pushErr(_self_, _245236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type5),jule::Any(_245236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8c696db:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553b500_evalI64TypeStatic(_1e552486d_Eval* _self_, jule::Ptr<_20d155596_Token> _247936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _247936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e8c6e3e4:;
			{
				jule::Ptr<_1e54469c1_Const> _248521_c = static__1e5446e44_NewI64(jule::MAX_I64);;
				_248521_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_248521_c, &__jule_any_type47), ._field_Constant=_248521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1e8c6e45a:;
			{
				jule::Ptr<_1e54469c1_Const> _249321_c = static__1e5446e44_NewI64(jule::MIN_I64);;
				_249321_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_249321_c, &__jule_any_type47), ._field_Constant=_249321_c});;
			}
		}
		else {
			_case_begin_1e8c6d734:;
			{
				_1e5524d79_pushErr(_self_, _247936_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type5),jule::Any(_247936_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8c6d635:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553b80d_evalU8TypeStatic(_1e552486d_Eval* _self_, jule::Ptr<_20d155596_Token> _250635_ident) {
	;
	;
	{
		auto &_match_expr{ _250635_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e8c7253a:;
			{
				jule::Ptr<_1e54469c1_Const> _251121_c = static__1e54471db_NewU64(255LLU);;
				_251121_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=jule::Any(_251121_c, &__jule_any_type47), ._field_Constant=_251121_c});;
			}
		}
		else {
			_case_begin_1e8c71db9:;
			{
				_1e5524d79_pushErr(_self_, _250635_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type5),jule::Any(_250635_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8c7210b:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553bb1b_evalU16TypeStatic(_1e552486d_Eval* _self_, jule::Ptr<_20d155596_Token> _252436_ident) {
	;
	;
	{
		auto &_match_expr{ _252436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e8c74ebb:;
			{
				jule::Ptr<_1e54469c1_Const> _252921_c = static__1e54471db_NewU64(65535LLU);;
				_252921_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=jule::Any(_252921_c, &__jule_any_type47), ._field_Constant=_252921_c});;
			}
		}
		else {
			_case_begin_1e8c7484a:;
			{
				_1e5524d79_pushErr(_self_, _252436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type5),jule::Any(_252436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8c74a8c:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553be29_evalU32TypeStatic(_1e552486d_Eval* _self_, jule::Ptr<_20d155596_Token> _254236_ident) {
	;
	;
	{
		auto &_match_expr{ _254236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e8c7794c:;
			{
				jule::Ptr<_1e54469c1_Const> _254721_c = static__1e54471db_NewU64(4294967295LLU);;
				_254721_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=jule::Any(_254721_c, &__jule_any_type47), ._field_Constant=_254721_c});;
			}
		}
		else {
			_case_begin_1e8c772cb:;
			{
				_1e5524d79_pushErr(_self_, _254236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type5),jule::Any(_254236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8c7751d:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553c237_evalU64TypeStatic(_1e552486d_Eval* _self_, jule::Ptr<_20d155596_Token> _256036_ident) {
	;
	;
	{
		auto &_match_expr{ _256036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e8c7a3cd:;
			{
				jule::Ptr<_1e54469c1_Const> _256521_c = static__1e54471db_NewU64(jule::MAX_U64);;
				_256521_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=jule::Any(_256521_c, &__jule_any_type47), ._field_Constant=_256521_c});;
			}
		}
		else {
			_case_begin_1e8c79c5c:;
			{
				_1e5524d79_pushErr(_self_, _256036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type5),jule::Any(_256036_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8c79e9e:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553c545_evalF32TypeStatic(_1e552486d_Eval* _self_, jule::Ptr<_20d155596_Token> _257836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _257836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e8c7ce6e:;
			{
				jule::Ptr<_1e54469c1_Const> _258521_c = static__1e54479c2_NewF64(340282346638528860000000000000000000000.0);;
				_258521_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_258521_c, &__jule_any_type47), ._field_Constant=_258521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1e8c7de70:;
			{
				jule::Ptr<_1e54469c1_Const> _259321_c = static__1e54479c2_NewF64(-340282346638528860000000000000000000000.0);;
				_259321_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_259321_c, &__jule_any_type47), ._field_Constant=_259321_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1e8c7ded6:;
			{
				jule::Ptr<_1e54469c1_Const> _260121_c = static__1e54479c2_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_260121_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_260121_c, &__jule_any_type47), ._field_Constant=_260121_c});;
			}
		}
		else {
			_case_begin_1e8c7d205:;
			{
				_1e5524d79_pushErr(_self_, _257836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type99),jule::Any(_257836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8c7d1a0:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553c853_evalF64TypeStatic(_1e552486d_Eval* _self_, jule::Ptr<_20d155596_Token> _261436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e8c832d7:;
			{
				jule::Ptr<_1e54469c1_Const> _262121_c = static__1e54479c2_NewF64(jule::MAX_F64);;
				_262121_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_262121_c, &__jule_any_type47), ._field_Constant=_262121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1e8c842d8:;
			{
				jule::Ptr<_1e54469c1_Const> _262921_c = static__1e54479c2_NewF64(jule::MIN_F64);;
				_262921_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_262921_c, &__jule_any_type47), ._field_Constant=_262921_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1e8c8434e:;
			{
				jule::Ptr<_1e54469c1_Const> _263721_c = static__1e54479c2_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_263721_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_263721_c, &__jule_any_type47), ._field_Constant=_263721_c});;
			}
		}
		else {
			_case_begin_1e8c8356d:;
			{
				_1e5524d79_pushErr(_self_, _261436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type99),jule::Any(_261436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8c83518:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553cc0a_evalPrimStatic(_1e552486d_Eval* _self_, jule::Str _265033_kind, jule::Ptr<_20d155596_Token> _265044_ident) {
	{
		auto &_match_expr{ _265033_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1e8c87231:;
			{
				return _1e553a4aa_evalIntTypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1e8c88672:;
			{
				return _1e553a7b8_evalUintTypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1e8c886d8:;
			{
				return _1e553aac6_evalI8TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1e8c87ad3:;
			{
				return _1e553add4_evalI16TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1e8c87b49:;
			{
				return _1e553b1e2_evalI32TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1e8c87bb0:;
			{
				return _1e553b500_evalI64TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1e8c87c26:;
			{
				return _1e553b80d_evalU8TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1e8c8874e:;
			{
				return _1e553bb1b_evalU16TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1e8c887b5:;
			{
				return _1e553be29_evalU32TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1e8c8882b:;
			{
				return _1e553c237_evalU64TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1e8c88892:;
			{
				return _1e553c545_evalF32TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1e8c88908:;
			{
				return _1e553c853_evalF64TypeStatic(_self_, _265044_ident);;
			}
		}
		else {
			_case_begin_1e8c84519:;
			{
				_1e5524d79_pushErr(_self_, _265044_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_265033_kind, &__jule_any_type5),jule::Any(_265044_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8c844b4:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553d0b2_evalTypeStatic(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data> _268237_d, jule::Ptr<_1e477b29b_SubIdentExpr> _268251_si) {
	{
		
		if ((_1e5551119_Prim(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8c8d974:;
			{
				return _1e553cc0a_evalPrimStatic(_self_, _1e5553d42_Str(_1e5551119_Prim(_268237_d.get()._field_Kind.ptr()).ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else if ((_1e5551856_Enum(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8c8d9da:;
			{
				return _1e5538783_evalEnumStatic(_self_, _1e5551856_Enum(_268237_d.get()._field_Kind.ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else if ((_1e5551aba_TypeEnum(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8c8d7ed:;
			{
				return _1e5538b3a_evalTypeEnumStatic(_self_, _1e5551aba_TypeEnum(_268237_d.get()._field_Kind.ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else if ((_1e555256b_Struct(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8c8d864:;
			{
				return _1e5538ee2_evalStructStatic(_self_, _1e555256b_Struct(_268237_d.get()._field_Kind.ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1e8c8c9d9:;
			{
				_1e5524d79_pushErr(_self_, _268251_si.get()._field_Ident, jule::Str("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_268237_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8c8c940:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553d469_evalObjSubIdent(_1e552486d_Eval* _self_, jule::Ptr<_1e5522d00_Data> _269838_d, jule::Ptr<_1e477b29b_SubIdentExpr> _269852_si) {
	if (_20d157d3a_IsIgnoreIdent(_269852_si.get()._field_Ident.get()._field_Kind)) {
		_1e5524d79_pushErr(_self_, _269852_si.get()._field_Ident, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e554dc82_TypeKind> _270417_kind = _269838_d.get()._field_Kind;;
	{
		
		if ((_1e55515e2_Ptr(_269838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8c93490:;
			{
				jule::Ptr<_1e555a7c7_Ptr> _270717_ptr = _1e55515e2_Ptr(_269838_d.get()._field_Kind.ptr());;
				if (_1e555b29a_IsUnsafe(_270717_ptr.ptr())) {
					goto _match_end_1e8c9336e;
				};
				if (((!(_269852_si.get()._field_IsSelf)) && (!(_1e55257b4_isUnsafe(_self_))))) {
					_1e5524d79_pushErr(_self_, _269852_si.get()._field_Ident, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_270417_kind=_1e55515e2_Ptr(_269838_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1e555137d_Sptr(_269838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8c93506:;
			{
				_270417_kind=_1e555137d_Sptr(_269838_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1e8c9336e:;
	};
	{
		
		if ((_1e55527d0_Trait(_269838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8c95d55:;
			{
				return _1e5539443_evalTraitSubIdent(_self_, _269838_d, _1e55527d0_Trait(_269838_d.get()._field_Kind.ptr()), _269852_si.get()._field_Ident);;
			}
		}
		else if ((_1e555256b_Struct(_270417_kind.ptr()) != nullptr)) {
			_case_begin_1e8c95dcc:;
			{
				jule::Ptr<_1e47903e2_StructIns> _272317_s = _1e555256b_Struct(_270417_kind.ptr());;
				if (_1e5549aa2_isInstancedStruct(_272317_s)) {
					jule::Bool _272525_usedReferenceElem = (_1e555137d_Sptr(_269838_d.get()._field_Kind.ptr()) != nullptr);;
					return _1e553993d_evalStructSubIdent(_self_, _269838_d, _1e555256b_Struct(_270417_kind.ptr()), _269852_si, _272525_usedReferenceElem);;
				};
			}
		}
		else if ((_1e5552093_Slc(_270417_kind.ptr()) != nullptr)) {
			_case_begin_1e8c95e54:;
			{
				return _1e5539ce5_evalSliceSubIdent(_self_, _269838_d, _269852_si.get()._field_Ident);;
			}
		}
		else if ((_1e5551d2e_Arr(_270417_kind.ptr()) != nullptr)) {
			_case_begin_1e8c95ecb:;
			{
				return _1e553a19c_evalArraySubIdent(_self_, _269838_d, _269852_si.get()._field_Ident);;
			}
		}
		_match_end_1e8c95c78:;
	};
	_1e5524d79_pushErr(_self_, _269852_si.get()._field_Ident, jule::Str("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_269838_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1e5522d00_Data> _1e553d777_evalSubIdent(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e477b29b_SubIdentExpr> _273736_si) {
	jule::Ptr<_1e554dc82_TypeKind> _273817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_273817_prefix;
	});;
	jule::Ptr<_1e5522d00_Data> _274217_d = _1e553eb74_evalExprKind(_self_, _273736_si.get()._field_Expr.get()._field_Kind);;
	if ((_274217_d == nullptr)) {
		return nullptr;;
	};
	if (_274217_d.get()._field_Decl) {
		return _1e553d0b2_evalTypeStatic(_self_.ptr(), _274217_d, _273736_si);;
	};
	return _1e553d469_evalObjSubIdent(_self_.ptr(), _274217_d, _273736_si);;
}



inline jule::Ptr<_1e5522d00_Data> _1e553da85_evalTuple(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e47789c4_TupleExpr> _275433_tup) {
	jule::Ptr<_1e555874d_Tuple> _275517_tupT = jule::new_ptr<_1e555874d_Tuple>();;
	_275517_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1e554dc82_TypeKind>>::alloc(0LL, _275433_tup.get()._field_Expr.len());
	jule::Ptr<_1e545884b_TupleExprModel> _275817_model = jule::new_ptr<_1e545884b_TupleExprModel>(_1e545884b_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1e5522d00_Data>>::alloc(0LL, _275433_tup.get()._field_Expr.len())});;
	jule::Bool _276217_ok = true;;
	{
		auto expr = &(_275433_tup.get()._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e52eace8:;
		if (it != expr_end) {
			jule::Ptr<_1e4777d47_Expr> _276321_expr = *it;
			{
				jule::Ptr<_1e5522d00_Data> _276421_d = _1e553eb74_evalExprKind(_self_, _276321_expr.get()._field_Kind);;
				if ((_276421_d == nullptr)) {
					_276217_ok=false;
					goto _iter_next_1e52eace8;
				};
				_275517_tupT.get()._field_Types = jule::alloc_for_append(_275517_tupT.get()._field_Types,1);_275517_tupT.get()._field_Types.__push(_276421_d.get()._field_Kind);;
				_275817_model.get()._field_Datas = jule::alloc_for_append(_275817_model.get()._field_Datas,1);_275817_model.get()._field_Datas.__push(_276421_d);;
			}
			_iter_next_1e52eace8:;
			++it;
			goto _iter_begin_1e52eace8;
		}
		_iter_end_1e52eace8:;
	};
	if ((!(_276217_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_275517_tupT, 9)}), ._field_Model=jule::Any(_275817_model, &__jule_any_type88), });;
}



inline jule::Ptr<_1e5522d00_Data> _1e553de3c_evalMap(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e5559276_Map> _278331_m, jule::Ptr<_1e477d479_BraceLit> _278344_lit) {
	jule::Ptr<_1e545612e_MapExprModel> _278417_model = jule::new_ptr<_1e545612e_MapExprModel>(_1e545612e_MapExprModel{._field_KeyKind=_278331_m.get()._field_Key, ._field_ValKind=_278331_m.get()._field_Val, });;
	{
		auto expr = &(_278344_lit.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e52edda6:;
		if (it != expr_end) {
			jule::Ptr<_1e4777d47_Expr> _278921_expr = *it;
			{
				{
					auto &_match_expr{ _278921_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1e52ee5c1:;
						{
							goto _match_end_1e52ee66a;
						}
					}
					else {
						_case_begin_1e52ee802:;
						{
							_1e5524d79_pushErr(_self_.ptr(), _278344_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1e52ee66a:;
				};
				jule::Ptr<_1e477dc4e_KeyValPair> _279921_pair = _278921_expr.get()._field_Kind.cast_ptr<_1e477dc4e_KeyValPair>(&__jule_any_type85);;
				jule::Ptr<_1e5522d00_Data> _280121_key = _1e553eb74_evalExprKind(_self_, _279921_pair.get()._field_Key.get()._field_Kind);;
				if ((_280121_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1e5522d00_Data> _280621_val = _1e553eb74_evalExprKind(_self_, _279921_pair.get()._field_Val.get()._field_Kind);;
				if ((_280621_val == nullptr)) {
					return nullptr;;
				};
				_1e54b6d3d_checkAssignType(_self_.get()._field_s, false, &(_278331_m.get()._field_Key), &(_280121_key), _279921_pair.get()._field_Colon);
				_1e54b6d3d_checkAssignType(_self_.get()._field_s, false, &(_278331_m.get()._field_Val), &(_280621_val), _279921_pair.get()._field_Colon);
				_278417_model.get()._field_Entries = jule::alloc_for_append(_278417_model.get()._field_Entries,1);_278417_model.get()._field_Entries.__push(jule::new_ptr<_1e5455bab_KeyValPairExprModel>(_1e5455bab_KeyValPairExprModel{._field_Key=_280121_key.get()._field_Model, ._field_Val=_280621_val.get()._field_Model}));;
			}
			_iter_next_1e52edda6:;
			++it;
			goto _iter_begin_1e52edda6;
		}
		_iter_end_1e52edda6:;
	};
	return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_278331_m, 10)}), ._field_Mutable=true, ._field_Model=jule::Any(_278417_model, &__jule_any_type104), });;
}



inline jule::Ptr<_1e5522d00_Data> _1e553e24a_evalBraceLit(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e477d479_BraceLit> _282736_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1e5304175:;
			{
				_1e5524d79_pushErr(_self_.ptr(), _282736_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1e5552a44_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1e530494a:;
			{
				return _1e553de3c_evalMap(_self_, _1e5552a44_Map(_self_.get()._field_prefix.ptr()), _282736_lit);;
			}
		}
		else if ((_1e555256b_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1e53049b1:;
			{
				return _1e5536583_evalStructLitExplicit(_self_, _1e555256b_Struct(_self_.get()._field_prefix.ptr()), _282736_lit.get()._field_Exprs, _282736_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_1e5303ce0:;
			{
				_1e5524d79_pushErr(_self_.ptr(), _282736_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e53033b6:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553e558_evalAnonFn(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e47852a5_FnDecl> _284234_decl) {
	_1e555c5ed_typeChecker _284317_tc = _1e555c5ed_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1e5463b75_FnIns> _284817_ins = _1e5563e40_buildFn(&_284317_tc, _284234_decl);;
	if ((_284817_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e5308531:;
			{
				jule::Ptr<_1e548c4a6_scopeChecker> _285421_sc = _self_.get()._field_lookup.cast_ptr<_1e548c4a6_scopeChecker>(0);;
				jule::Ptr<_1e548c4a6_scopeChecker> _285521_scc = _1e549c51b_newChildChecker(_285421_sc);;
				_285521_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e548b3ea_scopeLabel>>>(nullptr);
				_285521_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e548b692_scopeGoto>>>(nullptr);
				_285521_scc.get()._field_owner=nullptr;
				_285521_scc.get()._field_childIndex=0LL;
				_285521_scc.get()._field_it=0LLU;
				_285521_scc.get()._field_cse=0LLU;
				_285521_scc.get()._field_owner=_284817_ins;
				_1e54c5720_checkFnInsSc(_self_.get()._field_s.ptr(), &(_284817_ins), &(_285521_scc));
			}
		}
		else {
			_case_begin_1e5308377:;
			{
				_1e54c5cb4_checkFnIns(_self_.get()._field_s, &(_284817_ins));
			}
		}
		_match_end_1e5308047:;
	};
	return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_284817_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1e5455804_AnonFnExprModel>(_1e5455804_AnonFnExprModel{._field_Func=_284817_ins, ._field_Global=_1e5525a28_isGlobal(_self_.ptr())}), &__jule_any_type105), });;
}



inline jule::Ptr<_1e5522d00_Data> _1e553e866_evalBinop(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e477b71e_BinopExpr> _287733_op) {
	_1e55424a1_binaryEval _287817_bs = static__1e5542a78_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1e55539ce_Prim> _288117_prim = _1e5551119_Prim(_self_.get()._field_prefix.ptr());;
		if (((_288117_prim == nullptr) || (!(_1e54464b5_IsNum(_1e5553d42_Str(_288117_prim.ptr())))))) {
			jule::Ptr<_1e554dc82_TypeKind> _288325_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_288325_prefix;
			});;
			return _1e5548034_eval(&_287817_bs, &(_287733_op));;
		};
	};
	return _1e5548034_eval(&_287817_bs, &(_287733_op));;
}



inline jule::Ptr<_1e5522d00_Data> _1e553eb74_evalExprKind(jule::Ptr<_1e552486d_Eval> _self_, jule::Any _289236_kind) {
	{
		auto &_match_expr{ _289236_kind };
		
		if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1e530c964:;
			{
				jule::Ptr<_1e4778133_RangeExpr> _289521_e = _289236_kind.cast_ptr<_1e4778133_RangeExpr>(&__jule_any_type106);;
				return _1e553eb74_evalExprKind(_self_, _289521_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1e5310758:;
			{
				return _1e55276c8_evalLit(_self_.ptr(), _289236_kind.cast_ptr<_1e4778d7b_LitExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1e53107be:;
			{
				return _1e552bb83_evalIdent(_self_.ptr(), _289236_kind.cast_ptr<_1e4779a08_IdentExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1e53102d5:;
			{
				return _1e552be91_evalUnary(_self_, _289236_kind.cast_ptr<_1e477a212_UnaryExpr>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1e531034b:;
			{
				return _1e552c29e_evalVariadic(_self_, _289236_kind.cast_ptr<_1e477a5b9_VariadicExpr>(&__jule_any_type82));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1e53103c3:;
			{
				return _1e552c5ac_evalUnsafe(_self_, _289236_kind.cast_ptr<_1e4779585_UnsafeExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1e531044a:;
			{
				return _1e552d129_evalSliceExpr(_self_, _289236_kind.cast_ptr<_1e477e436_SliceExpr>(&__jule_any_type101));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1e5310846:;
			{
				return _1e553146d_evalIndexing(_self_, _289236_kind.cast_ptr<_1e477eca5_IndexingExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1e53108bd:;
			{
				return _1e5532639_evalSlicing(_self_, _289236_kind.cast_ptr<_1e47803b0_SlicingExpr>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1e5310945:;
			{
				return _1e5535d24_evalCast(_self_, _289236_kind.cast_ptr<_1e477a971_CastExpr>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1e53109bc:;
			{
				return _1e5536132_evalNsSelection(_self_.ptr(), _289236_kind.cast_ptr<_1e477ad28_NsSelectionExpr>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1e5310a44:;
			{
				return _1e5536891_evalStructLit(_self_, _289236_kind.cast_ptr<_1e477d006_StructLit>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1e5310abb:;
			{
				return _1e5536e13_evalType(_self_.ptr(), _289236_kind.cast_ptr<_1e4773826_TypeDecl>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1e5310b43:;
			{
				return _1e55383cb_evalFnCall(_self_, _289236_kind.cast_ptr<_1e477bd29_FnCallExpr>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1e5310bba:;
			{
				return _1e553d777_evalSubIdent(_self_, _289236_kind.cast_ptr<_1e477b29b_SubIdentExpr>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1e5310c42:;
			{
				return _1e553da85_evalTuple(_self_, _289236_kind.cast_ptr<_1e47789c4_TupleExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1e5310cb9:;
			{
				return _1e553e24a_evalBraceLit(_self_, _289236_kind.cast_ptr<_1e477d479_BraceLit>(&__jule_any_type114));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1e5310d41:;
			{
				return _1e553e558_evalAnonFn(_self_, _289236_kind.cast_ptr<_1e47852a5_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1e5310db8:;
			{
				return _1e553e866_evalBinop(_self_, _289236_kind.cast_ptr<_1e477b71e_BinopExpr>(&__jule_any_type115));;
			}
		}
		else {
			_case_begin_1e5310181:;
			{
				return nullptr;;
			}
		}
		_match_end_1e5310093:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e553ee82_eval(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e4777d47_Expr> _294028_expr) {
	jule::Ptr<_1e5522d00_Data> _294117_d = _1e553eb74_evalExprKind(_self_, _294028_expr.get()._field_Kind);;
	if (((_294117_d == nullptr) || (_294117_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1e5552307_Fn(_294117_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e531a675:;
			{
				jule::Ptr<_1e5463b75_FnIns> _294821_f = _1e5552307_Fn(_294117_d.get()._field_Kind.ptr());;
				if (_1e546500b_IsBuiltin(_294821_f.ptr())) {
					goto _match_end_1e531a543;
				};
				if ((_294821_f.get()._field_Generics.len() != _294821_f.get()._field_Decl.get()._field_Generics.len())) {
					_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _294028_expr.get()._field_Token, jule::Str("define has generics", 19), jule::Slice<jule::Any>());
				};
				if (((!(_294821_f.get()._field_Decl.get()._field_Statically)) && _1e546169a_IsMethod(_294821_f.get()._field_Decl.ptr()))) {
					_1e54aee57_pushErr(_self_.get()._field_s.ptr(), _294028_expr.get()._field_Token, jule::Str("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1e531a543:;
	};
	return _294117_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e5540290_evalExpr(jule::Ptr<_1e552486d_Eval> _self_, jule::Ptr<_1e4777d47_Expr> _296632_expr) {
	jule::Ptr<_1e5522d00_Data> _296717_d = _1e553ee82_eval(_self_, _296632_expr);;
	{
		
		if ((_296717_d == nullptr)) {
			_case_begin_1e531e14b:;
			{
				return nullptr;;
			}
		}
		else if (_296717_d.get()._field_Decl) {
			_case_begin_1e531e1c3:;
			{
				_1e5524d79_pushErr(_self_.ptr(), _296632_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1e531e080:;
			{
				return _296717_d;;
			}
		}
		_match_end_1e531e019:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e552486d_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1e5540713_unaryEval static__1e5540bb9_new(jule::Ptr<_1e552486d_Eval> _298723_e) {
	return _1e5540713_unaryEval{._field_e=_298723_e, };;
}



inline void _1e5540d95_minus(_1e5540713_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1e5320b97:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e5551119_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5320867:;
			{
				if ((!(_1e54464b5_IsNum(_1e554e17d_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e555256b_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e53208cd:;
			{
				if ((_1e555256b_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1e5320801:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e5320625:;
	};
	if (_1e55236b3_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1e544b113_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e532420b:;
				{
					_1e544a222_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1e5448c6a_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e544a662_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e5324283:;
				{
					_1e544972c_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1e54482b9_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e544a8c6_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e532430a:;
				{
					_1e544972c_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1e5448ece_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1e532411d:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1e545315e_UnaryExprModel>(_1e545315e_UnaryExprModel{._field_Expr=jule::new_ptr<_1e5522d00_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1e5541071_plus(_1e5540713_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1e532873d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e5551119_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e532840d:;
			{
				if ((!(_1e54464b5_IsNum(_1e554e17d_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e555256b_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5328474:;
			{
				if ((_1e555256b_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1e5328397:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e53282cb:;
	};
	if (_1e55236b3_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1e544b113_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e8d69489:;
				{
					_1e544a222_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1e5448c6a_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e544a662_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e8d69511:;
				{
					_1e544972c_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1e54482b9_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e544a8c6_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e8d69588:;
				{
					_1e544972c_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1e5448ece_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1e8d6939b:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1e545315e_UnaryExprModel>(_1e545315e_UnaryExprModel{._field_Expr=jule::new_ptr<_1e5522d00_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1e554124c_caret(_1e5540713_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1e8d6d999:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e5551119_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8d6d669:;
			{
				if ((!(_1e5445dee_IsInt(_1e554e17d_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e555256b_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8d6d6d0:;
			{
				if ((_1e555256b_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1e8d6d603:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e8d6d537:;
	};
	if (_1e55236b3_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1e544a662_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e8d71eec:;
				{
					_1e544972c_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1e54482b9_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e544a8c6_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e8d72074:;
				{
					_1e54499a2_SetU64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1e544852d_ReadU64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1e8d71e20:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1e545315e_UnaryExprModel>(_1e545315e_UnaryExprModel{._field_Expr=jule::new_ptr<_1e5522d00_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1e5541428_excl(_1e5540713_unaryEval* _self_) {
	jule::Ptr<_1e55539ce_Prim> _310613_t = _1e5551119_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
	if (((_310613_t == nullptr) || (!(_1e555699e_IsBool(_310613_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	if (_1e55236b3_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1e544ab3a_IsBool((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e8d7684d:;
				{
					_1e5449c27_SetBool((*(_self_))._field_d.get()._field_Constant.ptr(), (!(_1e5448792_ReadBool((*(_self_))._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1e8d7674e:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1e545315e_UnaryExprModel>(_1e545315e_UnaryExprModel{._field_Expr=jule::new_ptr<_1e5522d00_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1e5541604_star(_1e5540713_unaryEval* _self_) {
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1e545315e_UnaryExprModel>(_1e545315e_UnaryExprModel{._field_Expr=jule::new_ptr<_1e5522d00_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
	{
		
		if ((_1e55515e2_Ptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8d796ec:;
			{
				if ((!(_1e55257b4_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1e555a7c7_Ptr> _313821_t = _1e55515e2_Ptr((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1e555b29a_IsUnsafe(_313821_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(_self_))._field_d.get()._field_Kind=_313821_t.get()._field_Elem;
			}
		}
		else if ((_1e555137d_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8d793bc:;
			{
				(*(_self_))._field_d.get()._field_Kind=_1e555137d_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1e8d79356:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e8d792e0:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=true;
}



inline void _1e55417d0_amper(_1e5540713_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1e8d7e02b:;
			{
				jule::Ptr<_1e5453912_StructLitExprModel> _315821_lit = (*(_self_))._field_d.get()._field_Model.cast_ptr<_1e5453912_StructLitExprModel>(&__jule_any_type102);;
				_1e5548cc1_makeStructLitAlloc(&((*(_self_))._field_d), &(_315821_lit));
			}
		}
		else {
			_case_begin_1e8d7d921:;
			{
				{
					
					if (_1e55660b8_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1e8d7e56a:;
						{
							(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(jule::new_ptr<_1e555a7c7_Ptr>(_1e555a7c7_Ptr{._field_Elem=(*(_self_))._field_d.get()._field_Kind}), 12)});
							(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1e545315e_UnaryExprModel>(_1e545315e_UnaryExprModel{._field_Expr=jule::new_ptr<_1e5522d00_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
						}
					}
					else {
						_case_begin_1e8d7deb5:;
						{
							(*(_self_))._field_d=nullptr;
						}
					}
					_match_end_1e8d7dde9:;
				};
			}
		}
		_match_end_1e8d7d899:;
	};
	if (((*(_self_))._field_d != nullptr)) {
		(*(_self_))._field_d.get()._field_Constant=nullptr;
		(*(_self_))._field_d.get()._field_Lvalue=false;
	};
}



inline void _1e55419ab_typeDecl(_1e5540713_unaryEval* _self_) {
	_1e555c5ed_typeChecker _318217_tc = _1e555c5ed_typeChecker{._field_s=(*(_self_))._field_e.get()._field_s, ._field_rootLookup=(*(_self_))._field_e.get()._field_lookup, ._field_lookup=(*(_self_))._field_e.get()._field_lookup, ._field_errorToken=(*(_self_))._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e8d8268e:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e55627ce_buildPtrFromType(&_318217_tc, &((*(_self_))._field_d.get()._field_Kind)), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1e8d84be1:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e55621b3_buildSptrFromType(&_318217_tc, &((*(_self_))._field_d.get()._field_Kind)), 7)});
			}
		}
		else {
			_case_begin_1e8d835b3:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_self_))._field_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e8d8355d:;
	};
	(*(_self_))._field_d.get()._field_Decl=true;
}



inline void _1e5541b87_evalData(_1e5540713_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1e8d87045:;
			{
				jule::Ptr<_1e554dc82_TypeKind> _320521_prefix = (*(_self_))._field_e.get()._field_prefix;;
				(*(_self_))._field_e.get()._field_prefix=nullptr;
				(*(_self_))._field_d=_1e553eb74_evalExprKind((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr.get()._field_Kind);
				(*(_self_))._field_e.get()._field_prefix=_320521_prefix;
			}
		}
		else {
			_case_begin_1e8d86b16:;
			{
				(*(_self_))._field_d=_1e553eb74_evalExprKind((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_1e8d86ab1:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e5541e62_eval(_1e5540713_unaryEval* _self_, jule::Ptr<_1e477a212_UnaryExpr> _321427_u) {
	(*(_self_))._field_u=_321427_u;
	_1e5541b87_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_self_))._field_d.get()._field_Decl) {
		_1e55419ab_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1e554dc82_TypeKind> _322513_kind = (*(_self_))._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1e8d8b1d1:;
			{
				_1e5540d95_minus(_self_);
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1e8d8abc5:;
			{
				_1e5541071_plus(_self_);
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1e8d8ac3b:;
			{
				_1e554124c_caret(_self_);
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1e8d8aca2:;
			{
				_1e5541428_excl(_self_);
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e8d8ad18:;
			{
				_1e5541604_star(_self_);
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1e8d8b379:;
			{
				_1e55417d0_amper(_self_);
			}
		}
		else {
			_case_begin_1e8d8ab5e:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1e8d8a895:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1e8d8b401:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str(_322513_kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (_1e55236b3_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1e8d8d18e:;
			{
				(*(_self_))._field_d.get()._field_Model=jule::Any((*(_self_))._field_d.get()._field_Constant, &__jule_any_type47);
			}
		}
		_match_end_1e8d8d139:;
	};
	(*(_self_))._field_d.get()._field_Mutable=true;
	return (*(_self_))._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5540713_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1e55424a1_binaryEval static__1e5542a78_newPlain(jule::Ptr<_1e552486d_Eval> _326328_e) {
	return _1e55424a1_binaryEval{._field_e=_326328_e, };;
}



inline _1e55424a1_binaryEval static__1e5542db9_new(jule::Ptr<_1e552486d_Eval> _326923_e, jule::Ptr<_20d155596_Token> _326937_op) {
	return _1e55424a1_binaryEval{._field_e=_326923_e, ._field_op=_326937_op};;
}



inline jule::Bool _1e554312d_checkTypeCompatibility(_1e55424a1_binaryEval* _self_) {
	return _1e54b728e_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &((*(_self_))._field_l.get()._field_Kind), &((*(_self_))._field_r.get()._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _1e55433c5_checkStructCommonOperatorCompatibility(_1e55424a1_binaryEval* _self_) {
	jule::Ptr<_1e5463b75_FnIns> _328317_overload = nullptr;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1e8d92490:;
			{
				_328317_overload=_1e555256b_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1e8d93b67:;
			{
				_328317_overload=_1e555256b_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1e8d93bcd:;
			{
				_328317_overload=_1e555256b_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1e8d92957:;
			{
				_328317_overload=_1e555256b_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1e8d929bd:;
			{
				_328317_overload=_1e555256b_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e8d92a34:;
			{
				_328317_overload=_1e555256b_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1e8d92a9a:;
			{
				_328317_overload=_1e555256b_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1e8d93c77:;
			{
				_328317_overload=_1e555256b_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1e8d93cdd:;
			{
				_328317_overload=_1e555256b_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1e8d93d54:;
			{
				_328317_overload=_1e555256b_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1e8d928e1:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1e8d92869:;
	};
	if ((_328317_overload == nullptr)) {
		_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1e5462ca6_ParamIns> _331517_p = _328317_overload.get()._field_Params[1LL];;
	return _1e54b6d3d_checkAssignType((*(_self_))._field_e.get()._field_s, _331517_p.get()._field_Decl.get()._field_Reference, &(_331517_p.get()._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1e5522d00_Data> _1e554366c_evalNil(_1e55424a1_binaryEval* _self_) {
	if ((!(_1e5550668_NilCompatible((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type116),jule::Any(_1e554e17d_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e8d9c6dc:;
			{
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1e8d9c863:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("nil", 3), &__jule_any_type116)}));
				return nullptr;;
			}
		}
		_match_end_1e8d9c7ec:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e55438d1_evalEnum(_1e55424a1_binaryEval* _self_) {
	jule::Ptr<_1e547501b_Enum> _334017_enm = _1e5551856_Enum((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e8d9eac9:;
			{
				jule::Ptr<_1e554dc82_TypeKind> _334421_rkind = (*(_self_))._field_r.get()._field_Kind;;
				if ((_1e5551856_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_334421_rkind=_1e5551856_Enum((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1e54b728e_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &(_334017_enm.get()._field_Kind.get()._field_Kind), &(_334421_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1e8d9ea74:;
	};
	if (((_1e5551856_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr) || (_334017_enm != _1e5551856_Enum((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1e8d9e425:;
			{
				if ((!(_1e54464b5_IsNum(_1e554e17d_Str(_334017_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1e8da4bcd:;
			{
				if (((_1e5551119_Prim(_334017_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1e5445dee_IsInt(_1e5553d42_Str(_1e5551119_Prim(_334017_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1e8da3ccb:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8da3bdd:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e5543b45_evalTypeEnum(_1e55424a1_binaryEval* _self_) {
	jule::Ptr<_1e5476616_TypeEnum> _339117_enm = _1e5551aba_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr());;
	if ((!(_1e554312d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e8da9ce3:;
			{
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1e8da4cee:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1e5476946_Str(_339117_enm.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8da950c:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e5543da9_evalSptr(_1e55424a1_binaryEval* _self_) {
	if ((!(_1e554312d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e8dab850:;
			{
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1e8daae8c:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8daae37:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e554411d_evalPtr(_1e55424a1_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1e8dacab5:;
			{
				if ((!(_1e554312d_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1e8dae7a9:;
			{
				if ((_1e55515e2_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_1e5522d00_Data> ___jule_assign_arg = (*(_self_))._field_r;
						jule::Ptr<_1e5522d00_Data> _1___jule_assign_arg = (*(_self_))._field_l;
						(*(_self_))._field_l = ___jule_assign_arg;
						(*(_self_))._field_r = _1___jule_assign_arg;
					});
				};
				if (_1e555b29a_IsUnsafe(_1e55515e2_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()).ptr())) {
					_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
				if ((!(_1e5549e15_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1e8dad0b0:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8dad654:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e5544382_evalArr(_1e55424a1_binaryEval* _self_) {
	if ((!(_1e554312d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e8db46d2:;
			{
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1e8db47ae:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8db015b:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e55445e6_evalSlc(_1e55424a1_binaryEval* _self_) {
	if ((!(_1e554312d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e8db6816:;
			{
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1e8db5e53:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8db5ded:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e554485a_evalFn(_1e55424a1_binaryEval* _self_) {
	if ((!(_1e554312d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e8db6b35:;
			{
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1e8db8087:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8db8032:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e5544abe_evalStruct(_1e55424a1_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1e8dba221:;
			{
				if ((_1e555256b_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1e8dba287:;
			{
				if ((_1e555256b_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1e8dba8a3:;
			{
				if ((_1e555256b_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1e8dba919:;
			{
				if ((_1e555256b_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e8dba980:;
			{
				if ((!(_1e554312d_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1e8dba74e:;
	};
	if ((!(_1e55433c5_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1e5522d00_Data> _1e5544d33_evalTrait(_1e55424a1_binaryEval* _self_) {
	if ((!(_1e554312d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e8dc479c:;
			{
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1e8dc48bd:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8dc45e3:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e5545097_evalAny(_1e55424a1_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e8dc65a1:;
			{
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1e8dc601d:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("any", 3), &__jule_any_type99)}));
				return nullptr;;
			}
		}
		_match_end_1e8dc4acc:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e554530b_evalBool(_1e55424a1_binaryEval* _self_) {
	if ((!(_1e554312d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1e8dc8350:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1e8dc798c:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8dc7937:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e5545570_evalStr(_1e55424a1_binaryEval* _self_) {
	jule::Str _363317_rk = _1e554e17d_Str((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((_363317_rk != jule::Str("str", 3))) {
		_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_363317_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1e8dcb7c6:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1e8dcc420:;
			{
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1e8dc9dbd:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("str", 3), &__jule_any_type99)}));
				return nullptr;;
			}
		}
		_match_end_1e8dcb40d:;
	};
}



inline void _1e554574b_setTypeToGreater(_1e55424a1_binaryEval* _self_) {
	jule::Ptr<_1e55539ce_Prim> _366013_lp = _1e5551119_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_1e55539ce_Prim> _366113_rp = _1e5551119_Prim((*(_self_))._field_r.get()._field_Kind.ptr());;
	if (_1e55236b3_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1e55236b3_IsConst((*(_self_))._field_r.ptr())))) {
			(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_366113_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1e55236b3_IsConst((*(_self_))._field_r.ptr())) {
		(*(_self_))._field_r.get()._field_Constant.get()._field_Kind=_366013_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*(_self_))._field_l.get()._field_untyped && (!((*(_self_))._field_r.get()._field_untyped)))) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1e55236b3_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_366113_rp.get()._field_Kind;
		};
		(*(_self_))._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*(_self_))._field_l.get()._field_untyped)) && (*(_self_))._field_r.get()._field_untyped)) {
		return;;
	};
	if (_1e5444837_IsGreater(_366113_rp.get()._field_Kind, _366013_lp.get()._field_Kind)) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1e55236b3_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_366113_rp.get()._field_Kind;
		};
	};
}



inline void _1e554598d_checkModData(_1e55424a1_binaryEval* _self_, jule::Ptr<_1e5522d00_Data>* _369336_d) {
	if ((!(_1e55236b3_IsConst((*(_369336_d)).ptr())))) {
		if (((_1e5551119_Prim((*(_369336_d)).get()._field_Kind.ptr()) == nullptr) || (!(_1e5445dee_IsInt(_1e5551119_Prim((*(_369336_d)).get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1e550a711_sigAssignable(jule::Str("i64", 3), _369336_d)) {
			_case_begin_1e8dd6a9a:;
			{
				_1e544972c_SetI64((*(_369336_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1e5448ece_AsI64((*(_369336_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1e550a843_unsigAssignable(jule::Str("u64", 3), _369336_d)) {
			_case_begin_1e8dd677b:;
			{
				_1e54499a2_SetU64((*(_369336_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1e5449243_AsU64((*(_369336_d)).get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1e8dd6715:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e8dd5170:;
	};
}



inline void _1e5545b69_mod(_1e55424a1_binaryEval* _self_) {
	_1e554598d_checkModData(_self_, &((*(_self_))._field_l));
	_1e554598d_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1e5546021_numbersAreCompatibile(_1e55424a1_binaryEval* _self_, jule::Str* _371537_lk, jule::Str* _371547_rk) {
	if ((!(_1e54464b5_IsNum((*(_371547_rk)))))) {
		return false;;
	};
	if ((_1e55236b3_IsConst((*(_self_))._field_l.ptr()) && (*(_self_))._field_l.get()._field_untyped)) {
		return true;;
	};
	if (((*(_371537_lk)) == jule::Str("f32", 3))) {
		if ((_1e55236b3_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return ((*(_371547_rk)) == jule::Str("f32", 3));;
	};
	if (((*(_371537_lk)) == jule::Str("f64", 3))) {
		if ((_1e55236b3_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return ((*(_371547_rk)) == jule::Str("f64", 3));;
	};
	if ((_1e55236b3_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
		return true;;
	};
	return ((*(_371537_lk)) == (*(_371547_rk)));;
}



inline jule::Ptr<_1e5522d00_Data> _1e5546285_evalFloat(_1e55424a1_binaryEval* _self_) {
	jule::Str _374113_lk = _1e5551119_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _374213_rk = _1e5551119_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1e5546021_numbersAreCompatibile(_self_, &(_374113_lk), &(_374213_rk))))) {
		_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_374113_lk, &__jule_any_type5),jule::Any(_374213_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1e8ddea5e:;
			{
				if (((!(_1e55236b3_IsConst((*(_self_))._field_l.ptr()))) || (!(_1e550b8dd_intAssignable(jule::Str("i64", 3), &((*(_self_))._field_l)))))) {
					_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_374113_lk, &__jule_any_type5),jule::Any(_374213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((!(_1e55236b3_IsConst((*(_self_))._field_r.ptr()))) || (!(_1e550b8dd_intAssignable(jule::Str("u64", 3), &((*(_self_))._field_r)))))) {
					_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_374113_lk, &__jule_any_type5),jule::Any(_374213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1e544972c_SetI64((*(_self_))._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e5448ece_AsI64((*(_self_))._field_l.get()._field_Constant.ptr())));
				_1e54499a2_SetU64((*(_self_))._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e5449243_AsU64((*(_self_))._field_r.get()._field_Constant.ptr())));
				if ((!(_1e55496ea_isOkForShifting(&((*(_self_))._field_r))))) {
					_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1e8ddde7b:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1e8de4514:;
			{
				_1e554574b_setTypeToGreater(_self_);
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1e8de41b2:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1e8dddc7d:;
			{
				_1e554574b_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1e8de6604:;
			{
				if ((!(_1e5445dee_IsInt(_374213_rk)))) {
					_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_374113_lk, &__jule_any_type5),jule::Any(_374213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1e5545b69_mod(_self_);
				_1e554574b_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1e8de54c1:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8de505e:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e55464e9_evalInt(_1e55424a1_binaryEval* _self_) {
	jule::Str _380713_lk = _1e5551119_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _380813_rk = _1e5551119_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1e8de6add:;
			{
				if (((!(_1e5445dee_IsInt(_380713_lk))) || (!(_1e5445dee_IsInt(_380813_rk))))) {
					_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_380713_lk, &__jule_any_type5),jule::Any(_380813_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if ((!(_1e55496ea_isOkForShifting(&((*(_self_))._field_r))))) {
					_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1e8de9706:;
	};
	if ((!(_1e5546021_numbersAreCompatibile(_self_, &(_380713_lk), &(_380813_rk))))) {
		_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_380713_lk, &__jule_any_type5),jule::Any(_380813_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1e8dec5d8:;
			{
				return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1e8dec550:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1e8de9838:;
			{
				_1e554574b_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1e8dee541:;
			{
				_1e5545b69_mod(_self_);
				_1e554574b_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1e8ded3a8:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1e8ded2ba:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e554675d_evalPrim(_1e55424a1_binaryEval* _self_) {
	jule::Ptr<_1e55539ce_Prim> _386613_prim = _1e5551119_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1e555699e_IsBool(_386613_prim.ptr())) {
			_case_begin_1e8e01532:;
			{
				return _1e554530b_evalBool(_self_);;
			}
		}
		else if (_1e5556c13_IsStr(_386613_prim.ptr())) {
			_case_begin_1e8e015a9:;
			{
				return _1e5545570_evalStr(_self_);;
			}
		}
		_match_end_1e8e01477:;
	};
	if ((_1e5551119_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1e5553d42_Str(_386613_prim.ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if (_1e544621d_IsFloat(_386613_prim.get()._field_Kind)) {
			_case_begin_1e8e03c93:;
			{
				return _1e5546285_evalFloat(_self_);;
			}
		}
		else if (_1e5445dee_IsInt(_386613_prim.get()._field_Kind)) {
			_case_begin_1e8e03666:;
			{
				return _1e55464e9_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1e8e03600:;
			{
				return nullptr;;
			}
		}
		_match_end_1e8e01b3c:;
	};
}



inline void _1e5546939_checkSpecialCases(_1e55424a1_binaryEval* _self_) {
	if (((!(_1e5550190_Comparable((*(_self_))._field_l.get()._field_Kind.ptr()))) && (!(_1e554ebb7_IsNil((*(_self_))._field_r.get()._field_Kind.ptr()))))) {
		_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if (((!(_1e5550190_Comparable((*(_self_))._field_r.get()._field_Kind.ptr()))) && (!(_1e554ebb7_IsNil((*(_self_))._field_l.get()._field_Kind.ptr()))))) {
		_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e5546b9d_evalOp(_1e55424a1_binaryEval* _self_) {
	_1e5546939_checkSpecialCases(_self_);
	{
		
		if (_1e554ee2b_Void((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1e8e07549:;
			{
				_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("void", 4), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (((_1e5551119_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr) && _1e5556e77_IsAny(_1e5551119_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1e8e081c6:;
			{
				({
					jule::Ptr<_1e5522d00_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1e5522d00_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1e8e0823c;
			}
		}
		else if (((_1e5551119_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr) && _1e5556e77_IsAny(_1e5551119_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1e8e0823c:;
			{
				return _1e5545097_evalAny(_self_);;
			}
		}
		else if ((_1e5551aba_TypeEnum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8e07b32:;
			{
				({
					jule::Ptr<_1e5522d00_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1e5522d00_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1e8e07ba9;
			}
		}
		else if ((_1e5551aba_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8e07ba9:;
			{
				return _1e5543b45_evalTypeEnum(_self_);;
			}
		}
		else if (_1e554ebb7_IsNil((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1e8e07c31:;
			{
				return _1e554366c_evalNil(_self_);;
			}
		}
		else if ((_1e5551856_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8e07ca8:;
			{
				({
					jule::Ptr<_1e5522d00_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1e5522d00_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1e8e082b4;
			}
		}
		else if ((_1e5551856_Enum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8e082b4:;
			{
				return _1e55438d1_evalEnum(_self_);;
			}
		}
		else if ((_1e555137d_Sptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8e0833b:;
			{
				({
					jule::Ptr<_1e5522d00_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1e5522d00_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1e8e083b3;
			}
		}
		else if ((_1e555137d_Sptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8e083b3:;
			{
				return _1e5543da9_evalSptr(_self_);;
			}
		}
		else if ((_1e55515e2_Ptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8e0843a:;
			{
				({
					jule::Ptr<_1e5522d00_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1e5522d00_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1e8e084b2;
			}
		}
		else if ((_1e55515e2_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8e084b2:;
			{
				return _1e554411d_evalPtr(_self_);;
			}
		}
		else if ((_1e5551d2e_Arr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8e08539:;
			{
				return _1e5544382_evalArr(_self_);;
			}
		}
		else if ((_1e5552093_Slc((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8e085b1:;
			{
				return _1e55445e6_evalSlc(_self_);;
			}
		}
		else if ((_1e5552307_Fn((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8e08638:;
			{
				return _1e554485a_evalFn(_self_);;
			}
		}
		else if ((_1e55527d0_Trait((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8e086b0:;
			{
				({
					jule::Ptr<_1e5522d00_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1e5522d00_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1e8e08737;
			}
		}
		else if ((_1e55527d0_Trait((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8e08737:;
			{
				return _1e5544d33_evalTrait(_self_);;
			}
		}
		else if ((_1e555256b_Struct((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8e087ae:;
			{
				return _1e5544abe_evalStruct(_self_);;
			}
		}
		else if ((_1e5551119_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8e08836:;
			{
				return _1e554675d_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1e8e07aaa:;
			{
				return nullptr;;
			}
		}
		_match_end_1e8e07a44:;
	};
}



inline void _1e5546e23_evalConst(_1e55424a1_binaryEval* _self_, jule::Ptr<_1e5522d00_Data>* _395033_d) {
	{
		
		if (((*(_395033_d)) == nullptr)) {
			_case_begin_1e8e17a65:;
			{
				return;;
			}
		}
		else if ((!(_1e55236b3_IsConst((*(_self_))._field_l.ptr()))) || (!(_1e55236b3_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1e8e17acb:;
			{
				(*(_395033_d)).get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1e8e173d3:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1e8e190e9:;
			{
				(*(_395033_d)).get()._field_Constant=static__1e5447483_NewBool(_1e544c0ae_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1e8e19160:;
			{
				(*(_395033_d)).get()._field_Constant=static__1e5447483_NewBool((!(_1e544c0ae_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1e8e191c6:;
			{
				(*(_395033_d)).get()._field_Constant=static__1e5447483_NewBool(_1e544bca1_Or((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1e8e1923c:;
			{
				(*(_395033_d)).get()._field_Constant=static__1e5447483_NewBool(_1e544b993_And((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1e8e192a3:;
			{
				(*(_395033_d)).get()._field_Constant=static__1e5447483_NewBool(_1e544c9d8_Gt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1e8e19319:;
			{
				(*(_395033_d)).get()._field_Constant=static__1e5447483_NewBool(_1e544c3bc_Lt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1e8e19380:;
			{
				(*(_395033_d)).get()._field_Constant=static__1e5447483_NewBool(_1e544cce6_GtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1e8e193e6:;
			{
				(*(_395033_d)).get()._field_Constant=static__1e5447483_NewBool(_1e544c6ca_LtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1e8e1945c:;
			{
				_1e544d104_Add((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1e8e194c3:;
			{
				_1e544d412_Sub((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e8e19539:;
			{
				_1e544d720_Mul((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1e8e195a0:;
			{
				jule::Bool _398717_ok = _1e544da2d_Div((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_398717_ok)) && (_1e54494a7_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
				jule::Ptr<_1e55539ce_Prim> _399221_prim = _1e5551119_Prim((*(_395033_d)).get()._field_Kind.ptr());;
				{
					
					if (_1e544586b_IsSigInt(_399221_prim.get()._field_Kind)) {
						_case_begin_1e8e25c1b:;
						{
							_1e544972c_SetI64((*(_395033_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1e5448ece_AsI64((*(_395033_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_1e5445b57_IsUnsigInt(_399221_prim.get()._field_Kind)) {
						_case_begin_1e8e25c93:;
						{
							_1e54499a2_SetU64((*(_395033_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1e5449243_AsU64((*(_395033_d)).get()._field_Constant.ptr())));
						}
					}
					_match_end_1e8e25b61:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1e8e19627:;
			{
				jule::Bool _400017_ok = _1e544dd3b_Mod((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_400017_ok)) && (_1e54494a7_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1e8e1969e:;
			{
				_1e544e457_BitwiseOr((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1e8e19726:;
			{
				_1e544e149_BitwiseAnd((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1e8e1979d:;
			{
				_1e544e765_Xor((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1e8e19825:;
			{
				_1e544ea73_Lshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1e8e1989c:;
			{
				_1e544ed81_Rshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		_match_end_1e8e188ac:;
	};
	(*(_395033_d)).get()._field_Model=jule::Any((*(_395033_d)).get()._field_Constant, &__jule_any_type47);
	_1e554ab91_applyCastModelByEnum(_395033_d, _1e5551856_Enum((*(_395033_d)).get()._field_Kind.ptr()));
}



inline void _1e5547198_checkData(_1e55424a1_binaryEval* _self_, jule::Ptr<_1e5522d00_Data>* _402533_d) {
	jule::Ptr<_1e5463b75_FnIns> _402613_f = _1e5552307_Fn((*(_402533_d)).get()._field_Kind.ptr());;
	if ((((_402613_f != nullptr) && (_402613_f.get()._field_Decl != nullptr)) && _1e546169a_IsMethod(_402613_f.get()._field_Decl.ptr()))) {
		_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1e5547374_checkDatas(_1e55424a1_binaryEval* _self_) {
	_1e5547198_checkData(_self_, &((*(_self_))._field_l));
	_1e5547198_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1e55475e9_setModel(_1e55424a1_binaryEval* _self_, jule::Ptr<_1e5522d00_Data>* _403732_d) {
	if (_1e55236b3_IsConst((*(_403732_d)).ptr())) {
		if ((_1e55236b3_IsConst((*(_self_))._field_l.ptr()) && _1e55236b3_IsConst((*(_self_))._field_r.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1e5522d00_Data> _404518_l;;
	jule::Ptr<_1e5522d00_Data> _404525_r;;
	({
		jule::Ptr<_1e5522d00_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1e5522d00_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_404518_l = ___jule_assign_arg;
		_404525_r = _1___jule_assign_arg;
	});
	if ((!(_1e55239c1_GoodOperand(_404518_l.ptr(), &(_404525_r))))) {
		({
			jule::Ptr<_1e5522d00_Data> ___jule_assign_arg = _404525_r;
			jule::Ptr<_1e5522d00_Data> _1___jule_assign_arg = _404518_l;
			_404518_l = ___jule_assign_arg;
			_404525_r = _1___jule_assign_arg;
		});
	};
	(*(_403732_d)).get()._field_Model=jule::Any(jule::new_ptr<_1e5452ca7_BinopExprModel>(_1e5452ca7_BinopExprModel{._field_Left=jule::new_ptr<_1e54527e0_OperandExprModel>(_1e54527e0_OperandExprModel{._field_Kind=_404518_l.get()._field_Kind, ._field_Model=_404518_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1e54527e0_OperandExprModel>(_1e54527e0_OperandExprModel{._field_Kind=_404525_r.get()._field_Kind, ._field_Model=_404525_r.get()._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type117);
}



inline void _1e554786e_postEval(_1e55424a1_binaryEval* _self_, jule::Ptr<_1e5522d00_Data>* _406332_d) {
	(*(_406332_d)).get()._field_Lvalue=false;
	_1e55475e9_setModel(_self_, _406332_d);
}



inline jule::Ptr<_1e5522d00_Data> _1e5547c26_solveExplicit(_1e55424a1_binaryEval* _self_, jule::Ptr<_1e5522d00_Data>* _406837_l, jule::Ptr<_1e5522d00_Data>* _406852_r) {
	({
		jule::Ptr<_1e5522d00_Data> ___jule_assign_arg = (*(_406837_l));
		jule::Ptr<_1e5522d00_Data> _1___jule_assign_arg = (*(_406852_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1e5547374_checkDatas(_self_);
	jule::Ptr<_1e5522d00_Data> _407317_d = _1e5546b9d_evalOp(_self_);;
	({
		jule::Ptr<_1e5522d00_Data> ___jule_assign_arg = (*(_406837_l));
		jule::Ptr<_1e5522d00_Data> _1___jule_assign_arg = (*(_406852_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1e5546e23_evalConst(_self_, &(_407317_d));
	if ((_407317_d != nullptr)) {
		_407317_d.get()._field_Mutable=true;
		_1e554786e_postEval(_self_, &(_407317_d));
	};
	return _407317_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e5548034_eval(_1e55424a1_binaryEval* _self_, jule::Ptr<_1e477b71e_BinopExpr>* _408828_op) {
	if (((*(_408828_op)).get()._field_Op.get()._field_Kind == jule::Str("=", 1))) {
		_1e5524d79_pushErr((*(_self_))._field_e.ptr(), (*(_408828_op)).get()._field_Op, jule::Str("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1e5525198_pushSugggestion((*(_self_))._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5522d00_Data> _409517_l = _1e553eb74_evalExprKind((*(_self_))._field_e, (*(_408828_op)).get()._field_Left.get()._field_Kind);;
	if (((_409517_l == nullptr) || (_409517_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1e554dc82_TypeKind> _410017_prefix = (*(_self_))._field_e.get()._field_prefix;;
	(*(_self_))._field_e.get()._field_prefix=_409517_l.get()._field_Kind;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_410017_prefix;
	});;
	jule::Ptr<_1e5522d00_Data> _410317_r = _1e553eb74_evalExprKind((*(_self_))._field_e, (*(_408828_op)).get()._field_Right.get()._field_Kind);;
	if (((_410317_r == nullptr) || (_410317_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*(_408828_op)).get()._field_Op;
	jule::Ptr<_1e5522d00_Data> _411017_d = _1e5547c26_solveExplicit(_self_, &(_409517_l), &(_410317_r));;
	if ((((_411017_d != nullptr) && _409517_l.get()._field_IsRune) && _410317_r.get()._field_IsRune)) {
		_411017_d.get()._field_IsRune=true;
	};
	return _411017_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e55424a1_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e554c555_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e554d08e_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e554e17d_Str(_1e554dc82_TypeKind* _self_) {
	if (_1e554ebb7_IsNil(_self_)) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*(_self_))._field_Variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_1e554e953_CppLinked(_self_)) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*(_self_))._field_CppIdent;
	} else {
		_7417_kind+=_1e554d853_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1e554d402_Str((*(_self_))._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _1e554e48b_Equal(jule::Ptr<_1e554dc82_TypeKind> _self_, jule::Ptr<_1e554dc82_TypeKind> _9021_other) {
	if (_1e554ebb7_IsNil(_self_.ptr())) {
		return _1e554ebb7_IsNil(_9021_other.ptr());;
	};
	if (_1e554e953_CppLinked(_self_.ptr())) {
		return (_1e554e953_CppLinked(_9021_other.ptr()) && (_self_.get()._field_CppIdent == _9021_other.get()._field_CppIdent));;
	};
	return _1e554d853_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1e554d710_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _1e554e953_CppLinked(_1e554dc82_TypeKind* _self_) {
	return ((*(_self_))._field_CppIdent.len() != 0LL);;
}



inline jule::Bool _1e554ebb7_IsNil(_1e554dc82_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1e554ee2b_Void(_1e554dc82_TypeKind* _self_) {
	jule::Ptr<_1e55539ce_Prim> _11113_prim = _1e5551119_Prim(_self_);;
	return ((_11113_prim != nullptr) && (_11113_prim.get()._field_Kind == jule::Str("void", 4)));;
}



inline jule::Bool _1e5550190_Comparable(_1e554dc82_TypeKind* _self_) {
	if (_1e554e953_CppLinked(_self_)) {
		return false;;
	};
	{
		_1e554dc82_TypeKind* _12121__self = (&((*(_self_))));;
		if ((_1e555256b_Struct(_12121__self) != nullptr)) {
			return _1e555256b_Struct(_12121__self).get()._field_Comparable;;
		};
		return (((_1e5552a44_Map(_12121__self) == nullptr) && (_1e5552093_Slc(_12121__self) == nullptr)) && (_1e5552307_Fn(_12121__self) == nullptr));;
	};
}



inline jule::Bool _1e5550404_Mutable(_1e554dc82_TypeKind* _self_) {
	{
		_1e554dc82_TypeKind* _13221__self = (&((*(_self_))));;
		if ((_1e555256b_Struct(_13221__self) != nullptr)) {
			return _1e555256b_Struct(_13221__self).get()._field_Mutable;;
		};
		if ((_1e55527d0_Trait(_13221__self) != nullptr)) {
			return _1e55527d0_Trait(_13221__self).get()._field_Mutable;;
		};
		if ((_1e5551119_Prim(_13221__self) != nullptr)) {
			jule::Ptr<_1e55539ce_Prim> _14021_p = _1e5551119_Prim(_13221__self);;
			return _1e5556e77_IsAny(_14021_p.ptr());;
		};
		if ((_1e5551d2e_Arr(_13221__self) != nullptr)) {
			return _1e5550404_Mutable(_1e5551d2e_Arr(_13221__self).get()._field_Elem.ptr());;
		};
		return (((_1e5552093_Slc(_13221__self) != nullptr) || (_1e55515e2_Ptr(_13221__self) != nullptr)) || (_1e555137d_Sptr(_13221__self) != nullptr));;
	};
}



inline jule::Bool _1e5550668_NilCompatible(_1e554dc82_TypeKind* _self_) {
	{
		_1e554dc82_TypeKind* _15521__self = (&((*(_self_))));;
		jule::Ptr<_1e55539ce_Prim> _15717_prim = _1e5551119_Prim(_15521__self);;
		if (((_15717_prim != nullptr) && _1e5556e77_IsAny(_15717_prim.ptr()))) {
			return true;;
		};
		return (((((((_1e554ebb7_IsNil(_15521__self) || (_1e5552307_Fn(_15521__self) != nullptr)) || (_1e555137d_Sptr(_15521__self) != nullptr)) || (_1e55515e2_Ptr(_15521__self) != nullptr)) || (_1e55527d0_Trait(_15521__self) != nullptr)) || (_1e5552093_Slc(_15521__self) != nullptr)) || (_1e5552a44_Map(_15521__self) != nullptr)) || (_1e5551aba_TypeEnum(_15521__self) != nullptr));;
	};
}



inline jule::Bool _1e55508cc_PerformsRC(_1e554dc82_TypeKind* _self_) {
	{
		_1e554dc82_TypeKind* _17621__self = (&((*(_self_))));;
		jule::Ptr<_1e55539ce_Prim> _17717_prim = _1e5551119_Prim(_17621__self);;
		if ((_17717_prim != nullptr)) {
			return _1e5556e77_IsAny(_17717_prim.ptr());;
		};
		return (((_1e555137d_Sptr(_17621__self) != nullptr) || (_1e5552093_Slc(_17621__self) != nullptr)) || (_1e55527d0_Trait(_17621__self) != nullptr));;
	};
}



inline jule::Bool _1e5550b41_SupportsCloning(_1e554dc82_TypeKind* _self_) {
	{
		_1e554dc82_TypeKind* _18821__self = (&((*(_self_))));;
		{
			
			if ((_1e5551119_Prim(_18821__self) != nullptr)) {
				_case_begin_1e8e631dc:;
				{
					return (!(_1e5556e77_IsAny(_1e5551119_Prim(_18821__self).ptr())));;
				}
			}
			else if ((_1e5551856_Enum(_18821__self) != nullptr)) {
				_case_begin_1e8e65255:;
				{
					return true;;
				}
			}
			else if ((_1e5552307_Fn(_18821__self) != nullptr)) {
				_case_begin_1e8e652bb:;
				{
					return true;;
				}
			}
			else if ((_1e55515e2_Ptr(_18821__self) != nullptr)) {
				_case_begin_1e8e65332:;
				{
					return true;;
				}
			}
			else if ((_1e5552093_Slc(_18821__self) != nullptr)) {
				_case_begin_1e8e64d7b:;
				{
					return _1e5550b41_SupportsCloning(_1e5552093_Slc(_18821__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1e5552a44_Map(_18821__self) != nullptr)) {
				_case_begin_1e8e64de2:;
				{
					jule::Ptr<_1e5559276_Map> _20121_m = _1e5552a44_Map(_18821__self);;
					return (_1e5550b41_SupportsCloning(_20121_m.get()._field_Key.ptr()) && _1e5550b41_SupportsCloning(_20121_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_1e5551d2e_Arr(_18821__self) != nullptr)) {
				_case_begin_1e8e64e58:;
				{
					return _1e5550b41_SupportsCloning(_1e5551d2e_Arr(_18821__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1e555137d_Sptr(_18821__self) != nullptr)) {
				_case_begin_1e8e64ebe:;
				{
					return _1e5550b41_SupportsCloning(_1e555137d_Sptr(_18821__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1e555256b_Struct(_18821__self) != nullptr)) {
				_case_begin_1e8e65563:;
				{
					jule::Ptr<_1e47903e2_StructIns> _20825_s = _1e555256b_Struct(_18821__self);;
					return (((_20825_s.get()._field_Decl != nullptr) && (!(_20825_s.get()._field_Decl.get()._field_CppLinked))) && _1e4759048_IsDerives(_20825_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_1e8e64d15:;
				{
					return false;;
				}
			}
			_match_end_1e8e64c9e:;
		};
	};
}



inline jule::Bool _1e5550da5_Variadicable(_1e554dc82_TypeKind* _self_) {
	{
		_1e554dc82_TypeKind* _22121__self = (&((*(_self_))));;
		return (_1e5552093_Slc(_22121__self) != nullptr);;
	};
}



inline jule::Ptr<_1e55539ce_Prim> _1e5551119_Prim(_1e554dc82_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1e8e634ea:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e55539ce_Prim>(6);;
			}
		}
		else {
			_case_begin_1e8e6463e:;
			{
				return nullptr;;
			}
		}
		_match_end_1e8e645d9:;
	};
}



inline jule::Ptr<_1e5557263_Sptr> _1e555137d_Sptr(_1e554dc82_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1e8e646c7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5557263_Sptr>(7);;
			}
		}
		else {
			_case_begin_1e8e6cdc8:;
			{
				return nullptr;;
			}
		}
		_match_end_1e8e6d307:;
	};
}



inline jule::Ptr<_1e555a7c7_Ptr> _1e55515e2_Ptr(_1e554dc82_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1e8e6ce83:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e555a7c7_Ptr>(12);;
			}
		}
		else {
			_case_begin_1e8e6db32:;
			{
				return nullptr;;
			}
		}
		_match_end_1e8e6dacc:;
	};
}



inline jule::Ptr<_1e547501b_Enum> _1e5551856_Enum(_1e554dc82_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1e8e6dbba:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e547501b_Enum>(3);;
			}
		}
		else {
			_case_begin_1e8e6e78c:;
			{
				return nullptr;;
			}
		}
		_match_end_1e8e6ebbb:;
	};
}



inline jule::Ptr<_1e5476616_TypeEnum> _1e5551aba_TypeEnum(_1e554dc82_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1e8e6e847:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5476616_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1e8e704e6:;
			{
				return nullptr;;
			}
		}
		_match_end_1e8e70491:;
	};
}



inline jule::Ptr<_1e5559d6a_Arr> _1e5551d2e_Arr(_1e554dc82_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1e8e7057e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5559d6a_Arr>(11);;
			}
		}
		else {
			_case_begin_1e8e711d9:;
			{
				return nullptr;;
			}
		}
		_match_end_1e8e71184:;
	};
}



inline jule::Ptr<_1e5557bc0_Slc> _1e5552093_Slc(_1e554dc82_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1e8e71272:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5557bc0_Slc>(8);;
			}
		}
		else {
			_case_begin_1e8e71dcc:;
			{
				return nullptr;;
			}
		}
		_match_end_1e8e71d77:;
	};
}



inline jule::Ptr<_1e5463b75_FnIns> _1e5552307_Fn(_1e554dc82_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1e8e71e65:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5463b75_FnIns>(1);;
			}
		}
		else {
			_case_begin_1e8e72ac0:;
			{
				return nullptr;;
			}
		}
		_match_end_1e8e72a6a:;
	};
}



inline jule::Ptr<_1e47903e2_StructIns> _1e555256b_Struct(_1e554dc82_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e8e72b58:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e47903e2_StructIns>(0);;
			}
		}
		else {
			_case_begin_1e8e7372a:;
			{
				return nullptr;;
			}
		}
		_match_end_1e8e73b59:;
	};
}



inline jule::Ptr<_1e5472dc6_Trait> _1e55527d0_Trait(_1e554dc82_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1e8e737d5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5472dc6_Trait>(2);;
			}
		}
		else {
			_case_begin_1e8e74484:;
			{
				return nullptr;;
			}
		}
		_match_end_1e8e7442e:;
	};
}



inline jule::Ptr<_1e5559276_Map> _1e5552a44_Map(_1e554dc82_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1e8e7451c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5559276_Map>(10);;
			}
		}
		else {
			_case_begin_1e8e75177:;
			{
				return nullptr;;
			}
		}
		_match_end_1e8e75122:;
	};
}



inline jule::Ptr<_1e555874d_Tuple> _1e5552ca8_Tup(_1e554dc82_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1e8e75210:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e555874d_Tuple>(9);;
			}
		}
		else {
			_case_begin_1e8e75d6a:;
			{
				return nullptr;;
			}
		}
		_match_end_1e8e75d15:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e554dc82_TypeKind _Src) {
	_Stream << _1e554e17d_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1e5553517_checked(_1e5553160_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}



inline void _1e55536e3_removeKind(_1e5553160_TypeSymbol* _self_) {
	(*(_self_))._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5553160_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e5553d42_Str(_1e55539ce_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1e5554150_Equal(jule::Ptr<_1e55539ce_Prim> _self_, jule::Ptr<_1e554dc82_TypeKind> _37421_other) {
	jule::Ptr<_1e55539ce_Prim> _37513_prim = _1e5551119_Prim(_37421_other.ptr());;
	if ((_37513_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _37513_prim.get()._field_Kind);;
}



inline jule::Bool _1e55545c3_IsConstraint(_1e55539ce_Prim* _self_) {
	return ((((!(_1e5556c13_IsStr(_self_))) && (!(_1e5556e77_IsAny(_self_)))) && (!(_1e555699e_IsBool(_self_)))) && (!(_1e54464b5_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1e5554837_IsI8(_1e55539ce_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("i8", 2));;
}



inline jule::Bool _1e5554a9b_IsI16(_1e55539ce_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("i16", 3));;
}



inline jule::Bool _1e5554d10_IsI32(_1e55539ce_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("i32", 3));;
}



inline jule::Bool _1e5555074_IsI64(_1e55539ce_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("i64", 3));;
}



inline jule::Bool _1e55552d8_IsU8(_1e55539ce_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("u8", 2));;
}



inline jule::Bool _1e555554c_IsU16(_1e55539ce_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("u16", 3));;
}



inline jule::Bool _1e55557b1_IsU32(_1e55539ce_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("u32", 3));;
}



inline jule::Bool _1e5555a25_IsU64(_1e55539ce_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("u64", 3));;
}



inline jule::Bool _1e5555c89_IsF32(_1e55539ce_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("f32", 3));;
}



inline jule::Bool _1e5555eed_IsF64(_1e55539ce_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("f64", 3));;
}



inline jule::Bool _1e5556262_IsInt(_1e55539ce_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("int", 3));;
}



inline jule::Bool _1e55564c6_IsUint(_1e55539ce_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("uint", 4));;
}



inline jule::Bool _1e555673a_IsUintptr(_1e55539ce_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("uintptr", 7));;
}



inline jule::Bool _1e555699e_IsBool(_1e55539ce_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("bool", 4));;
}



inline jule::Bool _1e5556c13_IsStr(_1e55539ce_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("str", 3));;
}



inline jule::Bool _1e5556e77_IsAny(_1e55539ce_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("any", 3));;
}







std::ostream &operator<<(std::ostream &_Stream, _1e55539ce_Prim _Src) {
	_Stream << _1e5553d42_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e55575c6_Str(_1e5557263_Sptr* _self_) {
	return (jule::Str("&", 1) + _1e554e17d_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1e55578d4_Equal(jule::Ptr<_1e5557263_Sptr> _self_, jule::Ptr<_1e554dc82_TypeKind> _45121_other) {
	jule::Ptr<_1e5557263_Sptr> _45213_sptr = _1e555137d_Sptr(_45121_other.ptr());;
	if ((_45213_sptr == nullptr)) {
		return false;;
	};
	return _1e554e48b_Equal(_self_.get()._field_Elem, _45213_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5557263_Sptr _Src) {
	_Stream << _1e55575c6_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e55581cb_Str(_1e5557bc0_Slc* _self_) {
	return (jule::Str("[]", 2) + _1e554e17d_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1e55584d9_Equal(jule::Ptr<_1e5557bc0_Slc> _self_, jule::Ptr<_1e554dc82_TypeKind> _47021_other) {
	jule::Ptr<_1e5557bc0_Slc> _47113_slc = _1e5552093_Slc(_47021_other.ptr());;
	if ((_47113_slc == nullptr)) {
		return false;;
	};
	return _1e554e48b_Equal(_self_.get()._field_Elem, _47113_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5557bc0_Slc _Src) {
	_Stream << _1e55581cb_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e5558ab1_Str(_1e555874d_Tuple* _self_) {
	jule::Str _48717_s = jule::Str("(", 1);;
	_48717_s+=_1e554e17d_Str((*(_self_))._field_Types[0LL].ptr());
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1e8e85220:;
		if (it != expr_end) {
			jule::Ptr<_1e554dc82_TypeKind> *_48916_t = it;
			{
				_48717_s+=jule::Str(",", 1);
				_48717_s+=_1e554e17d_Str((*(_48916_t)).ptr());
			}
			_iter_next_1e8e85220:;
			++it;
			goto _iter_begin_1e8e85220;
		}
		_iter_end_1e8e85220:;
	};
	_48717_s+=jule::Str(")", 1);
	return _48717_s;;
}



inline jule::Bool _1e5558dbe_Equal(jule::Ptr<_1e555874d_Tuple> _self_, jule::Ptr<_1e554dc82_TypeKind> _49821_other) {
	jule::Ptr<_1e555874d_Tuple> _49913_tup = _1e5552ca8_Tup(_49821_other.ptr());;
	if ((_49913_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _49913_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I64 _50617_i = 0LL;;
	for (; (_50617_i < _self_.get()._field_Types.len()); (_50617_i)++) {
		{
			if ((!(_1e554e48b_Equal(_self_.get()._field_Types[_50617_i], _49913_tup.get()._field_Types[_50617_i])))) {
				return false;;
			};
		}
	_iter_next_1e8e87c39:;
	}
	_iter_end_1e8e87c39:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e555874d_Tuple _Src) {
	_Stream << _1e5558ab1_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e55595d9_Str(_1e5559276_Map* _self_) {
	jule::Str _52617_s = jule::Str("[", 1);;
	_52617_s+=_1e554e17d_Str((*(_self_))._field_Key.ptr());
	_52617_s+=jule::Str(":", 1);
	_52617_s+=_1e554e17d_Str((*(_self_))._field_Val.ptr());
	_52617_s+=jule::Str("]", 1);
	return _52617_s;;
}



inline jule::Bool _1e55598e7_Equal(jule::Ptr<_1e5559276_Map> _self_, jule::Ptr<_1e554dc82_TypeKind> _53521_other) {
	jule::Ptr<_1e5559276_Map> _53613_m = _1e5552a44_Map(_53521_other.ptr());;
	if ((_53613_m == nullptr)) {
		return false;;
	};
	return (_1e554e48b_Equal(_self_.get()._field_Key, _53613_m.get()._field_Key) && _1e554e48b_Equal(_self_.get()._field_Val, _53613_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5559276_Map _Src) {
	_Stream << _1e55595d9_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e555a1cd_Str(_1e5559d6a_Arr* _self_) {
	jule::Str _55417_s = jule::Str("[", 1);;
	_55417_s+=_1e543d7ba_Itoa((*(_self_))._field_N);
	_55417_s+=jule::Str("]", 1);
	_55417_s+=_1e554e17d_Str((*(_self_))._field_Elem.ptr());
	return _55417_s;;
}



inline jule::Bool _1e555a4db_Equal(jule::Ptr<_1e5559d6a_Arr> _self_, jule::Ptr<_1e554dc82_TypeKind> _56221_other) {
	jule::Ptr<_1e5559d6a_Arr> _56313_arr = _1e5551d2e_Arr(_56221_other.ptr());;
	if ((_56313_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _56313_arr.get()._field_N) && _1e554e48b_Equal(_self_.get()._field_Elem, _56313_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5559d6a_Arr _Src) {
	_Stream << _1e555a1cd_Str(&_Src);
	return _Stream;
}



inline jule::Str _1e555ab3a_Str(_1e555a7c7_Ptr* _self_) {
	if (_1e555b29a_IsUnsafe(_self_)) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _1e554e17d_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1e555ae48_Equal(jule::Ptr<_1e555a7c7_Ptr> _self_, jule::Ptr<_1e554dc82_TypeKind> _58621_other) {
	jule::Ptr<_1e555a7c7_Ptr> _58713_ptr = _1e55515e2_Ptr(_58621_other.ptr());;
	if ((_58713_ptr == nullptr)) {
		return false;;
	};
	return _1e554e48b_Equal(_self_.get()._field_Elem, _58713_ptr.get()._field_Elem);;
}



inline jule::Bool _1e555b29a_IsUnsafe(_1e555a7c7_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1e555a7c7_Ptr _Src) {
	_Stream << _1e555ab3a_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e555b71d_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1e555cd07_pushErr(_1e555c5ed_typeChecker* _self_, jule::Ptr<_20d155596_Token> _67226_token, jule::Str _67241_fmt, jule::Slice<jule::Any> _67254_args) {
	_1e54aee57_pushErr((*(_self_))._field_s.ptr(), _67226_token, _67241_fmt, _67254_args);
}



inline void _1e555ced3_allowBuiltin(_1e555c5ed_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1e555d1ae_disallowBuiltin(_1e555c5ed_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Ptr<_1e55539ce_Prim> _1e555d4bc_buildPrim(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e4773ddc_IdentTypeDecl>* _68429_decl) {
	if ((!(_1e55675b4_isPrim((*(_68429_decl)).get()._field_Ident)))) {
		_1e555cd07_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_68429_decl)).get()._field_Generics.len() > 0LL)) {
		_1e555cd07_pushErr(_self_, (*(_68429_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_68429_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return _1e5567075_buildPrimType((*(_68429_decl)).get()._field_Ident);;
}



inline void _1e8e96d36_pushReference(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e47903e2_StructIns>* _69840_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1e8b9a82b_Exist((*(_self_))._field_refers.ptr(), (*(_69840_t)))) {
		return;;
	};
	_1e546778e_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_69840_t)), &__jule_any_type9));
}

inline void _1e8e99bb3_pushReference(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e5472dc6_Trait>* _69840_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1e8e9b81e_Exist((*(_self_))._field_refers.ptr(), (*(_69840_t)))) {
		return;;
	};
	_1e546778e_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_69840_t)), &__jule_any_type10));
}



inline void _1e555d9b7_pushReferenceByKind(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e554dc82_TypeKind>* _70843_k) {
	{
		
		if ((_1e555256b_Struct((*(_70843_k)).ptr()) != nullptr)) {
			_case_begin_1e8e959e4:;
			{
				jule::Ptr<_1e47903e2_StructIns> _71121_t = _1e555256b_Struct((*(_70843_k)).ptr());;
				_1e8e96d36_pushReference(_self_, &(_71121_t));
			}
		}
		else if ((_1e55527d0_Trait((*(_70843_k)).ptr()) != nullptr)) {
			_case_begin_1e8e95a6b:;
			{
				jule::Ptr<_1e5472dc6_Trait> _71421_t = _1e55527d0_Trait((*(_70843_k)).ptr());;
				_1e8e99bb3_pushReference(_self_, &(_71421_t));
			}
		}
		_match_end_1e8e958d4:;
	};
}



inline void _1e555dd80_pushCycleError(_1e555c5ed_typeChecker* _self_, jule::Any _71929_def1, jule::Any _71940_def2, jule::Str* _71956_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _72113_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _72128_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_72128_def)) };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1e8e9ed3e:;
				{
					return (*(_72128_def)).cast_ptr<_1e554d08e_TypeAlias>(&__jule_any_type67).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1e8e9eda5:;
				{
					return (*(_72128_def)).cast_ptr<_1e4790018_Struct>(&__jule_any_type66).get()._field_Ident;;
				}
			}
			else {
				_case_begin_1e8e9e701:;
				{
					return jule::Str();;
				}
			}
			_match_end_1e8e9e624:;
		};
	});;
	jule::Str _73113_def1Ident = _72113_getIdent(&(_71929_def1));;
	jule::Str _73213_def2Ident = _72113_getIdent(&(_71940_def2));;
	jule::Str _73313_refersTo = _24305e8ee_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_73113_def1Ident, &__jule_any_type5),jule::Any(_73213_def2Ident, &__jule_any_type5)}));;
	((*(_71956_message))).buffer.insert(0, (((_242eaebe5_Repeat(jule::Str(" ", 1), 4LL) + _73313_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1e555e237_checkCrossCycle(_1e555c5ed_typeChecker* _self_, jule::Any _73730_decl, jule::Str* _73746_message) {
	{
		auto &_match_expr{ _73730_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1e8ea1eea:;
			{
				jule::Ptr<_1e554d08e_TypeAlias> _74017_ta = _73730_decl.cast_ptr<_1e554d08e_TypeAlias>(&__jule_any_type67);;
				{
					auto expr = &(_74017_ta.get()._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e8ea29ac:;
					if (it != expr_end) {
						jule::Any *_74120_d = it;
						{
							{
								
								if (((*(_74120_d)) == (*(_self_))._field_referencer.get()._field_owner)) {
									_case_begin_1e8ea36a0:;
									{
										_1e555dd80_pushCycleError(_self_, jule::Any(_74017_ta, &__jule_any_type67), (*(_74120_d)), _73746_message);
										return false;;
									}
								}
								else if ((!(_1e555e237_checkCrossCycle(_self_, (*(_74120_d)), _73746_message)))) {
									_case_begin_1e8ea3727:;
									{
										_1e555dd80_pushCycleError(_self_, jule::Any(_74017_ta, &__jule_any_type67), (*(_74120_d)), _73746_message);
										return false;;
									}
								}
								_match_end_1e8ea3590:;
							};
						}
						_iter_next_1e8ea29ac:;
						++it;
						goto _iter_begin_1e8ea29ac;
					}
					_iter_end_1e8ea29ac:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1e8ea2061:;
			{
				jule::Ptr<_1e4790018_Struct> _75217_s = _73730_decl.cast_ptr<_1e4790018_Struct>(&__jule_any_type66);;
				{
					auto expr = &(_75217_s.get()._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e8ea3e97:;
					if (it != expr_end) {
						jule::Ptr<_1e4790018_Struct> *_75320_d = it;
						{
							{
								
								if ((__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_75320_d))))) {
									_case_begin_1e8ea597c:;
									{
										_1e555dd80_pushCycleError(_self_, jule::Any(_75217_s, &__jule_any_type66), jule::Any((*(_75320_d)), &__jule_any_type66), _73746_message);
										return false;;
									}
								}
								else if ((!(_1e555e237_checkCrossCycle(_self_, jule::Any((*(_75320_d)), &__jule_any_type66), _73746_message)))) {
									_case_begin_1e8ea5a04:;
									{
										_1e555dd80_pushCycleError(_self_, jule::Any(_75217_s, &__jule_any_type66), jule::Any((*(_75320_d)), &__jule_any_type66), _73746_message);
										return false;;
									}
								}
								_match_end_1e8ea586c:;
							};
						}
						_iter_next_1e8ea3e97:;
						++it;
						goto _iter_begin_1e8ea3e97;
					}
					_iter_end_1e8ea3e97:;
				};
			}
		}
		_match_end_1e8ea1e0c:;
	};
	return true;;
}



inline jule::Bool _1e555e5de_checkIllegalCycles(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e4773ddc_IdentTypeDecl>* _77138_ident, jule::Any _77165_decl) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_referencer == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _77165_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1e8ea563b:;
			{
				if (((*(_self_))._field_notPlain || _77165_decl.cast_ptr<_1e4790018_Struct>(&__jule_any_type66).get()._field_CppLinked)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1e8ea78a2:;
			{
				if (_77165_decl.cast_ptr<_1e554d08e_TypeAlias>(&__jule_any_type67).get()._field_CppLinked) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1e8ea54d7:;
	};
	if ((_77165_decl == (*(_self_))._field_referencer.get()._field_owner)) {
		_1e555cd07_pushErr(_self_, (*(_77138_ident)).get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_referencer.get()._field_ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _79417_message = jule::Str();;
	if ((!(_1e555e237_checkCrossCycle(_self_, _77165_decl, &(_79417_message))))) {
		jule::Str _79721_errMsg = _79417_message;;
		_79417_message=jule::Str();
		_1e555dd80_pushCycleError(_self_, (*(_self_))._field_referencer.get()._field_owner, _77165_decl, &(_79417_message));
		_79721_errMsg+=_79417_message;
		_1e555cd07_pushErr(_self_, (*(_77138_ident)).get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_79721_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1e8ea9d6b:;
			{
				{
					(*((*(_self_))._field_referencer.get()._field_refs))=jule::append((*((*(_self_))._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({_77165_decl}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1e8ea9de3:;
			{
				{
					auto &_match_expr{ _77165_decl };
					
					if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1e8eabee4:;
						{
							jule::Ptr<_1e4790018_Struct> _81325_s = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1e4790018_Struct>(&__jule_any_type66);;
							_81325_s.get()._field_Depends = jule::alloc_for_append(_81325_s.get()._field_Depends,1);_81325_s.get()._field_Depends.__push(_77165_decl.cast_ptr<_1e4790018_Struct>(&__jule_any_type66));;
						}
					}
					_match_end_1e8eabe06:;
				};
			}
		}
		_match_end_1e8eab71e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1e554d853_Kind> _1e555e996_fromTypeAlias(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e4773ddc_IdentTypeDecl>* _82133_decl, jule::Ptr<_1e554d08e_TypeAlias>* _82160_ta) {
	if ((!(_1e54b062d_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_82160_ta)).get()._field_Public, (*(_82160_ta)).get()._field_Token)))) {
		_1e555cd07_pushErr(_self_, (*(_82133_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_82133_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_82160_ta)).get()._field_Used=true;
	if (((*(_82133_decl)).get()._field_Generics.len() > 0LL)) {
		_1e555cd07_pushErr(_self_, (*(_82133_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_82133_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e8eb13a0:;
			if (it != expr_end) {
				jule::Ptr<_1e554d08e_TypeAlias> _83820_bg = *it;
				{
					if (((_83820_bg == (*(_82160_ta))) || (((*(_82160_ta)).get()._field_Kind.get()._field_Kind != nullptr) && _1e554e48b_Equal((*(_82160_ta)).get()._field_Kind.get()._field_Kind, _83820_bg.get()._field_Kind.get()._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1e8eb13a0;
					};
				}
				_iter_next_1e8eb13a0:;
				++it;
				goto _iter_begin_1e8eb13a0;
			}
			_iter_end_1e8eb13a0:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e8eb1bec:;
			if (it != expr_end) {
				jule::Ptr<_1e554d08e_TypeAlias> _84920_bg = *it;
				{
					if ((_84920_bg == (*(_82160_ta)))) {
						_1e555cd07_pushErr(_self_, (*(_82133_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_82133_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					{
						auto expr = &((*(_82160_ta)).get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e8eb3ccb:;
						if (it != expr_end) {
							jule::Ptr<_1e554d08e_TypeAlias> _85424_dg = *it;
							{
								if ((_84920_bg == _85424_dg)) {
									_1e555cd07_pushErr(_self_, (*(_82133_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_82133_decl)).get()._field_Ident, &__jule_any_type5)}));
									return nullptr;;
								};
							}
							_iter_next_1e8eb3ccb:;
							++it;
							goto _iter_begin_1e8eb3ccb;
						}
						_iter_end_1e8eb3ccb:;
					};
				}
				_iter_next_1e8eb1bec:;
				++it;
				goto _iter_begin_1e8eb1bec;
			}
			_iter_end_1e8eb1bec:;
		};
	};
	jule::Bool _86317_ok = _1e555e5de_checkIllegalCycles(_self_, _82133_decl, jule::Any((*(_82160_ta)), &__jule_any_type67));;
	if ((!(_86317_ok))) {
		return nullptr;;
	};
	if (((*(_82160_ta)).get()._field_Kind.get()._field_Kind == nullptr)) {
		_86317_ok=_1e54ba11b_checkTypeAliasDeclKind((*(_self_))._field_s, _82160_ta, (*(_self_))._field_lookup);
		if ((!(_86317_ok))) {
			return nullptr;;
		};
	};
	if (((*(_82160_ta)).get()._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(_self_))._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*(_self_))._field_ownerAlias.get()._field_Generics,1);(*(_self_))._field_ownerAlias.get()._field_Generics.__push((*(_82160_ta)));;
	};
	jule::Ptr<_1e554dc82_TypeKind> _88217_tk = jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Generic=(*(_82160_ta)).get()._field_Generic, ._field_Kind=(*(_82160_ta)).get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1e555d9b7_pushReferenceByKind(_self_, &(_88217_tk));
	if ((*(_82160_ta)).get()._field_CppLinked) {
		_88217_tk.get()._field_CppIdent=(*(_82160_ta)).get()._field_Ident;
	} else {
		_88217_tk.get()._field_CppIdent=(*(_82160_ta)).get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_1e554d853_Kind>(_88217_tk, 5);;
}



inline jule::Ptr<_1e547501b_Enum> _1e555ed4d_fromEnum(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e4773ddc_IdentTypeDecl>* _89528_decl, jule::Ptr<_1e547501b_Enum>* _89555_e) {
	if ((!(_1e54b062d_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_89555_e)).get()._field_Public, (*(_89555_e)).get()._field_Token)))) {
		_1e555cd07_pushErr(_self_, (*(_89528_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_89528_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_89528_decl)).get()._field_Generics.len() > 0LL)) {
		_1e555cd07_pushErr(_self_, (*(_89528_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_89528_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_89555_e));;
}



inline jule::Ptr<_1e5476616_TypeEnum> _1e5560205_fromTypeEnum(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e4773ddc_IdentTypeDecl>* _90732_decl, jule::Ptr<_1e5476616_TypeEnum>* _90759_e) {
	if ((!(_1e54b062d_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_90759_e)).get()._field_Public, (*(_90759_e)).get()._field_Token)))) {
		_1e555cd07_pushErr(_self_, (*(_90732_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_90732_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_90732_decl)).get()._field_Generics.len() > 0LL)) {
		_1e555cd07_pushErr(_self_, (*(_90732_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_90732_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_90759_e));;
}



inline jule::Ptr<_1e5472dc6_Trait> _1e55605ac_fromTrait(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e4773ddc_IdentTypeDecl>* _91929_decl, jule::Ptr<_1e5472dc6_Trait>* _91956_t) {
	if ((!(_1e54b062d_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_91956_t)).get()._field_Public, (*(_91956_t)).get()._field_Token)))) {
		_1e555cd07_pushErr(_self_, (*(_91929_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_91929_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_91929_decl)).get()._field_Generics.len() > 0LL)) {
		_1e555cd07_pushErr(_self_, (*(_91929_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_91929_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_1e8e99bb3_pushReference(_self_, _91956_t);
	return (*(_91956_t));;
}



inline jule::Bool _1e5560964_checkStructIns(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e47903e2_StructIns>* _93238_ins, jule::Ptr<_20d155596_Token>* _93260_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*(_93238_ins)).get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_93238_ins)).get()._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_93238_ins)).get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1e54c429b_precheckStructIns((*(_self_))._field_s, _93238_ins, (*(_93260_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*(_93238_ins)).get()._field_Generics.len() > 0LL)) {
		_1e54c4c19_checkStructInsOperators((*(_self_))._field_s, (*(_93238_ins)));
		_1e54c4521_checkStructIns((*(_self_))._field_s, _93238_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1e5560c0b_appendUsedStructReference(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e4790018_Struct>* _95349_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1e8ec95b6:;
			{
				jule::Ptr<_1e4790018_Struct> _95921_refS = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1e4790018_Struct>(&__jule_any_type66);;
				if ((!(_1e475970d_IsUses(_95921_refS.ptr(), (*(_95349_s)))))) {
					_95921_refS.get()._field_Uses = jule::alloc_for_append(_95921_refS.get()._field_Uses,1);_95921_refS.get()._field_Uses.__push((*(_95349_s)));;
				};
			}
		}
		_match_end_1e8ec9561:;
	};
}



inline jule::Ptr<_1e47903e2_StructIns> _1e55610c4_buildStructInstance(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e4773ddc_IdentTypeDecl>* _96643_decl, jule::Ptr<_1e4790018_Struct>* _96670_s) {
	jule::Ptr<_1e555b71d_referencer> _96817_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>> _97017_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1e8ecc18a:;
				{
					jule::Ptr<_1e548c4a6_scopeChecker> _97725_sc = (*(_self_))._field_lookup.cast_ptr<_1e548c4a6_scopeChecker>(0);;
					jule::Ptr<_1e548c4a6_scopeChecker> _97825_hard = _1e5490861_getHardRoot(_97725_sc);;
					if (((_97825_hard.get()._field_owner.get()._field_Owner == nullptr) || (_97825_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != (*(_96670_s))))) {
						goto _match_end_1e8ecc135;
					};
					jule::I64 _98221_n = (_97825_hard.get()._field_owner.get()._field_Generics.len() + _97825_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=_97825_hard.get()._field_table.get()._field_TypeAliases.slice(0LL, _98221_n);
				}
			}
			_match_end_1e8ecc135:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1e5569c04_Lookup> _99217_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1e47903e2_StructIns> _99617_ins = _1e475058e_instance((*(_96670_s)));;
	_99617_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1e554c555_InsGeneric>>::alloc(0LL, (*(_96643_decl)).get()._field_Generics.len());
	{
		auto expr = &((*(_96643_decl)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8ed14ad:;
		if (it != expr_end) {
			jule::Ptr<_1e4773826_TypeDecl> _99821_g = *it;
			{
				jule::Ptr<_1e554dc82_TypeKind> _99921_kind = _1e556455b_build(_self_, &(_99821_g.get()._field_Kind));;
				if ((_99921_kind == nullptr)) {
					return nullptr;;
				};
				_99617_ins.get()._field_Generics = jule::alloc_for_append(_99617_ins.get()._field_Generics,1);_99617_ins.get()._field_Generics.__push(jule::new_ptr<_1e554c555_InsGeneric>(_1e554c555_InsGeneric{._field_Kind=_99921_kind, }));;
			}
			_iter_next_1e8ed14ad:;
			++it;
			goto _iter_begin_1e8ed14ad;
		}
		_iter_end_1e8ed14ad:;
	};
	(*(_self_))._field_lookup=_99217_lookup;
	(*(_self_))._field_bannedGenerics=_97017_bannedGenerics;
	(*(_self_))._field_referencer=_96817_referencer;
	return _99617_ins;;
}



inline jule::Ptr<_1e47903e2_StructIns> _1e556147b_fromStruct(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e4773ddc_IdentTypeDecl>* _101434_decl, jule::Ptr<_1e4790018_Struct>* _101461_s) {
	if ((!(_1e54b062d_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_101461_s)).get()._field_Public, (*(_101461_s)).get()._field_Token)))) {
		_1e555cd07_pushErr(_self_, (*(_101434_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_101434_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*(_101434_decl)).get()._field_Generics.len() > 0LL)) {
			_1e555cd07_pushErr(_self_, (*(_101434_decl)).get()._field_Token, jule::Str("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1e47903e2_StructIns>(_1e47903e2_StructIns{._field_Decl=(*(_101461_s)), });;
	};
	jule::Bool _103217_ok = ((*(_self_))._field_notPlain || _1e555e5de_checkIllegalCycles(_self_, _101434_decl, jule::Any((*(_101461_s)), &__jule_any_type66)));;
	if ((!(_103217_ok))) {
		return nullptr;;
	};
	_1e5560c0b_appendUsedStructReference(_self_, _101461_s);
	jule::Ptr<_1e47903e2_StructIns> _103817_ins = _1e55610c4_buildStructInstance(_self_, _101434_decl, _101461_s);;
	if ((_103817_ins == nullptr)) {
		return nullptr;;
	};
	_103217_ok=_1e54b12ee_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>(_103817_ins.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_103817_ins.get()._field_Generics.len()), (*(_101434_decl)).get()._field_Token);
	if ((!(_103217_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1e47903e2_StructIns> _104817_existInstance = _1e47512e8_appendInstance((*(_101461_s)).ptr(), &(_103817_ins));;
	if ((_104817_existInstance != nullptr)) {
		if ((!(_1e54b87bd_checkConstraintsStruct((*(_self_))._field_s, &(_103817_ins), &((*(_101434_decl)).get()._field_Token), _104817_existInstance)))) {
			return nullptr;;
		};
		_1e8e96d36_pushReference(_self_, &(_104817_existInstance));
		return _104817_existInstance;;
	};
	if ((!(_1e5560964_checkStructIns(_self_, &(_103817_ins), &((*(_101434_decl)).get()._field_Token))))) {
		return nullptr;;
	};
	_1e8e96d36_pushReference(_self_, &(_103817_ins));
	return _103817_ins;;
}



inline jule::Trait<_1e554d853_Kind> _1e5561789_getDef(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e4773ddc_IdentTypeDecl>* _107230_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8eda929:;
		if (it != expr_end) {
			jule::Ptr<_1e4780b1e_GenericDecl> _107316_g = *it;
			{
				if ((_107316_g.get()._field_Ident == (*(_107230_decl)).get()._field_Ident)) {
					return jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(_107316_g.get()._field_Ident), 6);;
				};
			}
			_iter_next_1e8eda929:;
			++it;
			goto _iter_begin_1e8eda929;
		}
		_iter_end_1e8eda929:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8edaab1:;
		if (it != expr_end) {
			jule::Ptr<_1e554d08e_TypeAlias> _107921_g = *it;
			{
				if ((_107921_g.get()._field_Ident == (*(_107230_decl)).get()._field_Ident)) {
					if (((*(_107230_decl)).get()._field_Generics.len() > 0LL)) {
						_1e555cd07_pushErr(_self_, (*(_107230_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_107230_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					jule::Ptr<_1e47903e2_StructIns> _108525_st = _1e555256b_Struct(_107921_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_108525_st != nullptr)) {
						jule::Bool _108725_ok = _1e555e5de_checkIllegalCycles(_self_, _107230_decl, jule::Any(_108525_st.get()._field_Decl, &__jule_any_type66));;
						if ((!(_108725_ok))) {
							return nullptr;;
						};
					};
					return _107921_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_1e8edaab1:;
			++it;
			goto _iter_begin_1e8edaab1;
		}
		_iter_end_1e8edaab1:;
	};
	if ((!((*(_107230_decl)).get()._field_CppLinked))) {
		jule::Ptr<_1e547501b_Enum> _109721_e = _1e5569c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e55697a3_FindEnum((*(_self_))._field_lookup, (*(_107230_decl)).get()._field_Ident);;
		if ((_109721_e != nullptr)) {
			return jule::Trait<_1e554d853_Kind>(_1e555ed4d_fromEnum(_self_, _107230_decl, &(_109721_e)), 3);;
		};
		jule::Ptr<_1e5476616_TypeEnum> _110221_te = _1e5569c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e5569ab1_FindTypeEnum((*(_self_))._field_lookup, (*(_107230_decl)).get()._field_Ident);;
		if ((_110221_te != nullptr)) {
			return jule::Trait<_1e554d853_Kind>(_1e5560205_fromTypeEnum(_self_, _107230_decl, &(_110221_te)), 4);;
		};
		jule::Ptr<_1e5472dc6_Trait> _110721_t = _1e5569c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e5569495_FindTrait((*(_self_))._field_lookup, (*(_107230_decl)).get()._field_Ident);;
		if ((_110721_t != nullptr)) {
			return jule::Trait<_1e554d853_Kind>(_1e55605ac_fromTrait(_self_, _107230_decl, &(_110721_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1e555cd07_pushErr(_self_, (*(_107230_decl)).get()._field_Token, jule::Str("cpp-linked definitions are not allowed in this scope", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e4790018_Struct> _111617_s = _1e5569c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e5568cd0_FindStruct((*(_self_))._field_lookup, (*(_107230_decl)).get()._field_Ident, (*(_107230_decl)).get()._field_CppLinked);;
	if ((_111617_s != nullptr)) {
		return jule::Trait<_1e554d853_Kind>(_1e556147b_fromStruct(_self_, _107230_decl, &(_111617_s)), 0);;
	};
	jule::Ptr<_1e554d08e_TypeAlias> _112117_ta = _1e5569c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e5568928_FindTypeAlias((*(_self_))._field_lookup, (*(_107230_decl)).get()._field_Ident, (*(_107230_decl)).get()._field_CppLinked);;
	if (((_112117_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_112117_ta=_1e5578e00_findBuiltinTypeAlias((*(_107230_decl)).get()._field_Ident);
	};
	if ((_112117_ta != nullptr)) {
		return _1e555e996_fromTypeAlias(_self_, _107230_decl, &(_112117_ta));;
	};
	_1e555cd07_pushErr(_self_, (*(_107230_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_107230_decl)).get()._field_Ident, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Trait<_1e554d853_Kind> _1e5561a97_buildIdent(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e4773ddc_IdentTypeDecl> _113333_decl) {
	{
		
		if (_1e55675b4_isPrim(_113333_decl.get()._field_Ident)) {
			_case_begin_1e8ee6748:;
			{
				return jule::Trait<_1e554d853_Kind>(_1e555d4bc_buildPrim(_self_, &(_113333_decl)), 6);;
			}
		}
		else {
			_case_begin_1e8ee6050:;
			{
				return _1e5561789_getDef(_self_, &(_113333_decl));;
			}
		}
		_match_end_1e8ee5e84:;
	};
}



inline jule::Trait<_1e554d853_Kind> _1e5561da5_buildSubIdent(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e477453b_SubIdentTypeDecl> _114236_decl) {
	jule::Trait<_1e554d853_Kind> _114317_ident = _1e5561a97_buildIdent(_self_, _114236_decl.get()._field_Idents[0LL]);;
	if ((_114317_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _114317_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1e8ee801e:;
			{
				goto _match_end_1e8ee7e31;
			}
		}
		else {
			_case_begin_1e8ee7cee:;
			{
				_1e555cd07_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e8ee7e31:;
	};
	jule::Ptr<_1e5476616_TypeEnum> _115417_t = _114317_ident.cast_ptr<_1e5476616_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1e4773ddc_IdentTypeDecl>> _115517_idents = _114236_decl.get()._field_Idents.slice(1LL);;
	{
		auto expr = &(_115517_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8ee93c7:;
		if (it != expr_end) {
			jule::I64 _115613_i = it - expr->begin();
			jule::Ptr<_1e4773ddc_IdentTypeDecl> _115616_id = *it;
			{
				jule::Ptr<_1e5476050_TypeEnumItem> _115721_item = _1e5477150_FindItem(_115417_t.ptr(), _115616_id.get()._field_Ident);;
				if ((_115721_item == nullptr)) {
					_1e555cd07_pushErr(_self_, _115616_id.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_115417_t.get()._field_Ident, &__jule_any_type5),jule::Any(_115616_id.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((_115517_idents.len() - _115613_i) == 1LL)) {
					_1e555d9b7_pushReferenceByKind(_self_, &(_115721_item.get()._field_Kind.get()._field_Kind));
					return jule::Trait<_1e554d853_Kind>(_115721_item.get()._field_Kind.get()._field_Kind, 5);;
				};
				_115417_t=_1e5551aba_TypeEnum(_115721_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_115417_t == nullptr)) {
					_1e555cd07_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1e8ee93c7:;
			++it;
			_115613_i++;
			goto _iter_begin_1e8ee93c7;
		}
		_iter_end_1e8ee93c7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5557263_Sptr> _1e55621b3_buildSptrFromType(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e554dc82_TypeKind>* _117641_elem) {
	{
		
		if (((*(_117641_elem)) == nullptr)) {
			_case_begin_1e8eed156:;
			{
				return nullptr;;
			}
		}
		else if ((_1e555256b_Struct((*(_117641_elem)).ptr()) != nullptr)) {
			_case_begin_1e8eed1cd:;
			{
				jule::Ptr<_1e47903e2_StructIns> _118217_s = _1e555256b_Struct((*(_117641_elem)).ptr());;
				if (((_118217_s.get()._field_Decl != nullptr) && _118217_s.get()._field_Decl.get()._field_CppLinked)) {
					_1e555cd07_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("cpp-linked structures cannot supports reference counting", 56), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1e5551d2e_Arr((*(_117641_elem)).ptr()) != nullptr) && _1e5551d2e_Arr((*(_117641_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1e8eed255:;
			{
				_1e555cd07_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e8eec7c6:;
	};
	return jule::new_ptr<_1e5557263_Sptr>(_1e5557263_Sptr{._field_Elem=(*(_117641_elem))});;
}



inline jule::Ptr<_1e5557263_Sptr> _1e55624c1_buildSptr(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e4774bce_SptrTypeDecl> _119632_decl) {
	jule::Bool _119713_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_119713_notPlain;
	});;
	jule::Ptr<_1e554dc82_TypeKind> _120117_elem = _1e5564869_checkDecl(_self_, &(_119632_decl.get()._field_Elem));;
	return _1e55621b3_buildSptrFromType(_self_, &(_120117_elem));;
}



inline jule::Ptr<_1e555a7c7_Ptr> _1e55627ce_buildPtrFromType(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e554dc82_TypeKind>* _120540_elem) {
	{
		
		if (((*(_120540_elem)) == nullptr)) {
			_case_begin_1e9002e19:;
			{
				return nullptr;;
			}
		}
		else if (((_1e5551d2e_Arr((*(_120540_elem)).ptr()) != nullptr) && _1e5551d2e_Arr((*(_120540_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1e9002e91:;
			{
				_1e555cd07_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1e555a7c7_Ptr>();;
			}
		}
		_match_end_1e9002d09:;
	};
	return jule::new_ptr<_1e555a7c7_Ptr>(_1e555a7c7_Ptr{._field_Elem=(*(_120540_elem))});;
}



inline jule::Ptr<_1e555a7c7_Ptr> _1e5562adc_buildPtr(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e47756a2_PtrTypeDecl> _122031_decl) {
	jule::Bool _122113_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_122113_notPlain;
	});;
	jule::Ptr<_1e554dc82_TypeKind> _122517_elem = nullptr;;
	if ((!(_1e4775a04_IsUnsafe(_122031_decl.ptr())))) {
		_122517_elem=_1e5564869_checkDecl(_self_, &(_122031_decl.get()._field_Elem));
		return _1e55627ce_buildPtrFromType(_self_, &(_122517_elem));;
	};
	return jule::new_ptr<_1e555a7c7_Ptr>(_1e555a7c7_Ptr{._field_Elem=_122517_elem});;
}



inline jule::Ptr<_1e5557bc0_Slc> _1e5562dea_buildSlc(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e47750ca_SlcTypeDecl> _123731_decl) {
	jule::Bool _123813_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_123813_notPlain;
	});;
	jule::Ptr<_1e554dc82_TypeKind> _124217_elem = _1e5564869_checkDecl(_self_, &(_123731_decl.get()._field_Elem));;
	{
		
		if ((_124217_elem == nullptr)) {
			_case_begin_1e9007da8:;
			{
				return nullptr;;
			}
		}
		else if (((_1e5551d2e_Arr(_124217_elem.ptr()) != nullptr) && _1e5551d2e_Arr(_124217_elem.ptr()).get()._field_Auto)) {
			_case_begin_1e9007e30:;
			{
				_1e555cd07_pushErr(_self_, _123731_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e9007ced:;
	};
	return jule::new_ptr<_1e5557bc0_Slc>(_1e5557bc0_Slc{._field_Elem=_124217_elem});;
}



inline jule::Ptr<_1e5559d6a_Arr> _1e5563208_buildArr(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e4775d34_ArrTypeDecl> _125831_decl) {
	jule::Bool _125913_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_125913_notPlain;
	});;
	jule::I64 _126317_n = 0LL;;
	if ((!(_1e477620d_AutoSized(_125831_decl.ptr())))) {
		jule::Ptr<_1e5522d00_Data> _126621_size = _1e5540290_evalExpr(_1e54b6843_eval((*(_self_))._field_s, (*(_self_))._field_lookup), _125831_decl.get()._field_Size);;
		if ((_126621_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1e55236b3_IsConst(_126621_size.ptr())))) {
			_1e555cd07_pushErr(_self_, _125831_decl.get()._field_Size.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1e5551119_Prim(_126621_size.get()._field_Kind.ptr()) == nullptr) || (!(_1e5445dee_IsInt(_1e5551119_Prim(_126621_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1e555cd07_pushErr(_self_, _125831_decl.get()._field_Size.get()._field_Token, jule::Str("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_126317_n=static_cast<jule::I64>(static_cast<jule::I64>(_1e5448ece_AsI64(_126621_size.get()._field_Constant.ptr())));
		if ((_126317_n < 0LL)) {
			_1e555cd07_pushErr(_self_, _125831_decl.get()._field_Elem.get()._field_Token, jule::Str("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1e4d17bab_BitSize != 64LL) && (static_cast<jule::F64>(_126317_n) > _1e54420c6_Max(jule::Str("int", 3))))) {
			_1e555cd07_pushErr(_self_, _125831_decl.get()._field_Size.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1e554dc82_TypeKind> _128917_elem = _1e5564869_checkDecl(_self_, &(_125831_decl.get()._field_Elem));;
	{
		
		if ((_128917_elem == nullptr)) {
			_case_begin_1e9011455:;
			{
				return nullptr;;
			}
		}
		else if (((_1e5551d2e_Arr(_128917_elem.ptr()) != nullptr) && _1e5551d2e_Arr(_128917_elem.ptr()).get()._field_Auto)) {
			_case_begin_1e90114bb:;
			{
				_1e555cd07_pushErr(_self_, _125831_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e9011257:;
	};
	return jule::new_ptr<_1e5559d6a_Arr>(_1e5559d6a_Arr{._field_Auto=_1e477620d_AutoSized(_125831_decl.ptr()), ._field_N=_126317_n, ._field_Elem=_128917_elem});;
}



inline jule::Ptr<_1e5559276_Map> _1e5563516_buildMap(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e4776582_MapTypeDecl> _130731_decl) {
	jule::Bool _130813_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_130813_notPlain;
	});;
	jule::Ptr<_1e554dc82_TypeKind> _131217_key = _1e5564869_checkDecl(_self_, &(_130731_decl.get()._field_Key));;
	if ((_131217_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e554dc82_TypeKind> _131717_val = _1e5564869_checkDecl(_self_, &(_130731_decl.get()._field_Val));;
	if ((_131717_val == nullptr)) {
		return nullptr;;
	};
	if ((_1e5551856_Enum(_131717_val.ptr()) != nullptr)) {
		_1e555cd07_pushErr(_self_, _130731_decl.get()._field_Val.get()._field_Token, jule::Str("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1e5559276_Map>(_1e5559276_Map{._field_Key=_131217_key, ._field_Val=_131717_val});;
}



inline jule::Ptr<_1e555874d_Tuple> _1e5563824_buildTuple(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e47753b6_TupleTypeDecl> _133133_decl) {
	jule::Slice<jule::Ptr<_1e554dc82_TypeKind>> _133217_types = jule::Slice<jule::Ptr<_1e554dc82_TypeKind>>::alloc(0LL, _133133_decl.get()._field_Types.len());;
	{
		auto expr = &(_133133_decl.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9016dea:;
		if (it != expr_end) {
			jule::Ptr<_1e4773826_TypeDecl> _133321_t = *it;
			{
				jule::Ptr<_1e554dc82_TypeKind> _133421_kind = _1e5564869_checkDecl(_self_, &(_133321_t));;
				if ((_133421_kind == nullptr)) {
					return nullptr;;
				};
				_133217_types = jule::alloc_for_append(_133217_types,1);_133217_types.__push(_133421_kind);;
			}
			_iter_next_1e9016dea:;
			++it;
			goto _iter_begin_1e9016dea;
		}
		_iter_end_1e9016dea:;
	};
	return jule::new_ptr<_1e555874d_Tuple>(_1e555874d_Tuple{._field_Types=_133217_types});;
}



inline jule::Bool _1e5563b32_checkFnTypes(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e5463b75_FnIns>* _134436_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_134436_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e90187ae:;
		if (it != expr_end) {
			jule::Ptr<_1e5462ca6_ParamIns> _134521_p = *it;
			{
				_134521_p.get()._field_Kind=_1e556455b_build(_self_, &(_134521_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind));
				__jule_func_result=(_134521_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1e54b8dea_checkFnParamKind((*(_self_))._field_s, &(_134521_p));
			}
			_iter_next_1e90187ae:;
			++it;
			goto _iter_begin_1e90187ae;
		}
		_iter_end_1e90187ae:;
	};
	if ((!(_1e5461436_IsVoid((*(_134436_f)).get()._field_Decl.ptr())))) {
		(*(_134436_f)).get()._field_Result=_1e556455b_build(_self_, &((*(_134436_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind));
		__jule_func_result = ((*(_134436_f)).get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1e5463b75_FnIns> _1e5563e40_buildFn(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e47852a5_FnDecl> _136230_decl) {
	if ((_136230_decl.get()._field_Generics.len() > 0LL)) {
		_1e555cd07_pushErr(_self_, _136230_decl.get()._field_Token, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5460ec4_Fn> _136817_f = _1e5469d02_buildFn(_136230_decl);;
	jule::I64 _137013_n = (*(_self_))._field_s.get()._field_errors.len();;
	_1e54c0d14_checkFnDecl((*(_self_))._field_s, &(_136817_f));
	if ((_137013_n != (*(_self_))._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1e5463b75_FnIns> _137617_ins = _1e54623b0_instanceForce(_136817_f);;
	_137617_ins.get()._field_Anon=true;
	jule::Bool _137913_ok = _1e5563b32_checkFnTypes(_self_, &(_137617_ins));;
	if ((!(_137913_ok))) {
		return nullptr;;
	};
	return _137617_ins;;
}



inline jule::Trait<_1e554d853_Kind> _1e556424d_buildByNamespace(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e47748e3_NamespaceTypeDecl> _138739_decl) {
	jule::Str _138813_path = _1e5566bbd_buildLinkPathByTokens(&(_138739_decl.get()._field_Idents));;
	jule::Ptr<_1e54a4149_ImportInfo> _138917_imp = _1e5569c04_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1e55681b9_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1e54a4149_ImportInfo>)>([=](jule::Ptr<_1e54a4149_ImportInfo> _138952_imp) mutable -> jule::Bool {
		if (((_138739_decl.get()._field_Idents.len() == 1LL) && (_138952_imp.get()._field_Alias == _138813_path))) {
			return true;;
		};
		return ((_138952_imp.get()._field_LinkPath == _138813_path) && _1e54a6ca6_isAccessibleViaSelection(_138952_imp.ptr()));;
	}));;
	if (((_138917_imp == nullptr) || (!(_1e54a6712_isLookupable(_138917_imp.ptr(), jule::Str("self", 4)))))) {
		_1e555cd07_pushErr(_self_, _138739_decl.get()._field_Idents[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_138813_path, &__jule_any_type5)}));
		return nullptr;;
	};
	_1e555d1ae_disallowBuiltin(_self_);
	jule::Trait<_1e5569c04_Lookup> _140217_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1e5569c04_Lookup>(_138917_imp, 1);
	jule::Ptr<_1e554dc82_TypeKind> _140417_kind = _1e5564869_checkDecl(_self_, &(_138739_decl.get()._field_Kind));;
	(*(_self_))._field_lookup=_140217_lookup;
	_1e555ced3_allowBuiltin(_self_);
	return jule::Trait<_1e554d853_Kind>(_140417_kind, 5);;
}



inline jule::Ptr<_1e554dc82_TypeKind> _1e556455b_build(_1e555c5ed_typeChecker* _self_, jule::Any* _141029_declKind) {
	jule::Trait<_1e554d853_Kind> _141117_kind = nullptr;;
	{
		auto &_match_expr{ (*(_141029_declKind)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1e90252c1:;
			{
				jule::Trait<_1e554d853_Kind> _141421_t = _1e5561a97_buildIdent(_self_, (*(_141029_declKind)).cast_ptr<_1e4773ddc_IdentTypeDecl>(&__jule_any_type19));;
				if ((_141421_t != nullptr)) {
					_141117_kind=_141421_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1e902606e:;
			{
				jule::Trait<_1e554d853_Kind> _141921_t = _1e5561da5_buildSubIdent(_self_, (*(_141029_declKind)).cast_ptr<_1e477453b_SubIdentTypeDecl>(&__jule_any_type93));;
				if ((_141921_t != nullptr)) {
					_141117_kind=_141921_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1e90260d5:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e5557263_Sptr> _142521_t = _1e55624c1_buildSptr(_self_, (*(_141029_declKind)).cast_ptr<_1e4774bce_SptrTypeDecl>(&__jule_any_type79));;
				if ((_142521_t != nullptr)) {
					_141117_kind=jule::Trait<_1e554d853_Kind>(_142521_t, 7);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1e9025777:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e555a7c7_Ptr> _143121_t = _1e5562adc_buildPtr(_self_, (*(_141029_declKind)).cast_ptr<_1e47756a2_PtrTypeDecl>(&__jule_any_type78));;
				if ((_143121_t != nullptr)) {
					_141117_kind=jule::Trait<_1e554d853_Kind>(_143121_t, 12);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1e90257dd:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e5557bc0_Slc> _143721_t = _1e5562dea_buildSlc(_self_, (*(_141029_declKind)).cast_ptr<_1e47750ca_SlcTypeDecl>(&__jule_any_type77));;
				if ((_143721_t != nullptr)) {
					_141117_kind=jule::Trait<_1e554d853_Kind>(_143721_t, 8);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1e9025854:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e5559d6a_Arr> _144321_t = _1e5563208_buildArr(_self_, (*(_141029_declKind)).cast_ptr<_1e4775d34_ArrTypeDecl>(&__jule_any_type76));;
				if ((_144321_t != nullptr)) {
					_141117_kind=jule::Trait<_1e554d853_Kind>(_144321_t, 11);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1e90258ba:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e5559276_Map> _144921_t = _1e5563516_buildMap(_self_, (*(_141029_declKind)).cast_ptr<_1e4776582_MapTypeDecl>(&__jule_any_type80));;
				if ((_144921_t != nullptr)) {
					_141117_kind=jule::Trait<_1e554d853_Kind>(_144921_t, 10);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1e90262a0:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e555874d_Tuple> _145521_t = _1e5563824_buildTuple(_self_, (*(_141029_declKind)).cast_ptr<_1e47753b6_TupleTypeDecl>(&__jule_any_type81));;
				if ((_145521_t != nullptr)) {
					_141117_kind=jule::Trait<_1e554d853_Kind>(_145521_t, 9);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1e9026316:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e5463b75_FnIns> _146121_t = _1e5563e40_buildFn(_self_, (*(_141029_declKind)).cast_ptr<_1e47852a5_FnDecl>(&__jule_any_type14));;
				if ((_146121_t != nullptr)) {
					_141117_kind=jule::Trait<_1e554d853_Kind>(_146121_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1e902637c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1e554d853_Kind> _146721_t = _1e556424d_buildByNamespace(_self_, (*(_141029_declKind)).cast_ptr<_1e47748e3_NamespaceTypeDecl>(&__jule_any_type97));;
				if ((_146721_t != nullptr)) {
					_141117_kind=_146721_t;
				};
			}
		}
		else {
			_case_begin_1e9025623:;
			{
				_1e555cd07_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e9025535:;
	};
	if ((_141117_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _141117_kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1e9031b29:;
			{
				return _141117_kind.cast_ptr<_1e554dc82_TypeKind>(5);;
			}
		}
		else {
			_case_begin_1e903250e:;
			{
				jule::Ptr<_1e554dc82_TypeKind> _148221_tk = jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=_141117_kind});;
				{
					auto &_match_expr{ _141117_kind };
					
					if (_match_expr.type_is(true, 6)) {
						_case_begin_1e9032e49:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									(*((*(_self_))._field_ignoredGenerics))=jule::append((*((*(_self_))._field_ignoredGenerics)),jule::Slice<jule::Ptr<_1e554dc82_TypeKind>>::make({_148221_tk}));
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1e9032ec1:;
						{
							jule::Ptr<_1e47903e2_StructIns> _148921_s = _141117_kind.cast_ptr<_1e47903e2_StructIns>(0);;
							if (((_148921_s.get()._field_Decl != nullptr) && _148921_s.get()._field_Decl.get()._field_CppLinked)) {
								_148221_tk.get()._field_CppIdent=_148921_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_1e9032d39:;
				};
				return _148221_tk;;
			}
		}
		_match_end_1e90324a9:;
	};
}



inline jule::Ptr<_1e554dc82_TypeKind> _1e5564869_checkDecl(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e4773826_TypeDecl>* _149833_decl) {
	jule::Ptr<_20d155596_Token> _150017_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*(_149833_decl)).get()._field_Token;
	jule::Ptr<_1e554dc82_TypeKind> _150317_kind = _1e556455b_build(_self_, &((*(_149833_decl)).get()._field_Kind));;
	(*(_self_))._field_errorToken=_150017_errorToken;
	return _150317_kind;;
}



inline void _1e5564ade_check(_1e555c5ed_typeChecker* _self_, jule::Ptr<_1e5553160_TypeSymbol>* _150929_t) {
	if (((*(_150929_t)).get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1e554dc82_TypeKind> _151317_kind = _1e5564869_checkDecl(_self_, &((*(_150929_t)).get()._field_Decl));;
	if ((_151317_kind == nullptr)) {
		_1e55536e3_removeKind((*(_150929_t)).ptr());
		return;;
	};
	(*(_150929_t)).get()._field_Kind=_151317_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1e555c5ed_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1e556524e_prim(jule::Str* _152521_ident, jule::Ptr<_1e55539ce_Prim> _152533_t) {
	return (_152533_t.get()._field_Kind == (*(_152521_ident)));;
}



inline jule::Bool static__1e5565590_exist(jule::Str* _152922_ident, jule::Ptr<_1e554dc82_TypeKind>* _152939_k) {
	{
		
		if ((_1e5551119_Prim((*(_152939_k)).ptr()) != nullptr)) {
			_case_begin_1e9038c41:;
			{
				return static__1e556524e_prim(_152922_ident, _1e5551119_Prim((*(_152939_k)).ptr()));;
			}
		}
		else if ((_1e555137d_Sptr((*(_152939_k)).ptr()) != nullptr)) {
			_case_begin_1e9038ca7:;
			{
				jule::Ptr<_1e5557263_Sptr> _153421_sptr = _1e555137d_Sptr((*(_152939_k)).ptr());;
				return static__1e5565590_exist(_152922_ident, &(_153421_sptr.get()._field_Elem));;
			}
		}
		else if ((_1e55515e2_Ptr((*(_152939_k)).ptr()) != nullptr)) {
			_case_begin_1e9038d1d:;
			{
				jule::Ptr<_1e555a7c7_Ptr> _153721_ptr = _1e55515e2_Ptr((*(_152939_k)).ptr());;
				return static__1e5565590_exist(_152922_ident, &(_153721_ptr.get()._field_Elem));;
			}
		}
		else if ((_1e5552093_Slc((*(_152939_k)).ptr()) != nullptr)) {
			_case_begin_1e9038d84:;
			{
				jule::Ptr<_1e5557bc0_Slc> _154021_slc = _1e5552093_Slc((*(_152939_k)).ptr());;
				return static__1e5565590_exist(_152922_ident, &(_154021_slc.get()._field_Elem));;
			}
		}
		else if ((_1e5551d2e_Arr((*(_152939_k)).ptr()) != nullptr)) {
			_case_begin_1e903911a:;
			{
				jule::Ptr<_1e5559d6a_Arr> _154321_arr = _1e5551d2e_Arr((*(_152939_k)).ptr());;
				return static__1e5565590_exist(_152922_ident, &(_154321_arr.get()._field_Elem));;
			}
		}
		else if ((_1e5552a44_Map((*(_152939_k)).ptr()) != nullptr)) {
			_case_begin_1e9039181:;
			{
				jule::Ptr<_1e5559276_Map> _154621_m = _1e5552a44_Map((*(_152939_k)).ptr());;
				return (static__1e5565590_exist(_152922_ident, &(_154621_m.get()._field_Key)) || static__1e5565590_exist(_152922_ident, &(_154621_m.get()._field_Val)));;
			}
		}
		else if ((_1e555256b_Struct((*(_152939_k)).ptr()) != nullptr)) {
			_case_begin_1e90391e7:;
			{
				jule::Ptr<_1e47903e2_StructIns> _155021_s = _1e555256b_Struct((*(_152939_k)).ptr());;
				{
					auto expr = &(_155021_s.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e90401ed:;
					if (it != expr_end) {
						jule::Ptr<_1e554c555_InsGeneric> _155125_g = *it;
						{
							if (static__1e5565590_exist(_152922_ident, &(_155125_g.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1e90401ed:;
						++it;
						goto _iter_begin_1e90401ed;
					}
					_iter_end_1e90401ed:;
				};
				return false;;
			}
		}
		else if ((_1e5552307_Fn((*(_152939_k)).ptr()) != nullptr)) {
			_case_begin_1e903925d:;
			{
				jule::Ptr<_1e5463b75_FnIns> _155821_f = _1e5552307_Fn((*(_152939_k)).ptr());;
				{
					auto expr = &(_155821_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e9041a29:;
					if (it != expr_end) {
						jule::Ptr<_1e5462ca6_ParamIns> _155925_p = *it;
						{
							if (_1e545ecb4_IsSelf(_155925_p.get()._field_Decl.ptr())) {
								goto _iter_next_1e9041a29;
							};
							if (static__1e5565590_exist(_152922_ident, &(_155925_p.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1e9041a29:;
						++it;
						goto _iter_begin_1e9041a29;
					}
					_iter_end_1e9041a29:;
				};
				if ((_155821_f.get()._field_Result != nullptr)) {
					return static__1e5565590_exist(_152922_ident, &(_155821_f.get()._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1e5552ca8_Tup((*(_152939_k)).ptr()) != nullptr)) {
			_case_begin_1e90394b1:;
			{
				jule::Ptr<_1e555874d_Tuple> _157221_tup = _1e5552ca8_Tup((*(_152939_k)).ptr());;
				{
					auto expr = &(_157221_tup.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e9043b5d:;
					if (it != expr_end) {
						jule::Ptr<_1e554dc82_TypeKind> _157325_t = *it;
						{
							if (static__1e5565590_exist(_152922_ident, &(_157325_t))) {
								return true;;
							};
						}
						_iter_next_1e9043b5d:;
						++it;
						goto _iter_begin_1e9043b5d;
					}
					_iter_end_1e9043b5d:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1e9038bca:;
			{
				return false;;
			}
		}
		_match_end_1e9038b0e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e5564d0e_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e68db838_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e69378b7_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1e6938874_stop(_1e69381e2_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1e6938ad8_stopped(_1e69381e2_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1e6938d4c_finished(_1e69381e2_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1e69390b1_isLastSt(_1e69381e2_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1e69393d0_pushErr(_1e69381e2_scopeParser* _self_, jule::Ptr<_20d155596_Token> _19126_token, jule::Str _19141_fmt) {
	_1e6955297_pushErr((*(_self_))._field_p.ptr(), _19126_token, _19141_fmt, jule::Slice<jule::Any>());
}



inline void _1e69396ee_pushSuggestion(_1e69381e2_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_1e69555b6_pushSuggestion((*(_self_))._field_p.ptr(), _19633_fmt, _19646_args);
}



inline void _1e6939974_insertAsNext(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _20036_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1e69378b7_stmt>(_1e69378b7_stmt{._field_tokens=(*(_20036_tokens)), });
}



inline jule::Ptr<_1e69378b7_stmt> _1e6939bd8_next(_1e69381e2_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1e47837ae_ScopeTree> _1e693a090_buildScope(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _21034_tokens, jule::Ptr<_20d155596_Token> _21056_end) {
	jule::Ptr<_1e47837ae_ScopeTree> _21117_s = _1e69367ea_newScope();;
	_21117_s.get()._field_Parent=(*(_self_))._field_s;
	_21117_s.get()._field_End=_21056_end;
	_1e69381e2_scopeParser _21417_ssp = _1e69381e2_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1e6943c7a_build(&_21417_ssp, _21034_tokens, &(_21117_s));
	return _21117_s;;
}



inline jule::Ptr<_1e4786284_VarDecl> _1e693a39d_buildVarSt(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _22134_tokens) {
	jule::Ptr<_1e4786284_VarDecl> _22217_v = _1e6957cd3_buildVar((*(_self_))._field_p, (*(_22134_tokens)));;
	_22217_v.get()._field_Scope=(*(_self_))._field_s;
	return _22217_v;;
}



inline jule::Ptr<_1e478663b_RetSt> _1e693a6ab_buildRetSt(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _22733_tokens) {
	jule::Ptr<_1e478663b_RetSt> _22817_st = jule::new_ptr<_1e478663b_RetSt>(_1e478663b_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_1e69558c4_buildExpr((*(_self_))._field_p, &(_22733_tokens));
	};
	return _22817_st;;
}



inline jule::Ptr<_1e4786c9b_Iter> _1e693a9b9_buildWhileNextIter(_1e69381e2_scopeParser* _self_, jule::Ptr<_1e69378b7_stmt>* _23842_s) {
	jule::Ptr<_1e4786c9b_Iter> _23917_it = jule::new_ptr<_1e4786c9b_Iter>(_1e4786c9b_Iter{._field_Token=(*(_23842_s)).get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_20d155596_Token>> _24217_tokens = (*(_23842_s)).get()._field_tokens.slice(1LL);;
	jule::Ptr<_1e4787571_WhileKind> _24317_kind = jule::new_ptr<_1e4787571_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_1e69558c4_buildExpr((*(_self_))._field_p, &(_24217_tokens));
	};
	if (_1e69390b1_isLastSt(_self_)) {
		_1e69393d0_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24217_tokens=_1e6939bd8_next(_self_).get()._field_tokens;
	jule::Slice<jule::Ptr<_20d155596_Token>> _25517_stTokens = _1e694e9cd_getBlockExpr(&(_24217_tokens));;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_1e69378b7_stmt> _25721_stmt = jule::new_ptr<_1e69378b7_stmt>(_1e69378b7_stmt{._field_tokens=_25517_stTokens, ._field_terminated=(*(_23842_s)).get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_1e694395b_buildSt(_self_, &(_25721_stmt));
	};
	jule::I64 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_20d155596_Token>> _26617_blockTokens = _1e6952a9c_range(&(_26517_i), jule::Str("{", 1), jule::Str("}", 1), &(_24217_tokens));;
	if ((_26617_blockTokens == nullptr)) {
		_1e6938874_stop(_self_);
		_1e69393d0_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1e69396ee_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_1e69393d0_pushErr(_self_, _24217_tokens[_26517_i], jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_1e693a090_buildScope(_self_, &(_26617_blockTokens), _24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=jule::Any(_24317_kind, &__jule_any_type37);
	return _23917_it;;
}



inline jule::Ptr<_1e4787571_WhileKind> _1e693acc7_buildWhileIterKind(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _28342_tokens) {
	return jule::new_ptr<_1e4787571_WhileKind>(_1e4787571_WhileKind{._field_Expr=_1e69558c4_buildExpr((*(_self_))._field_p, _28342_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _1e693b0d5_getRangeKindKeysTokens(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _29018_vars;;
	jule::Slice<_24305e4ae_Log> _29024_errs;;
	({
		__jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e6953619_parts(_28946_toks, static_cast<jule::U64>(8LLU), true);
		_29018_vars = __jule_assign_result.__jule_result_arg0;
		_29024_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_29024_errs);
	return _29018_vars;;
}



inline jule::Ptr<_1e4786284_VarDecl> _1e693b3e3_buildRangeKindKey(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _29541_tokens) {
	if (((*(_29541_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1e4786284_VarDecl> _29917_key = jule::new_ptr<_1e4786284_VarDecl>(_1e4786284_VarDecl{._field_Token=(*(_29541_tokens))[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_29917_key.get()._field_Mutable=true;
		if (((*(_29541_tokens)).len() == 1LL)) {
			_1e69393d0_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=(*(_29541_tokens))[1LL];
	} else if (((*(_29541_tokens)).len() > 1LL)) {
		_1e69393d0_pushErr(_self_, (*(_29541_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e69393d0_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		_1e69396ee_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;;
}



inline jule::Slice<jule::Ptr<_1e4786284_VarDecl>> _1e693b701_buildRangeKindKeys(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>>* _32042_parts) {
	jule::Slice<jule::Ptr<_1e4786284_VarDecl>> _32117_keys = nullptr;;
	{
		auto expr = _32042_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e91a47c4:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d155596_Token>> _32221_tokens = *it;
			{
				_32117_keys = jule::alloc_for_append(_32117_keys,1);_32117_keys.__push(_1e693b3e3_buildRangeKindKey(_self_, &(_32221_tokens)));;
			}
			_iter_next_1e91a47c4:;
			++it;
			goto _iter_begin_1e91a47c4;
		}
		_iter_end_1e91a47c4:;
	};
	return _32117_keys;;
}



inline void _1e693ba42_setupRangeKindKeysPlain(_1e69381e2_scopeParser* _self_, jule::Ptr<_1e4787e12_RangeKind>* _32847_rng, jule::Slice<jule::Ptr<_20d155596_Token>>* _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _32917_keyTokens = _1e693b0d5_getRangeKindKeysTokens(_self_, _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_1e69393d0_pushErr(_self_, (*(_32847_rng)).get()._field_InToken, jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1e4786284_VarDecl>> _33617_keys = _1e693b701_buildRangeKindKeys(_self_, &(_32917_keyTokens));;
	(*(_32847_rng)).get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		(*(_32847_rng)).get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _1e693bd94_setupRangeKindKeysExplicit(_1e69381e2_scopeParser* _self_, jule::Ptr<_1e4787e12_RangeKind>* _34350_rng, jule::Slice<jule::Ptr<_20d155596_Token>>* _34372_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_20d155596_Token>> _34517_rang = _1e6952a9c_range(&(_34417_i), jule::Str("(", 1), jule::Str(")", 1), _34372_tokens);;
	if ((_34417_i < (*(_34372_tokens)).len())) {
		_1e69393d0_pushErr(_self_, (*(_34350_rng)).get()._field_InToken, jule::Str("invalid syntax", 14));
	};
	_1e693ba42_setupRangeKindKeysPlain(_self_, _34350_rng, &(_34517_rang));
}



inline void _1e693c1c4_setupRangeKindKeys(_1e69381e2_scopeParser* _self_, jule::Ptr<_1e4787e12_RangeKind>* _35242_rng, jule::Slice<jule::Ptr<_20d155596_Token>>* _35264_tokens) {
	if (((*(_35264_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if (((*(_35264_tokens))[0LL].get()._field_Kind != jule::Str("(", 1))) {
			_1e69393d0_pushErr(_self_, (*(_35264_tokens))[0LL], jule::Str("invalid syntax", 14));
			return;;
		};
		_1e693bd94_setupRangeKindKeysExplicit(_self_, _35242_rng, _35264_tokens);
		return;;
	};
	_1e693ba42_setupRangeKindKeysPlain(_self_, _35242_rng, _35264_tokens);
}



inline jule::Ptr<_1e4787e12_RangeKind> _1e693c625_buildRangeIterKind(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _36442_var_tokens, jule::Slice<jule::Ptr<_20d155596_Token>>* _36514_exprTokens, jule::Ptr<_20d155596_Token>* _36541_inToken) {
	jule::Ptr<_1e4787e12_RangeKind> _36617_rng = jule::new_ptr<_1e4787e12_RangeKind>(_1e4787e12_RangeKind{._field_InToken=(*(_36541_inToken)), });;
	if (((*(_36514_exprTokens)).len() == 0LL)) {
		_1e69393d0_pushErr(_self_, _36617_rng.get()._field_InToken, jule::Str("expression missing", 18));
		return _36617_rng;;
	};
	_36617_rng.get()._field_Expr=_1e69558c4_buildExpr((*(_self_))._field_p, _36514_exprTokens);
	if (((*(_36442_var_tokens)).len() > 0LL)) {
		_1e693c1c4_setupRangeKindKeys(_self_, &(_36617_rng), _36442_var_tokens);
	};
	return _36617_rng;;
}



inline jule::Any _1e693c9cc_buildCommonIterKind(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _38043_tokens, jule::Ptr<_20d155596_Token>* _38062_err_tok) {
	jule::I64 _38117_braceN = 0LL;;
	{
		auto expr = _38043_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e91aee61:;
		if (it != expr_end) {
			jule::I64 _38214_i = it - expr->begin();
			jule::Ptr<_20d155596_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e91b154a:;
							{
								(_38117_braceN)++;
								goto _iter_next_1e91aee61;
							}
						}
						else {
							_case_begin_1e91b114e:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_1e91b0e40:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_1e91aee61;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1e91b15e4:;
						{
							jule::Slice<jule::Ptr<_20d155596_Token>> _39925_declTokens = (*(_38043_tokens)).slice(0LL, _38214_i);;
							jule::Slice<jule::Ptr<_20d155596_Token>> _40025_exprTokens = (*(_38043_tokens)).slice((_38214_i + 1LL));;
							return jule::Any(_1e693c625_buildRangeIterKind(_self_, &(_39925_declTokens), &(_40025_exprTokens), &(_38221_tok)), &__jule_any_type39);;
						}
					}
					_match_end_1e91b1da8:;
				};
			}
			_iter_next_1e91aee61:;
			++it;
			_38214_i++;
			goto _iter_begin_1e91aee61;
		}
		_iter_end_1e91aee61:;
	};
	return jule::Any(_1e693acc7_buildWhileIterKind(_self_, _38043_tokens), &__jule_any_type37);;
}



inline jule::Ptr<_1e4786c9b_Iter> _1e693ccda_buildCommonIter(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _40738_tokens) {
	jule::Ptr<_1e4786c9b_Iter> _40817_it = jule::new_ptr<_1e4786c9b_Iter>(_1e4786c9b_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_1e6938874_stop(_self_);
		_1e69393d0_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1e69396ee_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20d155596_Token>> _41817_exprTokens = _1e694e9cd_getBlockExpr(&(_40738_tokens));;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_1e693c9cc_buildCommonIterKind(_self_, &(_41817_exprTokens), &(_40817_it.get()._field_Token));
	};
	jule::I64 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_20d155596_Token>> _42317_scopeTokens = _1e6952a9c_range(&(_42217_i), jule::Str("{", 1), jule::Str("}", 1), &(_40738_tokens));;
	if ((_42317_scopeTokens == nullptr)) {
		_1e6938874_stop(_self_);
		_1e69393d0_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1e69396ee_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_1e69393d0_pushErr(_self_, _40738_tokens[_42217_i], jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_1e693a090_buildScope(_self_, &(_42317_scopeTokens), _40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;;
}



inline jule::Ptr<_1e4786c9b_Iter> _1e693d0e8_buildIterSt(_1e69381e2_scopeParser* _self_, jule::Ptr<_1e69378b7_stmt>* _43735_st) {
	if ((*(_43735_st)).get()._field_terminated) {
		return _1e693a9b9_buildWhileNextIter(_self_, _43735_st);;
	};
	return _1e693ccda_buildCommonIter(_self_, (*(_43735_st)).get()._field_tokens);;
}



inline jule::Ptr<_1e47882b9_BreakSt> _1e693d406_buildBreakSt(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _44436_tokens) {
	jule::Ptr<_1e47882b9_BreakSt> _44517_brk = jule::new_ptr<_1e47882b9_BreakSt>(_1e47882b9_BreakSt{._field_Token=(*(_44436_tokens))[0LL], });;
	if (((*(_44436_tokens)).len() > 1LL)) {
		if (((*(_44436_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1e69393d0_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1e69396ee_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=(*(_44436_tokens))[1LL];
			if (((*(_44436_tokens)).len() > 2LL)) {
				_1e69393d0_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;;
}



inline jule::Ptr<_1e4788671_ContSt> _1e693d714_buildContSt(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _46235_tokens) {
	jule::Ptr<_1e4788671_ContSt> _46317_cont = jule::new_ptr<_1e4788671_ContSt>(_1e4788671_ContSt{._field_Token=(*(_46235_tokens))[0LL], });;
	if (((*(_46235_tokens)).len() > 1LL)) {
		if (((*(_46235_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1e69393d0_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1e69396ee_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=(*(_46235_tokens))[1LL];
			if (((*(_46235_tokens)).len() > 2LL)) {
				_1e69393d0_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;;
}



inline jule::Ptr<_1e4788ae4_If> _1e693da22_buildIf(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _48031_tokens) {
	jule::Ptr<_1e4788ae4_If> _48117_model = jule::new_ptr<_1e4788ae4_If>(_1e4788ae4_If{._field_Token=(*(_48031_tokens))[0LL], });;
	(*(_48031_tokens))=(*(_48031_tokens)).slice(1LL);
	jule::Slice<jule::Ptr<_20d155596_Token>> _48517_exprTokens = _1e694e9cd_getBlockExpr(_48031_tokens);;
	jule::I64 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_1e69393d0_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I64>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_20d155596_Token>> _49217_scopeTokens = _1e6952a9c_range(&(_48617_i), jule::Str("{", 1), jule::Str("}", 1), _48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_1e6938874_stop(_self_);
		_1e69393d0_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("body is not exist", 17));
		_1e69396ee_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d155596_Token> _49917_end = (*(_48031_tokens))[(_48617_i - 1LL)];;
	if ((_48617_i < (*(_48031_tokens)).len())) {
		if (((*(_48031_tokens))[_48617_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			(*(_48031_tokens))=(*(_48031_tokens)).slice(_48617_i);
		} else {
			_1e69393d0_pushErr(_self_, (*(_48031_tokens))[_48617_i], jule::Str("invalid syntax", 14));
			(*(_48031_tokens))=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_1e69558c4_buildExpr((*(_self_))._field_p, &(_48517_exprTokens));
	_48117_model.get()._field_Scope=_1e693a090_buildScope(_self_, &(_49217_scopeTokens), _49917_end);
	return _48117_model;;
}



inline jule::Ptr<_1e4788e9b_Else> _1e693dd30_buildElse(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _51333_tokens) {
	jule::Ptr<_1e4788e9b_Else> _51417_els = jule::new_ptr<_1e4788e9b_Else>(_1e4788e9b_Else{._field_Token=(*(_51333_tokens))[0LL], });;
	(*(_51333_tokens))=(*(_51333_tokens)).slice(1LL);
	jule::I64 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_20d155596_Token>> _51917_scopeTokens = _1e6952a9c_range(&(_51817_i), jule::Str("{", 1), jule::Str("}", 1), _51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < (*(_51333_tokens)).len())) {
			_1e69393d0_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("else's cannot have any expression", 33));
		} else {
			_1e6938874_stop(_self_);
			_1e69393d0_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("body is not exist", 17));
			_1e69396ee_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51817_i < (*(_51333_tokens)).len())) {
		_1e69393d0_pushErr(_self_, (*(_51333_tokens))[_51817_i], jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_1e693a090_buildScope(_self_, &(_51917_scopeTokens), (*(_51333_tokens))[(_51817_i - 1LL)]);
	return _51417_els;;
}



inline jule::Ptr<_1e478941e_Conditional> _1e693e13d_buildIfElseChain(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _53739_tokens) {
	jule::Ptr<_1e478941e_Conditional> _53817_chain = jule::new_ptr<_1e478941e_Conditional>(_1e478941e_Conditional{._field_Head=_1e693da22_buildIf(_self_, &(_53739_tokens)), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1e91cbcd5;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_1e4788ae4_If> _55025_elif = _1e693da22_buildIf(_self_, &(_53739_tokens));;
				_53817_chain.get()._field_Tail = jule::alloc_for_append(_53817_chain.get()._field_Tail,1);_53817_chain.get()._field_Tail.__push(_55025_elif);;
				goto _iter_next_1e91cbcd5;
			};
			_53817_chain.get()._field_Default=_1e693dd30_buildElse(_self_, &(_53739_tokens));
			goto _iter_end_1e91cbcd5;
		}
	_iter_next_1e91cbcd5:;
	}
	_iter_end_1e91cbcd5:;;
	return _53817_chain;;
}



inline jule::Ptr<_1e4777d47_Expr> _1e693e44b_buildCoCallSt(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _56036_tokens) {
	jule::Ptr<_20d155596_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_1e4777d47_Expr> _56317_e = _1e69558c4_buildExpr((*(_self_))._field_p, &(_56036_tokens));;
	if ((_56317_e == nullptr)) {
		return _56317_e;;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1e91d0965:;
			{
				_56317_e.get()._field_Kind.cast_ptr<_1e477bd29_FnCallExpr>(&__jule_any_type113).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_1e91d0d83:;
			{
				_1e69393d0_pushErr(_self_, _56113_token, jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_1e91d0a53:;
	};
	return _56317_e;;
}



inline jule::Ptr<_1e478137d_GotoSt> _1e693e759_buildGotoSt(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _57635_tokens) {
	jule::Ptr<_1e478137d_GotoSt> _57717_gt = jule::new_ptr<_1e478137d_GotoSt>(_1e478137d_GotoSt{._field_Token=(*(_57635_tokens))[0LL], });;
	if (((*(_57635_tokens)).len() == 1LL)) {
		_1e69393d0_pushErr(_self_, _57717_gt.get()._field_Token, jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57635_tokens)).len() > 2LL)) {
		_1e69393d0_pushErr(_self_, (*(_57635_tokens))[2LL], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_20d155596_Token> _58617_identToken = (*(_57635_tokens))[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e69393d0_pushErr(_self_, _58617_identToken, jule::Str("invalid syntax", 14));
		_1e69396ee_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57717_gt;;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;;
}



inline jule::Ptr<_1e4781669_FallSt> _1e693ea67_buildFallSt(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _59635_tokens) {
	jule::Ptr<_1e4781669_FallSt> _59717_fll = jule::new_ptr<_1e4781669_FallSt>(_1e4781669_FallSt{._field_Token=(*(_59635_tokens))[0LL]});;
	if (((*(_59635_tokens)).len() > 1LL)) {
		_1e69393d0_pushErr(_self_, (*(_59635_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	return _59717_fll;;
}



inline jule::Ptr<_1e4789ae5_TypeAliasDecl> _1e693ed75_buildTypeAliasSt(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _60640_tokens) {
	jule::Ptr<_1e4789ae5_TypeAliasDecl> _60717_tad = _1e6956ebe_buildTypeAliasDecl((*(_self_))._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*(_self_))._field_s;
	return _60717_tad;;
}



inline void _1e69402d7_pushCaseExpr(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _61235_tokens, jule::Ptr<_20d155596_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_1e4777d47_Expr>>* _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I64 _61921_i = 0LL;;
		jule::Ptr<_1e4773826_TypeDecl> _62022_t;;
		jule::Bool _62025_ok = false;;
		({
			__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType((*(_self_))._field_p, &(_61235_tokens), (&(_61921_i)), true);
			_62022_t = __jule_assign_result.__jule_result_arg0;
			_62025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62025_ok) {
			(*(_61331_exprs)) = jule::alloc_for_append((*(_61331_exprs)),1);(*(_61331_exprs)).__push(jule::new_ptr<_1e4777d47_Expr>(_1e4777d47_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=jule::Any(_62022_t, &__jule_any_type95)}));;
			if ((_61921_i < _61235_tokens.len())) {
				_1e69393d0_pushErr(_self_, _61235_tokens[_61921_i], jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	(*(_61331_exprs)) = jule::alloc_for_append((*(_61331_exprs)),1);(*(_61331_exprs)).__push(_1e69558c4_buildExpr((*(_self_))._field_p, &(_61235_tokens)));;
}



inline jule::Slice<jule::Ptr<_1e4777d47_Expr>> _1e6940738_buildCaseExprs(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _63638_tokens, jule::Ptr<_20d155596_Token>* _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_1e4777d47_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_1e4777d47_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63917_braceN = 0LL;;
	jule::I64 _64017_j = 0LL;;
	{
		auto expr = _63638_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e91dbe05:;
		if (it != expr_end) {
			jule::I64 _64114_i = it - expr->begin();
			jule::Ptr<_20d155596_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1e91de325:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_1e91dde29:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_1e91ddc1a:;
					};
					goto _iter_next_1e91dbe05;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_1e91dbe05;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64121_tok.get()._field_Kind == jule::Str("|", 1)))) {
						_case_begin_1e91deb1c:;
						{
							jule::Slice<jule::Ptr<_20d155596_Token>> _65721_exprTokens = (*(_63638_tokens)).slice(_64017_j, _64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_1e69393d0_pushErr(_self_, _64121_tok, jule::Str("expression missing", 18));
							} else {
								_1e69402d7_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							};
							_64017_j=static_cast<jule::I64>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1e91deb83:;
						{
							(*(_63661_colon))=_64121_tok;
							_1e69402d7_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							(*(_63638_tokens))=(*(_63638_tokens)).slice((_64114_i + 1LL));
							return _63717_exprs;;
						}
					}
					_match_end_1e91de688:;
				};
			}
			_iter_next_1e91dbe05:;
			++it;
			_64114_i++;
			goto _iter_begin_1e91dbe05;
		}
		_iter_end_1e91dbe05:;
	};
	_1e69393d0_pushErr(_self_, (*(_63638_tokens))[0LL], jule::Str("invalid syntax", 14));
	(*(_63638_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1e47837ae_ScopeTree> _1e6940a46_buildCaseScope(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _67638_tokens) {
	jule::I64 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_20d155596_Token>> _68022_next;;
			({
				__jule_tuple_sx_20d155596_Token__jule_tuple_bool __jule_assign_result = _1e69375ba_skipSt(&(_67921_i), (*(_67638_tokens)).slice(_67717_n));
				_68022_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_1e91e3527;
			};
			jule::Ptr<_20d155596_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_68417_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_1e91e3527;
			};
			jule::Slice<jule::Ptr<_20d155596_Token>> _68921_scopeTokens = (*(_67638_tokens)).slice(0LL, _67717_n);;
			jule::Ptr<_1e47837ae_ScopeTree> _69021_scope = _1e693a090_buildScope(_self_, &(_68921_scopeTokens), (*(_67638_tokens))[_67717_n]);;
			(*(_67638_tokens))=(*(_67638_tokens)).slice(_67717_n);
			return _69021_scope;;
		}
	_iter_next_1e91e3527:;
	}
	_iter_end_1e91e3527:;;
	jule::Ptr<_20d155596_Token> _69417_end;;
	if (((*(_67638_tokens)).len() > 0LL)) {
		_69417_end=(*(_67638_tokens))[((*(_67638_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1e47837ae_ScopeTree> _69817_scope = _1e693a090_buildScope(_self_, _67638_tokens, _69417_end);;
	(*(_67638_tokens))=nullptr;
	return _69817_scope;;
}



inline __jule_tuple_x_1e478a068_Case__jule_tuple_bool _1e6940ded_buildCase(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _70333_tokens, jule::Bool _70351_typeMatch) {
	__jule_tuple_x_1e478a068_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1e478a068_Case> _70417_c = jule::new_ptr<_1e478a068_Case>(_1e478a068_Case{._field_Token=(*(_70333_tokens))[0LL], });;
	(*(_70333_tokens))=(*(_70333_tokens)).slice(1LL);
	jule::Ptr<_20d155596_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_1e6940738_buildCaseExprs(_self_, _70333_tokens, &(_70817_colon), _70351_typeMatch);
	_70417_c.get()._field_Scope=_1e6940a46_buildCaseScope(_self_, _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70417_c;
	__jule_func_result.__jule_result_arg1 = _71413_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1e478a068_Case__jule_tuple_x_1e4788e9b_Else _1e69412a5_buildCases(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	__jule_tuple_sx_1e478a068_Case__jule_tuple_x_1e4788e9b_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1e478a068_Case>> _71917_cases = nullptr;;
	jule::Ptr<_1e4788e9b_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_20d155596_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_72321_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_1e69393d0_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				goto _iter_end_1e91ebc17;
			};
			jule::Ptr<_1e478a068_Case> _72822_c;;
			jule::Bool _72825_isDefault = false;;
			({
				__jule_tuple_x_1e478a068_Case__jule_tuple_bool __jule_assign_result = _1e6940ded_buildCase(_self_, &(_71833_tokens), _71851_typeMatch);
				_72822_c = __jule_assign_result.__jule_result_arg0;
				_72825_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_1e4788e9b_Else>(_1e4788e9b_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_1e69393d0_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				_71917_cases = jule::alloc_for_append(_71917_cases,1);_71917_cases.__push(_72822_c);;
			};
		}
	_iter_next_1e91ebc17:;
	}
	_iter_end_1e91ebc17:;;
	if (_72117_defNotLast) {
		_1e69393d0_pushErr(_self_, _72017_def.get()._field_Token, jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71917_cases;
	__jule_func_result.__jule_result_arg1 = _72017_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1e478a73e_MatchCase> _1e69415b3_buildMatchCase(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _75237_tokens) {
	jule::Ptr<_1e478a73e_MatchCase> _75317_m = jule::new_ptr<_1e478a73e_MatchCase>(_1e478a73e_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_20d155596_Token>> _76317_exprTokens = _1e694e9cd_getBlockExpr(&(_75237_tokens));;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_1e69558c4_buildExpr((*(_self_))._field_p, &(_76317_exprTokens));
	} else if (_75317_m.get()._field_TypeMatch) {
		_1e69393d0_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("expression missing", 18));
	};
	jule::I64 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_20d155596_Token>> _77117_blockToks = _1e6952a9c_range(&(_77017_i), jule::Str("{", 1), jule::Str("}", 1), &(_75237_tokens));;
	if ((_77117_blockToks == nullptr)) {
		_1e6938874_stop(_self_);
		_1e69393d0_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("body is not exist", 17));
		_1e69396ee_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_77017_i < _75237_tokens.len())) {
		_1e69393d0_pushErr(_self_, _75237_tokens[_77017_i], jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	({
		__jule_tuple_sx_1e478a068_Case__jule_tuple_x_1e4788e9b_Else __jule_assign_result = _1e69412a5_buildCases(_self_, _77117_blockToks, _75317_m.get()._field_TypeMatch);
		_75317_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75317_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75317_m;;
}



inline jule::Ptr<_1e47837ae_ScopeTree> _1e69418c1_buildScopeSt(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_20d155596_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1e69393d0_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_1e69393d0_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1e69393d0_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_20d155596_Token>> _81517_scopeTokens = _1e6952a9c_range(&(_81417_i), jule::Str("{", 1), jule::Str("}", 1), &(_78535_tokens));;
	if ((_81517_scopeTokens == nullptr)) {
		_1e69393d0_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81417_i < _78535_tokens.len())) {
		_1e69393d0_pushErr(_self_, _78535_tokens[_81417_i], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1e47837ae_ScopeTree> _82217_scope = _1e693a090_buildScope(_self_, &(_81517_scopeTokens), _78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;;
}



inline jule::Ptr<_1e4780ec6_LabelSt> _1e6941bce_buildLabelSt(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _82836_tokens) {
	jule::Ptr<_1e4780ec6_LabelSt> _82917_lbl = jule::new_ptr<_1e4780ec6_LabelSt>(_1e4780ec6_LabelSt{._field_Token=(*(_82836_tokens))[0LL], ._field_Ident=(*(_82836_tokens))[0LL].get()._field_Kind});;
	if (((*(_82836_tokens)).len() > 2LL)) {
		(*(_82836_tokens))=(*(_82836_tokens)).slice(2LL);
		_1e6939974_insertAsNext(_self_, _82836_tokens);
	};
	return _82917_lbl;;
}



inline __jule_tuple__1e4782e73_StmtData__jule_tuple_bool _1e6941edc_buildIdSt(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _84333_tokens) {
	__jule_tuple__1e4782e73_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84333_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_20d155596_Token> _84817_token = (*(_84333_tokens))[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1e9212b1d:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1e6941bce_buildLabelSt(_self_, _84333_tokens), &__jule_any_type57);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1e9212ab8:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1e695100c_assignInfo> _1e69422ea_buildAssignInfo(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _85739_tokens) {
	jule::Ptr<_1e695100c_assignInfo> _85817_info = jule::new_ptr<_1e695100c_assignInfo>(_1e695100c_assignInfo{._field_ok=true});;
	jule::I64 _86117_braceN = 0LL;;
	{
		auto expr = _85739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e921437d:;
		if (it != expr_end) {
			jule::I64 _86214_i = it - expr->begin();
			jule::Ptr<_20d155596_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e9215989:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_1e921558d:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_1e921537e:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_1e9215c75:;
						{
							goto _iter_next_1e921437d;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1e9215cdb:;
						{
							goto _iter_next_1e921437d;
						}
					}
					else if ((!(_20d15a17d_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_1e9215d63:;
						{
							goto _iter_next_1e921437d;
						}
					}
					_match_end_1e9215a33:;
				};
				_85817_info.get()._field_l=(*(_85739_tokens)).slice(0LL, _86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= (*(_85739_tokens)).len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_20d159dd6_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1e921437d;
				};
				_85817_info.get()._field_r=(*(_85739_tokens)).slice((_86214_i + 1LL));
				if (_20d159dd6_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_1e69393d0_pushErr(_self_, _85817_info.get()._field_r[0LL], jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1e921437d;
			}
			_iter_next_1e921437d:;
			++it;
			_86214_i++;
			goto _iter_begin_1e921437d;
		}
		_iter_end_1e921437d:;
	};
	return _85817_info;;
}



inline jule::Ptr<_1e4781c74_AssignLeft> _1e6942608_buildAssignL(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _90536_tokens) {
	jule::Ptr<_1e4781c74_AssignLeft> _90617_l = jule::new_ptr<_1e4781c74_AssignLeft>(_1e4781c74_AssignLeft{._field_Token=(*(_90536_tokens))[0LL], });;
	if (((*(_90536_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_1e69558c4_buildExpr((*(_self_))._field_p, _90536_tokens);
	return _90617_l;;
}



inline jule::Slice<jule::Ptr<_1e4781c74_AssignLeft>> _1e6942916_buildAssignLs(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>>* _91637_parts) {
	jule::Slice<jule::Ptr<_1e4781c74_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto expr = _91637_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e921c870:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d155596_Token>> _91821_part = *it;
			{
				jule::Ptr<_1e4781c74_AssignLeft> _91921_l = _1e6942608_buildAssignL(_self_, &(_91821_part));;
				_91717_lefts = jule::alloc_for_append(_91717_lefts,1);_91717_lefts.__push(_91921_l);;
			}
			_iter_next_1e921c870:;
			++it;
			goto _iter_begin_1e921c870;
		}
		_iter_end_1e921c870:;
	};
	return _91717_lefts;;
}



inline __jule_tuple_x_1e47822b3_AssignSt__jule_tuple_bool _1e6942c24_buildPlainAssign(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _92640_tokens) {
	__jule_tuple_x_1e47822b3_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1e695100c_assignInfo> _92717_info = _1e69422ea_buildAssignInfo(_self_, _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e47822b3_AssignSt> _93217_assign = jule::new_ptr<_1e47822b3_AssignSt>(_1e47822b3_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _93618_parts;;
	jule::Slice<_24305e4ae_Log> _93625_errs;;
	({
		__jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e6953619_parts(&(_92717_info.get()._field_l), static_cast<jule::U64>(8LLU), true);
		_93618_parts = __jule_assign_result.__jule_result_arg0;
		_93625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93625_errs.len() > 0LL)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_93625_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_93217_assign.get()._field_Left=_1e6942916_buildAssignLs(_self_, &(_93618_parts));
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_1e69558c4_buildExpr((*(_self_))._field_p, &(_92717_info.get()._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _93217_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1e47822b3_AssignSt__jule_tuple_bool _1e6943032_buildDeclAssign(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _95038_tokens) {
	__jule_tuple_x_1e47822b3_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_95038_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_20d155596_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_95617_token.get()._field_Kind != jule::Str("(", 1)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e47822b3_AssignSt> _96117_assign = jule::new_ptr<_1e47822b3_AssignSt>(_1e47822b3_AssignSt{._field_Declarative=true, });;
	jule::I64 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_20d155596_Token>> _96617_rang = _1e6952a9c_range(&(_96517_i), jule::Str("(", 1), jule::Str(")", 1), &(_95038_tokens));;
	if ((_96617_rang == nullptr)) {
		_1e69393d0_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_20d155596_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_1e69558c4_buildExpr((*(_self_))._field_p, &(_97321_exprTokens));
	};
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _97818_parts;;
	jule::Slice<_24305e4ae_Log> _97825_errs;;
	({
		__jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e6953619_parts(&(_96617_rang), static_cast<jule::U64>(8LLU), true);
		_97818_parts = __jule_assign_result.__jule_result_arg0;
		_97825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97825_errs.len() > 0LL)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_97825_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_97818_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e92287e3:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d155596_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1e69393d0_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1e92287e3;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_98421_part[0LL].get()._field_Kind == jule::Str("&", 1)))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1e69393d0_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1e92287e3;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (_98421_part[0LL].get()._field_Kind != jule::Str("(", 1)))) {
					_1e69393d0_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
					goto _iter_next_1e92287e3;
				};
				jule::Ptr<_1e4781c74_AssignLeft> _101421_l = _1e6942608_buildAssignL(_self_, &(_98421_part));;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				_96117_assign.get()._field_Left = jule::alloc_for_append(_96117_assign.get()._field_Left,1);_96117_assign.get()._field_Left.__push(_101421_l);;
			}
			_iter_next_1e92287e3:;
			++it;
			goto _iter_begin_1e92287e3;
		}
		_iter_end_1e92287e3:;
	};
	__jule_func_result.__jule_result_arg0 = _96117_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1e47822b3_AssignSt__jule_tuple_bool _1e6943340_buildAssignSt(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _102337_tokens) {
	__jule_tuple_x_1e47822b3_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1e69513a3_checkAssignTokens(_102337_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_102337_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1e9231b5e:;
			{
				({
					__jule_tuple_x_1e47822b3_AssignSt__jule_tuple_bool __jule_assign_result = _1e6943032_buildDeclAssign(_self_, (*(_102337_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1e9231752:;
			{
				({
					__jule_tuple_x_1e47822b3_AssignSt__jule_tuple_bool __jule_assign_result = _1e6942c24_buildPlainAssign(_self_, _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1e92316ec:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1e47786d8_UseExpr> _1e694364d_buildUseExpr(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _103836_tokens) {
	if (((*(_103836_tokens)).len() == 1LL)) {
		_1e69393d0_pushErr(_self_, (*(_103836_tokens))[0LL], jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1e47786d8_UseExpr> _104317_ue = jule::new_ptr<_1e47786d8_UseExpr>(_1e47786d8_UseExpr{._field_Token=(*(_103836_tokens))[0LL], });;
	(*(_103836_tokens))=(*(_103836_tokens)).slice(1LL);
	_104317_ue.get()._field_Expr=_1e69558c4_buildExpr((*(_self_))._field_p, _103836_tokens);
	return _104317_ue;;
}



inline jule::Any _1e694395b_buildSt(_1e69381e2_scopeParser* _self_, jule::Ptr<_1e69378b7_stmt>* _105131_st) {
	jule::Ptr<_20d155596_Token> _105217_token = (*(_105131_st)).get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _105422_s = jule::Any(nullptr);;
		jule::Bool _105425_ok = false;;
		({
			__jule_tuple__1e4782e73_StmtData__jule_tuple_bool __jule_assign_result = _1e6941edc_buildIdSt(_self_, &((*(_105131_st)).get()._field_tokens));
			_105422_s = __jule_assign_result.__jule_result_arg0;
			_105425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_105425_ok) {
			return _105422_s;;
		};
	};
	jule::Ptr<_1e47822b3_AssignSt> _106018_s;;
	jule::Bool _106021_ok = false;;
	({
		__jule_tuple_x_1e47822b3_AssignSt__jule_tuple_bool __jule_assign_result = _1e6943340_buildAssignSt(_self_, &((*(_105131_st)).get()._field_tokens));
		_106018_s = __jule_assign_result.__jule_result_arg0;
		_106021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106021_ok) {
		return jule::Any(_106018_s, &__jule_any_type59);;
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1e9236aed:;
			{
				return jule::Any(_1e694364d_buildUseExpr(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1e9236c52:;
			{
				return jule::Any(_1e693a39d_buildVarSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1e9236cb8:;
			{
				return jule::Any(_1e693a6ab_buildRetSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1e9236d84:;
			{
				return jule::Any(_1e693d0e8_buildIterSt(_self_, _105131_st), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1e9236dea:;
			{
				return jule::Any(_1e693d406_buildBreakSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1e9236e61:;
			{
				return jule::Any(_1e693d714_buildContSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1e9236ec7:;
			{
				return jule::Any(_1e693e13d_buildIfElseChain(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1e923703d:;
			{
				return jule::Any(_1e693e44b_buildCoCallSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1e92370a4:;
			{
				return jule::Any(_1e693e759_buildGotoSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1e923711a:;
			{
				return jule::Any(_1e693ea67_buildFallSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1e9237181:;
			{
				return jule::Any(_1e693ed75_buildTypeAliasSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1e92371e7:;
			{
				return jule::Any(_1e69415b3_buildMatchCase(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1e923725d:;
			{
				return jule::Any(_1e69418c1_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e92372d5:;
			{
				if ((_105217_token.get()._field_Kind == jule::Str("{", 1))) {
					return jule::Any(_1e69418c1_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
				};
			}
		}
		_match_end_1e92369aa:;
	};
	jule::Ptr<_1e4777d47_Expr> _110117_expr = _1e69558c4_buildExpr((*(_self_))._field_p, &((*(_105131_st)).get()._field_tokens));;
	if ((_110117_expr != nullptr)) {
		return jule::Any(_110117_expr, &__jule_any_type53);;
	};
	_1e69393d0_pushErr(_self_, _105217_token, jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1e6943c7a_build(_1e69381e2_scopeParser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _110929_tokens, jule::Ptr<_1e47837ae_ScopeTree>* _110952_s) {
	if (((*(_110952_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1e6937c5d_splitStmts(_110929_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_110952_s));
	while (((!(_1e69390b1_isLastSt(_self_))) && (!(_1e6938d4c_finished(_self_))))) {
		{
			jule::Ptr<_1e69378b7_stmt> _111721_st = _1e6939bd8_next(_self_);;
			jule::Any _111821_data = _1e694395b_buildSt(_self_, &(_111721_st));;
			if ((_111821_data != nullptr)) {
				(*(_self_))._field_s.get()._field_Stmts = jule::alloc_for_append((*(_self_))._field_s.get()._field_Stmts,1);(*(_self_))._field_s.get()._field_Stmts.__push(_1e47831a4_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data});;
			};
			if (_1e6938ad8_stopped(_self_)) {
				goto _iter_end_1e923ec7c;
			};
		}
	_iter_next_1e923ec7c:;
	}
	_iter_end_1e923ec7c:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e69381e2_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1e6944e9b_pushErr(_1e6944709_exprBuilder* _self_, jule::Ptr<_20d155596_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_1e6955297_pushErr((*(_self_))._field_p.ptr(), _4426_token, _4441_fmt, _4454_args);
}



inline void _1e69452ba_pushSuggestion(_1e6944709_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_1e69555b6_pushSuggestion((*(_self_))._field_p.ptr(), _4933_fmt, _4946_args);
}



inline jule::Ptr<_1e47789c4_TupleExpr> _1e69455c8_buildTuple(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>>* _5334_parts) {
	jule::Ptr<_1e47789c4_TupleExpr> _5417_tuple = jule::new_ptr<_1e47789c4_TupleExpr>(_1e47789c4_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1e4777d47_Expr>>::alloc(0LL, (*(_5334_parts)).len())});;
	{
		auto expr = _5334_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e925ed79:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d155596_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_1e694e0e8_buildFromTokens(_self_, _5721_part));;
			}
			_iter_next_1e925ed79:;
			++it;
			goto _iter_begin_1e925ed79;
		}
		_iter_end_1e925ed79:;
	};
	return _5417_tuple;;
}



inline jule::Ptr<_1e4778d7b_LitExpr> _1e69458d6_buildLit(_1e6944709_exprBuilder* _self_, jule::Ptr<_20d155596_Token> _6327_token) {
	return jule::new_ptr<_1e4778d7b_LitExpr>(_1e4778d7b_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});;
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e6945be4_buildPrimitiveType(_1e6944709_exprBuilder* _self_, jule::Ptr<_20d155596_Token>* _7038_token) {
	return _1e69650ba_buildPrimType((*(_7038_token)));;
}



inline jule::Any _1e6946002_buildSingle(_1e6944709_exprBuilder* _self_, jule::Ptr<_20d155596_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1e926181a:;
			{
				return jule::Any(_1e69458d6_buildLit(_self_, _7434_token), &__jule_any_type107);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e9261881:;
			{
				if ((_7434_token.get()._field_Kind == jule::Str("...", 3))) {
					return jule::Any(jule::new_ptr<_1e477a5b9_VariadicExpr>(_1e477a5b9_VariadicExpr{._field_Token=_7434_token, }), &__jule_any_type82);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(27LLU) || _match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1e9261908:;
			{
				return jule::Any(_1e69503a2_buildIdentExpr(&(_7434_token)), &__jule_any_type86);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1e9261980:;
			{
				return jule::Any(_1e6945be4_buildPrimitiveType(_self_, &(_7434_token)), &__jule_any_type95);;
			}
		}
		_match_end_1e92614b8:;
	};
	_1e6944e9b_pushErr(_self_, _7434_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1e4779a08_IdentExpr> _1e6946310_buildCppLinkedIdent(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _9543_tokens) {
	if (((*(_9543_tokens))[0LL].get()._field_Id != static_cast<jule::U64>(30LLU))) {
		return nullptr;;
	} else if (((*(_9543_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_1e6944e9b_pushErr(_self_, (*(_9543_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e69452ba_pushSuggestion(_self_, jule::Str("use dot (.) to access cpp-linked defines", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d155596_Token> _10317_token = (*(_9543_tokens))[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e6944e9b_pushErr(_self_, (*(_9543_tokens))[2LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e69452ba_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e4779a08_IdentExpr> _10917_expr = _1e69503a2_buildIdentExpr(&(_10317_token));;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;;
}



inline jule::Ptr<_1e477a212_UnaryExpr> _1e694661d_buildUnary(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _11433_tokens) {
	jule::Ptr<_20d155596_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_1e6944e9b_pushErr(_self_, _11517_op, jule::Str("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_20d155ca0_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_1e6944e9b_pushErr(_self_, _11517_op, jule::Str("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_1e477a212_UnaryExpr>(_1e477a212_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_1e694e0e8_buildFromTokens(_self_, _11433_tokens)});;
}



inline jule::Ptr<_1e477b29b_SubIdentExpr> _1e694692b_buildObjSubIdent(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _13539_tokens) {
	jule::I64 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_20d155596_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL, _13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_1e6944e9b_pushErr(_self_, _13717_identToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1e477b29b_SubIdentExpr>(_1e477b29b_SubIdentExpr{._field_Expr=_1e694e0e8_buildFromTokens(_self_, _13539_tokens), ._field_Ident=_13717_identToken});;
}



inline jule::Ptr<_1e477ad28_NsSelectionExpr> _1e6946c39_buildNsSubIdent(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _15039_tokens) {
	jule::Ptr<_1e477ad28_NsSelectionExpr> _15117_ns = jule::new_ptr<_1e477ad28_NsSelectionExpr>();;
	{
		auto expr = _15039_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e926c97a:;
		if (it != expr_end) {
			jule::I64 _15214_i = it - expr->begin();
			jule::Ptr<_20d155596_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_1e6944e9b_pushErr(_self_, _15221_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1e69452ba_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1e6944e9b_pushErr(_self_, _15221_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1e69452ba_pushSuggestion(_self_, jule::Str("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1e926c97a:;
			++it;
			_15214_i++;
			goto _iter_begin_1e926c97a;
		}
		_iter_end_1e926c97a:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL, (_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;;
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e6947047_buildType(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _16933_tokens) {
	jule::I64 _17017_i = 0LL;;
	jule::Ptr<_1e4773826_TypeDecl> _17118_t;;
	jule::Bool _17121_ok = false;;
	({
		__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType((*(_self_))._field_p, _16933_tokens, (&(_17017_i)), false);
		_17118_t = __jule_assign_result.__jule_result_arg0;
		_17121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17121_ok))) {
		_1e6944e9b_pushErr(_self_, (*(_16933_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17017_i < (*(_16933_tokens)).len())) {
		_1e6944e9b_pushErr(_self_, (*(_16933_tokens))[_17017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17118_t;;
}



inline jule::Any _1e6947355_buildSubIdent(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _18337_tokens) {
	jule::I64 _18413_i = ((*(_18337_tokens)).len() - 2LL);;
	jule::Ptr<_20d155596_Token> _18513_token = (*(_18337_tokens))[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1e92749e8:;
			{
				return jule::Any(_1e694692b_buildObjSubIdent(_self_, (*(_18337_tokens))), &__jule_any_type92);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1e9274ee3:;
			{
				return jule::Any(_1e6946c39_buildNsSubIdent(_self_, _18337_tokens), &__jule_any_type96);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e9275059:;
			{
				if ((_18513_token.get()._field_Kind == jule::Str("]", 1))) {
					return jule::Any(_1e6947047_buildType(_self_, _18337_tokens), &__jule_any_type95);;
				};
			}
		}
		_match_end_1e9274d7d:;
	};
	_1e6944e9b_pushErr(_self_, _18513_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1e477a5b9_VariadicExpr> _1e6947663_buildVariadic(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _20136_tokens) {
	jule::Ptr<_20d155596_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL, (_20136_tokens.len() - 1LL));
	return jule::new_ptr<_1e477a5b9_VariadicExpr>(_1e477a5b9_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_1e694e0e8_buildFromTokens(_self_, _20136_tokens)});;
}



inline jule::Any _1e6947971_buildOpRight(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _21036_tokens) {
	jule::Ptr<_20d155596_Token> _21117_token = (*(_21036_tokens))[((*(_21036_tokens)).len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1e9278e2b:;
			{
				(*(_21036_tokens))=(*(_21036_tokens)).slice(0LL, ((*(_21036_tokens)).len() - 1LL));
				jule::Any _21521_d = _1e694d9cc_build(_self_, _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_1e927a4e3:;
						{
							_21521_d.cast_ptr<_1e477bd29_FnCallExpr>(&__jule_any_type113).get()._field_Exception=jule::new_ptr<_1e47837ae_ScopeTree>(_1e47837ae_ScopeTree{._field_Deferred=true, });
							return _21521_d;;
						}
					}
					_match_end_1e927a625:;
				};
			}
		}
		_match_end_1e9278c72:;
	};
	_1e6944e9b_pushErr(_self_, _21117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1e4778133_RangeExpr> _1e6947ca1_buildBetweenParentheses(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_1e6944e9b_pushErr(_self_, _23146_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1e69452ba_pushSuggestion(_self_, jule::Str("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_23146_tokens=_23146_tokens.slice(1LL, (_23146_tokens.len() - 1LL));
	return jule::new_ptr<_1e4778133_RangeExpr>(_1e4778133_RangeExpr{._field_Expr=_1e694e0e8_buildFromTokens(_self_, _23146_tokens)});;
}



inline jule::Ptr<_1e477a971_CastExpr> _1e69480c0_tryBuildCast(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _24336_tokens) {
	jule::I64 _24417_rangeN = 0LL;;
	{
		auto expr = _24336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e927d815:;
		if (it != expr_end) {
			jule::I64 _24513_i = it - expr->begin();
			jule::Ptr<_20d155596_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e927edcc:;
							{
								(_24417_rangeN)++;
								goto _iter_next_1e927d815;
							}
						}
						else {
							_case_begin_1e927e9d1:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_1e927e7c2:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_1e927d815;
				} else if (((_24513_i + 1LL) == (*(_24336_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_20d155596_Token>> _26421_typeTokens = (*(_24336_tokens)).slice(0LL, (_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_20d155596_Token>> _26521_exprTokens = (*(_24336_tokens)).slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_20d155596_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_27217_tok.get()._field_Kind != jule::Str("(", 1)))) {
					return nullptr;;
				};
				jule::Ptr<_1e477a971_CastExpr> _27721_cast = jule::new_ptr<_1e477a971_CastExpr>(_1e477a971_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_1e6944e9b_pushErr(_self_, _26521_exprTokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
					_1e69452ba_pushSuggestion(_self_, jule::Str("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_1e6944e9b_pushErr(_self_, _26421_typeTokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
					_1e69452ba_pushSuggestion(_self_, jule::Str("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL, (_26421_typeTokens.len() - 1LL));
					jule::I64 _29125_typeIndex = 0LL;;
					jule::Ptr<_1e4773826_TypeDecl> _29226_t;;
					jule::Bool _29229_ok = false;;
					({
						__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType((*(_self_))._field_p, &(_26421_typeTokens), (&(_29125_typeIndex)), true);
						_29226_t = __jule_assign_result.__jule_result_arg0;
						_29229_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_1e6944e9b_pushErr(_self_, _26421_typeTokens[_29125_typeIndex], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I64 _30229_j = 0LL;;
						_1e6952a9c_range(&(_30229_j), jule::Str("(", 1), jule::Str(")", 1), &(_26521_exprTokens));
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL, _30229_j);
						_27721_cast.get()._field_Expr=_1e694e0e8_buildFromTokens(_self_, _26521_exprTokens);
					};
				};
				return _27721_cast;;
			}
			_iter_next_1e927d815:;
			++it;
			_24513_i++;
			goto _iter_begin_1e927d815;
		}
		_iter_end_1e927d815:;
	};
	return nullptr;;
}



inline void _1e6948488_pushArg(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e4777d47_Expr>>* _31731_args, jule::Slice<jule::Ptr<_20d155596_Token>> _31750_tokens, jule::Ptr<_20d155596_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_1e6944e9b_pushErr(_self_, _31768_err_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e69452ba_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	(*(_31731_args)) = jule::alloc_for_append((*(_31731_args)),1);(*(_31731_args)).__push(_1e694e0e8_buildFromTokens(_self_, _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_1e4777d47_Expr>> _1e6948796_buildArgs(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e4777d47_Expr>> _33217_args = nullptr;;
	jule::I64 _33317_last = 0LL;;
	jule::I64 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL, (_32632_tokens.len() - 1LL));
	{
		auto expr = &(_32632_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e929220d:;
		if (it != expr_end) {
			jule::I64 _33613_i = it - expr->begin();
			jule::Ptr<_20d155596_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e9293990:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_1e9293594:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_1e9293385:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1e929220d;
				};
				_1e6948488_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last, _33613_i), _33616_token);
				_33317_last=static_cast<jule::I64>((_33613_i + 1LL));
			}
			_iter_next_1e929220d:;
			++it;
			_33613_i++;
			goto _iter_begin_1e929220d;
		}
		_iter_end_1e929220d:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_1e6948488_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last), _32632_tokens[_33317_last]);
			};
		} else {
			_1e6948488_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last), _32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;;
}



inline jule::Slice<jule::Ptr<_1e4773826_TypeDecl>> _1e6948aa4_buildCallGenerics(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;;
	};
	_36840_tokens=_36840_tokens.slice(1LL, (_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _37418_parts;;
	jule::Slice<_24305e4ae_Log> _37425_errs;;
	({
		__jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e6953619_parts(&(_36840_tokens), static_cast<jule::U64>(8LLU), true);
		_37418_parts = __jule_assign_result.__jule_result_arg0;
		_37425_errs = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1e4773826_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_1e4773826_TypeDecl>>::alloc(0LL, _37418_parts.len());;
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_37425_errs);
	{
		auto expr = &(_37418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9298544:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d155596_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_1e9298544;
				};
				jule::I64 _38121_j = 0LL;;
				jule::Ptr<_1e4773826_TypeDecl> _38222_generic;;
				({
					__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType((*(_self_))._field_p, &(_37721_part), (&(_38121_j)), true);
					_38222_generic = __jule_assign_result.__jule_result_arg0;
				});
				if ((_38121_j < _37721_part.len())) {
					_1e6944e9b_pushErr(_self_, _37721_part[_38121_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_1e9298544:;
			++it;
			goto _iter_begin_1e9298544;
		}
		_iter_end_1e9298544:;
	};
	return _37517_generics;;
}



inline jule::Ptr<_1e477bd29_FnCallExpr> _1e6949005_buildFnCall(_1e6944709_exprBuilder* _self_, jule::Ptr<_20d155596_Token>* _39235_token, jule::Slice<jule::Ptr<_20d155596_Token>>* _39255_expr, jule::Slice<jule::Ptr<_20d155596_Token>>* _39276_args) {
	return jule::new_ptr<_1e477bd29_FnCallExpr>(_1e477bd29_FnCallExpr{._field_Token=(*(_39235_token)), ._field_Expr=_1e694e0e8_buildFromTokens(_self_, (*(_39255_expr))), ._field_Args=_1e6948796_buildArgs(_self_, (*(_39276_args))), });;
}



inline jule::Any _1e6949313_buildParenthesesRange(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _40045_tokens) {
	jule::Ptr<_20d155596_Token> _40117_token = (*(_40045_tokens))[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e929c713:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1e929d082:;
						{
							jule::Ptr<_1e477a971_CastExpr> _40625_expr = _1e69480c0_tryBuildCast(_self_, _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return jule::Any(_40625_expr, &__jule_any_type111);;
							};
						}
					}
					_match_end_1e929cdb7:;
				};
			}
		}
		_match_end_1e929c559:;
	};
	jule::Slice<jule::Ptr<_20d155596_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_20d155596_Token>> _41234_args_tokens;;
	({
		__jule_tuple_sx_20d155596_Token__jule_tuple_sx_20d155596_Token __jule_assign_result = _1e6952d44_rangeLast(_40045_tokens);
		_41218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_41234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41218_exprTokens.len() == 0LL)) {
		return jule::Any(_1e6947ca1_buildBetweenParentheses(_self_, _41234_args_tokens), &__jule_any_type106);;
	};
	return jule::Any(_1e6949005_buildFnCall(_self_, &(_40117_token), &(_41218_exprTokens), &(_41234_args_tokens)), &__jule_any_type113);;
}



inline jule::Ptr<_1e4779585_UnsafeExpr> _1e6949621_buildUnsafeExpr(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _42138_tokens) {
	jule::Ptr<_20d155596_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I64 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_20d155596_Token>> _42517_rangeTokens = _1e6952a9c_range(&(_42417_i), jule::Str("{", 1), jule::Str("}", 1), &(_42138_tokens));;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_1e6944e9b_pushErr(_self_, _42138_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1e4779585_UnsafeExpr>(_1e4779585_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_1e694e0e8_buildFromTokens(_self_, _42517_rangeTokens)});;
}



inline jule::Ptr<_1e47852a5_FnDecl> _1e694992e_buildAnonFn(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _43635_tokens) {
	jule::Ptr<_1e47852a5_FnDecl> _43717_f = _1e695ad08_buildFn((*(_self_))._field_p, _43635_tokens, false, false);;
	if ((!(_1e4785607_IsAnon(_43717_f.ptr())))) {
		_1e6944e9b_pushErr(_self_, _43717_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e69452ba_pushSuggestion(_self_, jule::Str("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _43717_f;;
}



inline jule::Any _1e6949c3c_buildUnsafe(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _44535_tokens) {
	{
		auto &_match_expr{ (*(_44535_tokens))[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1e92a4044:;
			{
				return jule::Any(_1e694992e_buildAnonFn(_self_, _44535_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1e92a451c:;
			{
				return jule::Any(_1e6949621_buildUnsafeExpr(_self_, (*(_44535_tokens))), &__jule_any_type108);;
			}
		}
		_match_end_1e92a4495:;
	};
}



inline void _1e694a105_pushRangeLitPart(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _45539_part, jule::Ptr<_20d155596_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>>* _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_1e6944e9b_pushErr(_self_, _4569_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e69452ba_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	(*(_45634_parts)) = jule::alloc_for_append((*(_45634_parts)),1);(*(_45634_parts)).__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _1e694a435_getBraceRangeLitExprParts(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _47217_parts = nullptr;;
	jule::I64 _47417_last = 0LL;;
	jule::I64 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL, (_46648_tokens.len() - 1LL));
	{
		auto expr = &(_46648_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e92a8664:;
		if (it != expr_end) {
			jule::I64 _47713_i = it - expr->begin();
			jule::Ptr<_20d155596_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e92a9de6:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_1e92a99ea:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_1e92a97db:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1e92a8664;
				};
				_1e694a105_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last, _47713_i), _47716_token, &(_47217_parts));
				_47417_last=static_cast<jule::I64>((_47713_i + 1LL));
			}
			_iter_next_1e92a8664:;
			++it;
			_47713_i++;
			goto _iter_begin_1e92a8664;
		}
		_iter_end_1e92a8664:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_1e694a105_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last), _46648_tokens[_47417_last], &(_47217_parts));
			};
		} else {
			_1e694a105_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last), _46648_tokens[(_47417_last - 1LL)], &(_47217_parts));
		};
	};
	return _47217_parts;;
}



inline jule::Ptr<_1e477c7a8_FieldExprPair> _1e694a754_buildFieldExprPair(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_1e6944e9b_pushErr(_self_, _50841_tokens[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e477c7a8_FieldExprPair> _51317_pair = jule::new_ptr<_1e477c7a8_FieldExprPair>(_1e477c7a8_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_1e694e0e8_buildFromTokens(_self_, _50841_tokens);
	return _51317_pair;;
}



inline jule::Ptr<_1e4777d47_Expr> _1e694aa62_buildStructLitExpr(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _52142_tokens) {
	jule::Ptr<_20d155596_Token> _52217_token = (*(_52142_tokens))[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((*(_52142_tokens)).len() > 1LL))) {
		_52217_token=(*(_52142_tokens))[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_1e4777d47_Expr>(_1e4777d47_Expr{._field_Token=_52217_token, ._field_End=(*(_52142_tokens))[((*(_52142_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1e694a754_buildFieldExprPair(_self_, (*(_52142_tokens))), &__jule_any_type84)});;
		};
	};
	return _1e694e0e8_buildFromTokens(_self_, (*(_52142_tokens)));;
}



inline jule::Slice<jule::Ptr<_1e4777d47_Expr>> _1e694ad70_buildStructLitExprs(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _53717_parts = _1e694a435_getBraceRangeLitExprParts(_self_, (*(_53643_tokens)));;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e4777d47_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_1e4777d47_Expr>>::alloc(0LL, _53717_parts.len());;
	{
		auto expr = &(_53717_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e839ea03:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d155596_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_1e694aa62_buildStructLitExpr(_self_, &(_54321_part)));;
			}
			_iter_next_1e839ea03:;
			++it;
			goto _iter_begin_1e839ea03;
		}
		_iter_end_1e839ea03:;
	};
	return _54217_pairs;;
}



inline jule::Ptr<_1e477d006_StructLit> _1e694b1a0_buildTypedStructLiteral(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _54946_tokens) {
	jule::I64 _55017_i = 0LL;;
	jule::Ptr<_1e4773826_TypeDecl> _55118_t;;
	jule::Bool _55121_ok = false;;
	({
		__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType((*(_self_))._field_p, &(_54946_tokens), (&(_55017_i)), true);
		_55118_t = __jule_assign_result.__jule_result_arg0;
		_55121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_55121_ok))) {
		return nullptr;;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_1e6944e9b_pushErr(_self_, _54946_tokens[_55017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_20d155596_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_56013_token.get()._field_Kind != jule::Str("{", 1)))) {
		_1e6944e9b_pushErr(_self_, _56013_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1e477d006_StructLit>(_1e477d006_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_1e694ad70_buildStructLitExprs(_self_, &(_54946_tokens))});;
}



inline jule::Ptr<_1e4777d47_Expr> _1e694b4be_buildBraceLitPart(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _57341_tokens) {
	jule::Slice<jule::Ptr<_20d155596_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_20d155596_Token>> _57425_r;;
	({
		__jule_tuple_sx_20d155596_Token__jule_tuple_sx_20d155596_Token __jule_assign_result = _1e694ed63_splitDelim(_57341_tokens, static_cast<jule::U64>(11LLU));
		_57418_l = __jule_assign_result.__jule_result_arg0;
		_57425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_1e4777d47_Expr>(_1e4777d47_Expr{._field_Token=(*(_57341_tokens))[0LL], ._field_End=(*(_57341_tokens))[((*(_57341_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1e477dc4e_KeyValPair>(_1e477dc4e_KeyValPair{._field_Key=_1e694e0e8_buildFromTokens(_self_, _57418_l), ._field_Val=_1e694e0e8_buildFromTokens(_self_, _57425_r), ._field_Colon=(*(_57341_tokens))[_57418_l.len()]}), &__jule_any_type85)});;
	};
	return _1e694e0e8_buildFromTokens(_self_, (*(_57341_tokens)));;
}



inline jule::Ptr<_1e477d479_BraceLit> _1e694b7cc_buildBraceLit(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _59037_tokens) {
	jule::Ptr<_1e477d479_BraceLit> _59117_lit = jule::new_ptr<_1e477d479_BraceLit>(_1e477d479_BraceLit{._field_Token=(*(_59037_tokens))[0LL], ._field_End=(*(_59037_tokens))[((*(_59037_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _59617_parts = _1e694a435_getBraceRangeLitExprParts(_self_, (*(_59037_tokens)));;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1e4777d47_Expr>>::alloc(0LL, _59617_parts.len());
	{
		auto expr = &(_59617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e83a938c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d155596_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_1e694b4be_buildBraceLitPart(_self_, &(_60221_part)));;
			}
			_iter_next_1e83a938c:;
			++it;
			goto _iter_begin_1e83a938c;
		}
		_iter_end_1e83a938c:;
	};
	return _59117_lit;;
}



inline jule::Any _1e694bada_buildBraceRange(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _60939_tokens) {
	jule::Slice<jule::Ptr<_20d155596_Token>> _61018_exprTokens;;
	jule::I64 _61030_rangeN = 0;;
	({
		__jule_tuple_sx_20d155596_Token__jule_tuple_int __jule_assign_result = _1e6950649_getRangeExprTokens(_60939_tokens);
		_61018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_61030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_1e83aacb7:;
			{
				return jule::Any(_1e694b7cc_buildBraceLit(_self_, _60939_tokens), &__jule_any_type114);;
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_1e83aad3e:;
			{
				_1e6944e9b_pushErr(_self_, (*(_60939_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e83a9c61:;
	};
	jule::Ptr<_20d155596_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL, (_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _1e694d9cc_build(_self_, &(_61018_exprTokens));;
		if ((_62421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type == &__jule_any_type113) {
				_case_begin_1e83adda8:;
				{
					(*(_60939_tokens))=(*(_60939_tokens)).slice((_61018_exprTokens.len() + 1LL));
					jule::I64 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_20d155596_Token>> _63225_rangeTokens = _1e6952a9c_range(&(_63125_i), jule::Str("{", 1), jule::Str("}", 1), _60939_tokens);;
					jule::Ptr<_1e477bd29_FnCallExpr> _63325_model = _62421_d.cast_ptr<_1e477bd29_FnCallExpr>(&__jule_any_type113);;
					if (_1e477c401_Ignored(_63325_model.ptr())) {
						_1e6944e9b_pushErr(_self_, _62113_elseToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1e69452ba_pushSuggestion(_self_, jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_1e695630e_buildScope((*(_self_))._field_p, &(_63225_rangeTokens), (*(_60939_tokens))[(_63125_i - 1LL)]);
					return _62421_d;;
				}
			}
			else {
				_case_begin_1e83ae0a6:;
				{
					_1e6944e9b_pushErr(_self_, _61018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1e83adeda:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1e93e61ca:;
			{
				return _1e6949c3c_buildUnsafe(_self_, _60939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1e93e6241:;
			{
				return jule::Any(_1e694992e_buildAnonFn(_self_, _60939_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1e93e6076:;
			{
				return jule::Any(_1e694b1a0_buildTypedStructLiteral(_self_, (*(_60939_tokens))), &__jule_any_type112);;
			}
		}
		else {
			_case_begin_1e83b1383:;
			{
				_1e6944e9b_pushErr(_self_, _61018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e83b2b6a:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _1e694bde8_getEnumerableParts(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL, (_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _66318_parts;;
	jule::Slice<_24305e4ae_Log> _66325_errors;;
	({
		__jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e6953619_parts(&(_66141_tokens), static_cast<jule::U64>(8LLU), true);
		_66318_parts = __jule_assign_result.__jule_result_arg0;
		_66325_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;;
}



inline jule::Ptr<_1e477e436_SliceExpr> _1e694c206_buildSlice(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _66833_tokens) {
	jule::Ptr<_1e477e436_SliceExpr> _66917_slc = jule::new_ptr<_1e477e436_SliceExpr>(_1e477e436_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _67417_parts = _1e694bde8_getEnumerableParts(_self_, _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1e4777d47_Expr>>::alloc(0LL, _67417_parts.len());
	{
		auto expr = &(_67417_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e93ea762:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d155596_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_1e93ea762;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_1e694e0e8_buildFromTokens(_self_, _68021_p));;
			}
			_iter_next_1e93ea762:;
			++it;
			goto _iter_begin_1e93ea762;
		}
		_iter_end_1e93ea762:;
	};
	return _66917_slc;;
}



inline jule::Ptr<_1e477eca5_IndexingExpr> _1e694c657_buildIndexing(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_20d155596_Token>> _69113_tokens, jule::Ptr<_20d155596_Token> _69135_errorToken) {
	jule::Ptr<_20d155596_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL, (_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_1e6944e9b_pushErr(_self_, _69135_errorToken, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e4777d47_Expr> _69817_expr = _1e694e0e8_buildFromTokens(_self_, _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e4777d47_Expr> _70217_index = _1e694e0e8_buildFromTokens(_self_, _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e477eca5_IndexingExpr>(_1e477eca5_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});;
}



inline jule::Ptr<_1e47803b0_SlicingExpr> _1e694cbeb_buildSlicing(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _71436_exprTokens, jule::Slice<jule::Ptr<_20d155596_Token>>* _71463_start, jule::Slice<jule::Ptr<_20d155596_Token>>* _71514_to, jule::Ptr<_20d155596_Token>* _71533_errorToken, jule::Ptr<_20d155596_Token> _71557_end) {
	jule::Ptr<_1e47803b0_SlicingExpr> _71617_slc = jule::new_ptr<_1e47803b0_SlicingExpr>(_1e47803b0_SlicingExpr{._field_Token=(*(_71533_errorToken)), ._field_End=_71557_end, ._field_Expr=_1e694e0e8_buildFromTokens(_self_, (*(_71436_exprTokens))), });;
	if (((*(_71463_start)).len() > 0LL)) {
		_71617_slc.get()._field_Start=_1e694e0e8_buildFromTokens(_self_, (*(_71463_start)));
	};
	if (((*(_71514_to)).len() > 0LL)) {
		_71617_slc.get()._field_To=_1e694e0e8_buildFromTokens(_self_, (*(_71514_to)));
	};
	return _71617_slc;;
}



inline jule::Any _1e694d009_buildBracketRange(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _73040_tokens) {
	jule::Ptr<_20d155596_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_20d155596_Token>> _73218_exprTokens;;
	jule::I64 _73230_rangeN = 0;;
	({
		__jule_tuple_sx_20d155596_Token__jule_tuple_int __jule_assign_result = _1e6950649_getRangeExprTokens(&(_73040_tokens));
		_73218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_73230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_73218_exprTokens.len() == 0LL)) {
		return jule::Any(_1e694c206_buildSlice(_self_, _73040_tokens), &__jule_any_type101);;
	} else if ((_73230_rangeN > 0LL)) {
		_1e6944e9b_pushErr(_self_, _73117_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_20d155596_Token>> _74717_splitTokens = _73040_tokens.slice(1LL, (_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_20d155596_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_20d155596_Token>> _74829_to;;
	({
		__jule_tuple_sx_20d155596_Token__jule_tuple_sx_20d155596_Token __jule_assign_result = _1e694ed63_splitDelim(&(_74717_splitTokens), static_cast<jule::U64>(11LLU));
		_74818_start = __jule_assign_result.__jule_result_arg0;
		_74829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return jule::Any(_1e694cbeb_buildSlicing(_self_, &(_73218_exprTokens), &(_74818_start), &(_74829_to), &(_73117_errorToken), _73040_tokens[(_73040_tokens.len() - 1LL)]), &__jule_any_type110);;
	};
	return jule::Any(_1e694c657_buildIndexing(_self_, _73218_exprTokens, _73040_tokens, _73117_errorToken), &__jule_any_type109);;
}



inline jule::Any _1e694d317_buildData(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _75533_tokens) {
	{
		auto _match_expr{ (*(_75533_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1e940750a:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1e9407593:;
			{
				return _1e6946002_buildSingle(_self_, (*(_75533_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1e9407609:;
			{
				if (((*(_75533_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(30LLU))) {
					return jule::Any(_1e6946310_buildCppLinkedIdent(_self_, _75533_tokens), &__jule_any_type86);;
				};
			}
		}
		_match_end_1e940730c:;
	};
	jule::Ptr<_20d155596_Token> _76717_token = (*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_76717_token.get()._field_Kind == jule::Str("...", 3)))) {
		return jule::Any(_1e6947663_buildVariadic(_self_, (*(_75533_tokens))), &__jule_any_type82);;
	};
	_76717_token=(*(_75533_tokens))[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e940a7a5:;
			{
				if ((((*(_75533_tokens)).len() > 1LL) && (_76717_token.get()._field_Kind == jule::Str("*", 1)))) {
					_76717_token=(*(_75533_tokens))[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U64>(34LLU)))) {
						return jule::Any(_1e6947047_buildType(_self_, _75533_tokens), &__jule_any_type95);;
					};
				};
				return jule::Any(_1e694661d_buildUnary(_self_, (*(_75533_tokens))), &__jule_any_type94);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e940a82c:;
			{
				if (((*(_75533_tokens)).len() < 3LL)) {
					goto _match_end_1e940a6c8;
				};
				if (((*(_75533_tokens)).len() > 3LL)) {
					jule::Ptr<_20d155596_Token> _78921_t = (*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_78921_t.get()._field_Kind == jule::Str(")", 1)))) {
						goto _match_end_1e940a6c8;
					};
				};
				jule::Ptr<_20d155596_Token> _79517_next = (*(_75533_tokens))[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_79517_next.get()._field_Kind != jule::Str("]", 1)))) {
					goto _match_end_1e940a6c8;
				};
				return jule::Any(_1e6947047_buildType(_self_, _75533_tokens), &__jule_any_type95);;
			}
		}
		_match_end_1e940a6c8:;
	};
	_76717_token=(*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1e940ad38:;
			{
				return _1e6947355_buildSubIdent(_self_, _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1e941128e:;
			{
				return jule::Any(_1e6947047_buildType(_self_, _75533_tokens), &__jule_any_type95);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e9411305:;
			{
				return _1e6947971_buildOpRight(_self_, _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e941136b:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1e9412aba:;
						{
							return _1e6949313_buildParenthesesRange(_self_, _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1e9412b42:;
						{
							return _1e694bada_buildBraceRange(_self_, _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1e9412bb9:;
						{
							return _1e694d009_buildBracketRange(_self_, (*(_75533_tokens)));;
						}
					}
					_match_end_1e94125c0:;
				};
			}
		}
		_match_end_1e940acd3:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		return jule::Any(_1e6947047_buildType(_self_, _75533_tokens), &__jule_any_type95);;
	};
	_1e6944e9b_pushErr(_self_, _76717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1e694d6be_buildBinop(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _83134_tokens, jule::I64 _83152_i) {
	jule::Ptr<_20d155596_Token> _83217_op = (*(_83134_tokens))[_83152_i];;
	jule::Slice<jule::Ptr<_20d155596_Token>> _83317_leftTokens = (*(_83134_tokens)).slice(0LL, _83152_i);;
	if ((_1e694e44a_isTypeOp(&(_83217_op.get()._field_Kind)) && _1e694e736_isTypeRange(&(_83317_leftTokens)))) {
		return jule::Any(_1e6947047_buildType(_self_, _83134_tokens), &__jule_any_type95);;
	};
	jule::Slice<jule::Ptr<_20d155596_Token>> _83817_rightTokens = (*(_83134_tokens)).slice((_83152_i + 1LL));;
	if ((_83317_leftTokens.len() == 0LL)) {
		_1e6944e9b_pushErr(_self_, (*(_83134_tokens))[_83152_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e69452ba_pushSuggestion(_self_, jule::Str("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83817_rightTokens.len() == 0LL)) {
		_1e6944e9b_pushErr(_self_, (*(_83134_tokens))[_83152_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e69452ba_pushSuggestion(_self_, jule::Str("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1e477b71e_BinopExpr>(_1e477b71e_BinopExpr{._field_Left=_1e694e0e8_buildFromTokens(_self_, _83317_leftTokens), ._field_Right=_1e694e0e8_buildFromTokens(_self_, _83817_rightTokens), ._field_Op=_83217_op}), &__jule_any_type115);;
}



inline jule::Any _1e694d9cc_build(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _85629_tokens) {
	jule::I64 _85713_i = _1e695010a_findLowestPrecOp(_85629_tokens);;
	if ((_85713_i == -1LL)) {
		return _1e694d317_buildData(_self_, _85629_tokens);;
	};
	return _1e694d6be_buildBinop(_self_, _85629_tokens, _85713_i);;
}



inline jule::Any _1e694dcda_buildKind(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _86433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _86518_parts;;
	jule::Slice<_24305e4ae_Log> _86525_errors;;
	({
		__jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e6953619_parts(_86433_tokens, static_cast<jule::U64>(8LLU), true);
		_86518_parts = __jule_assign_result.__jule_result_arg0;
		_86525_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86525_errors != nullptr)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_86525_errors);
		return nullptr;;
	} else if ((_86518_parts.len() > 1LL)) {
		return jule::Any(_1e69455c8_buildTuple(_self_, &(_86518_parts)), &__jule_any_type87);;
	};
	return _1e694d9cc_build(_self_, _86433_tokens);;
}



inline jule::Ptr<_1e4777d47_Expr> _1e694e0e8_buildFromTokens(_1e6944709_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _87538_tokens) {
	if ((_87538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e4777d47_Expr>(_1e4777d47_Expr{._field_Token=_87538_tokens[0LL], ._field_End=_87538_tokens[(_87538_tokens.len() - 1LL)], ._field_Kind=_1e694dcda_buildKind(_self_, &(_87538_tokens))});;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6944709_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e695100c_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1e6954b6a_stop(_1e695483a_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1e6954dce_stopped(_1e695483a_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1e6955297_pushErr(_1e695483a_parser* _self_, jule::Ptr<_20d155596_Token> _28126_token, jule::Str _28141_fmt, jule::Slice<jule::Any> _28154_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1e6953c9b_compilerErr(&(_28126_token), &(_28141_fmt), _28154_args));;
}



inline void _1e69555b6_pushSuggestion(_1e695483a_parser* _self_, jule::Str _28633_fmt, jule::Slice<jule::Any> _28646_args) {
	{
		_1e69541ca_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _28633_fmt, _28646_args);
	};
}



inline jule::Ptr<_1e4777d47_Expr> _1e69558c4_buildExpr(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _29034_tokens) {
	jule::Ptr<_1e6944709_exprBuilder> _29117_ep = jule::new_ptr<_1e6944709_exprBuilder>(_1e6944709_exprBuilder{._field_p=_self_});;
	jule::Ptr<_1e4777d47_Expr> _29417_expr = _1e694e0e8_buildFromTokens(_29117_ep.ptr(), (*(_29034_tokens)));;
	return _29417_expr;;
}



inline jule::Ptr<_1e474057e_Directive> _1e6955bd2_buildDirective(_1e695483a_parser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _29837_tokens) {
	if ((_29837_tokens.len() == 1LL)) {
		_1e6955297_pushErr(_self_, _29837_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_29837_tokens[1LL].get()._field_Column != (_29837_tokens[0LL].get()._field_Column + 1LL))) {
		_1e6955297_pushErr(_self_, _29837_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1e474057e_Directive>(_1e474057e_Directive{._field_Tag=_29837_tokens[1LL], ._field_Args=_29837_tokens.slice(2LL)});;
}



inline void _1e6955e57_pushDirective(_1e695483a_parser* _self_, jule::Ptr<_1e474057e_Directive> _31336_d) {
	if ((_31336_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9445a87:;
		if (it != expr_end) {
			jule::Ptr<_1e474057e_Directive> _31816_pd = *it;
			{
				if ((_31336_d.get()._field_Tag.get()._field_Kind == _31816_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1e9445a87:;
			++it;
			goto _iter_begin_1e9445a87;
		}
		_iter_end_1e9445a87:;
	};
	(*(_self_))._field_directives = jule::alloc_for_append((*(_self_))._field_directives,1);(*(_self_))._field_directives.__push(_31336_d);;
}



inline jule::Ptr<_1e47837ae_ScopeTree> _1e695630e_buildScope(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _32635_tokens, jule::Ptr<_20d155596_Token> _32657_end) {
	jule::Ptr<_1e47837ae_ScopeTree> _32717_s = _1e69367ea_newScope();;
	_32717_s.get()._field_End=_32657_end;
	_1e69381e2_scopeParser _32917_sp = _1e69381e2_scopeParser{._field_p=_self_, };;
	_1e6943c7a_build(&_32917_sp, _32635_tokens, &(_32717_s));
	return _32717_s;;
}



inline __jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool _1e6956760__buildType(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _33642_tokens, jule::I64* _33713_i, jule::Bool _33722_err) {
	__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1e696554e_typeBuilder _33817_tb = _1e696554e_typeBuilder{._field_p=_self_, ._field_tokens=(*(_33642_tokens)), ._field_i=_33713_i, ._field_err=_33722_err};;
	jule::Ptr<_1e4773826_TypeDecl> _34418_decl;;
	jule::Bool _34424_ok = false;;
	({
		__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69687e9_build(&_33817_tb);
		_34418_decl = __jule_assign_result.__jule_result_arg0;
		_34424_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _34418_decl;
	__jule_func_result.__jule_result_arg1 = _34424_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool _1e6956bb1_buildType(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _34941_tokens, jule::I64* _35013_i, jule::Bool _35022_err) {
	__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_20d155596_Token> _35113_token = (*(_34941_tokens))[(*(_35013_i))];;
	jule::Ptr<_1e4773826_TypeDecl> _35218_t;;
	jule::Bool _35221_ok = false;;
	({
		__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956760__buildType(_self_, _34941_tokens, _35013_i, _35022_err);
		_35218_t = __jule_assign_result.__jule_result_arg0;
		_35221_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_35022_err && (!(_35221_ok)))) {
		_1e6955297_pushErr(_self_.ptr(), _35113_token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _35218_t;
	__jule_func_result.__jule_result_arg1 = _35221_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1e4789ae5_TypeAliasDecl> _1e6956ebe_buildTypeAliasDecl(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _35943_tokens) {
	jule::I64 _36017_i = 1LL;;
	if ((_36017_i >= (*(_35943_tokens)).len())) {
		_1e6955297_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e4789ae5_TypeAliasDecl> _36517_tad = jule::new_ptr<_1e4789ae5_TypeAliasDecl>(_1e4789ae5_TypeAliasDecl{._field_Token=(*(_35943_tokens))[1LL], ._field_Ident=(*(_35943_tokens))[1LL].get()._field_Kind, });;
	jule::Ptr<_20d155596_Token> _36917_token = (*(_35943_tokens))[_36017_i];;
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e6955297_pushErr(_self_.ptr(), _36917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_36017_i)++;
	if ((_36017_i >= (*(_35943_tokens)).len())) {
		_1e6955297_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	_36917_token=(*(_35943_tokens))[_36017_i];
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1e6955297_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	(_36017_i)++;
	if ((_36017_i >= (*(_35943_tokens)).len())) {
		_1e6955297_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	jule::Ptr<_1e4773826_TypeDecl> _39018_t;;
	jule::Bool _39021_ok = false;;
	({
		__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType(_self_, _35943_tokens, (&(_36017_i)), true);
		_39018_t = __jule_assign_result.__jule_result_arg0;
		_39021_ok = __jule_assign_result.__jule_result_arg1;
	});
	_36517_tad.get()._field_Kind=_39018_t;
	if ((_39021_ok && (_36017_i < (*(_35943_tokens)).len()))) {
		_1e6955297_pushErr(_self_.ptr(), (*(_35943_tokens))[_36017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_36517_tad.get()._field_Public=_1e69644d7_isPub(&(_36517_tad.get()._field_Ident));
	return _36517_tad;;
}



inline void _1e69572dd_buildVarTypeAndExpr(jule::Ptr<_1e695483a_parser> _self_, jule::Ptr<_1e4786284_VarDecl>* _39944_v, jule::Slice<jule::Ptr<_20d155596_Token>>* _39962_tokens) {
	jule::I64 _40017_i = 0LL;;
	jule::Ptr<_20d155596_Token> _40117_tok = (*(_39962_tokens))[_40017_i];;
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40017_i)++;
		if (((_40017_i >= (*(_39962_tokens)).len()) || (((*(_39962_tokens))[_40017_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && ((*(_39962_tokens))[_40017_i].get()._field_Kind == jule::Str("=", 1))))) {
			_1e6955297_pushErr(_self_.ptr(), _40117_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1e4773826_TypeDecl> _40922_t;;
		jule::Bool _40925_ok = false;;
		({
			__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType(_self_, _39962_tokens, (&(_40017_i)), true);
			_40922_t = __jule_assign_result.__jule_result_arg0;
			_40925_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_40925_ok) {
			(*(_39944_v)).get()._field_Kind=_40922_t;
			if ((_40017_i >= (*(_39962_tokens)).len())) {
				return;;
			};
			_40117_tok=(*(_39962_tokens))[_40017_i];
		};
	};
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((_40117_tok.get()._field_Kind != jule::Str("=", 1))) {
			_1e6955297_pushErr(_self_.ptr(), _40117_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_20d155596_Token>> _42421_exprTokens = (*(_39962_tokens)).slice((_40017_i + 1LL));;
		if ((_42421_exprTokens.len() == 0LL)) {
			_1e6955297_pushErr(_self_.ptr(), _40117_tok, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return;;
		};
		(*(_39944_v)).get()._field_Expr=_1e69558c4_buildExpr(_self_, &(_42421_exprTokens));
	} else {
		_1e6955297_pushErr(_self_.ptr(), _40117_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1e695760c_buildVarCommon(jule::Ptr<_1e695483a_parser> _self_, jule::Ptr<_1e4786284_VarDecl>* _43539_v, jule::Slice<jule::Ptr<_20d155596_Token>> _43556_tokens) {
	(*(_43539_v)).get()._field_Token=_43556_tokens[0LL];
	if (((*(_43539_v)).get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e6955297_pushErr(_self_.ptr(), (*(_43539_v)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*(_43539_v)).get()._field_Ident=(*(_43539_v)).get()._field_Token.get()._field_Kind;
	(*(_43539_v)).get()._field_Public=_1e69644d7_isPub(&((*(_43539_v)).get()._field_Ident));
	(*(_43539_v)).get()._field_Kind=nullptr;
	if ((_43556_tokens.len() > 1LL)) {
		_43556_tokens=_43556_tokens.slice(1LL);
		_1e69572dd_buildVarTypeAndExpr(_self_, _43539_v, &(_43556_tokens));
	};
}



inline void _1e69579c5_buildVarBegin(_1e695483a_parser* _self_, jule::Ptr<_1e4786284_VarDecl>* _45137_v, jule::I64* _45155_i, jule::Slice<jule::Ptr<_20d155596_Token>>* _45164_tokens) {
	jule::Ptr<_20d155596_Token> _45213_tok = (*(_45164_tokens))[(*(_45155_i))];;
	{
		auto &_match_expr{ _45213_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1e92b7b07:;
			{
				(*(_45137_v)).get()._field_Statically=true;
				goto _case_begin_1e92b7332;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1e92b7332:;
			{
				((*(_45155_i)))++;
				if (((*(_45155_i)) >= (*(_45164_tokens)).len())) {
					_1e6955297_pushErr(_self_, _45213_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*(_45164_tokens))[(*(_45155_i))].get()._field_Id == static_cast<jule::U64>(35LLU))) {
					(*(_45137_v)).get()._field_Mutable=true;
					((*(_45155_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1e92b7398:;
			{
				((*(_45155_i)))++;
				(*(_45137_v)).get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1e92b7277:;
			{
				_1e6955297_pushErr(_self_, _45213_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1e92b7101:;
	};
	if (((*(_45155_i)) >= (*(_45164_tokens)).len())) {
		_1e6955297_pushErr(_self_, _45213_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1e4786284_VarDecl> _1e6957cd3_buildVar(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _48132_tokens) {
	jule::I64 _48217_i = 0LL;;
	jule::Ptr<_1e4786284_VarDecl> _48317_v = jule::new_ptr<_1e4786284_VarDecl>(_1e4786284_VarDecl{._field_Token=_48132_tokens[0LL], });;
	_1e69579c5_buildVarBegin(_self_.ptr(), &(_48317_v), &(_48217_i), &(_48132_tokens));
	if ((_48217_i >= _48132_tokens.len())) {
		return nullptr;;
	};
	_48132_tokens=_48132_tokens.slice(_48217_i);
	if (((_48132_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_48132_tokens[0LL].get()._field_Kind == jule::Str("&", 1)))) {
		_48317_v.get()._field_Reference=true;
		if ((_48132_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_48132_tokens=_48132_tokens.slice(1LL);
	};
	_1e695760c_buildVarCommon(_self_, &(_48317_v), _48132_tokens);
	return _48317_v;;
}



inline jule::Ptr<_1e4780b1e_GenericDecl> _1e69580e1_buildGeneric(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _50337_tokens) {
	jule::Ptr<_1e4780b1e_GenericDecl> _50417_g = jule::new_ptr<_1e4780b1e_GenericDecl>(_1e4780b1e_GenericDecl{._field_Token=(*(_50337_tokens))[0LL], });;
	if ((_50417_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e6955297_pushErr(_self_.ptr(), _50417_g.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_50417_g.get()._field_Ident=_50417_g.get()._field_Token.get()._field_Kind;
	if (((*(_50337_tokens)).len() > 1LL)) {
		if (((*(_50337_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_1e6955297_pushErr(_self_.ptr(), (*(_50337_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_50337_tokens)).len() == 2LL)) {
			_1e6955297_pushErr(_self_.ptr(), (*(_50337_tokens))[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_20d155596_Token>> _52121_constraintTokens = (*(_50337_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _52222_parts;;
		jule::Slice<_24305e4ae_Log> _52229_errors;;
		({
			__jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e695322e_partsKind(&(_52121_constraintTokens), jule::Str("|", 1), true);
			_52222_parts = __jule_assign_result.__jule_result_arg0;
			_52229_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_52229_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52229_errors);
			return nullptr;;
		};
		_50417_g.get()._field_Constraint=jule::new_ptr<_1e478069b_Constraint>(_1e478069b_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1e4773826_TypeDecl>>::alloc(0LL, _52222_parts.len())});
		{
			auto expr = &(_52222_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e92c484a:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_20d155596_Token>> _52825_part = *it;
				{
					jule::I64 _52925_i = 0LL;;
					jule::Ptr<_1e4773826_TypeDecl> _53026_kind;;
					({
						__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType(_self_, &(_52825_part), (&(_52925_i)), true);
						_53026_kind = __jule_assign_result.__jule_result_arg0;
					});
					_50417_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50417_g.get()._field_Constraint.get()._field_Mask,1);_50417_g.get()._field_Constraint.get()._field_Mask.__push(_53026_kind);;
					if ((_52925_i < _52825_part.len())) {
						_1e6955297_pushErr(_self_.ptr(), _52825_part[_52925_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1e92c484a:;
				++it;
				goto _iter_begin_1e92c484a;
			}
			_iter_end_1e92c484a:;
		};
	};
	return _50417_g;;
}



inline jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>> _1e6958498_buildGenerics(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _54038_tokens, jule::Ptr<_20d155596_Token>* _54057_errorToken) {
	if (((*(_54038_tokens)).len() == 0LL)) {
		_1e6955297_pushErr(_self_.ptr(), (*(_54057_errorToken)), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _54618_parts;;
	jule::Slice<_24305e4ae_Log> _54625_errors;;
	({
		__jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e6953619_parts(_54038_tokens, static_cast<jule::U64>(8LLU), true);
		_54618_parts = __jule_assign_result.__jule_result_arg0;
		_54625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54625_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54625_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>> _55217_generics = jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>>::alloc(0LL, _54618_parts.len());;
	{
		auto expr = &(_54618_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e92c893c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d155596_Token>> _55321_part = *it;
			{
				_55217_generics = jule::alloc_for_append(_55217_generics,1);_55217_generics.__push(_1e69580e1_buildGeneric(_self_, &(_55321_part)));;
			}
			_iter_next_1e92c893c:;
			++it;
			goto _iter_begin_1e92c893c;
		}
		_iter_end_1e92c893c:;
	};
	return _55217_generics;;
}



inline jule::Ptr<_1e4783e85_ParamDecl> _1e69587a6_buildSelfParam(_1e695483a_parser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _56037_tokens) {
	if ((_56037_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1e4783e85_ParamDecl> _56517_param = jule::new_ptr<_1e4783e85_ParamDecl>();;
	jule::I64 _56817_i = 0LL;;
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_56517_param.get()._field_Mutable=true;
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1e6955297_pushErr(_self_, _56037_tokens[(_56817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Kind == jule::Str("&", 1))) {
		_56517_param.get()._field_Ident=jule::Str("&", 1);
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1e6955297_pushErr(_self_, _56037_tokens[(_56817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(27LLU))) {
		_56517_param.get()._field_Ident+=jule::Str("self", 4);
		_56517_param.get()._field_Token=_56037_tokens[_56817_i];
		(_56817_i)++;
		if ((_56817_i < _56037_tokens.len())) {
			_1e6955297_pushErr(_self_, _56037_tokens[_56817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	return _56517_param;;
}



inline void _1e6958b6e_paramTypeBegin(_1e695483a_parser* _self_, jule::Ptr<_1e4783e85_ParamDecl>* _59938_param, jule::I64* _59962_i, jule::Slice<jule::Ptr<_20d155596_Token>>* _59971_tokens) {
	for (; ((*(_59962_i)) < (*(_59971_tokens)).len()); ((*(_59962_i)))++) {
		{
			jule::Ptr<_20d155596_Token> _60117_token = (*(_59971_tokens))[(*(_59962_i))];;
			if ((_60117_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60117_token.get()._field_Kind != jule::Str("...", 3))) {
				return;;
			};
			if ((*(_59938_param)).get()._field_Variadic) {
				_1e6955297_pushErr(_self_, _60117_token, jule::Str("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1e92d0834;
			};
			(*(_59938_param)).get()._field_Variadic=true;
		}
	_iter_next_1e92d0834:;
	}
	_iter_end_1e92d0834:;;
}



inline void _1e6958e8d_buildParamType(jule::Ptr<_1e695483a_parser> _self_, jule::Ptr<_1e4783e85_ParamDecl>* _61639_param, jule::Slice<jule::Ptr<_20d155596_Token>>* _61663_tokens) {
	jule::I64 _61717_i = 0LL;;
	_1e6958b6e_paramTypeBegin(_self_.ptr(), _61639_param, &(_61717_i), _61663_tokens);
	if ((_61717_i >= (*(_61663_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType(_self_, _61663_tokens, (&(_61717_i)), true);
		(*(_61639_param)).get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_61717_i < (*(_61663_tokens)).len())) {
		_1e6955297_pushErr(_self_.ptr(), (*(_61663_tokens))[_61717_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1e69592ac_buildParamBody(jule::Ptr<_1e695483a_parser> _self_, jule::Ptr<_1e4783e85_ParamDecl>* _62939_param, jule::Slice<jule::Ptr<_20d155596_Token>> _62962_tokens) {
	jule::Ptr<_20d155596_Token> _63017_tok = _62962_tokens[0LL];;
	(*(_62939_param)).get()._field_Ident=_63017_tok.get()._field_Kind;
	if ((_62962_tokens.len() == 1LL)) {
		return;;
	} else if ((_62962_tokens.len() < 3LL)) {
		_1e6955297_pushErr(_self_.ptr(), _63017_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if ((_62962_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1e6958e8d_buildParamType(_self_, _62939_param, &(_62962_tokens));
		return;;
	};
	_62962_tokens=_62962_tokens.slice(2LL);
	_1e6958e8d_buildParamType(_self_, _62939_param, &(_62962_tokens));
}



inline jule::Ptr<_1e4783e85_ParamDecl> _1e69595ba_buildParam(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _64734_tokens) {
	jule::Ptr<_1e4783e85_ParamDecl> _64817_param = jule::new_ptr<_1e4783e85_ParamDecl>(_1e4783e85_ParamDecl{._field_Token=_64734_tokens[0LL], });;
	if ((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_64817_param.get()._field_Mutable=true;
		if ((_64734_tokens.len() == 1LL)) {
			_1e6955297_pushErr(_self_.ptr(), _64734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_64734_tokens=_64734_tokens.slice(1LL);
		_64817_param.get()._field_Token=_64734_tokens[0LL];
	};
	if ((_64734_tokens.len() >= 3LL)) {
		if (((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64817_param.get()._field_Token.get()._field_Kind == jule::Str("&", 1)))) {
			if ((_64734_tokens.len() == 1LL)) {
				_1e6955297_pushErr(_self_.ptr(), _64734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_64734_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_64734_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_64817_param.get()._field_Reference=true;
				_64734_tokens=_64734_tokens.slice(1LL);
				_64817_param.get()._field_Token=_64734_tokens[0LL];
			};
		};
	};
	if ((_64817_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_64817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1e6958e8d_buildParamType(_self_, &(_64817_param), &(_64734_tokens));
	} else {
		_1e69592ac_buildParamBody(_self_, &(_64817_param), _64734_tokens);
	};
	return _64817_param;;
}



inline void _1e6959840_checkParams(_1e695483a_parser* _self_, jule::Slice<jule::Ptr<_1e4783e85_ParamDecl>>* _69035_params) {
	{
		auto expr = _69035_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e92de898:;
		if (it != expr_end) {
			jule::Ptr<_1e4783e85_ParamDecl> _69121_param = *it;
			{
				if ((_1e47842e8_IsSelf(_69121_param.ptr()) || (_69121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1e92de898;
				};
				if ((_69121_param.get()._field_Token == nullptr)) {
					_1e6955297_pushErr(_self_, _69121_param.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
				} else {
					_69121_param.get()._field_Kind=jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1e4773ddc_IdentTypeDecl>(_1e4773ddc_IdentTypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Ident=_69121_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type19)});
					_69121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1e92de898:;
			++it;
			goto _iter_begin_1e92de898;
		}
		_iter_end_1e92de898:;
	};
}



inline jule::Slice<jule::Ptr<_1e4783e85_ParamDecl>> _1e6959be7_buildParams(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _71036_tokens, jule::Bool _71054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _71118_parts;;
	jule::Slice<_24305e4ae_Log> _71125_errs;;
	({
		__jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e6953619_parts(_71036_tokens, static_cast<jule::U64>(8LLU), true);
		_71118_parts = __jule_assign_result.__jule_result_arg0;
		_71125_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71125_errs);
	if ((_71118_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e4783e85_ParamDecl>> _71717_params = nullptr;;
	if ((_71054_method && (_71118_parts.len() > 0LL))) {
		jule::Ptr<_1e4783e85_ParamDecl> _71921_param = _1e69587a6_buildSelfParam(_self_.ptr(), _71118_parts[0LL]);;
		if (((_71921_param != nullptr) && _1e47842e8_IsSelf(_71921_param.ptr()))) {
			_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_71921_param);;
			_71118_parts=_71118_parts.slice(1LL);
		};
	};
	{
		auto expr = &(_71118_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e92e3eeb:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d155596_Token>> _72621_part = *it;
			{
				jule::Ptr<_1e4783e85_ParamDecl> _72721_param = _1e69595ba_buildParam(_self_, _72621_part);;
				if ((_72721_param != nullptr)) {
					_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_72721_param);;
				};
			}
			_iter_next_1e92e3eeb:;
			++it;
			goto _iter_begin_1e92e3eeb;
		}
		_iter_end_1e92e3eeb:;
	};
	_1e6959840_checkParams(_self_.ptr(), &(_71717_params));
	return _71717_params;;
}



inline __jule_tuple_x_1e4776939_RetTypeDecl__jule_tuple_bool _1e695a09e_buildMultiRetType(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _73742_tokens, jule::I64* _73765_i) {
	__jule_tuple_x_1e4776939_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1e4776939_RetTypeDecl>();
	((*(_73765_i)))++;
	if (((*(_73765_i)) >= (*(_73742_tokens)).len())) {
		((*(_73765_i)))--;
		({
			__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType(_self_, _73742_tokens, (&((*(_73765_i)))), false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_73765_i)))--;
	jule::Slice<jule::Ptr<_20d155596_Token>> _74717_rangeTokens = _1e6952a9c_range(_73765_i, jule::Str("(", 1), jule::Str(")", 1), _73742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _74918_parts;;
	jule::Slice<_24305e4ae_Log> _74925_errs;;
	({
		__jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e6953619_parts(&(_74717_rangeTokens), static_cast<jule::U64>(8LLU), true);
		_74918_parts = __jule_assign_result.__jule_result_arg0;
		_74925_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_74925_errs);
	if ((_74918_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1e4773826_TypeDecl>> _75517_types = jule::Slice<jule::Ptr<_1e4773826_TypeDecl>>::alloc(0LL, _74918_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_20d155596_Token>>::alloc(0LL, _74918_parts.len());
	{
		auto expr = &(_74918_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e92ea299:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d155596_Token>> _75721_part = *it;
			{
				jule::Ptr<_20d155596_Token> _75821_token = _75721_part[0LL];;
				jule::I64 _75921_offset = 0LL;;
				if ((_75721_part.len() > 1LL)) {
					_75821_token=_75721_part[1LL];
					if ((_75821_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_75921_offset=2LL;
						if ((_75721_part.len() < 3LL)) {
							_1e6955297_pushErr(_self_.ptr(), _75821_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1e92ea299;
						};
					};
				};
				_75821_token=_75721_part[0LL];
				if ((_75921_offset != 2LL)) {
					jule::Ptr<_20d155596_Token> _77525_newToken = jule::new_ptr<_20d155596_Token>((*(_75821_token)));;
					_77525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_77525_newToken);;
				} else {
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_75821_token);;
				};
				jule::Ptr<_1e4773826_TypeDecl> _78222_tk;;
				({
					__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType(_self_, &(_75721_part), (&(_75921_offset)), true);
					_78222_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_75921_offset < _75721_part.len())) {
					_1e6955297_pushErr(_self_.ptr(), _75721_part[_75921_offset], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_75517_types = jule::alloc_for_append(_75517_types,1);_75517_types.__push(_78222_tk);;
			}
			_iter_next_1e92ea299:;
			++it;
			goto _iter_begin_1e92ea299;
		}
		_iter_end_1e92ea299:;
	};
	if ((_75517_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Token=(*(_73742_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1e47753b6_TupleTypeDecl>(_1e47753b6_TupleTypeDecl{._field_Types=_75517_types}), &__jule_any_type81)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_75517_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1e4776939_RetTypeDecl__jule_tuple_bool _1e695a456_buildRetType(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _80537_tokens, jule::I64* _80560_i) {
	__jule_tuple_x_1e4776939_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1e4776939_RetTypeDecl>();
	if (((*(_80560_i)) >= (*(_80537_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_20d155596_Token> _81117_token = (*(_80537_tokens))[(*(_80560_i))];;
	{
		auto &_match_expr{ _81117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e930389b:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("{", 1))) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e9303912:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("=", 1))) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1e9303978:;
			{
				if ((((*(_80560_i)) + 1LL) >= (*(_80537_tokens)).len())) {
					_1e6955297_pushErr(_self_.ptr(), _81117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_80560_i)))++;
				_81117_token=(*(_80537_tokens))[(*(_80560_i))];
				if ((_81117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81117_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1e93062a5:;
							{
								({
									__jule_tuple_x_1e4776939_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1e695a09e_buildMultiRetType(_self_, _80537_tokens, _80560_i);
									__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
									__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
								});
								return __jule_func_result;;
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1e930631b:;
							{
								_1e6955297_pushErr(_self_.ptr(), _81117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
								return __jule_func_result;;
							}
						}
						_match_end_1e93061ea:;
					};
				};
				({
					__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType(_self_, _80537_tokens, (&((*(_80560_i)))), true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1e930379c:;
	};
	((*(_80560_i)))++;
	_1e6955297_pushErr(_self_.ptr(), _81117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1e47852a5_FnDecl> _1e695a8a7_buildFnPrototype(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _85041_tokens, jule::I64* _85064_i, jule::Bool _85072_method) {
	jule::Ptr<_1e47852a5_FnDecl> _85117_f = jule::new_ptr<_1e47852a5_FnDecl>(_1e47852a5_FnDecl{._field_Token=(*(_85041_tokens))[(*(_85064_i))], });;
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_85117_f.get()._field_Statically=true;
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_1e6955297_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=(*(_85041_tokens))[(*(_85064_i))];
	};
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_85117_f.get()._field_Unsafety=true;
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_1e6955297_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=(*(_85041_tokens))[(*(_85064_i))];
	};
	((*(_85064_i)))++;
	if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
		_1e6955297_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d155596_Token> _88413_tok = (*(_85041_tokens))[(*(_85064_i))];;
	if ((_88413_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_1e6955297_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Ident=_88413_tok.get()._field_Kind;
	} else {
		_85117_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_20d155596_Token> _89613_errorToken = (*(_85041_tokens))[(*(_85064_i))];;
	jule::Slice<jule::Ptr<_20d155596_Token>> _89717_genericsTokens = _1e6952a9c_range(_85064_i, jule::Str("[", 1), jule::Str("]", 1), _85041_tokens);;
	if ((_89717_genericsTokens != nullptr)) {
		_85117_f.get()._field_Generics=_1e6958498_buildGenerics(_self_, &(_89717_genericsTokens), &(_89613_errorToken));
	};
	if (((*(_85041_tokens))[(*(_85064_i))].get()._field_Kind != jule::Str("(", 1))) {
		_1e6955297_pushErr(_self_.ptr(), (*(_85041_tokens))[(*(_85064_i))], jule::Str("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20d155596_Token>> _90717_paramsToks = _1e6952a9c_range(_85064_i, jule::Str("(", 1), jule::Str(")", 1), _85041_tokens);;
	if ((_90717_paramsToks.len() > 0LL)) {
		_85117_f.get()._field_Params=_1e6959be7_buildParams(_self_, &(_90717_paramsToks), _85072_method);
	};
	if (((*(_85064_i)) < (*(_85041_tokens)).len())) {
		jule::Ptr<_20d155596_Token> _91317_token = (*(_85041_tokens))[(*(_85064_i))];;
		if (((_91317_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_91317_token.get()._field_Kind == jule::Str("!", 1)))) {
			_85117_f.get()._field_Exceptional=true;
			((*(_85064_i)))++;
		};
	};
	_85117_f.get()._field_Public=_1e69644d7_isPub(&(_85117_f.get()._field_Ident));
	({
		__jule_tuple_x_1e4776939_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1e695a456_buildRetType(_self_, _85041_tokens, _85064_i);
		_85117_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _85117_f;;
}



inline jule::Ptr<_1e47852a5_FnDecl> _1e695ad08_buildFn(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _92732_tokens, jule::Bool _92750_method, jule::Bool _92764_prototype) {
	jule::I64 _92817_i = 0LL;;
	jule::Ptr<_1e47852a5_FnDecl> _92917_f = _1e695a8a7_buildFnPrototype(_self_, _92732_tokens, &(_92817_i), _92750_method);;
	if (_92764_prototype) {
		if ((_92817_i < (*(_92732_tokens)).len())) {
			_1e6955297_pushErr(_self_.ptr(), (*(_92732_tokens))[(_92817_i + 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _92917_f;;
	} else if ((_92917_f == nullptr)) {
		return _92917_f;;
	};
	if ((_92817_i >= (*(_92732_tokens)).len())) {
		_1e6954b6a_stop(_self_.ptr());
		_1e6955297_pushErr(_self_.ptr(), _92917_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20d155596_Token>> _94517_blockTokens = _1e6952a9c_range(&(_92817_i), jule::Str("{", 1), jule::Str("}", 1), _92732_tokens);;
	if ((_94517_blockTokens != nullptr)) {
		_92917_f.get()._field_Scope=_1e695630e_buildScope(_self_, &(_94517_blockTokens), (*(_92732_tokens))[(_92817_i - 1LL)]);
		_92917_f.get()._field_Scope.get()._field_Unsafety=_92917_f.get()._field_Unsafety;
		if ((_92817_i < (*(_92732_tokens)).len())) {
			_1e6955297_pushErr(_self_.ptr(), (*(_92732_tokens))[_92817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1e6954b6a_stop(_self_.ptr());
		_1e6955297_pushErr(_self_.ptr(), _92917_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _92917_f;;
}



inline jule::Slice<jule::Ptr<_20d155596_Token>> _1e695b116_getUseDeclSelectors(_1e695483a_parser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _96142_tokens) {
	jule::I64 _96217_i = 0LL;;
	_96142_tokens=_1e6952a9c_range(&(_96217_i), jule::Str("{", 1), jule::Str("}", 1), &(_96142_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _96418_parts;;
	jule::Slice<_24305e4ae_Log> _96425_errs;;
	({
		__jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e6953619_parts(&(_96142_tokens), static_cast<jule::U64>(8LLU), true);
		_96418_parts = __jule_assign_result.__jule_result_arg0;
		_96425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96425_errs.len() > 0LL)) {
		(*(_self_))._field_errors=jule::append((*(_self_))._field_errors,_96425_errs);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20d155596_Token>> _97017_selectors = jule::Slice<jule::Ptr<_20d155596_Token>>::alloc(0LL, _96418_parts.len());;
	{
		auto expr = &(_96418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e931c189:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d155596_Token>> _97121_part = *it;
			{
				if ((_97121_part.len() > 1LL)) {
					_1e6955297_pushErr(_self_, _97121_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_20d155596_Token> _97521_tok = _97121_part[0LL];;
				if (((_97521_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97521_tok.get()._field_Id != static_cast<jule::U64>(27LLU)))) {
					_1e6955297_pushErr(_self_, _97521_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1e69555b6_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1e931c189;
				};
				_97017_selectors = jule::alloc_for_append(_97017_selectors,1);_97017_selectors.__push(_97521_tok);;
			}
			_iter_next_1e931c189:;
			++it;
			goto _iter_begin_1e931c189;
		}
		_iter_end_1e931c189:;
	};
	return _97017_selectors;;
}



inline void _1e695b435_buildCppUseDecl(_1e695483a_parser* _self_, jule::Ptr<_1e478aed1_UseDecl>* _98639_decl, jule::Slice<jule::Ptr<_20d155596_Token>>* _98656_tokens) {
	if (((*(_98656_tokens)).len() > 1LL)) {
		_1e6955297_pushErr(_self_, (*(_98656_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d155596_Token> _99013_token = (*(_98656_tokens))[0LL];;
	if (((_99013_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99013_token.get()._field_Kind[0LL] != '`') && (_99013_token.get()._field_Kind[0LL] != '\"')))) {
		_1e6955297_pushErr(_self_, _99013_token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_98639_decl)).get()._field_CppLinked=true;
	(*(_98639_decl)).get()._field_LinkPath=_99013_token.get()._field_Kind.slice(1LL, (_99013_token.get()._field_Kind.len() - 1LL));
}



inline void _1e695b754_buildStdUseDecl(_1e695483a_parser* _self_, jule::Ptr<_1e478aed1_UseDecl>* _99939_decl, jule::Slice<jule::Ptr<_20d155596_Token>> _99959_tokens) {
	(*(_99939_decl)).get()._field_Std=true;
	jule::Ptr<_20d155596_Token> _100217_token = _99959_tokens[0LL];;
	if ((_99959_tokens.len() < 3LL)) {
		_1e6955297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	_99959_tokens=_99959_tokens.slice(2LL);
	_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1e93257d0:;
			{
				_1e6955297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e9325857:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("}", 1))) {
					_1e6955297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_20d155596_Token>> _101921_selectors = nullptr;;
				({
					__jule_tuple_sx_20d155596_Token__jule_tuple_sx_20d155596_Token __jule_assign_result = _1e6952d44_rangeLast(&(_99959_tokens));
					_99959_tokens = __jule_assign_result.__jule_result_arg0;
					_101921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_99939_decl)).get()._field_Selected=_1e695b116_getUseDeclSelectors(_self_, _101921_selectors);
				if ((_99959_tokens.len() == 0LL)) {
					_1e6955297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1e6955297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1e6955297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e93258ce:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("*", 1))) {
					_1e6955297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1e6955297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1e6955297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1e6955297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_99939_decl)).get()._field_Full=true;
			}
		}
		_match_end_1e9325758:;
	};
	(*(_99939_decl)).get()._field_LinkPath=(jule::Str("std::", 5) + _1e6954472_tokstoa(&(_99959_tokens)));
}



inline void _1e695ba73_buildIdentUseDecl(_1e695483a_parser* _self_, jule::Ptr<_1e478aed1_UseDecl>* _106141_decl, jule::Slice<jule::Ptr<_20d155596_Token>> _106161_tokens) {
	(*(_106141_decl)).get()._field_Std=false;
	jule::Ptr<_20d155596_Token> _106417_token = _106161_tokens[(_106161_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1e932edc2:;
			{
				_1e6955297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e9330499:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("}", 1))) {
					_1e6955297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_20d155596_Token>> _107521_selectors = nullptr;;
				({
					__jule_tuple_sx_20d155596_Token__jule_tuple_sx_20d155596_Token __jule_assign_result = _1e6952d44_rangeLast(&(_106161_tokens));
					_106161_tokens = __jule_assign_result.__jule_result_arg0;
					_107521_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_106141_decl)).get()._field_Selected=_1e695b116_getUseDeclSelectors(_self_, _107521_selectors);
				if ((_106161_tokens.len() == 0LL)) {
					_1e6955297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1e6955297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1e6955297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e9330642:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("*", 1))) {
					_1e6955297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1e6955297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1e6955297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1e6955297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_106141_decl)).get()._field_Full=true;
			}
		}
		_match_end_1e9330444:;
	};
	(*(_106141_decl)).get()._field_LinkPath=_1e6954472_tokstoa(&(_106161_tokens));
}



inline void _1e695bd92_parseUseDecl(_1e695483a_parser* _self_, jule::Ptr<_1e478aed1_UseDecl>* _112436_decl, jule::Slice<jule::Ptr<_20d155596_Token>> _112456_tokens) {
	if ((*(_112436_decl)).get()._field_CppLinked) {
		_1e695b435_buildCppUseDecl(_self_, _112436_decl, &(_112456_tokens));
		return;;
	};
	jule::Ptr<_20d155596_Token> _113017_token = _112456_tokens[0LL];;
	if ((_113017_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e6955297_pushErr(_self_, _113017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_112456_tokens.len() > 2LL) && (_112456_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		(*(_112436_decl)).get()._field_Alias=_113017_token.get()._field_Kind;
		if ((_112456_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1e6955297_pushErr(_self_, _113017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_1e69555b6_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		_112456_tokens=_112456_tokens.slice(2LL);
		_113017_token=_112456_tokens[0LL];
	};
	;
	{
		
		if ((_113017_token.get()._field_Kind == jule::Str("std", 3))) {
			_case_begin_1e933b74c:;
			{
				_1e695b754_buildStdUseDecl(_self_, _112436_decl, _112456_tokens);
			}
		}
		else {
			_case_begin_1e933d81a:;
			{
				_1e695ba73_buildIdentUseDecl(_self_, _112436_decl, _112456_tokens);
			}
		}
		_match_end_1e933d7a4:;
	};
}



inline jule::Ptr<_1e478aed1_UseDecl> _1e695c249_buildUseDecl(_1e695483a_parser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _115835_tokens, jule::Bool _115853_cpp_linked) {
	jule::Ptr<_1e478aed1_UseDecl> _115917_decl = jule::new_ptr<_1e478aed1_UseDecl>(_1e478aed1_UseDecl{._field_Token=_115835_tokens[0LL], ._field_CppLinked=_115853_cpp_linked, });;
	if ((_115835_tokens.len() < 2LL)) {
		_1e6955297_pushErr(_self_, _115917_decl.get()._field_Token, jule::Str("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_115835_tokens=_115835_tokens.slice(1LL);
	_1e695bd92_parseUseDecl(_self_, &(_115917_decl), _115835_tokens);
	return _115917_decl;;
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e695c601_buildTypeEnumItemKind(jule::Ptr<_1e695483a_parser> _self_, jule::I64* _117246_i, jule::Slice<jule::Ptr<_20d155596_Token>>* _117259_tokens) {
	jule::I64 _117317_braceN = 0LL;;
	jule::I64 _117413_exprStart = (*(_117246_i));;
	for (; ((*(_117246_i)) < (*(_117259_tokens)).len()); ((*(_117246_i)))++) {
		{
			jule::Ptr<_20d155596_Token> _117617_t = (*(_117259_tokens))[(*(_117246_i))];;
			if ((_117617_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _117617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1e93438ca:;
						{
							(_117317_braceN)++;
							goto _iter_next_1e9342445;
						}
					}
					else {
						_case_begin_1e93434ce:;
						{
							(_117317_braceN)--;
						}
					}
					_match_end_1e93432c0:;
				};
			};
			if ((_117317_braceN > 0LL)) {
				goto _iter_next_1e9342445;
			};
			if (((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || (((*(_117246_i)) + 1LL) >= (*(_117259_tokens)).len()))) {
				jule::Slice<jule::Ptr<_20d155596_Token>> _119225_kindTokens = nullptr;;
				if ((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119225_kindTokens=(*(_117259_tokens)).slice(_117413_exprStart, (*(_117246_i)));
				} else {
					_119225_kindTokens=(*(_117259_tokens)).slice(_117413_exprStart);
				};
				jule::I64 _119825_j = 0LL;;
				jule::Ptr<_1e4773826_TypeDecl> _119926_kind;;
				({
					__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType(_self_, &(_119225_kindTokens), (&(_119825_j)), true);
					_119926_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_119825_j < _119225_kindTokens.len())) {
					_1e6955297_pushErr(_self_.ptr(), _119225_kindTokens[_119825_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _119926_kind;;
			};
		}
	_iter_next_1e9342445:;
	}
	_iter_end_1e9342445:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1e478c983_TypeEnumItemDecl>> _1e695c90e_buildTypeEnumItems(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _120943_tokens) {
	jule::Slice<jule::Ptr<_1e478c983_TypeEnumItemDecl>> _121017_items = jule::Slice<jule::Ptr<_1e478c983_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121117_i = 0LL;;
	for (; (_121117_i < (*(_120943_tokens)).len()); (_121117_i)++) {
		{
			jule::Ptr<_20d155596_Token> _121321_t = (*(_120943_tokens))[_121117_i];;
			jule::Ptr<_1e478c983_TypeEnumItemDecl> _121421_item = jule::new_ptr<_1e478c983_TypeEnumItemDecl>();;
			_121421_item.get()._field_Token=_121321_t;
			if (((_121421_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (((*(_120943_tokens)).len() - _121117_i) > 2LL))) {
				_121421_item.get()._field_Ident=_121421_item.get()._field_Token.get()._field_Kind;
				_121321_t=(*(_120943_tokens))[(_121117_i + 1LL)];
				if ((_121321_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121117_i+=2LL;
					if (((_121117_i >= (*(_120943_tokens)).len()) || ((*(_120943_tokens))[_121117_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_1e6955297_pushErr(_self_.ptr(), _121321_t, jule::Str("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1e9348182;
					};
				};
			};
			_121421_item.get()._field_Kind=_1e695c601_buildTypeEnumItemKind(_self_, &(_121117_i), _120943_tokens);
			_121017_items = jule::alloc_for_append(_121017_items,1);_121017_items.__push(_121421_item);;
		}
	_iter_next_1e9348182:;
	}
	_iter_end_1e9348182:;;
	return _121017_items;;
}



inline jule::Ptr<_1e478d08d_TypeEnumDecl> _1e695cc1c_buildTypeEnumDecl(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _123342_tokens) {
	jule::I64 _123417_i = 1LL;;
	jule::Ptr<_1e478d08d_TypeEnumDecl> _123517_e = jule::new_ptr<_1e478d08d_TypeEnumDecl>(_1e478d08d_TypeEnumDecl{._field_Token=(*(_123342_tokens))[_123417_i], });;
	if ((_123517_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e6955297_pushErr(_self_.ptr(), _123517_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Ident=_123517_e.get()._field_Token.get()._field_Kind;
	_123417_i+=3LL;
	jule::Slice<jule::Ptr<_20d155596_Token>> _124517_itemTokens = _1e6952a9c_range(&(_123417_i), jule::Str("{", 1), jule::Str("}", 1), _123342_tokens);;
	if ((_124517_itemTokens == nullptr)) {
		_1e6954b6a_stop(_self_.ptr());
		_1e6955297_pushErr(_self_.ptr(), _123517_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _123517_e;;
	} else if ((_123417_i < (*(_123342_tokens)).len())) {
		_1e6955297_pushErr(_self_.ptr(), (*(_123342_tokens))[_123417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Public=_1e69644d7_isPub(&(_123517_e.get()._field_Ident));
	_123517_e.get()._field_End=(*(_123342_tokens))[(_123417_i - 1LL)];
	_123517_e.get()._field_Items=_1e695c90e_buildTypeEnumItems(_self_, &(_124517_itemTokens));
	return _123517_e;;
}



inline jule::Ptr<_1e4777d47_Expr> _1e695d0c4_buildEnumItemExpr(jule::Ptr<_1e695483a_parser> _self_, jule::I64* _126042_i, jule::Slice<jule::Ptr<_20d155596_Token>>* _126055_tokens) {
	jule::I64 _126117_braceN = 0LL;;
	jule::I64 _126213_exprStart = (*(_126042_i));;
	for (; ((*(_126042_i)) < (*(_126055_tokens)).len()); ((*(_126042_i)))++) {
		{
			jule::Ptr<_20d155596_Token> _126417_t = (*(_126055_tokens))[(*(_126042_i))];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1e9354666:;
						{
							(_126117_braceN)++;
							goto _iter_next_1e93531d1;
						}
					}
					else {
						_case_begin_1e935426a:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_1e935405b:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_1e93531d1;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || (((*(_126042_i)) + 1LL) >= (*(_126055_tokens)).len()))) {
				jule::Slice<jule::Ptr<_20d155596_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128025_exprTokens=(*(_126055_tokens)).slice(_126213_exprStart, (*(_126042_i)));
				} else {
					_128025_exprTokens=(*(_126055_tokens)).slice(_126213_exprStart);
				};
				return _1e69558c4_buildExpr(_self_, &(_128025_exprTokens));;
			};
		}
	_iter_next_1e93531d1:;
	}
	_iter_end_1e93531d1:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1e478b454_EnumItemDecl>> _1e695d3d2_buildEnumItems(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _129239_tokens) {
	jule::Slice<jule::Ptr<_1e478b454_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_1e478b454_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _129417_i = 0LL;;
	for (; (_129417_i < (*(_129239_tokens)).len()); (_129417_i)++) {
		{
			jule::Ptr<_20d155596_Token> _129621_t = (*(_129239_tokens))[_129417_i];;
			jule::Ptr<_1e478b454_EnumItemDecl> _129721_item = jule::new_ptr<_1e478b454_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_1e6955297_pushErr(_self_.ptr(), _129721_item.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= (*(_129239_tokens)).len()) || ((*(_129239_tokens))[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_129417_i + 1LL) < (*(_129239_tokens)).len())) {
					(_129417_i)++;
				};
				_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
				goto _iter_next_1e9357a98;
			};
			(_129417_i)++;
			_129621_t=(*(_129239_tokens))[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_1e6955297_pushErr(_self_.ptr(), _129621_t, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1e9357a98;
			};
			if (((_129417_i >= (*(_129239_tokens)).len()) || ((*(_129239_tokens))[_129417_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_1e6955297_pushErr(_self_.ptr(), _129621_t, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1e9357a98;
			};
			_129721_item.get()._field_Expr=_1e695d0c4_buildEnumItemExpr(_self_, &(_129417_i), _129239_tokens);
			_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
		}
	_iter_next_1e9357a98:;
	}
	_iter_end_1e9357a98:;;
	return _129317_items;;
}



inline jule::Ptr<_1e478be7c_EnumDecl> _1e695d6e0_buildEnumDecl(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _132938_tokens) {
	if (((*(_132938_tokens)).len() < 3LL)) {
		_1e6955297_pushErr(_self_.ptr(), (*(_132938_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e478be7c_EnumDecl> _133417_e = jule::new_ptr<_1e478be7c_EnumDecl>(_1e478be7c_EnumDecl{._field_Token=(*(_132938_tokens))[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e6955297_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134217_i = 2LL;;
	if (((*(_132938_tokens))[_134217_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134217_i)++;
		if ((_134217_i >= (*(_132938_tokens)).len())) {
			_1e6955297_pushErr(_self_.ptr(), (*(_132938_tokens))[(_134217_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return _133417_e;;
		};
		({
			__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType(_self_, _132938_tokens, (&(_134217_i)), true);
			_133417_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_134217_i >= (*(_132938_tokens)).len())) {
			_1e6954b6a_stop(_self_.ptr());
			_1e6955297_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
			_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _133417_e;;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_20d155596_Token>> _135917_itemTokens = _1e6952a9c_range(&(_134217_i), jule::Str("{", 1), jule::Str("}", 1), _132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_1e6954b6a_stop(_self_.ptr());
		_1e6955297_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _133417_e;;
	} else if ((_134217_i < (*(_132938_tokens)).len())) {
		_1e6955297_pushErr(_self_.ptr(), (*(_132938_tokens))[_134217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Public=_1e69644d7_isPub(&(_133417_e.get()._field_Ident));
	_133417_e.get()._field_End=(*(_132938_tokens))[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_1e695d3d2_buildEnumItems(_self_, &(_135917_itemTokens));
	return _133417_e;;
}



inline jule::Any _1e695d9ed_buildNodeEnumDecl(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _137442_tokens) {
	if ((((*(_137442_tokens)).len() > 3LL) && ((*(_137442_tokens))[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if (((*(_137442_tokens))[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return jule::Any(_1e695cc1c_buildTypeEnumDecl(_self_, _137442_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1e695d6e0_buildEnumDecl(_self_, _137442_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1e478d28b_FieldDecl> _1e695dd0b_buildField(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _138334_tokens) {
	jule::Ptr<_1e478d28b_FieldDecl> _138417_f = jule::new_ptr<_1e478d28b_FieldDecl>();;
	_138417_f.get()._field_Mutable=(_138334_tokens[0LL].get()._field_Id == static_cast<jule::U64>(35LLU));
	if (_138417_f.get()._field_Mutable) {
		if ((_138334_tokens.len() == 1LL)) {
			_1e6955297_pushErr(_self_.ptr(), _138334_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(1LL);
	};
	_138417_f.get()._field_Token=_138334_tokens[0LL];
	if ((_138417_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e6955297_pushErr(_self_.ptr(), _138417_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138417_f.get()._field_Ident=_138417_f.get()._field_Token.get()._field_Kind;
	if ((_138334_tokens.len() == 1LL)) {
		_1e6955297_pushErr(_self_.ptr(), _138334_tokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_138334_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1e6955297_pushErr(_self_.ptr(), _138334_tokens[1LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138334_tokens=_138334_tokens.slice(2LL);
	jule::I64 _141217_i = 0LL;;
	({
		__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType(_self_, &(_138334_tokens), (&(_141217_i)), true);
		_138417_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_141217_i < _138334_tokens.len())) {
		jule::Ptr<_20d155596_Token> _141517_token = _138334_tokens[_141217_i];;
		if (((_141517_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_141517_token.get()._field_Kind != jule::Str("=", 1)))) {
			_1e6955297_pushErr(_self_.ptr(), _138334_tokens[_141217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_141217_i)++;
		if ((_141217_i >= _138334_tokens.len())) {
			_1e6955297_pushErr(_self_.ptr(), _141517_token, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(_141217_i);
		_138417_f.get()._field_Default=_1e69558c4_buildExpr(_self_, &(_138334_tokens));
	};
	_138417_f.get()._field_Public=_1e69644d7_isPub(&(_138417_f.get()._field_Ident));
	return _138417_f;;
}



inline jule::Slice<jule::Ptr<_1e478d28b_FieldDecl>> _1e695e119_buildStructDeclFields(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _143245_tokens) {
	jule::Slice<jule::Ptr<_1e478d28b_FieldDecl>> _143317_fields = nullptr;;
	jule::Slice<jule::Ptr<_1e69378b7_stmt>> _143417_stmts = _1e6937c5d_splitStmts(&(_143245_tokens));;
	{
		auto expr = &(_143417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9374026:;
		if (it != expr_end) {
			jule::Ptr<_1e69378b7_stmt> _143521_stmt = *it;
			{
				_143245_tokens=_143521_stmt.get()._field_tokens;
				jule::Ptr<_1e478d28b_FieldDecl> _143721_f = _1e695dd0b_buildField(_self_, _143245_tokens);;
				_143317_fields = jule::alloc_for_append(_143317_fields,1);_143317_fields.__push(_143721_f);;
			}
			_iter_next_1e9374026:;
			++it;
			goto _iter_begin_1e9374026;
		}
		_iter_end_1e9374026:;
	};
	return _143317_fields;;
}



inline jule::Ptr<_1e478da3e_StructDecl> _1e695e427_buildStructDecl(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _144340_tokens) {
	if (((*(_144340_tokens)).len() < 3LL)) {
		_1e6955297_pushErr(_self_.ptr(), (*(_144340_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _144917_i = 1LL;;
	jule::Ptr<_1e478da3e_StructDecl> _145017_s = jule::new_ptr<_1e478da3e_StructDecl>(_1e478da3e_StructDecl{._field_Token=(*(_144340_tokens))[_144917_i], });;
	if ((_145017_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e6955297_pushErr(_self_.ptr(), _145017_s.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_144917_i)++;
	if ((_144917_i >= (*(_144340_tokens)).len())) {
		_1e6955297_pushErr(_self_.ptr(), (*(_144340_tokens))[_144917_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	_145017_s.get()._field_Ident=_145017_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_20d155596_Token> _146413_errorToken = (*(_144340_tokens))[_144917_i];;
	jule::Slice<jule::Ptr<_20d155596_Token>> _146517_genericsTokens = _1e6952a9c_range(&(_144917_i), jule::Str("[", 1), jule::Str("]", 1), _144340_tokens);;
	if ((_146517_genericsTokens != nullptr)) {
		_145017_s.get()._field_Generics=_1e6958498_buildGenerics(_self_, &(_146517_genericsTokens), &(_146413_errorToken));
	};
	if ((_144917_i >= (*(_144340_tokens)).len())) {
		_1e6955297_pushErr(_self_.ptr(), (*(_144340_tokens))[(_144917_i - 1LL)], jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	jule::Slice<jule::Ptr<_20d155596_Token>> _147517_bodyTokens = _1e6952a9c_range(&(_144917_i), jule::Str("{", 1), jule::Str("}", 1), _144340_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_1e6954b6a_stop(_self_.ptr());
		_1e6955297_pushErr(_self_.ptr(), _145017_s.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	if ((_144917_i < (*(_144340_tokens)).len())) {
		_1e6955297_pushErr(_self_.ptr(), (*(_144340_tokens))[_144917_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_145017_s.get()._field_Public=_1e69644d7_isPub(&(_145017_s.get()._field_Ident));
	_145017_s.get()._field_Fields=_1e695e119_buildStructDeclFields(_self_, _147517_bodyTokens);
	_145017_s.get()._field_End=(*(_144340_tokens))[(_144917_i - 1LL)];
	return _145017_s;;
}



inline void _1e695e69c_checkMethodReceiver(_1e695483a_parser* _self_, jule::Ptr<_1e47852a5_FnDecl>* _149139_f) {
	if ((*(_149139_f)).get()._field_Statically) {
		if ((((*(_149139_f)).get()._field_Params.len() > 0LL) && _1e47842e8_IsSelf((*(_149139_f)).get()._field_Params[0LL].ptr()))) {
			_1e6955297_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*(_149139_f)).get()._field_Params.len() == 0LL)) {
		_1e6955297_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e4783e85_ParamDecl> _150313_param = (*(_149139_f)).get()._field_Params[0LL];;
	if ((!(_1e47842e8_IsSelf(_150313_param.ptr())))) {
		_1e6955297_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1e47852a5_FnDecl>> _1e695e9aa_buildTraitMethods(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _151041_tokens) {
	jule::Slice<jule::Ptr<_1e47852a5_FnDecl>> _151117_methods = nullptr;;
	jule::Slice<jule::Ptr<_1e69378b7_stmt>> _151217_stmts = _1e6937c5d_splitStmts(&(_151041_tokens));;
	{
		auto expr = &(_151217_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9382d7b:;
		if (it != expr_end) {
			jule::Ptr<_1e69378b7_stmt> _151321_stmt = *it;
			{
				_151041_tokens=_151321_stmt.get()._field_tokens;
				if ((_151041_tokens.len() == 0LL)) {
					goto _iter_next_1e9382d7b;
				};
				jule::Ptr<_1e47852a5_FnDecl> _151821_f = _1e695ad08_buildFn(_self_, &(_151041_tokens), true, true);;
				if ((_151821_f != nullptr)) {
					if (_1e4785607_IsAnon(_151821_f.ptr())) {
						_1e6955297_pushErr(_self_.ptr(), _151821_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
					_1e695e69c_checkMethodReceiver(_self_.ptr(), &(_151821_f));
					if ((_151821_f.get()._field_Generics.len() > 0LL)) {
						_1e6955297_pushErr(_self_.ptr(), _151821_f.get()._field_Token, jule::Str("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
					};
					_151117_methods = jule::alloc_for_append(_151117_methods,1);_151117_methods.__push(_151821_f);;
				};
			}
			_iter_next_1e9382d7b:;
			++it;
			goto _iter_begin_1e9382d7b;
		}
		_iter_end_1e9382d7b:;
	};
	return _151117_methods;;
}



inline jule::Ptr<_1e478e149_TraitDecl> _1e695ecb8_buildTraitDecl(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _153339_tokens) {
	if (((*(_153339_tokens)).len() < 3LL)) {
		_1e6955297_pushErr(_self_.ptr(), (*(_153339_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e478e149_TraitDecl> _153817_t = jule::new_ptr<_1e478e149_TraitDecl>(_1e478e149_TraitDecl{._field_Token=(*(_153339_tokens))[1LL], });;
	if ((_153817_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e6955297_pushErr(_self_.ptr(), _153817_t.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Ident=_153817_t.get()._field_Token.get()._field_Kind;
	jule::I64 _154617_i = 2LL;;
	jule::Slice<jule::Ptr<_20d155596_Token>> _154717_bodyTokens = _1e6952a9c_range(&(_154617_i), jule::Str("{", 1), jule::Str("}", 1), _153339_tokens);;
	if ((_154717_bodyTokens == nullptr)) {
		_1e6954b6a_stop(_self_.ptr());
		_1e6955297_pushErr(_self_.ptr(), _153817_t.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_154617_i < (*(_153339_tokens)).len())) {
		_1e6955297_pushErr(_self_.ptr(), (*(_153339_tokens))[_154617_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Public=_1e69644d7_isPub(&(_153817_t.get()._field_Ident));
	_153817_t.get()._field_Methods=_1e695e9aa_buildTraitMethods(_self_, _154717_bodyTokens);
	_153817_t.get()._field_End=(*(_153339_tokens))[(_154617_i - 1LL)];
	return _153817_t;;
}



inline jule::Ptr<_1e47852a5_FnDecl> _1e69600c6_buildCppLinkFn(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _156338_tokens) {
	_156338_tokens=_156338_tokens.slice(1LL);
	jule::Ptr<_1e47852a5_FnDecl> _156517_f = _1e695ad08_buildFn(_self_, &(_156338_tokens), false, true);;
	if ((_156517_f != nullptr)) {
		if (_1e4785607_IsAnon(_156517_f.ptr())) {
			_1e6955297_pushErr(_self_.ptr(), _156517_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		_156517_f.get()._field_Public=false;
		_156517_f.get()._field_CppLinked=true;
	};
	return _156517_f;;
}



inline jule::Ptr<_1e4786284_VarDecl> _1e69603d4_buildCppLinkVar(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _157639_tokens) {
	_157639_tokens=_157639_tokens.slice(1LL);
	jule::Ptr<_1e4786284_VarDecl> _157817_v = _1e6957cd3_buildVar(_self_, _157639_tokens);;
	if ((_157817_v != nullptr)) {
		_157817_v.get()._field_Public=false;
		_157817_v.get()._field_CppLinked=true;
		if ((_157817_v.get()._field_Expr != nullptr)) {
			_1e6955297_pushErr(_self_.ptr(), _157817_v.get()._field_Token, jule::Str("cpp linked variables cannot have expression", 43), jule::Slice<jule::Any>());
		};
	};
	return _157817_v;;
}



inline jule::Ptr<_1e478da3e_StructDecl> _1e69606e2_buildCppLinkStruct(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _158942_tokens) {
	_158942_tokens=_158942_tokens.slice(1LL);
	jule::Ptr<_1e478da3e_StructDecl> _159117_s = _1e695e427_buildStructDecl(_self_, &(_158942_tokens));;
	if ((_159117_s != nullptr)) {
		_159117_s.get()._field_Public=false;
		{
			auto expr = &(_159117_s.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e9392363:;
			if (it != expr_end) {
				jule::Ptr<_1e478d28b_FieldDecl> _159425_f = *it;
				{
					_159425_f.get()._field_Public=true;
				}
				_iter_next_1e9392363:;
				++it;
				goto _iter_begin_1e9392363;
			}
			_iter_end_1e9392363:;
		};
		_159117_s.get()._field_CppLinked=true;
	};
	return _159117_s;;
}



inline jule::Ptr<_1e4789ae5_TypeAliasDecl> _1e6960a00_buildCppLinkTypeAlias(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _160345_tokens) {
	_160345_tokens=_160345_tokens.slice(1LL);
	jule::Ptr<_1e4789ae5_TypeAliasDecl> _160517_t = _1e6956ebe_buildTypeAliasDecl(_self_, &(_160345_tokens));;
	if ((_160517_t != nullptr)) {
		_160517_t.get()._field_Public=false;
		_160517_t.get()._field_CppLinked=true;
	};
	return _160517_t;;
}



inline jule::Ptr<_1e478aed1_UseDecl> _1e6960d0d_buildCppLinkUse(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _161339_tokens) {
	if ((_161339_tokens.len() == 1LL)) {
		_1e6955297_pushErr(_self_.ptr(), _161339_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_161339_tokens=_161339_tokens.slice(1LL);
	;
	return _1e695c249_buildUseDecl(_self_.ptr(), _161339_tokens, true);;
}



inline jule::Any _1e696111b_buildCppLink(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _162437_tokens) {
	jule::Ptr<_20d155596_Token> _162517_token = (*(_162437_tokens))[0LL];;
	if (((*(_162437_tokens)).len() == 1LL)) {
		_1e6955297_pushErr(_self_.ptr(), _162517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_162517_token=(*(_162437_tokens))[1LL];
	{
		auto &_match_expr{ _162517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1e9396e4a:;
			{
				return jule::Any(_1e69600c6_buildCppLinkFn(_self_, (*(_162437_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1e9397ae9:;
			{
				return jule::Any(_1e69603d4_buildCppLinkVar(_self_, (*(_162437_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1e9397b60:;
			{
				return jule::Any(_1e69606e2_buildCppLinkStruct(_self_, (*(_162437_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1e9397bc6:;
			{
				return jule::Any(_1e6960a00_buildCppLinkTypeAlias(_self_, (*(_162437_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1e9397995:;
			{
				_1e6955297_pushErr(_self_.ptr(), _162517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e9397a83:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e47852a5_FnDecl> _1e6961429_getMethod(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _164834_tokens) {
	jule::I64 _164917_i = 0LL;;
	jule::Ptr<_20d155596_Token> _165017_token = (*(_164834_tokens))[_164917_i];;
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		if (((_164917_i + 1LL) >= (*(_164834_tokens)).len())) {
			_1e6955297_pushErr(_self_.ptr(), _165017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_164917_i)++;
		_165017_token=(*(_164834_tokens))[_164917_i];
	};
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_164917_i + 1LL) >= (*(_164834_tokens)).len())) {
			_1e6955297_pushErr(_self_.ptr(), _165017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_164917_i)++;
		_165017_token=(*(_164834_tokens))[_164917_i];
	};
	if ((_165017_token.get()._field_Id != static_cast<jule::U64>(32LLU))) {
		_1e6955297_pushErr(_self_.ptr(), _165017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e47852a5_FnDecl> _167417_f = _1e695ad08_buildFn(_self_, _164834_tokens, true, false);;
	if (((_167417_f != nullptr) && _1e4785607_IsAnon(_167417_f.ptr()))) {
		_1e6955297_pushErr(_self_.ptr(), _167417_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _167417_f;;
}



inline void _1e6961748_parseImplBody(jule::Ptr<_1e695483a_parser> _self_, jule::Ptr<_1e478e754_Impl>* _168138_ipl, jule::Slice<jule::Ptr<_20d155596_Token>>* _168155_tokens) {
	jule::Slice<jule::Ptr<_1e69378b7_stmt>> _168217_stmts = _1e6937c5d_splitStmts(_168155_tokens);;
	{
		auto expr = &(_168217_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e93a09ae:;
		if (it != expr_end) {
			jule::Ptr<_1e69378b7_stmt> _168321_stmt = *it;
			{
				(*(_168155_tokens))=_168321_stmt.get()._field_tokens;
				jule::Ptr<_20d155596_Token> _168521_token = (*(_168155_tokens))[0LL];;
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(38LLU)) {
						_case_begin_1e93a110d:;
						{
							_1e6955e57_pushDirective(_self_.ptr(), _1e6955bd2_buildDirective(_self_.ptr(), (*(_168155_tokens))));
							goto _iter_next_1e93a09ae;
						}
					}
					_match_end_1e93a1ae2:;
				};
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1e93a1c46:;
						{
							jule::Ptr<_1e4786284_VarDecl> _169425_v = _1e6957cd3_buildVar(_self_, (*(_168155_tokens)));;
							if ((_169425_v != nullptr)) {
								(*(_168138_ipl)).get()._field_Statics = jule::alloc_for_append((*(_168138_ipl)).get()._field_Statics,1);(*(_168138_ipl)).get()._field_Statics.__push(_169425_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1e93a2120:;
						{
							jule::Ptr<_1e47852a5_FnDecl> _170125_f = _1e6961429_getMethod(_self_, _168155_tokens);;
							if ((_170125_f != nullptr)) {
								_1e695e69c_checkMethodReceiver(_self_.ptr(), &(_170125_f));
								_1e69620d9_applyFnMeta(_self_.ptr(), &(_170125_f));
								(*(_168138_ipl)).get()._field_Methods = jule::alloc_for_append((*(_168138_ipl)).get()._field_Methods,1);(*(_168138_ipl)).get()._field_Methods.__push(_170125_f);;
							};
						}
					}
					else {
						_case_begin_1e93a20a9:;
						{
							_1e6955297_pushErr(_self_.ptr(), _168521_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1e93a09ae;
						}
					}
					_match_end_1e93a27d5:;
				};
			}
			_iter_next_1e93a09ae:;
			++it;
			goto _iter_begin_1e93a09ae;
		}
		_iter_end_1e93a09ae:;
	};
}



inline jule::Ptr<_1e478e754_Impl> _1e6961a56_buildImpl(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _171433_tokens) {
	jule::Ptr<_20d155596_Token> _171517_token = _171433_tokens[0LL];;
	if ((_171433_tokens.len() < 2LL)) {
		_1e6955297_pushErr(_self_.ptr(), _171517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _172117_i = 1LL;;
	jule::Ptr<_1e4773826_TypeDecl> _172318_base;;
	jule::Bool _172328_ok = false;;
	({
		__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType(_self_, &(_171433_tokens), (&(_172117_i)), true);
		_172318_base = __jule_assign_result.__jule_result_arg0;
		_172328_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172328_ok))) {
		return nullptr;;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_1e6955297_pushErr(_self_.ptr(), _171517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e478e754_Impl> _173217_ipl = jule::new_ptr<_1e478e754_Impl>(_1e478e754_Impl{._field_Base=_172318_base, });;
	_171517_token=_171433_tokens[_172117_i];
	if ((_171517_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_171517_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_171517_token.get()._field_Kind == jule::Str("{", 1)))) {
			({
				jule::Ptr<_1e4773826_TypeDecl> ___jule_assign_arg = _173217_ipl.get()._field_Dest;
				jule::Ptr<_1e4773826_TypeDecl> _1___jule_assign_arg = _173217_ipl.get()._field_Base;
				_173217_ipl.get()._field_Base = ___jule_assign_arg;
				_173217_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_1e6954b6a_stop(_self_.ptr());
		_1e6955297_pushErr(_self_.ptr(), _171517_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_172117_i)++;
	if ((_172117_i >= _171433_tokens.len())) {
		_1e6954b6a_stop(_self_.ptr());
		_1e6955297_pushErr(_self_.ptr(), _171517_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType(_self_, &(_171433_tokens), (&(_172117_i)), true);
		_173217_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_172328_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172328_ok))) {
		return nullptr;;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_1e6954b6a_stop(_self_.ptr());
		_1e6955297_pushErr(_self_.ptr(), _171517_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_20d155596_Token>> _177017_bodyTokens = _1e6952a9c_range(&(_172117_i), jule::Str("{", 1), jule::Str("}", 1), &(_171433_tokens));;
	if ((_177017_bodyTokens == nullptr)) {
		_1e6954b6a_stop(_self_.ptr());
		_1e6955297_pushErr(_self_.ptr(), _171517_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_172117_i < _171433_tokens.len())) {
		_1e6955297_pushErr(_self_.ptr(), _171433_tokens[_172117_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_173217_ipl.get()._field_End=_171433_tokens[(_172117_i - 1LL)];
	_1e6961748_parseImplBody(_self_, &(_173217_ipl), &(_177017_bodyTokens));
	return _173217_ipl;;
}



inline jule::Any _1e6961d64_buildNodeData(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _178538_tokens) {
	jule::Ptr<_20d155596_Token> _178617_token = (*(_178538_tokens))[0LL];;
	{
		auto &_match_expr{ _178617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1e93b210d:;
			{
				jule::Ptr<_1e47852a5_FnDecl> _179021_f = _1e695ad08_buildFn(_self_, _178538_tokens, false, false);;
				if ((_179021_f != nullptr)) {
					_179021_f.get()._field_Global=true;
					if (_1e4785607_IsAnon(_179021_f.ptr())) {
						_1e6955297_pushErr(_self_.ptr(), _179021_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				};
				return jule::Any(_179021_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1e93b3043:;
			{
				return jule::Any(_1e6957cd3_buildVar(_self_, (*(_178538_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1e93b30a9:;
			{
				return jule::Any(_1e6956ebe_buildTypeAliasDecl(_self_, _178538_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1e93b3120:;
			{
				return _1e695d9ed_buildNodeEnumDecl(_self_, _178538_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1e93b277e:;
			{
				return jule::Any(_1e695e427_buildStructDecl(_self_, _178538_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1e93b27e5:;
			{
				return jule::Any(_1e695ecb8_buildTraitDecl(_self_, _178538_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1e93b285b:;
			{
				return jule::Any(_1e6961a56_buildImpl(_self_, (*(_178538_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1e93b28c2:;
			{
				return _1e696111b_buildCppLink(_self_, _178538_tokens);;
			}
		}
		else {
			_case_begin_1e93b26e6:;
			{
				_1e6955297_pushErr(_self_.ptr(), _178617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e93b254d:;
	};
}



inline void _1e69620d9_applyFnMeta(_1e695483a_parser* _self_, jule::Ptr<_1e47852a5_FnDecl>* _182135_f) {
	(*(_182135_f)).get()._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1e696235e_applyMeta(_1e695483a_parser* _self_, _1e4740183_Node* _182633_node) {
	{
		auto &_match_expr{ (*(_182633_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1e93b8961:;
			{
				jule::Ptr<_1e4786284_VarDecl> _182921_v = (*(_182633_node))._field_Data.cast_ptr<_1e4786284_VarDecl>(&__jule_any_type16);;
				if ((_182921_v == nullptr)) {
					return;;
				};
				_182921_v.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1e93b89c7:;
			{
				jule::Ptr<_1e47852a5_FnDecl> _183621_f = (*(_182633_node))._field_Data.cast_ptr<_1e47852a5_FnDecl>(&__jule_any_type14);;
				if ((_183621_f == nullptr)) {
					return;;
				};
				_1e69620d9_applyFnMeta(_self_, &(_183621_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1e93b8a3d:;
			{
				jule::Ptr<_1e478da3e_StructDecl> _184221_sd = (*(_182633_node))._field_Data.cast_ptr<_1e478da3e_StructDecl>(&__jule_any_type13);;
				if ((_184221_sd == nullptr)) {
					return;;
				};
				_184221_sd.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1e93b8752:;
	};
}



inline void _1e69625d4_pushUseDecl(jule::Ptr<_1e695483a_parser> _self_, jule::Ptr<_1e478aed1_UseDecl>* _185136_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push((*(_185136_decl)));;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1e6955297_pushErr(_self_.ptr(), (*(_185136_decl)).get()._field_Token, jule::Str("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1e69555b6_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e69628e2_pushMetaNodes(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _185938_tokens) {
	{
		auto &_match_expr{ (*(_185938_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1e93be406:;
			{
				;
				jule::Ptr<_1e478aed1_UseDecl> _186321_decl = _1e695c249_buildUseDecl(_self_.ptr(), (*(_185938_tokens)), false);;
				_1e69625d4_pushUseDecl(_self_, &(_186321_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1e93be47d:;
			{
				if ((((*(_185938_tokens)).len() > 1LL) && ((*(_185938_tokens))[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_1e478aed1_UseDecl> _186825_decl = _1e6960d0d_buildCppLinkUse(_self_, (*(_185938_tokens)));;
					_1e69625d4_pushUseDecl(_self_, &(_186825_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1e93be505:;
			{
				_1e6955e57_pushDirective(_self_.ptr(), _1e6955bd2_buildDirective(_self_.ptr(), (*(_185938_tokens))));
				return true;;
			}
		}
		_match_end_1e93be329:;
	};
	return false;;
}



inline _1e4740183_Node _1e6962c00_parseNode(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _187934_st) {
	_1e4740183_Node _188017_node = _1e4740183_Node{._field_Token=(*(_187934_st))[0LL], };;
	if (_1e69628e2_pushMetaNodes(_self_, _187934_st)) {
		return _188017_node;;
	};
	jule::Any _188817_data = _1e6961d64_buildNodeData(_self_, _187934_st);;
	if ((_188817_data == nullptr)) {
		return _188017_node;;
	};
	_188017_node._field_Data=_188817_data;
	_1e696235e_applyMeta(_self_.ptr(), &(_188017_node));
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1e6955297_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188017_node;;
}



inline void _1e6962e75_appendNode(jule::Ptr<_1e695483a_parser> _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _190335_st) {
	if (((*(_190335_st)).len() == 0LL)) {
		return;;
	};
	_1e4740183_Node _190717_node = _1e6962c00_parseNode(_self_, _190335_st);;
	if (((_190717_node._field_Data == nullptr) || _1e6954dce_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_190717_node);;
}



inline void _1e69633d7_removeRange(_1e695483a_parser* _self_, jule::I64 _191430_i, jule::Str _191438_kind, jule::Slice<jule::Ptr<_20d155596_Token>>* _191450_tokens, jule::Slice<jule::I64>* _191473_ranges) {
	jule::Str _191513_close = _1e69538b1_getCloseKindOfBrace(_191438_kind);;
	for (; (_191430_i >= 0LL); (_191430_i)--) {
		{
			jule::Ptr<_20d155596_Token> _191717_tok = (*(_191450_tokens))[(*(_191473_ranges))[_191430_i]];;
			if ((_191717_tok.get()._field_Kind != _191513_close)) {
				goto _iter_next_1e93c890a;
			};
			(*(_191473_ranges))=jule::append((*(_191473_ranges)).slice(0LL, _191430_i),(*(_191473_ranges)).slice((_191430_i + 1LL)));
			goto _iter_end_1e93c890a;
		}
	_iter_next_1e93c890a:;
	}
	_iter_end_1e93c890a:;;
}



inline void _1e69637a0_pushWrongOrderCloseErr(_1e695483a_parser* _self_, jule::Ptr<_20d155596_Token>* _192642_t, jule::Slice<jule::Ptr<_20d155596_Token>>* _192654_tokens, jule::Slice<jule::I64>* _192673_ranges) {
	{
		auto &_match_expr{ (*(_192654_tokens))[(*(_192673_ranges))[((*(_192673_ranges)).len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1e93ca995:;
			{
				_1e6955297_pushErr(_self_, (*(_192642_t)), jule::Str("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1e93caa1c:;
			{
				_1e6955297_pushErr(_self_, (*(_192642_t)), jule::Str("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1e93caa94:;
			{
				_1e6955297_pushErr(_self_, (*(_192642_t)), jule::Str("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e93ca874:;
	};
}



inline void _1e6963c12_pushRangeClose(_1e695483a_parser* _self_, jule::Ptr<_20d155596_Token> _193733_t, jule::Str _193744_left, jule::Slice<jule::Ptr<_20d155596_Token>>* _193756_tokens, jule::Slice<jule::I64>* _193779_ranges) {
	jule::I64 _193813_n = (*(_193779_ranges)).len();;
	if ((_193813_n == 0LL)) {
		{
			auto &_match_expr{ _193733_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1e93cd57a:;
				{
					_1e6955297_pushErr(_self_, _193733_t, jule::Str("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1e93cd602:;
				{
					_1e6955297_pushErr(_self_, _193733_t, jule::Str("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1e93cd679:;
				{
					_1e6955297_pushErr(_self_, _193733_t, jule::Str("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1e93cd349:;
		};
		return;;
	} else if (((*(_193756_tokens))[(*(_193779_ranges))[(_193813_n - 1LL)]].get()._field_Kind != _193744_left)) {
		_1e69637a0_pushWrongOrderCloseErr(_self_, &(_193733_t), _193756_tokens, _193779_ranges);
	};
	_1e69633d7_removeRange(_self_, static_cast<jule::I64>((_193813_n - 1LL)), _193733_t.get()._field_Kind, _193756_tokens, _193779_ranges);
}



inline void _1e6963e87_checkRanges(_1e695483a_parser* _self_, jule::Slice<jule::Ptr<_20d155596_Token>>* _195531_tokens) {
	jule::Slice<jule::I64> _195617_ranges = nullptr;;
	{
		auto expr = _195531_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e93d167c:;
		if (it != expr_end) {
			jule::I64 _195813_i = it - expr->begin();
			jule::Ptr<_20d155596_Token> *_195816_token = it;
			{
				if (((*(_195816_token)).get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1e93d167c;
				};
				{
					auto &_match_expr{ (*(_195816_token)).get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1e93d28e2:;
						{
							_195617_ranges = jule::alloc_for_append(_195617_ranges,1);_195617_ranges.__push(_195813_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1e93d298b:;
						{
							_1e6963c12_pushRangeClose(_self_, (*(_195816_token)), jule::Str("(", 1), _195531_tokens, &(_195617_ranges));
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1e93d2a02:;
						{
							_1e6963c12_pushRangeClose(_self_, (*(_195816_token)), jule::Str("{", 1), _195531_tokens, &(_195617_ranges));
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1e93d2a68:;
						{
							_1e6963c12_pushRangeClose(_self_, (*(_195816_token)), jule::Str("[", 1), _195531_tokens, &(_195617_ranges));
						}
					}
					_match_end_1e93d246e:;
				};
			}
			_iter_next_1e93d167c:;
			++it;
			_195813_i++;
			goto _iter_begin_1e93d167c;
		}
		_iter_end_1e93d167c:;
	};
	{
		auto expr = &(_195617_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e93d1418:;
		if (it != expr_end) {
			jule::I64 _197616_i = *it;
			{
				jule::Ptr<_20d155596_Token> _197717_token = (*(_195531_tokens))[_197616_i];;
				{
					auto &_match_expr{ _197717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1e93d50ed:;
						{
							_1e6955297_pushErr(_self_, _197717_token, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1e93d5164:;
						{
							_1e6955297_pushErr(_self_, _197717_token, jule::Str("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1e93d51ca:;
						{
							_1e6955297_pushErr(_self_, _197717_token, jule::Str("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1e93d4dbc:;
				};
			}
			_iter_next_1e93d1418:;
			++it;
			goto _iter_begin_1e93d1418;
		}
		_iter_end_1e93d1418:;
	};
}



inline void _1e696420c_parse(jule::Ptr<_1e695483a_parser> _self_, jule::Ptr<_20d15a931_File>* _198930_f) {
	_self_.get()._field_ast=jule::new_ptr<_1e473e391_Ast>(_1e473e391_Ast{._field_File=(*(_198930_f)), });
	_1e6963e87_checkRanges(_self_.ptr(), &((*(_198930_f)).get()._field_Tokens));
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e69378b7_stmt>> _199917_stmts = _1e6937c5d_splitStmts(&((*(_198930_f)).get()._field_Tokens));;
	jule::I64 _200217_i = 0LL;;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_1e69378b7_stmt> _200421_stmt = _199917_stmts[_200217_i];;
			if ((_200421_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200421_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(38LLU))) {
				goto _iter_end_1e93d809b;
			};
			if ((!(_243061390_IsTopDirective(_200421_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1e93d809b;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_1e6955bd2_buildDirective(_self_.ptr(), _200421_stmt.get()._field_tokens));;
		}
	_iter_next_1e93d809b:;
	}
	_iter_end_1e93d809b:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_1e69378b7_stmt> _202121_stmt = _199917_stmts[_200217_i];;
			_1e6962e75_appendNode(_self_, &(_202121_stmt.get()._field_tokens));
			if (_1e6954dce_stopped(_self_.ptr())) {
				goto _iter_end_1e93d70cd;
			};
		}
	_iter_next_1e93d70cd:;
	}
	_iter_end_1e93d70cd:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1e6955297_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e695483a_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1e6965b26_pushErr(_1e696554e_typeBuilder* _self_, jule::Ptr<_20d155596_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1e6955297_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1e6965e45_pushSuggestion(_1e696554e_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1e69555b6_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e69661a9_buildPrim(_1e696554e_typeBuilder* _self_) {
	jule::Ptr<_1e4773826_TypeDecl> _5517_t = _1e69650ba_buildPrimType((*(_self_))._field_tokens[(*((*(_self_))._field_i))]);;
	((*((*(_self_))._field_i)))++;
	return _5517_t;;
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e696641d_buildNamespace(_1e696554e_typeBuilder* _self_) {
	jule::Ptr<_1e4773826_TypeDecl> _6117_t = jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1e47748e3_NamespaceTypeDecl> _6517_nst = jule::new_ptr<_1e47748e3_NamespaceTypeDecl>();;
	jule::I64 _6617_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_20d155596_Token> _6821_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6617_n & 1LL) == 0LL)) {
				if ((_6821_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_1e6965b26_pushErr(_self_, _6821_token, jule::Str("invalid syntax", 14));
					_1e6965e45_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				_6517_nst.get()._field_Idents = jule::alloc_for_append(_6517_nst.get()._field_Idents,1);_6517_nst.get()._field_Idents.__push(_6821_token);;
			} else if ((_6821_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
				goto _iter_end_1e955239c;
			};
			(_6617_n)++;
		}
	_iter_next_1e955239c:;
	}
	_iter_end_1e955239c:;;
	_6517_nst.get()._field_Idents=_6517_nst.get()._field_Idents.slice(0LL, (_6517_nst.get()._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	_6517_nst.get()._field_Kind=_1e6966b5a_buildIdent(_self_);
	_6117_t.get()._field_Kind=jule::Any(_6517_nst, &__jule_any_type97);
	return _6117_t;;
}



inline jule::Slice<jule::Ptr<_1e4773826_TypeDecl>> _1e6966682_buildGenerics(_1e696554e_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_20d155596_Token> _9413_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((_9413_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_9413_token.get()._field_Kind != jule::Str("[", 1)))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _9917_parts = _1e69668e6_identGenerics(_self_);;
	if ((_9917_parts.len() == 0LL)) {
		_1e6965b26_pushErr(_self_, _9413_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e4773826_TypeDecl>> _10517_types = jule::Slice<jule::Ptr<_1e4773826_TypeDecl>>::alloc(0LL, _9917_parts.len());;
	{
		auto expr = &(_9917_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9559a7a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d155596_Token>> _10621_part = *it;
			{
				jule::I64 _10721_j = 0LL;;
				jule::Ptr<_1e4773826_TypeDecl> _10822_t;;
				({
					__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType((*(_self_))._field_p, &(_10621_part), (&(_10721_j)), true);
					_10822_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10721_j < _10621_part.len())) {
					_1e6965b26_pushErr(_self_, _10621_part[_10721_j], jule::Str("invalid syntax", 14));
				};
				_10517_types = jule::alloc_for_append(_10517_types,1);_10517_types.__push(_10822_t);;
			}
			_iter_next_1e9559a7a:;
			++it;
			goto _iter_begin_1e9559a7a;
		}
		_iter_end_1e9559a7a:;
	};
	return _10517_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _1e69668e6_identGenerics(_1e696554e_typeBuilder* _self_) {
	jule::I64 _11813_first = (*((*(_self_))._field_i));;
	jule::I64 _11917_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_20d155596_Token> _12117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if ((_12117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _12117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1e955d52e:;
						{
							(_11917_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1e955d5a6:;
						{
							(_11917_rangeN)--;
						}
					}
					_match_end_1e955d30e:;
				};
			};
			if ((_11917_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1e955c242;
			};
		}
	_iter_next_1e955c242:;
	}
	_iter_end_1e955c242:;;
	jule::Slice<jule::Ptr<_20d155596_Token>> _13517_tokens = (*(_self_))._field_tokens.slice((_11813_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _13618_parts;;
	jule::Slice<_24305e4ae_Log> _13625_errors;;
	({
		__jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e6953619_parts(&(_13517_tokens), static_cast<jule::U64>(8LLU), true);
		_13618_parts = __jule_assign_result.__jule_result_arg0;
		_13625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_13625_errors);
	};
	return _13618_parts;;
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e6966b5a_buildIdent(_1e696554e_typeBuilder* _self_) {
	jule::Bool _14417_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_14417_next && ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return _1e696641d_buildNamespace(_self_);;
	};
	jule::Ptr<_20d155596_Token> _14817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1e4773ddc_IdentTypeDecl> _14917_it = jule::new_ptr<_1e4773ddc_IdentTypeDecl>(_1e4773ddc_IdentTypeDecl{._field_Token=_14817_token, ._field_Ident=_14817_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1e4773826_TypeDecl> _15517_itd = jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_14917_it, &__jule_any_type19)});;
	if (((!(_14417_next)) || ((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_14917_it.get()._field_Generics=_1e6966682_buildGenerics(_self_);
		return _15517_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1e6965b26_pushErr(_self_, _14817_token, jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e6965b26_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	jule::Ptr<_1e477453b_SubIdentTypeDecl> _17217_sit = jule::new_ptr<_1e477453b_SubIdentTypeDecl>();;
	_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_14917_it);;
	jule::Ptr<_1e4773826_TypeDecl> _17417_ident = _1e6966b5a_buildIdent(_self_);;
	{
		auto &_match_expr{ _17417_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1e956823c:;
			{
				_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_17417_ident.get()._field_Kind.cast_ptr<_1e4773ddc_IdentTypeDecl>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1e9568319:;
			{
				_17217_sit.get()._field_Idents=jule::append(_17217_sit.get()._field_Idents,_17417_ident.get()._field_Kind.cast_ptr<_1e477453b_SubIdentTypeDecl>(&__jule_any_type93).get()._field_Idents);
			}
		}
		_match_end_1e9568182:;
	};
	return jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_17217_sit, &__jule_any_type93)});;
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e6966dbe_buildCppLink(_1e696554e_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_1e6965b26_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1e4773826_TypeDecl> _19317_t = _1e6966b5a_buildIdent(_self_);;
	_19317_t.get()._field_Kind.cast_ptr<_1e4773ddc_IdentTypeDecl>(&__jule_any_type19).get()._field_CppLinked=true;
	return _19317_t;;
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e6967133_buildFn(_1e696554e_typeBuilder* _self_) {
	jule::Ptr<_20d155596_Token> _19917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1e47852a5_FnDecl> _20017_f = _1e695a8a7_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_20017_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e4785607_IsAnon(_20017_f.ptr())))) {
		_1e6965b26_pushErr(_self_, _20017_f.get()._field_Token, jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Token=_19917_token, ._field_Kind=jule::Any(_20017_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e6967397_buildPtr(_1e696554e_typeBuilder* _self_) {
	jule::Ptr<_20d155596_Token> _21417_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1e6965b26_pushErr(_self_, _21417_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_1e47756a2_PtrTypeDecl>(_1e47756a2_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type78)});;
	};
	jule::Ptr<_1e4773826_TypeDecl> _23117_elem = _1e6968585_step(_self_);;
	if ((_23117_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_1e47756a2_PtrTypeDecl>(_1e47756a2_PtrTypeDecl{._field_Elem=_23117_elem}), &__jule_any_type78)});;
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e696760b_buildSptr(_1e696554e_typeBuilder* _self_) {
	jule::Ptr<_20d155596_Token> _24517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1e6965b26_pushErr(_self_, _24517_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1e4773826_TypeDecl> _25217_elem = _1e6968585_step(_self_);;
	if ((_25217_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Token=_24517_token, ._field_Kind=jule::Any(jule::new_ptr<_1e4774bce_SptrTypeDecl>(_1e4774bce_SptrTypeDecl{._field_Elem=_25217_elem}), &__jule_any_type79)});;
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e6967870_buildOp(_1e696554e_typeBuilder* _self_) {
	jule::Ptr<_20d155596_Token> _26617_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _26617_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e945ee03:;
			{
				return _1e6967397_buildPtr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1e9460ed1:;
			{
				return _1e696760b_buildSptr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1e9461047:;
			{
				return jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1e4774bce_SptrTypeDecl>(_1e4774bce_SptrTypeDecl{._field_Elem=_1e696760b_buildSptr(_self_)}), &__jule_any_type79)});;
			}
		}
		else {
			_case_begin_1e9460585:;
			{
				_1e6965b26_pushErr(_self_, _26617_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1e946040e:;
	};
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e6967ad4_buildSlc(_1e696554e_typeBuilder* _self_) {
	jule::Ptr<_20d155596_Token> _28517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1e4773826_TypeDecl> _28717_elem = _1e6968585_step(_self_);;
	if ((_28717_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Token=_28517_token, ._field_Kind=jule::Any(jule::new_ptr<_1e47750ca_SlcTypeDecl>(_1e47750ca_SlcTypeDecl{._field_Elem=_28717_elem}), &__jule_any_type77)});;
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e6967d48_buildArr(_1e696554e_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_20d155596_Token>> _30017_exprTokens = _1e6952a9c_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1e6965b26_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1e4773826_TypeDecl> _30617_elem = _1e6968585_step(_self_);;
	if ((_30617_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e4775d34_ArrTypeDecl> _31117_arrt = jule::new_ptr<_1e4775d34_ArrTypeDecl>(_1e4775d34_ArrTypeDecl{._field_Elem=_30617_elem, });;
	jule::Ptr<_20d155596_Token> _31517_token = _30017_exprTokens[0LL];;
	if ((((_30017_exprTokens.len() == 1LL) && (_31517_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && (_31517_token.get()._field_Kind == jule::Str("...", 3)))) {
	} else {
		_31117_arrt.get()._field_Size=_1e69558c4_buildExpr((*(_self_))._field_p, &(_30017_exprTokens));
	};
	return jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Token=_31517_token, ._field_Kind=jule::Any(_31117_arrt, &__jule_any_type76)});;
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e69680ac_buildMap(_1e696554e_typeBuilder* _self_) {
	jule::Ptr<_20d155596_Token> _32917_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1e6965b26_pushErr(_self_, _32917_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20d155596_Token>> _33717_keyTokens = _1e6952a9c_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1e6965b26_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_33717_keyTokens.len() == 0LL)) {
		_1e6965b26_pushErr(_self_, _32917_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1e4776582_MapTypeDecl> _34617_mapt = jule::new_ptr<_1e4776582_MapTypeDecl>();;
	jule::I64 _34717_j = 0LL;;
	jule::Ptr<_1e4773826_TypeDecl> _34818_keyt;;
	jule::Bool _34828_ok = false;;
	({
		__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType((*(_self_))._field_p, &(_33717_keyTokens), (&(_34717_j)), (*(_self_))._field_err);
		_34818_keyt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	} else if ((_34717_j < _33717_keyTokens.len())) {
		_1e6965b26_pushErr(_self_, _33717_keyTokens[_34717_j], jule::Str("invalid syntax", 14));
	};
	_34617_mapt.get()._field_Key=_34818_keyt;
	jule::Ptr<_1e4773826_TypeDecl> _35618_valt;;
	({
		__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_assign_result = _1e6956bb1_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_35618_valt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	};
	_34617_mapt.get()._field_Val=_35618_valt;
	return jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Token=_32917_mapToken, ._field_Kind=jule::Any(_34617_mapt, &__jule_any_type80)});;
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e6968321_buildEnumerable(_1e696554e_typeBuilder* _self_) {
	jule::Ptr<_20d155596_Token> _36817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len()) || (_36817_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (_36817_token.get()._field_Kind != jule::Str("[", 1)))) {
		_1e6965b26_pushErr(_self_, _36817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_36817_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((_36817_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_36817_token.get()._field_Kind == jule::Str("]", 1)))) {
		return _1e6967ad4_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1e6967d48_buildArr(_self_);;
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e6968585_step(_1e696554e_typeBuilder* _self_) {
	jule::Ptr<_20d155596_Token> _38513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _38513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1e9474434:;
			{
				return _1e69661a9_buildPrim(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1e9473cc4:;
			{
				return _1e6966b5a_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1e9473d3a:;
			{
				return _1e6966dbe_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1e9473da1:;
			{
				return _1e6967133_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e9474775:;
			{
				return _1e6967870_buildOp(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e94747db:;
			{
				return _1e6968321_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1e9474852:;
			{
				return _1e69680ac_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1e9473bc5:;
			{
				((*((*(_self_))._field_i)))++;
				_1e6965b26_pushErr(_self_, _38513_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1e9473a4e:;
	};
}



inline __jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool _1e69687e9_build(_1e696554e_typeBuilder* _self_) {
	__jule_tuple_x_1e4773826_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1e4773826_TypeDecl> _41117_root = _1e6968585_step(_self_);;
	if ((_41117_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1e6964dab_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _41117_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e696554e_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e62d85ba_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1e62d9e6d_pushErr(_1e62d991d_directiveEval* _self_, jule::Ptr<_20d155596_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*(_self_))._field_logs = jule::alloc_for_append((*(_self_))._field_logs,1);(*(_self_))._field_logs.__push(_24305e4ae_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_24305e8ee_Logf(_2137_fmt, _2150_args), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _1e62da325_splitOperans(_1e62d991d_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_20d155596_Token>>* _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < ((*(_3351_tokens)).len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_20d155596_Token> _4017_b = (*(_3351_tokens))[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1e9499789:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1e949791e;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1e9499800:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1e9499569:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1e949791e;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push((*(_3351_tokens)).slice(_3817_last, _3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1e949791e:;
	}
	_iter_end_1e949791e:;;
	if ((_3817_last < (*(_3351_tokens)).len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push((*(_3351_tokens)).slice(_3817_last));;
	} else {
		_1e62d9e6d_pushErr(_self_, (*(_3351_tokens))[(_3817_last - 1LL)], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _1e62da633_evalDirectiveIdent(_1e62d991d_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e949c79d:;
		if (it != expr_end) {
			jule::Str *_7716_var = it;
			{
				if (((*(_7716_var)) == _7333_ident)) {
					return true;;
				};
			}
			_iter_next_1e949c79d:;
			++it;
			goto _iter_begin_1e949c79d;
		}
		_iter_end_1e949c79d:;
	};
	return false;;
}



inline jule::Bool _1e62da941_evalDirectivePart(_1e62d991d_directiveEval* _self_, jule::Slice<jule::Ptr<_20d155596_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_8740_part[0LL].get()._field_Kind == jule::Str("!", 1)));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_1e62d9e6d_pushErr(_self_, _8740_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _9817_result = _1e62da633_evalDirectiveIdent(_self_, _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;;
}



inline jule::Bool _1e62daba5_eval(_1e62d991d_directiveEval* _self_) {
	if (((*(_self_))._field_d.get()._field_Args.len() == 0LL)) {
		_1e62d9e6d_pushErr(_self_, (*(_self_))._field_d.get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _11317_logicalOrParts = _1e62da325_splitOperans(_self_, jule::Str("||", 2), &((*(_self_))._field_d.get()._field_Args));;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_11317_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e94a3ad4:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d155596_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _12021_logicalAndParts = _1e62da325_splitOperans(_self_, jule::Str("&&", 2), &(_11821_part));;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_12021_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e94a4cd3:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_20d155596_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_20d155596_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_Kind == jule::Str("(", 1)))) {
								jule::Ptr<_20d155596_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_Kind != jule::Str(")", 1)))) {
									_1e62d9e6d_pushErr(_self_, _12621_first, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								_12525_andPart=_12525_andPart.slice(1LL, (_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _1e62da941_evalDirectivePart(_self_, _12525_andPart));
						}
						_iter_next_1e94a4cd3:;
						++it;
						goto _iter_begin_1e94a4cd3;
					}
					_iter_end_1e94a4cd3:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1e94a3ad4:;
			++it;
			goto _iter_begin_1e94a3ad4;
		}
		_iter_end_1e94a3ad4:;
	};
	return _11117_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e62d991d_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e685c028_JuleImporter> static__1e6386987_New(_1e62d85ba_CompileInfo _5819_info) {
	jule::Ptr<_1e685c028_JuleImporter> _5917_imp = jule::new_ptr<_1e685c028_JuleImporter>(_1e685c028_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_242d165c9_PathStdlib}), });;
	_1e62d8dd4_initVars(&(_5917_imp.get()._field_vars), &(_5819_info));
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_1e54a4149_ImportInfo>> _1e63ca04c_AllPackages(_1e685c028_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1e63e918c_SetModPath(_1e685c028_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1e640a80d_GetModPath(_1e685c028_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1e6436e55_ModById(_1e685c028_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1e54a4149_ImportInfo> _1e643b575_GetImport(_1e685c028_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e94abe50:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1e94abe50:;
			++it;
			goto _iter_begin_1e94abe50;
		}
		_iter_end_1e94abe50:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1e473e391_Ast__jule_tuple_s_24305e4ae_Log _1e64ee47e_ImportPackage(_1e685c028_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1e473e391_Ast__jule_tuple_s_24305e4ae_Log __jule_func_result;
	jule::Slice<jule::Ptr<_24050355a_DirEntry>> _9717_dirents = ({
		auto except = static__2412335ca_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_24305e4ae_Log>::make({_1e638129a_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_24050355a_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1e4be5cdc_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10217_newMod;
			jule::Slice<_24305e4ae_Log> _10525_errs = _1e4be5ec9_CheckModuleFile((*(_self_))._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1e473e391_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1e473e391_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto expr = &(_9717_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e94b0e87:;
		if (it != expr_end) {
			jule::Ptr<_24050355a_DirEntry> _11316_dirent = *it;
			{
				if ((_240503c53_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_242ed2883_HasSuffix(_11316_dirent.get()._field_Name, jule::Str(".jule", 5)))))) {
					goto _iter_next_1e94b0e87;
				};
				jule::Str _11917__path = _241312d08_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_20d15a931_File> _12021_file = _20d15be60_NewFileSet(_11917__path);;
				_20d15b0b3_Fill(_12021_file.ptr(), _1e4beec5d_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_24305e4ae_Log> _12221_errors = _20d16780b_Lex(_12021_file, static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1e68db838_FileInfo> _12721_finfo = _1e68de440_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1e62bdcba_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1e94b0e87;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_24305e4ae_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e6510a23_isPassBuildDirectives(_self_, &(_12721_finfo.get()._field_Ast));
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_1e94b0e87;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_1e94b0e87:;
			++it;
			goto _iter_begin_1e94b0e87;
		}
		_iter_end_1e94b0e87:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1e650d207_Imported(_1e685c028_JuleImporter* _self_, jule::Ptr<_1e54a4149_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e94b6498:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1e94b6498:;
			++it;
			goto _iter_begin_1e94b6498;
		}
		_iter_end_1e94b6498:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e94b7c6e:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1e94b7c6e:;
				++it;
				_16217_i++;
				goto _iter_begin_1e94b7c6e;
			}
			_iter_end_1e94b7c6e:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		(*(_self_))._field_mods = jule::alloc_for_append((*(_self_))._field_mods,1);(*(_self_))._field_mods.__push((*(_self_))._field_mod);;
		_julec_label_setted:;
	};
	(*(_self_))._field_pkgs = jule::alloc_for_append((*(_self_))._field_pkgs,1);(*(_self_))._field_pkgs.__push(_15331_imp);;
}



inline __jule_tuple_bool__jule_tuple_s_24305e4ae_Log _1e6510a23_isPassBuildDirectives(_1e685c028_JuleImporter* _self_, jule::Ptr<_1e473e391_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_24305e4ae_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*(_17945_file)).get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e94bad93:;
		if (it != expr_end) {
			jule::Ptr<_1e474057e_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_Tag.get()._field_Kind != jule::Str("build", 5))) {
					goto _iter_next_1e94bad93;
				};
				_1e62d991d_directiveEval _18421_de = _1e62d991d_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18817_result = _1e62daba5_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1e94bad93:;
			++it;
			goto _iter_begin_1e94bad93;
		}
		_iter_end_1e94bad93:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e685c028_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4bec5b8_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e94ddaca_isCommonOrdered(jule::Slice<jule::Ptr<_1e4790018_Struct>> _1834_s, jule::Ptr<_1e4790018_Struct> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e94deb75:;
		if (it != expr_end) {
			jule::Ptr<_1e4790018_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e94e048e:;
					if (it != expr_end) {
						jule::Ptr<_1e4790018_Struct> *_2020_t2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_t2)))) {
								return false;;
							};
						}
						_iter_next_1e94e048e:;
						++it;
						goto _iter_begin_1e94e048e;
					}
					_iter_end_1e94e048e:;
				};
			}
			_iter_next_1e94deb75:;
			++it;
			goto _iter_begin_1e94deb75;
		}
		_iter_end_1e94deb75:;
	};
	return true;;
}

inline jule::Bool _1e94e5d35_isCommonOrdered(jule::Slice<jule::Ptr<_1e54ca291_Var>> _1834_s, jule::Ptr<_1e54ca291_Var> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e94e6d8b:;
		if (it != expr_end) {
			jule::Ptr<_1e54ca291_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e94e76a5:;
					if (it != expr_end) {
						jule::Ptr<_1e54ca291_Var> *_2020_t2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_t2)))) {
								return false;;
							};
						}
						_iter_next_1e94e76a5:;
						++it;
						goto _iter_begin_1e94e76a5;
					}
					_iter_end_1e94e76a5:;
				};
			}
			_iter_next_1e94e6d8b:;
			++it;
			goto _iter_begin_1e94e6d8b;
		}
		_iter_end_1e94e6d8b:;
	};
	return true;;
}



inline void _1e94d8179_orderCommon(jule::Slice<jule::Ptr<_1e4790018_Struct>>* _3135_s) {
	jule::I64 _3217_i = 0LL;;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e94d94aa:;
		if (it != expr_end) {
			jule::I64 _3314_j = it - expr->begin();
			jule::Ptr<_1e4790018_Struct> _3321_t = *it;
			{
				if ((_3321_t.get()._field_CppLinked || (_3321_t.get()._field_Depends.len() == 0LL))) {
					(*(_3135_s)).swap(_3217_i, _3314_j);
					(_3217_i)++;
				};
			}
			_iter_next_1e94d94aa:;
			++it;
			_3314_j++;
			goto _iter_begin_1e94d94aa;
		}
		_iter_end_1e94d94aa:;
	};
	jule::Slice<jule::Ptr<_1e4790018_Struct>> _4017_sp = (*(_3135_s)).slice(_3217_i);;
	jule::I64 _4117_n = (_4017_sp.len() - 1LL);;
	{
		auto expr = &(_4017_sp);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e94db80e:;
		if (it != expr_end) {
			{
				jule::Bool _4321_swapped = false;;
				jule::I64 _4421_k = 0LL;;
				for (; (_4421_k < _4117_n); (_4421_k)++) {
					{
						if ((!(_1e94ddaca_isCommonOrdered(_4017_sp.slice((_4421_k + 1LL)), _4017_sp[_4421_k])))) {
							_4017_sp.swap(_4421_k, static_cast<jule::I64>((_4421_k + 1LL)));
							_4321_swapped=true;
						};
					}
				_iter_next_1e94dc634:;
				}
				_iter_end_1e94dc634:;;
				if ((!(_4321_swapped))) {
					goto _iter_end_1e94db80e;
				};
				(_4117_n)--;
			}
			_iter_next_1e94db80e:;
			++it;
			goto _iter_begin_1e94db80e;
		}
		_iter_end_1e94db80e:;
	};
}

inline void _1e94d8a1a_orderCommon(jule::Slice<jule::Ptr<_1e54ca291_Var>>* _3135_s) {
	jule::I64 _3217_i = 0LL;;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e94e1715:;
		if (it != expr_end) {
			jule::I64 _3314_j = it - expr->begin();
			jule::Ptr<_1e54ca291_Var> _3321_t = *it;
			{
				if ((_3321_t.get()._field_CppLinked || (_3321_t.get()._field_Depends.len() == 0LL))) {
					(*(_3135_s)).swap(_3217_i, _3314_j);
					(_3217_i)++;
				};
			}
			_iter_next_1e94e1715:;
			++it;
			_3314_j++;
			goto _iter_begin_1e94e1715;
		}
		_iter_end_1e94e1715:;
	};
	jule::Slice<jule::Ptr<_1e54ca291_Var>> _4017_sp = (*(_3135_s)).slice(_3217_i);;
	jule::I64 _4117_n = (_4017_sp.len() - 1LL);;
	{
		auto expr = &(_4017_sp);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e94e3a69:;
		if (it != expr_end) {
			{
				jule::Bool _4321_swapped = false;;
				jule::I64 _4421_k = 0LL;;
				for (; (_4421_k < _4117_n); (_4421_k)++) {
					{
						if ((!(_1e94e5d35_isCommonOrdered(_4017_sp.slice((_4421_k + 1LL)), _4017_sp[_4421_k])))) {
							_4017_sp.swap(_4421_k, static_cast<jule::I64>((_4421_k + 1LL)));
							_4321_swapped=true;
						};
					}
				_iter_next_1e94e488e:;
				}
				_iter_end_1e94e488e:;;
				if ((!(_4321_swapped))) {
					goto _iter_end_1e94e3a69;
				};
				(_4117_n)--;
			}
			_iter_next_1e94e3a69:;
			++it;
			goto _iter_begin_1e94e3a69;
		}
		_iter_end_1e94e3a69:;
	};
}



inline void static__1e680051b_orderStructures(jule::Slice<jule::Ptr<_1e4790018_Struct>>* _6036_structs) {
	_1e94d8179_orderCommon(_6036_structs);
}



inline void static__1e683d735_orderVars(jule::Slice<jule::Ptr<_1e54ca291_Var>>* _6630_vars) {
	_1e94d8a1a_orderCommon(_6630_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1e637e991_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a381d2_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1e6a74163_optimizeChild(jule::Ptr<_1e6a73b8a_scopeDeadCode> _self_, jule::Ptr<_1e5480ad7_Scope>* _3938_s) {
	jule::Ptr<_1e6a73b8a_scopeDeadCode> _4017_sdc = jule::new_ptr<_1e6a73b8a_scopeDeadCode>(_1e6a73b8a_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*(_3938_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1e6a767a3_optimizeStmts(_4017_sdc);
	};
}



inline void _1e6a7440a_optimizeBodyChildExceptional(jule::Ptr<_1e6a73b8a_scopeDeadCode> _self_, jule::Ptr<_1e5480ad7_Scope>* _5053_s) {
	jule::Ptr<_1e6a73b8a_scopeDeadCode> _5117_sdc = jule::new_ptr<_1e6a73b8a_scopeDeadCode>(_1e6a73b8a_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*(_5053_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1e6a767a3_optimizeStmts(_5117_sdc);
	};
}



inline void _1e6a74691_optimizeBodyChild(jule::Ptr<_1e6a73b8a_scopeDeadCode> _self_, jule::Ptr<_1e5480ad7_Scope>* _6142_s) {
	jule::Ptr<_1e6a73b8a_scopeDeadCode> _6217_sdc = jule::new_ptr<_1e6a73b8a_scopeDeadCode>(_1e6a73b8a_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*(_6142_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1e6a767a3_optimizeStmts(_6217_sdc);
	};
}



inline void _1e6a74916_optimizeExprModel(jule::Ptr<_1e6a73b8a_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1e6a77ae5_exprDeadCode _7213_edc = static__1e6a78222_new(&(_self_));;
	_1e6a7de3c_optimize(&_7213_edc, _7142_model);
}



inline void _1e6a74ae2_eliminateFollowed(_1e6a73b8a_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1e6a73b8a_scopeDeadCode> _8317_parent = (*(_self_))._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL, (_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1e96c384d:;
	}
	_iter_end_1e96c384d:;;
}



inline void _1e6a74d67_pushGoto(jule::Ptr<_1e6a73b8a_scopeDeadCode> _self_, jule::Ptr<_1e5483612_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1e96c6235:;
	}
	_iter_end_1e96c6235:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1e5483612_GotoSt>>::make({_9232_gt}));
}



inline void _1e6a750dc_pushLabel(jule::Ptr<_1e6a73b8a_scopeDeadCode> _self_, jule::Ptr<_1e5483326_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL, ((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1e96c7995;
			};
			(_10317_i)++;
		}
	_iter_next_1e96c7995:;
	}
	_iter_end_1e96c7995:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1e5483326_Label>>::make({_10233_l}));
}



inline void _1e6a75362_optimizeRangeIter(jule::Ptr<_1e6a73b8a_scopeDeadCode> _self_, jule::Ptr<_1e5482787_RangeIter> _11541_it) {
	_1e6a74916_optimizeExprModel(_self_, &(_11541_it.get()._field_Expr.get()._field_Model));
	_1e6a74691_optimizeBodyChild(_self_, &(_11541_it.get()._field_Scope));
}



inline void _1e6a755d7_optimizeWhileIter(jule::Ptr<_1e6a73b8a_scopeDeadCode> _self_, jule::Ptr<_1e5481da2_WhileIter> _12041_it) {
	_1e6a74916_optimizeExprModel(_self_, &(_12041_it.get()._field_Expr));
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1e6a765c7_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1e6a74691_optimizeBodyChild(_self_, &(_12041_it.get()._field_Scope));
}



inline void _1e6a7585c_optimizeInfIter(jule::Ptr<_1e6a73b8a_scopeDeadCode> _self_, jule::Ptr<_1e548192e_InfIter> _12839_it) {
	_1e6a74691_optimizeBodyChild(_self_, &(_12839_it.get()._field_Scope));
}



inline void _1e6a75ad2_optimizeConditional(jule::Ptr<_1e6a73b8a_scopeDeadCode> _self_, jule::Ptr<_1e5481643_Conditional> _13243_c) {
	{
		auto expr = &(_13243_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e96cd9e0:;
		if (it != expr_end) {
			jule::Ptr<_1e5480ed3_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1e6a74916_optimizeExprModel(_self_, &(_13321_case.get()._field_Expr));
					_1e6a74691_optimizeBodyChild(_self_, &(_13321_case.get()._field_Scope));
				};
			}
			_iter_next_1e96cd9e0:;
			++it;
			goto _iter_begin_1e96cd9e0;
		}
		_iter_end_1e96cd9e0:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1e6a74163_optimizeChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		} else {
			_1e6a74691_optimizeBodyChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1e6a75d57_optimizeMatch(jule::Ptr<_1e6a73b8a_scopeDeadCode> _self_, jule::Ptr<_1e5484833_Match> _15037_m) {
	{
		auto expr = &(_15037_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e96d1570:;
		if (it != expr_end) {
			jule::Ptr<_1e548537d_Case> _15121_case = *it;
			{
				{
					auto expr = &(_15121_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e96d1d89:;
					if (it != expr_end) {
						jule::Ptr<_1e5522d00_Data> _15225_expr = *it;
						{
							_1e6a74916_optimizeExprModel(_self_, &(_15225_expr.get()._field_Model));
						}
						_iter_next_1e96d1d89:;
						++it;
						goto _iter_begin_1e96d1d89;
					}
					_iter_end_1e96d1d89:;
				};
				_1e6a74691_optimizeBodyChild(_self_, &(_15121_case.get()._field_Scope));
			}
			_iter_next_1e96d1570:;
			++it;
			goto _iter_begin_1e96d1570;
		}
		_iter_end_1e96d1570:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1e6a74163_optimizeChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		} else {
			_1e6a74691_optimizeBodyChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1e6a760cc_optimizeAssign(jule::Ptr<_1e6a73b8a_scopeDeadCode> _self_, jule::Ptr<_1e5483e3c_Assign> _16838_assign) {
	_1e6a74916_optimizeExprModel(_self_, &(_16838_assign.get()._field_L.get()._field_Model));
	_1e6a74916_optimizeExprModel(_self_, &(_16838_assign.get()._field_R.get()._field_Model));
}



inline void _1e6a76352_optimizeMultiAssign(jule::Ptr<_1e6a73b8a_scopeDeadCode> _self_, jule::Ptr<_1e54842e4_MultiAssign> _17343_assign) {
	{
		auto expr = &(_17343_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e96d5222:;
		if (it != expr_end) {
			jule::Ptr<_1e5522d00_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1e6a74916_optimizeExprModel(_self_, &(_17421_l.get()._field_Model));
				};
			}
			_iter_next_1e96d5222:;
			++it;
			goto _iter_begin_1e96d5222;
		}
		_iter_end_1e96d5222:;
	};
	_1e6a74916_optimizeExprModel(_self_, &(_17343_assign.get()._field_R));
}



inline void _1e6a765c7_optimizeStmt(jule::Ptr<_1e6a73b8a_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1e96d68a5:;
			{
				jule::Ptr<_1e5480ad7_Scope> _18521_scope = _18236_st.cast_ptr<_1e5480ad7_Scope>(&__jule_any_type21);;
				if (_18521_scope.get()._field_Deferred) {
					_1e6a76a8e_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1e6a74163_optimizeChild(_self_, &(_18521_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1e96d6a2b:;
			{
				_1e6a75362_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1e5482787_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1e96d6a92:;
			{
				_1e6a755d7_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1e5481da2_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1e96d6b08:;
			{
				_1e6a7585c_optimizeInfIter(_self_, _18236_st.cast_ptr<_1e548192e_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1e96d6b80:;
			{
				_1e6a75ad2_optimizeConditional(_self_, _18236_st.cast_ptr<_1e5481643_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1e96d6c07:;
			{
				_1e6a75d57_optimizeMatch(_self_, _18236_st.cast_ptr<_1e5484833_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1e96d6c7e:;
			{
				_1e6a760cc_optimizeAssign(_self_, _18236_st.cast_ptr<_1e5483e3c_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1e96d6d06:;
			{
				_1e6a76352_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1e54842e4_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1e96d6d7d:;
			{
				jule::Ptr<_1e5522d00_Data> _20621_d = _18236_st.cast_ptr<_1e5522d00_Data>(&__jule_any_type23);;
				if (_self_.get()._field_except) {
					goto _match_end_1e96d69b5;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type29) {
						_case_begin_1e96dbc40:;
						{
							_1e6a74ae2_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1e96dc25c:;
						{
							_1e6a74916_optimizeExprModel(_self_, &(_20621_d.get()._field_Model));
						}
					}
					_match_end_1e96dc207:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1e96d6e05:;
			{
				_1e6a74ae2_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1e96d6e7c:;
			{
				_1e6a74d67_pushGoto(_self_, _18236_st.cast_ptr<_1e5483612_GotoSt>(&__jule_any_type42));
				_1e6a74ae2_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1e96d7004:;
			{
				_1e6a750dc_pushLabel(_self_, _18236_st.cast_ptr<_1e5483326_Label>(&__jule_any_type20));
			}
		}
		_match_end_1e96d69b5:;
	};
}



inline void _1e6a767a3_optimizeStmts(jule::Ptr<_1e6a73b8a_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1e6a765c7_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1e96de65a:;
	}
	_iter_end_1e96de65a:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a73b8a_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1e6a77ae5_exprDeadCode static__1e6a78222_new(jule::Ptr<_1e6a73b8a_scopeDeadCode>* _5024_s) {
	return _1e6a77ae5_exprDeadCode{._field_s=(*(_5024_s))};;
}



inline void _1e6a78497_binary(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e5452ca7_BinopExprModel> _5625_m) {
	_1e6a7de3c_optimize(_self_, &(_5625_m.get()._field_Left.get()._field_Model));
	_1e6a7de3c_optimize(_self_, &(_5625_m.get()._field_Right.get()._field_Model));
}



inline void _1e6a7871c_unary(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545315e_UnaryExprModel> _6124_m) {
	_1e6a7de3c_optimize(_self_, &(_6124_m.get()._field_Expr.get()._field_Model));
}



inline void _1e6a78992_structureLit(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e5453912_StructLitExprModel> _6531_m) {
	{
		auto expr = &(_6531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e96e2790:;
		if (it != expr_end) {
			jule::Ptr<_1e545355a_StructArgExprModel> _6621_arg = *it;
			{
				_1e6a7de3c_optimize(_self_, &(_6621_arg.get()._field_Expr));
			}
			_iter_next_1e96e2790:;
			++it;
			goto _iter_begin_1e96e2790;
		}
		_iter_end_1e96e2790:;
	};
}



inline void _1e6a78c17_allocStructure(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e5453c20_AllocStructLitExprModel> _7133_m) {
	_1e6a78992_structureLit(_self_, _7133_m.get()._field_Lit);
}



inline void _1e6a78e8c_casting(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e5454270_CastingExprModel> _7526_m) {
	_1e6a7de3c_optimize(_self_, &(_7526_m.get()._field_Expr));
}



inline void _1e6a79212_args(_1e6a77ae5_exprDeadCode* _self_, jule::Slice<jule::Any>* _7924_args) {
	{
		auto expr = _7924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e96e497e:;
		if (it != expr_end) {
			jule::Any _8021_arg = *it;
			{
				_1e6a7de3c_optimize(_self_, &(_8021_arg));
			}
			_iter_next_1e96e497e:;
			++it;
			goto _iter_begin_1e96e497e;
		}
		_iter_end_1e96e497e:;
	};
}



inline void _1e6a79487_funcCall(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e5454b22_FnCallExprModel> _8527_m) {
	_1e6a7de3c_optimize(_self_, &(_8527_m.get()._field_Expr));
	_1e6a79212_args(_self_, &(_8527_m.get()._field_Args));
	if ((_8527_m.get()._field_Except != nullptr)) {
		_1e6a7440a_optimizeBodyChildExceptional((*(_self_))._field_s, &(_8527_m.get()._field_Except));
	};
}



inline void _1e6a7970c_slice(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e5454ec9_SliceExprModel> _9324_m) {
	_1e6a79212_args(_self_, &(_9324_m.get()._field_Elems));
}



inline void _1e6a79982_array(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e5457c02_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_1e6a7de3c_optimize(_self_, &(_9724_m.get()._field_Elems[0LL]));
	};
	_1e6a79212_args(_self_, &(_9724_m.get()._field_Elems));
}



inline void _1e6a79c07_indexing(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545544c_IndexingExprModel> _10427_m) {
	_1e6a7de3c_optimize(_self_, &(_10427_m.get()._field_Expr.get()._field_Model));
	_1e6a7de3c_optimize(_self_, &(_10427_m.get()._field_Index.get()._field_Model));
}



inline void _1e6a79e7c_anonFunc(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e5455804_AnonFnExprModel> _10927_m) {
	_1e6a76a8e_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _1e6a7a202_mapExpr(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545612e_MapExprModel> _11326_m) {
	{
		auto expr = &(_11326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e96ea776:;
		if (it != expr_end) {
			jule::Ptr<_1e5455bab_KeyValPairExprModel> _11421_pair = *it;
			{
				_1e6a7de3c_optimize(_self_, &(_11421_pair.get()._field_Key));
				_1e6a7de3c_optimize(_self_, &(_11421_pair.get()._field_Val));
			}
			_iter_next_1e96ea776:;
			++it;
			goto _iter_begin_1e96ea776;
		}
		_iter_end_1e96ea776:;
	};
}



inline void _1e6a7a477_slicing(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545666d_SlicingExprModel> _12026_m) {
	_1e6a7de3c_optimize(_self_, &(_12026_m.get()._field_Expr));
	_1e6a7de3c_optimize(_self_, &(_12026_m.get()._field_Left));
	if ((_12026_m.get()._field_Right != nullptr)) {
		_1e6a7de3c_optimize(_self_, &(_12026_m.get()._field_Right));
	};
}



inline void _1e6a7a6ec_traitSub(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e5456bac_TraitSubIdentExprModel> _12827_m) {
	_1e6a7de3c_optimize(_self_, &(_12827_m.get()._field_Expr));
}



inline void _1e6a7a972_structureSub(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e5457493_StructSubIdentExprModel> _13231_m) {
	_1e6a7de3c_optimize(_self_, &(_13231_m.get()._field_Expr.get()._field_Model));
}



inline void _1e6a7abe7_commonSub(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545854e_CommonSubIdentExprModel> _13628_m) {
	_1e6a7de3c_optimize(_self_, &(_13628_m.get()._field_Expr));
}



inline void _1e6a7ae6c_tuple(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545884b_TupleExprModel> _14024_m) {
	{
		auto expr = &(_14024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e96eeb21:;
		if (it != expr_end) {
			jule::Ptr<_1e5522d00_Data> _14121_d = *it;
			{
				_1e6a7de3c_optimize(_self_, &(_14121_d.get()._field_Model));
			}
			_iter_next_1e96eeb21:;
			++it;
			goto _iter_begin_1e96eeb21;
		}
		_iter_end_1e96eeb21:;
	};
}



inline void _1e6a7b1e2_newCall(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e5459819_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_1e6a7de3c_optimize(_self_, &(_14626_m.get()._field_Init));
	};
}



inline void _1e6a7b467_outCall(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e5458c25_BuiltinOutCallExprModel> _15226_m) {
	_1e6a7de3c_optimize(_self_, &(_15226_m.get()._field_Expr));
}



inline void _1e6a7b6dc_outlnCall(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e5459110_BuiltinOutlnCallExprModel> _15628_m) {
	_1e6a7de3c_optimize(_self_, &(_15628_m.get()._field_Expr));
}



inline void _1e6a7b962_panicCall(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e5459c04_BuiltinPanicCallExprModel> _16028_m) {
	_1e6a7de3c_optimize(_self_, &(_16028_m.get()._field_Expr));
}



inline void _1e6a7bbd7_assertCall(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545a1aa_BuiltinAssertCallExprModel> _16429_m) {
	_1e6a7de3c_optimize(_self_, &(_16429_m.get()._field_Expr));
}



inline void _1e6a7be5c_errorCall(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545c08b_BuiltinErrorCallExprModel> _16828_m) {
	_1e6a7de3c_optimize(_self_, &(_16828_m.get()._field_Err.get()._field_Model));
}



inline void _1e6a7c1d2_makeCall(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545a661_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_1e6a7de3c_optimize(_self_, &(_17227_m.get()._field_Len));
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_1e6a7de3c_optimize(_self_, &(_17227_m.get()._field_Cap));
	};
}



inline void _1e6a7c457_appendCall(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545aa4b_BuiltinAppendCallExprModel> _18129_m) {
	_1e6a7de3c_optimize(_self_, &(_18129_m.get()._field_Dest));
	_1e6a7de3c_optimize(_self_, &(_18129_m.get()._field_Elements));
}



inline void _1e6a7c6cc_lenCall(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545ad6a_BuiltinLenCallExprModel> _18626_m) {
	_1e6a7de3c_optimize(_self_, &(_18626_m.get()._field_Expr.get()._field_Model));
}



inline void _1e6a7c952_capCall(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545b189_BuiltinCapCallExprModel> _19026_m) {
	_1e6a7de3c_optimize(_self_, &(_19026_m.get()._field_Expr.get()._field_Model));
}



inline void _1e6a7cbc7_cloneCall(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545942e_BuiltinCloneCallExprModel> _19428_m) {
	_1e6a7de3c_optimize(_self_, &(_19428_m.get()._field_Expr));
}



inline void _1e6a7ce4c_deleteCall(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545b83d_BuiltinDeleteCallExprModel> _19829_m) {
	_1e6a7de3c_optimize(_self_, &(_19829_m.get()._field_Dest.get()._field_Model));
	if ((_19829_m.get()._field_Key != nullptr)) {
		_1e6a7de3c_optimize(_self_, &(_19829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1e6a7d1c2_sizeof(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545c388_SizeofExprModel> _20525_m) {
	_1e6a7de3c_optimize(_self_, &(_20525_m.get()._field_Expr));
}



inline void _1e6a7d447_alignof(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545c674_AlignofExprModel> _20926_m) {
	_1e6a7de3c_optimize(_self_, &(_20926_m.get()._field_Expr));
}



inline void _1e6a7d6bc_integratedToStr(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545cc6d_IntegratedToStrExprModel> _21334_m) {
	_1e6a7de3c_optimize(_self_, &(_21334_m.get()._field_Expr));
}



inline void _1e6a7d942_free(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545d422_FreeExprModel> _21723_m) {
	_1e6a7de3c_optimize(_self_, &(_21723_m.get()._field_Expr));
}



inline void _1e6a7dbb7_backendEmit(_1e6a77ae5_exprDeadCode* _self_, jule::Ptr<_1e545d136_BackendEmitExprModel> _22130_m) {
	_1e6a79212_args(_self_, &(_22130_m.get()._field_Exprs));
}



inline void _1e6a7de3c_optimize(_1e6a77ae5_exprDeadCode* _self_, jule::Any* _22528_model) {
	{
		auto &_match_expr{ (*(_22528_model)) };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1e970c36a:;
			{
				_1e6a78497_binary(_self_, (*(_22528_model)).cast_ptr<_1e5452ca7_BinopExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1e970c3e2:;
			{
				_1e6a7871c_unary(_self_, (*(_22528_model)).cast_ptr<_1e545315e_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1e970c469:;
			{
				_1e6a78992_structureLit(_self_, (*(_22528_model)).cast_ptr<_1e5453912_StructLitExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1e970c843:;
			{
				_1e6a78c17_allocStructure(_self_, (*(_22528_model)).cast_ptr<_1e5453c20_AllocStructLitExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1e970c8a9:;
			{
				_1e6a78e8c_casting(_self_, (*(_22528_model)).cast_ptr<_1e5454270_CastingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1e970c931:;
			{
				_1e6a79487_funcCall(_self_, (*(_22528_model)).cast_ptr<_1e5454b22_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1e970c9a8:;
			{
				_1e6a7970c_slice(_self_, (*(_22528_model)).cast_ptr<_1e5454ec9_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1e970ca30:;
			{
				_1e6a79982_array(_self_, (*(_22528_model)).cast_ptr<_1e5457c02_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1e970caa7:;
			{
				_1e6a79c07_indexing(_self_, (*(_22528_model)).cast_ptr<_1e545544c_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1e970cb2e:;
			{
				_1e6a79e7c_anonFunc(_self_, (*(_22528_model)).cast_ptr<_1e5455804_AnonFnExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1e970cba6:;
			{
				_1e6a7a202_mapExpr(_self_, (*(_22528_model)).cast_ptr<_1e545612e_MapExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1e970cc2d:;
			{
				_1e6a7a477_slicing(_self_, (*(_22528_model)).cast_ptr<_1e545666d_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1e970cca5:;
			{
				_1e6a7a6ec_traitSub(_self_, (*(_22528_model)).cast_ptr<_1e5456bac_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1e970cd2c:;
			{
				_1e6a7a972_structureSub(_self_, (*(_22528_model)).cast_ptr<_1e5457493_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1e970cda4:;
			{
				_1e6a7abe7_commonSub(_self_, (*(_22528_model)).cast_ptr<_1e545854e_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1e970ce2b:;
			{
				_1e6a7ae6c_tuple(_self_, (*(_22528_model)).cast_ptr<_1e545884b_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1e970cea3:;
			{
				_1e6a7b467_outCall(_self_, (*(_22528_model)).cast_ptr<_1e5458c25_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1e970d02a:;
			{
				_1e6a7b6dc_outlnCall(_self_, (*(_22528_model)).cast_ptr<_1e5459110_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1e970d0a2:;
			{
				_1e6a7b1e2_newCall(_self_, (*(_22528_model)).cast_ptr<_1e5459819_BuiltinNewCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1e970d129:;
			{
				_1e6a7b962_panicCall(_self_, (*(_22528_model)).cast_ptr<_1e5459c04_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1e970d1a1:;
			{
				_1e6a7bbd7_assertCall(_self_, (*(_22528_model)).cast_ptr<_1e545a1aa_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1e970d228:;
			{
				_1e6a7be5c_errorCall(_self_, (*(_22528_model)).cast_ptr<_1e545c08b_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1e970d2a0:;
			{
				_1e6a7c1d2_makeCall(_self_, (*(_22528_model)).cast_ptr<_1e545a661_BuiltinMakeCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1e970d327:;
			{
				_1e6a7c457_appendCall(_self_, (*(_22528_model)).cast_ptr<_1e545aa4b_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1e970d39e:;
			{
				_1e6a7c6cc_lenCall(_self_, (*(_22528_model)).cast_ptr<_1e545ad6a_BuiltinLenCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1e970d426:;
			{
				_1e6a7c952_capCall(_self_, (*(_22528_model)).cast_ptr<_1e545b189_BuiltinCapCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1e970d49d:;
			{
				_1e6a7cbc7_cloneCall(_self_, (*(_22528_model)).cast_ptr<_1e545942e_BuiltinCloneCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1e970d525:;
			{
				_1e6a7ce4c_deleteCall(_self_, (*(_22528_model)).cast_ptr<_1e545b83d_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1e970d59c:;
			{
				_1e6a7d1c2_sizeof(_self_, (*(_22528_model)).cast_ptr<_1e545c388_SizeofExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1e970d624:;
			{
				_1e6a7d447_alignof(_self_, (*(_22528_model)).cast_ptr<_1e545c674_AlignofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1e970d69b:;
			{
				_1e6a7d6bc_integratedToStr(_self_, (*(_22528_model)).cast_ptr<_1e545cc6d_IntegratedToStrExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1e970d723:;
			{
				_1e6a7d942_free(_self_, (*(_22528_model)).cast_ptr<_1e545d422_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1e970d79a:;
			{
				_1e6a7dbb7_backendEmit(_self_, (*(_22528_model)).cast_ptr<_1e545d136_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		_match_end_1e970c568:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a77ae5_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d5b2c34_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _226994c8a_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d5b300e_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d77659b_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6223802_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e62239de_scopeOptimizer> static__2269b51b7_new(jule::Ptr<_1e5480ad7_Scope> _4523_scope) {
	return jule::new_ptr<_1e62239de_scopeOptimizer>(_1e62239de_scopeOptimizer{._field_scope=_4523_scope});;
}



inline void _2269bb036_setCurrentStmt(_1e62239de_scopeOptimizer* _self_, jule::Any _5137_stmt) {
	(*(_self_))._field_scope.get()._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5137_stmt))))));
}



inline void _2269bc037_optimizeData(_1e62239de_scopeOptimizer* _self_, jule::Ptr<_1e5522d00_Data> _5535_d) {
	{
		auto &_match_expr{ _5535_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1e97480a9:;
			{
				jule::Ptr<_1e5454b22_FnCallExprModel> _5821_m = _5535_d.get()._field_Model.cast_ptr<_1e5454b22_FnCallExprModel>(&__jule_any_type34);;
				if (_2403599cc_Production) {
					if (((!(_1e546500b_IsBuiltin(_5821_m.get()._field_Func.ptr()))) && _20d5b5561_isStdPackage(_5821_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("debug", 5)))) {
						_2269bb036_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1e9747d9a:;
	};
	static__226a1568a_optimize(&(_5535_d.get()._field_Model));
}



inline void _2269aaae7_optimizeVar(_1e62239de_scopeOptimizer* _self_, jule::Ptr<_1e54ca291_Var> _7034_v) {
	if ((_7034_v.get()._field_Value != nullptr)) {
		static__226a1568a_optimize(&(_7034_v.get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _2269c0e3c_optimizeConditional(_1e62239de_scopeOptimizer* _self_, jule::Ptr<_1e5481643_Conditional> _7642_c) {
	{
		auto expr = &(_7642_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e974b08a:;
		if (it != expr_end) {
			jule::Ptr<_1e5480ed3_If> _7721_elif = *it;
			{
				static__226a1568a_optimize(&(_7721_elif.get()._field_Expr));
				_20d50e004_optimizeChild(_self_, _7721_elif.get()._field_Scope);
			}
			_iter_next_1e974b08a:;
			++it;
			goto _iter_begin_1e974b08a;
		}
		_iter_end_1e974b08a:;
	};
	if ((_7642_c.get()._field_Default != nullptr)) {
		_20d50e004_optimizeChild(_self_, _7642_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_226a3480d_Cond))) {
		return;;
	};
	jule::Bool _8917_constCase = false;;
	{
		auto expr = &(_7642_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e974cd8e:;
		if (it != expr_end) {
			jule::I64 _9214_i = it - expr->begin();
			jule::Ptr<_1e5480ed3_If> _9221_elif = *it;
			{
				if ((!(_20d5b8476_isConstantValidConditionalCase(&(_9221_elif))))) {
					goto _iter_next_1e974cd8e;
				};
				_8917_constCase=true;
				_7642_c.get()._field_Elifs=_7642_c.get()._field_Elifs.slice(0LL, _9214_i);
				_7642_c.get()._field_Default=jule::new_ptr<_1e54812be_Else>(_1e54812be_Else{._field_Scope=_9221_elif.get()._field_Scope});
				goto _iter_end_1e974cd8e;
			}
			_iter_next_1e974cd8e:;
			++it;
			_9214_i++;
			goto _iter_begin_1e974cd8e;
		}
		_iter_end_1e974cd8e:;
	};
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1e5480ed3_If>* _10917_i = (&(_7642_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1e5480ed3_If>* _11013_end = (&(_7642_c.get()._field_Elifs[(_7642_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_20d5d2ec9_isUnreachableConditionalCase(&((*(_10917_i))))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1e9751029:;
	}
	_iter_end_1e9751029:;;
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_constCase))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto expr = &(_7642_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9752679:;
		if (it != expr_end) {
			jule::I64 _12913_j = it - expr->begin();
			jule::Ptr<_1e5480ed3_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1e9752679:;
			++it;
			_12913_j++;
			goto _iter_begin_1e9752679;
		}
		_iter_end_1e9752679:;
	};
	if ((_12817_only != -1LL)) {
		_2269bb036_setCurrentStmt(_self_, jule::Any(_7642_c.get()._field_Elifs[_12817_only].get()._field_Scope, &__jule_any_type21));
	};
}



inline void _2269c4209_buildDefaultConstatTrueCase(_1e62239de_scopeOptimizer* _self_, jule::Ptr<_1e548537d_Case> _14550_case, jule::I64* _14568_i, jule::Ptr<_1e5484833_Match>* _14581_m) {
	_14550_case.get()._field_Exprs=nullptr;
	jule::I64 _14713_start = (*(_14568_i));;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14550_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1e97550e9;
			};
			jule::Any *_15322_stmt = &(_14550_case.get()._field_Scope.get()._field_Stmts[(_14550_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15322_stmt)) };
				
				if (_match_expr.type == &__jule_any_type49) {
					_case_begin_1e9755605:;
					{
						((*(_14568_i)))++;
						if (((*(_14568_i)) >= (*(_14581_m)).get()._field_Cases.len())) {
							(*(_15322_stmt))=jule::Any((*(_14581_m)).get()._field_Default.get()._field_Scope, &__jule_any_type21);
							goto _iter_end_1e97550e9;
						};
						_14550_case=(*(_14581_m)).get()._field_Cases[(*(_14568_i))];
						(*(_15322_stmt))=jule::Any(_14550_case.get()._field_Scope, &__jule_any_type21);
					}
				}
				else {
					_case_begin_1e9756b34:;
					{
						goto _iter_end_1e97550e9;
					}
				}
				_match_end_1e9756a46:;
			};
		}
	_iter_next_1e97550e9:;
	}
	_iter_end_1e97550e9:;;
	(*(_14581_m)).get()._field_Default=(*(_14581_m)).get()._field_Cases[_14713_start];
	(*(_14581_m)).get()._field_Cases=(*(_14581_m)).get()._field_Cases.slice(0LL, _14713_start);
}



inline void _2269c511c_optimizeMatch(_1e62239de_scopeOptimizer* _self_, jule::Ptr<_1e5484833_Match> _17136_m) {
	{
		auto expr = &(_17136_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9758b8b:;
		if (it != expr_end) {
			jule::Ptr<_1e548537d_Case> _17221_case = *it;
			{
				{
					auto expr = &(_17221_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e97594c7:;
					if (it != expr_end) {
						jule::Ptr<_1e5522d00_Data> _17325_expr = *it;
						{
							static__226a1568a_optimize(&(_17325_expr.get()._field_Model));
						}
						_iter_next_1e97594c7:;
						++it;
						goto _iter_begin_1e97594c7;
					}
					_iter_end_1e97594c7:;
				};
				_20d50e004_optimizeChild(_self_, _17221_case.get()._field_Scope);
			}
			_iter_next_1e9758b8b:;
			++it;
			goto _iter_begin_1e9758b8b;
		}
		_iter_end_1e9758b8b:;
	};
	if ((_17136_m.get()._field_Default != nullptr)) {
		_20d50e004_optimizeChild(_self_, _17136_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_226a3480d_Cond))) {
		return;;
	};
	jule::Bool _18617_constCase = false;;
	{
		auto expr = &(_17136_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e975b0cd:;
		if (it != expr_end) {
			jule::I64 _18918_i = it - expr->begin();
			jule::Ptr<_1e548537d_Case> _18925_case = *it;
			{
				if ((!(_20d58d6c1_isConstantValidMatchCase(&(_18925_case))))) {
					goto _iter_next_1e975b0cd;
				};
				_18617_constCase=true;
				_2269c4209_buildDefaultConstatTrueCase(_self_, _18925_case, &(_18918_i), &(_17136_m));
				goto _iter_end_1e975b0cd;
			}
			_iter_next_1e975b0cd:;
			++it;
			_18918_i++;
			goto _iter_begin_1e975b0cd;
		}
		_iter_end_1e975b0cd:;
	};
	if ((_17136_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1e548537d_Case>* _20317_i = (&(_17136_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1e548537d_Case>* _20413_end = (&(_17136_m.get()._field_Cases[(_17136_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_2269d5418_isUnreachableMatchCase(&((*(_20317_i))))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1e975dc7e:;
	}
	_iter_end_1e975dc7e:;;
	if ((!(_18617_constCase))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto expr = &(_17136_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e975ed3a:;
		if (it != expr_end) {
			jule::I64 _21913_j = it - expr->begin();
			jule::Ptr<_1e548537d_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1e975ed3a:;
			++it;
			_21913_j++;
			goto _iter_begin_1e975ed3a;
		}
		_iter_end_1e975ed3a:;
	};
	if ((_21817_only != -1LL)) {
		_2269bb036_setCurrentStmt(_self_, jule::Any(_17136_m.get()._field_Cases[_21817_only].get()._field_Scope, &__jule_any_type21));
	};
}



inline void _2269cd0ae_optimizeRangeIter(_1e62239de_scopeOptimizer* _self_, jule::Ptr<_1e5482787_RangeIter> _23540_it) {
	static__226a1568a_optimize(&(_23540_it.get()._field_Expr.get()._field_Model));
	_20d50e004_optimizeChild(_self_, _23540_it.get()._field_Scope);
}



inline void _2269de4ee_optimizeWhileIter(_1e62239de_scopeOptimizer* _self_, jule::Ptr<_1e5481da2_WhileIter> _24040_it) {
	static__226a1568a_optimize(&(_24040_it.get()._field_Expr));
	_20d4e754d_optimizeStmt(_self_, _24040_it.get()._field_Next);
	_20d50e004_optimizeChild(_self_, _24040_it.get()._field_Scope);
}



inline jule::Bool _2269e0973_substr(_1e62239de_scopeOptimizer* _self_, jule::Ptr<_1e5483e3c_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1e9763da5:;
			{
				jule::Ptr<_1e545666d_SlicingExprModel> _24921_sem = _24629_a.get()._field_R.get()._field_Model.cast_ptr<_1e545666d_SlicingExprModel>(&__jule_any_type98);;
				if ((_24921_sem.get()._field_Expr == _24629_a.get()._field_L.get()._field_Model)) {
					_2269bb036_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_20d77659b_MutSlicingExprModel>(_20d77659b_MutSlicingExprModel{._field_Token=_24921_sem.get()._field_Token, ._field_Expr=_24921_sem.get()._field_Expr, ._field_Left=_24921_sem.get()._field_Left, ._field_Right=_24921_sem.get()._field_Right}), &__jule_any_type126));
					return true;;
				};
			}
		}
		_match_end_1e9763d50:;
	};
	return false;;
}



inline jule::Bool _226a16416_strInsert(_1e62239de_scopeOptimizer* _self_, jule::Ptr<_1e5483e3c_Assign> _26332_a) {
	{
		auto &_match_expr{ _26332_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1e97661e8:;
			{
				jule::Ptr<_1e5452ca7_BinopExprModel> _26621_m = _26332_a.get()._field_R.get()._field_Model.cast_ptr<_1e5452ca7_BinopExprModel>(&__jule_any_type117);;
				if ((_26621_m.get()._field_Right.get()._field_Model == _26332_a.get()._field_L.get()._field_Model)) {
					_2269bb036_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1e6223802_StrInsertBeginExprModel>(_1e6223802_StrInsertBeginExprModel{._field_Dest=_26332_a.get()._field_L.get()._field_Model, ._field_Expr=_26621_m.get()._field_Left.get()._field_Model}), &__jule_any_type127));
					return true;;
				};
			}
		}
		_match_end_1e9765e51:;
	};
	return false;;
}



inline jule::Bool _226a2ed58_strAssign(_1e62239de_scopeOptimizer* _self_, jule::Ptr<_1e5483e3c_Assign> _27832_a) {
	if ((_27832_a.get()._field_Op.get()._field_Kind != jule::Str("=", 1))) {
		return false;;
	};
	jule::Ptr<_1e55539ce_Prim> _28213_lp = _1e5551119_Prim(_27832_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1e5556c13_IsStr(_28213_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_2269e0973_substr(_self_, _27832_a) || _226a16416_strInsert(_self_, _27832_a)) {
			_case_begin_1e976997c:;
			{
				return true;;
			}
		}
		_match_end_1e97698d3:;
	};
	return false;;
}



inline void _226a44ca2_optimizeAssign(_1e62239de_scopeOptimizer* _self_, jule::Ptr<_1e5483e3c_Assign> _29437_assign) {
	if ((_2269bc9a5_Copy && _226a2ed58_strAssign(_self_, _29437_assign))) {
		return;;
	};
	static__226a1568a_optimize(&(_29437_assign.get()._field_L.get()._field_Model));
	static__226a1568a_optimize(&(_29437_assign.get()._field_R.get()._field_Model));
	{
		auto &_match_expr{ _29437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1e976b7d6:;
			{
				if ((_2269ca067_Math && (_1e555256b_Struct(_29437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_29437_assign.get()._field_Op.get()._field_Kind=_29437_assign.get()._field_Op.get()._field_Kind.slice(0LL, (_29437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _30725_model = jule::Any(jule::new_ptr<_1e5452ca7_BinopExprModel>(_1e5452ca7_BinopExprModel{._field_Left=_29437_assign.get()._field_L, ._field_Right=_29437_assign.get()._field_R, ._field_Op=_29437_assign.get()._field_Op}), &__jule_any_type117);;
					static__226a1568a_optimize(&(_30725_model));
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type == &__jule_any_type117) {
							_case_begin_1e976dbb2:;
							{
								_29437_assign.get()._field_R=jule::new_ptr<_1e54527e0_OperandExprModel>((*(_29437_assign.get()._field_R)));
								_29437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_29437_assign.get()._field_R.get()._field_Model=_30725_model;
								return;;
							}
						}
						_match_end_1e976d95e:;
					};
					_29437_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1e976b6e8:;
	};
	if (_2269c85b5_Append) {
		{
			auto &_match_expr{ _29437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type25) {
				_case_begin_1e9770752:;
				{
					jule::Ptr<_1e545aa4b_BuiltinAppendCallExprModel> _32825_m = _29437_assign.get()._field_R.get()._field_Model.cast_ptr<_1e545aa4b_BuiltinAppendCallExprModel>(&__jule_any_type25);;
					{
						auto &_match_expr{ _32825_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type83) {
							_case_begin_1e97717b9:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_Dest };
									
									if (_match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type71) {
										_case_begin_1e977204a:;
										{
											_2269bb036_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_20d5b300e_PushToSliceExprModel>(_20d5b300e_PushToSliceExprModel{._field_Dest=_32825_m.get()._field_Dest, ._field_Elems=_32825_m.get()._field_Elements.cast_ptr<_1e5454ec9_SliceExprModel>(&__jule_any_type83)}), &__jule_any_type128));
										}
									}
									_match_end_1e9771ee5:;
								};
							}
						}
						_match_end_1e97715aa:;
					};
				}
			}
			_match_end_1e976c3ca:;
		};
	};
}



inline void _226a66268_optimizeMultiAssign(_1e62239de_scopeOptimizer* _self_, jule::Ptr<_1e54842e4_MultiAssign> _34442_assign) {
	{
		auto expr = &(_34442_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9770b5e:;
		if (it != expr_end) {
			jule::Ptr<_1e5522d00_Data> _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__226a1568a_optimize(&(_34521_l.get()._field_Model));
				};
			}
			_iter_next_1e9770b5e:;
			++it;
			goto _iter_begin_1e9770b5e;
		}
		_iter_end_1e9770b5e:;
	};
	static__226a1568a_optimize(&(_34442_assign.get()._field_R));
}



inline void _20d4d93b9_optimizeRet(_1e62239de_scopeOptimizer* _self_, jule::Ptr<_1e5485ca7_RetSt> _35334_r) {
	static__226a1568a_optimize(&(_35334_r.get()._field_Expr));
}



inline void _20d4e754d_optimizeStmt(_1e62239de_scopeOptimizer* _self_, jule::Any _35735_stmt) {
	{
		auto &_match_expr{ _35735_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1e977446a:;
			{
				_20d50e004_optimizeChild(_self_, _35735_stmt.cast_ptr<_1e5480ad7_Scope>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1e97744e2:;
			{
				_2269bc037_optimizeData(_self_, _35735_stmt.cast_ptr<_1e5522d00_Data>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e9774569:;
			{
				_2269aaae7_optimizeVar(_self_, _35735_stmt.cast_ptr<_1e54ca291_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1e97745e1:;
			{
				_2269c0e3c_optimizeConditional(_self_, _35735_stmt.cast_ptr<_1e5481643_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1e9774668:;
			{
				_2269cd0ae_optimizeRangeIter(_self_, _35735_stmt.cast_ptr<_1e5482787_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1e97746e0:;
			{
				_2269de4ee_optimizeWhileIter(_self_, _35735_stmt.cast_ptr<_1e5481da2_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1e9774767:;
			{
				_20d50e004_optimizeChild(_self_, _35735_stmt.cast_ptr<_1e548192e_InfIter>(&__jule_any_type36).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1e97747de:;
			{
				_226a44ca2_optimizeAssign(_self_, _35735_stmt.cast_ptr<_1e5483e3c_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1e9774866:;
			{
				_226a66268_optimizeMultiAssign(_self_, _35735_stmt.cast_ptr<_1e54842e4_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1e97748dd:;
			{
				_2269c511c_optimizeMatch(_self_, _35735_stmt.cast_ptr<_1e5484833_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1e9774965:;
			{
				_20d4d93b9_optimizeRet(_self_, _35735_stmt.cast_ptr<_1e5485ca7_RetSt>(&__jule_any_type51));
			}
		}
		_match_end_1e97742b1:;
	};
}



inline void _20d50e004_optimizeChild(_1e62239de_scopeOptimizer* _self_, jule::Ptr<_1e5480ad7_Scope> _38436_child) {
	jule::Ptr<_1e62239de_scopeOptimizer> _38517_so = static__2269b51b7_new(_38436_child);;
	_20d5189e2_optimize(_38517_so.ptr());
}



inline void _20d5189e2_optimize(_1e62239de_scopeOptimizer* _self_) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_24314199d:;
		if (it != expr_end) {
			jule::I64 _39114_i = it - expr->begin();
			jule::Any _39121_stmt = *it;
			{
				(*(_self_))._field_i=_39114_i;
				_20d4e754d_optimizeStmt(_self_, _39121_stmt);
			}
			_iter_next_24314199d:;
			++it;
			_39114_i++;
			goto _iter_begin_24314199d;
		}
		_iter_end_24314199d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e62239de_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__226a1568a_optimize(jule::Any* _5829_model) {
	if (_1e697651b_exprEnabled) {
		jule::Ptr<_1e6223bcb_exprOptimizer> _6121_exop = jule::new_ptr<_1e6223bcb_exprOptimizer>(_1e6223bcb_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&((*(_5829_model))))))});;
		_1e6224528_do(_6121_exop.ptr());
	};
}



inline jule::Bool _226a5062b_strCond(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e5452ca7_BinopExprModel> _6826_m) {
	jule::Ptr<_1e55539ce_Prim> _6913_lp = _1e5551119_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_1e5556c13_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((_6826_m.get()._field_Op.get()._field_Kind != jule::Str("==", 2)) && (_6826_m.get()._field_Op.get()._field_Kind != jule::Str("!=", 2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1e8d13246:;
			{
				({
					jule::Ptr<_1e54527e0_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_1e54527e0_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_1e8d131e1:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1e8d129b5:;
			{
				goto _match_end_1e8d13c3b;
			}
		}
		else {
			_case_begin_1e8d142d0:;
			{
				return true;;
			}
		}
		_match_end_1e8d13c3b:;
	};
	_julec_label_opt:;
	jule::Ptr<_1e54469c1_Const> _8813_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_1e54469c1_Const>(&__jule_any_type47);;
	if ((!(_1e5448a06_ReadStr(_8813_c.ptr()).empty()))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1e8d15952:;
			{
				(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1e545854e_CommonSubIdentExprModel>(_1e545854e_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73);
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1e8d159c9:;
			{
				jule::Ptr<_20d155596_Token> _10021_op = _6826_m.get()._field_Op;;
				_10021_op.get()._field_Kind=jule::Str("!", 1);
				(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1e545315e_UnaryExprModel>(_1e545315e_UnaryExprModel{._field_Expr=jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Model=jule::Any(jule::new_ptr<_1e545854e_CommonSubIdentExprModel>(_1e545854e_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73), }), ._field_Op=_10021_op}), &__jule_any_type74);
			}
		}
		_match_end_1e8d15237:;
	};
	return true;;
}



inline void _20d4ebed1_binary(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e5452ca7_BinopExprModel> _11625_m) {
	static__226a1568a_optimize(&(_11625_m.get()._field_Left.get()._field_Model));
	static__226a1568a_optimize(&(_11625_m.get()._field_Right.get()._field_Model));
	{
		auto &_match_expr{ _11625_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1e8d19923:;
			{
				goto _match_end_1e8d19428;
			}
		}
		else {
			_case_begin_1e8d194d3:;
			{
				return;;
			}
		}
		_match_end_1e8d19428:;
	};
	if ((_226a3480d_Cond && _226a5062b_strCond(_self_, _11625_m))) {
		return;;
	};
	if ((!(_2269ca067_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _11625_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e8d1a4e5:;
			{
				jule::Bool _13618_ok = false;;
				jule::U64 _13622_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1e622465a_checkForBitShiftOpt(&(_11625_m.get()._field_Left), &(_11625_m.get()._field_Right));
					_13618_ok = __jule_assign_result.__jule_result_arg0;
					_13622_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_13618_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1e54469c1_Const> _13925_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_1e54469c1_Const>(&__jule_any_type47);;
					_1e54499a2_SetU64(_13925_c.ptr(), _13622_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1e8d1a56c:;
			{
				jule::Bool _14418_ok = false;;
				jule::U64 _14422_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1e622465a_checkForBitShiftOpt(&(_11625_m.get()._field_Left), &(_11625_m.get()._field_Right));
					_14418_ok = __jule_assign_result.__jule_result_arg0;
					_14422_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_14418_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1e54469c1_Const> _14725_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_1e54469c1_Const>(&__jule_any_type47);;
					_1e54499a2_SetU64(_14725_c.ptr(), _14422_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1e8d1a5e4:;
			{
				jule::Ptr<_1e54469c1_Const> _15221_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_1e54469c1_Const>(&__jule_any_type47);;
				jule::F64 _15317_d = _1e54494a7_AsF64(_15221_c.ptr());;
				if ((_15317_d == 2LL)) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1e544972c_SetI64(_15221_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1e8d1a46d:;
	};
	jule::Any _15917_model = jule::Any(jule::new_ptr<_20d5b2c34_UnsafeBinopExprModel>(_20d5b2c34_UnsafeBinopExprModel{._field_Node=_11625_m}), &__jule_any_type129);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_15917_model))))));
}



inline void _20d56591d_unary(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545315e_UnaryExprModel> _16324_m) {
	static__226a1568a_optimize(&(_16324_m.get()._field_Expr.get()._field_Model));
	if ((_2269da7d6_Ptr && (_16324_m.get()._field_Op.get()._field_Kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16324_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type74) {
				_case_begin_1e8d224db:;
				{
					jule::Ptr<_1e545315e_UnaryExprModel> _16825_um = _16324_m.get()._field_Expr.get()._field_Model.cast_ptr<_1e545315e_UnaryExprModel>(&__jule_any_type74);;
					if ((_16825_um.get()._field_Op.get()._field_Kind == jule::Str("&", 1))) {
						(*((*(_self_))._field_model))=_16825_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1e8d22486:;
		};
	};
}



inline void _20d5b2abe_structureLit(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e5453912_StructLitExprModel> _17631_m) {
	{
		auto expr = &(_17631_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8d24004:;
		if (it != expr_end) {
			jule::Ptr<_1e545355a_StructArgExprModel> _17721_arg = *it;
			{
				static__226a1568a_optimize(&(_17721_arg.get()._field_Expr));
			}
			_iter_next_1e8d24004:;
			++it;
			goto _iter_begin_1e8d24004;
		}
		_iter_end_1e8d24004:;
	};
}



inline void _20d5c7782_allocStructure(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e5453c20_AllocStructLitExprModel> _18233_m) {
	_20d5b2abe_structureLit(_self_, _18233_m.get()._field_Lit);
}



inline void _2269c1c2e_casting(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e5454270_CastingExprModel> _18626_m) {
	static__226a1568a_optimize(&(_18626_m.get()._field_Expr));
}



inline void _2269c5abd_args(_1e6223bcb_exprOptimizer* _self_, jule::Slice<jule::Any>* _19024_args) {
	{
		auto expr = _19024_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8d259a6:;
		if (it != expr_end) {
			jule::I64 _19114_i = it - expr->begin();
			jule::Any _19121_arg = *it;
			{
				static__226a1568a_optimize(&(_19121_arg));
				(*(_19024_args))[_19114_i]=_19121_arg;
			}
			_iter_next_1e8d259a6:;
			++it;
			_19114_i++;
			goto _iter_begin_1e8d259a6;
		}
		_iter_end_1e8d259a6:;
	};
}



inline void _20d5bebec_scope(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e5480ad7_Scope>* _19725_s) {
	jule::Ptr<_1e62239de_scopeOptimizer> _19817_scopt = static__2269b51b7_new((*(_19725_s)));;
	_20d5189e2_optimize(_19817_scopt.ptr());
}



inline void _20d776788_funcCall(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e5454b22_FnCallExprModel> _20227_m) {
	static__226a1568a_optimize(&(_20227_m.get()._field_Expr));
	_2269c5abd_args(_self_, &(_20227_m.get()._field_Args));
	if ((_20227_m.get()._field_Except != nullptr)) {
		_20d5bebec_scope(_self_, &(_20227_m.get()._field_Except));
	};
}



inline void _2269bd632_slice(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e5454ec9_SliceExprModel> _21024_m) {
	_2269c5abd_args(_self_, &(_21024_m.get()._field_Elems));
}



inline void _2269c1190_array(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e5457c02_ArrayExprModel> _21424_m) {
	if (((_21424_m.get()._field_Elems.len() == 2LL) && (_21424_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _21621_elem = _21424_m.get()._field_Elems[0LL];;
		static__226a1568a_optimize(&(_21621_elem));
		_21424_m.get()._field_Elems[0LL]=_21621_elem;
	};
	_2269c5abd_args(_self_, &(_21424_m.get()._field_Elems));
}



inline void _2269c2bb9_indexing(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545544c_IndexingExprModel> _22327_m) {
	static__226a1568a_optimize(&(_22327_m.get()._field_Expr.get()._field_Model));
	static__226a1568a_optimize(&(_22327_m.get()._field_Index.get()._field_Model));
	if ((!(_2269d4e40_Access))) {
		return;;
	};
	jule::Bool _22913_array = (_1e5551d2e_Arr(_22327_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_22913_array && _1e55236b3_IsConst(_22327_m.get()._field_Index.ptr()))) {
		jule::Any _23221_model = jule::Any(jule::new_ptr<_226994c8a_UnsafeIndexingExprModel>(_226994c8a_UnsafeIndexingExprModel{._field_Node=_22327_m}), &__jule_any_type130);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_23221_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22327_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e8d2e196:;
			{
				jule::Ptr<_1e54ca291_Var> _23817_i = _22327_m.get()._field_Index.get()._field_Model.cast_ptr<_1e54ca291_Var>(&__jule_any_type8);;
				if ((_23817_i.get()._field_Mutable || (_23817_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1e8d2e042;
				};
				{
					auto &_match_expr{ _22327_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1e8d30928:;
						{
							jule::Ptr<_1e54ca291_Var> _24421_r = _22327_m.get()._field_Expr.get()._field_Model.cast_ptr<_1e54ca291_Var>(&__jule_any_type8);;
							if ((_23817_i.get()._field_IterRelation.get()._field_Range == _24421_r)) {
								jule::Any _24729_model = jule::Any(jule::new_ptr<_226994c8a_UnsafeIndexingExprModel>(_226994c8a_UnsafeIndexingExprModel{._field_Node=_22327_m}), &__jule_any_type130);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_24729_model))))));
							};
						}
					}
					_match_end_1e8d308c3:;
				};
			}
		}
		_match_end_1e8d2e042:;
	};
}



inline void _2269c72b7_anonFunc(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e5455804_AnonFnExprModel> _25427_m) {
	_20d5bebec_scope(_self_, &(_25427_m.get()._field_Func.get()._field_Scope));
}



inline void _2269d70eb_mapExpr(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545612e_MapExprModel> _25826_m) {
	{
		auto expr = &(_25826_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8d32ee1:;
		if (it != expr_end) {
			jule::Ptr<_1e5455bab_KeyValPairExprModel> _25921_pair = *it;
			{
				static__226a1568a_optimize(&(_25921_pair.get()._field_Key));
				static__226a1568a_optimize(&(_25921_pair.get()._field_Val));
			}
			_iter_next_1e8d32ee1:;
			++it;
			goto _iter_begin_1e8d32ee1;
		}
		_iter_end_1e8d32ee1:;
	};
}



inline void _226a006a8_slicing(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545666d_SlicingExprModel> _26526_m) {
	static__226a1568a_optimize(&(_26526_m.get()._field_Expr));
	static__226a1568a_optimize(&(_26526_m.get()._field_Left));
	if ((_26526_m.get()._field_Right != nullptr)) {
		static__226a1568a_optimize(&(_26526_m.get()._field_Right));
	};
}



inline void _226a025cd_traitSub(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e5456bac_TraitSubIdentExprModel> _27327_m) {
	static__226a1568a_optimize(&(_27327_m.get()._field_Expr));
}



inline void _226a08dcb_structureSub(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e5457493_StructSubIdentExprModel> _27731_m) {
	static__226a1568a_optimize(&(_27731_m.get()._field_Expr.get()._field_Model));
}



inline void _226a0a251_commonSub(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545854e_CommonSubIdentExprModel> _28128_m) {
	static__226a1568a_optimize(&(_28128_m.get()._field_Expr));
}



inline void _20d5b36d5_tuple(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545884b_TupleExprModel> _28524_m) {
	{
		auto expr = &(_28524_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8d36302:;
		if (it != expr_end) {
			jule::Ptr<_1e5522d00_Data> _28621_d = *it;
			{
				static__226a1568a_optimize(&(_28621_d.get()._field_Model));
			}
			_iter_next_1e8d36302:;
			++it;
			goto _iter_begin_1e8d36302;
		}
		_iter_end_1e8d36302:;
	};
}



inline void _20d5c1ade_newCall(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e5459819_BuiltinNewCallExprModel> _29126_m) {
	if ((_29126_m.get()._field_Init != nullptr)) {
		static__226a1568a_optimize(&(_29126_m.get()._field_Init));
	};
}



inline void _20d5c9ac5_outCall(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e5458c25_BuiltinOutCallExprModel> _29726_m) {
	static__226a1568a_optimize(&(_29726_m.get()._field_Expr));
}



inline void _2269be710_outlnCall(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e5459110_BuiltinOutlnCallExprModel> _30128_m) {
	static__226a1568a_optimize(&(_30128_m.get()._field_Expr));
}



inline void _2269c436e_panicCall(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e5459c04_BuiltinPanicCallExprModel> _30528_m) {
	static__226a1568a_optimize(&(_30528_m.get()._field_Expr));
}



inline void _226a471c2_assertCall(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545a1aa_BuiltinAssertCallExprModel> _30929_m) {
	static__226a1568a_optimize(&(_30929_m.get()._field_Expr));
}



inline void _2269d2a86_errorCall(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545c08b_BuiltinErrorCallExprModel> _31328_m) {
	static__226a1568a_optimize(&(_31328_m.get()._field_Err.get()._field_Model));
}



inline void _20d5b4692_makeCall(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545a661_BuiltinMakeCallExprModel> _31727_m) {
	if ((_31727_m.get()._field_Len != nullptr)) {
		static__226a1568a_optimize(&(_31727_m.get()._field_Len));
	};
	if ((_31727_m.get()._field_Cap != nullptr)) {
		static__226a1568a_optimize(&(_31727_m.get()._field_Cap));
	};
}



inline void _20d5cabb4_appendCall(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545aa4b_BuiltinAppendCallExprModel> _32629_m) {
	static__226a1568a_optimize(&(_32629_m.get()._field_Dest));
	static__226a1568a_optimize(&(_32629_m.get()._field_Elements));
}



inline void _20d5d6582_lenCall(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545ad6a_BuiltinLenCallExprModel> _33126_m) {
	static__226a1568a_optimize(&(_33126_m.get()._field_Expr.get()._field_Model));
}



inline void _2269962ca_capCall(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545b189_BuiltinCapCallExprModel> _33526_m) {
	static__226a1568a_optimize(&(_33526_m.get()._field_Expr.get()._field_Model));
}



inline void _20d5d037d_cloneCall(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545942e_BuiltinCloneCallExprModel> _33928_m) {
	static__226a1568a_optimize(&(_33928_m.get()._field_Expr));
}



inline void _20d5c894d_deleteCall(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545b83d_BuiltinDeleteCallExprModel> _34329_m) {
	static__226a1568a_optimize(&(_34329_m.get()._field_Dest.get()._field_Model));
	if ((_34329_m.get()._field_Key != nullptr)) {
		static__226a1568a_optimize(&(_34329_m.get()._field_Key.get()._field_Model));
	};
}



inline void _20d5c50ed_sizeof(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545c388_SizeofExprModel> _35025_m) {
	static__226a1568a_optimize(&(_35025_m.get()._field_Expr));
}



inline void _20d5c6440_alignof(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545c674_AlignofExprModel> _35426_m) {
	static__226a1568a_optimize(&(_35426_m.get()._field_Expr));
}



inline void _1e6224182_integratedToStr(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545cc6d_IntegratedToStrExprModel> _35834_m) {
	static__226a1568a_optimize(&(_35834_m.get()._field_Expr));
}



inline void _1e62242b4_free(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545d422_FreeExprModel> _36223_m) {
	static__226a1568a_optimize(&(_36223_m.get()._field_Expr));
}



inline void _1e62243e6_backendEmit(_1e6223bcb_exprOptimizer* _self_, jule::Ptr<_1e545d136_BackendEmitExprModel> _36630_m) {
	_2269c5abd_args(_self_, &(_36630_m.get()._field_Exprs));
}



inline void _1e6224528_do(_1e6223bcb_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1e8d40619:;
			{
				_20d4ebed1_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e5452ca7_BinopExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1e8d40916:;
			{
				_20d56591d_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545315e_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1e8d4097c:;
			{
				_20d5b2abe_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e5453912_StructLitExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1e8d409e3:;
			{
				_20d5c7782_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e5453c20_AllocStructLitExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1e8d40a59:;
			{
				_2269c1c2e_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e5454270_CastingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1e8d40ad1:;
			{
				_20d776788_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e5454b22_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1e8d40b58:;
			{
				_2269bd632_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e5454ec9_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1e8d40bd0:;
			{
				_2269c1190_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e5457c02_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1e8d40c57:;
			{
				_2269c2bb9_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545544c_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1e8d40cce:;
			{
				_2269c72b7_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e5455804_AnonFnExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1e8d40d56:;
			{
				_2269d70eb_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545612e_MapExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1e8d40dcd:;
			{
				_226a006a8_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545666d_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1e8d40e55:;
			{
				_226a025cd_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e5456bac_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1e8d40ecc:;
			{
				_226a08dcb_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e5457493_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1e8d41054:;
			{
				_226a0a251_commonSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545854e_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1e8d410cb:;
			{
				_20d5b36d5_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545884b_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1e8d41153:;
			{
				_20d5c9ac5_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e5458c25_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1e8d411ca:;
			{
				_2269be710_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e5459110_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1e8d41252:;
			{
				_20d5c1ade_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e5459819_BuiltinNewCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1e8d412c9:;
			{
				_2269c436e_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e5459c04_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1e8d41351:;
			{
				_226a471c2_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545a1aa_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1e8d413c8:;
			{
				_2269d2a86_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545c08b_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1e8d41450:;
			{
				_20d5b4692_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545a661_BuiltinMakeCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1e8d414c7:;
			{
				_20d5cabb4_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545aa4b_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1e8d4154e:;
			{
				_20d5d6582_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545ad6a_BuiltinLenCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1e8d415c6:;
			{
				_2269962ca_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545b189_BuiltinCapCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1e8d4164d:;
			{
				_20d5d037d_cloneCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545942e_BuiltinCloneCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1e8d416c5:;
			{
				_20d5c894d_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545b83d_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1e8d4174c:;
			{
				_20d5c50ed_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545c388_SizeofExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1e8d417c4:;
			{
				_20d5c6440_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545c674_AlignofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1e8d4184b:;
			{
				_1e6224182_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545cc6d_IntegratedToStrExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1e8d418c3:;
			{
				_1e62242b4_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545d422_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1e8d4194a:;
			{
				_1e62243e6_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1e545d136_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		_match_end_1e8d405b4:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e6223bcb_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e6974b57_Optimizer> static__1e699435d_New(jule::Ptr<_1e65154a6_IR>* _2524_ir) {
	return jule::new_ptr<_1e6974b57_Optimizer>(_1e6974b57_Optimizer{._field_ir=(*(_2524_ir))});;
}



inline void _1e69a27cd_optimizeGlobal(_1e6974b57_Optimizer* _self_, jule::Ptr<_1e54ca291_Var>* _3138_v) {
	if ((!((*(_3138_v)).get()._field_CppLinked))) {
		static__226a1568a_optimize(&((*(_3138_v)).get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1e69d1895_optimizeFunction(_1e6974b57_Optimizer* _self_, jule::Ptr<_1e5460ec4_Fn>* _3740_func) {
	if ((*(_3740_func)).get()._field_CppLinked) {
		return;;
	};
	{
		auto expr = &((*(_3740_func)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8d58d3b:;
		if (it != expr_end) {
			jule::Ptr<_1e5463b75_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1e62239de_scopeOptimizer> _4221_so = static__2269b51b7_new(_4121_ins.get()._field_Scope);;
				_20d5189e2_optimize(_4221_so.ptr());
			}
			_iter_next_1e8d58d3b:;
			++it;
			goto _iter_begin_1e8d58d3b;
		}
		_iter_end_1e8d58d3b:;
	};
}



inline void _1e69e1179_optimizeStruct(_1e6974b57_Optimizer* _self_, jule::Ptr<_1e4790018_Struct>* _4738_s) {
	if ((*(_4738_s)).get()._field_CppLinked) {
		return;;
	};
	{
		auto expr = &((*(_4738_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8d5a315:;
		if (it != expr_end) {
			jule::Ptr<_1e47903e2_StructIns> _5121_ins = *it;
			{
				{
					auto expr = &(_5121_ins.get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e8d5aa0d:;
					if (it != expr_end) {
						jule::Ptr<_1e4790205_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__226a1568a_optimize(&(_5225_f.get()._field_Default.get()._field_Model));
							};
						}
						_iter_next_1e8d5aa0d:;
						++it;
						goto _iter_begin_1e8d5aa0d;
					}
					_iter_end_1e8d5aa0d:;
				};
				{
					auto expr = &(_5121_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e8d5b536:;
					if (it != expr_end) {
						jule::Ptr<_1e5460ec4_Fn> _5725_m = *it;
						{
							_1e69d1895_optimizeFunction(_self_, &(_5725_m));
						}
						_iter_next_1e8d5b536:;
						++it;
						goto _iter_begin_1e8d5b536;
					}
					_iter_end_1e8d5b536:;
				};
			}
			_iter_next_1e8d5a315:;
			++it;
			goto _iter_begin_1e8d5a315;
		}
		_iter_end_1e8d5a315:;
	};
}



inline void _1e69e9380_optimizeGlobals(_1e6974b57_Optimizer* _self_, jule::Ptr<_1e54a70a3_Package>* _6339_p) {
	{
		auto expr = &((*(_6339_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8d5be1b:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _6421_f = *it;
			{
				{
					auto expr = &(_6421_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e8d5cb0e:;
					if (it != expr_end) {
						jule::Ptr<_1e54ca291_Var> _6525_v = *it;
						{
							_1e69a27cd_optimizeGlobal(_self_, &(_6525_v));
						}
						_iter_next_1e8d5cb0e:;
						++it;
						goto _iter_begin_1e8d5cb0e;
					}
					_iter_end_1e8d5cb0e:;
				};
			}
			_iter_next_1e8d5be1b:;
			++it;
			goto _iter_begin_1e8d5be1b;
		}
		_iter_end_1e8d5be1b:;
	};
}



inline void _1e6a090c6_optimizeFunctions(_1e6974b57_Optimizer* _self_, jule::Ptr<_1e54a70a3_Package>* _7141_p) {
	{
		auto expr = &((*(_7141_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8d5d192:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _7221_f = *it;
			{
				{
					auto expr = &(_7221_f.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e8d5ddc9:;
					if (it != expr_end) {
						jule::Ptr<_1e5460ec4_Fn> _7325_func = *it;
						{
							_1e69d1895_optimizeFunction(_self_, &(_7325_func));
						}
						_iter_next_1e8d5ddc9:;
						++it;
						goto _iter_begin_1e8d5ddc9;
					}
					_iter_end_1e8d5ddc9:;
				};
			}
			_iter_next_1e8d5d192:;
			++it;
			goto _iter_begin_1e8d5d192;
		}
		_iter_end_1e8d5d192:;
	};
}



inline void _1e6a0a814_optimizeStructs(_1e6974b57_Optimizer* _self_, jule::Ptr<_1e54a70a3_Package>* _7939_p) {
	{
		auto expr = &((*(_7939_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8d5e45c:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e8d60194:;
					if (it != expr_end) {
						jule::Ptr<_1e4790018_Struct> _8125_s = *it;
						{
							_1e69e1179_optimizeStruct(_self_, &(_8125_s));
						}
						_iter_next_1e8d60194:;
						++it;
						goto _iter_begin_1e8d60194;
					}
					_iter_end_1e8d60194:;
				};
			}
			_iter_next_1e8d5e45c:;
			++it;
			goto _iter_begin_1e8d5e45c;
		}
		_iter_end_1e8d5e45c:;
	};
}



inline void _1e69a5d75_optimizePackage(_1e6974b57_Optimizer* _self_, jule::Ptr<_1e54a70a3_Package>* _8739_p) {
	_1e69e9380_optimizeGlobals(_self_, _8739_p);
	_1e6a090c6_optimizeFunctions(_self_, _8739_p);
	_1e6a0a814_optimizeStructs(_self_, _8739_p);
}



inline void _1e69d46cd_Optimize(_1e6974b57_Optimizer* _self_) {
	_1e6a048da_detectEnabled();
	if (_2269c80ed_Deadcode) {
		_1e6a7276b_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1e6977187_scopeEnabled || _1e697651b_exprEnabled)) {
		{
			auto expr = &((*(_self_))._field_ir.get()._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e8d6243d:;
			if (it != expr_end) {
				jule::Ptr<_1e54a4149_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_1e69a5d75_optimizePackage(_self_, &(_10325_u.get()._field_Package));
					};
				}
				_iter_next_1e8d6243d:;
				++it;
				goto _iter_begin_1e8d6243d;
			}
			_iter_end_1e8d6243d:;
		};
		_1e69a5d75_optimizePackage(_self_, &((*(_self_))._field_ir.get()._field_Main));
	};
	if (_2269c80ed_Deadcode) {
		_1e6a7751d_EliminateScopes(&((*(_self_))._field_ir));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e6974b57_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1e6a91dea_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1e6a93193_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1e6a91dea_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a92ea6_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1e6a94727_LogFlat(_24305e4ae_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1e6a94936_LogError(_24305e4ae_Log* _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1e6a91dea_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1e543d7ba_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1e543d7ba_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _242ede4a5_TrimLeft((*(_1925_l))._field_Line, jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = (((*(_1925_l))._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_242ede4a5_TrimLeft(_3621_line, jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1e543d7ba_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_242eaebe5_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_242eaebe5_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_242eaebe5_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1e6a93193_Print(jule::Str("\033[95m", 5), jule::Str("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1e6a94b45_Log(_24305e4ae_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1e9826a6c:;
			{
				static__1e6a94727_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1e9826ad3:;
			{
				static__1e6a94936_LogError(_6520_l);
			}
		}
		_match_end_1e9826918:;
	};
}



inline void static__1e6a94d54_PrintLogs(jule::Slice<_24305e4ae_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9827a3a:;
		if (it != expr_end) {
			_24305e4ae_Log *_7616_l = it;
			{
				static__1e6a94b45_Log(_7616_l);
			}
			_iter_next_1e9827a3a:;
			++it;
			goto _iter_begin_1e9827a3a;
		}
		_iter_end_1e9827a3a:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1e543d7ba_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a944c4_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1e71edab7_Unix(_1e71ed710_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*(_self_))._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*(_self_))._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1e720114c_unixYearToSeconds(_5717_y, &(_5617_leap));;
	_6817_t+=_1e72014d2_unixMonthToSeconds(_5817_m, _5617_leap);
	_6817_t+=(86400LLU * ((*(_self_))._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*(_self_))._field_Hour);
	_6817_t+=(60LLU * (*(_self_))._field_Minute);
	_6817_t+=(*(_self_))._field_Second;
	return _6817_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e71ed710_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1e71edda3_Time static__1e71ee249_Unix(jule::U64 _9120_sec) {
	return _1e71edda3_Time{._field_sec=_9120_sec};;
}



inline _1e71edda3_Time static__1e71ee447_Now(void) {
	return static__1e71ee249_Unix(static_cast<jule::U64>(_1e7200d3e_unix()));;
}



inline jule::U64 _1e71ee898_Unix(_1e71edda3_Time* _self_) {
	return (*(_self_))._field_sec;;
}



inline jule::U64 _1e71eeb0c_Day(_1e71edda3_Time* _self_) {
	return _1e7200a86_Abs(_self_)._field_Day;;
}



inline jule::U64 _1e71eed71_Month(_1e71edda3_Time* _self_) {
	return _1e7200a86_Abs(_self_)._field_Month;;
}



inline jule::U64 _1e72000d5_Year(_1e71edda3_Time* _self_) {
	return _1e7200a86_Abs(_self_)._field_Year;;
}



inline jule::U64 _1e7200349_Second(_1e71edda3_Time* _self_) {
	return _1e7200a86_Abs(_self_)._field_Second;;
}



inline jule::U64 _1e72005ad_Minute(_1e71edda3_Time* _self_) {
	return _1e7200a86_Abs(_self_)._field_Minute;;
}



inline jule::U64 _1e7200822_Hour(_1e71edda3_Time* _self_) {
	return _1e7200a86_Abs(_self_)._field_Hour;;
}



inline _1e71ed710_AbsTime _1e7200a86_Abs(_1e71edda3_Time* _self_) {
	jule::U64 _12713_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1e71ecc92_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1e71ecc92_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1e98574c6:;
	}
	_iter_end_1e98574c6:;;
	_1e71ed710_AbsTime _17417_t = _1e71ed710_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e71edda3_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e714c83a_scopeCoder> static__1e714ce56_new(jule::Ptr<_1e7205bbd_ObjectCoder>* _6124_oc) {
	return jule::new_ptr<_1e714c83a_scopeCoder>(_1e714c83a_scopeCoder{._field_oc=(*(_6124_oc))});;
}



inline void _1e714d1cb_rangeIndexIter(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5482787_RangeIter>* _6739_it) {
	jule::Str _6813_begin = static__1e716a8be_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6739_it)))));;
	jule::Str _6913_next = static__1e716ae0d_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6739_it)))));;
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e71cb831_addIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("auto expr = ", 12));
	jule::Bool _7517_ref = false;;
	if ((_2269bc9a5_Copy && _1e7152d90_isCopyOptimizable(&((*(_6739_it)).get()._field_Expr)))) {
		_7517_ref=true;
		{
			auto &_match_expr{ (*(_6739_it)).get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1e98e79d9:;
				{
					jule::Ptr<_1e54ca291_Var> _8021_v = (*(_6739_it)).get()._field_Expr.get()._field_Model.cast_ptr<_1e54ca291_Var>(&__jule_any_type8);;
					if (_8021_v.get()._field_Reference) {
						_1e7161b18_model(_self_.get()._field_oc.get()._field_ec, (*(_6739_it)).get()._field_Expr.get()._field_Model);
						goto _match_end_1e98e7e6d;
					};
					goto _case_begin_1e98e7ec3;
				}
			}
			else {
				_case_begin_1e98e7ec3:;
				{
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1e7161b18_model(_self_.get()._field_oc.get()._field_ec, (*(_6739_it)).get()._field_Expr.get()._field_Model);
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_1e98e7e6d:;
		};
	} else {
		_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_6739_it)).get()._field_Expr.get()._field_Model);
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("auto it = expr", 14));
	if (_7517_ref) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("begin();\n", 9));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("auto expr_end = expr", 20));
	if (_7517_ref) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("end();\n", 7));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, _6813_begin);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_1e71cb831_addIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	if (((*(_6739_it)).get()._field_KeyA != nullptr)) {
		_1e7208561_varInitExpr(_self_.get()._field_oc, &((*(_6739_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_7517_ref) {
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("it - expr->begin()", 18));
			} else {
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
			};
		}));
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e71d03a1_indent(_self_.get()._field_oc);
	};
	if (((*(_6739_it)).get()._field_KeyB != nullptr)) {
		(*(_6739_it)).get()._field_KeyB.get()._field_Reference=(_2269bc9a5_Copy && _1e7153225_isIterCopyOptimizable(&((*(_6739_it)).get()._field_Expr), &((*(_6739_it)).get()._field_KeyB)));
		_1e7208561_varInitExpr(_self_.get()._field_oc, &((*(_6739_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*(_6739_it)).get()._field_KeyB.get()._field_Reference) {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("it", 2));
				} else {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("*it", 3));
				};
			};
		}));
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e71d03a1_indent(_self_.get()._field_oc);
	};
	_1e71527b8_scope(_self_, (*(_6739_it)).get()._field_Scope);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, _6913_next);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1e71d03a1_indent(_self_.get()._field_oc);
	if (((*(_6739_it)).get()._field_KeyA != nullptr)) {
		_1e7190ce0_write(_self_.get()._field_oc, static__1e716a627_var((*(_6739_it)).get()._field_KeyA));
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1e71d03a1_indent(_self_.get()._field_oc);
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e7190ce0_write(_self_.get()._field_oc, _6813_begin);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716ab66_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6739_it))))));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e714d451_rangeHashmapIter(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5482787_RangeIter>* _17541_it) {
	jule::Str _17613_begin = static__1e716a8be_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_17541_it)))));;
	jule::Str _17713_next = static__1e716ae0d_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_17541_it)))));;
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e71cb831_addIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("auto expr = ", 12));
	jule::Bool _18317_ref = false;;
	if ((_2269bc9a5_Copy && _1e7152d90_isCopyOptimizable(&((*(_17541_it)).get()._field_Expr)))) {
		_18317_ref=true;
		{
			auto &_match_expr{ (*(_17541_it)).get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1e991024e:;
				{
					jule::Ptr<_1e54ca291_Var> _18821_v = (*(_17541_it)).get()._field_Expr.get()._field_Model.cast_ptr<_1e54ca291_Var>(&__jule_any_type8);;
					if (_18821_v.get()._field_Reference) {
						_1e7161b18_model(_self_.get()._field_oc.get()._field_ec, (*(_17541_it)).get()._field_Expr.get()._field_Model);
						goto _match_end_1e99106d3;
					};
					goto _case_begin_1e9910738;
				}
			}
			else {
				_case_begin_1e9910738:;
				{
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1e7161b18_model(_self_.get()._field_oc.get()._field_ec, (*(_17541_it)).get()._field_Expr.get()._field_Model);
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_1e99106d3:;
		};
	} else {
		_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_17541_it)).get()._field_Expr.get()._field_Model);
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("auto it = expr", 14));
	if (_18317_ref) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("begin();\n", 9));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("auto expr_end = expr", 20));
	if (_18317_ref) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("end();\n", 7));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, _17613_begin);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_1e71cb831_addIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	if (((*(_17541_it)).get()._field_KeyA != nullptr)) {
		_1e7208561_varInitExpr(_self_.get()._field_oc, &((*(_17541_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e71d03a1_indent(_self_.get()._field_oc);
	};
	if (((*(_17541_it)).get()._field_KeyB != nullptr)) {
		_1e7208561_varInitExpr(_self_.get()._field_oc, &((*(_17541_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e71d03a1_indent(_self_.get()._field_oc);
	};
	_1e71527b8_scope(_self_, (*(_17541_it)).get()._field_Scope);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, _17713_next);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e7190ce0_write(_self_.get()._field_oc, _17613_begin);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716ab66_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_17541_it))))));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e714d6c6_ifCase(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5480ed3_If> _26330_i) {
	if ((_26330_i.get()._field_Expr != nullptr)) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _26330_i.get()._field_Expr);
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1e71527b8_scope(_self_, _26330_i.get()._field_Scope);
}



inline void _1e714d94b_conditional(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5481643_Conditional> _27235_c) {
	jule::Bool _27317_writed = false;;
	{
		auto expr = &(_27235_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9924928:;
		if (it != expr_end) {
			jule::Ptr<_1e5480ed3_If> _27421_elif = *it;
			{
				if ((_27421_elif == nullptr)) {
					goto _iter_next_1e9924928;
				};
				if (_27317_writed) {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_27317_writed=true;
				_1e714d6c6_ifCase(_self_, _27421_elif);
			}
			_iter_next_1e9924928:;
			++it;
			goto _iter_begin_1e9924928;
		}
		_iter_end_1e9924928:;
	};
	if ((_27235_c.get()._field_Default != nullptr)) {
		if (_27317_writed) {
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1e71527b8_scope(_self_, _27235_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1e714dbc1_infIter(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e548192e_InfIter> _29231_it) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1e71cb831_addIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e71527b8_scope(_self_, _29231_it.get()._field_Scope);
	_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716ae0d_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_29231_it))));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716ab66_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_29231_it))));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1e714de46_whileIter(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5481da2_WhileIter> _30933_it) {
	if (((_30933_it.get()._field_Expr != nullptr) && (_30933_it.get()._field_Next == nullptr))) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _30933_it.get()._field_Expr);
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_30933_it.get()._field_Expr != nullptr)) {
			_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _30933_it.get()._field_Expr);
		};
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_30933_it.get()._field_Next != nullptr)) {
			_1e71522bd_st(_self_, _30933_it.get()._field_Next);
		};
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1e71cb831_addIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e71527b8_scope(_self_, _30933_it.get()._field_Scope);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716ae0d_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_30933_it))));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716ab66_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_30933_it))));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1e714e1bb_rangeIter(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5482787_RangeIter> _34233_it) {
	{
		
		if ((_1e5552093_Slc(_34233_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e99348b1:;
			{
				_1e714d1cb_rangeIndexIter(_self_, &(_34233_it));
			}
		}
		else if ((_1e5551d2e_Arr(_34233_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e9934581:;
			{
				_1e714d1cb_rangeIndexIter(_self_, &(_34233_it));
			}
		}
		else if ((_1e5552a44_Map(_34233_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e99345e7:;
			{
				_1e714d451_rangeHashmapIter(_self_, &(_34233_it));
			}
		}
		else {
			_case_begin_1e993451a:;
			{
				_1e714d1cb_rangeIndexIter(_self_, &(_34233_it));
			}
		}
		_match_end_1e993444e:;
	};
}



inline void _1e714e441_cont(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5482b83_ContSt> _35524_c) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716ae0d_iterNext(_35524_c.get()._field_It));
}



inline void _1e714e6b6_label(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5483326_Label> _36025_l) {
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716b1a5_label(&(_36025_l.get()._field_Ident)));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1e714e93b_gotoSt(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5483612_GotoSt> _36526_gt) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716b1a5_label(&(_36526_gt.get()._field_Ident)));
}



inline void _1e714ebb1_postfix(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e54839b9_Postfix> _37031_p) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37031_p.get()._field_Expr);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1e7190ce0_write(_self_.get()._field_oc, _37031_p.get()._field_Op);
}



inline void _1e714ee36_assign(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5483e3c_Assign> _37730_a) {
	_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37730_a.get()._field_L.get()._field_Model);
	_1e7190ce0_write(_self_.get()._field_oc, _37730_a.get()._field_Op.get()._field_Kind);
	_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37730_a.get()._field_R.get()._field_Model);
}



inline void _1e71501ab_mapLookupAssign(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e54842e4_MultiAssign>* _38340_a) {
	jule::Ptr<_1e545544c_IndexingExprModel> _38417_iem = (*(_38340_a)).get()._field_R.cast_ptr<_1e545544c_IndexingExprModel>(&__jule_any_type45);;
	_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _38417_iem.get()._field_Expr.get()._field_Model);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _38417_iem.get()._field_Index.get()._field_Model);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_38340_a)).get()._field_L[0LL] != nullptr)) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_38340_a)).get()._field_L[0LL].get()._field_Model);
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if (((*(_38340_a)).get()._field_L[1LL] != nullptr)) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_38340_a)).get()._field_L[1LL].get()._field_Model);
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e7150431_multiAssignTup(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e54842e4_MultiAssign>* _40639_a) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1e71cb831_addIndent(_self_.get()._field_oc);
	jule::Ptr<_1e545884b_TupleExprModel> _41017_tup = (*(_40639_a)).get()._field_R.cast_ptr<_1e545884b_TupleExprModel>(&__jule_any_type88);;
	{
		auto expr = &(_41017_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9944c89:;
		if (it != expr_end) {
			jule::I64 _41214_i = it - expr->begin();
			jule::Ptr<_1e5522d00_Data> _41221_r = *it;
			{
				_1e71d03a1_indent(_self_.get()._field_oc);
				jule::Ptr<_1e5522d00_Data> _41421_l = (*(_40639_a)).get()._field_L[_41214_i];;
				if ((_41421_l != nullptr)) {
					{
						auto &_match_expr{ _41421_l.get()._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1e994764e:;
							{
								jule::Ptr<_1e54ca291_Var> _41829_v = _41421_l.get()._field_Model.cast_ptr<_1e54ca291_Var>(&__jule_any_type8);;
								if ((_41829_v.get()._field_Reference && (!(_1e54ca659_IsInitialized(_41829_v.ptr()))))) {
									_1e7190ce0_write(_self_.get()._field_oc, static__1e716a627_var(_41829_v));
									_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" = &(", 5));
									_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _41221_r.get()._field_Model);
									_1e7190ce0_write(_self_.get()._field_oc, jule::Str(");\n", 3));
									(*(_40639_a)).get()._field_L[_41214_i]=nullptr;
									goto _iter_next_1e9944c89;
								};
							}
						}
						_match_end_1e99475e9:;
					};
					_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _41421_l.get()._field_Kind));
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1e7190ce0_write(_self_.get()._field_oc, static__1e7168b31_toOut(&(_1e714c461_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_41214_i))));
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _41221_r.get()._field_Model);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1e9944c89:;
			++it;
			_41214_i++;
			goto _iter_begin_1e9944c89;
		}
		_iter_end_1e9944c89:;
	};
	{
		auto expr = &((*(_40639_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e994c104:;
		if (it != expr_end) {
			jule::I64 _43914_i = it - expr->begin();
			jule::Ptr<_1e5522d00_Data> _43921_l = *it;
			{
				if ((_43921_l == nullptr)) {
					goto _iter_next_1e994c104;
				};
				_1e71d03a1_indent(_self_.get()._field_oc);
				_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _43921_l.get()._field_Model);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1e7190ce0_write(_self_.get()._field_oc, static__1e7168b31_toOut(&(_1e714c461_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43914_i))));
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1e994c104:;
			++it;
			_43914_i++;
			goto _iter_begin_1e994c104;
		}
		_iter_end_1e994c104:;
	};
	_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1e71506a6_multiAssignFn(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e54842e4_MultiAssign>* _45538_a) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1e71cb831_addIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	jule::Ptr<_1e5454b22_FnCallExprModel> _46017_f = (*(_45538_a)).get()._field_R.cast_ptr<_1e5454b22_FnCallExprModel>(&__jule_any_type34);;
	_1e7216cde_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_46017_f.get()._field_Func.get()._field_Result));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_45538_a)).get()._field_R);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto expr = &((*(_45538_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9953506:;
		if (it != expr_end) {
			jule::I64 _46614_i = it - expr->begin();
			jule::Ptr<_1e5522d00_Data> _46621_l = *it;
			{
				if ((_46621_l != nullptr)) {
					_1e71d03a1_indent(_self_.get()._field_oc);
					_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _46621_l.get()._field_Model);
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_1e7190ce0_write(_self_.get()._field_oc, _1e543d7ba_Itoa(_46614_i));
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1e9953506:;
			++it;
			_46614_i++;
			goto _iter_begin_1e9953506;
		}
		_iter_end_1e9953506:;
	};
	_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1e715092b_multiAssign(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e54842e4_MultiAssign> _48135_a) {
	{
		auto &_match_expr{ _48135_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1e9956c79:;
			{
				_1e71501ab_mapLookupAssign(_self_, &(_48135_a));
				return;;
			}
		}
		_match_end_1e9956a6a:;
	};
	{
		auto &_match_expr{ _48135_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1e995699e:;
			{
				_1e7150431_multiAssignTup(_self_, &(_48135_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1e9957ae3:;
			{
				_1e71506a6_multiAssignFn(_self_, &(_48135_a));
			}
		}
		else {
			_case_begin_1e995710e:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:495:13"));;
			}
		}
		_match_end_1e9957719:;
	};
}



inline jule::Fn<void(void)> _1e7150c39_matchExpr(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5484833_Match> _49933_m) {
	if ((!(_1e55236b3_IsConst(_49933_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_1e544ab3a_IsBool(_49933_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1e5448792_ReadBool(_49933_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _49933_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1e7151058_case(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5484833_Match> _50928_m, jule::Ptr<_1e548537d_Case> _50943_c) {
	if (((_50943_c.get()._field_Exprs.len() != 0LL) && (!(_1e5484d3e_IsGenericTypeMatch(_50928_m.ptr()))))) {
		if (((_50928_m.get()._field_Cases.len() > 0LL) && (_50928_m.get()._field_Cases[0LL] == _50943_c))) {
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto expr = &(_50943_c.get()._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e995d05a:;
			if (it != expr_end) {
				jule::I64 _51618_i = it - expr->begin();
				jule::Ptr<_1e5522d00_Data> _51625_expr = *it;
				{
					{
						
						if ((!(_50928_m.get()._field_TypeMatch))) {
							_case_begin_1e9964407:;
							{
								jule::Fn<void(void)> _51925_caseExpr = _1e7150c39_matchExpr(_self_, _50928_m);;
								if (_1e55239c1_GoodOperand(_50928_m.get()._field_Expr.ptr(), &(_51625_expr))) {
									if ((_51925_caseExpr != nullptr)) {
										_51925_caseExpr();
										_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _51625_expr.get()._field_Model);
								} else {
									_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _51625_expr.get()._field_Model);
									if ((_51925_caseExpr != nullptr)) {
										_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_51925_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1e995e28c:;
							{
								_1e7190ce0_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_1e554dc82_TypeKind> _53529_tk = _51625_expr.get()._field_Model.cast_ptr<_1e554dc82_TypeKind>(&__jule_any_type90);;
								if ((_1e55527d0_Trait(_50928_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".type_is(", 9));
									_1e7155dc6_boolean(_self_.get()._field_oc.get()._field_ec, (_1e555137d_Sptr(_51625_expr.get()._field_Kind.ptr()) != nullptr));
									_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
									_1e7190ce0_write(_self_.get()._field_oc, _1e543d7ba_Itoa(static_cast<jule::I64>(_1e7171177_findTypeOffset(_self_.get()._field_oc.ptr(), _1e55527d0_Trait(_50928_m.get()._field_Expr.get()._field_Kind.ptr()), _51625_expr.get()._field_Kind))));
									_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
								} else {
									jule::I64 _54329_j = _1e71953dd_pushAnyType(_self_.get()._field_oc, &(_53529_tk));;
									_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_1e7190ce0_write(_self_.get()._field_oc, _1e543d7ba_Itoa(_54329_j));
								};
							}
						}
						_match_end_1e995e1c1:;
					};
					if (((_50943_c.get()._field_Exprs.len() - _51618_i) > 1LL)) {
						_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1e995d05a:;
				++it;
				_51618_i++;
				goto _iter_begin_1e995d05a;
			}
			_iter_end_1e995d05a:;
		};
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_50928_m.get()._field_Default == _50943_c) && (_50928_m.get()._field_Cases.len() != 0LL))) {
		_1e71d03a1_indent(_self_.get()._field_oc);
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1e71cb831_addIndent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716b6e4_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_50943_c))));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_50943_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1e71d03a1_indent(_self_.get()._field_oc);
		_1e71527b8_scope(_self_, _50943_c.get()._field_Scope);
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e71512cd_matchSt(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5484833_Match> _57731_m) {
	if (((_57731_m.get()._field_Cases.len() == 0LL) && (_57731_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _58213_genericTypeMatch = _1e5484d3e_IsGenericTypeMatch(_57731_m.ptr());;
	if ((_58213_genericTypeMatch && ((_57731_m.get()._field_Default == nullptr) || (_57731_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e71cb831_addIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	if (((!(_58213_genericTypeMatch)) && (!(_1e55236b3_IsConst(_57731_m.get()._field_Expr.ptr()))))) {
		if ((_2269bc9a5_Copy && _1e7152d90_isCopyOptimizable(&(_57731_m.get()._field_Expr)))) {
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _57731_m.get()._field_Expr.get()._field_Model);
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1e71d03a1_indent(_self_.get()._field_oc);
	};
	if ((_57731_m.get()._field_Cases.len() > 0LL)) {
		{
			auto expr = &(_57731_m.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e9977d00:;
			if (it != expr_end) {
				jule::Ptr<_1e548537d_Case> _60625_c = *it;
				{
					if ((_60625_c == nullptr)) {
						goto _iter_next_1e9977d00;
					};
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1e71d03a1_indent(_self_.get()._field_oc);
					_1e7151058_case(_self_, _57731_m, _60625_c);
				}
				_iter_next_1e9977d00:;
				++it;
				goto _iter_begin_1e9977d00;
			}
			_iter_end_1e9977d00:;
		};
	};
	if ((_57731_m.get()._field_Default != nullptr)) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e7151058_case(_self_, _57731_m, _57731_m.get()._field_Default);
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716b44c_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_57731_m))));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e7151553_fallSt(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5485933_FallSt> _63326_f) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716b6e4_caseBegin(_63326_f.get()._field_DestCase));
}



inline void _1e71517c8_breakSt(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e548303a_BreakSt> _63827_b) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_63827_b.get()._field_It != 0LLU)) {
		_1e7190ce0_write(_self_.get()._field_oc, static__1e716ab66_iterEnd(_63827_b.get()._field_It));
	} else {
		_1e7190ce0_write(_self_.get()._field_oc, static__1e716b44c_matchEnd(_63827_b.get()._field_Mtch));
	};
}



inline void _1e7151a4d_setResult(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5485ca7_RetSt> _64733_r) {
	if ((_64733_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _64733_r.get()._field_Expr);
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_1e71d03a1_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1e5522d00_Data>> _65517_datas = _64733_r.get()._field_Expr.cast_ptr<_1e545884b_TupleExprModel>(&__jule_any_type88).get()._field_Datas;;
	{
		auto expr = &(_65517_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9982c94:;
		if (it != expr_end) {
			jule::I64 _65613_i = it - expr->begin();
			jule::Ptr<_1e5522d00_Data> _65616_data = *it;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_1e7190ce0_write(_self_.get()._field_oc, _1e543d7ba_Itoa(_65613_i));
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _65616_data.get()._field_Model);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1e71d03a1_indent(_self_.get()._field_oc);
			}
			_iter_next_1e9982c94:;
			++it;
			_65613_i++;
			goto _iter_begin_1e9982c94;
		}
		_iter_end_1e9982c94:;
	};
}



inline void _1e7151cc3_retSt(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5485ca7_RetSt> _66629_r) {
	if (_1e5461436_IsVoid(_66629_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_66629_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_66629_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_66629_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _66629_r.get()._field_Func.get()._field_Result));
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _66629_r.get()._field_Expr);
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_1e71584d3_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _66629_r.get()._field_Expr);
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_66629_r.get()._field_Expr != nullptr)) {
		_1e7151a4d_setResult(_self_, _66629_r);
	};
	if (_66629_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1e7216cde_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_66629_r.get()._field_Func.get()._field_Result));
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _1e7152048_var(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e54ca291_Var> _70227_v) {
	if ((!(_70227_v.get()._field_Constant))) {
		_1e7208693_var(_self_.get()._field_oc, _70227_v);
	};
}



inline void _1e71522bd_st(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Any _70926_st) {
	if ((_70926_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _70926_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1e998e553:;
			{
				_1e71527b8_scope(_self_, _70926_st.cast_ptr<_1e5480ad7_Scope>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e998e201:;
			{
				_1e7152048_var(_self_, _70926_st.cast_ptr<_1e54ca291_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1e998eb19:;
			{
				_1e7161b18_model(_self_.get()._field_oc.get()._field_ec, _70926_st.cast_ptr<_1e5522d00_Data>(&__jule_any_type23).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1e998eb80:;
			{
				_1e714d94b_conditional(_self_, _70926_st.cast_ptr<_1e5481643_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1e998ebe6:;
			{
				_1e714dbc1_infIter(_self_, _70926_st.cast_ptr<_1e548192e_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1e998ec5c:;
			{
				_1e714de46_whileIter(_self_, _70926_st.cast_ptr<_1e5481da2_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1e998ecc3:;
			{
				_1e714e1bb_rangeIter(_self_, _70926_st.cast_ptr<_1e5482787_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1e998ed39:;
			{
				_1e714e441_cont(_self_, _70926_st.cast_ptr<_1e5482b83_ContSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1e998eda0:;
			{
				_1e714e6b6_label(_self_, _70926_st.cast_ptr<_1e5483326_Label>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1e998ee27:;
			{
				_1e714e93b_gotoSt(_self_, _70926_st.cast_ptr<_1e5483612_GotoSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1e998ee9e:;
			{
				_1e714ebb1_postfix(_self_, _70926_st.cast_ptr<_1e54839b9_Postfix>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1e9990026:;
			{
				_1e714ee36_assign(_self_, _70926_st.cast_ptr<_1e5483e3c_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1e999009d:;
			{
				_1e715092b_multiAssign(_self_, _70926_st.cast_ptr<_1e54842e4_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1e9990125:;
			{
				_1e71512cd_matchSt(_self_, _70926_st.cast_ptr<_1e5484833_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1e999019c:;
			{
				_1e7151553_fallSt(_self_, _70926_st.cast_ptr<_1e5485933_FallSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1e9990224:;
			{
				_1e71517c8_breakSt(_self_, _70926_st.cast_ptr<_1e548303a_BreakSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1e999029b:;
			{
				_1e7151cc3_retSt(_self_, _70926_st.cast_ptr<_1e5485ca7_RetSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1e9990323:;
			{
				_1e715eaa0_pushToSlice(_self_.get()._field_oc.get()._field_ec, _70926_st.cast_ptr<_20d5b300e_PushToSliceExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1e999039a:;
			{
				_1e716161d_mutSlicing(_self_.get()._field_oc.get()._field_ec, _70926_st.cast_ptr<_20d77659b_MutSlicingExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1e9990422:;
			{
				_1e7161893_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _70926_st.cast_ptr<_1e6223802_StrInsertBeginExprModel>(&__jule_any_type127));
			}
		}
		else {
			_case_begin_1e998ded1:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1e998de7b:;
	};
}



inline void _1e7152543_scopeStmts(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5480ad7_Scope>* _75935_s) {
	{
		auto expr = &((*(_75935_s)).get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9998d32:;
		if (it != expr_end) {
			jule::Any _76021_st = *it;
			{
				_1e71d03a1_indent(_self_.get()._field_oc);
				_1e71522bd_st(_self_, _76021_st);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1e9998d32:;
			++it;
			goto _iter_begin_1e9998d32;
		}
		_iter_end_1e9998d32:;
	};
}



inline void _1e71527b8_scope(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5480ad7_Scope> _76829_s) {
	_1e71cb831_addIndent(_self_.get()._field_oc);
	if (_76829_s.get()._field_Deferred) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e7152543_scopeStmts(_self_, &(_76829_s));
	_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_76829_s.get()._field_Deferred) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1e7152a3d_funcScope(jule::Ptr<_1e714c83a_scopeCoder> _self_, jule::Ptr<_1e5463b75_FnIns> _78433_f) {
	if ((_78433_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e71cb831_addIndent(_self_.get()._field_oc);
	if ((!(_1e5461436_IsVoid(_78433_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_1e555874d_Tuple> _79121_tup = _1e5552ca8_Tup(_78433_f.get()._field_Result.ptr());;
		if ((_79121_tup != nullptr)) {
			_1e71d03a1_indent(_self_.get()._field_oc);
			_1e72166a1_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _79121_tup);
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto expr = &(_79121_tup.get()._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1e99a108c:;
				if (it != expr_end) {
					jule::I64 _79622_i = it - expr->begin();
					jule::Ptr<_1e554dc82_TypeKind> _79629_t = *it;
					{
						if (_1e72190cc_shouldInitialized(&(_79629_t))) {
							_1e71d03a1_indent(_self_.get()._field_oc);
							_1e7190ce0_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_1e7190ce0_write(_self_.get()._field_oc, _1e543d7ba_Itoa(_79622_i));
							_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_1e7161d8d_initExpr(_self_.get()._field_oc.get()._field_ec, _79629_t);
							_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_1e99a108c:;
					++it;
					_79622_i++;
					goto _iter_begin_1e99a108c;
				}
				_iter_end_1e99a108c:;
			};
		} else if ((_78433_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_1e71d03a1_indent(_self_.get()._field_oc);
			_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _78433_f.get()._field_Result));
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_1e72190cc_shouldInitialized(&(_78433_f.get()._field_Result))) {
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1e7161d8d_initExpr(_self_.get()._field_oc.get()._field_ec, _78433_f.get()._field_Result);
			};
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_1e7152543_scopeStmts(_self_, &(_78433_f.get()._field_Scope));
	if ((_78433_f.get()._field_Decl.get()._field_Exceptional && _1e5461436_IsVoid(_78433_f.get()._field_Decl.ptr()))) {
		_1e71d03a1_indent(_self_.get()._field_oc);
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1e714c83a_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e71554d0_exprCoder> static__1e71558cb_new(jule::Ptr<_1e7205bbd_ObjectCoder>* _10424_oc) {
	return jule::new_ptr<_1e71554d0_exprCoder>(_1e71554d0_exprCoder{._field_oc=(*(_10424_oc))});;
}



inline void _1e7155b51_string(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e54469c1_Const>* _11027_c) {
	jule::Str _11113_content = _1e5448a06_ReadStr((*(_11027_c)).ptr());;
	if ((_11113_content.len() == 0LL)) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _11613_bytes = static_cast<jule::Slice<jule::U8>>(_11113_content);;
	jule::Str _11713_len = _1e543d523_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_11613_bytes.len())), 10LL);;
	jule::Str _11813_lit = _1e7162a92_cstrLit(_11613_bytes);;
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e7190ce0_write(_self_.get()._field_oc, _11813_lit);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1e7190ce0_write(_self_.get()._field_oc, _11713_len);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e7155dc6_boolean(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Bool _12727_b) {
	if (_12727_b) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("true", 4));
	} else {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("false", 5));
	};
}



inline void _1e71560a2_nilLit(jule::Ptr<_1e71554d0_exprCoder> _self_) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1e71563b0_ftoaSpecialCases(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::F64* _13937_x) {
	{
		
		if (_1e53ebcea_IsNaN((*(_13937_x)))) {
			_case_begin_1e99c49d9:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1e53ec05e_IsInf((*(_13937_x)), 1LL)) {
			_case_begin_1e99c4313:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1e53ec05e_IsInf((*(_13937_x)), -1LL)) {
			_case_begin_1e99c4379:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1e99c429c:;
			{
				return false;;
			}
		}
		_match_end_1e99c41d1:;
	};
	return true;;
}



inline void _1e7156635_float32(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e54469c1_Const>* _15328_c) {
	jule::F64 _15413_x = _1e54494a7_AsF64((*(_15328_c)).ptr());;
	if (_1e71563b0_ftoaSpecialCases(_self_, &(_15413_x))) {
		return;;
	};
	{
		
		if ((_15413_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1e99c72d3:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15413_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1e99c6ee7:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1e99c6e81:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, _1e7162da0_ftoa(_15413_x, 32LL));
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1e99c6d60:;
	};
}



inline void _1e71568aa_float64(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e54469c1_Const>* _17228_c) {
	jule::F64 _17313_x = _1e54494a7_AsF64((*(_17228_c)).ptr());;
	if (_1e71563b0_ftoaSpecialCases(_self_, &(_17313_x))) {
		return;;
	};
	{
		
		if ((_17313_x == jule::MAX_F64)) {
			_case_begin_1e99ca1d7:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17313_x == jule::MIN_F64)) {
			_case_begin_1e99ca8be:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1e99c9d85:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, _1e7162da0_ftoa(_17313_x, 64LL));
			}
		}
		_match_end_1e99c9c64:;
	};
}



inline void _1e7156b30_constant(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e54469c1_Const> _19032_c) {
	{
		
		if (_1e544ad9e_IsStr(_19032_c.ptr())) {
			_case_begin_1e99cbe20:;
			{
				_1e7155b51_string(_self_, &(_19032_c));
			}
		}
		else if (_1e544ab3a_IsBool(_19032_c.ptr())) {
			_case_begin_1e99cbe86:;
			{
				_1e7155dc6_boolean(_self_, _1e5448792_ReadBool(_19032_c.ptr()));
			}
		}
		else if (_1e544b113_IsF64(_19032_c.ptr())) {
			_case_begin_1e99cbeec:;
			{
				{
					
					if ((_19032_c.get()._field_Kind == jule::Str("f32", 3))) {
						_case_begin_1e99ce2c9:;
						{
							_1e7156635_float32(_self_, &(_19032_c));
						}
					}
					else {
						_case_begin_1e99cde33:;
						{
							_1e71568aa_float64(_self_, &(_19032_c));
						}
					}
					_match_end_1e99cdd67:;
				};
			}
		}
		else if (_1e544a662_IsI64(_19032_c.ptr())) {
			_case_begin_1e99cc063:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, _1e7163147_itoa(static_cast<jule::I64>(_1e54482b9_ReadI64(_19032_c.ptr()))));
			}
		}
		else if (_1e544a8c6_IsU64(_19032_c.ptr())) {
			_case_begin_1e99cc88d:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, _1e71633de_utoa(static_cast<jule::U64>(_1e544852d_ReadU64(_19032_c.ptr()))));
			}
		}
		else if (_1e544b377_IsNil(_19032_c.ptr())) {
			_case_begin_1e99cc904:;
			{
				_1e71560a2_nilLit(_self_);
			}
		}
		else {
			_case_begin_1e99cbda9:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1e99cbcdd:;
	};
}



inline void _1e7156ee8_divByZeroBinary(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_20d155596_Token>* _21436_op, jule::Ptr<_1e54527e0_OperandExprModel>* _21453_l, jule::Ptr<_1e54527e0_OperandExprModel>* _21480_r) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ (*(_21436_op)).get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1e99d24b9:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1e99d2541:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1e99d2453:;
	};
	if ((!(_2403599cc_Production))) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1e72062b7_locInfo(_self_.get()._field_oc, _21436_op);
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1e71584d3_possibleRefExpr(_self_, (*(_21453_l)).get()._field_Model);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1e71584d3_possibleRefExpr(_self_, (*(_21480_r)).get()._field_Model);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e715726d_unsafeBinary(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5452ca7_BinopExprModel> _23636_m) {
	if (((_23636_m.get()._field_Op.get()._field_Kind == jule::Str("==", 2)) || (_23636_m.get()._field_Op.get()._field_Kind == jule::Str("!=", 2)))) {
		if (_1e7164038_isAny(&(_23636_m.get()._field_Left.get()._field_Kind))) {
			if (((!(_1e554ebb7_IsNil(_23636_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_1e7164038_isAny(&(_23636_m.get()._field_Right.get()._field_Kind)))))) {
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(", 1));
				if ((_23636_m.get()._field_Op.get()._field_Kind == jule::Str("!=", 2))) {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I64 _24625_i = _1e71953dd_pushAnyType(_self_.get()._field_oc, &(_23636_m.get()._field_Right.get()._field_Kind));;
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_1e7190ce0_write(_self_.get()._field_oc, _1e543d7ba_Itoa(_24625_i));
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_1e71584d3_possibleRefExpr(_self_, _23636_m.get()._field_Left.get()._field_Model);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1e71584d3_possibleRefExpr(_self_, _23636_m.get()._field_Right.get()._field_Model);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e71584d3_possibleRefExpr(_self_, _23636_m.get()._field_Left.get()._field_Model);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1e7190ce0_write(_self_.get()._field_oc, _23636_m.get()._field_Op.get()._field_Kind);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1e71584d3_possibleRefExpr(_self_, _23636_m.get()._field_Right.get()._field_Model);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e71574e3_binary(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5452ca7_BinopExprModel> _26730_m) {
	{
		auto &_match_expr{ _26730_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1e99ddbbd:;
			{
				if ((_1e555256b_Struct(_26730_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1e7156ee8_divByZeroBinary(_self_, &(_26730_m.get()._field_Op), &(_26730_m.get()._field_Left), &(_26730_m.get()._field_Right));
					return;;
				};
			}
		}
		_match_end_1e99ddb46:;
	};
	_1e715726d_unsafeBinary(_self_, _26730_m);
}



inline void _1e7157768_var(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e54ca291_Var> _27927_m) {
	if (_27927_m.get()._field_CppLinked) {
		jule::Ptr<_1e474057e_Directive> _28117_d = _1e72189a0_findDirective(&(_27927_m.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_28117_d != nullptr)) {
			_1e7190ce0_write(_self_.get()._field_oc, _1e720aa6e_concatAllParts(_28117_d.get()._field_Args));
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716a627_var(_27927_m));
}



inline void _1e71579dd_structureIns(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e47903e2_StructIns> _29036_m) {
	_1e7190ce0_write(_self_.get()._field_oc, _1e7210aeb_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29036_m));
}



inline void _1e7157c63_unary(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545315e_UnaryExprModel> _29429_m) {
	{
		auto &_match_expr{ _29429_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1e99e37c7:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1e71584d3_possibleRefExpr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e99e384e:;
			{
				if ((_2403599cc_Production || (_1e555137d_Sptr(_29429_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1e99e373e;
				};
				_1e71584d3_possibleRefExpr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1e72062b7_locInfo(_self_.get()._field_oc, &(_29429_m.get()._field_Op));
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1e99e373e:;
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e7190ce0_write(_self_.get()._field_oc, _29429_m.get()._field_Op.get()._field_Kind);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e71584d3_possibleRefExpr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1e7157ed8_structureLit(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5453912_StructLitExprModel> _31836_m) {
	if (_31836_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716a0d8_structureIns(&(_31836_m.get()._field_Strct)));
	if (_31836_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_31836_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto expr = &(_31836_m.get()._field_Strct.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e99eab53:;
			if (it != expr_end) {
				jule::I64 _33117_i = it - expr->begin();
				jule::Ptr<_1e4790205_FieldIns> _33120_f = *it;
				{
					{
						auto expr = &(_31836_m.get()._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e99eb68c:;
						if (it != expr_end) {
							jule::Ptr<_1e545355a_StructArgExprModel> _33229_arg = *it;
							{
								if ((_33229_arg.get()._field_Field == _33120_f)) {
									_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1e7190ce0_write(_self_.get()._field_oc, static__1e716a380_field(&(_33229_arg.get()._field_Field.get()._field_Decl)));
									_1e7190ce0_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1e71584d3_possibleRefExpr(_self_, _33229_arg.get()._field_Expr);
									if (((_31836_m.get()._field_Strct.get()._field_Fields.len() - _33117_i) > 1LL)) {
										_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1e99eab53;
								};
							}
							_iter_next_1e99eb68c:;
							++it;
							goto _iter_begin_1e99eb68c;
						}
						_iter_end_1e99eb68c:;
					};
				}
				_iter_next_1e99eab53:;
				++it;
				_33117_i++;
				goto _iter_begin_1e99eab53;
			}
			_iter_end_1e99eab53:;
		};
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e715825d_allocStructure(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5453c20_AllocStructLitExprModel> _34938_m) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716a0d8_structureIns(&(_34938_m.get()._field_Lit.get()._field_Strct)));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1e7157ed8_structureLit(_self_, _34938_m.get()._field_Lit);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e71584d3_possibleRefExpr(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Any _35735_expr) {
	{
		auto &_match_expr{ _35735_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e9a01e45:;
			{
				jule::Ptr<_1e54ca291_Var> _36017_v = _35735_expr.cast_ptr<_1e54ca291_Var>(&__jule_any_type8);;
				if (_36017_v.get()._field_Reference) {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(*(", 3));
					_1e7161b18_model(_self_, _35735_expr);
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("))", 2));
					return;;
				};
			}
		}
		_match_end_1e9a01d46:;
	};
	_1e7161b18_model(_self_, _35735_expr);
}



inline void _1e7158758_casting(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5454270_CastingExprModel> _37131_m) {
	{
		
		if (_1e7164038_isAny(&(_37131_m.get()._field_Kind))) {
			_case_begin_1e9a041bc:;
			{
				if (_1e554ebb7_IsNil(_37131_m.get()._field_ExprKind.ptr())) {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_1e5551aba_TypeEnum(_37131_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_1e71584d3_possibleRefExpr(_self_, _37131_m.get()._field_Expr);
					return;;
				};
				jule::I64 _38217_i = _1e71953dd_pushAnyType(_self_.get()._field_oc, &(_37131_m.get()._field_ExprKind));;
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ _37131_m.get()._field_Expr };
					
					if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1e9a07a72:;
						{
							jule::Ptr<_1e55539ce_Prim> _38621_prim = _1e5551119_Prim(_37131_m.get()._field_ExprKind.ptr());;
							if (((_38621_prim != nullptr) && _1e5445dee_IsInt(_38621_prim.get()._field_Kind))) {
								_1e7190ce0_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
								_1e7190ce0_write(_self_.get()._field_oc, _1e720cd29_prim(_self_.get()._field_oc.get()._field_tc.ptr(), _38621_prim));
								_1e7190ce0_write(_self_.get()._field_oc, jule::Str(">(", 2));
								_1e71584d3_possibleRefExpr(_self_, _37131_m.get()._field_Expr);
								_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
								goto _match_end_1e9a08952;
							};
							goto _case_begin_1e9a089a7;
						}
					}
					else {
						_case_begin_1e9a089a7:;
						{
							_1e71584d3_possibleRefExpr(_self_, _37131_m.get()._field_Expr);
						}
					}
					_match_end_1e9a08952:;
				};
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_1e7190ce0_write(_self_.get()._field_oc, _1e543d7ba_Itoa(_38217_i));
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1e55515e2_Ptr(_37131_m.get()._field_ExprKind.ptr()) != nullptr) || (_1e55515e2_Ptr(_37131_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e9a04233:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37131_m.get()._field_Kind));
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1e71584d3_possibleRefExpr(_self_, _37131_m.get()._field_Expr);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if (_1e7164038_isAny(&(_37131_m.get()._field_ExprKind))) {
			_case_begin_1e9a04299:;
			{
				_1e71584d3_possibleRefExpr(_self_, _37131_m.get()._field_Expr);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1e555137d_Sptr(_37131_m.get()._field_Kind.ptr()) != nullptr)) {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1e555137d_Sptr(_37131_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37131_m.get()._field_Kind));
				};
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_2403599cc_Production))) {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1e72062b7_locInfo(_self_.get()._field_oc, &(_37131_m.get()._field_Token));
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_1e7190ce0_write(_self_.get()._field_oc, _1e543d7ba_Itoa(static_cast<jule::I64>(_1e71953dd_pushAnyType(_self_.get()._field_oc, &(_37131_m.get()._field_Kind)))));
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1e55527d0_Trait(_37131_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1e9a04310:;
			{
				_1e71584d3_possibleRefExpr(_self_, _37131_m.get()._field_Expr);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1e555137d_Sptr(_37131_m.get()._field_Kind.ptr()) != nullptr)) {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1e555137d_Sptr(_37131_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37131_m.get()._field_Kind));
				};
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_2403599cc_Production))) {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1e72062b7_locInfo(_self_.get()._field_oc, &(_37131_m.get()._field_Token));
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1e7190ce0_write(_self_.get()._field_oc, _1e543d7ba_Itoa(static_cast<jule::I64>(_1e7171177_findTypeOffset(_self_.get()._field_oc.ptr(), _1e55527d0_Trait(_37131_m.get()._field_ExprKind.ptr()), _37131_m.get()._field_Kind))));
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1e55527d0_Trait(_37131_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e9a06202:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37131_m.get()._field_Kind));
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1e71584d3_possibleRefExpr(_self_, _37131_m.get()._field_Expr);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1e7190ce0_write(_self_.get()._field_oc, _1e543d7ba_Itoa(static_cast<jule::I64>(_1e7171177_findTypeOffset(_self_.get()._field_oc.ptr(), _1e55527d0_Trait(_37131_m.get()._field_Kind.ptr()), _37131_m.get()._field_ExprKind))));
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1e9a04156:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37131_m.get()._field_Kind));
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1e71584d3_possibleRefExpr(_self_, _37131_m.get()._field_Expr);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1e9a0408a:;
	};
}



inline void _1e71589cd_models(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Slice<jule::Any> _46230_args) {
	if ((_46230_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_46230_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9a1e4d4:;
		if (it != expr_end) {
			jule::I64 _46614_i = it - expr->begin();
			jule::Any _46621_a = *it;
			{
				_1e71584d3_possibleRefExpr(_self_, _46621_a);
				if (((_46230_args.len() - _46614_i) > 1LL)) {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1e9a1e4d4:;
			++it;
			_46614_i++;
			goto _iter_begin_1e9a1e4d4;
		}
		_iter_end_1e9a1e4d4:;
	};
}



inline void _1e7158c53_args(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5454b22_FnCallExprModel>* _47429_m) {
	jule::I64 _47517_j = 0LL;;
	if ((((*(_47429_m)).get()._field_Func.get()._field_Owner != nullptr) && (!((*(_47429_m)).get()._field_Func.get()._field_Decl.get()._field_Statically)))) {
		(_47517_j)++;
	};
	{
		auto expr = &((*(_47429_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9a222b7:;
		if (it != expr_end) {
			jule::I64 _47913_i = it - expr->begin();
			jule::Any _47916_arg = *it;
			{
				jule::Ptr<_1e5462ca6_ParamIns> _48017_p = (*(_47429_m)).get()._field_Func.get()._field_Params[_47517_j];;
				if (((_48017_p.get()._field_Decl != nullptr) && _48017_p.get()._field_Decl.get()._field_Reference)) {
					{
						auto &_match_expr{ _47916_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1e9a23a7c:;
							{
								jule::Ptr<_1e54ca291_Var> _48425_v = _47916_arg.cast_ptr<_1e54ca291_Var>(&__jule_any_type8);;
								if (_48425_v.get()._field_Reference) {
									_1e7161b18_model(_self_, _47916_arg);
									goto _julec_label_end;
								};
							}
						}
						_match_end_1e9a2398e:;
					};
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1e7161b18_model(_self_, _47916_arg);
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
					goto _julec_label_end;
				};
				_1e71584d3_possibleRefExpr(_self_, _47916_arg);
				_julec_label_end:;
				if ((((*(_47429_m)).get()._field_Args.len() - _47913_i) > 1LL)) {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
				(_47517_j)++;
			}
			_iter_next_1e9a222b7:;
			++it;
			_47913_i++;
			goto _iter_begin_1e9a222b7;
		}
		_iter_end_1e9a222b7:;
	};
}



inline void _1e7158ec8_modelForCall(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Any _50436_expr) {
	{
		auto &_match_expr{ _50436_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1e9a27cb2:;
			{
				_1e715c350_funcIns(_self_, _50436_expr.cast_ptr<_1e5463b75_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1e9a27d39:;
			{
				jule::Ptr<_1e5457493_StructSubIdentExprModel> _51021_ssie = _50436_expr.cast_ptr<_1e5457493_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_51021_ssie.get()._field_Method != nullptr)) {
					_1e715c350_funcIns(_self_, _51021_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1e9a27ba2:;
	};
	_1e71584d3_possibleRefExpr(_self_, _50436_expr);
}



inline void _1e715924d_pushCallInf(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5454b22_FnCallExprModel>* _51932_m) {
	if ((_2403599cc_Production || ((!((*(_51932_m)).get()._field_Func.get()._field_Anon)) && (!(_1e7163a60_isBuiltinCallHasDebuginf(_51932_m)))))) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if ((*(_51932_m)).get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ (*(_51932_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1e9a2aed5:;
				{
					if ((*(_51932_m)).get()._field_Expr.cast_ptr<_1e5457493_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1e9a2b1b1;
				}
			}
			else {
				_case_begin_1e9a2b1b1:;
				{
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1e9a2b07e:;
		};
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1e72062b7_locInfo(_self_.get()._field_oc, &((*(_51932_m)).get()._field_Token));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if (((*(_51932_m)).get()._field_Args.len() != 0LL)) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
	};
}



inline jule::Bool _1e715955b_isWrapped(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5454b22_FnCallExprModel>* _54434_m) {
	if ((((!(_1e546500b_IsBuiltin((*(_54434_m)).get()._field_Func.ptr()))) && ((*(_54434_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1e545ecb4_IsSelf((*(_54434_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_54434_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1e9a2eb10:;
				{
					jule::Ptr<_1e5457493_StructSubIdentExprModel> _54825_ssie = (*(_54434_m)).get()._field_Expr.cast_ptr<_1e5457493_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1e5460028_IsRef((*(_54434_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1e555137d_Sptr(_54825_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1e9a303d5:;
							{
								goto _match_end_1e9a30979;
							}
						}
						else {
							_case_begin_1e9a309e0:;
							{
								if ((_1e555256b_Struct(_54825_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_54825_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1e7190ce0_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1e7161b18_model(_self_, _54825_ssie.get()._field_Expr.get()._field_Model);
										_1e7190ce0_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1e9a30979:;
					};
				}
			}
			_match_end_1e9a2e901:;
		};
	};
	return false;;
}



inline void _1e71597d1_pureFuncCall(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5454b22_FnCallExprModel>* _56837_m) {
	jule::Bool _56913_wrapped = _1e715955b_isWrapped(_self_, _56837_m);;
	_1e7158ec8_modelForCall(_self_, (*(_56837_m)).get()._field_Expr);
	if ((!(_1e546500b_IsBuiltin((*(_56837_m)).get()._field_Func.ptr())))) {
		if (((*(_56837_m)).get()._field_Func.get()._field_Decl.get()._field_CppLinked && ((*(_56837_m)).get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1e7218d35_hasDirective(&((*(_56837_m)).get()._field_Func.get()._field_Decl.get()._field_Directives), jule::Str("cdef", 4))))) {
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto expr = &((*(_56837_m)).get()._field_Func.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e9a363ca:;
					if (it != expr_end) {
						jule::I64 _57526_i = it - expr->begin();
						jule::Ptr<_1e554c555_InsGeneric> _57533_g = *it;
						{
							_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _57533_g.get()._field_Kind));
							if ((((*(_56837_m)).get()._field_Func.get()._field_Generics.len() - _57526_i) > 1LL)) {
								_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
							};
						}
						_iter_next_1e9a363ca:;
						++it;
						_57526_i++;
						goto _iter_begin_1e9a363ca;
					}
					_iter_end_1e9a363ca:;
				};
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1e715924d_pushCallInf(_self_, _56837_m);
	jule::Bool _58617_locinfo = false;;
	if ((((!(_1e546500b_IsBuiltin((*(_56837_m)).get()._field_Func.ptr()))) && ((*(_56837_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1e545ecb4_IsSelf((*(_56837_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_56837_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1e9a39d3a:;
				{
					jule::Ptr<_1e5457493_StructSubIdentExprModel> _59025_ssie = (*(_56837_m)).get()._field_Expr.cast_ptr<_1e5457493_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1e5460028_IsRef((*(_56837_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1e9a3d8dd:;
							{
								_1e71584d3_possibleRefExpr(_self_, _59025_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1e555137d_Sptr(_59025_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1e9a3d954:;
							{
								_1e71584d3_possibleRefExpr(_self_, _59025_ssie.get()._field_Expr.get()._field_Model);
								_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_2403599cc_Production))) {
									_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1e72062b7_locInfo(_self_.get()._field_oc, &((*(_56837_m)).get()._field_Token));
									_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1e9a3aca3:;
							{
								if ((_1e555256b_Struct(_59025_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ _59025_ssie.get()._field_Expr.get()._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1e9a3a698:;
											{
												jule::Ptr<_1e54ca291_Var> _60733_v = _59025_ssie.get()._field_Expr.get()._field_Model.cast_ptr<_1e54ca291_Var>(&__jule_any_type8);;
												if (_60733_v.get()._field_Reference) {
													goto _match_end_1e9a3b820;
												};
												goto _case_begin_1e9a3b875;
											}
										}
										else {
											_case_begin_1e9a3b875:;
											{
												_1e7190ce0_write(_self_.get()._field_oc, jule::Str("&", 1));
											}
										}
										_match_end_1e9a3b820:;
									};
								};
								if (_56913_wrapped) {
									_1e7190ce0_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1e7161b18_model(_self_, _59025_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1e9a3ac3c:;
					};
					if (((*(_56837_m)).get()._field_Args.len() > 0LL)) {
						_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type70) {
				_case_begin_1e9a39da1:;
				{
					_1e71584d3_possibleRefExpr(_self_, (*(_56837_m)).get()._field_Expr.cast_ptr<_1e5456bac_TraitSubIdentExprModel>(&__jule_any_type70).get()._field_Expr);
					if ((!(_2403599cc_Production))) {
						_58617_locinfo=true;
					};
					if (((*(_56837_m)).get()._field_Args.len() > 0LL)) {
						_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1e9a39b2b:;
		};
	};
	_1e7158c53_args(_self_, _56837_m);
	if (_58617_locinfo) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1e72062b7_locInfo(_self_.get()._field_oc, &((*(_56837_m)).get()._field_Token));
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_56913_wrapped) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _1e7159a56_coFuncCall(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5454b22_FnCallExprModel>* _64935_m) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e71cb831_addIndent(_self_.get()._field_oc);
	jule::Str _65217_head = jule::Str("std::thread([", 13);;
	if (((*(_64935_m)).get()._field_Func.get()._field_Owner != nullptr)) {
		_65217_head+=jule::Str("_self_", 6);
		if (((*(_64935_m)).get()._field_Args.len() > 0LL)) {
			_65217_head+=jule::Str(", ", 2);
		};
	};
	{
		auto expr = &((*(_64935_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9a481de:;
		if (it != expr_end) {
			jule::I64 _65913_i = it - expr->begin();
			jule::Any _65916_arg = *it;
			{
				if ((_65913_i > 0LL)) {
					_65217_head+=jule::Str(", ", 2);
				};
				{
					auto &_match_expr{ _65916_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1e9a4a0e2:;
						{
							jule::Ptr<_1e54ca291_Var> _66525_v = _65916_arg.cast_ptr<_1e54ca291_Var>(&__jule_any_type8);;
							_65217_head+=static__1e716a627_var(_66525_v);
							goto _iter_next_1e9a481de;
						}
					}
					_match_end_1e9a49894:;
				};
				jule::Str _66917_name = (jule::Str("_co_arg_", 8) + _1e543d7ba_Itoa(_65913_i));;
				_65217_head+=_66917_name;
				_1e71d03a1_indent(_self_.get()._field_oc);
				_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_64935_m)).get()._field_Func.get()._field_Params[_65913_i].get()._field_Kind));
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if ((*(_64935_m)).get()._field_Func.get()._field_Params[_65913_i].get()._field_Decl.get()._field_Reference) {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_1e7190ce0_write(_self_.get()._field_oc, _66917_name);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1e71584d3_possibleRefExpr(_self_, _65916_arg);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _68117_argS = jule::Any(_66917_name, &__jule_any_type5);;
				(*(_64935_m)).get()._field_Args[_65913_i]=(*(((jule::Any*)((&(_68117_argS))))));
			}
			_iter_next_1e9a481de:;
			++it;
			_65913_i++;
			goto _iter_begin_1e9a481de;
		}
		_iter_end_1e9a481de:;
	};
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, _65217_head);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1e71cb831_addIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e71597d1_pureFuncCall(_self_, _64935_m);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e7159d75_writeUseExpr(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5463b75_FnIns>* _69937_f, jule::Ptr<_1e5522d00_Data> _69952_d) {
	if ((_1e5552ca8_Tup(_69952_d.get()._field_Kind.ptr()) == nullptr)) {
		_1e71584d3_possibleRefExpr(_self_, _69952_d.get()._field_Model);
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_1e545884b_TupleExprModel> _70517_tup = _69952_d.get()._field_Model.cast_ptr<_1e545884b_TupleExprModel>(&__jule_any_type88);;
	_1e72166a1_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _1e5552ca8_Tup((*(_69937_f)).get()._field_Result.ptr()));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto expr = &(_70517_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9a55ecc:;
		if (it != expr_end) {
			jule::I64 _70813_i = it - expr->begin();
			jule::Ptr<_1e5522d00_Data> _70816_data = *it;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_1e7190ce0_write(_self_.get()._field_oc, _1e543d7ba_Itoa(_70813_i));
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("=", 1));
				_1e71584d3_possibleRefExpr(_self_, _70816_data.get()._field_Model);
				if (((_70517_tup.get()._field_Datas.len() - _70813_i) > 1LL)) {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_1e9a55ecc:;
			++it;
			_70813_i++;
			goto _iter_begin_1e9a55ecc;
		}
		_iter_end_1e9a55ecc:;
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _1e715a0ea_funcCall(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5454b22_FnCallExprModel> _72032_m) {
	if (_72032_m.get()._field_IsCo) {
		_1e7159a56_coFuncCall(_self_, &(_72032_m));
		return;;
	};
	if (((_1e546500b_IsBuiltin(_72032_m.get()._field_Func.ptr()) || (!(_72032_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_72032_m.get()._field_Except != nullptr) && (_72032_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1e71597d1_pureFuncCall(_self_, &(_72032_m));
		return;;
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1e71cb831_addIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1e71597d1_pureFuncCall(_self_, &(_72032_m));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e71d03a1_indent(_self_.get()._field_oc);
	if ((_72032_m.get()._field_Except != nullptr)) {
		if (((_72032_m.get()._field_Func.get()._field_Result == nullptr) || (!(_72032_m.get()._field_Assigned)))) {
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1e71527b8_scope(_self_.get()._field_oc.get()._field_sc, _72032_m.get()._field_Except);
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _74621_forwarded = _1e7163796_isForwarded(&(_72032_m.get()._field_Except));;
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_74621_forwarded) {
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _75125_stmt = _72032_m.get()._field_Except.get()._field_Stmts[(_72032_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _75125_stmt };
				
				if (_match_expr.type == &__jule_any_type23) {
					_case_begin_1e9a606ac:;
					{
						_72032_m.get()._field_Except.get()._field_Stmts=_72032_m.get()._field_Except.get()._field_Stmts.slice(0LL, (_72032_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_1e7190ce0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_1e71cb831_addIndent(_self_.get()._field_oc);
						_1e7152543_scopeStmts(_self_.get()._field_oc.get()._field_sc, &(_72032_m.get()._field_Except));
						_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1e71d03a1_indent(_self_.get()._field_oc);
						_1e7159d75_writeUseExpr(_self_, &(_72032_m.get()._field_Func), _75125_stmt.cast_ptr<_1e5522d00_Data>(&__jule_any_type23));
						_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1e71cbd4d_doneIndent(_self_.get()._field_oc);
						_1e71d03a1_indent(_self_.get()._field_oc);
						_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_1e9a6158c:;
					{
						_1e71527b8_scope(_self_.get()._field_oc.get()._field_sc, _72032_m.get()._field_Except);
					}
				}
				_match_end_1e9a61537:;
			};
			if (_74621_forwarded) {
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1e7161d8d_initExpr(_self_, _72032_m.get()._field_Func.get()._field_Result);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	} else {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1e72062b7_locInfo(_self_.get()._field_oc, &(_72032_m.get()._field_Token));
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1e5461436_IsVoid(_72032_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1e71d03a1_indent(_self_.get()._field_oc);
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	};
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1e715a370_slice(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5454ec9_SliceExprModel> _79129_m) {
	if ((_79129_m.get()._field_Elems.len() == 0LL)) {
		_1e7190ce0_write(_self_.get()._field_oc, _1e720e798_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _79129_m.get()._field_ElemKind));
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1e7190ce0_write(_self_.get()._field_oc, _1e720e798_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _79129_m.get()._field_ElemKind));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1e71589cd_models(_self_, _79129_m.get()._field_Elems);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1e715a5e5_indexing(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545544c_IndexingExprModel> _80332_m) {
	_1e71584d3_possibleRefExpr(_self_, _80332_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_2403599cc_Production || (_1e55515e2_Ptr(_80332_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1e5552a44_Map(_80332_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1e7163c91_isExprComesFromBind(&(_80332_m.get()._field_Expr))) {
			_case_begin_1e9a6ccd5:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1e71584d3_possibleRefExpr(_self_, _80332_m.get()._field_Index.get()._field_Model);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1e9a6d555:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1e72062b7_locInfo(_self_.get()._field_oc, &(_80332_m.get()._field_Token));
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				_1e71584d3_possibleRefExpr(_self_, _80332_m.get()._field_Index.get()._field_Model);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1e9a6d4de:;
	};
}



inline void _1e715a86a_unsafeIndexing(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_226994c8a_UnsafeIndexingExprModel> _82338_m) {
	_1e71584d3_possibleRefExpr(_self_, _82338_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_2403599cc_Production || (_1e55515e2_Ptr(_82338_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1e5552a44_Map(_82338_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e9a7236c:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1e71584d3_possibleRefExpr(_self_, _82338_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1e9a72b64:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1e71584d3_possibleRefExpr(_self_, _82338_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1e9a72aed:;
	};
}



inline void _1e715aae0_anonFunc(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5455804_AnonFnExprModel> _84032_m) {
	_1e7190ce0_write(_self_.get()._field_oc, _1e721226d_func(_self_.get()._field_oc.get()._field_tc.ptr(), _84032_m.get()._field_Func));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1e720842e_paramsIns(_self_.get()._field_oc, &(_84032_m.get()._field_Func.get()._field_Params));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1e7211b52_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_84032_m.get()._field_Func));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1e7152a3d_funcScope(_self_.get()._field_oc.get()._field_sc, _84032_m.get()._field_Func);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e715ad65_mapExpr(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545612e_MapExprModel> _85131_m) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _85131_m.get()._field_KeyKind));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _85131_m.get()._field_ValKind));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_85131_m.get()._field_Entries.len() > 0LL)) {
		{
			auto expr = &(_85131_m.get()._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e9a7baa2:;
			if (it != expr_end) {
				jule::I64 _85818_i = it - expr->begin();
				jule::Ptr<_1e5455bab_KeyValPairExprModel> _85825_pair = *it;
				{
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1e71584d3_possibleRefExpr(_self_, _85825_pair.get()._field_Key);
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1e71584d3_possibleRefExpr(_self_, _85825_pair.get()._field_Val);
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_85131_m.get()._field_Entries.len() - _85818_i) > 1LL)) {
						_1e7190ce0_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1e9a7baa2:;
				++it;
				_85818_i++;
				goto _iter_begin_1e9a7baa2;
			}
			_iter_end_1e9a7baa2:;
		};
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1e715b0da_slicing(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545666d_SlicingExprModel> _87231_m) {
	_1e71584d3_possibleRefExpr(_self_, _87231_m.get()._field_Expr);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_2403599cc_Production))) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1e72062b7_locInfo(_self_.get()._field_oc, &(_87231_m.get()._field_Token));
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1e71584d3_possibleRefExpr(_self_, _87231_m.get()._field_Left);
	if ((_87231_m.get()._field_Right != nullptr)) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1e71584d3_possibleRefExpr(_self_, _87231_m.get()._field_Right);
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e715b360_traitSub(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5456bac_TraitSubIdentExprModel> _88832_m) {
	_1e7190ce0_write(_self_.get()._field_oc, static__1e7169802_traitDecl(_88832_m.get()._field_Trt));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1e71584d3_possibleRefExpr(_self_, _88832_m.get()._field_Expr);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1e7190ce0_write(_self_.get()._field_oc, static__1e71692b3_func(&(_88832_m.get()._field_Method)));
}



inline void _1e715b5d5_structureSub(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5457493_StructSubIdentExprModel> _89736_m) {
	_1e71584d3_possibleRefExpr(_self_, _89736_m.get()._field_Expr.get()._field_Model);
	if ((_89736_m.get()._field_Field == nullptr)) {
		return;;
	};
	if ((_1e55515e2_Ptr(_89736_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else if ((_1e555137d_Sptr(_89736_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".get(", 5));
		if ((!(_2403599cc_Production))) {
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\"", 1));
			_1e72062b7_locInfo(_self_.get()._field_oc, &(_89736_m.get()._field_Token));
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\"", 1));
		};
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(").", 2));
	} else {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716a380_field(&(_89736_m.get()._field_Field.get()._field_Decl)));
}



inline void _1e715b85a_commonIdent(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5457edd_CommonIdentExprModel> _91831_m) {
	_1e7190ce0_write(_self_.get()._field_oc, _91831_m.get()._field_Ident);
}



inline void _1e715bad0_commonSub(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545854e_CommonSubIdentExprModel> _92233_m) {
	_1e71584d3_possibleRefExpr(_self_, _92233_m.get()._field_Expr);
	{
		
		if ((_1e55515e2_Ptr(_92233_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1e9a8ab8d:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1e555137d_Sptr(_92233_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1e9a8b397:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_2403599cc_Production))) {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1e72062b7_locInfo(_self_.get()._field_oc, &(_92233_m.get()._field_Token));
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1e9a8b331:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1e9a8b2ba:;
	};
	_1e7190ce0_write(_self_.get()._field_oc, _92233_m.get()._field_Ident);
}



inline void _1e715bd55_array(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5457c02_ArrayExprModel> _94129_m) {
	_1e7190ce0_write(_self_.get()._field_oc, _1e7210e09_array(_self_.get()._field_oc.get()._field_tc.ptr(), _94129_m.get()._field_Kind));
	if ((_94129_m.get()._field_Elems.len() == 0LL)) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_94129_m.get()._field_Elems.len() == 2LL) && (_94129_m.get()._field_Elems[1LL] == nullptr))) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1e71584d3_possibleRefExpr(_self_, _94129_m.get()._field_Elems[0LL]);
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1e71589cd_models(_self_, _94129_m.get()._field_Elems);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1e715c0ca_funcInsCommon(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5463b75_FnIns> _96437_m) {
	_1e7190ce0_write(_self_.get()._field_oc, _1e721226d_func(_self_.get()._field_oc.get()._field_tc.ptr(), _96437_m));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e715c350_funcIns(_self_, _96437_m);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e715c350_funcIns(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5463b75_FnIns> _97131_m) {
	if (((_97131_m.get()._field_Decl != nullptr) && _97131_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_1e474057e_Directive> _97317_d = _1e72189a0_findDirective(&(_97131_m.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_97317_d != nullptr)) {
			_1e7190ce0_write(_self_.get()._field_oc, _1e720aa6e_concatAllParts(_97317_d.get()._field_Args));
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716955a_funcIns(&(_97131_m)));
}



inline void _1e715c5c5_tuple(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545884b_TupleExprModel> _98229_m) {
	{
		auto expr = &(_98229_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9a98690:;
		if (it != expr_end) {
			jule::I64 _98314_i = it - expr->begin();
			jule::Ptr<_1e5522d00_Data> _98321_d = *it;
			{
				_1e71584d3_possibleRefExpr(_self_, _98321_d.get()._field_Model);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_98229_m.get()._field_Datas.len() - _98314_i) > 1LL)) {
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1e71d03a1_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_1e9a98690:;
			++it;
			_98314_i++;
			goto _iter_begin_1e9a98690;
		}
		_iter_end_1e9a98690:;
	};
}



inline void _1e715c84a_newCall(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5459819_BuiltinNewCallExprModel> _99331_m) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _99331_m.get()._field_Kind));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_99331_m.get()._field_Init != nullptr)) {
		_1e71584d3_possibleRefExpr(_self_, _99331_m.get()._field_Init);
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e715cac0_outCall(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5458c25_BuiltinOutCallExprModel> _100331_m) {
	if ((_100331_m.get()._field_Debug && _2403599cc_Production)) {
		return;;
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1e71584d3_possibleRefExpr(_self_, _100331_m.get()._field_Expr);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e715cd45_outlnCall(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5459110_BuiltinOutlnCallExprModel> _101233_m) {
	if ((_101233_m.get()._field_Debug && _2403599cc_Production)) {
		return;;
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1e71584d3_possibleRefExpr(_self_, _101233_m.get()._field_Expr);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e715d0ba_panicCall(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5459c04_BuiltinPanicCallExprModel> _102133_m) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1e71584d3_possibleRefExpr(_self_, _102133_m.get()._field_Expr);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1e72062b7_locInfo(_self_.get()._field_oc, &(_102133_m.get()._field_Token));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1e715d340_assertCall(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545a1aa_BuiltinAssertCallExprModel> _102934_m) {
	if (_2403599cc_Production) {
		return;;
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1e71584d3_possibleRefExpr(_self_, _102934_m.get()._field_Expr);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1e7190ce0_write(_self_.get()._field_oc, _1e7162a92_cstrLit(static_cast<jule::Slice<jule::U8>>(_102934_m.get()._field_Log)));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1e72062b7_locInfo(_self_.get()._field_oc, &(_102934_m.get()._field_Token));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1e715d5b5_errorCall(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545c08b_BuiltinErrorCallExprModel> _104233_m) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1e5461436_IsVoid(_104233_m.get()._field_Func.get()._field_Decl.ptr())) {
		{
			auto &_match_expr{ _104233_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1e9aa63b2:;
				{
					jule::Ptr<_1e54ca291_Var> _104721_v = _104233_m.get()._field_Err.get()._field_Model.cast_ptr<_1e54ca291_Var>(&__jule_any_type8);;
					if ((_104721_v.get()._field_Ident == jule::Str("error", 5))) {
						_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1e9aa635c:;
		};
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1e7216cde_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_104233_m.get()._field_Func.get()._field_Result));
		{
			auto &_match_expr{ _104233_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1e9aa9195:;
				{
					jule::Ptr<_1e54ca291_Var> _105921_v = _104233_m.get()._field_Err.get()._field_Model.cast_ptr<_1e54ca291_Var>(&__jule_any_type8);;
					if ((_105921_v.get()._field_Ident == jule::Str("error", 5))) {
						_1e7190ce0_write(_self_.get()._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1e9aa90da:;
		};
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_1e71584d3_possibleRefExpr(_self_, _104233_m.get()._field_Err.get()._field_Model);
	jule::I64 _106813_i = _1e71953dd_pushAnyType(_self_.get()._field_oc, &(_104233_m.get()._field_Err.get()._field_Kind));;
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_1e7190ce0_write(_self_.get()._field_oc, _1e543d7ba_Itoa(_106813_i));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1e715d83a_copyCall(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545bba1_BuiltinCopyCallExprModel> _107432_m) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1e71584d3_possibleRefExpr(_self_, _107432_m.get()._field_Dest.get()._field_Model);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1e5551119_Prim(_107432_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1e71584d3_possibleRefExpr(_self_, _107432_m.get()._field_Src.get()._field_Model);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1e5551119_Prim(_107432_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e715dab0_lenCall(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545ad6a_BuiltinLenCallExprModel> _109031_m) {
	_1e71584d3_possibleRefExpr(_self_, _109031_m.get()._field_Expr.get()._field_Model);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1e715dd35_capCall(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545b189_BuiltinCapCallExprModel> _109531_m) {
	_1e71584d3_possibleRefExpr(_self_, _109531_m.get()._field_Expr.get()._field_Model);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1e715e0aa_deleteCall(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545b83d_BuiltinDeleteCallExprModel> _110034_m) {
	_1e71584d3_possibleRefExpr(_self_, _110034_m.get()._field_Dest.get()._field_Model);
	if ((_110034_m.get()._field_Key != nullptr)) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_1e71584d3_possibleRefExpr(_self_, _110034_m.get()._field_Key.get()._field_Model);
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1e715e330_makeCallSlice(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545a661_BuiltinMakeCallExprModel>* _111138_m) {
	jule::Ptr<_1e5557bc0_Slc> _111217_slice = _1e5552093_Slc((*(_111138_m)).get()._field_Kind.ptr());;
	_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_111138_m)).get()._field_Kind));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1e71584d3_possibleRefExpr(_self_, (*(_111138_m)).get()._field_Len);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_111138_m)).get()._field_Cap != nullptr)) {
		_1e71584d3_possibleRefExpr(_self_, (*(_111138_m)).get()._field_Cap);
	} else {
		_1e71584d3_possibleRefExpr(_self_, (*(_111138_m)).get()._field_Len);
	};
	if (_1e72190cc_shouldInitialized(&(_111217_slice.get()._field_Elem))) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1e7161d8d_initExpr(_self_, _111217_slice.get()._field_Elem);
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e715e5a5_makeCallStr(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545a661_BuiltinMakeCallExprModel>* _112936_m) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1e71584d3_possibleRefExpr(_self_, (*(_112936_m)).get()._field_Len);
	if (((*(_112936_m)).get()._field_Cap != nullptr)) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1e71584d3_possibleRefExpr(_self_, (*(_112936_m)).get()._field_Cap);
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e715e82a_makeCall(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545a661_BuiltinMakeCallExprModel> _114032_m) {
	if ((_1e5552093_Slc(_114032_m.get()._field_Kind.ptr()) != nullptr)) {
		_1e715e330_makeCallSlice(_self_, &(_114032_m));
		return;;
	};
	_1e715e5a5_makeCallStr(_self_, &(_114032_m));
}



inline void _1e715eaa0_pushToSlice(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_20d5b300e_PushToSliceExprModel> _114835_m) {
	jule::I64 _114913_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1e71584d3_possibleRefExpr(_self_, _114835_m.get()._field_Dest);
	jule::Str _115113_dest = _self_.get()._field_oc.get()._field_Obj.slice(_114913_n);;
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1e7190ce0_write(_self_.get()._field_oc, _115113_dest);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1e7190ce0_write(_self_.get()._field_oc, _1e543d7ba_Itoa(static_cast<jule::I64>(_114835_m.get()._field_Elems.get()._field_Elems.len())));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto expr = &(_114835_m.get()._field_Elems.get()._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9ac0d5a:;
		if (it != expr_end) {
			jule::Any _115821_e = *it;
			{
				_1e7190ce0_write(_self_.get()._field_oc, _115113_dest);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1e71584d3_possibleRefExpr(_self_, _115821_e);
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1e9ac0d5a:;
			++it;
			goto _iter_begin_1e9ac0d5a;
		}
		_iter_end_1e9ac0d5a:;
	};
}



inline void _1e715ed25_appendCall(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545aa4b_BuiltinAppendCallExprModel> _116734_m) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1e71584d3_possibleRefExpr(_self_, _116734_m.get()._field_Dest);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1e71584d3_possibleRefExpr(_self_, _116734_m.get()._field_Elements);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e716009a_cloneCall(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545942e_BuiltinCloneCallExprModel> _117533_m) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1e71584d3_possibleRefExpr(_self_, _117533_m.get()._field_Expr);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e7160320_sizeof(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545c388_SizeofExprModel> _118130_m) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1e71584d3_possibleRefExpr(_self_, _118130_m.get()._field_Expr);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e7160595_alignof(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545c674_AlignofExprModel> _118731_m) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1e71584d3_possibleRefExpr(_self_, _118731_m.get()._field_Expr);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1e71608a3_runeLit(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545c960_RuneExprModel> _119327_m) {
	if ((_119327_m.get()._field_Code <= 127LL)) {
		jule::Str _119521_b = _1e71624cb_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_119327_m.get()._field_Code)));;
		if ((_119521_b == jule::Str("'", 1))) {
			_119521_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _119521_b) + jule::Str("'", 1));;
	};
	return _1e7163147_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_119327_m.get()._field_Code)));;
}



inline void _1e7160b28_structureStatic(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e5457839_StructStaticIdentExprModel> _120439_m) {
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716955a_funcIns(&(_120439_m.get()._field_Method)));
}



inline void _1e7160d9d_integratedToStr(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545cc6d_IntegratedToStrExprModel> _120839_m) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1e71584d3_possibleRefExpr(_self_, _120839_m.get()._field_Expr);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e7161123_backendEmit(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545d136_BackendEmitExprModel> _121435_m) {
	if ((_121435_m.get()._field_Exprs.len() == 0LL)) {
		_1e7190ce0_write(_self_.get()._field_oc, _121435_m.get()._field_Code);
		return;;
	};
	jule::I64 _121913_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _122017_args = jule::Slice<jule::Any>::alloc(_121435_m.get()._field_Exprs.len(), _121435_m.get()._field_Exprs.len());;
	{
		auto expr = &(_121435_m.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9ad1640:;
		if (it != expr_end) {
			jule::I64 _122114_i = it - expr->begin();
			jule::Any _122121_expr = *it;
			{
				_1e71584d3_possibleRefExpr(_self_, _122121_expr);
				_122017_args[_122114_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_121913_n), &__jule_any_type5);
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL, _121913_n);
			}
			_iter_next_1e9ad1640:;
			++it;
			_122114_i++;
			goto _iter_begin_1e9ad1640;
		}
		_iter_end_1e9ad1640:;
	};
	_1e7190ce0_write(_self_.get()._field_oc, _1e621a310_Format(_121435_m.get()._field_Code, _122017_args));
}



inline void _1e7161398_free(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e545d422_FreeExprModel> _122928_m) {
	_1e71584d3_possibleRefExpr(_self_, _122928_m.get()._field_Expr);
	if (_240359339_RC) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1e716161d_mutSlicing(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_20d77659b_MutSlicingExprModel> _123834_m) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e71584d3_possibleRefExpr(_self_, _123834_m.get()._field_Expr);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_2403599cc_Production))) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1e72062b7_locInfo(_self_.get()._field_oc, &(_123834_m.get()._field_Token));
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1e71584d3_possibleRefExpr(_self_, _123834_m.get()._field_Left);
	if ((_123834_m.get()._field_Right != nullptr)) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1e71584d3_possibleRefExpr(_self_, _123834_m.get()._field_Right);
	};
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1e7161893_strInsertBegin(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e6223802_StrInsertBeginExprModel> _125538_m) {
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e71584d3_possibleRefExpr(_self_, _125538_m.get()._field_Dest);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1e71584d3_possibleRefExpr(_self_, _125538_m.get()._field_Expr);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1e7161b18_model(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Any _126329_m) {
	{
		auto &_match_expr{ _126329_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1e9adbc33:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, _126329_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1e9adc00d:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _126329_m.cast_ptr<_1e554dc82_TypeKind>(&__jule_any_type90)));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1e9adc074:;
			{
				_1e7156b30_constant(_self_, _126329_m.cast_ptr<_1e54469c1_Const>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e9adc0da:;
			{
				_1e7157768_var(_self_, _126329_m.cast_ptr<_1e54ca291_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1e9adc151:;
			{
				_1e71579dd_structureIns(_self_, _126329_m.cast_ptr<_1e47903e2_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1e9adcb57:;
			{
				_1e715c0ca_funcInsCommon(_self_, _126329_m.cast_ptr<_1e5463b75_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1e9adcbbd:;
			{
				_1e715726d_unsafeBinary(_self_, _126329_m.cast_ptr<_20d5b2c34_UnsafeBinopExprModel>(&__jule_any_type129).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1e9adcc34:;
			{
				_1e71574e3_binary(_self_, _126329_m.cast_ptr<_1e5452ca7_BinopExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1e9adcc9a:;
			{
				_1e7157c63_unary(_self_, _126329_m.cast_ptr<_1e545315e_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1e9adcd11:;
			{
				_1e7157ed8_structureLit(_self_, _126329_m.cast_ptr<_1e5453912_StructLitExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1e9adcd77:;
			{
				_1e715825d_allocStructure(_self_, _126329_m.cast_ptr<_1e5453c20_AllocStructLitExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1e9adcddd:;
			{
				_1e7158758_casting(_self_, _126329_m.cast_ptr<_1e5454270_CastingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1e9adce54:;
			{
				_1e715a0ea_funcCall(_self_, _126329_m.cast_ptr<_1e5454b22_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1e9adceba:;
			{
				_1e715a370_slice(_self_, _126329_m.cast_ptr<_1e5454ec9_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1e9add031:;
			{
				_1e715bd55_array(_self_, _126329_m.cast_ptr<_1e5457c02_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1e9add097:;
			{
				_1e715a86a_unsafeIndexing(_self_, _126329_m.cast_ptr<_226994c8a_UnsafeIndexingExprModel>(&__jule_any_type130));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1e9add10d:;
			{
				_1e715a5e5_indexing(_self_, _126329_m.cast_ptr<_1e545544c_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1e9add185:;
			{
				_1e715aae0_anonFunc(_self_, _126329_m.cast_ptr<_1e5455804_AnonFnExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1e9add20c:;
			{
				_1e715ad65_mapExpr(_self_, _126329_m.cast_ptr<_1e545612e_MapExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1e9add284:;
			{
				_1e715b0da_slicing(_self_, _126329_m.cast_ptr<_1e545666d_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1e9add30b:;
			{
				_1e715b360_traitSub(_self_, _126329_m.cast_ptr<_1e5456bac_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1e9add383:;
			{
				_1e715b5d5_structureSub(_self_, _126329_m.cast_ptr<_1e5457493_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1e9add40a:;
			{
				_1e715b85a_commonIdent(_self_, _126329_m.cast_ptr<_1e5457edd_CommonIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1e9add482:;
			{
				_1e715bad0_commonSub(_self_, _126329_m.cast_ptr<_1e545854e_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1e9add509:;
			{
				_1e715c5c5_tuple(_self_, _126329_m.cast_ptr<_1e545884b_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1e9add581:;
			{
				_1e715cac0_outCall(_self_, _126329_m.cast_ptr<_1e5458c25_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1e9add608:;
			{
				_1e715cd45_outlnCall(_self_, _126329_m.cast_ptr<_1e5459110_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1e9add680:;
			{
				_1e715c84a_newCall(_self_, _126329_m.cast_ptr<_1e5459819_BuiltinNewCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1e9add707:;
			{
				_1e715d0ba_panicCall(_self_, _126329_m.cast_ptr<_1e5459c04_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1e9add77e:;
			{
				_1e715d340_assertCall(_self_, _126329_m.cast_ptr<_1e545a1aa_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1e9add806:;
			{
				_1e715d5b5_errorCall(_self_, _126329_m.cast_ptr<_1e545c08b_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1e9add87d:;
			{
				_1e715e82a_makeCall(_self_, _126329_m.cast_ptr<_1e545a661_BuiltinMakeCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1e9add905:;
			{
				_1e715ed25_appendCall(_self_, _126329_m.cast_ptr<_1e545aa4b_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1e9add97c:;
			{
				_1e716009a_cloneCall(_self_, _126329_m.cast_ptr<_1e545942e_BuiltinCloneCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1e9adda04:;
			{
				_1e715d83a_copyCall(_self_, _126329_m.cast_ptr<_1e545bba1_BuiltinCopyCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1e9adda7b:;
			{
				_1e715dab0_lenCall(_self_, _126329_m.cast_ptr<_1e545ad6a_BuiltinLenCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1e9addb03:;
			{
				_1e715dd35_capCall(_self_, _126329_m.cast_ptr<_1e545b189_BuiltinCapCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1e9addb7a:;
			{
				_1e715e0aa_deleteCall(_self_, _126329_m.cast_ptr<_1e545b83d_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1e9addc02:;
			{
				_1e7160320_sizeof(_self_, _126329_m.cast_ptr<_1e545c388_SizeofExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1e9addc79:;
			{
				_1e7160595_alignof(_self_, _126329_m.cast_ptr<_1e545c674_AlignofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1e9addd01:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, _1e71608a3_runeLit(_self_, _126329_m.cast_ptr<_1e545c960_RuneExprModel>(&__jule_any_type89)));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1e9addd78:;
			{
				_1e7160b28_structureStatic(_self_, _126329_m.cast_ptr<_1e5457839_StructStaticIdentExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1e9adde00:;
			{
				_1e7160d9d_integratedToStr(_self_, _126329_m.cast_ptr<_1e545cc6d_IntegratedToStrExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1e9adde77:;
			{
				_1e7161123_backendEmit(_self_, _126329_m.cast_ptr<_1e545d136_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1e9addeee:;
			{
				_1e7161398_free(_self_, _126329_m.cast_ptr<_1e545d422_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1e9ade076:;
			{
				_1e716161d_mutSlicing(_self_, _126329_m.cast_ptr<_20d77659b_MutSlicingExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1e9ade0ed:;
			{
				_1e7161893_strInsertBegin(_self_, _126329_m.cast_ptr<_1e6223802_StrInsertBeginExprModel>(&__jule_any_type127));
			}
		}
		else {
			_case_begin_1e9adbda9:;
			{
				_1e7190ce0_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1e9adbccc:;
	};
}



inline void _1e7161d8d_initExpr(jule::Ptr<_1e71554d0_exprCoder> _self_, jule::Ptr<_1e554dc82_TypeKind> _136432_t) {
	if (_1e5550668_NilCompatible(_136432_t.ptr())) {
		if ((_1e55515e2_Ptr(_136432_t.ptr()) != nullptr)) {
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _136432_t));
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1e555874d_Tuple> _137417_tup = _1e5552ca8_Tup(_136432_t.ptr());;
	if ((_137417_tup != nullptr)) {
		_1e72166a1_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _137417_tup);
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto expr = &(_137417_tup.get()._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e9b08ed6:;
			if (it != expr_end) {
				jule::I64 _137818_i = it - expr->begin();
				jule::Ptr<_1e554dc82_TypeKind> _137825_tt = *it;
				{
					if ((!(_1e72190cc_shouldInitialized(&(_137825_tt))))) {
						goto _iter_next_1e9b08ed6;
					};
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_1e7190ce0_write(_self_.get()._field_oc, _1e543d7ba_Itoa(_137818_i));
					_1e7190ce0_write(_self_.get()._field_oc, jule::Str("=", 1));
					_1e7161d8d_initExpr(_self_, _137825_tt);
					if (((_137417_tup.get()._field_Types.len() - _137818_i) > 1LL)) {
						_1e7190ce0_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_1e9b08ed6:;
				++it;
				_137818_i++;
				goto _iter_begin_1e9b08ed6;
			}
			_iter_end_1e9b08ed6:;
		};
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_1e547501b_Enum> _139317_enm = _1e5551856_Enum(_136432_t.ptr());;
	if ((_139317_enm != nullptr)) {
		_1e7161b18_model(_self_, _139317_enm.get()._field_Items[0LL].get()._field_Value.get()._field_Data.get()._field_Model);
		return;;
	};
	jule::Ptr<_1e55539ce_Prim> _139813_prim = _1e5551119_Prim(_136432_t.ptr());;
	if ((_139813_prim != nullptr)) {
		if (_1e54464b5_IsNum(_139813_prim.get()._field_Kind)) {
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_1e555699e_IsBool(_139813_prim.ptr())) {
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_1e5556c13_IsStr(_139813_prim.ptr())) {
			_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_1e5551d2e_Arr(_136432_t.ptr()) != nullptr)) {
		jule::Ptr<_1e5559d6a_Arr> _141021_arr = _1e5551d2e_Arr(_136432_t.ptr());;
		_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _136432_t));
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1e7161d8d_initExpr(_self_, _141021_arr.get()._field_Elem);
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_1e47903e2_StructIns> _141717_s = _1e555256b_Struct(_136432_t.ptr());;
	if ((((_141717_s != nullptr) && _141717_s.get()._field_Decl.get()._field_CppLinked) && (_1e72189a0_findDirective(&(_141717_s.get()._field_Decl.get()._field_Directives), jule::Str("typedef", 7)) == nullptr))) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _136432_t));
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1e7190ce0_write(_self_.get()._field_oc, _1e721257b_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _136432_t));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1e71554d0_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e7164643_deriveCoder> static__1e7164a1c_new(jule::Ptr<_1e7205bbd_ObjectCoder> _1223_oc) {
	return jule::new_ptr<_1e7164643_deriveCoder>(_1e7164643_deriveCoder{._field_oc=_1223_oc});;
}



inline jule::Str _1e7164d2a_cloneFuncDecl(_1e7164643_deriveCoder* _self_, jule::Ptr<_1e4790018_Struct>* _1633_s) {
	jule::Str _1717_obj = _1e72107dd_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_1633_s)));;
	_1717_obj+=jule::Str(" clone(void) const ", 19);
	return _1717_obj;;
}



inline jule::Str _1e7165138_cloneFuncDef(_1e7164643_deriveCoder* _self_, jule::Ptr<_1e4790018_Struct>* _2232_s) {
	jule::Str _2317_obj = _1e72107dd_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_2232_s)));;
	_2317_obj+=(jule::Str(" ", 1) + _2317_obj);
	_2317_obj+=jule::Str("::clone(void) const ", 20);
	return _2317_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e7164643_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e7166018_TestCoder> static__1e716648b_New(jule::Ptr<_1e7205bbd_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_1e7166018_TestCoder>(_1e7166018_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_1e54a4149_ImportInfo> _1e7166700_findTestingPackage(jule::Ptr<_1e7166018_TestCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_oc.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9b17bd7:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_LinkPath == jule::Str("std::testing", 12))) {
					return _3521_imp;;
				};
			}
			_iter_next_1e9b17bd7:;
			++it;
			goto _iter_begin_1e9b17bd7;
		}
		_iter_end_1e9b17bd7:;
	};
	return nullptr;;
}



inline void _1e7166975_appendTest(jule::Ptr<_1e7166018_TestCoder> _self_, jule::Ptr<_1e5463b75_FnIns> _4334_f) {
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e716713a_callTmReset(_self_);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1e7190ce0_write(_self_.get()._field_oc, _1e7162a92_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, static__1e716955a_funcIns(&(_4334_f)));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1e7166bea_appendPackageTests(jule::Ptr<_1e7166018_TestCoder> _self_, jule::Ptr<_1e54a70a3_Package>* _6043_p) {
	{
		auto expr = &((*(_6043_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9b1d3b3:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _6121_file = *it;
			{
				{
					auto expr = &(_6121_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e9b1dbee:;
					if (it != expr_end) {
						jule::Ptr<_1e5460ec4_Fn> _6225_f = *it;
						{
							if (_1e7218d35_hasDirective(&(_6225_f.get()._field_Directives), jule::Str("test", 4))) {
								_1e7166975_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1e9b1dbee:;
						++it;
						goto _iter_begin_1e9b1dbee;
					}
					_iter_end_1e9b1dbee:;
				};
			}
			_iter_next_1e9b1d3b3:;
			++it;
			goto _iter_begin_1e9b1d3b3;
		}
		_iter_end_1e9b1d3b3:;
	};
}



inline jule::Bool _1e7166e5e_readyTestingPackage(jule::Ptr<_1e7166018_TestCoder> _self_) {
	jule::Ptr<_1e54a4149_ImportInfo> _7117_p = _1e7166700_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_1e54a558a_FindStruct(_7117_p.ptr(), jule::Str("T", 1), false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1e476a521_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5), false);
	_self_.get()._field_tmFailed=_1e476a521_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6), false);
	_self_.get()._field_tmSkipped=_1e476a521_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7), false);
	return true;;
}



inline void _1e716713a_callTmReset(jule::Ptr<_1e7166018_TestCoder> _self_) {
	_1e7190ce0_write(_self_.get()._field_oc, static__1e71692b3_func(&(_self_.get()._field_tmReset)));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1e7167316_callTmFailed(jule::Ptr<_1e7166018_TestCoder> _self_) {
	_1e7190ce0_write(_self_.get()._field_oc, static__1e71692b3_func(&(_self_.get()._field_tmFailed)));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1e71674e2_callTmSkipped(jule::Ptr<_1e7166018_TestCoder> _self_) {
	_1e7190ce0_write(_self_.get()._field_oc, static__1e71692b3_func(&(_self_.get()._field_tmSkipped)));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1e71676bd_Serialize(jule::Ptr<_1e7166018_TestCoder> _self_) {
	_1e720a244_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1e720a068_end(_self_.get()._field_oc);
	});;
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1e71cb831_addIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	if ((!(_1e7166e5e_readyTestingPackage(_self_)))) {
		_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1e71cbd4d_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1e7190ce0_write(_self_.get()._field_oc, _1e720d445_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _1e7210aeb_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1e7190ce0_write(_self_.get()._field_oc, _1e7210aeb_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1e71cb831_addIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1e7167316_callTmFailed(_self_);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1e71674e2_callTmSkipped(_self_);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1e7166bea_appendPackageTests(_self_, &(_self_.get()._field_oc.get()._field_ir.get()._field_Main));
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1e71cbd4d_doneIndent(_self_.get()._field_oc);
	_1e71d03a1_indent(_self_.get()._field_oc);
	_1e7190ce0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1e7166018_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1e7168b31_toOut(jule::Str* _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1e543d18d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)), 15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=(*(_3322_ident));
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, ((*(_3322_ident)).len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=(*(_3322_ident));
	return _4217_obj;;
}



inline jule::Str static__1e716901b_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str* _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1e543d7ba_Itoa(_5423_row);
	_5517_obj+=_1e543d7ba_Itoa(_5433_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=(*(_5444_ident));
	return _5517_obj;;
}



inline jule::Str static__1e71692b3_func(jule::Ptr<_1e5460ec4_Fn>* _6521_f) {
	{
		
		if ((*(_6521_f)).get()._field_CppLinked) {
			_case_begin_1e9b36332:;
			{
				return (*(_6521_f)).get()._field_Ident;;
			}
		}
		else if (((*(_6521_f)).get()._field_Ident == jule::Str("main", 4))) {
			_case_begin_1e9b36398:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_1e546169a_IsMethod((*(_6521_f)).ptr())) {
			_case_begin_1e9b3573d:;
			{
				jule::Str _7221_obj = static__1e7168b31_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
				if ((*(_6521_f)).get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_1e9b356c7:;
			{
				return static__1e7168b31_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
			}
		}
		_match_end_1e9b3562d:;
	};
}



inline jule::Str static__1e716955a_funcIns(jule::Ptr<_1e5463b75_FnIns>* _8424_f) {
	if (_1e546500b_IsBuiltin((*(_8424_f)).ptr())) {
		return (jule::Str("jule::", 6) + (*(_8424_f)).get()._field_Decl.get()._field_Ident);;
	};
	if (((*(_8424_f)).get()._field_Decl.get()._field_CppLinked || ((*(_8424_f)).get()._field_Generics.len() == 0LL))) {
		return static__1e71692b3_func(&((*(_8424_f)).get()._field_Decl));;
	};
	return static__1e7168b31_toOut(&((*(_8424_f)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8424_f)))));;
}



inline jule::Str static__1e7169802_traitDecl(jule::Ptr<_1e5472dc6_Trait> _9525_t) {
	if (_1e5473943_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__1e7168b31_toOut(&(_9525_t.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__1e7169a99_param(jule::Ptr<_1e545e687_Param>* _10322_p) {
	if ((_20d1580d2_IsAnonIdent((*(_10322_p)).get()._field_Ident) || _20d157d3a_IsIgnoreIdent((*(_10322_p)).get()._field_Ident))) {
		return jule::Str();;
	};
	if (_1e545ecb4_IsSelf((*(_10322_p)).ptr())) {
		return jule::Str("_self_", 6);;
	};
	if (((*(_10322_p)).get()._field_Token == nullptr)) {
		return static__1e716901b_toLocal(0LL, 0LL, &((*(_10322_p)).get()._field_Ident));;
	};
	return static__1e716901b_toLocal((*(_10322_p)).get()._field_Token.get()._field_Row, (*(_10322_p)).get()._field_Token.get()._field_Column, &((*(_10322_p)).get()._field_Ident));;
}



inline jule::Str static__1e7169d41_structure(jule::Ptr<_1e4790018_Struct>* _11726_s) {
	if ((*(_11726_s)).get()._field_CppLinked) {
		if (_1e7218d35_hasDirective(&((*(_11726_s)).get()._field_Directives), jule::Str("typedef", 7))) {
			return (*(_11726_s)).get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + (*(_11726_s)).get()._field_Ident);;
	};
	return static__1e7168b31_toOut(&((*(_11726_s)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11726_s)))));;
}



inline jule::Str static__1e716a0d8_structureIns(jule::Ptr<_1e47903e2_StructIns>* _12829_s) {
	if (((*(_12829_s)).get()._field_Decl.get()._field_CppLinked || ((*(_12829_s)).get()._field_Generics.len() == 0LL))) {
		return static__1e7169d41_structure(&((*(_12829_s)).get()._field_Decl));;
	};
	return static__1e7168b31_toOut(&((*(_12829_s)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12829_s)))));;
}



inline jule::Str static__1e716a380_field(jule::Ptr<_1e4764075_Field>* _13622_f) {
	if ((*(_13622_f)).get()._field_Owner.get()._field_CppLinked) {
		return (*(_13622_f)).get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + (*(_13622_f)).get()._field_Ident);;
}



inline jule::Str static__1e716a627_var(jule::Ptr<_1e54ca291_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_1e9b40e30:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("error", 5))) {
			_case_begin_1e9b402b4:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("self", 4))) {
			_case_begin_1e9b4032a:;
			{
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_1e9b40391:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_1e9b40407:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _1e543d7ba_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1e9b4068d:;
			{
				return static__1e716901b_toLocal(_14423_v.get()._field_Token.get()._field_Row, _14423_v.get()._field_Token.get()._field_Column, &(_14423_v.get()._field_Ident));;
			}
		}
		else {
			_case_begin_1e9b4024d:;
			{
				return static__1e7168b31_toOut(&(_14423_v.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_1e9b3eb54:;
	};
}



inline jule::Str static__1e716a8be_iterBegin(jule::Uintptr _16425_it) {
	jule::Str _16517_obj = jule::Str::alloc(0LL, 30LL);;
	_16517_obj+=jule::Str("_iter_begin_", 12);
	_16517_obj+=_1e543d18d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16425_it)), 15LL);
	return _16517_obj;;
}



inline jule::Str static__1e716ab66_iterEnd(jule::Uintptr _17223_it) {
	jule::Str _17317_obj = jule::Str::alloc(0LL, 30LL);;
	_17317_obj+=jule::Str("_iter_end_", 10);
	_17317_obj+=_1e543d18d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17223_it)), 15LL);
	return _17317_obj;;
}



inline jule::Str static__1e716ae0d_iterNext(jule::Uintptr _18024_it) {
	jule::Str _18117_obj = jule::Str::alloc(0LL, 30LL);;
	_18117_obj+=jule::Str("_iter_next_", 11);
	_18117_obj+=_1e543d18d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18024_it)), 15LL);
	return _18117_obj;;
}



inline jule::Str static__1e716b1a5_label(jule::Str* _18822_ident) {
	jule::Str _18917_obj = jule::Str::alloc(0LL, 30LL);;
	_18917_obj+=jule::Str("_julec_label_", 13);
	_18917_obj+=(*(_18822_ident));
	return _18917_obj;;
}



inline jule::Str static__1e716b44c_matchEnd(jule::Uintptr _19624_m) {
	jule::Str _19717_obj = jule::Str::alloc(0LL, 30LL);;
	_19717_obj+=jule::Str("_match_end_", 11);
	_19717_obj+=_1e543d18d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19624_m)), 15LL);
	return _19717_obj;;
}



inline jule::Str static__1e716b6e4_caseBegin(jule::Uintptr _20425_c) {
	jule::Str _20517_obj = jule::Str::alloc(0LL, 30LL);;
	_20517_obj+=jule::Str("_case_begin_", 12);
	_20517_obj+=_1e543d18d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20425_c)), 15LL);
	return _20517_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e7168669_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e719ae0a_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e717141e_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e720ba09_Str(_1e720b71d_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1e720bd17_Equal(jule::Ptr<_1e720b71d_customType> _self_, jule::Ptr<_1e554dc82_TypeKind> _3921_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e720b71d_customType _Src) {
	_Stream << _1e720ba09_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1e720c1be_typeCoder> static__1e720c70d_new(jule::Ptr<_1e7205bbd_ObjectCoder>* _6224_oc) {
	jule::Ptr<_1e720c1be_typeCoder> _6317_tc = jule::new_ptr<_1e720c1be_typeCoder>(_1e720c1be_typeCoder{._field_oc=(*(_6224_oc)), });;
	_6317_tc.get()._field_rc=static__1e7214eb8_new(&(_6317_tc));
	return _6317_tc;;
}



inline jule::Str _1e720ca1b_toType(_1e720c1be_typeCoder* _self_, jule::Str _6929_id) {
	if ((_6929_id != jule::Str("uintptr", 7))) {
		_6929_id=_1e4d57ee8_RealKindOf(_6929_id);
	};
	if (((97LL <= _6929_id[0LL]) && (_6929_id[0LL] <= 122LLU))) {
		_6929_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6929_id);;
}



inline jule::Str _1e720cd29_prim(_1e720c1be_typeCoder* _self_, jule::Ptr<_1e55539ce_Prim> _8023_p) {
	return _1e720ca1b_toType(_self_, _1e5553d42_Str(_8023_p.ptr()));;
}



inline jule::Str _1e720d137_tuple(_1e720c1be_typeCoder* _self_, jule::Ptr<_1e555874d_Tuple> _8528_t) {
	jule::Str _8617_obj = jule::Str("std::tuple<", 11);;
	{
		auto expr = &(_8528_t.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9c442db:;
		if (it != expr_end) {
			jule::Ptr<_1e554dc82_TypeKind> _8721_tk = *it;
			{
				_8617_obj+=_1e721257b_kind(_self_, _8721_tk);
				_8617_obj+=jule::Str(",", 1);
			}
			_iter_next_1e9c442db:;
			++it;
			goto _iter_begin_1e9c442db;
		}
		_iter_end_1e9c442db:;
	};
	(_8617_obj).mut_slice(0LL, (_8617_obj.len() - 1LL));;
	_8617_obj+=jule::Str(">", 1);
	return _8617_obj;;
}



inline jule::Str _1e720d445_asSptr(_1e720c1be_typeCoder* _self_, jule::Str _9725_elem) {
	jule::Str _9817_obj = jule::Str("jule::Ptr<", 10);;
	_9817_obj+=_9725_elem;
	_9817_obj+=jule::Str(">", 1);
	return _9817_obj;;
}



inline jule::Str _1e720d753_asPtr(_1e720c1be_typeCoder* _self_, jule::Str _10524_elem) {
	return (_10524_elem + jule::Str("*", 1));;
}



inline jule::Str _1e720da61_sptr(_1e720c1be_typeCoder* _self_, jule::Ptr<_1e5557263_Sptr> _11027_sptr) {
	return _1e720d445_asSptr(_self_, _1e721257b_kind(_self_, _11027_sptr.get()._field_Elem));;
}



inline jule::Str _1e720dd6e_ptr(_1e720c1be_typeCoder* _self_, jule::Ptr<_1e555a7c7_Ptr> _11526_p) {
	;
	if (_1e555b29a_IsUnsafe(_11526_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _12017_elem = _1e721257b_kind(_self_, _11526_p.get()._field_Elem);;
	_12017_elem+=jule::Str("*", 1);
	return _12017_elem;;
}



inline jule::Str _1e720e17c_enumDecl(_1e720c1be_typeCoder* _self_, jule::Ptr<_1e547501b_Enum> _12631_e) {
	return _1e721257b_kind(_self_, _12631_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _1e720e48a_typeEnumDecl(_1e720c1be_typeCoder* _self_, jule::Ptr<_1e5476616_TypeEnum> _13135_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _1e720e798_asSlice(_1e720c1be_typeCoder* _self_, jule::Ptr<_1e554dc82_TypeKind> _13530_elem) {
	jule::Str _13617_obj = jule::Str("jule::Slice<", 12);;
	_13617_obj+=_1e721257b_kind(_self_, _13530_elem);
	_13617_obj+=jule::Str(">", 1);
	return _13617_obj;;
}



inline jule::Str _1e720eaa6_slice(_1e720c1be_typeCoder* _self_, jule::Ptr<_1e5557bc0_Slc> _14328_s) {
	return _1e720e798_asSlice(_self_, _14328_s.get()._field_Elem);;
}



inline jule::Str _1e720edb4_mapType(_1e720c1be_typeCoder* _self_, jule::Ptr<_1e5559276_Map> _14830_m) {
	jule::Str _14917_obj = jule::Str("jule::Map<", 10);;
	_14917_obj+=_1e721257b_kind(_self_, _14830_m.get()._field_Key);
	_14917_obj+=jule::Str(",", 1);
	_14917_obj+=_1e721257b_kind(_self_, _14830_m.get()._field_Val);
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;;
}



inline jule::Str _1e72101c2_traitIdent(_1e720c1be_typeCoder* _self_, jule::Str _15729_ident) {
	jule::Str _15817_obj = jule::Str("jule::Trait<", 12);;
	_15817_obj+=_15729_ident;
	_15817_obj+=jule::Str(">", 1);
	return _15817_obj;;
}



inline jule::Str _1e72104d0_traitDecl(_1e720c1be_typeCoder* _self_, jule::Ptr<_1e5472dc6_Trait> _16528_t) {
	return _1e72101c2_traitIdent(_self_, static__1e7169802_traitDecl(_16528_t));;
}



inline jule::Str _1e72107dd_structure(_1e720c1be_typeCoder* _self_, jule::Ptr<_1e4790018_Struct> _17028_s) {
	jule::Str _17117_rep = jule::Str();;
	if ((_17028_s.get()._field_CppLinked && (!(_1e7218d35_hasDirective(&(_17028_s.get()._field_Directives), jule::Str("typedef", 7)))))) {
		_17117_rep+=jule::Str("struct ", 7);
	};
	_17117_rep+=static__1e7169d41_structure(&(_17028_s));
	return _17117_rep;;
}



inline jule::Str _1e7210aeb_structureIns(_1e720c1be_typeCoder* _self_, jule::Ptr<_1e47903e2_StructIns> _18035_s) {
	if (_18035_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _18221_ident = static__1e716a0d8_structureIns(&(_18035_s));;
		if ((_18035_s.get()._field_Generics.len() > 0LL)) {
			_18221_ident+=jule::Str("<", 1);
			{
				auto expr = &(_18035_s.get()._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1e9c50759:;
				if (it != expr_end) {
					jule::Ptr<_1e554c555_InsGeneric> _18529_g = *it;
					{
						_18221_ident+=_1e721257b_kind(_self_, _18529_g.get()._field_Kind);
						_18221_ident+=jule::Str(",", 1);
					}
					_iter_next_1e9c50759:;
					++it;
					goto _iter_begin_1e9c50759;
				}
				_iter_end_1e9c50759:;
			};
			(_18221_ident).mut_slice(0LL, (_18221_ident.len() - 1LL));;
			_18221_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_1e474057e_Directive> _19217_d = _1e72189a0_findDirective(&(_18035_s.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_19217_d != nullptr)) {
			(_18221_ident).buffer.insert(0, ((_1e720aa6e_concatAllParts(_19217_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _18221_ident;;
	};
	return static__1e716a0d8_structureIns(&(_18035_s));;
}



inline jule::Str _1e7210e09_array(_1e720c1be_typeCoder* _self_, jule::Ptr<_1e5559d6a_Arr> _20228_a) {
	jule::Str _20317_obj = jule::Str("jule::Array<", 12);;
	_20317_obj+=_1e721257b_kind(_self_, _20228_a.get()._field_Elem);
	_20317_obj+=jule::Str(",", 1);
	_20317_obj+=_1e543d7ba_Itoa(_20228_a.get()._field_N);
	_20317_obj+=jule::Str(">", 1);
	return _20317_obj;;
}



inline jule::Str _1e7211525_paramIns(_1e720c1be_typeCoder* _self_, jule::Ptr<_1e5462ca6_ParamIns>* _22832_p) {
	jule::Str _22917_obj = jule::Str();;
	if ((*(_22832_p)).get()._field_Decl.get()._field_Variadic) {
		_22917_obj+=jule::Str("jule::Slice<", 12);
		_22917_obj+=_1e721257b_kind(_self_, (*(_22832_p)).get()._field_Kind);
		_22917_obj+=jule::Str(">", 1);
	} else {
		_22917_obj+=_1e721257b_kind(_self_, (*(_22832_p)).get()._field_Kind);
	};
	if ((*(_22832_p)).get()._field_Decl.get()._field_Reference) {
		_22917_obj+=jule::Str("*", 1);
	};
	return _22917_obj;;
}



inline void _1e7211b52_funcInsResult(_1e720c1be_typeCoder* _self_, jule::Str* _25837_s, jule::Ptr<_1e5463b75_FnIns>* _25850_f) {
	if (_1e5461436_IsVoid((*(_25850_f)).get()._field_Decl.ptr())) {
		if ((*(_25850_f)).get()._field_Decl.get()._field_Exceptional) {
			(*(_25837_s))+=jule::Str("jule::VoidExceptional", 21);
		} else {
			(*(_25837_s))+=jule::Str("void", 4);
		};
		return;;
	};
	if ((*(_25850_f)).get()._field_Decl.get()._field_Exceptional) {
		(*(_25837_s))+=jule::Str("jule::Exceptional<", 18);
		_1e7216cde_codeMut1((*(_self_))._field_rc.ptr(), _25837_s, &((*(_25850_f)).get()._field_Result));
		(*(_25837_s))+=jule::Str(">", 1);
		return;;
	};
	_1e7216cde_codeMut1((*(_self_))._field_rc.ptr(), _25837_s, &((*(_25850_f)).get()._field_Result));
}



inline jule::Str _1e7211e60_anonFunc(_1e720c1be_typeCoder* _self_, jule::Ptr<_1e5463b75_FnIns> _27631_f) {
	if (((_27631_f.get()._field_Result != nullptr) && (_1e5552ca8_Tup(_27631_f.get()._field_Result.ptr()) != nullptr))) {
		_1e719461d_pushResultIns((*(_self_))._field_oc, &(_27631_f));
	};
	jule::Str _28017_decl = jule::Str();;
	_1e7211b52_funcInsResult(_self_, &(_28017_decl), &(_27631_f));
	_28017_decl+=jule::Str("(", 1);
	if ((_27631_f.get()._field_Params.len() > 0LL)) {
		{
			auto expr = &(_27631_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e9c5e878:;
			if (it != expr_end) {
				jule::Ptr<_1e5462ca6_ParamIns> _28425_param = *it;
				{
					if (_1e545ecb4_IsSelf(_28425_param.get()._field_Decl.ptr())) {
						goto _iter_next_1e9c5e878;
					};
					_28017_decl+=_1e7211525_paramIns(_self_, &(_28425_param));
					_28017_decl+=jule::Str(",", 1);
				}
				_iter_next_1e9c5e878:;
				++it;
				goto _iter_begin_1e9c5e878;
			}
			_iter_end_1e9c5e878:;
		};
		(_28017_decl).mut_slice(0LL, (_28017_decl.len() - 1LL));;
	} else {
		_28017_decl+=jule::Str("void", 4);
	};
	_28017_decl+=jule::Str(")", 1);
	return _28017_decl;;
}



inline jule::Str _1e721226d_func(_1e720c1be_typeCoder* _self_, jule::Ptr<_1e5463b75_FnIns> _30027_f) {
	jule::Str _30117_obj = jule::Str("jule::Fn<", 9);;
	_30117_obj+=_1e7211e60_anonFunc(_self_, _30027_f);
	_30117_obj+=jule::Str(">", 1);
	return _30117_obj;;
}



inline jule::Str _1e721257b_kind(_1e720c1be_typeCoder* _self_, jule::Ptr<_1e554dc82_TypeKind> _30827_k) {
	{
		
		if ((_1e555256b_Struct(_30827_k.ptr()) != nullptr)) {
			_case_begin_1e9c62a24:;
			{
				return _1e7210aeb_structureIns(_self_, _1e555256b_Struct(_30827_k.ptr()));;
			}
		}
		else if (_1e554e953_CppLinked(_30827_k.ptr())) {
			_case_begin_1e9c62a9b:;
			{
				return _30827_k.get()._field_CppIdent;;
			}
		}
		else if ((_1e5551119_Prim(_30827_k.ptr()) != nullptr)) {
			_case_begin_1e9c62b23:;
			{
				return _1e720cd29_prim(_self_, _1e5551119_Prim(_30827_k.ptr()));;
			}
		}
		else if ((_1e5552ca8_Tup(_30827_k.ptr()) != nullptr)) {
			_case_begin_1e9c62b9a:;
			{
				return _1e720d137_tuple(_self_, _1e5552ca8_Tup(_30827_k.ptr()));;
			}
		}
		else if ((_1e555137d_Sptr(_30827_k.ptr()) != nullptr)) {
			_case_begin_1e9c62c22:;
			{
				return _1e720da61_sptr(_self_, _1e555137d_Sptr(_30827_k.ptr()));;
			}
		}
		else if ((_1e55515e2_Ptr(_30827_k.ptr()) != nullptr)) {
			_case_begin_1e9c62c99:;
			{
				return _1e720dd6e_ptr(_self_, _1e55515e2_Ptr(_30827_k.ptr()));;
			}
		}
		else if ((_1e5551856_Enum(_30827_k.ptr()) != nullptr)) {
			_case_begin_1e9c62d21:;
			{
				return _1e720e17c_enumDecl(_self_, _1e5551856_Enum(_30827_k.ptr()));;
			}
		}
		else if ((_1e5551aba_TypeEnum(_30827_k.ptr()) != nullptr)) {
			_case_begin_1e9c62d98:;
			{
				return _1e720e48a_typeEnumDecl(_self_, _1e5551aba_TypeEnum(_30827_k.ptr()));;
			}
		}
		else if ((_1e5552093_Slc(_30827_k.ptr()) != nullptr)) {
			_case_begin_1e9c62e20:;
			{
				return _1e720eaa6_slice(_self_, _1e5552093_Slc(_30827_k.ptr()));;
			}
		}
		else if ((_1e5552a44_Map(_30827_k.ptr()) != nullptr)) {
			_case_begin_1e9c62e97:;
			{
				return _1e720edb4_mapType(_self_, _1e5552a44_Map(_30827_k.ptr()));;
			}
		}
		else if ((_1e55527d0_Trait(_30827_k.ptr()) != nullptr)) {
			_case_begin_1e9c6301e:;
			{
				return _1e72104d0_traitDecl(_self_, _1e55527d0_Trait(_30827_k.ptr()));;
			}
		}
		else if ((_1e5551d2e_Arr(_30827_k.ptr()) != nullptr)) {
			_case_begin_1e9c63096:;
			{
				return _1e7210e09_array(_self_, _1e5551d2e_Arr(_30827_k.ptr()));;
			}
		}
		else if ((_1e5552307_Fn(_30827_k.ptr()) != nullptr)) {
			_case_begin_1e9c6311d:;
			{
				return _1e721226d_func(_self_, _1e5552307_Fn(_30827_k.ptr()));;
			}
		}
		_match_end_1e9c62848:;
	};
	{
		auto &_match_expr{ _30827_k.get()._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1e9c631c8:;
			{
				return _30827_k.get()._field_Kind.cast_ptr<_1e720b71d_customType>(13).get()._field_kind;;
			}
		}
		else {
			_case_begin_1e9c6a1ad:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1e9c69bc4:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e720c1be_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e72149ac_resultCoder> static__1e7214eb8_new(jule::Ptr<_1e720c1be_typeCoder>* _36224_tc) {
	return jule::new_ptr<_1e72149ac_resultCoder>(_1e72149ac_resultCoder{._field_tc=(*(_36224_tc))});;
}



inline void _1e72152d7_ptr(_1e72149ac_resultCoder* _self_, jule::Str* _36627_s, jule::Ptr<_1e555a7c7_Ptr> _36639_p) {
	(*(_36627_s))+=jule::Str("p", 1);
	_1e72169c0_codeMut(_self_, _36627_s, &(_36639_p.get()._field_Elem));
}



inline void _1e7215606_sptr(_1e72149ac_resultCoder* _self_, jule::Str* _37128_s, jule::Ptr<_1e5557263_Sptr> _37140_p) {
	(*(_37128_s))+=jule::Str("x", 1);
	_1e72169c0_codeMut(_self_, _37128_s, &(_37140_p.get()._field_Elem));
}



inline void _1e7215925_mapType(_1e72149ac_resultCoder* _self_, jule::Str* _37631_s, jule::Ptr<_1e5559276_Map> _37643_p) {
	(*(_37631_s))+=jule::Str("m", 1);
	_1e72169c0_codeMut(_self_, _37631_s, &(_37643_p.get()._field_Key));
	_1e72169c0_codeMut(_self_, _37631_s, &(_37643_p.get()._field_Val));
}



inline void _1e7215c44_slice(_1e72149ac_resultCoder* _self_, jule::Str* _38229_s, jule::Ptr<_1e5557bc0_Slc> _38241_slc) {
	(*(_38229_s))+=jule::Str("s", 1);
	_1e72169c0_codeMut(_self_, _38229_s, &(_38241_slc.get()._field_Elem));
}



inline void _1e7216063_arr(_1e72149ac_resultCoder* _self_, jule::Str* _38727_s, jule::Ptr<_1e5559d6a_Arr> _38739_arr) {
	(*(_38727_s))+=jule::Str("a", 1);
	(*(_38727_s))+=_1e543d523_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_38739_arr.get()._field_N)), 16LL);
	_1e72169c0_codeMut(_self_, _38727_s, &(_38739_arr.get()._field_Elem));
}



inline void _1e7216382_func(_1e72149ac_resultCoder* _self_, jule::Str* _39328_s, jule::Ptr<_1e5463b75_FnIns> _39340_f) {
	(*(_39328_s))+=jule::Str("f", 1);
	{
		auto expr = &(_39340_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9c71428:;
		if (it != expr_end) {
			jule::Ptr<_1e5462ca6_ParamIns> _39521_p = *it;
			{
				if (_39521_p.get()._field_Decl.get()._field_Reference) {
					(*(_39328_s))+=jule::Str("r", 1);
				};
				_1e72169c0_codeMut(_self_, _39328_s, &(_39521_p.get()._field_Kind));
			}
			_iter_next_1e9c71428:;
			++it;
			goto _iter_begin_1e9c71428;
		}
		_iter_end_1e9c71428:;
	};
	if ((_39340_f.get()._field_Result != nullptr)) {
		_1e72169c0_codeMut(_self_, _39328_s, &(_39340_f.get()._field_Result));
	};
}



inline void _1e72166a1_tup(_1e72149ac_resultCoder* _self_, jule::Str* _40627_s, jule::Ptr<_1e555874d_Tuple> _40639_tup) {
	{
		auto expr = &(_40639_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9c73073:;
		if (it != expr_end) {
			jule::Ptr<_1e554dc82_TypeKind> _40721_t = *it;
			{
				(*(_40627_s))+=jule::Str("__jule_tuple_", 13);
				_1e72169c0_codeMut(_self_, _40627_s, &(_40721_t));
			}
			_iter_next_1e9c73073:;
			++it;
			goto _iter_begin_1e9c73073;
		}
		_iter_end_1e9c73073:;
	};
}



inline void _1e72169c0_codeMut(_1e72149ac_resultCoder* _self_, jule::Str* _41331_s, jule::Ptr<_1e554dc82_TypeKind>* _41344_t) {
	{
		auto &_match_expr{ (*(_41344_t)).get()._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1e9c741a6:;
			{
				_1e72152d7_ptr(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1e555a7c7_Ptr>(12));
			}
		}
		else if (_match_expr.type_is(true, 7)) {
			_case_begin_1e9c7445e:;
			{
				_1e7215606_sptr(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1e5557263_Sptr>(7));
			}
		}
		else if (_match_expr.type_is(true, 10)) {
			_case_begin_1e9c744c5:;
			{
				_1e7215925_mapType(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1e5559276_Map>(10));
			}
		}
		else if (_match_expr.type_is(true, 8)) {
			_case_begin_1e9c7453b:;
			{
				_1e7215c44_slice(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1e5557bc0_Slc>(8));
			}
		}
		else if (_match_expr.type_is(true, 11)) {
			_case_begin_1e9c745a2:;
			{
				_1e7216063_arr(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1e5559d6a_Arr>(11));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1e9c74b35:;
			{
				_1e7216382_func(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1e5463b75_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1e9c74b9b:;
			{
				jule::Ptr<_1e547501b_Enum> _42817_te = (*(_41344_t)).get()._field_Kind.cast_ptr<_1e547501b_Enum>(3);;
				(*(_41331_s))+=static__1e7168b31_toOut(&(_42817_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_42817_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1e9c74c12:;
			{
				jule::Ptr<_1e5476616_TypeEnum> _43117_te = (*(_41344_t)).get()._field_Kind.cast_ptr<_1e5476616_TypeEnum>(4);;
				(*(_41331_s))+=static__1e7168b31_toOut(&(_43117_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43117_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1e9c74c78:;
			{
				jule::Ptr<_1e47903e2_StructIns> _43421_si = (*(_41344_t)).get()._field_Kind.cast_ptr<_1e47903e2_StructIns>(0);;
				(*(_41331_s))+=static__1e716a0d8_structureIns(&(_43421_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1e9c74cde:;
			{
				jule::Ptr<_1e5472dc6_Trait> _43721_trt = (*(_41344_t)).get()._field_Kind.cast_ptr<_1e5472dc6_Trait>(2);;
				(*(_41331_s))+=static__1e7169802_traitDecl(_43721_trt);
			}
		}
		else if (_match_expr.type_is(true, 6)) {
			_case_begin_1e9c74d55:;
			{
				(*(_41331_s))+=(*(_41344_t)).get()._field_Kind.cast_ptr<_1e55539ce_Prim>(6).get()._field_Kind;
			}
		}
		else if (_match_expr.type_is(true, 9)) {
			_case_begin_1e9c74dbb:;
			{
				_1e72166a1_tup(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1e555874d_Tuple>(9));
			}
		}
		else {
			_case_begin_1e9c743d7:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:444:13"));;
			}
		}
		_match_end_1e9c7423e:;
	};
}



inline void _1e7216cde_codeMut1(_1e72149ac_resultCoder* _self_, jule::Str* _44832_s, jule::Ptr<_1e554dc82_TypeKind>* _44845_t) {
	jule::Ptr<_1e555874d_Tuple> _44917_tup = _1e5552ca8_Tup((*(_44845_t)).ptr());;
	if ((_44917_tup != nullptr)) {
		_1e72166a1_tup(_self_, _44832_s, _44917_tup);
	} else {
		(*(_44832_s))+=_1e721257b_kind((*(_self_))._field_tc.ptr(), (*(_44845_t)));
	};
}



inline jule::Str _1e72170b9_code(_1e72149ac_resultCoder* _self_, jule::Ptr<_1e554dc82_TypeKind>* _45728_t) {
	jule::Str _45817_s = jule::Str::alloc(0LL, 20LL);;
	_1e72169c0_codeMut(_self_, &(_45817_s), _45728_t);
	return _45817_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e72149ac_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e9c7ea0d_Name(_1e9c7e722_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1e9c7eb40_What(_1e9c7e722_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1e9c7ec72_Reset(_1e9c7e722_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1e9c7edb5_Short(_1e9c7e722_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e9c7e722_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e9c82e1d_Name(_1e9c83380_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1e9c8366b_What(_1e9c83380_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1e9c8379d_Reset(_1e9c83380_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1e9c838d0_Short(_1e9c83380_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e9c83380_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e9c866d5_Name(_1e9c86b47_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1e9c86e33_What(_1e9c86b47_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1e9c87065_Reset(_1e9c86b47_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1e9c87197_Short(_1e9c86b47_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e9c86b47_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e9c89ee1_Name(_1e9c8a453_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1e9c8a73e_What(_1e9c8a453_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1e9c8a871_Reset(_1e9c8a453_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1e9c8a9a3_Short(_1e9c8a453_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e9c8a453_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e9c8d7a8_Name(_1e9c8dc1a_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1e9c8e006_What(_1e9c8dc1a_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1e9c8e138_Reset(_1e9c8dc1a_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1e9c8e26a_Short(_1e9c8dc1a_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e9c8dc1a_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e724c4a6_FlagSet> static__1e724c792_New(void) {
	return jule::new_ptr<_1e724c4a6_FlagSet>(_1e724c4a6_FlagSet{._field_flags=jule::Slice<jule::Trait<_1e6ead7ab_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1e6ead7ab_CommonFlag> _1e724cc26_FindFlag(_1e724c4a6_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9c99000:;
		if (it != expr_end) {
			jule::Trait<_1e6ead7ab_CommonFlag> _7221_flag = *it;
			{
				if ((_1e6ead7ab_CommonFlag_mptr_data[(_7221_flag).type_offset]._1e6ead679_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1e9c99000:;
			++it;
			goto _iter_begin_1e9c99000;
		}
		_iter_end_1e9c99000:;
	};
	return nullptr;;
}



inline jule::Trait<_1e6ead7ab_CommonFlag> _1e724d034_FindFlagShort(_1e724c4a6_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9c9962c:;
		if (it != expr_end) {
			jule::Trait<_1e6ead7ab_CommonFlag> _8221_flag = *it;
			{
				if ((_1e6ead7ab_CommonFlag_mptr_data[(_8221_flag).type_offset]._1e72294c7_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1e9c9962c:;
			++it;
			goto _iter_begin_1e9c9962c;
		}
		_iter_end_1e9c9962c:;
	};
	return nullptr;;
}



inline jule::Slice<jule::Trait<_1e6ead7ab_CommonFlag>> _1e724d298_Flags(_1e724c4a6_FlagSet* _self_) {
	return (*(_self_))._field_flags;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1e724d5a6_Parse(_1e724c4a6_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1e724eb7e_argParser _11617_ap = _1e724eb7e_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1e725106a_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline void _1e724d782_Reset(_1e724c4a6_FlagSet* _self_) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9c9b3dc:;
		if (it != expr_end) {
			jule::Trait<_1e6ead7ab_CommonFlag> _12616_f = *it;
			{
				_1e6ead7ab_CommonFlag_mptr_data[(_12616_f).type_offset]._1e724ab58_Reset(_12616_f);
			}
			_iter_next_1e9c9b3dc:;
			++it;
			goto _iter_begin_1e9c9b3dc;
		}
		_iter_end_1e9c9b3dc:;
	};
}



inline jule::Ptr<_1e9c8dc1a_Flag> _1e9d0e53d_addFlagCommon(_1e724c4a6_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1e9d10b7c:;
			{
				goto _match_end_1e9d10b27;
			}
		}
		_match_end_1e9d10b27:;
	};
	if ((_1e724cc26_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1e724d034_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1e9c8dc1a_Flag> _14817_flag = jule::new_ptr<_1e9c8dc1a_Flag>(_1e9c8dc1a_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*(_self_))._field_flags = jule::alloc_for_append((*(_self_))._field_flags,1);(*(_self_))._field_flags.__push(jule::Trait<_1e6ead7ab_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;;
}

inline jule::Ptr<_1e9c8a453_Flag> _1e9d17d82_addFlagCommon(_1e724c4a6_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1e9d1946b:;
			{
				goto _match_end_1e9d193c2;
			}
		}
		_match_end_1e9d193c2:;
	};
	if ((_1e724cc26_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1e724d034_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1e9c8a453_Flag> _14817_flag = jule::new_ptr<_1e9c8a453_Flag>(_1e9c8a453_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*(_self_))._field_flags = jule::alloc_for_append((*(_self_))._field_flags,1);(*(_self_))._field_flags.__push(jule::Trait<_1e6ead7ab_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;;
}



inline void _1e9d0c4c5_AddVar(_1e724c4a6_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1e9c8dc1a_Flag> _17617_flag = _1e9d0e53d_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1e9d15d4c_AddVar(_1e724c4a6_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1e9c8a453_Flag> _17617_flag = _1e9d17d82_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1e724c4a6_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_242d3c358_Cmd> static__242d3c7a9_New(jule::Str _2619_path) {
	return jule::new_ptr<_242d3c358_Cmd>(_242d3c358_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _242d3c985_Spawn(_242d3c358_Cmd* _self_) {
	({
		auto except = _242d75c87_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _242d3cb61_Kill(_242d3c358_Cmd* _self_) {
	({
		auto except = _242d75e63_kill(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _242d3cdc5_Wait(_242d3c358_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _242d761c7_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _242d75c87_spawn(_242d3c358_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:79:13"));;
	};
	jule::Str _8113_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8213_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8213_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type131));
	};
	if ((_2411c0be9_Fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])), F_SETFD, static_cast<jule::I64>((fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])), F_GETFD) | FD_CLOEXEC))) == -1LL)) {
		_2411de0ad_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])));
		_2411de0ad_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])));
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type131));
	};
	(*(_self_))._field_attrs._field_pid=static_cast<jule::I64>(fork());
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1e7ac6318:;
			{
				return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type131));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1e7ac622a:;
			{
				_2411de0ad_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])));
				jule::Slice<jule::Str> _9721_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_9721_args[0LL]=_8113_path;
				_9721_args=jule::append(_9721_args,(*(_self_))._field_Args);
				({
					auto except = _242d75a12_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
				_242d75803_execvp(&(_8113_path), &(_9721_args));
				jule::Str _10217_code = _242d72c0c_Itoa(static_cast<jule::I64>(_2403d57b1_GetLastErrno()));;
				{
					_2411de498_Write(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])), (&(_10217_code[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_10217_code.len())));
				};
				_2411de0ad_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])));
				_242d773b5_Exit(1LL);
			}
		}
		else {
			_case_begin_1e7ac3db5:;
			{
				_2411de0ad_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])));
				jule::Array<jule::U8,16> _10821_buf = jule::Array<jule::U8,16>(0);;
				jule::I64 _10917_n = _2411ddc39_Read(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])), (&(_10821_buf[0LL])), 16LLU);;
				_2411de0ad_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])));
				if ((_10917_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _11322_code = 0;;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _242d3dc61_AtoiBp((&(_10821_buf[0LL])), _10917_n);
						_11322_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional(jule::Any(_242d768c0_processErrorFromCode(_11322_code), &__jule_any_type131));
				};
			}
		}
		_match_end_1e7ac3d60:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _242d75e63_kill(_242d3c358_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:121:13"));;
	};
	if ((kill((*(_self_))._field_attrs._field_pid, 1LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_242d76b12_getLastProcessError(), &__jule_any_type131));
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _242d761c7_wait(_242d3c358_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:131:13"));;
	};
	jule::I64 _13317_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13317_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>(jule::Any(_242d76b12_getLastProcessError(), &__jule_any_type131));
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(WEXITSTATUS(_13317_stat)));;
}







std::ostream &operator<<(std::ostream &_Stream, _242d3c358_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1e65154a6_IR__jule_tuple_s_24305e4ae_Log static__1e6558197_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1e65154a6_IR__jule_tuple_s_24305e4ae_Log __jule_func_result;
	jule::Ptr<_1e685c028_JuleImporter> _2817_importer = static__1e6386987_New(_1e67a28a8_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1e473e391_Ast>> _2918_files;;
	jule::Slice<_24305e4ae_Log> _2929_logs;;
	({
		__jule_tuple_sx_1e473e391_Ast__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e64ee47e_ImportPackage(_2817_importer.ptr(), _2721_path, true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1e54a70a3_Package> _3918_pkg;;
	({
		__jule_tuple_x_1e54a70a3_Package__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e556b200_AnalyzePackage(_2918_files, jule::Trait<_1e54a14cb_Importer>(_2817_importer, 0), _2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1e65154a6_IR> _4417_ir = jule::new_ptr<_1e65154a6_IR>(_1e65154a6_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1e63ca04c_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1e673883e_getAllUniquePasses(&(_4417_ir.get()._field_Main), _4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1e656965e_appendStructs(_1e65154a6_IR* _self_, jule::Ptr<_1e54a70a3_Package>* _5633_p, jule::Slice<jule::Ptr<_1e4790018_Struct>>* _5657_buffer) {
	{
		auto expr = &((*(_5633_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e94d089c:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &(_5721_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e94d11d8:;
					if (it != expr_end) {
						jule::Ptr<_1e4790018_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								(*(_5657_buffer)) = jule::alloc_for_append((*(_5657_buffer)),1);(*(_5657_buffer)).__push(_5825_s);;
							};
						}
						_iter_next_1e94d11d8:;
						++it;
						goto _iter_begin_1e94d11d8;
					}
					_iter_end_1e94d11d8:;
				};
			}
			_iter_next_1e94d089c:;
			++it;
			goto _iter_begin_1e94d089c;
		}
		_iter_end_1e94d089c:;
	};
}



inline jule::Slice<jule::Ptr<_1e4790018_Struct>> _1e657c0bc_GetAllStructures(_1e65154a6_IR* _self_) {
	jule::Slice<jule::Ptr<_1e4790018_Struct>> _6917_buffer = nullptr;;
	_1e656965e_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e94d1084:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_1e656965e_appendStructs(_self_, &(_7121_u.get()._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1e94d1084:;
			++it;
			goto _iter_begin_1e94d1084;
		}
		_iter_end_1e94d1084:;
	};
	return _6917_buffer;;
}



inline void _1e6590102_appendGlobals(_1e65154a6_IR* _self_, jule::Ptr<_1e54a70a3_Package>* _7933_p, jule::Slice<jule::Ptr<_1e54ca291_Var>>* _7957_buffer) {
	{
		auto expr = &((*(_7933_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e94d37d4:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e94d410e:;
					if (it != expr_end) {
						jule::Ptr<_1e54ca291_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								(*(_7957_buffer)) = jule::alloc_for_append((*(_7957_buffer)),1);(*(_7957_buffer)).__push(_8125_v);;
							};
						}
						_iter_next_1e94d410e:;
						++it;
						goto _iter_begin_1e94d410e;
					}
					_iter_end_1e94d410e:;
				};
			}
			_iter_next_1e94d37d4:;
			++it;
			goto _iter_begin_1e94d37d4;
		}
		_iter_end_1e94d37d4:;
	};
}



inline jule::Slice<jule::Ptr<_1e54ca291_Var>> _1e659de68_GetAllGlobals(_1e65154a6_IR* _self_) {
	jule::Slice<jule::Ptr<_1e54ca291_Var>> _9217_buffer = nullptr;;
	_1e6590102_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e94d5a06:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_1e6590102_appendGlobals(_self_, &(_9421_u.get()._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1e94d5a06:;
			++it;
			goto _iter_begin_1e94d5a06;
		}
		_iter_end_1e94d5a06:;
	};
	return _9217_buffer;;
}



inline void _1e672cb52_Order(_1e65154a6_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1e657c0bc_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1e659de68_GetAllGlobals(_self_);
	static__1e680051b_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1e683d735_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}







std::ostream &operator<<(std::ostream &_Stream, _1e65154a6_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e6a3849b_ObjectDeadCode> static__1e6a388ec_new(jule::Ptr<_1e65154a6_IR>* _3424_ir) {
	return jule::new_ptr<_1e6a3849b_ObjectDeadCode>(_1e6a3849b_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1e951cdc3_isLive(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_, jule::Ptr<_1e5472dc6_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1e5472dc6_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1e951eb50:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1e951e864:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9520337:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1e9520337:;
			++it;
			_5213_i++;
			goto _iter_begin_1e9520337;
		}
		_iter_end_1e9520337:;
	};
	return false;;
}

inline jule::Bool _1e9522b0e_isLive(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_, jule::Ptr<_1e5463b75_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1e5463b75_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1e9524da8:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1e9524ced:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e952567d:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1e952567d:;
			++it;
			_5213_i++;
			goto _iter_begin_1e952567d;
		}
		_iter_end_1e952567d:;
	};
	return false;;
}

inline jule::Bool _1e952a6b6_isLive(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_, jule::Ptr<_1e47903e2_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1e47903e2_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1e952d763:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1e952d4dd:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e952d840:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1e952d840:;
			++it;
			_5213_i++;
			goto _iter_begin_1e952d840;
		}
		_iter_end_1e952d840:;
	};
	return false;;
}

inline jule::Bool _1e95311a0_isLive(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_, jule::Ptr<_1e54ca291_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1e54ca291_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1e9532c1d:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1e9532aec:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e953347c:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1e953347c:;
			++it;
			_5213_i++;
			goto _iter_begin_1e953347c;
		}
		_iter_end_1e953347c:;
	};
	return false;;
}



inline void _1e951d225_pushLive(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_, jule::Ptr<_1e5472dc6_Trait> _6035_t) {
	{
		
{
			_case_begin_1e9521c2e:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_1e95218cc:;
	};
}

inline void _1e9523703_pushLive(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_, jule::Ptr<_1e5463b75_FnIns> _6035_t) {
	{
		
{
			_case_begin_1e9527707:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_1e9527482:;
	};
}

inline void _1e95299a1_pushLive(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_, jule::Ptr<_1e47903e2_StructIns> _6035_t) {
	{
		
{
			_case_begin_1e952b19a:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_1e952adae:;
	};
}

inline void _1e9531502_pushLive(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_, jule::Ptr<_1e54ca291_Var> _6035_t) {
	{
		
{
			_case_begin_1e953513d:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_1e9535061:;
	};
}



inline void _1e6a70934_setReferencesAsLive(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_, jule::Ptr<_1e5466ae0_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1e546720b_Len((*(_7344_rs)).ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1e5467519_At((*(_7344_rs)).ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1e951b9c6:;
					{
						jule::Ptr<_1e5472dc6_Trait> _8225_t = _7921_ref.cast_ptr<_1e5472dc6_Trait>(&__jule_any_type10);;
						if (_1e951cdc3_isLive(_self_, &(_8225_t))) {
							goto _iter_next_1e951b003;
						};
						_1e951d225_pushLive(_self_, _8225_t);
						{
							auto expr = &(_8225_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1e951ede7:;
							if (it != expr_end) {
								jule::Ptr<_1e5460ec4_Fn> _8729_ins = *it;
								{
									{
										auto expr = &(_8729_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1e951d786:;
										if (it != expr_end) {
											jule::Ptr<_1e5463b75_FnIns> _8833_mins = *it;
											{
												if (_1e9522b0e_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1e951d786;
												};
												_1e9523703_pushLive(_self_, _8833_mins);
												_1e6a70934_setReferencesAsLive(_self_, &(_8833_mins.get()._field_Refers));
											}
											_iter_next_1e951d786:;
											++it;
											goto _iter_begin_1e951d786;
										}
										_iter_end_1e951d786:;
									};
								}
								_iter_next_1e951ede7:;
								++it;
								goto _iter_begin_1e951ede7;
							}
							_iter_end_1e951ede7:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1e951ba3c:;
					{
						jule::Ptr<_1e5463b75_FnIns> _9725_f = _7921_ref.cast_ptr<_1e5463b75_FnIns>(&__jule_any_type7);;
						if (_1e9522b0e_isLive(_self_, &(_9725_f))) {
							goto _match_end_1e951bb5d;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1e952a6b6_isLive(_self_, &(_9725_f.get()._field_Owner))))) {
								_1e95299a1_pushLive(_self_, _9725_f.get()._field_Owner);
								_1e6a70934_setReferencesAsLive(_self_, &(_9725_f.get()._field_Owner.get()._field_Refers));
							};
						};
						_1e9523703_pushLive(_self_, _9725_f);
						_1e6a70934_setReferencesAsLive(_self_, &(_9725_f.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1e951bc6d:;
					{
						jule::Ptr<_1e54ca291_Var> _11025_v = _7921_ref.cast_ptr<_1e54ca291_Var>(&__jule_any_type8);;
						if (_1e95311a0_isLive(_self_, &(_11025_v))) {
							goto _match_end_1e951bb5d;
						};
						_1e9531502_pushLive(_self_, _11025_v);
						_1e6a70934_setReferencesAsLive(_self_, &(_11025_v.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1e951bcd4:;
					{
						jule::Ptr<_1e47903e2_StructIns> _11725_s = _7921_ref.cast_ptr<_1e47903e2_StructIns>(&__jule_any_type9);;
						if (_1e952a6b6_isLive(_self_, &(_11725_s))) {
							goto _match_end_1e951bb5d;
						};
						_1e95299a1_pushLive(_self_, _11725_s);
						_1e6a70934_setReferencesAsLive(_self_, &(_11725_s.get()._field_Refers));
						{
							auto expr = &(_11725_s.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1e9538273:;
							if (it != expr_end) {
								jule::Ptr<_1e5460ec4_Fn> _12329_ins = *it;
								{
									{
										auto expr = &(_12329_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1e953896b:;
										if (it != expr_end) {
											jule::Ptr<_1e5463b75_FnIns> _12433_mins = *it;
											{
												if (_1e9522b0e_isLive(_self_, &(_12433_mins))) {
													goto _iter_next_1e953896b;
												};
												_1e9523703_pushLive(_self_, _12433_mins);
												_1e6a70934_setReferencesAsLive(_self_, &(_12433_mins.get()._field_Refers));
											}
											_iter_next_1e953896b:;
											++it;
											goto _iter_begin_1e953896b;
										}
										_iter_end_1e953896b:;
									};
								}
								_iter_next_1e9538273:;
								++it;
								goto _iter_begin_1e9538273;
							}
							_iter_end_1e9538273:;
						};
					}
				}
				_match_end_1e951bb5d:;
			};
		}
	_iter_next_1e951b003:;
	}
	_iter_end_1e951b003:;;
}



inline void _1e6a70ba9_inits(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_, jule::Ptr<_1e54a70a3_Package>* _13630_pkg) {
	{
		auto expr = &((*(_13630_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e951b3cc:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _13721_file = *it;
			{
				{
					auto expr = &(_13721_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e953aece:;
					if (it != expr_end) {
						jule::Ptr<_1e5460ec4_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_Ident == jule::Str("init", 4))) {
								jule::Ptr<_1e5463b75_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1e6a70934_setReferencesAsLive(_self_, &(_14029_ins.get()._field_Refers));
							};
						}
						_iter_next_1e953aece:;
						++it;
						goto _iter_begin_1e953aece;
					}
					_iter_end_1e953aece:;
				};
			}
			_iter_next_1e951b3cc:;
			++it;
			goto _iter_begin_1e951b3cc;
		}
		_iter_end_1e951b3cc:;
	};
}



inline void _1e6a70e2e_collectLivePackage(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_, jule::Ptr<_1e54a70a3_Package>* _14843_pkg) {
	_1e6a70ba9_inits(_self_, _14843_pkg);
	if (_240359070_Test) {
		{
			auto expr = &((*(_14843_pkg)).get()._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e953d399:;
			if (it != expr_end) {
				jule::Ptr<_1e551cec6_SymbolTable> _15425_file = *it;
				{
					{
						auto expr = &(_15425_file.get()._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e953dbc4:;
						if (it != expr_end) {
							jule::Ptr<_1e5460ec4_Fn> _15529_f = *it;
							{
								if (_1e6a72e42_hasDirective(&(_15529_f.get()._field_Directives), jule::Str("test", 4))) {
									jule::Ptr<_1e5463b75_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1e6a70934_setReferencesAsLive(_self_, &(_15733_ins.get()._field_Refers));
								};
							}
							_iter_next_1e953dbc4:;
							++it;
							goto _iter_begin_1e953dbc4;
						}
						_iter_end_1e953dbc4:;
					};
				}
				_iter_next_1e953d399:;
				++it;
				goto _iter_begin_1e953d399;
			}
			_iter_end_1e953d399:;
		};
	};
}



inline void _1e6a7110a_collectLive(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e953d355:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_1e6a70e2e_collectLivePackage(_self_, &(_16721_used.get()._field_Package));
				};
			}
			_iter_next_1e953d355:;
			++it;
			goto _iter_begin_1e953d355;
		}
		_iter_end_1e953d355:;
	};
	_1e6a70e2e_collectLivePackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
	jule::Ptr<_1e5460ec4_Fn> _17517_main = _1e54a8857_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
	jule::Ptr<_1e5463b75_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1e6a70934_setReferencesAsLive(_self_, &(_17617_ins.get()._field_Refers));
}



inline void _1e6a71380_removeDeadGlobals(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e54ca291_Var>>* _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < (*(_18142_vars)).len())) {
		{
			jule::Ptr<_1e54ca291_Var> _18417_v = (*(_18142_vars))[_18217_i];;
			if (_1e95311a0_isLive(_self_, &(_18417_v))) {
				(_18217_i)++;
				goto _iter_next_1e9543723;
			};
			(*(_18142_vars))=jule::append((*(_18142_vars)).slice(0LL, _18217_i),(*(_18142_vars)).slice((_18217_i + 1LL)));
		}
	_iter_next_1e9543723:;
	}
	_iter_end_1e9543723:;;
}



inline void _1e6a71605_removeDeadFns(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e5460ec4_Fn>>* _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < (*(_19338_funcs)).len())) {
		{
			jule::Ptr<_1e5460ec4_Fn> _19621_f = (*(_19338_funcs))[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1e5463b75_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1e9522b0e_isLive(_self_, &(_19921_ins))) {
						(_19721_j)++;
						goto _iter_next_1e9546b66;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL, _19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1e9546b66:;
			}
			_iter_end_1e9546b66:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				(*(_19338_funcs))=jule::append((*(_19338_funcs)).slice(0LL, _19417_i),(*(_19338_funcs)).slice((_19417_i + 1LL)));
				goto _iter_next_1e9545071;
			};
			(_19417_i)++;
		}
	_iter_next_1e9545071:;
	}
	_iter_end_1e9545071:;;
}



inline void _1e6a7187a_removeDeadStructs(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e4790018_Struct>>* _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < (*(_21442_structs)).len())) {
		{
			jule::Ptr<_1e4790018_Struct> _21721_s = (*(_21442_structs))[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1e47903e2_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1e6a71605_removeDeadFns(_self_, &(_22025_ins.get()._field_Methods));
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1e952a6b6_isLive(_self_, &(_22025_ins)))) {
						(_21821_j)++;
						goto _iter_next_1e954ab6a;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL, _21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1e954ab6a:;
			}
			_iter_end_1e954ab6a:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				(*(_21442_structs))=jule::append((*(_21442_structs)).slice(0LL, _21517_i),(*(_21442_structs)).slice((_21517_i + 1LL)));
				goto _iter_next_1e9549a48;
			};
			(_21517_i)++;
		}
	_iter_next_1e9549a48:;
	}
	_iter_end_1e9549a48:;;
}



inline void _1e6a71b00_removeDeadTraits(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e5472dc6_Trait>>* _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < (*(_23641_traits)).len())) {
		{
			jule::Ptr<_1e5472dc6_Trait> _23921_t = (*(_23641_traits))[_23717_i];;
			if ((!(_1e951cdc3_isLive(_self_, &(_23921_t))))) {
				(*(_23641_traits))=jule::append((*(_23641_traits)).slice(0LL, _23717_i),(*(_23641_traits)).slice((_23717_i + 1LL)));
				goto _iter_next_1e96adc01;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1e4790018_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1e96b095b;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL, _24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1e96b095b:;
			}
			_iter_end_1e96b095b:;;
			(_23717_i)++;
		}
	_iter_next_1e96adc01:;
	}
	_iter_end_1e96adc01:;;
}



inline void _1e6a71d75_removeDeadsFile(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_, jule::Ptr<_1e551cec6_SymbolTable>* _25740_file) {
	_1e6a71605_removeDeadFns(_self_, &((*(_25740_file)).get()._field_Funcs));
	_1e6a7187a_removeDeadStructs(_self_, &((*(_25740_file)).get()._field_Structs));
	_1e6a71b00_removeDeadTraits(_self_, &((*(_25740_file)).get()._field_Traits));
	_1e6a71380_removeDeadGlobals(_self_, &((*(_25740_file)).get()._field_Vars));
}



inline void _1e6a720ea_removeDeadsPackage(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_, jule::Ptr<_1e54a70a3_Package>* _26443_pkg) {
	{
		auto expr = &((*(_26443_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e96b529b:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _26521_file = *it;
			{
				_1e6a71d75_removeDeadsFile(_self_, &(_26521_file));
			}
			_iter_next_1e96b529b:;
			++it;
			goto _iter_begin_1e96b529b;
		}
		_iter_end_1e96b529b:;
	};
}



inline void _1e6a722c6_removeDeads(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e96b616a:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_1e6a720ea_removeDeadsPackage(_self_, &(_27121_used.get()._field_Package));
				};
			}
			_iter_next_1e96b616a:;
			++it;
			goto _iter_begin_1e96b616a;
		}
		_iter_end_1e96b616a:;
	};
	_1e6a720ea_removeDeadsPackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
}



inline void _1e6a724a2_elimanate(jule::Ptr<_1e6a3849b_ObjectDeadCode> _self_) {
	_1e6a7110a_collectLive(_self_);
	_1e6a722c6_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1e6a3849b_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e4765c47_Str(_1e47903e2_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*(_self_))._field_Decl.get()._field_Ident;
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_25017_kind+=jule::Str("[", 1);
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e85103e4:;
			if (it != expr_end) {
				jule::Ptr<_1e554c555_InsGeneric> *_25420_g = it;
				{
					_25017_kind+=_1e554e17d_Str((*(_25420_g)).get()._field_Kind.ptr());
					_25017_kind+=jule::Str(",", 1);
				}
				_iter_next_1e85103e4:;
				++it;
				goto _iter_begin_1e85103e4;
			}
			_iter_end_1e85103e4:;
		};
		(_25017_kind).mut_slice(0LL, (_25017_kind.len() - 1LL));;
		_25017_kind+=jule::Str("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _1e4766d9c_Equal(jule::Ptr<_1e47903e2_StructIns> _self_, jule::Ptr<_1e554dc82_TypeKind> _26521_other) {
	jule::Ptr<_1e47903e2_StructIns> _26613_s = _1e555256b_Struct(_26521_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I64 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_1e554e48b_Equal(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1e85139ad:;
	}
	_iter_end_1e85139ad:;;
	return true;;
}



inline jule::Bool _1e4769201_Same(_1e47903e2_StructIns* _self_, jule::Ptr<_1e47903e2_StructIns> _29319_s) {
	if ((((*(_self_))._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8515d45:;
		if (it != expr_end) {
			jule::I64 _29713_i = it - expr->begin();
			jule::Ptr<_1e554c555_InsGeneric> *_29716_g = it;
			{
				if ((!(_1e554e48b_Equal((*(_29716_g)).get()._field_Kind, _29319_s.get()._field_Generics[_29713_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1e8515d45:;
			++it;
			_29713_i++;
			goto _iter_begin_1e8515d45;
		}
		_iter_end_1e8515d45:;
	};
	return true;;
}



inline jule::Ptr<_1e5460ec4_Fn> _1e476a521_FindMethod(_1e47903e2_StructIns* _self_, jule::Str _30729_ident, jule::Bool _30741_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e851771a:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> _30821_f = *it;
			{
				if (((_30821_f.get()._field_Statically == _30741_statically) && (_30821_f.get()._field_Ident == _30729_ident))) {
					return _30821_f;;
				};
			}
			_iter_next_1e851771a:;
			++it;
			goto _iter_begin_1e851771a;
		}
		_iter_end_1e851771a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e4790205_FieldIns> _1e474c48c_FindField(_1e47903e2_StructIns* _self_, jule::Str _31828_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e85188d6:;
		if (it != expr_end) {
			jule::Ptr<_1e4790205_FieldIns> _31921_f = *it;
			{
				if ((_31921_f.get()._field_Decl.get()._field_Ident == _31828_ident)) {
					return _31921_f;;
				};
			}
			_iter_next_1e85188d6:;
			++it;
			goto _iter_begin_1e85188d6;
		}
		_iter_end_1e85188d6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e54ca291_Var> _1e47584a9_FindStatic(_1e47903e2_StructIns* _self_, jule::Str _32929_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8518e58:;
		if (it != expr_end) {
			jule::Ptr<_1e54ca291_Var> _33021_v = *it;
			{
				if ((_33021_v.get()._field_Ident == _32929_ident)) {
					return _33021_v;;
				};
			}
			_iter_next_1e8518e58:;
			++it;
			goto _iter_begin_1e8518e58;
		}
		_iter_end_1e8518e58:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e47903e2_StructIns _Src) {
	_Stream << _1e4765c47_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1e7205bbd_ObjectCoder> static__1e7170907_New(jule::Ptr<_1e65154a6_IR>* _8624_ir, _1e719ae0a_SerializationInfo _8633_info) {
	jule::Ptr<_1e7205bbd_ObjectCoder> _8717_oc = jule::new_ptr<_1e7205bbd_ObjectCoder>(_1e7205bbd_ObjectCoder{._field_ir=(*(_8624_ir)), ._field_info=_8633_info, });;
	_8717_oc.get()._field_ec=static__1e71558cb_new(&(_8717_oc));
	_8717_oc.get()._field_sc=static__1e714ce56_new(&(_8717_oc));
	_8717_oc.get()._field_tc=static__1e720c70d_new(&(_8717_oc));
	_8717_oc.get()._field_dc=static__1e7164a1c_new(_8717_oc);
	return _8717_oc;;
}



inline void _1e7190ce0_write(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Str _9825_s) {
	_self_.get()._field_Obj+=_9825_s;
}



inline void _1e71cb831_addIndent(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer+=jule::Str("\t", 1);
}



inline void _1e71cbd4d_doneIndent(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL, (_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1e71d03a1_indent(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1e71d6385_findAnyType(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e554dc82_TypeKind>* _11736_t) {
	{
		auto expr = &(_self_.get()._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9b50439:;
		if (it != expr_end) {
			jule::I64 _11814_i = it - expr->begin();
			jule::Ptr<_1e554dc82_TypeKind> _11821_at = *it;
			{
				if (_1e554e48b_Equal(_11821_at, (*(_11736_t)))) {
					return _11814_i;;
				};
			}
			_iter_next_1e9b50439:;
			++it;
			_11814_i++;
			goto _iter_begin_1e9b50439;
		}
		_iter_end_1e9b50439:;
	};
	return -1LL;;
}



inline jule::I64 _1e71953dd_pushAnyType(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e554dc82_TypeKind>* _12636_t) {
	jule::I64 _12717_i = _1e71d6385_findAnyType(_self_, _12636_t);;
	if ((_12717_i != -1LL)) {
		return _12717_i;;
	};
	_12717_i=static_cast<jule::I64>(_self_.get()._field_anyTypeMap.len());
	_self_.get()._field_anyTypeMap = jule::alloc_for_append(_self_.get()._field_anyTypeMap,1);_self_.get()._field_anyTypeMap.__push((*(_12636_t)));;
	jule::Str _13313_si = _1e543d7ba_Itoa(_12717_i);;
	if ((_1e555137d_Sptr((*(_12636_t)).ptr()) != nullptr)) {
		jule::Str _13517_elem_kind = _1e721257b_kind(_self_.get()._field_tc.ptr(), _1e555137d_Sptr((*(_12636_t)).ptr()).get()._field_Elem);;
		jule::Str _13617_kind = _1e720d445_asSptr(_self_.get()._field_tc.ptr(), _13517_elem_kind);;
		_self_.get()._field_anyObj+=jule::Str("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_13517_elem_kind;
		_self_.get()._field_anyObj+=jule::Str(">().dealloc(); }\n", 17);
		_self_.get()._field_anyObj+=jule::Str("struct jule::Any::Type ", 23);
		_self_.get()._field_anyObj+=jule::Str("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58);
		_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_compare(const jule::Any &any, const ", 37);
		_self_.get()._field_anyObj+=_13617_kind;
		_self_.get()._field_anyObj+=jule::Str(" &other) { return any.type == &__jule_any_type", 46);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52);
	} else {
		jule::Bool _16217_comparable = _1e5550190_Comparable((*(_12636_t)).ptr());;
		jule::Str _16317_kind = _1e721257b_kind(_self_.get()._field_tc.ptr(), (*(_12636_t)));;
		if ((_16317_kind == jule::Str("[<unimplemented_type_kind>]", 27))) {
			jule::outln(_1e554e17d_Str((*(_12636_t)).ptr()));
		};
		_self_.get()._field_anyObj+=jule::Str("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_16317_kind;
		_self_.get()._field_anyObj+=jule::Str(">().dealloc(); }\n", 17);
		if (_16217_comparable) {
			_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_eq(void *alloc, void *other) noexcept { return *static_cast<", 61);
			_self_.get()._field_anyObj+=_16317_kind;
			_self_.get()._field_anyObj+=jule::Str("*>(alloc) == *static_cast<", 26);
			_self_.get()._field_anyObj+=_16317_kind;
			_self_.get()._field_anyObj+=jule::Str("*>(other); }\n", 13);
		};
		_self_.get()._field_anyObj+=jule::Str("jule::Str __jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const ", 77);
		_self_.get()._field_anyObj+=_16317_kind;
		_self_.get()._field_anyObj+=jule::Str("*>(alloc)); }\n", 14);
		_self_.get()._field_anyObj+=jule::Str("struct jule::Any::Type ", 23);
		_self_.get()._field_anyObj+=jule::Str("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc, ", 10);
		if (_16217_comparable) {
			_self_.get()._field_anyObj+=jule::Str(".eq=__jule_any_type", 19);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_eq, ", 5);
		};
		_self_.get()._field_anyObj+=jule::Str(".to_str=__jule_any_type", 23);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_to_str};\n", 10);
		if (_16217_comparable) {
			_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_compare(const jule::Any &any, const ", 37);
			_self_.get()._field_anyObj+=_16317_kind;
			_self_.get()._field_anyObj+=jule::Str(" &other) { return any.type == &__jule_any_type", 46);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str(" && __jule_any_type", 19);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_eq(any.data.alloc, (void*)&other); }\n", 38);
		};
	};
	return _12717_i;;
}



inline void _1e719461d_pushResultIns(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e5463b75_FnIns>* _22538_f) {
	jule::Str _22613_s = _1e72170b9_code(_self_.get()._field_tc.get()._field_rc.ptr(), &((*(_22538_f)).get()._field_Result));;
	jule::Bool _22717_ok = false;;
	_self_.get()._field_resultMap.lookup(_22613_s, nullptr, &(_22717_ok));
	if (_22717_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_22613_s]=false;
	jule::Str _23217_obj = jule::Str::alloc(0LL, 128LL);;
	_23217_obj+=jule::Str("struct ", 7);
	_23217_obj+=_22613_s;
	_23217_obj+=jule::Str(" {\n", 3);
	{
		auto expr = &(_1e5552ca8_Tup((*(_22538_f)).get()._field_Result.ptr()).get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9b630c8:;
		if (it != expr_end) {
			jule::I64 _23614_i = it - expr->begin();
			jule::Ptr<_1e554dc82_TypeKind> _23621_t = *it;
			{
				_23217_obj+=jule::Str("\t", 1);
				_23217_obj+=_1e721257b_kind(_self_.get()._field_tc.ptr(), _23621_t);
				_23217_obj+=jule::Str(" ", 1);
				_23217_obj+=jule::Str("__jule_result_arg", 17);
				_23217_obj+=_1e543d7ba_Itoa(_23614_i);
				_23217_obj+=jule::Str(";\n", 2);
			}
			_iter_next_1e9b630c8:;
			++it;
			_23614_i++;
			goto _iter_begin_1e9b630c8;
		}
		_iter_end_1e9b630c8:;
	};
	_23217_obj+=jule::Str("};\n", 3);
	_self_.get()._field_resultDecls = jule::alloc_for_append(_self_.get()._field_resultDecls,1);_self_.get()._field_resultDecls.__push(_23217_obj);;
}



inline void _1e71cdcea_pushResult(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e5460ec4_Fn>* _24835_f) {
	if ((_1e5461436_IsVoid((*(_24835_f)).ptr()) || ((*(_24835_f)).get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _25217_n = (*(_24835_f)).get()._field_Instances.len();;
	if (((*(_24835_f)).get()._field_Generics.len() == 0LL)) {
		_25217_n=1LL;
	};
	{
		auto expr = (*(_24835_f)).get()._field_Instances.slice(0LL, _25217_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1e9b66a27:;
		if (it != expr_end) {
			jule::Ptr<_1e5463b75_FnIns> _25621_ins = *it;
			{
				_1e719461d_pushResultIns(_self_, &(_25621_ins));
			}
			_iter_next_1e9b66a27:;
			++it;
			goto _iter_begin_1e9b66a27;
		}
		_iter_end_1e9b66a27:;
	};
}



inline jule::I64 _1e7171177_findTypeOffset(_1e7205bbd_ObjectCoder* _self_, jule::Ptr<_1e5472dc6_Trait> _26129_t, jule::Ptr<_1e554dc82_TypeKind> _26144_k) {
	if ((_26129_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1e47903e2_StructIns> _26517_s = nullptr;;
	if ((_1e555137d_Sptr(_26144_k.ptr()) != nullptr)) {
		_26144_k=_1e555137d_Sptr(_26144_k.ptr()).get()._field_Elem;
	};
	if ((_1e555256b_Struct(_26144_k.ptr()) == nullptr)) {
		return -1LL;;
	};
	_26517_s=_1e555256b_Struct(_26144_k.ptr());
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9b696ea:;
		if (it != expr_end) {
			jule::Ptr<_1e717141e_traitHash> *_27316_hash = it;
			{
				if ((((*(_27316_hash)).get()._field_t == _26129_t) && ((*(_27316_hash)).get()._field_s == _26517_s))) {
					return (*(_27316_hash)).get()._field_i;;
				};
			}
			_iter_next_1e9b696ea:;
			++it;
			goto _iter_begin_1e9b696ea;
		}
		_iter_end_1e9b696ea:;
	};
	return -1LL;;
}



inline void _1e72062b7_locInfo(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_20d155596_Token>* _28228_t) {
	jule::Str *_28314_loc = &((*(_28228_t)).get()._field_File.get()._field_Path);;
	if (_2403599cc_Production) {
		{
			
			if (_242eae332_HasPrefix((*(_28314_loc)), _242d165c9_PathStdlib)) {
				_case_begin_1e9b6c126:;
				{
					_1e7190ce0_write(_self_, _1e7162773_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_28314_loc)).slice((_241316867_Dir(_242d165c9_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_242eae332_HasPrefix((*(_28314_loc)), _self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1e9b6ba1b:;
				{
					_1e7190ce0_write(_self_, _1e7162773_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_28314_loc)).slice((_241316867_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1e9b6b675:;
				{
					_1e7190ce0_write(_self_, _1e7162773_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_28314_loc)))));
				}
			}
			_match_end_1e9b6b5a9:;
		};
	} else {
		_1e7190ce0_write(_self_, _1e7162773_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_28314_loc)))));
	};
	_1e7190ce0_write(_self_, jule::Str(":", 1));
	_1e7190ce0_write(_self_, _1e543d7ba_Itoa((*(_28228_t)).get()._field_Row));
	_1e7190ce0_write(_self_, jule::Str(":", 1));
	_1e7190ce0_write(_self_, _1e543d7ba_Itoa((*(_28228_t)).get()._field_Column));
}



inline void _1e72063e9_head(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	_1e71edda3_Time _30913_time = static__1e71ee447_Now();;
	_1e71ed710_AbsTime _31013_abs = _1e7200a86_Abs(&_30913_time);;
	_1e7190ce0_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1e7190ce0_write(_self_, jule::Str("// JuleC version: ", 18));
	_1e7190ce0_write(_self_, jule::Str("jule0.0.13 @master", 18));
	_1e7190ce0_write(_self_, jule::Str("\n", 1));
	_1e7190ce0_write(_self_, jule::Str("// Date: ", 9));
	_1e7190ce0_write(_self_, _1e543d18d_FmtUint(_31013_abs._field_Day, 10LL));
	_1e7190ce0_write(_self_, jule::Str("/", 1));
	_1e7190ce0_write(_self_, _1e543d18d_FmtUint(_31013_abs._field_Month, 10LL));
	_1e7190ce0_write(_self_, jule::Str("/", 1));
	_1e7190ce0_write(_self_, _1e543d18d_FmtUint(_31013_abs._field_Year, 10LL));
	_1e7190ce0_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1e7190ce0_write(_self_, _self_.get()._field_info._field_Compiler);
	_1e7190ce0_write(_self_, jule::Str(" ", 1));
	_1e7190ce0_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1e7190ce0_write(_self_, jule::Str("\n\n", 2));
	if (_2403599cc_Production) {
		_1e7190ce0_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_240359339_RC))) {
		_1e7190ce0_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_240359713_Safety))) {
		_1e7190ce0_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1e720652b_links(_self_);
	_1e7190ce0_write(_self_, jule::Str("\n\n#include \"", 12));
	_1e7190ce0_write(_self_, _242d3ae4a_PathApi);
	_1e7190ce0_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1e720652b_links(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9b77560:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _34716_used = *it;
			{
				{
					
					if ((!(_34716_used.get()._field_CppLinked))) {
						_case_begin_1e9b78099:;
						{
							goto _iter_next_1e9b77560;
						}
					}
					else if (_2430523d6_IsStdHeaderPath(_34716_used.get()._field_Path)) {
						_case_begin_1e9b78121:;
						{
							_1e7190ce0_write(_self_, jule::Str("#include ", 9));
							_1e7190ce0_write(_self_, _34716_used.get()._field_Path);
							_1e7190ce0_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_243052606_IsValidHeaderExt(_2413142c1_Ext(_34716_used.get()._field_Path))) {
						_case_begin_1e9b78198:;
						{
							_1e7190ce0_write(_self_, jule::Str("#include \"", 10));
							_1e7190ce0_write(_self_, _34716_used.get()._field_Path);
							_1e7190ce0_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1e9b77e78:;
				};
			}
			_iter_next_1e9b77560:;
			++it;
			goto _iter_begin_1e9b77560;
		}
		_iter_end_1e9b77560:;
	};
}



inline void _1e720665d_prepareStructure(_1e7205bbd_ObjectCoder* _self_, jule::Ptr<_1e4790018_Struct>* _36340_s) {
	{
		auto expr = &((*(_36340_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9b77c9c:;
		if (it != expr_end) {
			jule::Ptr<_1e47903e2_StructIns> _36421_ins = *it;
			{
				{
					auto expr = &(_36421_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e9b7aee2:;
					if (it != expr_end) {
						jule::Ptr<_1e5460ec4_Fn> _36525_m = *it;
						{
							if (_36525_m.get()._field_Statically) {
								goto _iter_next_1e9b7aee2;
							};
							{
								auto expr = &(_36525_m.get()._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1e9b7bc4b:;
								if (it != expr_end) {
									jule::Ptr<_1e5463b75_FnIns> _36929_mins = *it;
									{
										jule::Ptr<_1e5462ca6_ParamIns> _37029_p = _36929_mins.get()._field_Params[0LL];;
										if ((!(_1e5460028_IsRef(_37029_p.get()._field_Decl.ptr())))) {
											_37029_p.get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(jule::new_ptr<_1e720b71d_customType>(_1e720b71d_customType{._field_kind=_1e720d753_asPtr((*(_self_))._field_tc.ptr(), _1e721257b_kind((*(_self_))._field_tc.ptr(), _37029_p.get()._field_Kind))}), 13)});
										} else {
											_37029_p.get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(jule::new_ptr<_1e720b71d_customType>(_1e720b71d_customType{._field_kind=_1e721257b_kind((*(_self_))._field_tc.ptr(), _37029_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_1e9b7bc4b:;
									++it;
									goto _iter_begin_1e9b7bc4b;
								}
								_iter_end_1e9b7bc4b:;
							};
						}
						_iter_next_1e9b7aee2:;
						++it;
						goto _iter_begin_1e9b7aee2;
					}
					_iter_end_1e9b7aee2:;
				};
			}
			_iter_next_1e9b77c9c:;
			++it;
			goto _iter_begin_1e9b77c9c;
		}
		_iter_end_1e9b77c9c:;
	};
}



inline void _1e7206790_prepareStructures(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9b7ae37:;
		if (it != expr_end) {
			jule::Ptr<_1e4790018_Struct> _39021_s = *it;
			{
				if ((_39021_s.get()._field_Token != nullptr)) {
					_1e720665d_prepareStructure(_self_.ptr(), &(_39021_s));
				};
			}
			_iter_next_1e9b7ae37:;
			++it;
			goto _iter_begin_1e9b7ae37;
		}
		_iter_end_1e9b7ae37:;
	};
}



inline void _1e72068c2_iterPackages(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1e54a70a3_Package>*)> _39732_f) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9b806ab:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _39821_used = *it;
			{
				if ((!(_39821_used.get()._field_CppLinked))) {
					_39732_f(&(_39821_used.get()._field_Package));
				};
			}
			_iter_next_1e9b806ab:;
			++it;
			goto _iter_begin_1e9b806ab;
		}
		_iter_end_1e9b806ab:;
	};
	_39732_f(&(_self_.get()._field_ir.get()._field_Main));
}



inline void _1e7206a04_buildTraitMap(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	_1e72068c2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e54a70a3_Package>*)>([=](jule::Ptr<_1e54a70a3_Package>* _40735_pkg) mutable -> void {
		_1e720a783_iterFiles(_40735_pkg, jule::Fn<void(jule::Ptr<_1e551cec6_SymbolTable>*)>([=](jule::Ptr<_1e551cec6_SymbolTable>* _40836_file) mutable -> void {
			{
				auto expr = &((*(_40836_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1e9b8389b:;
				if (it != expr_end) {
					jule::Ptr<_1e5472dc6_Trait> _40929_t = *it;
					{
						if ((_40929_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_40929_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1e717141e_traitHash>(_1e717141e_traitHash{._field_t=_40929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1e9b8389b;
						};
						jule::I64 _42129_i = 0LL;;
						{
							auto expr = &(_40929_t.get()._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1e9b8413d:;
							if (it != expr_end) {
								jule::Ptr<_1e4790018_Struct> _42233_s = *it;
								{
									{
										auto expr = &(_42233_s.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1e9b860eb:;
										if (it != expr_end) {
											jule::Ptr<_1e47903e2_StructIns> _42337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1e717141e_traitHash>(_1e717141e_traitHash{._field_t=_40929_t, ._field_s=_42337_ins, ._field_i=_42129_i}));;
												(_42129_i)++;
											}
											_iter_next_1e9b860eb:;
											++it;
											goto _iter_begin_1e9b860eb;
										}
										_iter_end_1e9b860eb:;
									};
								}
								_iter_next_1e9b8413d:;
								++it;
								goto _iter_begin_1e9b8413d;
							}
							_iter_end_1e9b8413d:;
						};
					}
					_iter_next_1e9b8389b:;
					++it;
					goto _iter_begin_1e9b8389b;
				}
				_iter_end_1e9b8389b:;
			};
		}));
	}));
}



inline void _1e7206b36_traitDecls(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	_1e72068c2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e54a70a3_Package>*)>([=](jule::Ptr<_1e54a70a3_Package>* _43835_pkg) mutable -> void {
		_1e720a783_iterFiles(_43835_pkg, jule::Fn<void(jule::Ptr<_1e551cec6_SymbolTable>*)>([=](jule::Ptr<_1e551cec6_SymbolTable>* _43936_file) mutable -> void {
			{
				auto expr = &((*(_43936_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1e9b88197:;
				if (it != expr_end) {
					jule::Ptr<_1e5472dc6_Trait> _44029_t = *it;
					{
						if ((_44029_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1e71d03a1_indent(_self_);
						_1e7190ce0_write(_self_, jule::Str("struct ", 7));
						_1e7190ce0_write(_self_, static__1e7169802_traitDecl(_44029_t));
						_1e7190ce0_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1e9b88197:;
					++it;
					goto _iter_begin_1e9b88197;
				}
				_iter_end_1e9b88197:;
			};
		}));
	}));
}



inline void _1e7206c68_structurePlainDecl(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e4790018_Struct>* _45343_s) {
	{
		auto expr = &((*(_45343_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9b85edb:;
		if (it != expr_end) {
			jule::Ptr<_1e47903e2_StructIns> _45421_ins = *it;
			{
				_1e7190ce0_write(_self_, jule::Str("struct ", 7));
				_1e7190ce0_write(_self_, static__1e716a0d8_structureIns(&(_45421_ins)));
				_1e7190ce0_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1e9b85edb:;
			++it;
			goto _iter_begin_1e9b85edb;
		}
		_iter_end_1e9b85edb:;
	};
}



inline void _1e7206d9a_structurePlainDecls(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9b8b08a:;
		if (it != expr_end) {
			jule::Ptr<_1e4790018_Struct> _46221_s = *it;
			{
				if ((_46221_s.get()._field_Token != nullptr)) {
					_1e7206c68_structurePlainDecl(_self_, &(_46221_s));
				};
			}
			_iter_next_1e9b8b08a:;
			++it;
			goto _iter_begin_1e9b8b08a;
		}
		_iter_end_1e9b8b08a:;
	};
}



inline void _1e7206ecc_fieldDecl(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e4790205_FieldIns>* _46934_f) {
	_1e7190ce0_write(_self_, _1e721257b_kind(_self_.get()._field_tc.ptr(), (*(_46934_f)).get()._field_Kind));
	_1e7190ce0_write(_self_, jule::Str(" ", 1));
	_1e7190ce0_write(_self_, static__1e716a380_field(&((*(_46934_f)).get()._field_Decl)));
	if (((*(_46934_f)).get()._field_Default == nullptr)) {
		if (_1e72190cc_shouldInitialized(&((*(_46934_f)).get()._field_Kind))) {
			_1e7190ce0_write(_self_, jule::Str(" = ", 3));
			_1e7161d8d_initExpr(_self_.get()._field_ec, (*(_46934_f)).get()._field_Kind);
		};
	} else {
		_1e7190ce0_write(_self_, jule::Str(" = ", 3));
		_1e71584d3_possibleRefExpr(_self_.get()._field_ec, (*(_46934_f)).get()._field_Default.get()._field_Model);
	};
	_1e7190ce0_write(_self_, jule::Str(";", 1));
}



inline void _1e720710e_structureDestructor(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e47903e2_StructIns>* _48744_s) {
	;
	jule::Ptr<_1e5460ec4_Fn> _49013_disposeMethod = _1e476a521_FindMethod((*(_48744_s)).ptr(), jule::Str("Dispose", 7), false);;
	jule::Bool _49117_disposed = static__1e54cb6b0_Dispose(_49013_disposeMethod);;
	if ((!(_49117_disposed))) {
		return;;
	};
	_1e7190ce0_write(_self_, jule::Str("~", 1));
	_1e7190ce0_write(_self_, static__1e716a0d8_structureIns(_48744_s));
	_1e7190ce0_write(_self_, jule::Str("(void) { ", 9));
	_1e7190ce0_write(_self_, static__1e71692b3_func(&(_49013_disposeMethod)));
	_1e7190ce0_write(_self_, jule::Str("(this); }", 9));
}



inline void _1e7207241_structureDeriveDefsDecls(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e47903e2_StructIns>* _50345_s) {
	if (_1e4759048_IsDerives((*(_50345_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1e71d03a1_indent(_self_);
		_1e7190ce0_write(_self_, _1e7164d2a_cloneFuncDecl(_self_.get()._field_dc.ptr(), &((*(_50345_s)).get()._field_Decl)));
		_1e7190ce0_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1e7207373_structureOperatorEq(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Str* _51140_ident, jule::Ptr<_1e47903e2_StructIns>* _51157_s) {
	if ((!((*(_51157_s)).get()._field_Comparable))) {
		return;;
	};
	if (((*(_51157_s)).get()._field_Operators._field_Eq != nullptr)) {
		_1e72075d7_structureOperator(_self_, _51140_ident, &((*(_51157_s)).get()._field_Operators._field_Eq), jule::Str("==", 2));
		return;;
	};
	_1e71d03a1_indent(_self_);
	if (_2269d50a5_Inline) {
		_1e7190ce0_write(_self_, jule::Str("inline ", 7));
	};
	_1e7190ce0_write(_self_, jule::Str("bool operator==(", 16));
	_1e7190ce0_write(_self_, (*(_51140_ident)));
	_1e7190ce0_write(_self_, jule::Str(" _other) {", 10));
	if (((*(_51157_s)).get()._field_Fields.len() > 0LL)) {
		_1e71cb831_addIndent(_self_);
		_1e7190ce0_write(_self_, jule::Str("\n", 1));
		_1e71d03a1_indent(_self_);
		_1e7190ce0_write(_self_, jule::Str("return ", 7));
		_1e71cb831_addIndent(_self_);
		jule::Bool _53421_writed = false;;
		{
			auto expr = &((*(_51157_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e9b98c68:;
			if (it != expr_end) {
				jule::Ptr<_1e4790205_FieldIns> _53525_f = *it;
				{
					jule::Ptr<_1e47903e2_StructIns> _53721_strct = _1e555256b_Struct(_53525_f.get()._field_Kind.ptr());;
					if ((((_53721_strct != nullptr) && (_53721_strct.get()._field_Decl != nullptr)) && _53721_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_1e9b98c68;
					};
					if (_53421_writed) {
						_1e7190ce0_write(_self_, jule::Str(" &&", 3));
					};
					_53421_writed=true;
					_1e7190ce0_write(_self_, jule::Str("\n", 1));
					_1e71d03a1_indent(_self_);
					_1e7190ce0_write(_self_, jule::Str("this->", 6));
					jule::Str _54821_fIdent = static__1e716a380_field(&(_53525_f.get()._field_Decl));;
					_1e7190ce0_write(_self_, _54821_fIdent);
					_1e7190ce0_write(_self_, jule::Str(" == _other.", 11));
					_1e7190ce0_write(_self_, _54821_fIdent);
				}
				_iter_next_1e9b98c68:;
				++it;
				goto _iter_begin_1e9b98c68;
			}
			_iter_end_1e9b98c68:;
		};
		_1e71cbd4d_doneIndent(_self_);
		if ((!(_53421_writed))) {
			_1e7190ce0_write(_self_, jule::Str("true", 4));
		};
		_1e7190ce0_write(_self_, jule::Str(";\n", 2));
		_1e71cbd4d_doneIndent(_self_);
		_1e71d03a1_indent(_self_);
		_1e7190ce0_write(_self_, jule::Str("}", 1));
	} else {
		_1e7190ce0_write(_self_, jule::Str(" return true; }", 15));
	};
	_1e7190ce0_write(_self_, jule::Str("\n\n", 2));
}



inline void _1e72074a5_structureOperatorNotEq(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Str* _56743_ident, jule::Ptr<_1e47903e2_StructIns>* _56760_s) {
	if ((!((*(_56760_s)).get()._field_Comparable))) {
		return;;
	};
	_1e71d03a1_indent(_self_);
	if (_2269d50a5_Inline) {
		_1e7190ce0_write(_self_, jule::Str("inline ", 7));
	};
	_1e7190ce0_write(_self_, jule::Str("bool operator!=(", 16));
	_1e7190ce0_write(_self_, (*(_56743_ident)));
	_1e7190ce0_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1e72075d7_structureOperator(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Str* _58138_ident, jule::Ptr<_1e5463b75_FnIns>* _58155_f, jule::Str _58166_op) {
	if (((*(_58155_f)) == nullptr)) {
		return;;
	};
	jule::Bool _58613_unary = ((*(_58155_f)).get()._field_Params.len() == 1LL);;
	jule::Bool _58713_assignment = _1e5461436_IsVoid((*(_58155_f)).get()._field_Decl.ptr());;
	_1e71d03a1_indent(_self_);
	if (_2269d50a5_Inline) {
		_1e7190ce0_write(_self_, jule::Str("inline ", 7));
	};
	if (_58713_assignment) {
		_1e7190ce0_write(_self_, (*(_58138_ident)));
		_1e7190ce0_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1e5551119_Prim((*(_58155_f)).get()._field_Result.ptr()) == nullptr)) {
			_1e7190ce0_write(_self_, (*(_58138_ident)));
		} else {
			_1e7190ce0_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1e7190ce0_write(_self_, jule::Str(" operator", 9));
	_1e7190ce0_write(_self_, _58166_op);
	_1e7190ce0_write(_self_, jule::Str("(", 1));
	if ((!(_58613_unary))) {
		jule::Ptr<_1e5462ca6_ParamIns> _60921_p = (*(_58155_f)).get()._field_Params[1LL];;
		_1e7190ce0_write(_self_, _1e7211525_paramIns(_self_.get()._field_tc.ptr(), &(_60921_p)));
		_1e7190ce0_write(_self_, jule::Str(" _other", 7));
	};
	_1e7190ce0_write(_self_, jule::Str(") { ", 4));
	if ((!(_58713_assignment))) {
		_1e7190ce0_write(_self_, jule::Str("return ", 7));
	};
	_1e7190ce0_write(_self_, static__1e716955a_funcIns(_58155_f));
	if ((!(_58613_unary))) {
		_1e7190ce0_write(_self_, jule::Str("(this, _other); ", 16));
		if (_58713_assignment) {
			_1e7190ce0_write(_self_, jule::Str("return *this; ", 14));
		};
		_1e7190ce0_write(_self_, jule::Str("}", 1));
	} else {
		_1e7190ce0_write(_self_, jule::Str("(this); }", 9));
	};
	_1e7190ce0_write(_self_, jule::Str("\n\n", 2));
}



inline void _1e7207719_structureOperators(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e47903e2_StructIns>* _63043_s) {
	jule::Str _63113_ident = static__1e716a0d8_structureIns(_63043_s);;
	_1e7207373_structureOperatorEq(_self_, &(_63113_ident), _63043_s);
	_1e72074a5_structureOperatorNotEq(_self_, &(_63113_ident), _63043_s);
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Gt), jule::Str(">", 1));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_GtEq), jule::Str(">=", 2));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Lt), jule::Str("<", 1));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_LtEq), jule::Str("<=", 2));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Shl), jule::Str("<<", 2));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Shr), jule::Str(">>", 2));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Add), jule::Str("+", 1));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Sub), jule::Str("-", 1));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Div), jule::Str("/", 1));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Mul), jule::Str("*", 1));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Mod), jule::Str("%", 1));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_BitAnd), jule::Str("&", 1));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_BitOr), jule::Str("|", 1));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_BitXor), jule::Str("^", 1));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Neg), jule::Str("-", 1));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Pos), jule::Str("+", 1));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_BitNot), jule::Str("~", 1));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_AddAssign), jule::Str("+=", 2));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_SubAssign), jule::Str("-=", 2));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_DivAssign), jule::Str("/=", 2));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_MulAssign), jule::Str("*=", 2));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_ModAssign), jule::Str("%=", 2));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_ShlAssign), jule::Str("<<=", 3));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_ShrAssign), jule::Str(">>=", 3));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_BitOrAssign), jule::Str("|=", 2));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_BitAndAssign), jule::Str("&=", 2));
	_1e72075d7_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_BitXorAssign), jule::Str("^=", 2));
}



inline void _1e720784b_structureInsDecl(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e47903e2_StructIns>* _66941_s) {
	if (((*(_66941_s)).get()._field_Methods.len() > 0LL)) {
		{
			auto expr = &((*(_66941_s)).get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e9bb625d:;
			if (it != expr_end) {
				jule::Ptr<_1e5460ec4_Fn> _67125_m = *it;
				{
					_1e71cdcea_pushResult(_self_, &(_67125_m));
					_1e7207e56_funcDecl(_self_, &(_67125_m), false);
				}
				_iter_next_1e9bb625d:;
				++it;
				goto _iter_begin_1e9bb625d;
			}
			_iter_end_1e9bb625d:;
		};
	};
	_1e7190ce0_write(_self_, jule::Str("struct ", 7));
	jule::Str _67813_outIdent = static__1e716a0d8_structureIns(_66941_s);;
	_1e7190ce0_write(_self_, _67813_outIdent);
	_1e7190ce0_write(_self_, jule::Str(" {\n", 3));
	_1e71cb831_addIndent(_self_);
	{
		auto expr = &((*(_66941_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9bb8408:;
		if (it != expr_end) {
			jule::Ptr<_1e4790205_FieldIns> _68421_f = *it;
			{
				_1e71d03a1_indent(_self_);
				_1e7206ecc_fieldDecl(_self_, &(_68421_f));
				_1e7190ce0_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1e9bb8408:;
			++it;
			goto _iter_begin_1e9bb8408;
		}
		_iter_end_1e9bb8408:;
	};
	_1e71d03a1_indent(_self_);
	_1e720710e_structureDestructor(_self_, _66941_s);
	_1e7190ce0_write(_self_, jule::Str("\n\n", 2));
	_1e71d03a1_indent(_self_);
	_1e7190ce0_write(_self_, _67813_outIdent);
	_1e7190ce0_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1e7207241_structureDeriveDefsDecls(_self_, _66941_s);
	_1e7207719_structureOperators(_self_, _66941_s);
	_1e7190ce0_write(_self_, jule::Str("\n", 1));
	_1e71cbd4d_doneIndent(_self_);
	_1e71d03a1_indent(_self_);
	_1e7190ce0_write(_self_, jule::Str("};", 2));
}



inline void _1e720797d_structureDecl(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e4790018_Struct>* _70938_s) {
	{
		auto expr = &((*(_70938_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9bbc176:;
		if (it != expr_end) {
			jule::Ptr<_1e47903e2_StructIns> _71021_ins = *it;
			{
				_1e720784b_structureInsDecl(_self_, &(_71021_ins));
			}
			_iter_next_1e9bbc176:;
			++it;
			goto _iter_begin_1e9bbc176;
		}
		_iter_end_1e9bbc176:;
	};
}



inline void _1e7207ab0_structureDecls(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9bbd045:;
		if (it != expr_end) {
			jule::Ptr<_1e4790018_Struct> _71621_s = *it;
			{
				if ((_71621_s.get()._field_Token != nullptr)) {
					_1e720797d_structureDecl(_self_, &(_71621_s));
					_1e7190ce0_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1e9bbd045:;
			++it;
			goto _iter_begin_1e9bbd045;
		}
		_iter_end_1e9bbd045:;
	};
}



inline void _1e7207be2_paramsDecls(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1e5462ca6_ParamIns>>* _72436_params) {
	if (((*(_72436_params)).len() == 0LL)) {
		_1e7190ce0_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1e7190ce0_write(_self_, jule::Str("(", 1));
	{
		auto expr = _72436_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9bc0025:;
		if (it != expr_end) {
			jule::I64 _73114_i = it - expr->begin();
			jule::Ptr<_1e5462ca6_ParamIns> _73121_p = *it;
			{
				_1e7190ce0_write(_self_, _1e7211525_paramIns(_self_.get()._field_tc.ptr(), &(_73121_p)));
				if ((((*(_72436_params)).len() - _73114_i) > 1LL)) {
					_1e7190ce0_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1e9bc0025:;
			++it;
			_73114_i++;
			goto _iter_begin_1e9bc0025;
		}
		_iter_end_1e9bc0025:;
	};
	_1e7190ce0_write(_self_, jule::Str(")", 1));
}



inline void _1e7207d24_funcHead(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e5463b75_FnIns>* _74133_f, jule::Bool _74144_ptr) {
	if ((((!(_74144_ptr)) && _2269d50a5_Inline) && (!(_1e546190e_IsEntryPoint((*(_74133_f)).get()._field_Decl.ptr()))))) {
		_1e7190ce0_write(_self_, jule::Str("inline ", 7));
	};
	_1e7211b52_funcInsResult(_self_.get()._field_tc.ptr(), &(_self_.get()._field_Obj), _74133_f);
	if (_74144_ptr) {
		_1e7190ce0_write(_self_, jule::Str("(*", 2));
		_1e7190ce0_write(_self_, static__1e716955a_funcIns(_74133_f));
		_1e7190ce0_write(_self_, jule::Str(")", 1));
	} else {
		_1e7190ce0_write(_self_, jule::Str(" ", 1));
		_1e7190ce0_write(_self_, static__1e716955a_funcIns(_74133_f));
	};
}



inline void _1e7207e56_funcDecl(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e5460ec4_Fn>* _75633_f, jule::Bool _75641_ptr) {
	{
		auto expr = &((*(_75633_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9bc53b0:;
		if (it != expr_end) {
			jule::Ptr<_1e5463b75_FnIns> _75721_c = *it;
			{
				_1e71d03a1_indent(_self_);
				_1e7207d24_funcHead(_self_, &(_75721_c), _75641_ptr);
				_1e7207be2_paramsDecls(_self_, &(_75721_c.get()._field_Params));
				_1e7190ce0_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1e9bc53b0:;
			++it;
			goto _iter_begin_1e9bc53b0;
		}
		_iter_end_1e9bc53b0:;
	};
}



inline void _1e7208088_funcDecls(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	_1e72068c2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e54a70a3_Package>*)>([=](jule::Ptr<_1e54a70a3_Package>* _76635_pkg) mutable -> void {
		_1e720a783_iterFiles(_76635_pkg, jule::Fn<void(jule::Ptr<_1e551cec6_SymbolTable>*)>([=](jule::Ptr<_1e551cec6_SymbolTable>* _76736_file) mutable -> void {
			{
				auto expr = &((*(_76736_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1e9bc8803:;
				if (it != expr_end) {
					jule::Ptr<_1e5460ec4_Fn> _76829_f = *it;
					{
						if (((!(_76829_f.get()._field_CppLinked)) && (_76829_f.get()._field_Token != nullptr))) {
							_1e71cdcea_pushResult(_self_, &(_76829_f));
							_1e7207e56_funcDecl(_self_, &(_76829_f), false);
						};
					}
					_iter_next_1e9bc8803:;
					++it;
					goto _iter_begin_1e9bc8803;
				}
				_iter_end_1e9bc8803:;
			};
		}));
	}));
}



inline void _1e72081ba_traitDataTypes(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	_1e72068c2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e54a70a3_Package>*)>([=](jule::Ptr<_1e54a70a3_Package>* _77935_pkg) mutable -> void {
		_1e720a783_iterFiles(_77935_pkg, jule::Fn<void(jule::Ptr<_1e551cec6_SymbolTable>*)>([=](jule::Ptr<_1e551cec6_SymbolTable>* _78036_file) mutable -> void {
			{
				auto expr = &((*(_78036_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1e9bcb75c:;
				if (it != expr_end) {
					jule::Ptr<_1e5472dc6_Trait> _78129_t = *it;
					{
						if ((_78129_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1e7190ce0_write(_self_, jule::Str("struct ", 7));
						_1e7190ce0_write(_self_, static__1e7169802_traitDecl(_78129_t));
						_1e7190ce0_write(_self_, jule::Str("MptrData", 8));
						_1e7190ce0_write(_self_, jule::Str(" {\n", 3));
						_1e71cb831_addIndent(_self_);
						{
							auto expr = &(_78129_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1e9bcd8a2:;
							if (it != expr_end) {
								jule::Ptr<_1e5460ec4_Fn> _79033_m = *it;
								{
									jule::Ptr<_1e5463b75_FnIns> _79133_ins = _79033_m.get()._field_Instances[0LL];;
									jule::Ptr<_1e5462ca6_ParamIns> _79233_p = _79133_ins.get()._field_Params[0LL];;
									_79233_p.get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_78129_t, 2)});
									{
										auto expr = _79133_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										auto expr_end = expr.end();
										_iter_begin_1e9bd06a6:;
										if (it != expr_end) {
											jule::I64 _79630_i = it - expr.begin();
											jule::Ptr<_1e5462ca6_ParamIns> _79637_ip = *it;
											{
												if (_20d1580d2_IsAnonIdent(_79637_ip.get()._field_Decl.get()._field_Ident)) {
													_79637_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1e543d7ba_Itoa(_79630_i));
												};
											}
											_iter_next_1e9bd06a6:;
											++it;
											_79630_i++;
											goto _iter_begin_1e9bd06a6;
										}
										_iter_end_1e9bd06a6:;
									};
									if ((!(_2403599cc_Production))) {
										_79133_ins.get()._field_Params = jule::alloc_for_append(_79133_ins.get()._field_Params,1);_79133_ins.get()._field_Params.__push(jule::new_ptr<_1e5462ca6_ParamIns>(_1e5462ca6_ParamIns{._field_Decl=jule::new_ptr<_1e545e687_Param>(_1e545e687_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(jule::new_ptr<_1e720b71d_customType>(_1e720b71d_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1e71cdcea_pushResult(_self_, &(_79033_m));
									_1e7207e56_funcDecl(_self_, &(_79033_m), true);
								}
								_iter_next_1e9bcd8a2:;
								++it;
								goto _iter_begin_1e9bcd8a2;
							}
							_iter_end_1e9bcd8a2:;
						};
						_1e71cbd4d_doneIndent(_self_);
						_1e71d03a1_indent(_self_);
						_1e7190ce0_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1e9bcb75c:;
					++it;
					goto _iter_begin_1e9bcb75c;
				}
				_iter_end_1e9bcb75c:;
			};
		}));
	}));
}



inline void _1e72082ec_paramIns(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e5462ca6_ParamIns>* _82433_p) {
	_1e7190ce0_write(_self_, _1e7211525_paramIns(_self_.get()._field_tc.ptr(), _82433_p));
	_1e7190ce0_write(_self_, jule::Str(" ", 1));
	_1e7190ce0_write(_self_, static__1e7169a99_param(&((*(_82433_p)).get()._field_Decl)));
}



inline void _1e720842e_paramsIns(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1e5462ca6_ParamIns>>* _83034_params) {
	if (((*(_83034_params)).len() == 0LL)) {
		_1e7190ce0_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1e7190ce0_write(_self_, jule::Str("(", 1));
	{
		auto expr = _83034_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9bd5139:;
		if (it != expr_end) {
			jule::I64 _83614_i = it - expr->begin();
			jule::Ptr<_1e5462ca6_ParamIns> _83621_p = *it;
			{
				_1e72082ec_paramIns(_self_, &(_83621_p));
				if ((((*(_83034_params)).len() - _83614_i) > 1LL)) {
					_1e7190ce0_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1e9bd5139:;
			++it;
			_83614_i++;
			goto _iter_begin_1e9bd5139;
		}
		_iter_end_1e9bd5139:;
	};
	_1e7190ce0_write(_self_, jule::Str(")", 1));
}



inline void _1e7208561_varInitExpr(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e54ca291_Var>* _84536_v, jule::Fn<void(void)> _84545_init) {
	if ((*(_84536_v)).get()._field_Statically) {
		_1e7190ce0_write(_self_, jule::Str("static ", 7));
	};
	_1e7190ce0_write(_self_, _1e721257b_kind(_self_.get()._field_tc.ptr(), (*(_84536_v)).get()._field_Kind.get()._field_Kind));
	_1e7190ce0_write(_self_, jule::Str(" ", 1));
	if ((*(_84536_v)).get()._field_Reference) {
		_1e7190ce0_write(_self_, jule::Str("*", 1));
	};
	_1e7190ce0_write(_self_, static__1e716a627_var((*(_84536_v))));
	if ((_84545_init != nullptr)) {
		_1e7190ce0_write(_self_, jule::Str(" = ", 3));
		_84545_init();
	};
	_1e7190ce0_write(_self_, jule::Str(";", 1));
}



inline void _1e7208693_var(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e54ca291_Var> _86327_v) {
	if (_20d157d3a_IsIgnoreIdent(_86327_v.get()._field_Ident)) {
		return;;
	};
	if (((_86327_v.get()._field_Value != nullptr) && (_86327_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_86327_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			if (_86327_v.get()._field_Reference) {
				_1e7208561_varInitExpr(_self_, &(_86327_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1e7190ce0_write(_self_, jule::Str("&(", 2));
					_1e7161b18_model(_self_.get()._field_ec, _86327_v.get()._field_Value.get()._field_Data.get()._field_Model);
					_1e7190ce0_write(_self_, jule::Str(")", 1));
				}));
			} else {
				_1e7208561_varInitExpr(_self_, &(_86327_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1e71584d3_possibleRefExpr(_self_.get()._field_ec, _86327_v.get()._field_Value.get()._field_Data.get()._field_Model);
				}));
			};
			return;;
		};
		_1e7208561_varInitExpr(_self_, &(_86327_v), nullptr);
		return;;
	};
	if (_86327_v.get()._field_Reference) {
		_1e7208561_varInitExpr(_self_, &(_86327_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1e7190ce0_write(_self_, jule::Str("nullptr", 7));
		}));
		return;;
	};
	if (_1e72190cc_shouldInitialized(&(_86327_v.get()._field_Kind.get()._field_Kind))) {
		_1e7208561_varInitExpr(_self_, &(_86327_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1e7161d8d_initExpr(_self_.get()._field_ec, _86327_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_1e7208561_varInitExpr(_self_, &(_86327_v), nullptr);
}



inline void _1e72087c5_func(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e5460ec4_Fn>* _89429_f) {
	{
		auto expr = &((*(_89429_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9be209c:;
		if (it != expr_end) {
			jule::Ptr<_1e5463b75_FnIns> _89521_ins = *it;
			{
				_1e7207d24_funcHead(_self_, &(_89521_ins), false);
				_1e720842e_paramsIns(_self_, &(_89521_ins.get()._field_Params));
				_1e7190ce0_write(_self_, jule::Str(" ", 1));
				_1e7152a3d_funcScope(_self_.get()._field_sc, _89521_ins);
				if ((_89521_ins.get()._field_Scope != nullptr)) {
					_1e7190ce0_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1e9be209c:;
			++it;
			goto _iter_begin_1e9be209c;
		}
		_iter_end_1e9be209c:;
	};
}



inline void _1e7208907_traitWrappers(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9be41e2:;
		if (it != expr_end) {
			jule::Ptr<_1e717141e_traitHash> _90721_hash = *it;
			{
				{
					auto expr = &(_90721_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e9be49d9:;
					if (it != expr_end) {
						jule::Ptr<_1e5460ec4_Fn> _90825_m = *it;
						{
							jule::Str _90921_ident = _90825_m.get()._field_Ident;;
							_90825_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_90825_m.get()._field_Ident=((_90921_ident + jule::Str("_", 1)) + _1e543d7ba_Itoa(_90721_hash.get()._field_i));
							_1e72087c5_func(_self_, &(_90825_m));
							_90825_m.get()._field_Ident=_90921_ident;
							if ((_90721_hash.get()._field_s == nullptr)) {
								if (_2403599cc_Production) {
									_1e7190ce0_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1e7190ce0_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1e9be49d9;
							};
							jule::Bool _92521_ptr = (!(_1e5460028_IsRef(_90825_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_1e5460ec4_Fn> _92725_sm = _1e476a521_FindMethod(_90721_hash.get()._field_s.ptr(), _90825_m.get()._field_Ident, false);;
							if (((_92725_sm == nullptr) || (_92725_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_1e9be49d9;
							};
							_1e71cb831_addIndent(_self_);
							_1e7190ce0_write(_self_, jule::Str("{\n", 2));
							_1e71d03a1_indent(_self_);
							if ((_92725_sm.get()._field_Exceptional || (!(_1e5461436_IsVoid(_92725_sm.ptr()))))) {
								_1e7190ce0_write(_self_, jule::Str("return ", 7));
							};
							_1e7190ce0_write(_self_, static__1e71692b3_func(&(_92725_sm)));
							_1e7190ce0_write(_self_, jule::Str("(", 1));
							if (_92521_ptr) {
								_1e7190ce0_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1e7190ce0_write(_self_, _1e7210aeb_structureIns(_self_.get()._field_tc.ptr(), _90721_hash.get()._field_s));
								_1e7190ce0_write(_self_, jule::Str(">(", 2));
								if ((!(_2403599cc_Production))) {
									_1e7190ce0_write(_self_, jule::Str("_00___file", 10));
								};
								_1e7190ce0_write(_self_, jule::Str(")", 1));
							} else {
								_1e7190ce0_write(_self_, jule::Str("_self_.data.as<", 15));
								_1e7190ce0_write(_self_, _1e72107dd_structure(_self_.get()._field_tc.ptr(), _92725_sm.get()._field_Owner));
								_1e7190ce0_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _90825_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1e9beb716:;
								if (it != expr_end) {
									jule::Ptr<_1e545e687_Param> _95324_mp = *it;
									{
										_1e7190ce0_write(_self_, jule::Str(", ", 2));
										_1e7190ce0_write(_self_, static__1e7169a99_param(&(_95324_mp)));
									}
									_iter_next_1e9beb716:;
									++it;
									goto _iter_begin_1e9beb716;
								}
								_iter_end_1e9beb716:;
							};
							_1e7190ce0_write(_self_, jule::Str(");\n}\n", 5));
							_1e71cbd4d_doneIndent(_self_);
						}
						_iter_next_1e9be49d9:;
						++it;
						goto _iter_begin_1e9be49d9;
					}
					_iter_end_1e9be49d9:;
				};
			}
			_iter_next_1e9be41e2:;
			++it;
			goto _iter_begin_1e9be41e2;
		}
		_iter_end_1e9be41e2:;
	};
}



inline void _1e7208a39_traitDatas(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	jule::Ptr<_1e5472dc6_Trait> _96417_old = nullptr;;
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9be4665:;
		if (it != expr_end) {
			jule::Ptr<_1e717141e_traitHash> _96521_hash = *it;
			{
				jule::Str _96617_ident = static__1e7169802_traitDecl(_96521_hash.get()._field_t);;
				if ((_96521_hash.get()._field_t != _96417_old)) {
					if ((_96417_old != nullptr)) {
						_1e71cbd4d_doneIndent(_self_);
						_1e71d03a1_indent(_self_);
						_1e7190ce0_write(_self_, jule::Str("};\n", 3));
					};
					_1e7190ce0_write(_self_, jule::Str("static ", 7));
					_1e7190ce0_write(_self_, _96617_ident);
					_1e7190ce0_write(_self_, jule::Str("MptrData ", 9));
					_1e7190ce0_write(_self_, _96617_ident);
					_1e7190ce0_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_96417_old=_96521_hash.get()._field_t;
					_1e71cb831_addIndent(_self_);
				};
				_1e71d03a1_indent(_self_);
				_1e7190ce0_write(_self_, jule::Str("{\n", 2));
				_1e71cb831_addIndent(_self_);
				{
					auto expr = &(_96521_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e9c04488:;
					if (it != expr_end) {
						jule::Ptr<_1e5460ec4_Fn> _98425_m = *it;
						{
							jule::Str _98521_mIdent = static__1e71692b3_func(&(_98425_m));;
							_1e71d03a1_indent(_self_);
							_1e7190ce0_write(_self_, jule::Str(".", 1));
							_1e7190ce0_write(_self_, _98521_mIdent);
							_1e7190ce0_write(_self_, jule::Str("=", 1));
							_1e7190ce0_write(_self_, _98521_mIdent);
							_1e7190ce0_write(_self_, jule::Str("_", 1));
							_1e7190ce0_write(_self_, _1e543d7ba_Itoa(_96521_hash.get()._field_i));
							_1e7190ce0_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1e9c04488:;
						++it;
						goto _iter_begin_1e9c04488;
					}
					_iter_end_1e9c04488:;
				};
				_1e71cbd4d_doneIndent(_self_);
				_1e71d03a1_indent(_self_);
				_1e7190ce0_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1e9be4665:;
			++it;
			goto _iter_begin_1e9be4665;
		}
		_iter_end_1e9be4665:;
	};
	if ((_96417_old != nullptr)) {
		_1e71cbd4d_doneIndent(_self_);
		_1e71d03a1_indent(_self_);
		_1e7190ce0_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1e7208b6b_globals(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9c08503:;
		if (it != expr_end) {
			jule::Ptr<_1e54ca291_Var> _100721_v = *it;
			{
				_1e7190ce0_write(_self_, _1e721257b_kind(_self_.get()._field_tc.ptr(), _100721_v.get()._field_Kind.get()._field_Kind));
				_1e7190ce0_write(_self_, jule::Str(" ", 1));
				_1e7190ce0_write(_self_, static__1e716a627_var(_100721_v));
				_1e7190ce0_write(_self_, jule::Str(" = ", 3));
				_1e7161b18_model(_self_.get()._field_ec, _100721_v.get()._field_Value.get()._field_Data.get()._field_Model);
				_1e7190ce0_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1e9c08503:;
			++it;
			goto _iter_begin_1e9c08503;
		}
		_iter_end_1e9c08503:;
	};
}



inline void _1e7208c9d_decls(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	_1e7206b36_traitDecls(_self_);
	_1e7206d9a_structurePlainDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1e7207ab0_structureDecls(_self_);
	_1e7208088_funcDecls(_self_);
	_1e7190ce0_write(_self_, jule::Str("\n\n", 2));
	_1e72081ba_traitDataTypes(_self_);
	_1e7190ce0_write(_self_, jule::Str("\n\n", 2));
	_1e7208907_traitWrappers(_self_);
	_1e7190ce0_write(_self_, jule::Str("\n\n", 2));
	_1e7208a39_traitDatas(_self_);
	_1e7190ce0_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1e7208b6b_globals(_self_);
}



inline void _1e7208dd0_structureMethods(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e47903e2_StructIns>* _103441_s) {
	{
		auto expr = &((*(_103441_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9c0e1eb:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> _103521_f = *it;
			{
				_1e72087c5_func(_self_, &(_103521_f));
				_1e7190ce0_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1e9c0e1eb:;
			++it;
			goto _iter_begin_1e9c0e1eb;
		}
		_iter_end_1e9c0e1eb:;
	};
}



inline void _1e7209012_structureDeriveDefs(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e47903e2_StructIns>* _104144_s) {
	if (_1e4759048_IsDerives((*(_104144_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1e7190ce0_write(_self_, _1e7165138_cloneFuncDef(_self_.get()._field_dc.ptr(), &((*(_104144_s)).get()._field_Decl)));
		_1e7190ce0_write(_self_, jule::Str("{\n", 2));
		_1e71cb831_addIndent(_self_);
		_1e71d03a1_indent(_self_);
		_1e7190ce0_write(_self_, _1e7210aeb_structureIns(_self_.get()._field_tc.ptr(), (*(_104144_s))));
		_1e7190ce0_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto expr = &((*(_104144_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e9c12375:;
			if (it != expr_end) {
				jule::Ptr<_1e4790205_FieldIns> _104920_f = *it;
				{
					jule::Str _105021_ident = static__1e716a380_field(&(_104920_f.get()._field_Decl));;
					_1e71d03a1_indent(_self_);
					_1e7190ce0_write(_self_, jule::Str("clone.", 6));
					_1e7190ce0_write(_self_, _105021_ident);
					_1e7190ce0_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1e7190ce0_write(_self_, _105021_ident);
					_1e7190ce0_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1e9c12375:;
				++it;
				goto _iter_begin_1e9c12375;
			}
			_iter_end_1e9c12375:;
		};
		_1e71d03a1_indent(_self_);
		_1e7190ce0_write(_self_, jule::Str("return clone;\n", 14));
		_1e71cbd4d_doneIndent(_self_);
		_1e7190ce0_write(_self_, jule::Str("}", 1));
	};
}



inline void _1e7209144_structureOstream(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e47903e2_StructIns>* _106541_s) {
	_1e71d03a1_indent(_self_);
	_1e7190ce0_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1e7190ce0_write(_self_, static__1e716a0d8_structureIns(_106541_s));
	_1e7190ce0_write(_self_, jule::Str(" _Src) {\n", 9));
	_1e71cb831_addIndent(_self_);
	_1e71d03a1_indent(_self_);
	jule::Ptr<_1e5460ec4_Fn> _107317_fts = _1e476a521_FindMethod((*(_106541_s)).ptr(), jule::Str("Str", 3), false);;
	if (static__1e54cb957_Str(_107317_fts)) {
		_1e7190ce0_write(_self_, jule::Str("_Stream << ", 11));
		_1e7190ce0_write(_self_, static__1e71692b3_func(&(_107317_fts)));
		_1e7190ce0_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1e7190ce0_write(_self_, jule::Str("_Stream << \"", 12));
		_1e7190ce0_write(_self_, (*(_106541_s)).get()._field_Decl.get()._field_Ident);
		_1e7190ce0_write(_self_, jule::Str("{\";\n", 4));
		{
			auto expr = &((*(_106541_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e9c19437:;
			if (it != expr_end) {
				jule::I64 _108318_i = it - expr->begin();
				jule::Ptr<_1e4790205_FieldIns> _108325_f = *it;
				{
					_1e71d03a1_indent(_self_);
					_1e7190ce0_write(_self_, jule::Str("_Stream << \"", 12));
					_1e7190ce0_write(_self_, _108325_f.get()._field_Decl.get()._field_Ident);
					_1e7190ce0_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1e47903e2_StructIns> _109021_strct = _1e555256b_Struct(_108325_f.get()._field_Kind.ptr());;
					if ((((_109021_strct != nullptr) && (_109021_strct.get()._field_Decl != nullptr)) && _109021_strct.get()._field_Decl.get()._field_CppLinked)) {
						_1e7190ce0_write(_self_, jule::Str(" cpp.", 5));
						_1e7190ce0_write(_self_, static__1e716a380_field(&(_108325_f.get()._field_Decl)));
						_1e7190ce0_write(_self_, jule::Str("\"", 1));
					} else {
						_1e7190ce0_write(_self_, jule::Str("\" << _Src.", 10));
						_1e7190ce0_write(_self_, static__1e716a380_field(&(_108325_f.get()._field_Decl)));
					};
					if (((_108318_i + 1LL) < (*(_106541_s)).get()._field_Fields.len())) {
						_1e7190ce0_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1e7190ce0_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1e9c19437:;
				++it;
				_108318_i++;
				goto _iter_begin_1e9c19437;
			}
			_iter_end_1e9c19437:;
		};
		_1e71d03a1_indent(_self_);
		_1e7190ce0_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1e71d03a1_indent(_self_);
	_1e7190ce0_write(_self_, jule::Str("return _Stream;\n", 16));
	_1e71cbd4d_doneIndent(_self_);
	_1e7190ce0_write(_self_, jule::Str("}", 1));
}



inline void _1e720930e_structureIns(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e47903e2_StructIns>* _111637_s) {
	_1e7208dd0_structureMethods(_self_, _111637_s);
	_1e7190ce0_write(_self_, jule::Str("\n\n", 2));
	_1e7209012_structureDeriveDefs(_self_, _111637_s);
	_1e7190ce0_write(_self_, jule::Str("\n\n", 2));
	_1e7209144_structureOstream(_self_, _111637_s);
}



inline void _1e7209584_structure(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e4790018_Struct>* _112434_s) {
	{
		auto expr = &((*(_112434_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9c22022:;
		if (it != expr_end) {
			jule::Ptr<_1e47903e2_StructIns> _112521_ins = *it;
			{
				_1e720930e_structureIns(_self_, &(_112521_ins));
				_1e7190ce0_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1e9c22022:;
			++it;
			goto _iter_begin_1e9c22022;
		}
		_iter_end_1e9c22022:;
	};
}



inline void _1e7209760_structures(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9c23232:;
		if (it != expr_end) {
			jule::Ptr<_1e4790018_Struct> _113221_s = *it;
			{
				if ((_113221_s.get()._field_Token != nullptr)) {
					_1e7209584_structure(_self_, &(_113221_s));
					_1e7190ce0_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1e9c23232:;
			++it;
			goto _iter_begin_1e9c23232;
		}
		_iter_end_1e9c23232:;
	};
}



inline void _1e720993b_funcs(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	_1e72068c2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e54a70a3_Package>*)>([=](jule::Ptr<_1e54a70a3_Package>* _114135_pkg) mutable -> void {
		_1e720a783_iterFiles(_114135_pkg, jule::Fn<void(jule::Ptr<_1e551cec6_SymbolTable>*)>([=](jule::Ptr<_1e551cec6_SymbolTable>* _114236_file) mutable -> void {
			{
				auto expr = &((*(_114236_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1e9c26378:;
				if (it != expr_end) {
					jule::Ptr<_1e5460ec4_Fn> _114329_f = *it;
					{
						if (((!(_240359070_Test)) && _1e7218d35_hasDirective(&(_114329_f.get()._field_Directives), jule::Str("test", 4)))) {
							goto _iter_next_1e9c26378;
						};
						if (((!(_114329_f.get()._field_CppLinked)) && (_114329_f.get()._field_Token != nullptr))) {
							_1e72087c5_func(_self_, &(_114329_f));
							_1e7190ce0_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1e9c26378:;
					++it;
					goto _iter_begin_1e9c26378;
				}
				_iter_end_1e9c26378:;
			};
		}));
	}));
}



inline void _1e7209bb1_pushInit(jule::Ptr<_1e7205bbd_ObjectCoder> _self_, jule::Ptr<_1e54a70a3_Package>* _115633_pkg) {
	_1e720a783_iterFiles(_115633_pkg, jule::Fn<void(jule::Ptr<_1e551cec6_SymbolTable>*)>([=](jule::Ptr<_1e551cec6_SymbolTable>* _115732_file) mutable -> void {
		{
			auto expr = &((*(_115732_file)).get()._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e9c28ac8:;
			if (it != expr_end) {
				jule::Ptr<_1e5460ec4_Fn> _115820_f = *it;
				{
					if ((_115820_f.get()._field_Ident == jule::Str("init", 4))) {
						_1e71d03a1_indent(_self_);
						_1e7190ce0_write(_self_, static__1e71692b3_func(&(_115820_f)));
						_1e7190ce0_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1e9c28ac8:;
				++it;
				goto _iter_begin_1e9c28ac8;
			}
			_iter_end_1e9c28ac8:;
		};
	}));
}



inline void _1e7209d8c_initCaller(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	_1e7190ce0_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1e71cb831_addIndent(_self_);
	_1e72068c2_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e54a70a3_Package>*)>([=](jule::Ptr<_1e54a70a3_Package>* _117135_pkg) mutable -> void {
		_1e7209bb1_pushInit(_self_, _117135_pkg);
	}));
	_1e71cbd4d_doneIndent(_self_);
	_1e7190ce0_write(_self_, jule::Str("\n}", 2));
}



inline void _1e720a068_end(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	_1e7190ce0_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_240359070_Test) {
		_1e7190ce0_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1e7190ce0_write(_self_, jule::Str("entry_point();", 14));
	};
	_1e7190ce0_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1e720a244_serializeHead(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	_1e7206790_prepareStructures(_self_);
	_1e7206a04_buildTraitMap(_self_);
	_1e72063e9_head(_self_);
	_1e7190ce0_write(_self_, jule::Str("\n", 1));
	_1e7208c9d_decls(_self_);
	if ((_self_.get()._field_resultDecls.len() > 0LL)) {
		jule::Str _120621_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_headPos);;
		{
			auto expr = &(_self_.get()._field_resultDecls);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e9c30283:;
			if (it != expr_end) {
				jule::Str _120720_decl = *it;
				{
					_120621_head+=_120720_decl;
					_self_.get()._field_declPos+=_120720_decl.len();
				}
				_iter_next_1e9c30283:;
				++it;
				goto _iter_begin_1e9c30283;
			}
			_iter_end_1e9c30283:;
		};
		_120621_head+=_self_.get()._field_Obj.slice(_self_.get()._field_headPos);
		_self_.get()._field_Obj=_120621_head;
	};
	_1e7190ce0_write(_self_, jule::Str("\n", 1));
	_1e7209760_structures(_self_);
	_1e720993b_funcs(_self_);
	_1e7209d8c_initCaller(_self_);
	_1e7190ce0_write(_self_, jule::Str("\n\n", 2));
	if ((_self_.get()._field_anyObj.len() > 0LL)) {
		jule::Str _122221_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_declPos);;
		_122221_head+=_self_.get()._field_anyObj;
		_122221_head+=_self_.get()._field_Obj.slice(_self_.get()._field_declPos);
		_self_.get()._field_Obj=_122221_head;
	};
}



inline void _1e720a420_Serialize(jule::Ptr<_1e7205bbd_ObjectCoder> _self_) {
	_1e720a244_serializeHead(_self_);
	_1e720a068_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1e7205bbd_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1e9ca203b_parseInteger(_1e724eb7e_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1e9ca4bba:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_242eae332_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1e9ca512c:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_242eae332_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1e9ca52c5:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_242eae332_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1e9ca501c:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1e9ca488a:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1e9ca4824:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1e9ca4758:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1e9caa110_parseInteger(_1e724eb7e_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1e9cacc4a:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_242eae332_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1e9cad1ac:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_242eae332_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1e9cad355:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_242eae332_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1e9cad09c:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1e9cac91a:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1e9cac8a4:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1e9cac7d8:;
	};
	return __jule_func_result;;
}



inline jule::Str _1e7250476_getData(_1e724eb7e_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1e72506b8_processFlag(_1e724eb7e_argParser* _self_, jule::Trait<_1e6ead7ab_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1e9c9e2be:;
			{
				jule::Ptr<_1e9c8a453_Flag> _22021_bf = (*(_21735_flag)).cast_ptr<_1e9c8a453_Flag>(3);;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1e9c9e258:;
	};
	jule::Str _22513_data = _1e7250476_getData(_self_);;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1e6ead7ab_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1e6ead679_Name((*(_21735_flag)))) + jule::Str(": expression missing", 20)), &__jule_any_type5));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e9ca0820:;
			{
				jule::Ptr<_1e9c7e722_Flag> _23221_intf = (*(_21735_flag)).cast_ptr<_1e9c7e722_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1e9ca203b_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1e542cba5_ParseInt(_23370_s, _23378_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1e6ead7ab_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1e6ead679_Name((*(_21735_flag)))) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1e9ca12d2:;
			{
				jule::Ptr<_1e9c83380_Flag> _24021_uintf = (*(_21735_flag)).cast_ptr<_1e9c83380_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1e9caa110_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1e542c743_ParseUint(_24171_s, _24179_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1e6ead7ab_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1e6ead679_Name((*(_21735_flag)))) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1e9ca1348:;
			{
				jule::Ptr<_1e9c86b47_Flag> _24821_ff = (*(_21735_flag)).cast_ptr<_1e9c86b47_Flag>(2);;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1e5434195_ParseFloat(_22513_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1e6ead7ab_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1e6ead679_Name((*(_21735_flag)))) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type5));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1e9ca13ae:;
			{
				(*((*(_21735_flag)).cast_ptr<_1e9c8dc1a_Flag>(4).get()._field_data))=_22513_data;
			}
		}
		_match_end_1e9ca126b:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1e725093d_singleDash(_1e724eb7e_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_26113_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9cb53e5:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1e6ead7ab_CommonFlag> _26321_flag = _1e724d034_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>((*(_26216_r)))), &__jule_any_type5));
				};
				({
					auto except = _1e72506b8_processFlag(_self_, &(_26321_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1e9cb53e5:;
			++it;
			goto _iter_begin_1e9cb53e5;
		}
		_iter_end_1e9cb53e5:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1e7250bb3_doubleDash(_1e724eb7e_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Trait<_1e6ead7ab_CommonFlag> _27617_flag = _1e724cc26_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": flag is not exist", 19)), &__jule_any_type5));
	};
	({
		auto except = _1e72506b8_processFlag(_self_, &(_27617_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1e7250d8e_tryArg(_1e724eb7e_argParser* _self_) {
	jule::Str _28413_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1e7250bb3_doubleDash(_self_, &(_28413_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1e725093d_singleDash(_self_, &(_28413_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*(_self_))._field_content = jule::alloc_for_append((*(_self_))._field_content,1);(*(_self_))._field_content.__push(_28413_arg);;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1e725106a_parse(_1e724eb7e_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1e7250d8e_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1e9cbad46:;
	}
	_iter_end_1e9cbad46:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1e724eb7e_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _24118d546_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _2411a2c75_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	{
		return static_cast<jule::Str>(_6924_s);;
	};
}



inline jule::I64 _2403d57b1_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _2411c0be9_Fcntl(jule::I64 _4310_handle, jule::I64 _4323_cmd, jule::I64 _4333_arg) {
	return static_cast<jule::I64>(fcntl(_4310_handle, _4323_cmd, _4333_arg));;
}



inline jule::I64 _2411c103a_Stat(jule::U8* _4816_path, struct stat* _4833_stat) {
	return static_cast<jule::I64>(stat(((char*)(_4816_path)), _4833_stat));;
}



inline jule::I64 _2411c1425_Open(jule::U8* _5316_path, jule::I64 _5329_flag, jule::I64 _5340_mode) {
	return static_cast<jule::I64>(open(((char*)(_5316_path)), _5329_flag, _5340_mode));;
}



inline jule::U8* _2411c1766_Getcwd(jule::U8* _5918_buff, jule::U64 _5931_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5918_buff)), _5931_bufflen)));;
}



inline DIR* _2411c1c3e_Opendir(jule::U8* _6419_path) {
	return opendir(((char*)(_6419_path)));;
}



inline struct dirent* _2411c1ed6_Readdir(DIR* _6723_dir) {
	return readdir(_6723_dir);;
}



inline jule::I64 _2411c227d_Closedir(DIR* _7024_dir) {
	return static_cast<jule::I64>(closedir(_7024_dir));;
}



inline jule::I64 _2411c2b0d_Mkdir(jule::U8* _7917_path, jule::I64 _7930_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7917_path)), _7930_mode));;
}



inline jule::I64 _2411c2da5_Rmdir(jule::U8* _8417_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_8417_path))));;
}



inline jule::I64 _2411c314c_Unlink(jule::U8* _8718_path) {
	return static_cast<jule::I64>(unlink(((char*)(_8718_path))));;
}



inline jule::I64 _2411dd84e_Seek(jule::I64 _269_handle, jule::I64 _2622_offset, jule::I64 _2635_origin) {
	return static_cast<jule::I64>(lseek(_269_handle, _2622_offset, _2635_origin));;
}



inline jule::I64 _2411ddc39_Read(jule::I64 _3116_handle, void* _3133_buff, jule::U64 _3148_n) {
	return static_cast<jule::I64>(read(_3116_handle, _3133_buff, _3148_n));;
}



inline jule::I64 _2411de0ad_Close(jule::I64 _3610_handle) {
	return static_cast<jule::I64>(close(_3610_handle));;
}



inline jule::I64 _2411de498_Write(jule::I64 _3917_handle, void* _3930_buff, jule::U64 _3945_n) {
	return static_cast<jule::I64>(write(_3917_handle, _3930_buff, _3945_n));;
}



inline void _2411de6a7_Exit(jule::I64 _449_code) {
	exit(_449_code);
}



inline jule::I64 _24128263a_getLastOsError(void) {
	jule::I64 _309_err = _2403d57b1_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1e72cd2a1:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1e72ccba7:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1e72ccc2e:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1e72ccca6:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1e72cced7:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1e72cd04d:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1e72cd0b4:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1e72cc9ed:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1e72cc998:;
	};
}



inline jule::Slice<jule::Str> _24128311e_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _241283592_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _241284494_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _241284494_getwd(void) {
	jule::U8* _1113_buff = _2411c1766_Getcwd(nullptr, 0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_24128263a_getLastOsError(), &__jule_any_type132));
	};
	jule::Str _159_pwd = _2411a2c75_BytePtrToStr(_1113_buff);;
	{
		_24118d546_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _159_pwd);;
}



inline jule::Bool _242c90d17_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_241aca207__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _241ad362d_isExcludingLatin(_242c99eec_Letter, _7613_r);;
}



inline jule::Bool _241ad2a4a_is16(jule::Slice<_241ad0e88_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e7954608:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_241ad0e88_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1e7954608:;
				++it;
				_19313_i++;
				goto _iter_begin_1e7954608;
			}
			_iter_end_1e7954608:;
		};
		return false;;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_241ad0e88_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1e79540ca:;
	}
	_iter_end_1e79540ca:;;
	return false;;
}



inline jule::Bool _241ad2d8b_is32(jule::Slice<_241ad140b_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e795a994:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_241ad140b_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1e795a994:;
				++it;
				_23013_i++;
				goto _iter_begin_1e795a994;
			}
			_iter_end_1e795a994:;
		};
		return false;;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_241ad140b_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1e79577d7:;
	}
	_iter_end_1e79577d7:;;
	return false;;
}



inline jule::Bool _241ad362d_isExcludingLatin(jule::Ptr<_241ad187e_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_241ad0e88_Range16> *_28014_R16 = &(_27821_rangeTab.get()._field_R16);;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if ((((*(_28014_R16)).len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28014_R16))[((*(_28014_R16)).len() - 1LL)]._field_Hi)))) {
			return _241ad2a4a_is16((*(_28014_R16)).slice(_28213_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_241ad140b_Range32> *_28710_R32 = &(_27821_rangeTab.get()._field_R32);;
	if ((((*(_28710_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_28710_R32))[0LL]._field_Lo)))) {
		return _241ad2d8b_is32((*(_28710_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _241ad38c5_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_241aca207__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _241ad362d_isExcludingLatin(_242ca63b0_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _242ea857e_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _242ea745c_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_242ea79e0_acceptRange _1969_accept = _242ea7ced_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _242ea889d_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _242ea745c_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_242ea79e0_acceptRange _2439_accept = _242ea7ced_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _242ea8b45_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_242eaa51a_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1e79a1754;
			};
		}
	_iter_next_1e79a1754:;
	}
	_iter_end_1e79a1754:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _242ea857e_DecodeRune(_27619_p.slice(_28113_start, _2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _242ea98e3_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _242ea9c34_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _242ea9c34_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1e79b4e71:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1e79b6b76:;
			{
				_41242_r=128LL;
				goto _case_begin_1e79b52b2;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1e79b52b2:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1e79b4822:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1e79b47bc:;
	};
}



inline jule::I64 _242eaa273_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1e79c01bd;
			};
			jule::U8 _48213_x = _242ea745c_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1e79c01bd;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1e79c01bd;
			};
			_242ea79e0_acceptRange _49213_accept = _242ea7ced_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1e79c01bd:;
	}
	_iter_end_1e79c01bd:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _242eaa51a_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::Slice<jule::U8> _242ecb607_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline void _242ed1be5_PushToStrBuffer(jule::Str* _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		((*(_2825_s))).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline jule::I64 _242ed20ad_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e79e7943:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1e79e7943:;
			++it;
			_399_i++;
			goto _iter_begin_1e79e7943;
		}
		_iter_end_1e79e7943:;
	};
	return -1LL;;
}



inline jule::I64 _242ed21e0_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	jule::U8* _519_first = (&(_5017_s[0LL]));;
	jule::U8* _5213_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5213_it >= _519_first); (_5213_it)--) {
		{
			{
				if (((*(_5213_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_5213_it - _519_first))));;
				};
			};
		}
	_iter_next_1e79e9d30:;
	}
	_iter_end_1e79e9d30:;;
	return -1LL;;
}



inline jule::I64 _242ed2322_FindByteStr(jule::Str* _6417_s, jule::U8 _6425_b) {
	return static_cast<jule::I64>(_242ed20ad_FindByte(_242ecb607_Stobs(_6417_s), _6425_b));;
}



inline jule::I64 _242ed2465_FindLastByteStr(jule::Str* _6921_s, jule::U8 _6929_b) {
	return static_cast<jule::I64>(_242ed21e0_FindLastByte(_242ecb607_Stobs(_6921_s), _6929_b));;
}



inline jule::Str _242eaebe5_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_1e7a0db68:;
	}
	_iter_end_1e7a0db68:;;
	return _2013_ss;;
}



inline jule::Bool _242eb30a0_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I64 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < (*(_2724_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_3213_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_3213_i])) {
				return false;;
			};
		}
	_iter_next_1e7a11bc1:;
	}
	_iter_end_1e7a11bc1:;;
	return true;;
}



inline jule::Bool _242eae332_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _242eb30a0_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _242ed25ca_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I64 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>(((*(_4615_s)).len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < (*(_4624_sub)).len()); (_5213_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _5213_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1e7a13be5:;
	}
	_iter_end_1e7a13be5:;;
	return true;;
}



inline jule::Bool _242ed2883_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _242ed25ca_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I64 _242ed2c6d_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_242eb30a0_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1e7a17cc6:;
	}
	_iter_end_1e7a17cc6:;;
	return -1LL;;
}



inline jule::I64 _242ed35a9_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10017_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1e7a1a328;
					};
				}
			_iter_next_1e7a1ba88:;
			}
			_iter_end_1e7a1ba88:;;
			return _9413_j;;
		}
	_iter_next_1e7a1a328:;
	}
	_iter_end_1e7a1a328:;;
	return -1LL;;
}



inline jule::I64 _242ed3961_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_242ed35a9_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _242ed9e84_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < (*(_17114_s)).len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I64 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _242ea857e_DecodeRune((*(_17114_s)).slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1e7a24486:;
	}
	_iter_end_1e7a24486:;;
	return -1LL;;
}



inline jule::I64 _242eda7c0_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_242ed2465_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I64 _242edb5d4_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _242ecb607_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _23013_rb = _242ecb607_Stobs(&(_22820_runes));;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I64 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _242ea857e_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_242ed9e84_findRune(&(_23013_rb), _23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1e7a29c1c:;
	}
	_iter_end_1e7a29c1c:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _242edbd10_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _242ed2c6d_FindAt(_26210_s, _26218_sub, _27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1e7a3111e;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i, _27613_j));;
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1e7a3111e:;
	}
	_iter_end_1e7a3111e:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;;
}



inline jule::Bool _242edc151_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_242ed2c6d_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _242edcb24_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_242edb5d4_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I64 _242edce65_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _242ed2c6d_FindAt(_31210_s, _31218_sub, _31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1e7a366c9;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1e7a366c9:;
	}
	_iter_end_1e7a366c9:;;
	return _31613_n;;
}



inline jule::Str _242edd3e9_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I64 _3379_m = _242edce65_Count(_33212_s, _33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _242ed2c6d_FindAt(_33212_s, _33220_sub, _34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1e7a3a502;
			};
			_34513_ss+=_33212_s.slice(_34613_i, _34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1e7a3a502:;
	}
	_iter_end_1e7a3a502:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _242eda45c_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < (*(_38818_s)).len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I64 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _242ea857e_DecodeRune((*(_38818_s)).slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_242ed9e84_findRune(_38830_cutset, _39114_r) == -1LL)) {
				(*(_38818_s))=(*(_38818_s)).slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1e7a3d11a:;
	}
	_iter_end_1e7a3d11a:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _242ede4a5_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _242ecb607_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4059_bcutset = _242ecb607_Stobs(&(_40321_cutset));;
	_242eda45c_trimLeft(&(_40413_bytes), &(_4059_bcutset));
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _242ede75d_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I64 _41113_i = (*(_41019_s)).len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I64 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _242ea8b45_DecodeLastRune((*(_41019_s)).slice(0LL, _41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_242ed9e84_findRune(_41031_cutset, _41314_r) == -1LL)) {
				(*(_41019_s))=(*(_41019_s)).slice(0LL, _41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1e7a4277e:;
	}
	_iter_end_1e7a4277e:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _242edede0_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _242ecb607_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4369_bcutset = _242ecb607_Stobs(&(_43417_cutset));;
	_242eda45c_trimLeft(&(_43513_bytes), &(_4369_bcutset));
	_242ede75d_trimRight(&(_43513_bytes), &(_4369_bcutset));
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Str _242ee0231_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1e7a47179:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1e7a471e0:;
			{
				return _4449_parts[0LL];;
			}
		}
		_match_end_1e7a46d16:;
	};
	jule::Str _45113_s = _4449_parts[0LL];;
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1e7a48246:;
		if (it != expr_end) {
			jule::Str *_45212_part = it;
			{
				_45113_s+=_44423_sep;
				_45113_s+=(*(_45212_part));
			}
			_iter_next_1e7a48246:;
			++it;
			goto _iter_begin_1e7a48246;
		}
		_iter_end_1e7a48246:;
	};
	return _45113_s;;
}



inline jule::Str _2412e0e29_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _242ee07d6_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _242ee0572_IsPathSep(_1099_originalPath[0LL])) && _242ee0572_IsPathSep(_1099_originalPath[1LL]))) {
			return _241310762_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _242ee0572_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_2412bba4d_lazyBuff _12713_out = _2412bba4d_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0;;
	jule::I64 _13221_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_2412ca7e8_append(&_12713_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_242ee0572_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1e7a56d15:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _242ee0572_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1e7a59983:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _242ee0572_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1e7a599e9:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1e7a5c8cb:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_242ee0572_IsPathSep(static_cast<jule::U8>(_2412c7ebb_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1e7a5d1e5:;
									}
									_iter_end_1e7a5d1e5:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1e7a5c942:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_2412ca7e8_append(&_12713_out, 47LLU);
									};
									_2412ca7e8_append(&_12713_out, '.');
									_2412ca7e8_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1e7a5c546:;
						};
					}
				}
				else {
					_case_begin_1e7a552ca:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_2412ca7e8_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_242ee0572_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_2412ca7e8_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1e7a567c6:;
						}
						_iter_end_1e7a567c6:;;
					}
				}
				_match_end_1e7a55099:;
			};
		}
	_iter_next_1e7a55231:;
	}
	_iter_end_1e7a55231:;;
	if ((_12713_out._field_w == 0LL)) {
		_2412ca7e8_append(&_12713_out, '.');
	};
	return _241310762_FromSlash(_2412cc124_string(&_12713_out));;
}



inline jule::Str _241310762_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;;
	};
}



inline jule::Str _241312d08_Join(jule::Slice<jule::Str> _2259_elem) {
	return _242ee0a4a_join(_2259_elem);;
}



inline jule::Str _2413142c1_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_242ee0572_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_1e7a61d75:;
	}
	_iter_end_1e7a61d75:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _2412cc531_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _242ee0918_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _2412e85c4_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _242ee0572_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL, (_25413_path.len() - 1LL));;
		}
	_iter_next_1e7a64471:;
	}
	_iter_end_1e7a64471:;;
	(_25413_path).mut_slice(_2412bbc3a_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_242ee0572_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1e7a65c8b:;
	}
	_iter_end_1e7a65c8b:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(47LL);;
	};
	return _25413_path;;
}



inline jule::Str _241316867_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _2412bbc3a_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_242ee0572_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1e7a680ac:;
	}
	_iter_end_1e7a680ac:;;
	jule::Str _2919_dir = _2412e0e29_Clean(_2858_path.slice(_2869_vol.len(), (_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _2412bbc3a_VolumeName(jule::Str _30315_path) {
	return _241310762_FromSlash(_30315_path.slice(0LL, _242ee07d6_volumeNameLen(_30315_path)));;
}



inline jule::Bool _242ee0572_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _242ee06a4_IsAbs(jule::Str _5310_path) {
	return _242eae332_HasPrefix(_5310_path, jule::Str("/", 1));;
}



inline jule::I64 _242ee07d6_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _242ee0918_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_242ee06a4_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _2412e0e29_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _679_wd = ({
		auto except = _241283592_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _242ee0a4a_join(jule::Slice<jule::Str>::make({_679_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _242ee0a4a_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7a76917:;
		if (it != expr_end) {
			jule::I64 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if ((!((*(_7412_e)).empty()))) {
					return _2412e0e29_Clean(_242ee0231_Join(_739_elem.slice(_749_i), static_cast<jule::Str>(47LL)));;
				};
			}
			_iter_next_1e7a76917:;
			++it;
			_749_i++;
			goto _iter_begin_1e7a76917;
		}
		_iter_end_1e7a76917:;
	};
	return jule::Str();;
}



inline jule::I64 _24040ebb4_getLastFsError(void) {
	jule::I64 _729_err = _2403d57b1_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1e7a8499c:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1e7a83e30:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1e7a84392:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1e7a84408:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1e7a8446e:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1e7a844d5:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_1e7a84abd:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1e7a84b34:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1e7a84b9a:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1e7a84c11:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1e7a84c88:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1e7a84d10:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1e7a84d87:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1e7a84e0e:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1e7a84e86:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_1e7a8500d:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1e7a85085:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1e7a8510c:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1e7a85184:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_1e7a8520b:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1e7a85283:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1e7a8530a:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1e7a85382:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1e7a85409:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1e7a85481:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_1e7a85508:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_1e7a85580:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_1e7a85607:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1e7a841e9:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1e7a84194:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _242d3dc61_AtoiBp(jule::U8* _922_b, jule::I64 _936_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _1013_neg = ((*(_922_b)) == '-');;
	if (_1013_neg) {
		if ((_936_n == 1LL)) {
			return __jule_func_result;;
		};
		(_936_n)--;
		(_922_b)++;
	};
	for (; (_936_n > 0LL); (_936_n)--) {
		{
			if ((('0' <= (*(_922_b))) && ((*(_922_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>(((*(_922_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_922_b)++;
		}
	_iter_next_1e7aa8471:;
	}
	_iter_end_1e7aa8471:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_1013_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::I64>((-(__jule_func_result.__jule_result_arg0)));
	};
	return __jule_func_result;;
}



inline jule::Str _242d72c0c_Itoa(jule::I64 _69_x) {
	if ((_69_x < 0LL)) {
		return (jule::Str("-", 1) + _242d72ee8_Utoa(static_cast<jule::U64>(static_cast<jule::U64>((-(_69_x))))));;
	};
	return _242d72ee8_Utoa(static_cast<jule::U64>(static_cast<jule::U64>(_69_x)));;
}



inline jule::Str _242d72ee8_Utoa(jule::U64 _1413_x) {
	if ((_1413_x == 0LLU)) {
		return jule::Str("0", 1);;
	};
	jule::Str _1813_buf = jule::Str::alloc(20LL);;
	jule::I64 _1913_i = (_1813_buf.len() - 1LL);;
	while ((_1413_x >= 10LLU)) {
		{
			jule::U64 _2113_q = (_1413_x / 10LLU);;
			_1813_buf[_1913_i]=static_cast<jule::U8>(static_cast<jule::U8>((('0' + _1413_x) - (_2113_q * 10LLU))));
			(_1913_i)--;
			_1413_x=_2113_q;
		}
	_iter_next_1e7ab1ed5:;
	}
	_iter_end_1e7ab1ed5:;;
	_1813_buf[_1913_i]=static_cast<jule::U8>(static_cast<jule::U8>(('0' + _1413_x)));
	(_1813_buf).mut_slice(_1913_i);;
	return _1813_buf;;
}



inline jule::Slice<char*> _242d754b2_strSliceToCstrSlice(jule::Slice<jule::Str>* _3625_s) {
	jule::Slice<char*> _3713_cs = jule::Slice<char*>::alloc(((*(_3625_s)).len() + 1LL), ((*(_3625_s)).len() + 1LL), nullptr);;
	{
		auto expr = _3625_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7ad1d90:;
		if (it != expr_end) {
			jule::I64 _389_i = it - expr->begin();
			{
				_3713_cs[_389_i]=((char*)((&((*(_3625_s))[_389_i][0LL]))));
			}
			_iter_next_1e7ad1d90:;
			++it;
			_389_i++;
			goto _iter_begin_1e7ad1d90;
		}
		_iter_end_1e7ad1d90:;
	};
	_3713_cs[(_3713_cs.len() - 1LL)]=nullptr;
	return _3713_cs;;
}



inline jule::I64 _242d75803_execvp(jule::Str* _4512_file, jule::Slice<jule::Str>* _4524_argv) {
	jule::Slice<char*> _469_cargv = _242d754b2_strSliceToCstrSlice(_4524_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&((*(_4512_file))[0LL])))), (char*const*)(&(_469_cargv[0LL]))));;
	};
}



inline jule::VoidExceptional _242d75a12_setenv(jule::Slice<jule::Str>* _5212_envv) {
	;
	{
		auto expr = _5212_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7ad4e70:;
		if (it != expr_end) {
			jule::Str *_5412_env = it;
			{
				jule::I64 _5513_i = _242ed2322_FindByteStr(_5412_env, '=');;
				if ((_5513_i == -1LL)) {
					return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type131));
				};
				{
					jule::Str _6017_key = (*(_5412_env)).slice(0LL, _5513_i);;
					if ((((*(_5412_env)).len() - _5513_i) == 1LL)) {
						jule::Str _6221_val = jule::Str("\x00", 1);;
						if ((setenv(((char*)((&(_6017_key[0LL])))), ((char*)((&(_6221_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type131));
						};
					} else {
						jule::Str _6721_val = (*(_5412_env)).slice((_5513_i + 1LL));;
						if ((setenv(((char*)((&(_6017_key[0LL])))), ((char*)((&(_6721_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type131));
						};
					};
				};
			}
			_iter_next_1e7ad4e70:;
			++it;
			goto _iter_begin_1e7ad4e70;
		}
		_iter_end_1e7ad4e70:;
	};
	return jule::VoidExceptional();
}



inline jule::I64 _242d768c0_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1e7ad9b89:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1e7ad537c:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1e7ad65d1:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1e7adb00e:;
	};
}



inline jule::I64 _242d76b12_getLastProcessError(void) {
	return _242d768c0_processErrorFromCode(static_cast<jule::I64>(_2403d57b1_GetLastErrno()));;
}



inline void _242d773b5_Exit(jule::I64 _129_code) {
	_2411de6a7_Exit(_129_code);
}



inline jule::Str _242d775b3_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _2430523d6_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _243052606_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_240374145_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7b1cd98:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1e7b1cd98:;
			++it;
			goto _iter_begin_1e7b1cd98;
		}
		_iter_end_1e7b1cd98:;
	};
	return false;;
}



inline jule::Bool _24305289d_IsValidCppExt(jule::Str _4118_ext) {
	if ((_4118_ext == jule::Str(".c", 2))) {
		return true;;
	};
	{
		auto expr = &(_24305068c_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7b1d706:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1e7b1d706:;
			++it;
			goto _iter_begin_1e7b1d706;
		}
		_iter_end_1e7b1d706:;
	};
	{
		auto expr = &(_2430522d7_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7b1ea15:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1e7b1ea15:;
			++it;
			goto _iter_begin_1e7b1ea15;
		}
		_iter_end_1e7b1ea15:;
	};
	return false;;
}



inline jule::Str _24305e8ee_Logf(jule::Str _3009_fmt, jule::Slice<jule::Any> _30022_args) {
	return _243060317_applyFmt(_3009_fmt, _30022_args);;
}



inline jule::Str _24305ebda_argToStr(jule::Any _30413_arg) {
	{
		auto &_match_expr{ _30413_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1e7b20e67:;
			{
				return _30413_arg.cast<jule::Str>(&__jule_any_type5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1e7b20ecd:;
			{
				return static_cast<jule::Str>(_30413_arg.cast<jule::U8>(&__jule_any_type133));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1e7b20c58:;
			{
				return static_cast<jule::Str>(_30413_arg.cast<jule::I32>(&__jule_any_type1));;
			}
		}
		else {
			_case_begin_1e7b20829:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1e7b2063c:;
	};
}



inline jule::I64 _24305ee82_findNextFmt(jule::Str _31716_fmt) {
	{
		auto expr = &(_31716_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7b21693:;
		if (it != expr_end) {
			jule::I64 _3189_i = it - expr->begin();
			jule::U8 *_31812_b = it;
			{
				if (((*(_31812_b)) == '@')) {
					return _3189_i;;
				};
			}
			_iter_next_1e7b21693:;
			++it;
			_3189_i++;
			goto _iter_begin_1e7b21693;
		}
		_iter_end_1e7b21693:;
	};
	return -1LL;;
}



inline jule::Str _243060317_applyFmt(jule::Str _32617_fmt, jule::Slice<jule::Any> _32627_args) {
	jule::Str _32713_s = jule::Str();;
	{
		auto expr = &(_32627_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7b23398:;
		if (it != expr_end) {
			jule::Any *_32812_arg = it;
			{
				jule::I64 _32913_i = _24305ee82_findNextFmt(_32617_fmt);;
				if ((_32913_i == -1LL)) {
					goto _iter_end_1e7b23398;
				};
				_32713_s+=_32617_fmt.slice(0LL, _32913_i);
				_32713_s+=_24305ebda_argToStr((*(_32812_arg)));
				(_32617_fmt).mut_slice((_32913_i + 1LL));;
			}
			_iter_next_1e7b23398:;
			++it;
			goto _iter_begin_1e7b23398;
		}
		_iter_end_1e7b23398:;
	};
	_32713_s+=_32617_fmt;
	return _32713_s;;
}



inline jule::Bool _243061390_IsTopDirective(jule::Str _2819_directive) {
	return ((_2819_directive == jule::Str("pass", 4)) || (_2819_directive == jule::Str("build", 5)));;
}



inline jule::Bool _2430627c0_IsWindows(jule::Str _3714_os) {
	return (_3714_os == jule::Str("windows", 7));;
}



inline jule::Bool _243062a78_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == jule::Str("darwin", 6));;
}



inline jule::Bool _243062d20_IsLinux(jule::Str _4312_os) {
	return (_4312_os == jule::Str("linux", 5));;
}



inline jule::Bool _24306313e_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == jule::Str("i386", 4));;
}



inline jule::Bool _2430633d6_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == jule::Str("amd64", 5));;
}



inline jule::Bool _24306367d_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == jule::Str("arm64", 5));;
}



inline jule::Bool _243063925_IsUnix(jule::Str _5511_os) {
	return (_243062a78_IsDarwin(_5511_os) || _243062d20_IsLinux(_5511_os));;
}



inline jule::Bool _243063c99_Is32Bit(jule::Str _5812_arch) {
	return _24306313e_IsI386(_5812_arch);;
}



inline jule::Bool _243064041_Is64Bit(jule::Str _6112_arch) {
	return (_2430633d6_IsAmd64(_6112_arch) || _24306367d_IsArm64(_6112_arch));;
}



inline void _242d3763e_init(void) {
	jule::Str _2513_path = _242d775b3_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_242d176b8_PathWd=({
			auto except = _241283592_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_242d17212_PathExec=_241316867_Dir(_2513_path);
		_242d165c9_PathStdlib=_241312d08_Join(jule::Slice<jule::Str>::make({_242d17212_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_242d3ae4a_PathApi=_241312d08_Join(jule::Slice<jule::Str>::make({_242d17212_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _20d155ca0_IsUnaryOp(jule::Str _31214_kind) {
	{
		auto expr = &(_20d0a99d4_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7b6c315:;
		if (it != expr_end) {
			jule::Str *_31312_op = it;
			{
				if ((_31214_kind == (*(_31312_op)))) {
					return true;;
				};
			}
			_iter_next_1e7b6c315:;
			++it;
			goto _iter_begin_1e7b6c315;
		}
		_iter_end_1e7b6c315:;
	};
	return false;;
}



inline jule::Bool _20d15608b_IsBinOp(jule::Str _32212_kind) {
	{
		auto expr = &(_20d0a9d14_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7b6c7aa:;
		if (it != expr_end) {
			jule::Str *_32312_op = it;
			{
				if ((_32212_kind == (*(_32312_op)))) {
					return true;;
				};
			}
			_iter_next_1e7b6c7aa:;
			++it;
			goto _iter_begin_1e7b6c7aa;
		}
		_iter_end_1e7b6c7aa:;
	};
	return false;;
}



inline jule::Bool _20d156652_IsStr(jule::Str _34210_k) {
	return ((!(_34210_k.empty())) && ((_34210_k[0LL] == '\"') || _20d1568e9_IsRawStr(_34210_k)));;
}



inline jule::Bool _20d1568e9_IsRawStr(jule::Str _34513_k) {
	return ((!(_34513_k.empty())) && (_34513_k[0LL] == '`'));;
}



inline jule::Bool _20d156b91_IsRune(jule::Str _34911_k) {
	return ((!(_34911_k.empty())) && (_34911_k[0LL] == '\''));;
}



inline jule::Bool _20d1572ac_IsBool(jule::Str _35511_k) {
	return ((_35511_k == jule::Str("true", 4)) || (_35511_k == jule::Str("false", 5)));;
}



inline jule::Bool _20d157554_IsFloat(jule::Str _35812_k) {
	if (_242eae332_HasPrefix(_35812_k, jule::Str("0x", 2))) {
		return _242edcb24_ContainsAny(_35812_k, jule::Str(".pP", 3));;
	};
	return _242edcb24_ContainsAny(_35812_k, jule::Str(".eE", 3));;
}



inline jule::Bool _20d1577eb_IsNum(jule::Str _36610_k) {
	if (_36610_k.empty()) {
		return false;;
	};
	jule::U8 _3719_b = _36610_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));;
}



inline jule::Bool _20d157d3a_IsIgnoreIdent(jule::Str _38118_ident) {
	return (_38118_ident == jule::Str("_", 1));;
}



inline jule::Bool _20d1580d2_IsAnonIdent(jule::Str _38416_ident) {
	return (_38416_ident == jule::Str("<anonymous>", 11));;
}



inline jule::Bool _20d158621_IsSpace(jule::I32 _39712_r) {
	{
		auto expr = &(_20d0a97b4_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7b7620e:;
		if (it != expr_end) {
			jule::I32 *_39812_cr = it;
			{
				if ((_39712_r == (*(_39812_cr)))) {
					return true;;
				};
			}
			_iter_next_1e7b7620e:;
			++it;
			goto _iter_begin_1e7b7620e;
		}
		_iter_end_1e7b7620e:;
	};
	return false;;
}



inline jule::Bool _20d158a72_IsLetter(jule::I32 _40713_r) {
	return _242c90d17_IsLetter(_40713_r);;
}



inline jule::Bool _20d1590b1_IsDecimal(jule::U8 _42714_b) {
	return (('0' <= _42714_b) && (_42714_b <= '9'));;
}



inline jule::Bool _20d159358_IsBinary(jule::U8 _43013_b) {
	return ((_43013_b == '0') || (_43013_b == '1'));;
}



inline jule::Bool _20d159600_IsOctal(jule::U8 _43312_b) {
	return (('0' <= _43312_b) && (_43312_b <= '7'));;
}



inline jule::Bool _20d159897_IsHex(jule::U8 _43610_b) {
	{
		
		if ((('0' <= _43610_b) && (_43610_b <= '9'))) {
			_case_begin_1e7b7aec2:;
			{
				return true;;
			}
		}
		else if ((('a' <= _43610_b) && (_43610_b <= 'f'))) {
			_case_begin_1e7b7a7eb:;
			{
				return true;;
			}
		}
		else if ((('A' <= _43610_b) && (_43610_b <= 'F'))) {
			_case_begin_1e7b7a862:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e7b7a785:;
			{
				return false;;
			}
		}
		_match_end_1e7b7a6b9:;
	};
}



inline jule::Bool _20d159b3e_IsAssign(jule::U64 _45113_id) {
	return (((((((_45113_id == static_cast<jule::U64>(2LLU)) || (_45113_id == static_cast<jule::U64>(30LLU))) || (_45113_id == static_cast<jule::U64>(33LLU))) || (_45113_id == static_cast<jule::U64>(20LLU))) || (_45113_id == static_cast<jule::U64>(27LLU))) || (_45113_id == static_cast<jule::U64>(3LLU))) || (_45113_id == static_cast<jule::U64>(7LLU)));;
}



inline jule::Bool _20d159dd6_IsPostfixOp(jule::Str _46216_kind) {
	{
		auto expr = &(_20d14ea9b_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7b7e327:;
		if (it != expr_end) {
			jule::Str *_46312_op = it;
			{
				if ((_46216_kind == (*(_46312_op)))) {
					return true;;
				};
			}
			_iter_next_1e7b7e327:;
			++it;
			goto _iter_begin_1e7b7e327;
		}
		_iter_end_1e7b7e327:;
	};
	return false;;
}



inline jule::Bool _20d15a17d_IsAssignOp(jule::Str _47215_kind) {
	if (_20d159dd6_IsPostfixOp(_47215_kind)) {
		return true;;
	};
	{
		auto expr = &(_20d14ed98_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7b80526:;
		if (it != expr_end) {
			jule::Str *_47612_op = it;
			{
				if ((_47215_kind == (*(_47612_op)))) {
					return true;;
				};
			}
			_iter_next_1e7b80526:;
			++it;
			goto _iter_begin_1e7b80526;
		}
		_iter_end_1e7b80526:;
	};
	return false;;
}



inline jule::Ptr<_20d15a931_File> _20d15be60_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_20d15a931_File>(_20d15a931_File{._field_Path=_6315_path, });;
}



inline _24305e4ae_Log _20d15d703_makeErr(jule::I64 _11112_row, jule::I64 _11122_col, jule::Ptr<_20d15a931_File>* _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _24305e4ae_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=(*(_11133_f)).get()._field_Path, ._field_Text=_24305e8ee_Logf(_11143_fmt, _11156_args), };;
}



inline jule::Bool _20d15da88_bytesHasPrefix(jule::Slice<jule::U8>* _12120_bytes, jule::Str _12135_prefix) {
	if (((*(_12120_bytes)).len() < _12135_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_12135_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e7b89d9e:;
		if (it != expr_end) {
			jule::I64 _1259_i = it - expr->begin();
			{
				if (((*(_12120_bytes))[_1259_i] != _12135_prefix[_1259_i])) {
					return false;;
				};
			}
			_iter_next_1e7b89d9e:;
			++it;
			_1259_i++;
			goto _iter_begin_1e7b89d9e;
		}
		_iter_end_1e7b89d9e:;
	};
	return true;;
}



inline jule::Str _20d15ddc9_floatFmtE(jule::Slice<jule::U8>* _13315_txt, jule::I64 _13332_i) {
	jule::Str __jule_func_result;
	(_13332_i)++;
	if ((_13332_i >= (*(_13315_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _13913_b = (*(_13315_txt))[_13332_i];;
	if ((_13913_b == '_')) {
		return __jule_func_result;;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= (*(_13315_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_13315_txt))[_13332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1539_first = _13332_i;;
	for (; (_13332_i < (*(_13315_txt)).len()); (_13332_i)++) {
		{
			_13913_b=(*(_13315_txt))[_13332_i];
			if (((_13913_b != '_') && (!(_20d1590b1_IsDecimal(_13913_b))))) {
				goto _iter_end_1e7b8d7cb;
			};
		}
	_iter_next_1e7b8d7cb:;
	}
	_iter_end_1e7b8d7cb:;;
	if ((_13332_i == _1539_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_13315_txt)).slice(0LL, _13332_i));
	return __jule_func_result;;
}



inline jule::Str _20d15e25e_floatFmtP(jule::Slice<jule::U8>* _16715_txt, jule::I64 _16728_i) {
	return _20d15ddc9_floatFmtE(_16715_txt, _16728_i);;
}



inline jule::Str _20d15e5a0_floatFmtDotnp(jule::Slice<jule::U8>* _17119_txt, jule::I64 _17136_i) {
	if (((*(_17119_txt))[_17136_i] != '.')) {
		return jule::Str();;
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < (*(_17119_txt)).len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = (*(_17119_txt))[_17136_i];;
			{
				
				if ((_17913_b == '_') || _20d1590b1_IsDecimal(_17913_b)) {
					_case_begin_1e7b91636:;
					{
						goto _iter_next_1e7b909cb;
					}
				}
				else if (_20d160d54_isFloatFmtP(_17913_b, _17136_i)) {
					_case_begin_1e7b9169c:;
					{
						return _20d15e25e_floatFmtP(_17119_txt, _17136_i);;
					}
				}
				else {
					_case_begin_1e7b915c0:;
					{
						goto _iter_end_1e7b909cb;
					}
				}
				_match_end_1e7b91559:;
			};
		}
	_iter_next_1e7b909cb:;
	}
	_iter_end_1e7b909cb:;;
	return jule::Str();;
}



inline jule::Str _20d15e8e1_floatFmtDotfp(jule::Slice<jule::U8>* _19219_txt, jule::I64 _19236_i) {
	_19236_i+=2LL;
	return _20d15ddc9_floatFmtE(_19219_txt, _19236_i);;
}



inline jule::Str _20d15ec32_floatFmtDotp(jule::Slice<jule::U8>* _19718_txt, jule::I64 _19735_i) {
	(_19735_i)++;
	return _20d15ddc9_floatFmtE(_19718_txt, _19735_i);;
}



inline jule::Str _20d160183_floatNum(jule::Slice<jule::U8>* _20214_txt, jule::I64 _20231_i) {
	jule::Str __jule_func_result;
	(_20231_i)++;
	if ((_20231_i >= (*(_20214_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_20214_txt)));
		return __jule_func_result;;
	};
	if (((*(_20214_txt))[_20231_i] == '_')) {
		(_20231_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_20214_txt)).slice(0LL, _20231_i));
		return __jule_func_result;;
	};
	for (; (_20231_i < (*(_20214_txt)).len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = (*(_20214_txt))[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				__jule_func_result = _20d15ddc9_floatFmtE(_20214_txt, _20231_i);
				return __jule_func_result;;
			};
			if (((_21213_b != '_') && (!(_20d1590b1_IsDecimal(_21213_b))))) {
				goto _iter_end_1e7b93eb8;
			};
		}
	_iter_next_1e7b93eb8:;
	}
	_iter_end_1e7b93eb8:;;
	if ((_20231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_20214_txt)).slice(0LL, _20231_i));
	return __jule_func_result;;
}



inline jule::Str _20d16042a_commonNum(jule::Slice<jule::U8>* _22715_txt) {
	jule::Str __jule_func_result;
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < (*(_22715_txt)).len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = (*(_22715_txt))[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1e7b97e34:;
					{
						__jule_func_result = _20d160183_floatNum(_22715_txt, _22813_i);
						return __jule_func_result;;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1e7b97eab:;
					{
						goto _iter_next_1e7b97241;
					}
				}
				else if (_20d160a13_isFloatFmtE(_23113_b, _22813_i)) {
					_case_begin_1e7b98033:;
					{
						__jule_func_result = _20d15ddc9_floatFmtE(_22715_txt, _22813_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_20d1590b1_IsDecimal(_23113_b)))) {
					_case_begin_1e7b980aa:;
					{
						goto _iter_end_1e7b97241;
					}
				}
				_match_end_1e7b97d57:;
			};
		}
	_iter_next_1e7b97241:;
	}
	_iter_end_1e7b97241:;;
	if ((_22813_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_22715_txt)).slice(0LL, _22813_i));
	return __jule_func_result;;
}



inline jule::Str _20d1606c2_binaryNum(jule::Slice<jule::U8>* _25015_txt) {
	jule::Str __jule_func_result;
	if ((!(_20d15da88_bytesHasPrefix(_25015_txt, jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_25015_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < (*(_25015_txt)).len()); (_25913_i)++) {
		{
			if ((((*(_25015_txt))[_25913_i] != '_') && (!(_20d159358_IsBinary((*(_25015_txt))[_25913_i]))))) {
				goto _iter_end_1e7b9983c;
			};
		}
	_iter_next_1e7b9983c:;
	}
	_iter_end_1e7b9983c:;;
	if ((_25913_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_25015_txt)).slice(0LL, _25913_i));
	return __jule_func_result;;
}



inline jule::Bool _20d160a13_isFloatFmtE(jule::U8 _27216_b, jule::I64 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));;
}



inline jule::Bool _20d160d54_isFloatFmtP(jule::U8 _27616_b, jule::I64 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));;
}



inline jule::Bool _20d161195_isFloatFmtDotnp(jule::Slice<jule::U8>* _28021_txt, jule::I64 _28038_i) {
	if (((*(_28021_txt))[_28038_i] != '.')) {
		return false;;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < (*(_28021_txt)).len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = (*(_28021_txt))[_28038_i];;
			{
				
				if ((_28713_b == '_') || _20d1590b1_IsDecimal(_28713_b)) {
					_case_begin_1e7ba0766:;
					{
						goto _iter_next_1e7b9e578;
					}
				}
				else if (_20d160d54_isFloatFmtP(_28713_b, _28038_i)) {
					_case_begin_1e7ba07cc:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1e7ba0700:;
					{
						goto _iter_end_1e7b9e578;
					}
				}
				_match_end_1e7ba0689:;
			};
		}
	_iter_next_1e7b9e578:;
	}
	_iter_end_1e7b9e578:;;
	return false;;
}



inline jule::Bool _20d1614d6_isFloatFmtDotp(jule::Slice<jule::U8>* _30120_txt, jule::I64 _30133_i) {
	{
		
		if (((*(_30120_txt)).len() < 3LL)) {
			_case_begin_1e7ba245a:;
			{
				goto _case_begin_1e7ba1c84;
			}
		}
		else if (((*(_30120_txt))[_30133_i] != '.')) {
			_case_begin_1e7ba1c84:;
			{
				goto _case_begin_1e7ba1cea;
			}
		}
		else if ((((*(_30120_txt))[(_30133_i + 1LL)] != 'p') && ((*(_30120_txt))[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_1e7ba1cea:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1e7ba1c1d:;
			{
				return true;;
			}
		}
		_match_end_1e7ba1b52:;
	};
}



inline jule::Bool _20d161827_isFloatFmtDotfp(jule::Slice<jule::U8>* _31421_txt, jule::I64 _31434_i) {
	{
		
		if (((*(_31421_txt)).len() < 4LL)) {
			_case_begin_1e7ba4759:;
			{
				goto _case_begin_1e7ba4094;
			}
		}
		else if (((*(_31421_txt))[_31434_i] != '.')) {
			_case_begin_1e7ba4094:;
			{
				goto _case_begin_1e7ba410a;
			}
		}
		else if ((((*(_31421_txt))[(_31434_i + 1LL)] != 'f') && ((*(_31421_txt))[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_1e7ba410a:;
			{
				goto _case_begin_1e7ba4171;
			}
		}
		else if ((((*(_31421_txt))[(_31434_i + 2LL)] != 'p') && ((*(_31421_txt))[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_1e7ba4171:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1e7ba3b32:;
			{
				return true;;
			}
		}
		_match_end_1e7ba3a66:;
	};
}



inline jule::Str _20d161c78_octalNum(jule::Slice<jule::U8>* _32914_txt) {
	jule::Str __jule_func_result;
	if (((*(_32914_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_32914_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if (((*(_32914_txt))[1LL] == 'o')) {
		if (((*(_32914_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octalStart;;
	for (; (_34813_i < (*(_32914_txt)).len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = (*(_32914_txt))[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _20d160183_floatNum(_32914_txt, _34813_i);
				return __jule_func_result;;
			};
			if (_20d160a13_isFloatFmtE(_35013_b, _34813_i)) {
				__jule_func_result = _20d15ddc9_floatFmtE(_32914_txt, _34813_i);
				return __jule_func_result;;
			};
			if (((_35013_b != '_') && (!(_20d159600_IsOctal(_35013_b))))) {
				goto _iter_end_1e7ba87a2;
			};
		}
	_iter_next_1e7ba87a2:;
	}
	_iter_end_1e7ba87a2:;;
	if ((_34813_i == _33713_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_32914_txt)).slice(0LL, _34813_i));
	return __jule_func_result;;
}



inline jule::Str _20d162020_hexNum(jule::Slice<jule::U8>* _37112_txt) {
	jule::Str __jule_func_result;
	if (((*(_37112_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_37112_txt))[0LL] != '0') || (((*(_37112_txt))[1LL] != 'x') && ((*(_37112_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < (*(_37112_txt)).len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = (*(_37112_txt))[_38013_i];;
			{
				
				if (_20d1614d6_isFloatFmtDotp(_37112_txt, _38013_i)) {
					_case_begin_1e7bae7b9:;
					{
						__jule_func_result = _20d15ec32_floatFmtDotp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_20d161827_isFloatFmtDotfp(_37112_txt, _38013_i)) {
					_case_begin_1e7bae841:;
					{
						__jule_func_result = _20d15e8e1_floatFmtDotfp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_20d160d54_isFloatFmtP(_38313_b, _38013_i)) {
					_case_begin_1e7bae8b8:;
					{
						__jule_func_result = _20d15e25e_floatFmtP(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_20d161195_isFloatFmtDotnp(_37112_txt, _38013_i)) {
					_case_begin_1e7bae940:;
					{
						__jule_func_result = _20d15e5a0_floatFmtDotnp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (((_38313_b != '_') && (!(_20d159897_IsHex(_38313_b))))) {
					_case_begin_1e7bae9b7:;
					{
						goto _iter_end_1e7bada0a;
					}
				}
				_match_end_1e7bae6cb:;
			};
		}
	_iter_next_1e7bada0a:;
	}
	_iter_end_1e7bada0a:;;
	if ((_38013_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_37112_txt)).slice(0LL, _38013_i));
	return __jule_func_result;;
}



inline jule::Str _20d162361_hexEscape(jule::Slice<jule::U8>* _40415_txt, jule::I64 _40428_n) {
	jule::Str __jule_func_result;
	if (((*(_40415_txt)).len() < _40428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_20d159897_IsHex((*(_40415_txt))[_41013_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1e7bb2190:;
	}
	_iter_end_1e7bb2190:;;
	__jule_func_result=static_cast<jule::Str>((*(_40415_txt)).slice(0LL, _40428_n));
	return __jule_func_result;;
}



inline jule::Str _20d162608_bigUnicodePointEscape(jule::Slice<jule::U8>* _42227_txt) {
	return _20d162361_hexEscape(_42227_txt, 10LL);;
}



inline jule::Str _20d1628c2_littleUnicodePointEscape(jule::Slice<jule::U8>* _42730_txt) {
	return _20d162361_hexEscape(_42730_txt, 6LL);;
}



inline jule::Str _20d162a7b_hexByteEscape(jule::Slice<jule::U8>* _43219_txt) {
	return _20d162361_hexEscape(_43219_txt, 4LL);;
}



inline jule::Str _20d162d12_byteEscape(jule::Slice<jule::U8>* _43716_txt) {
	jule::Str __jule_func_result;
	if (((*(_43716_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_20d159600_IsOctal((*(_43716_txt))[1LL]))) || (!(_20d159600_IsOctal((*(_43716_txt))[2LL])))) || (!(_20d159600_IsOctal((*(_43716_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_43716_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_24305e4ae_Log> _20d16780b_Lex(jule::Ptr<_20d15a931_File> _82612_f, jule::I64 _82622_mode) {
	if ((_82612_f == nullptr)) {
		return nullptr;;
	};
	_20d1634e9_lex _83113_lex = _20d1634e9_lex{._field_mode=_82622_mode, ._field_file=_82612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_20d16608a_newLine(&_83113_lex);
	_20d164088_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;;
	};
	_82612_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;;
}



inline jule::I64 _1e53dd1c6_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1e53e5651_Len64(_6119_x)));;
}



inline jule::I64 _1e53de10b_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1e53dec99_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _1e53dea02_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1e53dd7d1__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _1e53dec99_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1e53ddd97__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _1e53e53a9_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _1e53e5651_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1e53e6311_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1e53e7994_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _1e4de310a_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1e4de33e6_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1e4de368d_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1e4de39ac_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1e4de5e98_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1e7de7392:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1e53ec05e_IsInf(_4714_f, 0LL) || _1e53ebcea_IsNaN(_4714_f)) {
			_case_begin_1e7de7419:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1e7de7282:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1e53ec191_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _1e4de368d_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1e4de39ac_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _1e53ebbb8_NaN(void) {
	return static_cast<jule::F64>(_1e4de39ac_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1e53ebcea_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1e53ebe2c_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1e4de39ac_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_1e4de39ac_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1e53ec05e_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1e53ec191_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1e53ed67b_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1e53ed060_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1e53ebcea_IsNaN(_1118_x) || _1e53ec05e_IsInf(_1118_x, 1LL)) {
			_case_begin_1e7e384e3:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1e7e3856a:;
			{
				return static_cast<jule::F64>(_1e53ebbb8_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1e7e385e2:;
			{
				return static_cast<jule::F64>(_1e53ebe2c_Inf(-1LL));;
			}
		}
		_match_end_1e7e38427:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I64 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1e4de5e98_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _1e53ed67b_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1e4de39ac_F64FromBits(static_cast<jule::U64>((_1e4de368d_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1e540242c_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _1e53ed67b_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1e7c54c38:;
		}
		_iter_end_1e7c54c38:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _1e540286c_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I64 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1e4de5e98_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1e53ed060_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _1e4d74476_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_1e54293cc_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1e542b313_max(static_cast<jule::I64>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _1e54293cc_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1e5429003_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1e813e7e8:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1e4de310a_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1e5429003_floatInfo>)((&(_1e4d720ab_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1e813e9c4:;
			{
				_8313_bits=static_cast<jule::U64>(_1e4de368d_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1e5429003_floatInfo>)((&(_1e4d8d616_f64info))));
			}
		}
		else {
			_case_begin_1e813e1cc:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1e813cb9d:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1e81430b0:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1e81454d0:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1e8145678:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1e8144578:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1e81444ac:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1e8143b1b:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1e813ea3a:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1e814305a:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1e542a510_fmtB(_8220_dst, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1e542ab81_fmtX(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	;
	_1e54291e0_decimalSlice _13213_digs = _1e54291e0_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1e5435aae_ryuFtoaShortest(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), &((*(_8413_flt))));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1e8149160:;
				{
					_8258_prec=static_cast<jule::I64>(_1e542b313_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1e81491d7:;
				{
					_8258_prec=static_cast<jule::I64>(_1e542b313_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1e8149270:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1e8148516:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1e814b7a0:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1e814ad54:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1e814b173:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1e814b2a5:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1e5434915_ryuFtoaFixed32(&(_13213_digs), static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)), static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1e5434d55_ryuFtoaFixed64(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1e542950e_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	return _1e5429641_fmtDigits(_8220_dst, _1359_shortest, _969_neg, _13213_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _1e542950e_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1e5429003_floatInfo* _18327_flt) {
	_1e54395a7_decimal _18413_d = _1e54395a7_decimal{};;
	_1e5439981_assign(&_18413_d, _1835_mant);
	_1e5439c06_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>((*(_18327_flt))._field_mantbits))));
	_1e54291e0_decimalSlice _18713_digs = _1e54291e0_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1e5429773_roundShortest(&(_18413_d), _1835_mant, _18316_exp, _18327_flt);
		_18713_digs=_1e54291e0_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1e8151354:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1e8153983:;
				{
					_18233_prec=static_cast<jule::I64>(_1e542b313_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1e8153a3d:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1e8153774:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1e815537a:;
				{
					_1e543a476_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1e8155402:;
				{
					_1e543a476_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1e8155479:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1e543a476_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1e815526a:;
		};
		_18713_digs=_1e54291e0_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1e5429641_fmtDigits(_18216_dst, _1889_shortest, _18255_neg, _18713_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _1e5429641_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1e54291e0_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1e8158a43:;
			{
				return _1e5429971_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1e8158aa9:;
			{
				return _1e5429e05_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1e8158b20:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1e5429971_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1e5429e05_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>(_1e542b313_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1e8158900:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _1e5429773_roundShortest(_1e54395a7_decimal* _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _1e5429003_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_1e54395a7_decimal _28713_upper = _1e54395a7_decimal{};;
	_1e5439981_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1e5439c06_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_1e54395a7_decimal _30613_lower = _1e54395a7_decimal{};;
	_1e5439981_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1e5439c06_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_33513_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_1e8166578;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=(*(_25723_d))._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1e816b627:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1e816b69e:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1e816b726:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1e816b55b:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1e816e905:;
					{
						_1e543a476_round(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1e816e97c:;
					{
						_1e5439e7b_roundDown(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1e816ea04:;
					{
						_1e543a201_roundUp(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1e816e839:;
			};
		}
	_iter_next_1e8166578:;
	}
	_iter_end_1e8166578:;;
}



inline jule::Slice<jule::U8> _1e5429971_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1e54291e0_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1e542aec2_min(_39637_d._field_nd, static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i, _41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1e8174b80:;
		}
		_iter_end_1e8174b80:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1e8176ae9:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1e81769d9:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1e8176742:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1e81766dc:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _1e5429e05_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1e54291e0_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1e542aec2_min(_45137_d._field_nd, _45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL, _45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1e817b3d4:;
		}
		_iter_end_1e817b3d4:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1e817c193:;
		}
		_iter_end_1e817c193:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _1e542a510_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _1e5429003_floatInfo* _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1e543e3ae_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1e543e3ae_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _1e542ab81_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1e5429003_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1e818054d:;
	}
	_iter_end_1e818054d:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1e81885ab:;
		}
		_iter_end_1e81885ab:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1e8189832:;
		}
		_iter_end_1e8189832:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1e542be29_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1e818c945:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1e818c9ab:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1e818c2c4:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1e818c26e:;
	};
	return _50613_dst;;
}



inline jule::I64 _1e542aec2_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I64 _1e542b313_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _1e542be29_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__20e3c3aee_ConvError _1e542c358_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	__jule_tuple_u64__jule_tuple__20e3c3aee_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (_5118_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1e81940ab:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1e8193e8a:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_1e542be29_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1e8195db0:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1e542be29_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1e8195bc3:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1e542be29_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1e8195c39:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1e819582c:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1e8195761:;
					};
				};
			}
		}
		else {
			_case_begin_1e8193297:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1e8193231:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1e819aa96:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1e819a1b1:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1e819a48b:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1e819a315:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1e819a579:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1e819bbda:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1e819a7bb:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto expr = &(_5118_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e819cceb:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1e819be4e:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1e542be29_lower(_10912_c)) && (_1e542be29_lower(_10912_c) <= 'z'))) {
						_case_begin_1e819e13d:;
						{
							_11017_d=static_cast<jule::U8>(((_1e542be29_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1e819dc64:;
						{
							goto _iter_next_1e819cceb;
						}
					}
					else {
						_case_begin_1e819dbed:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1e819db87:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1e819cceb:;
			++it;
			goto _iter_begin_1e819cceb;
		}
		_iter_end_1e819cceb:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1e542c743_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I64 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__20e3c3aee_ConvError __jule_assign_result = _1e542c358_parseUint(_14618_s, _14630_base, _14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type134));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _1e542cba5_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type134));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I64 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__20e3c3aee_ConvError __jule_assign_result = _1e542c358_parseUint(_17217_s, _17225_base, _17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type134));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type134));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type134));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1e542d7bb_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1e4de39ac_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _579_clz = _1e53dd1c6_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1e53e7994_Mul64(_4122_man, _1e542e635_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1e53e7994_Mul64(_4122_man, _1e542e635_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1e4de39ac_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1e542dbb7_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1e4de33e6_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1329_clz = _1e53dd1c6_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1e53e7994_Mul64(_11022_man, _1e542e635_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1e53e7994_Mul64(_11022_man, _1e542e635_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_1e4de33e6_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1e54308cd_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;;
			};
		}
	_iter_next_1e81c5939:;
	}
	_iter_end_1e81c5939:;;
	return _4613_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1e5430bca_special(jule::Str _6816_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if (_6816_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1e81c9ce5:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1e81c9d6c;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1e81c9d6c:;
			{
				jule::I64 _8317_caseN = _1e54308cd_commonPrefixLenIgnoreCase(_6816_s, jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1e53ebe2c_Inf(_7213_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_7313_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1e81c9de4:;
			{
				if ((_1e54308cd_commonPrefixLenIgnoreCase(_6816_s, jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1e53ebbb8_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1e81c9c29:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1e5430e72_readFloat(jule::Str _10314_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1e81d0966:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1e81d09dd:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1e81d0823:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < _10314_s.len()) && (_10314_s[__jule_func_result.__jule_result_arg5] == '0')) && (_1e542be29_lower(_10314_s[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_11913_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < _10314_s.len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13313_c = _10314_s[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1e81d6b59:;
					{
						goto _iter_next_1e81d60a9;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1e81d6bd1:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1e81d60a9;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1e81d6c58:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1e81d60a9;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_11713_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1e81d60a9;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1e542be29_lower(_13313_c))) && (_1e542be29_lower(_13313_c) <= 'f'))) {
					_case_begin_1e81d6cd0:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1e542be29_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1e81d60a9;
					}
				}
				_match_end_1e81d6a7c:;
			};
			goto _iter_end_1e81d60a9;
		}
	_iter_next_1e81d60a9:;
	}
	_iter_end_1e81d60a9:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && (_1e542be29_lower(_10314_s[__jule_func_result.__jule_result_arg5]) == _11913_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_19617_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= _10314_s.len()) || (_10314_s[__jule_func_result.__jule_result_arg5] < '0')) || (_10314_s[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && ((('0' <= _10314_s[__jule_func_result.__jule_result_arg5]) && (_10314_s[__jule_func_result.__jule_result_arg5] <= '9')) || (_10314_s[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if ((_10314_s[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1e81e11b3;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1e81e11b3:;
		}
		_iter_end_1e81e11b3:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1e5432902_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48116_mantissa >> _1e4d8d616_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1e81eb113:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1e81eb18a:;
			{
				if ((_48135_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1e5431d1e_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1e5431d1e_f64pow10[_48135_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1e81eb212:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1e5431d1e_f64pow10[(-(_48135_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1e81eb047:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1e5432cdc_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_51516_mantissa >> _1e4d720ab_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1e7ecad05:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1e7ecad7c:;
			{
				if ((_51535_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1e5432160_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1e5432160_f32pow10[_51535_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1e7ecae04:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1e5432160_f32pow10[(-(_51535_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1e7ecac39:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__20e3c3aee_ConvError _1e54333b4_atofHex(jule::Str _55112_s, _1e5429003_floatInfo* _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	__jule_tuple_f64__jule_tuple__20e3c3aee_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << (*(_55121_flt))._field_expbits)) + (*(_55121_flt))._field_bias) - 2LL);;
	jule::I64 _5539_minExp = ((*(_55121_flt))._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>((*(_55121_flt))._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> ((*(_55121_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1e7ed0bc8:;
	}
	_iter_end_1e7ed0bc8:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + (*(_55121_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1e7ed2a43:;
	}
	_iter_end_1e7ed2a43:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1e7ed3505:;
	}
	_iter_end_1e7ed3505:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + (*(_55121_flt))._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> (*(_55121_flt))._field_mantbits) == 0LLU)) {
		_55160_exp=(*(_55121_flt))._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55121_flt))._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << (*(_55121_flt))._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - (*(_55121_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55121_flt))._field_expbits) - 1LL)))) << (*(_55121_flt))._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << (*(_55121_flt))._field_mantbits) << (*(_55121_flt))._field_expbits);
	};
	if (((*(_55121_flt)) == _1e4d720ab_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_1e4de33e6_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits)))));
		__jule_func_result.__jule_result_arg1 = _59813_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1e4de39ac_F64FromBits(_60513_bits));
	__jule_func_result.__jule_result_arg1 = _59813_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__20e3c3aee_ConvError _1e543376b_atof32(jule::Str _61611_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__20e3c3aee_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _61814_val = 0;;
		jule::I64 _61819__n = 0;;
		jule::Bool _61823_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e5430bca_special(_61611_s);
			_61814_val = __jule_assign_result.__jule_result_arg0;
			_61819__n = __jule_assign_result.__jule_result_arg1;
			_61823_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_61823_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			__jule_func_result.__jule_result_arg1 = _61819__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62410_mantissa = 0;;
	jule::I64 _62420_exp = 0;;
	jule::Bool _62425_neg = false;;
	jule::Bool _62430_trunc = false;;
	jule::Bool _62437_hex = false;;
	jule::I64 _62442__n = 0;;
	jule::Bool _62450_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e5430e72_readFloat(_61611_s);
		_62410_mantissa = __jule_assign_result.__jule_result_arg0;
		_62420_exp = __jule_assign_result.__jule_result_arg1;
		_62425_neg = __jule_assign_result.__jule_result_arg2;
		_62430_trunc = __jule_assign_result.__jule_result_arg3;
		_62437_hex = __jule_assign_result.__jule_result_arg4;
		_62442__n = __jule_assign_result.__jule_result_arg5;
		_62450_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62442__n;
	if ((!(_62450_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__20e3c3aee_ConvError __jule_assign_result = _1e54333b4_atofHex(_61611_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_1e4d720ab_f32info), _62410_mantissa, _62420_exp, _62425_neg, _62430_trunc);
			_63117_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62430_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1e5432cdc_atof32exact(_62410_mantissa, _62420_exp, _62425_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62450_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1e542dbb7_eiselLemire32(_62410_mantissa, _62420_exp, _62425_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62450_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65321_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1e542dbb7_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)), _62420_exp, _62425_neg);
				_65321_fUp = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62450_ok && (__jule_func_result.__jule_result_arg0 == _65321_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1e54395a7_decimal _66213_d = _1e54395a7_decimal{};;
	if ((!(_1e5431626_set(&_66213_d, _61611_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _66610_b = 0;;
	jule::Bool _66613_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1e5431934_floatBits(&_66213_d, &(_1e4d720ab_f32info));
		_66610_b = __jule_assign_result.__jule_result_arg0;
		_66613_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1e4de33e6_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__20e3c3aee_ConvError _1e5433a13_atof64(jule::Str _67411_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__20e3c3aee_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _67614_val = 0;;
		jule::I64 _67619__n = 0;;
		jule::Bool _67623_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e5430bca_special(_67411_s);
			_67614_val = __jule_assign_result.__jule_result_arg0;
			_67619__n = __jule_assign_result.__jule_result_arg1;
			_67623_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_67623_ok) {
			__jule_func_result.__jule_result_arg0 = _67614_val;
			__jule_func_result.__jule_result_arg1 = _67619__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68210_mantissa = 0;;
	jule::I64 _68220_exp = 0;;
	jule::Bool _68225_neg = false;;
	jule::Bool _68230_trunc = false;;
	jule::Bool _68237_hex = false;;
	jule::I64 _68242__n = 0;;
	jule::Bool _68250_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e5430e72_readFloat(_67411_s);
		_68210_mantissa = __jule_assign_result.__jule_result_arg0;
		_68220_exp = __jule_assign_result.__jule_result_arg1;
		_68225_neg = __jule_assign_result.__jule_result_arg2;
		_68230_trunc = __jule_assign_result.__jule_result_arg3;
		_68237_hex = __jule_assign_result.__jule_result_arg4;
		_68242__n = __jule_assign_result.__jule_result_arg5;
		_68250_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68242__n;
	if ((!(_68250_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68237_hex) {
		({
			__jule_tuple_f64__jule_tuple__20e3c3aee_ConvError __jule_assign_result = _1e54333b4_atofHex(_67411_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_1e4d8d616_f64info), _68210_mantissa, _68220_exp, _68225_neg, _68230_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68230_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1e5432902_atof64exact(_68210_mantissa, _68220_exp, _68225_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68250_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1e542d7bb_eiselLemire64(_68210_mantissa, _68220_exp, _68225_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68250_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71021_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1e542d7bb_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)), _68220_exp, _68225_neg);
				_71021_fUp = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68250_ok && (__jule_func_result.__jule_result_arg0 == _71021_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1e54395a7_decimal _71913_d = _1e54395a7_decimal{};;
	if ((!(_1e5431626_set(&_71913_d, _67411_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72310_b = 0;;
	jule::Bool _72313_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1e5431934_floatBits(&_71913_d, &(_1e4d8d616_f64info));
		_72310_b = __jule_assign_result.__jule_result_arg0;
		_72313_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1e4de39ac_F64FromBits(_72310_b));
	if (_72313_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__20e3c3aee_ConvError _1e5433d54_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__20e3c3aee_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f = 0;;
		jule::I64 _73317_n = 0;;
		jule::I64 _73320_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__20e3c3aee_ConvError __jule_assign_result = _1e543376b_atof32(_73121_s);
			_73314_f = __jule_assign_result.__jule_result_arg0;
			_73317_n = __jule_assign_result.__jule_result_arg1;
			_73320_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73314_f));
		__jule_func_result.__jule_result_arg1 = _73317_n;
		__jule_func_result.__jule_result_arg2 = _73320_err;
		return __jule_func_result;;
	};
	jule::F64 _73710_f = 0;;
	jule::I64 _73713_n = 0;;
	jule::I64 _73716_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__20e3c3aee_ConvError __jule_assign_result = _1e5433a13_atof64(_73121_s);
		_73710_f = __jule_assign_result.__jule_result_arg0;
		_73713_n = __jule_assign_result.__jule_result_arg1;
		_73716_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _73710_f;
	__jule_func_result.__jule_result_arg1 = _73713_n;
	__jule_func_result.__jule_result_arg2 = _73716_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1e5434195_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f = 0;;
	jule::I64 _76613_n = 0;;
	jule::I64 _76616_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__20e3c3aee_ConvError __jule_assign_result = _1e5433d54_parseFloatPrefix(_76515_s, _76523_bit_size);
		_76610_f = __jule_assign_result.__jule_result_arg0;
		_76613_n = __jule_assign_result.__jule_result_arg1;
		_76616_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type134));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_76616_err, &__jule_any_type134));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _76610_f);;
}



inline void _1e5434915_ryuFtoaFixed32(_1e54291e0_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _1e53e53a9_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1e5435d56_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I64 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e5437550_mult64bitPow10(_4945_mant, _6213_e2, _749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1e5437c7b_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1e543563b_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)), (!(_8129_d0)), _9913_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_749_q;
}



inline void _1e5434d55_ryuFtoaFixed64(_1e54291e0_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _1e53e5651_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1e5435d56_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I64 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e543793a_mult128bitPow10(_12145_mant, _13113_e2, _1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1e5437c7b_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1e543563b_formatDecimal(_12124_d, _15314_di, (!(_15329_d0)), _17113_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1469_q;
}



inline void _1e543563b_formatDecimal(_1e54291e0_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _1e5435185_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1e801963a:;
	}
	_iter_end_1e801963a:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1e801d0de:;
	}
	_iter_end_1e801d0de:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1e8023dc5:;
	}
	_iter_end_1e8023dc5:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _20213_trimmed));
}



inline void _1e5435aae_ryuFtoaShortest(_1e54291e0_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1e5429003_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1e53dec99_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1e5436a7c_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I64 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1e54364d8_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_1e5436a7c_ryuDigits(_26125_d, _27310_ml, _27314_mc, _27318_mu, true, false);
		return;;
	};
	jule::I64 _2799_q = (_1e5435d56_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if (((*(_26168_flt)) == _1e4d720ab_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e5437550_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)), _27326_e2, _2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e5437550_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)), _27326_e2, _2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e5437550_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)), _27326_e2, _2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e543793a_mult128bitPow10(_27310_ml, _27326_e2, _2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e543793a_mult128bitPow10(_27314_mc, _27326_e2, _2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e543793a_mult128bitPow10(_27318_mu, _27326_e2, _2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1e5437c7b_divisibleByPow5(_27310_ml, static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1e5437c7b_divisibleByPow5(_27314_mc, static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1e5437c7b_divisibleByPow5(_27318_mu, static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1e5436a7c_ryuDigits(_26125_d, _28313_dl, _28413_dc, _28513_du, _3669_c0, _34713_cup);
	(*(_26125_d))._field_dp-=_2799_q;
}



inline jule::I64 _1e5435d56_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _1e54360ed_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1e54364d8_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1e5429003_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1e5436a7c_ryuDigits(_1e54291e0_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1e5438023_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1e5438023_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1e5438023_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_1e5437165_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1e5437165_ryuDigits32(_40919_d, _41014_lhi, _41110_chi, _41210_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1e8043c2a:;
		}
		_iter_end_1e8043c2a:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42817_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1e5437165_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1e80442be:;
	}
	_iter_end_1e80442be:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1e804391c:;
	}
	_iter_end_1e804391c:;;
}



inline void _1e5437165_ryuDigits32(_1e54291e0_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1e80497e1;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1e80497e1:;
	}
	_iter_end_1e80497e1:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			(*(_45421_d))._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1e80512a9:;
	}
	_iter_end_1e80512a9:;;
	if ((_51013_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1e5437550_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1e542e635_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1e53e7994_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1e54360ed_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1e543793a_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1e542e635_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1e54360ed_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1e53e7994_Mul64(_56220_m, _57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1e53e7994_Mul64(_56220_m, _57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1e53e6311_Add64(_57910_l1, _58018_h0, 0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1e5437c7b_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1e8060362:;
	}
	_iter_end_1e8060362:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1e5438023_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1e543ac90_trim(_1e54395a7_decimal* _45314_a) {
	while ((((*(_45314_a))._field_nd > 0LL) && ((*(_45314_a))._field_d[((*(_45314_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_45314_a))._field_nd)--;
		}
	_iter_next_1e806392b:;
	}
	_iter_end_1e806392b:;;
	if (((*(_45314_a))._field_nd == 0LL)) {
		(*(_45314_a))._field_dp=0LL;
	};
}



inline void _1e543b048_rightShift(_1e54395a7_decimal* _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= (*(_46320_a))._field_nd)) {
				if ((_46813_n == 0LLU)) {
					(*(_46320_a))._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1e80671e3:;
				}
				_iter_end_1e80671e3:;;
				goto _iter_end_1e8065d3a;
			};
			jule::U64 _48213_c = static_cast<jule::U64>((*(_46320_a))._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1e8065d3a:;
	}
	_iter_end_1e8065d3a:;;
	(*(_46320_a))._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < (*(_46320_a))._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>((*(_46320_a))._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1e8069998:;
	}
	_iter_end_1e8069998:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				(*(_46320_a))._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_1e8069dc7:;
	}
	_iter_end_1e8069dc7:;;
	(*(_46320_a))._field_nd=_46513_w;
	_1e543ac90_trim(_46320_a);
}



inline jule::Bool _1e543b4aa_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);;
			};
		}
	_iter_next_1e806e294:;
	}
	_iter_end_1e806e294:;;
	return false;;
}



inline void _1e543b730_leftShift(_1e54395a7_decimal* _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _1e5439013_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_1e543b4aa_prefixIsLessThan((*(_53119_a))._field_d, (*(_53119_a))._field_nd, _1e5439013_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = (*(_53119_a))._field_nd;;
	jule::I64 _53813_w = ((*(_53119_a))._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>((*(_53119_a))._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1e80727d6:;
	}
	_iter_end_1e80727d6:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1e8075344:;
	}
	_iter_end_1e8075344:;;
	(*(_53119_a))._field_nd+=_53213_delta;
	if (((*(_53119_a))._field_nd >= 800LL)) {
		(*(_53119_a))._field_nd=800LL;
	};
	(*(_53119_a))._field_dp+=_53213_delta;
	_1e543ac90_trim(_53119_a);
}



inline jule::Bool _1e543ba71_shouldRoundUp(_1e54395a7_decimal* _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= (*(_57819_a))._field_nd))) {
		return false;;
	};
	if ((((*(_57819_a))._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == (*(_57819_a))._field_nd))) {
		if ((*(_57819_a))._field_trunc) {
			return true;;
		};
		return ((_57831_nd > 0LL) && ((((*(_57819_a))._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_57819_a))._field_d[_57831_nd] >= '5');;
}



inline jule::Str _1e543d18d_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1e543dad9_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1e543e3ae_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _1e543d523_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1e543dad9_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1e543e3ae_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _1e543d7ba_Itoa(jule::I64 _809_i) {
	return _1e543d523_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _1e543dad9_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _1e543dd81_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1e543e3ae_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1e80b3041:;
		}
		_iter_end_1e80b3041:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1e543dd81_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1e53de10b_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1e80bb81e:;
		}
		_iter_end_1e80bb81e:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1e80be437:;
		}
		_iter_end_1e80be437:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _1e4d57ee8_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1e80d87a3:;
			{
				return _1e4d17a13_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1e80d8819:;
			{
				return _1e4d2b571_SysUint;;
			}
		}
		else {
			_case_begin_1e80d8b9e:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1e80d9155:;
	};
}



inline jule::I64 _1e4d5845a_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1e80da167:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1e80da1cd:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1e80d9c05:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1e80d9c6b:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1e80d9cd2:;
			{
				return _1e4d17bab_BitSize;;
			}
		}
		else {
			_case_begin_1e80d972c:;
			{
				return -1LL;;
			}
		}
		_match_end_1e80d9b5b:;
	};
}



inline jule::Str _1e4d17e42_IntFromBits(jule::I64 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1e80dc103:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1e80dc169:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1e80dbe16:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1e80dbe7c:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1e80da3a9:;
			{
				return jule::Str();;
			}
		}
		_match_end_1e80dbb4c:;
	};
}



inline jule::Str _1e4d37a99_UintFromBits(jule::I64 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1e80dd577:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1e80dd5dd:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1e80dd379:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1e80dd3e0:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1e80dcde5:;
			{
				return jule::Str();;
			}
		}
		_match_end_1e80dccb3:;
	};
}



inline jule::Str _1e4d1ec29_FloatFromBits(jule::I64 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1e80de9eb:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1e80dea62:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1e80de369:;
			{
				return jule::Str();;
			}
		}
		_match_end_1e80de237:;
	};
}



inline jule::Bool _1e4d16eb8_CheckBitFloat(jule::Str _15018_val, jule::I64 _15028_bit) {
	({
		auto except = _1e5434195_ParseFloat(_15018_val, _15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1e4ca4241_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1e80e4a45:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1e80e3b98:;
			{
				return 64LLU;;
			}
		}
		_match_end_1e80e3aee:;
	};
}



inline jule::I64 _1e4ca4373_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_1e80e5925:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_1e80e598b:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_1e80e5a02:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1e80e5150:;
			{
				return 64LLU;;
			}
		}
		_match_end_1e80e5084:;
	};
}



inline jule::I64 _1e4d5c3c6_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_1e80e7839:;
			{
				return 8LLU;;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_1e80e78a0:;
			{
				return 16LLU;;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_1e80e7916:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1e80e6c78:;
			{
				return 64LLU;;
			}
		}
		_match_end_1e80e688d:;
	};
}



inline void _1e4d5c508_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _242d1dbec_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1e80e89a0:;
				{
					_1e4d17bab_BitSize=64LLU;
					_1e4d17a13_SysInt=jule::Str("i64", 3);
					_1e4d2b571_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1e80e8a27:;
				{
					_1e4d17bab_BitSize=32LLU;
					_1e4d17a13_SysInt=jule::Str("i32", 3);
					_1e4d2b571_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1e80e88e5:;
		};
	};
}



inline void _1e4d29805_init(void) {
	_1e4d5c508_UpdateTarget();
}



inline jule::F64 _1e5441e94_Min(jule::Str _6112_k) {
	_6112_k=_1e4d57ee8_RealKindOf(_6112_k);
	{
		auto &_match_expr{ _6112_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1e80eb343:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1e80eb3a9:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1e80ead59:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1e80eadd1:;
			{
				return jule::MIN_I64;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1e80eae58:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1e80eaed0:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1e80e8c58:;
			{
				return 0LL;;
			}
		}
		_match_end_1e80e8e23:;
	};
}



inline jule::F64 _1e54420c6_Max(jule::Str _8312_k) {
	_8312_k=_1e4d57ee8_RealKindOf(_8312_k);
	{
		auto &_match_expr{ _8312_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1e80eb80a:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1e825d2b8:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1e825d32e:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1e825d395:;
			{
				return jule::MAX_I64;;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1e825d41c:;
			{
				return 255LL;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1e825d681:;
			{
				return 65535LL;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1e825d6e7:;
			{
				return 4294967295LL;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1e825d76e:;
			{
				return jule::MAX_U64;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1e825d7e6:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1e825da05:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1e825cdde:;
			{
				return 0LL;;
			}
		}
		_match_end_1e825cd89:;
	};
}



inline jule::Bool _1e54423d4_IsI8Compatible(jule::Str _623_k) {
	return (_623_k == jule::Str("i8", 2));;
}



inline jule::Bool _1e5442516_IsI16Compatible(jule::Str _1124_k) {
	return ((_1124_k == jule::Str("i8", 2)) || (_1124_k == jule::Str("i16", 3)));;
}



inline jule::Bool _1e5442648_IsI32Compatible(jule::Str _1724_k) {
	return ((((_1724_k == jule::Str("i8", 2)) || (_1724_k == jule::Str("i16", 3))) || (_1724_k == jule::Str("i32", 3))) || (_1724_k == jule::Str("u8", 2)));;
}



inline jule::Bool _1e544277a_IsI64Compatible(jule::Str _2524_k) {
	return ((((_2524_k == jule::Str("i8", 2)) || (_2524_k == jule::Str("i16", 3))) || (_2524_k == jule::Str("i32", 3))) || (_2524_k == jule::Str("i64", 3)));;
}



inline jule::Bool _1e54428ac_IsU8Compatible(jule::Str _3323_k) {
	return (_3323_k == jule::Str("u8", 2));;
}



inline jule::Bool _1e54429de_IsU16Compatible(jule::Str _3824_k) {
	return ((_3824_k == jule::Str("u8", 2)) || (_3824_k == jule::Str("u16", 3)));;
}



inline jule::Bool _1e5442b21_IsU32Compatible(jule::Str _4324_k) {
	return (((_4324_k == jule::Str("u8", 2)) || (_4324_k == jule::Str("u16", 3))) || (_4324_k == jule::Str("u32", 3)));;
}



inline jule::Bool _1e5442c53_IsU64Compatible(jule::Str _5024_k) {
	return ((((_5024_k == jule::Str("u8", 2)) || (_5024_k == jule::Str("u16", 3))) || (_5024_k == jule::Str("u32", 3))) || (_5024_k == jule::Str("u64", 3)));;
}



inline jule::Bool _1e5442d85_IsF32Compatible(jule::Str _5824_k) {
	return (_5824_k == jule::Str("f32", 3));;
}



inline jule::Bool _1e5442eb7_IsF64Compatible(jule::Str _6324_k) {
	return (_6324_k == jule::Str("f64", 3));;
}



inline jule::Bool _1e54430e9_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1e8266744:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1e826702a:;
			{
				return (_7036_k2 == jule::Str("int", 3));;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1e8267091:;
			{
				return (_7036_k2 == jule::Str("uintptr", 7));;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1e8266a1e:;
			{
				return (_7036_k2 == jule::Str("uint", 4));;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1e8266a85:;
			{
				return _1e54423d4_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1e8266aeb:;
			{
				return _1e5442516_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1e8266b62:;
			{
				return _1e5442648_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1e826713a:;
			{
				return _1e544277a_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1e82671a1:;
			{
				return _1e54428ac_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1e8267217:;
			{
				return _1e54429de_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1e826727d:;
			{
				return _1e5442b21_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1e82672e4:;
			{
				return _1e5442c53_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1e826735a:;
			{
				return _1e5442d85_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1e82673d2:;
			{
				return _1e5442eb7_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1e8267459:;
			{
				return (_7036_k2 == jule::Str("bool", 4));;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1e82674d1:;
			{
				return (_7036_k2 == jule::Str("str", 3));;
			}
		}
		else {
			_case_begin_1e826690e:;
			{
				return false;;
			}
		}
		_match_end_1e82667cc:;
	};
}



inline jule::Bool _1e544322b_IsI16Greater(jule::Str _11021_k) {
	return (_11021_k == jule::Str("i8", 2));;
}



inline jule::Bool _1e544335d_IsI32Greater(jule::Str _11521_k) {
	return ((_11521_k == jule::Str("i8", 2)) || (_11521_k == jule::Str("i16", 3)));;
}



inline jule::Bool _1e5443517_IsI64Greater(jule::Str _12021_k) {
	return (((_12021_k == jule::Str("i8", 2)) || (_12021_k == jule::Str("i16", 3))) || (_12021_k == jule::Str("i32", 3)));;
}



inline jule::Bool _1e54437ae_IsU16Greater(jule::Str _12721_k) {
	return (_12721_k == jule::Str("u8", 2));;
}



inline jule::Bool _1e5443c10_IsU32Greater(jule::Str _13221_k) {
	return ((_13221_k == jule::Str("u8", 2)) || (_13221_k == jule::Str("u16", 3)));;
}



inline jule::Bool _1e5443ea7_IsU64Greater(jule::Str _13821_k) {
	return (((_13821_k == jule::Str("u8", 2)) || (_13821_k == jule::Str("u16", 3))) || (_13821_k == jule::Str("u32", 3)));;
}



inline jule::Bool _1e544424e_IsF32Greater(jule::Str _14517_k) {
	return (_14517_k != jule::Str("f64", 3));;
}



inline jule::Bool _1e54444e6_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1e5444837_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1e8267a97:;
			{
				return _1e544586b_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1e82700ee:;
			{
				return _1e5445b57_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1e8270165:;
			{
				return _1e5445b57_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1e82701cb:;
			{
				return _1e544322b_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1e826ed24:;
			{
				return _1e544335d_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1e826ed8a:;
			{
				return _1e5443517_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1e826ee01:;
			{
				return _1e54437ae_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1e826ee67:;
			{
				return _1e5443c10_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1e827040c:;
			{
				return _1e5443ea7_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1e8270473:;
			{
				return _1e544424e_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1e82704d9:;
			{
				return _1e54444e6_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1e8270561:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e826ebae:;
			{
				return false;;
			}
		}
		_match_end_1e826eb15:;
	};
}



inline jule::Bool _1e544586b_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == jule::Str("i8", 2)) || (_2717_k == jule::Str("i16", 3))) || (_2717_k == jule::Str("i32", 3))) || (_2717_k == jule::Str("i64", 3))) || (_2717_k == jule::Str("int", 3)));;
}



inline jule::Bool _1e5445b57_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == jule::Str("u8", 2)) || (_3619_k == jule::Str("u16", 3))) || (_3619_k == jule::Str("u32", 3))) || (_3619_k == jule::Str("u64", 3))) || (_3619_k == jule::Str("uint", 4))) || (_3619_k == jule::Str("uintptr", 7)));;
}



inline jule::Bool _1e5445dee_IsInt(jule::Str _4610_k) {
	return (_1e544586b_IsSigInt(_4610_k) || _1e5445b57_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1e544621d_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == jule::Str("f32", 3)) || (_5112_k == jule::Str("f64", 3)));;
}



inline jule::Bool _1e54464b5_IsNum(jule::Str _5610_k) {
	return (_1e5445dee_IsInt(_5610_k) || _1e544621d_IsFloat(_5610_k));;
}



inline jule::Bool _1e544675c_IsSigNum(jule::Str _6113_k) {
	return (_1e544586b_IsSigInt(_6113_k) || _1e544621d_IsFloat(_6113_k));;
}



inline void _1e54501e4_lshiftUnsig(_1e54469c1_Const* _59021_c, _1e54469c1_Const* _59032_x) {
	jule::U64 _5919_l = _1e5449243_AsU64(_59021_c);;
	jule::U64 _5929_r = _1e5449243_AsU64(_59032_x);;
	_1e54499a2_SetU64(_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _1e54504e1_rshiftUnsig(_1e54469c1_Const* _59621_c, _1e54469c1_Const* _59632_x) {
	jule::U64 _5979_l = _1e5449243_AsU64(_59621_c);;
	jule::U64 _5989_r = _1e5449243_AsU64(_59632_x);;
	_1e54499a2_SetU64(_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _1e54e37d7_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _1e54e395d_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1e550b349_runeFromEsqSeq(_1811_bytes, &(_2517_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _242ea857e_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _1e550a997_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _1e550ac94_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1e550b68a_strEsqSeq(_4210_bytes, &(_4813_i)));
			} else {
				jule::I32 _5418_r = 0;;
				jule::I64 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _242ea857e_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_242ea98e3_AppendRune(_4713_s, _5418_r);
			};
		}
	_iter_next_1e82da8ea:;
	}
	_iter_end_1e82da8ea:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1e550b03b_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1e82dedb6:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1e82dee2c:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1e82dee93:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1e82e0009:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1e82e0081:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1e82e0108:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1e82e0180:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1e82e0207:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1e82e027e:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1e82e0306:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1e82dec95:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1e550b349_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64* _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1e550b03b_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_9313_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1e82e5e77:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1e542c743_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1e82e5817:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1e542c743_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1e82e587d:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1e542c743_ParseUint(static_cast<jule::Str>(_11313_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1e82e411d:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1e542c743_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1e82e4508:;
	};
}



inline jule::Slice<jule::U8> _1e550b68a_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64* _12434_i) {
	jule::I32 _1259_r = _1e550b349_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));;
}



inline jule::I64 _1e6213061_findFormatPrefix(jule::Slice<jule::U8>* _1022_bytes, jule::I64* _1038_start) {
	jule::I64 _1113_i = (*(_1038_start));;
	while ((_1113_i < (*(_1022_bytes)).len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I64 _1317_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _242ea857e_DecodeRune((*(_1022_bytes)).slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_1e832a066:;
	}
	_iter_end_1e832a066:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1e6218b5a_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _289_start = (*(_2724_i));;
	jule::I64 _2913_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I64 _3117_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _242ea857e_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_1e832cb18:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1e832cb7e:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_289_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1e832c80a:;
			};
		}
	_iter_next_1e832bdd1:;
	}
	_iter_end_1e832bdd1:;;
	return nullptr;;
}



inline void _1e6218e13_FmtByDefault(jule::Str* _4722_buf, jule::Any* _4733_arg) {
	if (((*(_4733_arg)) == nullptr)) {
		(*(_4722_buf))+=jule::Str("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ (*(_4733_arg)) };
		
		if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1e832db08:;
			{
				(*(_4722_buf))+=_1e4d74476_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F32>(&__jule_any_type135))), 'g', -1LL, 32LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1e832e895:;
			{
				(*(_4722_buf))+=_1e4d74476_FmtFloat(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F64>(&__jule_any_type6)), 'g', -1LL, 64LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1e832ea4e:;
			{
				(*(_4722_buf))+=_1e543d523_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I8>(&__jule_any_type136)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1e832db91:;
			{
				(*(_4722_buf))+=_1e543d523_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I16>(&__jule_any_type137)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1e832e4bb:;
			{
				(*(_4722_buf))+=_1e543d523_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1e832e532:;
			{
				(*(_4722_buf))+=_1e543d523_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I64>(&__jule_any_type2)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1e832eac6:;
			{
				(*(_4722_buf))+=_1e543d18d_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U8>(&__jule_any_type133)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1e832eb3c:;
			{
				(*(_4722_buf))+=_1e543d18d_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U16>(&__jule_any_type138)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1e832eba3:;
			{
				(*(_4722_buf))+=_1e543d18d_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U32>(&__jule_any_type139)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1e832ec19:;
			{
				(*(_4722_buf))+=_1e543d18d_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U64>(&__jule_any_type3)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1e832ec80:;
			{
				(*(_4722_buf))+=(*(_4733_arg)).cast<jule::Str>(&__jule_any_type5);
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1e832ece6:;
			{
				if ((*(_4733_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					(*(_4722_buf))+=jule::Str("true", 4);
				} else {
					(*(_4722_buf))+=jule::Str("false", 5);
				};
			}
		}
		else {
			_case_begin_1e832e367:;
			{
				(*(_4722_buf))+=jule::to_str((*(_4733_arg)));
			}
		}
		_match_end_1e832d102:;
	};
}



inline void _1e62192dc_applyFmtByDefault(jule::Str* _8627_buf, jule::I64* _8642_j, jule::Slice<jule::Any>* _8651_args) {
	jule::Any _879_arg = (*(_8651_args))[(*(_8642_j))];;
	((*(_8642_j)))++;
	_1e6218e13_FmtByDefault(_8627_buf, &(_879_arg));
}



inline void _1e62196d8_applyFmt(jule::Slice<jule::U8>* _9418_fmt, jule::Str* _9436_buf, jule::I64* _9451_j, jule::Slice<jule::Any>* _9460_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1e62192dc_applyFmtByDefault(_9436_buf, _9451_j, _9460_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		(*(_9436_buf))+=jule::Str("{}", 2);
		return;;
	};
	_242ed1be5_PushToStrBuffer(_9436_buf, (*(_9418_fmt)));
}



inline jule::Str _1e62199e6_Format(jule::Str* _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return (*(_11312_fmt));;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _242ecb607_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, (*(_11312_fmt)).len());;
	jule::I64 _11913_j = 0LL;;
	jule::I64 _12013_last = 0LL;;
	jule::I64 _12113_i = _1e6213061_findFormatPrefix(&(_11713_fmtBytes), &(_12013_last));;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I64>(_1e6213061_findFormatPrefix(&(_11713_fmtBytes), &(_12113_i)))) {
		{
			_242ed1be5_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last, _12113_i));
			jule::Slice<jule::U8> _12417_format = _1e6218b5a_getFormatRange(&(_12113_i), &(_11713_fmtBytes));;
			if ((_12417_format == nullptr)) {
				goto _iter_next_1e833b440;
			};
			_1e62196d8_applyFmt(&(_12417_format), &(_11813_buf), &(_11913_j), &(_11322_args));
			if ((_11913_j >= _11322_args.len())) {
				_242ed1be5_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I64>(_11713_fmtBytes.len());
				goto _iter_end_1e833b440;
			};
			_12013_last=_12113_i;
		}
	_iter_next_1e833b440:;
	}
	_iter_end_1e833b440:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_242ed1be5_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _1e621a310_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1e62199e6_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _1e5465c87_parameterUsesGenerics(jule::Ptr<_1e5462ca6_ParamIns>* _37431_p, jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>>* _37446_generics) {
	if (_1e545ecb4_IsSelf((*(_37431_p)).get()._field_Decl.ptr())) {
		return false;;
	};
	return _1e556598b_kindUsesGenerics(&((*(_37431_p)).get()._field_Kind), _37446_generics);;
}



inline jule::Ptr<_1e5553160_TypeSymbol> _1e54682a6_buildType(jule::Ptr<_1e4773826_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e5553160_TypeSymbol>(_1e5553160_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1e5523d78_Value> _1e5468592_buildExpr(jule::Ptr<_1e4777d47_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e5523d78_Value>(_1e5523d78_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1e554d08e_TypeAlias> _1e5468839_buildTypeAlias(jule::Ptr<_1e4789ae5_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1e554d08e_TypeAlias>(_1e554d08e_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1e54682a6_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_1e4764075_Field> _1e5468b58_buildField(jule::Ptr<_1e478d28b_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1e4764075_Field>(_1e4764075_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1e54682a6_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_1e4764075_Field>> _1e5468e00_buildFields(jule::Slice<jule::Ptr<_1e478d28b_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1e4764075_Field>> _13513_fields = jule::Slice<jule::Ptr<_1e4764075_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8549461:;
		if (it != expr_end) {
			jule::Ptr<_1e478d28b_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1e5468b58_buildField(_13617_decl));;
			}
			_iter_next_1e8549461:;
			++it;
			goto _iter_begin_1e8549461;
		}
		_iter_end_1e8549461:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_1e4790018_Struct> _1e5469197_buildStruct(jule::Ptr<_1e478da3e_StructDecl> _14220_decl) {
	return jule::new_ptr<_1e4790018_Struct>(_1e4790018_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1e5468e00_buildFields(&(_14220_decl.get()._field_Fields)), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_1e545e687_Param> _1e546943e_buildParam(jule::Ptr<_1e4783e85_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1e545e687_Param>(_1e545e687_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1e54682a6_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1e545e687_Param>> _1e54697b3_buildParams(jule::Slice<jule::Ptr<_1e4783e85_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1e545e687_Param>> _16613_params = jule::Slice<jule::Ptr<_1e545e687_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e854c068:;
		if (it != expr_end) {
			jule::Ptr<_1e4783e85_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1e546943e_buildParam(_16717_decl));;
			}
			_iter_next_1e854c068:;
			++it;
			goto _iter_begin_1e854c068;
		}
		_iter_end_1e854c068:;
	};
	return _16613_params;;
}



inline jule::Ptr<_1e545deb1_RetType> _1e5469a5a_buildRetType(jule::Ptr<_1e4776939_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1e545deb1_RetType>(_1e545deb1_RetType{._field_Kind=_1e54682a6_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_1e5460ec4_Fn> _1e5469d02_buildFn(jule::Ptr<_1e47852a5_FnDecl> _18316_decl) {
	return jule::new_ptr<_1e5460ec4_Fn>(_1e5460ec4_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1e5469a5a_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1e54697b3_buildParams(&(_18316_decl.get()._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1e5460ec4_Fn>> _1e546a099_buildMethods(jule::Slice<jule::Ptr<_1e47852a5_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1e5460ec4_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1e5460ec4_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8550885:;
		if (it != expr_end) {
			jule::Ptr<_1e47852a5_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1e5469d02_buildFn(_20317_decl));;
			}
			_iter_next_1e8550885:;
			++it;
			goto _iter_begin_1e8550885;
		}
		_iter_end_1e8550885:;
	};
	return _20213_methods;;
}



inline jule::Ptr<_1e5472dc6_Trait> _1e546a341_buildTrait(jule::Ptr<_1e478e149_TraitDecl> _20919_decl) {
	return jule::new_ptr<_1e5472dc6_Trait>(_1e5472dc6_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_1e546a099_buildMethods(&(_20919_decl.get()._field_Methods)), });;
}



inline jule::Ptr<_1e5474526_EnumItem> _1e546a5d8_buildEnumItem(jule::Ptr<_1e478b454_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_1e5474526_EnumItem>(_1e5474526_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_1e5468592_buildExpr(_21822_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1e5474526_EnumItem>> _1e546a880_buildEnumItems(jule::Slice<jule::Ptr<_1e478b454_EnumItemDecl>>* _22624_decls) {
	jule::Slice<jule::Ptr<_1e5474526_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_1e5474526_EnumItem>>::alloc(0LL, (*(_22624_decls)).len());;
	{
		auto expr = _22624_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8552c2d:;
		if (it != expr_end) {
			jule::Ptr<_1e478b454_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_1e546a5d8_buildEnumItem(_22817_decl));;
			}
			_iter_next_1e8552c2d:;
			++it;
			goto _iter_begin_1e8552c2d;
		}
		_iter_end_1e8552c2d:;
	};
	return _22713_items;;
}



inline jule::Ptr<_1e547501b_Enum> _1e546ab27_buildEnum(jule::Ptr<_1e478be7c_EnumDecl> _23418_decl) {
	return jule::new_ptr<_1e547501b_Enum>(_1e547501b_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_1e54682a6_buildType(_23418_decl.get()._field_Kind), ._field_Items=_1e546a880_buildEnumItems(&(_23418_decl.get()._field_Items))});;
}



inline jule::Ptr<_1e5476050_TypeEnumItem> _1e546b078_buildTypeEnumItem(jule::Ptr<_1e478c983_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_1e5476050_TypeEnumItem>(_1e5476050_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_1e54682a6_buildType(_24426_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1e5476050_TypeEnumItem>> _1e546b320_buildTypeEnumItems(jule::Slice<jule::Ptr<_1e478c983_TypeEnumItemDecl>>* _25228_decls) {
	jule::Slice<jule::Ptr<_1e5476050_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_1e5476050_TypeEnumItem>>::alloc(0LL, (*(_25228_decls)).len());;
	{
		auto expr = _25228_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e85552e6:;
		if (it != expr_end) {
			jule::Ptr<_1e478c983_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_1e546b078_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_1e85552e6:;
			++it;
			goto _iter_begin_1e85552e6;
		}
		_iter_end_1e85552e6:;
	};
	return _25313_items;;
}



inline jule::Ptr<_1e5476616_TypeEnum> _1e546b5b7_buildTypeEnum(jule::Ptr<_1e478d08d_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_1e5476616_TypeEnum>(_1e5476616_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_1e546b320_buildTypeEnumItems(&(_26022_decl.get()._field_Items))});;
}



inline jule::Ptr<_1e54ca291_Var> _1e546b85e_buildVar(jule::Ptr<_1e4786284_VarDecl> _26917_decl) {
	return jule::new_ptr<_1e54ca291_Var>(_1e54ca291_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_1e54682a6_buildType(_26917_decl.get()._field_Kind), ._field_Value=_1e5468592_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__1e5466d76_new(), ._field_Directives=_26917_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1e54ca291_Var>> _1e546bb06_buildVars(jule::Slice<jule::Ptr<_1e4786284_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_1e54ca291_Var>> _28713_vars = jule::Slice<jule::Ptr<_1e54ca291_Var>>::alloc(0LL, _28618_decls.len());;
	{
		auto expr = &(_28618_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8558382:;
		if (it != expr_end) {
			jule::Ptr<_1e4786284_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_1e546b85e_buildVar(_28817_decl));;
			}
			_iter_next_1e8558382:;
			++it;
			goto _iter_begin_1e8558382;
		}
		_iter_end_1e8558382:;
	};
	return _28713_vars;;
}



inline jule::Ptr<_1e547aa7c_Impl> _1e546bd9d_buildImpl(jule::Ptr<_1e478e754_Impl> _29418_decl) {
	return jule::new_ptr<_1e547aa7c_Impl>(_1e547aa7c_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_1e546a099_buildMethods(&(_29418_decl.get()._field_Methods)), ._field_Statics=_1e546bb06_buildVars(_29418_decl.get()._field_Statics)});;
}



inline jule::Bool _1e5479e22_matchConstraint(jule::Str* _14221_c, jule::Ptr<_1e554dc82_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1e85aebbe:;
			{
				jule::Ptr<_1e55539ce_Prim> _14513_prim = _1e5551119_Prim((*(_14234_g)).ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _1e544675c_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1e85adc12:;
			{
				jule::Ptr<_1e55539ce_Prim> _15113_prim = _1e5551119_Prim((*(_14234_g)).ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _1e5445b57_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1e85ae927:;
			{
				jule::Ptr<_1e55539ce_Prim> _15713_prim = _1e5551119_Prim((*(_14234_g)).ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _1e544621d_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1e85ae99e:;
			{
				jule::Ptr<_1e55539ce_Prim> _16313_prim = _1e5551119_Prim((*(_14234_g)).ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _1e54464b5_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1e85aea26:;
			{
				return _1e5550404_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1e85ae707:;
			{
				return (!(_1e5550404_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1e85ae76d:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1e85ae7e5:;
			{
				jule::Ptr<_1e55539ce_Prim> _17513_prim = _1e5551119_Prim((*(_14234_g)).ptr());;
				if ((_17513_prim != nullptr)) {
					return (_1e54464b5_IsNum(_17513_prim.get()._field_Kind) || _1e5556c13_IsStr(_17513_prim.ptr()));;
				};
				if ((_1e55515e2_Ptr((*(_14234_g)).ptr()) != nullptr)) {
					return true;;
				};
				jule::Ptr<_1e47903e2_StructIns> _18213_s = _1e555256b_Struct((*(_14234_g)).ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));;
				};
				jule::Ptr<_1e547501b_Enum> _18913_enm = _1e5551856_Enum((*(_14234_g)).ptr());;
				if ((_18913_enm != nullptr)) {
					return _1e54464b5_IsNum(_1e554e17d_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));;
				};
				return false;;
			}
		}
		else {
			_case_begin_1e85ae4e8:;
			{
				return false;;
			}
		}
		_match_end_1e85ae44e:;
	};
}



inline jule::Bool _1e547a20d_isBuiltinConstraint(jule::Str* _19925_ident) {
	{
		auto expr = &(_1e5478382_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e85b82b0:;
		if (it != expr_end) {
			jule::Str *_20012_bc = it;
			{
				if (((*(_19925_ident)) == (*(_20012_bc)))) {
					return true;;
				};
			}
			_iter_next_1e85b82b0:;
			++it;
			goto _iter_begin_1e85b82b0;
		}
		_iter_end_1e85b82b0:;
	};
	return false;;
}



inline jule::Ptr<_1e548c4a6_scopeChecker> _1e547cb17_newScopeCheckerBase(jule::Ptr<_1e54ac295_Sema>* _5829_s, jule::Ptr<_1e5463b75_FnIns> _5843_owner) {
	return jule::new_ptr<_1e548c4a6_scopeChecker>(_1e548c4a6_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1e551cec6_SymbolTable>(), });;
}



inline jule::Ptr<_1e548c4a6_scopeChecker> _1e547ce9c_newScopeChecker(jule::Ptr<_1e54ac295_Sema>* _6625_s, jule::Ptr<_1e5463b75_FnIns> _6639_owner) {
	jule::Ptr<_1e548c4a6_scopeChecker> _6713_base = _1e547cb17_newScopeCheckerBase(_6625_s, _6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e548b3ea_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e548b692_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_1e548b3ea_scopeLabel> _1e547d2dd_findLabelParent(jule::Str _7620_ident, jule::Ptr<_1e548c4a6_scopeChecker> _7636_scope) {
	jule::Ptr<_1e548b3ea_scopeLabel> _7713_label = _1e5490e7c_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_1e5490e7c_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_1e85ccd1e:;
	}
	_iter_end_1e85ccd1e:;;
	return _7713_label;;
}



inline jule::Bool _1e547d673_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1e5480ad7_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1e85ce87b:;
			{
				jule::Ptr<_1e5454b22_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_1e5454b22_FnCallExprModel>(&__jule_any_type34);;
				if ((_9313_fcem.get()._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1e85ce903:;
			{
				jule::Ptr<_1e5522d00_Data> _9813_d = _9021_Model.cast_ptr<_1e5522d00_Data>(&__jule_any_type23);;
				return _1e547d673_modelIsGotoScope(_9813_d.get()._field_Model, _9034_sc);;
			}
		}
		_match_end_1e85ce7e3:;
	};
	return false;;
}



inline jule::Bool _1e547d9b4_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1e5480ad7_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1e85d1c79:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1e5480ad7_Scope>(&__jule_any_type21) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1e85d1d01:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1e548192e_InfIter>(&__jule_any_type36).get()._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1e85d1a6a:;
			{
				jule::Ptr<_1e5482787_RangeIter> _11113_it = (*(_10421_stmt)).cast_ptr<_1e5482787_RangeIter>(&__jule_any_type40);;
				return ((_11113_it.get()._field_Scope == (*(_10434_sc))) || _1e547d673_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1e85d1ae2:;
			{
				jule::Ptr<_1e5481da2_WhileIter> _11413_it = (*(_10421_stmt)).cast_ptr<_1e5481da2_WhileIter>(&__jule_any_type38);;
				return (((_11413_it.get()._field_Scope == (*(_10434_sc))) || _1e547d673_modelIsGotoScope(_11413_it.get()._field_Expr, _10434_sc)) || _1e547d673_modelIsGotoScope(_11413_it.get()._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1e85d1b69:;
			{
				jule::Ptr<_1e5484833_Match> _11913_m = (*(_10421_stmt)).cast_ptr<_1e5484833_Match>(&__jule_any_type48);;
				{
					auto expr = &(_11913_m.get()._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e85d519a:;
					if (it != expr_end) {
						jule::Ptr<_1e548537d_Case> *_12016_c = it;
						{
							if (((*(_12016_c)).get()._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(_12016_c)).get()._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1e85d60d0:;
								if (it != expr_end) {
									jule::Ptr<_1e5522d00_Data> *_12420_expr = it;
									{
										if (_1e547d673_modelIsGotoScope((*(_12420_expr)).get()._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1e85d60d0:;
									++it;
									goto _iter_begin_1e85d60d0;
								}
								_iter_end_1e85d60d0:;
							};
						}
						_iter_next_1e85d519a:;
						++it;
						goto _iter_begin_1e85d519a;
					}
					_iter_end_1e85d519a:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1e85cecee:;
			{
				jule::Ptr<_1e5481643_Conditional> _13213_c = (*(_10421_stmt)).cast_ptr<_1e5481643_Conditional>(&__jule_any_type35);;
				{
					auto expr = &(_13213_c.get()._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e85d7587:;
					if (it != expr_end) {
						jule::Ptr<_1e5480ed3_If> *_13316_elif = it;
						{
							if ((((*(_13316_elif)).get()._field_Scope == (*(_10434_sc))) || _1e547d673_modelIsGotoScope((*(_13316_elif)).get()._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1e85d7587:;
						++it;
						goto _iter_begin_1e85d7587;
					}
					_iter_end_1e85d7587:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1e85ced65:;
			{
				jule::Ptr<_1e5522d00_Data> _14013_d = (*(_10421_stmt)).cast_ptr<_1e5522d00_Data>(&__jule_any_type23);;
				return _1e547d673_modelIsGotoScope(_14013_d.get()._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1e85cec88:;
			{
				return false;;
			}
		}
		_match_end_1e85cec33:;
	};
}



inline jule::I64 _1e547dd05_countMatchType(jule::Ptr<_1e5484833_Match>* _14720_m, jule::Ptr<_1e554dc82_TypeKind>* _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _1e554e17d_Str((*(_14732_t)).ptr());;
	_julec_label_loop:;
	{
		auto expr = &((*(_14720_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e85da4e1:;
		if (it != expr_end) {
			jule::Ptr<_1e548537d_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1e85da4e1;
				};
				{
					auto expr = &((*(_15112_c)).get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e85db338:;
					if (it != expr_end) {
						jule::Ptr<_1e5522d00_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1e85da4e1;
							};
							if ((_1499_kind == _1e554e17d_Str((*(_15616_expr)).get()._field_Model.cast_ptr<_1e554dc82_TypeKind>(&__jule_any_type90).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1e85db338:;
						++it;
						goto _iter_begin_1e85db338;
					}
					_iter_end_1e85db338:;
				};
			}
			_iter_next_1e85da4e1:;
			++it;
			goto _iter_begin_1e85da4e1;
		}
		_iter_end_1e85da4e1:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_1e5522d00_Data>> _1e547e09c_getDatasFromTupleData(jule::Ptr<_1e5522d00_Data>* _17131_d) {
	if ((_1e5552ca8_Tup((*(_17131_d)).get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_17131_d)).get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type88) {
				_case_begin_1e85deddb:;
				{
					return (*(_17131_d)).get()._field_Model.cast_ptr<_1e545884b_TupleExprModel>(&__jule_any_type88).get()._field_Datas;;
				}
			}
			else {
				_case_begin_1e85dca32:;
				{
					jule::Ptr<_1e555874d_Tuple> _17721_t = _1e5552ca8_Tup((*(_17131_d)).get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1e5522d00_Data>> _17821_r = jule::Slice<jule::Ptr<_1e5522d00_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto expr = &(_17721_t.get()._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1e85dd978:;
						if (it != expr_end) {
							jule::Ptr<_1e554dc82_TypeKind> _17925_kind = *it;
							{
								_17821_r = jule::alloc_for_append(_17821_r,1);_17821_r.__push(jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=_17925_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1e85dd978:;
							++it;
							goto _iter_begin_1e85dd978;
						}
						_iter_end_1e85dd978:;
					};
					return _17821_r;;
				}
			}
			_match_end_1e85dc988:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1e5522d00_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1e547e8d8_checkMut(jule::Ptr<_1e54ac295_Sema>* _20618_s, jule::Ptr<_1e5522d00_Data>* _20629_left, jule::Ptr<_1e5522d00_Data> _20646_right, jule::Ptr<_20d155596_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*(_20629_left)).get()._field_Mutable))) {
			_case_begin_1e85e3043:;
			{
				_1e54aee57_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _1e5550404_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1e85e287d:;
			{
				if (((_20660_op.get()._field_Kind != jule::Str("=", 1)) && (_1e555256b_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1e54aee57_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type5)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1e85e2817:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1e85e275c:;
	};
}



inline jule::Bool _1e547ed6c_checkAssign(jule::Ptr<_1e54ac295_Sema>* _22521_s, jule::Ptr<_1e5522d00_Data>* _22536_left, jule::Ptr<_1e5522d00_Data> _22553_right, jule::Ptr<_20d155596_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5463b75_FnIns> _2269_f = _1e5552307_Fn((*(_22536_left)).get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_1e54aee57_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1e55236b3_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1e85e7a3c:;
			{
				_1e54aee57_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1e54b0276_pushSugggestion((*(_22521_s)).ptr(), jule::Str("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*(_22536_left)).get()._field_Lvalue))) {
			_case_begin_1e85e73aa:;
			{
				_1e54aee57_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1e547e8d8_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1e85e7421:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1e85e7344:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1e85e7223:;
	};
}



inline jule::Bool _1e5480114_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1e85e48a2:;
			{
				return (!((*(_24731_n)).cast_ptr<_1e47822b3_AssignSt>(&__jule_any_type59).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1e85e9753:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e85e95cc:;
			{
				return false;;
			}
		}
		_match_end_1e85e74ba:;
	};
}



inline jule::Bool _1e54803ab_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1e85ea743:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1e85ea7a9:;
			{
				{
					auto &_match_expr{ (*(_25824_st)).cast_ptr<_1e5522d00_Data>(&__jule_any_type23).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1e85eb090:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1e85eb447:;
						{
							return false;;
						}
					}
					_match_end_1e85eb18e:;
				};
			}
		}
		else {
			_case_begin_1e85e9a0b:;
			{
				return false;;
			}
		}
		_match_end_1e85e99a6:;
	};
}



inline jule::Bool _1e5480653_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e85eba74:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e85eb656:;
			{
				return false;;
			}
		}
		_match_end_1e85eb568:;
	};
}



inline jule::Ptr<_1e54ca291_Var> _1e54a1861_findVarInPackage(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>* _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e872ed50:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1e54ca291_Var> _4817_v = _1e551dba8_FindVar(_4717_f.ptr(), _4649_ident, _4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1e872ed50:;
			++it;
			goto _iter_begin_1e872ed50;
		}
		_iter_end_1e872ed50:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e554d08e_TypeAlias> _1e54a1c90_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>* _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8731307:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1e554d08e_TypeAlias> _6017_ta = _1e551e060_FindTypeAlias(_5917_f.ptr(), _5855_ident, _5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1e8731307:;
			++it;
			goto _iter_begin_1e8731307;
		}
		_iter_end_1e8731307:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e4790018_Struct> _1e54a217a_findStructInPackage(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>* _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e873279d:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1e4790018_Struct> _7217_s = _1e551e417_FindStruct(_7117_f.ptr(), _7052_ident, _7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1e873279d:;
			++it;
			goto _iter_begin_1e873279d;
		}
		_iter_end_1e873279d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5460ec4_Fn> _1e54a25dc_findFnInPackage(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>* _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8733c44:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1e5460ec4_Fn> _8417_f = _1e551e7be_FindFn(_8317_file.ptr(), _8248_ident, _8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1e8733c44:;
			++it;
			goto _iter_begin_1e8733c44;
		}
		_iter_end_1e8733c44:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5472dc6_Trait> _1e54a28ea_findTraitInPackage(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>* _9428_files, jule::Str _9451_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87342c7:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1e5472dc6_Trait> _9617_t = _1e551eacc_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1e87342c7:;
			++it;
			goto _iter_begin_1e87342c7;
		}
		_iter_end_1e87342c7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e547501b_Enum> _1e54a2c3b_findEnumInPackage(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>* _10627_files, jule::Str _10650_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e87362b8:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1e547501b_Enum> _10817_e = _1e551edda_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1e87362b8:;
			++it;
			goto _iter_begin_1e87362b8;
		}
		_iter_end_1e87362b8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5476616_TypeEnum> _1e54a307c_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>* _11831_files, jule::Str _11854_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8737572:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1e5476616_TypeEnum> _12017_e = _1e55201e8_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1e8737572:;
			++it;
			goto _iter_begin_1e8737572;
		}
		_iter_end_1e8737572:;
	};
	return nullptr;;
}



inline jule::Any _1e54a3577_defByIdentPackage(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_cppLinked) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8738a3a:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _1e5521073_defByIdent(_13017_file.ptr(), (*(_12951_ident)), _12963_cppLinked);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1e8738a3a:;
			++it;
			goto _iter_begin_1e8738a3a;
		}
		_iter_end_1e8738a3a:;
	};
	return nullptr;;
}



inline jule::Bool _1e54a967c_isStdPackage(jule::Str _36117_f, jule::Str _36125_p) {
	return _242eae332_HasPrefix(_36117_f, _241312d08_Join(jule::Slice<jule::Str>::make({_242d165c9_PathStdlib,_36125_p})));;
}



inline jule::Bool _1e54aa45d_isValidModelForRef(jule::Any* _1228_m) {
	{
		auto &_match_expr{ (*(_1228_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e874972c:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1e8749793:;
			{
				jule::Ptr<_1e5457493_StructSubIdentExprModel> _1717_model = (*(_1228_m)).cast_ptr<_1e5457493_StructSubIdentExprModel>(&__jule_any_type71);;
				return _1e54aa45d_isValidModelForRef(&(_1717_model.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1e8749540:;
			{
				jule::Ptr<_1e5456bac_TraitSubIdentExprModel> _2017_model = (*(_1228_m)).cast_ptr<_1e5456bac_TraitSubIdentExprModel>(&__jule_any_type70);;
				return _1e54aa45d_isValidModelForRef(&(_2017_model.get()._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1e87495a6:;
			{
				jule::Ptr<_1e545315e_UnaryExprModel> _2317_unary = (*(_1228_m)).cast_ptr<_1e545315e_UnaryExprModel>(&__jule_any_type74);;
				if ((_2317_unary.get()._field_Op.get()._field_Kind != jule::Str("*", 1))) {
					return false;;
				};
				if ((_1e55515e2_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1e555137d_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1e54aa45d_isValidModelForRef(&(_2317_unary.get()._field_Expr.get()._field_Model));;
			}
		}
		else {
			_case_begin_1e8748b16:;
			{
				return false;;
			}
		}
		_match_end_1e8748ab1:;
	};
}



inline _24305e4ae_Log _1e54aa87b_compilerErr(jule::Ptr<_20d155596_Token>* _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_24305e4ae_Log _4213_log = _24305e4ae_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_4117_token)).get()._field_Row, ._field_Column=(*(_4117_token)).get()._field_Column, ._field_Path=(*(_4117_token)).get()._field_File.get()._field_Path, ._field_Text=_24305e8ee_Logf(_4144_fmt, _4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_20d15bb0d_GetRow((*(_4117_token)).get()._field_File.ptr(), (*(_4117_token)).get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _1e54aabbc_impIsLookupable(jule::Ptr<_1e54a4149_ImportInfo>* _5521_i, jule::Str _5537_ident) {
	if ((*(_5521_i)).get()._field_CppLinked) {
		return false;;
	};
	if ((!((*(_5521_i)).get()._field_ImportAll))) {
		if (((*(_5521_i)).get()._field_Selected.len() > 0LL)) {
			return _1e54a6a20_existIdent((*(_5521_i)).ptr(), _5537_ident);;
		};
	};
	return (*(_5521_i)).get()._field_ImportAll;;
}



inline void _1e54aaeb9_appendRetVars(jule::Slice<jule::Ptr<_1e54ca291_Var>>* _6723_dest, jule::Ptr<_1e5463b75_FnIns>* _6742_f) {
	if ((_1e5461436_IsVoid((*(_6742_f)).get()._field_Decl.ptr()) || ((*(_6742_f)).get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e554dc82_TypeKind>> _7213_types = _1e5464c97_Types((*(_6742_f)).ptr());;
	{
		auto expr = &((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8752658:;
		if (it != expr_end) {
			jule::I64 _7310_i = it - expr->begin();
			jule::Ptr<_20d155596_Token> _7317_ident = *it;
			{
				if ((_20d157d3a_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _20d1580d2_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1e8752658;
				};
				(*(_6723_dest)) = jule::alloc_for_append((*(_6723_dest)),1);(*(_6723_dest)).__push(jule::new_ptr<_1e54ca291_Var>(_1e54ca291_Var{._field_Scope=(*(_6742_f)).get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1e5553160_TypeSymbol>(_1e5553160_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1e5523d78_Value>(_1e5523d78_Value{._field_Data=jule::new_ptr<_1e5522d00_Data>()}), ._field_RetOrder=_7310_i, }));;
			}
			_iter_next_1e8752658:;
			++it;
			_7310_i++;
			goto _iter_begin_1e8752658;
		}
		_iter_end_1e8752658:;
	};
	if ((((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && ((*(_6723_dest)).len() == 1LL))) {
		(*(_6723_dest))[((*(_6723_dest)).len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _1e54ab272_appendParamVars(jule::Slice<jule::Ptr<_1e54ca291_Var>>* _9725_dest, jule::Ptr<_1e5463b75_FnIns>* _9744_f) {
	if (((*(_9744_f)).get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_9744_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8756360:;
		if (it != expr_end) {
			jule::Ptr<_1e5462ca6_ParamIns> _10217_p = *it;
			{
				if ((_20d157d3a_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _20d1580d2_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1e8756360;
				};
				jule::Ptr<_1e54ca291_Var> _10717_v = jule::new_ptr<_1e54ca291_Var>(_1e54ca291_Var{._field_Scope=(*(_9744_f)).get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1e5553160_TypeSymbol>(), ._field_Value=jule::new_ptr<_1e5523d78_Value>(_1e5523d78_Value{._field_Data=jule::new_ptr<_1e5522d00_Data>()}), });;
				{
					
					if (_1e545ecb4_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_1e8758c47:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1e554d853_Kind>((*(_9744_f)).get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_1e5460028_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_1e5460028_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1e554d853_Kind>(jule::new_ptr<_1e5557263_Sptr>(_1e5557263_Sptr{._field_Elem=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_CppIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1e875897d:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1e554d853_Kind>(jule::new_ptr<_1e5557bc0_Slc>(_1e5557bc0_Slc{._field_Elem=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_CppIdent=_10217_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_1e8756a03:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_1e875885c:;
				};
				(*(_9725_dest)) = jule::alloc_for_append((*(_9725_dest)),1);(*(_9725_dest)).__push(_10717_v);;
			}
			_iter_next_1e8756360:;
			++it;
			goto _iter_begin_1e8756360;
		}
		_iter_end_1e8756360:;
	};
}



inline void _1e54ab54c_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1e554d08e_TypeAlias>>* _15734_dest, jule::Ptr<_1e5463b75_FnIns>* _15759_f) {
	jule::I64 _15813_size = (*(_15759_f)).get()._field_Generics.len();;
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=(*(_15759_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_15759_f)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e875de5b:;
		if (it != expr_end) {
			jule::I64 _16710_i = it - expr->begin();
			jule::Ptr<_1e554c555_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_1e4780b1e_GenericDecl> _16817_decl = (*(_15759_f)).get()._field_Decl.get()._field_Generics[_16710_i];;
				(*(_15734_dest)) = jule::alloc_for_append((*(_15734_dest)),1);(*(_15734_dest)).__push(jule::new_ptr<_1e554d08e_TypeAlias>(_1e554d08e_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1e5553160_TypeSymbol>(_1e5553160_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), }));;
			}
			_iter_next_1e875de5b:;
			++it;
			_16710_i++;
			goto _iter_begin_1e875de5b;
		}
		_iter_end_1e875de5b:;
	};
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1e47903e2_StructIns> _18017_owner = (*(_15759_f)).get()._field_Owner;;
		{
			auto expr = &(_18017_owner.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e8760578:;
			if (it != expr_end) {
				jule::I64 _18114_i = it - expr->begin();
				jule::Ptr<_1e554c555_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_1e4780b1e_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					(*(_15734_dest)) = jule::alloc_for_append((*(_15734_dest)),1);(*(_15734_dest)).__push(jule::new_ptr<_1e554d08e_TypeAlias>(_1e554d08e_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1e5553160_TypeSymbol>(_1e5553160_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), }));;
				}
				_iter_next_1e8760578:;
				++it;
				_18114_i++;
				goto _iter_begin_1e8760578;
			}
			_iter_end_1e8760578:;
		};
	};
}



inline jule::Ptr<_1e551cec6_SymbolTable> _1e54ab89e_findFile(jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>* _19518_files, jule::Ptr<_20d15a931_File>* _19542_handler) {
	{
		auto expr = _19518_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e876259c:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == (*(_19542_handler)))) {
					return _19617_fl;;
				};
			}
			_iter_next_1e876259c:;
			++it;
			goto _iter_begin_1e876259c;
		}
		_iter_end_1e876259c:;
	};
	return nullptr;;
}



inline void _1e54abd11_pushSugggestion(_24305e4ae_Log* _20431_log, jule::Str _20442_fmt, jule::Slice<jule::Any> _20455_args) {
	_20431_log->_field_Suggestion=_24305e8ee_Logf(_20442_fmt, _20455_args);
}



inline jule::Bool _1e54e3c05_traitHasReferenceReceiver(jule::Ptr<_1e5472dc6_Trait>* _2631_t) {
	{
		auto expr = &((*(_2631_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8965abe:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> *_2712_f = it;
			{
				if ((*(_2712_f)).get()._field_Statically) {
					goto _iter_next_1e8965abe;
				};
				jule::Ptr<_1e545e687_Param> _3313_p = (*(_2712_f)).get()._field_Params[0LL];;
				if ((_1e5460028_IsRef(_3313_p.ptr()) && _1e545ecb4_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1e8965abe:;
			++it;
			goto _iter_begin_1e8965abe;
		}
		_iter_end_1e8965abe:;
	};
	return false;;
}



inline jule::Bool _1e54e3d37_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1e5522d00_Data>* _4132_d) {
	jule::Str _429_value = _1e4d74476_FmtFloat(static_cast<jule::F64>(_1e54494a7_AsF64((*(_4132_d)).get()._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _1e4d16eb8_CheckBitFloat(_429_value, static_cast<jule::I64>(_1e4d5845a_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _1e550a711_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1e5522d00_Data>* _4630_d) {
	jule::F64 _479_min = _1e5441e94_Min(_4618_kind);;
	jule::F64 _489_max = _1e54420c6_Max(_4618_kind);;
	{
		
		if (_1e544b113_IsF64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1e896bac5:;
			{
				jule::F64 _5113_x = _1e5448c6a_ReadF64((*(_4630_d)).get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1e540242c_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_1e544a8c6_IsU64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1e896c257:;
			{
				jule::F64 _5813_x = _1e54494a7_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_1e544a662_IsI64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1e896c2ce:;
			{
				jule::F64 _6313_x = _1e54494a7_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_1e896c136:;
	};
	return false;;
}



inline jule::Bool _1e550a843_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1e5522d00_Data>* _6932_d) {
	jule::F64 _709_max = _1e54420c6_Max(_6920_kind);;
	if (((*(_6932_d)).get()._field_IsRune && (_6920_kind == jule::Str("u8", 2)))) {
		return _1e54e37d7_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1e54482b9_ReadI64((*(_6932_d)).get()._field_Constant.ptr()))));;
	};
	{
		
		if (_1e544b113_IsF64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1e8972009:;
			{
				jule::F64 _7713_x = _1e5448c6a_ReadF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1e540242c_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_1e544a8c6_IsU64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1e8972070:;
			{
				jule::F64 _8713_x = _1e54494a7_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_1e544a662_IsI64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1e89720e7:;
			{
				jule::F64 _9213_x = _1e54494a7_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_1e8971888:;
	};
	return false;;
}



inline jule::Bool _1e550b8dd_intAssignable(jule::Str _9818_kind, jule::Ptr<_1e5522d00_Data>* _9830_d) {
	{
		
		if (_1e544586b_IsSigInt(_9818_kind)) {
			_case_begin_1e8976728:;
			{
				return _1e550a711_sigAssignable(_9818_kind, _9830_d);;
			}
		}
		else if (_1e5445b57_IsUnsigInt(_9818_kind)) {
			_case_begin_1e89760c9:;
			{
				return _1e550a843_unsigAssignable(_9818_kind, _9830_d);;
			}
		}
		else {
			_case_begin_1e89727bd:;
			{
				return false;;
			}
		}
		_match_end_1e8972702:;
	};
}



inline jule::Ptr<_1e554dc82_TypeKind> _1e551c04c_lenKind(void) {
	return jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("int", 3)), 6)});;
}



inline jule::Ptr<_1e474057e_Directive> _1e5548430_findDirective(jule::Slice<jule::Ptr<_1e474057e_Directive>>* _412223_directives, jule::Str _412254_d) {
	{
		auto expr = _412223_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a793ec:;
		if (it != expr_end) {
			jule::Ptr<_1e474057e_Directive> _412317_dr = *it;
			{
				if ((_412317_dr.get()._field_Tag.get()._field_Kind == _412254_d)) {
					return _412317_dr;;
				};
			}
			_iter_next_1e8a793ec:;
			++it;
			goto _iter_begin_1e8a793ec;
		}
		_iter_end_1e8a793ec:;
	};
	return nullptr;;
}



inline jule::Any _1e55487b5_findBuiltinsImport(jule::Str _413123_ident, jule::Ptr<_1e54a4149_ImportInfo> _413135_imp) {
	return _1e5574b76_findPackageBuiltinDef(_413135_imp.get()._field_LinkPath, _413123_ident);;
}



inline void _1e55489c4_fitBitsize(jule::Ptr<_1e5522d00_Data>* _413820_d) {
	jule::Ptr<_1e55539ce_Prim> _413913_prim = _1e5551119_Prim((*(_413820_d)).get()._field_Kind.ptr());;
	jule::I64 _41409_z = _1e4d5845a_BitsizeOf(_1e5553d42_Str(_413913_prim.ptr()));;
	if ((_41409_z == 64LLU)) {
		return;;
	};
	jule::I64 _414513_k = 0LL;;
	{
		
		if (_1e544a662_IsI64((*(_413820_d)).get()._field_Constant.ptr())) {
			_case_begin_1e8a7bec1:;
			{
				_414513_k=static_cast<jule::I64>(_1e4ca4373_BitsizeOfInt(static_cast<jule::I64>(_1e54482b9_ReadI64((*(_413820_d)).get()._field_Constant.ptr()))));
				if ((_414513_k > _41409_z)) {
					_413913_prim.get()._field_Kind=_1e4d17e42_IntFromBits(_414513_k);
				};
			}
		}
		else if (_1e544a8c6_IsU64((*(_413820_d)).get()._field_Constant.ptr())) {
			_case_begin_1e8a7c048:;
			{
				_414513_k=static_cast<jule::I64>(_1e4d5c3c6_BitsizeOfUint(static_cast<jule::U64>(_1e544852d_ReadU64((*(_413820_d)).get()._field_Constant.ptr()))));
				if ((_414513_k > _41409_z)) {
					_413913_prim.get()._field_Kind=_1e4d37a99_UintFromBits(_414513_k);
				};
			}
		}
		else if (_1e544b113_IsF64((*(_413820_d)).get()._field_Constant.ptr())) {
			_case_begin_1e8a7c0c0:;
			{
				_414513_k=static_cast<jule::I64>(_1e4ca4241_BitsizeOfFloat(static_cast<jule::F64>(_1e5448c6a_ReadF64((*(_413820_d)).get()._field_Constant.ptr()))));
				if ((_414513_k > _41409_z)) {
					_413913_prim.get()._field_Kind=_1e4d1ec29_FloatFromBits(_414513_k);
				};
			}
		}
		_match_end_1e8a7be05:;
	};
}



inline void _1e5548cc1_makeStructLitAlloc(jule::Ptr<_1e5522d00_Data>* _416528_d, jule::Ptr<_1e5453912_StructLitExprModel>* _416543_lit) {
	(*(_416528_d)).get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(jule::new_ptr<_1e5557263_Sptr>(_1e5557263_Sptr{._field_Elem=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>((*(_416543_lit)).get()._field_Strct, 0)})}), 7)});
	(*(_416528_d)).get()._field_Model=jule::Any(jule::new_ptr<_1e5453c20_AllocStructLitExprModel>(_1e5453c20_AllocStructLitExprModel{._field_Lit=(*(_416543_lit))}), &__jule_any_type118);
}



inline jule::Ptr<_1e54ca291_Var> _1e5549112_buildErrorVar(jule::Ptr<_1e5480ad7_Scope>* _417623_s, jule::Ptr<_1e477bd29_FnCallExpr>* _417639_fc) {
	return jule::new_ptr<_1e54ca291_Var>(_1e54ca291_Var{._field_Scope=(*(_417623_s)), ._field_Token=(*(_417639_fc)).get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1e5553160_TypeSymbol>(_1e5553160_TypeSymbol{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_1e5523d78_Value>(_1e5523d78_Value{._field_Data=jule::new_ptr<_1e5522d00_Data>()}), });;
}



inline jule::Any _1e5549453_findBuiltinsSema(jule::Str _419521_ident, jule::Ptr<_1e54ac295_Sema> _419537_s) {
	{
		auto expr = &(_419537_s.get()._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8a81822:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _419617_imp = *it;
			{
				if ((_419617_imp.get()._field_ImportAll || _1e54a6a20_existIdent(_419617_imp.ptr(), _419521_ident))) {
					jule::Any _419821_def = _1e55487b5_findBuiltinsImport(_419521_ident, _419617_imp);;
					if ((_419821_def != nullptr)) {
						return _419821_def;;
					};
				};
			}
			_iter_next_1e8a81822:;
			++it;
			goto _iter_begin_1e8a81822;
		}
		_iter_end_1e8a81822:;
	};
	jule::Str _420613_ppath = _20d15b327_Dir(_419537_s.get()._field_file.get()._field_File.ptr());;
	if (_242eae332_HasPrefix(_420613_ppath, _242d165c9_PathStdlib)) {
		(_420613_ppath).mut_slice(_242d165c9_PathStdlib.len());;
		_420613_ppath=(jule::Str("std", 3) + _242edd3e9_Replace(_420613_ppath, static_cast<jule::Str>(47LL), jule::Str("::", 2), -1LL));
		return _1e5574b76_findPackageBuiltinDef(_420613_ppath, _419521_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1e55496ea_isOkForShifting(jule::Ptr<_1e5522d00_Data>* _422025_d) {
	if (_1e55236b3_IsConst((*(_422025_d)).ptr())) {
		{
			
			if (_1e544a662_IsI64((*(_422025_d)).get()._field_Constant.ptr())) {
				_case_begin_1e8a86250:;
				{
					return (_1e54482b9_ReadI64((*(_422025_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1e544a8c6_IsU64((*(_422025_d)).get()._field_Constant.ptr())) {
				_case_begin_1e8a85a79:;
				{
					return true;;
				}
			}
			else if (_1e544b113_IsF64((*(_422025_d)).get()._field_Constant.ptr())) {
				_case_begin_1e8a85ae0:;
				{
					return (_1e5448c6a_ReadF64((*(_422025_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1e8a85a13:;
				{
					return false;;
				}
			}
			_match_end_1e8a85947:;
		};
	};
	jule::Ptr<_1e55539ce_Prim> _42339_prim = _1e5551119_Prim((*(_422025_d)).get()._field_Kind.ptr());;
	return ((_42339_prim != nullptr) && _1e5445dee_IsInt(_1e5553d42_Str(_42339_prim.ptr())));;
}



inline jule::Bool _1e5549aa2_isInstancedStruct(jule::Ptr<_1e47903e2_StructIns> _423722_s) {
	return (_423722_s.get()._field_Decl.get()._field_Generics.len() == _423722_s.get()._field_Generics.len());;
}



inline jule::Bool _1e5549e15_isPtrArithmeticCompatible(jule::Ptr<_1e5522d00_Data>* _424135_l, jule::Ptr<_1e5522d00_Data>* _424150_r) {
	jule::Ptr<_1e555a7c7_Ptr> _42429_ptr = _1e55515e2_Ptr((*(_424150_r)).get()._field_Kind.ptr());;
	if ((_42429_ptr != nullptr)) {
		return _1e554e48b_Equal(_1e55515e2_Ptr((*(_424135_l)).get()._field_Kind.ptr()).get()._field_Elem, _42429_ptr.get()._field_Elem);;
	};
	if (_1e55236b3_IsConst((*(_424150_r)).ptr())) {
		return _1e550b8dd_intAssignable(jule::Str("int", 3), _424150_r);;
	};
	_1e550bab9_typeCompatibilityChecker _424913_tcc = _1e550bab9_typeCompatibilityChecker{._field_dest=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=(*(_424150_r)).get()._field_Kind, };;
	return _1e550d1a3_check(&_424913_tcc);;
}



inline void _1e554a157_applyCastKindModel(jule::Ptr<_1e5522d00_Data>* _425828_d, jule::Ptr<_1e554dc82_TypeKind>* _425843_t) {
	(*(_425828_d)).get()._field_Model=jule::Any(jule::new_ptr<_1e5454270_CastingExprModel>(_1e5454270_CastingExprModel{._field_Expr=(*(_425828_d)).get()._field_Model, ._field_Kind=(*(_425843_t)), ._field_ExprKind=(*(_425828_d)).get()._field_Kind}), &__jule_any_type100);
}



inline void _1e554a410_applyCastKind(jule::Ptr<_1e5522d00_Data>* _426623_d, jule::Ptr<_1e554dc82_TypeKind>* _426638_t) {
	_1e554a157_applyCastKindModel(_426623_d, _426638_t);
	(*(_426623_d)).get()._field_Kind=(*(_426638_t));
}



inline jule::Ptr<_1e5522d00_Data> _1e554a60d_buildVoidData(void) {
	return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("void", 4)), 6)}), });;
}



inline jule::Str _1e554a8c7_checkDataForIntegerIndexing(jule::Ptr<_1e5522d00_Data>* _427937_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_427937_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1e5551119_Prim((*(_427937_d)).get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1e8a8d29b:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1e5445dee_IsInt(_1e5553d42_Str(_1e5551119_Prim((*(_427937_d)).get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1e8a8d312:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1e55236b3_IsConst((*(_427937_d)).ptr())) {
			_case_begin_1e8a8d378:;
			{
				if ((_1e54494a7_AsF64((*(_427937_d)).get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1e5551119_Prim((*(_427937_d)).get()._field_Kind.ptr()) == nullptr) || _1e55236b3_IsConst((*(_427937_d)).ptr()) || (_1e4d57ee8_RealKindOf(_1e5553d42_Str(_1e5551119_Prim((*(_427937_d)).get()._field_Kind.ptr()).ptr())) != _1e4d57ee8_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1e8a8d3de:;
			{
				jule::Ptr<_1e554dc82_TypeKind> _429617_t = jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("int", 3)), 6)});;
				_1e554a410_applyCastKind(_427937_d, &(_429617_t));
			}
		}
		_match_end_1e8a8cdd3:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1e554ab91_applyCastModelByEnum(jule::Ptr<_1e5522d00_Data>* _430530_d, jule::Ptr<_1e547501b_Enum> _430544_e) {
	if ((_430544_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1e55539ce_Prim> _43099_p = _1e5551119_Prim(_430544_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1e5556c13_IsStr(_43099_p.ptr())) {
		return;;
	};
	_1e554a157_applyCastKindModel(_430530_d, &(_430544_e.get()._field_Kind.get()._field_Kind));
}



inline void _1e554ae49_castConstByType(jule::Str* _431621_t, jule::Ptr<_1e5522d00_Data>* _431634_d) {
	{
		
		if (_1e544586b_IsSigInt((*(_431621_t)))) {
			_case_begin_1e8a934d2:;
			{
				{
					auto _match_expr{ _1e4d5845a_BitsizeOf(_1e4d57ee8_RealKindOf((*(_431621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1e8a9412b:;
						{
							_1e544972c_SetI64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1e5448ece_AsI64((*(_431634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1e8a941a3:;
						{
							_1e544972c_SetI64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1e5448ece_AsI64((*(_431634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1e8a94219:;
						{
							_1e544972c_SetI64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1e5448ece_AsI64((*(_431634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1e8a94280:;
						{
							_1e544972c_SetI64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1e5448ece_AsI64((*(_431634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1e8a93768:;
				};
			}
		}
		else if (_1e5445b57_IsUnsigInt((*(_431621_t)))) {
			_case_begin_1e8a93559:;
			{
				{
					auto _match_expr{ _1e4d5845a_BitsizeOf(_1e4d57ee8_RealKindOf((*(_431621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1e8a975e6:;
						{
							_1e54499a2_SetU64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1e5449243_AsU64((*(_431634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1e8a9767e:;
						{
							_1e54499a2_SetU64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1e5449243_AsU64((*(_431634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1e8a976e5:;
						{
							_1e54499a2_SetU64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1e5449243_AsU64((*(_431634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1e8a9775b:;
						{
							_1e54499a2_SetU64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1e5449243_AsU64((*(_431634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1e8a93955:;
				};
			}
		}
		else if (_1e544621d_IsFloat((*(_431621_t)))) {
			_case_begin_1e8a935d1:;
			{
				{
					auto _match_expr{ _1e4d5845a_BitsizeOf(_1e4d57ee8_RealKindOf((*(_431621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1e8a9aac2:;
						{
							_1e544a222_SetF64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1e54494a7_AsF64((*(_431634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1e8a9ab5a:;
						{
							_1e544a222_SetF64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1e54494a7_AsF64((*(_431634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1e8a99296:;
				};
			}
		}
		_match_end_1e8a933b1:;
	};
}



inline void _1e554b455_updateModelToGenericIns(jule::Any* _435033_m, jule::Ptr<_1e5463b75_FnIns>* _435052_f) {
	{
		auto &_match_expr{ (*(_435033_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1e8a9bc49:;
			{
				(*(_435033_m))=jule::Any((*(_435052_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1e8aa1b72:;
			{
				(*(_435033_m)).cast_ptr<_1e5457493_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Method=(*(_435052_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1e8aa1be9:;
			{
				(*(_435033_m)).cast_ptr<_1e5457839_StructStaticIdentExprModel>(&__jule_any_type103).get()._field_Method=(*(_435052_f));
			}
		}
		_match_end_1e8a9b122:;
	};
}



inline jule::Bool _1e554b697_pushSubIdentFromExpr(jule::Any _436129_expr, jule::Ptr<_1e477453b_SubIdentTypeDecl>* _436150_t) {
	{
		auto &_match_expr{ _436129_expr };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1e8aa4191:;
			{
				jule::Ptr<_1e4779a08_IdentExpr> _436417_e = _436129_expr.cast_ptr<_1e4779a08_IdentExpr>(&__jule_any_type86);;
				(*(_436150_t)).get()._field_Idents = jule::alloc_for_append((*(_436150_t)).get()._field_Idents,1);(*(_436150_t)).get()._field_Idents.__push(jule::new_ptr<_1e4773ddc_IdentTypeDecl>(_1e4773ddc_IdentTypeDecl{._field_Token=_436417_e.get()._field_Token, ._field_Ident=_436417_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1e8aa4207:;
			{
				jule::Ptr<_1e477b29b_SubIdentExpr> _437017_e = _436129_expr.cast_ptr<_1e477b29b_SubIdentExpr>(&__jule_any_type92);;
				if ((!(_1e554b697_pushSubIdentFromExpr(_437017_e.get()._field_Expr.get()._field_Kind, _436150_t)))) {
					return false;;
				};
				(*(_436150_t)).get()._field_Idents = jule::alloc_for_append((*(_436150_t)).get()._field_Idents,1);(*(_436150_t)).get()._field_Idents.__push(jule::new_ptr<_1e4773ddc_IdentTypeDecl>(_1e4773ddc_IdentTypeDecl{._field_Token=_437017_e.get()._field_Ident, ._field_Ident=_437017_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_1e8aa3aec:;
			{
				return false;;
			}
		}
		_match_end_1e8aa3a97:;
	};
	return true;;
}



inline jule::Bool _1e556598b_kindUsesGenerics(jule::Ptr<_1e554dc82_TypeKind>* _158526_k, jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>>* _158541_generics) {
	{
		auto expr = _158541_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8e3c67d:;
		if (it != expr_end) {
			jule::Ptr<_1e4780b1e_GenericDecl> *_158612_g = it;
			{
				if (static__1e5565590_exist(&((*(_158612_g)).get()._field_Ident), _158526_k)) {
					return true;;
				};
			}
			_iter_next_1e8e3c67d:;
			++it;
			goto _iter_begin_1e8e3c67d;
		}
		_iter_end_1e8e3c67d:;
	};
	return false;;
}



inline jule::Bool _1e5565d21_hasDirective(jule::Slice<jule::Ptr<_1e474057e_Directive>>* _159522_directives, jule::Str _159553_tag) {
	{
		auto expr = _159522_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e8e3ccaa:;
		if (it != expr_end) {
			jule::Ptr<_1e474057e_Directive> _159617_dr = *it;
			{
				if ((_159617_dr.get()._field_Tag.get()._field_Kind == _159553_tag)) {
					return true;;
				};
			}
			_iter_next_1e8e3ccaa:;
			++it;
			goto _iter_begin_1e8e3ccaa;
		}
		_iter_end_1e8e3ccaa:;
	};
	return false;;
}



inline jule::Bool _1e55660b8_canGetPtr(jule::Ptr<_1e5522d00_Data>* _160419_d) {
	if (((!((*(_160419_d)).get()._field_Lvalue)) || _1e55236b3_IsConst((*(_160419_d)).ptr()))) {
		return false;;
	};
	{
		
		if (((_1e5552307_Fn((*(_160419_d)).get()._field_Kind.ptr()) != nullptr) || (_1e5551856_Enum((*(_160419_d)).get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1e8e401ec:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1e8e3ea48:;
			{
				return true;;
			}
		}
		_match_end_1e8e3e9e3:;
	};
}



inline jule::Bool _1e55663d7_isValidForSptrType(jule::Ptr<_1e554dc82_TypeKind>* _161728_t) {
	jule::Ptr<_1e47903e2_StructIns> _161813_s = _1e555256b_Struct((*(_161728_t)).ptr());;
	if ((((_161813_s != nullptr) && (_161813_s.get()._field_Decl != nullptr)) && _161813_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1e556667e_isValidForRef(jule::Ptr<_1e554dc82_TypeKind>* _162623_t) {
	return (_1e5552307_Fn((*(_162623_t)).ptr()) == nullptr);;
}



inline jule::Bool _1e5566948_isBuiltinStrConvertable(jule::Ptr<_1e554dc82_TypeKind>* _162933_t) {
	return (((!(_1e554ee2b_Void((*(_162933_t)).ptr()))) && (_1e5552307_Fn((*(_162933_t)).ptr()) == nullptr)) && (_1e5552ca8_Tup((*(_162933_t)).ptr()) == nullptr));;
}



inline jule::Str _1e5566bbd_buildLinkPathByTokens(jule::Slice<jule::Ptr<_20d155596_Token>>* _163327_tokens) {
	jule::Str _163413_s = (*(_163327_tokens))[0LL].get()._field_Kind;;
	{
		auto expr = (*(_163327_tokens)).slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1e8e43ce4:;
		if (it != expr_end) {
			jule::Ptr<_20d155596_Token> *_163512_token = it;
			{
				_163413_s+=jule::Str("::", 2);
				_163413_s+=(*(_163512_token)).get()._field_Kind;
			}
			_iter_next_1e8e43ce4:;
			++it;
			goto _iter_begin_1e8e43ce4;
		}
		_iter_end_1e8e43ce4:;
	};
	return _163413_s;;
}



inline jule::Ptr<_1e55539ce_Prim> _1e5567075_buildPrimType(jule::Str _164218_kind) {
	return jule::new_ptr<_1e55539ce_Prim>(_1e55539ce_Prim{._field_Kind=_164218_kind});;
}



inline jule::Ptr<_1e4790018_Struct> _1e556731c_getStructFromKind(jule::Ptr<_1e554dc82_TypeKind> _164826_k) {
	{
		
		if ((_164826_k == nullptr)) {
			_case_begin_1e8e45015:;
			{
				return nullptr;;
			}
		}
		else if ((_1e555256b_Struct(_164826_k.ptr()) != nullptr)) {
			_case_begin_1e8e4507b:;
			{
				return _1e555256b_Struct(_164826_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_1e555137d_Sptr(_164826_k.ptr()) != nullptr)) {
			_case_begin_1e8e450e2:;
			{
				return _1e556731c_getStructFromKind(_1e555137d_Sptr(_164826_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1e5552093_Slc(_164826_k.ptr()) != nullptr)) {
			_case_begin_1e8e45158:;
			{
				return _1e556731c_getStructFromKind(_1e5552093_Slc(_164826_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1e5551d2e_Arr(_164826_k.ptr()) != nullptr)) {
			_case_begin_1e8e453de:;
			{
				return _1e556731c_getStructFromKind(_1e5551d2e_Arr(_164826_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1e55515e2_Ptr(_164826_k.ptr()) != nullptr)) {
			_case_begin_1e8e45455:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_1e8e44e9e:;
			{
				return nullptr;;
			}
		}
		_match_end_1e8e444ed:;
	};
}



inline jule::Bool _1e55675b4_isPrim(jule::Str _167111_kind) {
	return ((((((((((((((((_167111_kind == jule::Str("i8", 2)) || (_167111_kind == jule::Str("i16", 3))) || (_167111_kind == jule::Str("i32", 3))) || (_167111_kind == jule::Str("i64", 3))) || (_167111_kind == jule::Str("u8", 2))) || (_167111_kind == jule::Str("u16", 3))) || (_167111_kind == jule::Str("u32", 3))) || (_167111_kind == jule::Str("u64", 3))) || (_167111_kind == jule::Str("f32", 3))) || (_167111_kind == jule::Str("f64", 3))) || (_167111_kind == jule::Str("int", 3))) || (_167111_kind == jule::Str("uint", 4))) || (_167111_kind == jule::Str("uintptr", 7))) || (_167111_kind == jule::Str("bool", 4))) || (_167111_kind == jule::Str("str", 3))) || (_167111_kind == jule::Str("any", 3)));;
}



inline void _1e556786c_applyImplicitCast(jule::Ptr<_1e554dc82_TypeKind>* _169027_dest, jule::Ptr<_1e5522d00_Data>* _169049_d) {
	if (_1e554ebb7_IsNil((*(_169049_d)).get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1e55539ce_Prim> _16949_destPrim = _1e5551119_Prim((*(_169027_dest)).ptr());;
	jule::Ptr<_1e55539ce_Prim> _16959_prim = _1e5551119_Prim((*(_169049_d)).get()._field_Kind.ptr());;
	if ((_16949_destPrim != nullptr)) {
		if (_1e5556e77_IsAny(_16949_destPrim.ptr())) {
			if (((_16959_prim == nullptr) || (!(_1e5556e77_IsAny(_16959_prim.ptr()))))) {
				_1e554a410_applyCastKind(_169049_d, _169027_dest);
			};
			return;;
		};
		if (((((((!(_1e554e953_CppLinked((*(_169049_d)).get()._field_Kind.ptr()))) && (!((*(_169049_d)).get()._field_Kind.get()._field_Variadic))) && (!((*(_169049_d)).get()._field_Lvalue))) && (!(_1e55236b3_IsConst((*(_169049_d)).ptr())))) && (_16959_prim != nullptr)) && _1e54464b5_IsNum(_16959_prim.get()._field_Kind))) {
			_1e554a410_applyCastKind(_169049_d, _169027_dest);
		};
		return;;
	};
	if (((_1e55527d0_Trait((*(_169027_dest)).ptr()) != nullptr) && (_1e55527d0_Trait((*(_169049_d)).get()._field_Kind.ptr()) == nullptr))) {
		_1e554a157_applyCastKindModel(_169049_d, _169027_dest);
		return;;
	};
	if (((_1e5551aba_TypeEnum((*(_169027_dest)).ptr()) != nullptr) && (_1e5551aba_TypeEnum((*(_169049_d)).get()._field_Kind.ptr()) == nullptr))) {
		_1e554a157_applyCastKindModel(_169049_d, _169027_dest);
		return;;
	};
}



inline __jule_tuple_x_1e551cec6_SymbolTable__jule_tuple_s_24305e4ae_Log _1e556a8d6_buildSymbols(jule::Ptr<_1e473e391_Ast>* _1622_ast, jule::Trait<_1e54a14cb_Importer>* _1638_importer, jule::Ptr<_1e546c3ed_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1e551cec6_SymbolTable__jule_tuple_s_24305e4ae_Log __jule_func_result;
	jule::Ptr<_1e546c3ed_symbolBuilder> _1713_sb = jule::new_ptr<_1e546c3ed_symbolBuilder>(_1e546c3ed_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1e547239d_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1e54a70a3_Package__jule_tuple_s_24305e4ae_Log _1e556ad15_analyzePackage(jule::Slice<jule::Ptr<_1e473e391_Ast>>* _3024_files, jule::Trait<_1e54a14cb_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1e54a70a3_Package__jule_tuple_s_24305e4ae_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_1e551cec6_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9046e2a:;
		if (it != expr_end) {
			jule::Ptr<_1e473e391_Ast> _3317_f = *it;
			{
				jule::Ptr<_1e551cec6_SymbolTable> _3418_table;;
				jule::Slice<_24305e4ae_Log> _3429_errors;;
				({
					__jule_tuple_x_1e551cec6_SymbolTable__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e556a8d6_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_1e9046e2a:;
			++it;
			goto _iter_begin_1e9046e2a;
		}
		_iter_end_1e9046e2a:;
	};
	jule::Ptr<_1e54ac295_Sema> _4113_sema = jule::new_ptr<_1e54ac295_Sema>(_1e54ac295_Sema{._field_flags=(*(_3065_flags))});;
	_1e54c71e4_check(_4113_sema, &(_3213_tables));
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1e54a70a3_Package> _4913_pkg = jule::new_ptr<_1e54a70a3_Package>(_1e54a70a3_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _4913_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1e54a70a3_Package__jule_tuple_s_24305e4ae_Log _1e556b200_AnalyzePackage(jule::Slice<jule::Ptr<_1e473e391_Ast>> _7323_files, jule::Trait<_1e54a14cb_Importer> _7342_importer, jule::I64 _7362_flags) {
	__jule_tuple_x_1e54a70a3_Package__jule_tuple_s_24305e4ae_Log __jule_func_result;
	if ((_7323_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1e54a70a3_Package> _7714_package;;
	jule::Slice<_24305e4ae_Log> _7727_logs;;
	({
		__jule_tuple_x_1e54a70a3_Package__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e556ad15_analyzePackage(&(_7323_files), &(_7342_importer), &(_7362_flags));
		_7714_package = __jule_assign_result.__jule_result_arg0;
		_7727_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7714_package;
	__jule_func_result.__jule_result_arg1 = _7727_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1e5463b75_FnIns> _1e55772b6_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1e9050939:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _2620_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e621b311_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1e90510ee:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _2920_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e621b6eb_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1e90511dc:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _3220_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e621bad6_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1e9051253:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _3520_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e621bec1_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1e9050c36:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _3820_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e621c5dc_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1e9050c9c:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _4120_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e621c9c7_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1e9050d24:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _4420_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e621d7ca_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1e9050d9b:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _4720_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e621e9c9_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1e90512ca:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _5020_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e6220546_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1e9051352:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _5320_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e6220db5_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1e90513c9:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _5620_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e62212a0_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1e9051451:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _5920_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e6221866_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1e9050ac1:;
			{
				return nullptr;;
			}
		}
		_match_end_1e9050a27:;
	};
}



inline jule::Ptr<_1e554d08e_TypeAlias> _1e5578e00_findBuiltinTypeAlias(jule::Str _6625_ident) {
	{
		auto &_match_expr{ _6625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1e9058a41:;
			{
				static jule::Ptr<_1e554d08e_TypeAlias> _6920_t = jule::new_ptr<_1e554d08e_TypeAlias>(_1e554d08e_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1e5553160_TypeSymbol>(_1e5553160_TypeSymbol{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _6920_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1e9058aa7:;
			{
				static jule::Ptr<_1e554d08e_TypeAlias> _7920_t = jule::new_ptr<_1e554d08e_TypeAlias>(_1e554d08e_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1e5553160_TypeSymbol>(_1e5553160_TypeSymbol{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _7920_t;;
			}
		}
		else {
			_case_begin_1e905847a:;
			{
				return nullptr;;
			}
		}
		_match_end_1e9057ea2:;
	};
}



inline jule::Any _1e557d7c8_findBuiltinDef(jule::Str _9319_ident) {
	jule::Ptr<_1e5463b75_FnIns> _9413_f = _1e55772b6_findBuiltinFn(_9319_ident);;
	if ((_9413_f != nullptr)) {
		return jule::Any(_9413_f, &__jule_any_type7);;
	};
	jule::Ptr<_1e554d08e_TypeAlias> _9813_ta = _1e5578e00_findBuiltinTypeAlias(_9319_ident);;
	if ((_9813_ta != nullptr)) {
		return jule::Any(_9813_ta, &__jule_any_type67);;
	};
	return nullptr;;
}



inline jule::Any _1e557c981_findBuiltinDefStdDebug(jule::Str _10527_ident) {
	{
		auto &_match_expr{ _10527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1e905b9de:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _10820_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e62232a2_builtinCallerStdDebugOut), });;
				return jule::Any(_10820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1e905c1e8:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _11120_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e622368c_builtinCallerStdDebugOutln), });;
				return jule::Any(_11120_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1e905b7ad:;
			{
				return nullptr;;
			}
		}
		_match_end_1e905bbba:;
	};
}



inline jule::Any _1e557cab3_findBuiltinDefStdMem(jule::Str _11825_ident) {
	{
		auto &_match_expr{ _11825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1e905da79:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _12120_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e6221bc9_builtinCallerStdMemSizeOf), });;
				return jule::Any(_12120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1e905dae0:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _12420_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e62220e7_builtinCallerStdMemAlignOf), });;
				return jule::Any(_12420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1e905d89d:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _12720_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e6222515_builtinCallerStdMemFree), });;
				return jule::Any(_12720_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1e905bd0d:;
			{
				return nullptr;;
			}
		}
		_match_end_1e905cade:;
	};
}



inline jule::Any _1e5574a44_findBuiltinDefStdJuleIntegrated(jule::Str _13436_ident) {
	{
		auto &_match_expr{ _13436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1e9060d45:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _13720_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e6222944_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_13720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1e9060dab:;
			{
				static jule::Ptr<_1e5463b75_FnIns> _14020_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_Decl=jule::new_ptr<_1e5460ec4_Fn>(_1e5460ec4_Fn{._field_Generics=jule::Slice<jule::Ptr<_1e4780b1e_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e6222d62_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_14020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1e905db56:;
			{
				return nullptr;;
			}
		}
		_match_end_1e905edaa:;
	};
}



inline jule::Any _1e5574b76_findPackageBuiltinDef(jule::Str _15226_link_path, jule::Str _15242_ident) {
	{
		auto &_match_expr{ _15226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1e9062cae:;
			{
				return _1e557c981_findBuiltinDefStdDebug(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1e9062d25:;
			{
				return _1e557cab3_findBuiltinDefStdMem(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1e9062ad3:;
			{
				return _1e5574a44_findBuiltinDefStdJuleIntegrated(_15242_ident);;
			}
		}
		else {
			_case_begin_1e90626c6:;
			{
				return nullptr;;
			}
		}
		_match_end_1e9061791:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e621a442_builtinCallerCommonPlain(jule::Ptr<_1e552486d_Eval>* _16534_e, jule::Ptr<_1e477bd29_FnCallExpr>* _16549_fc, jule::Ptr<_1e5522d00_Data>* _16571_d) {
	jule::Ptr<_1e5463b75_FnIns> _16613_f = _1e5552307_Fn((*(_16571_d)).get()._field_Kind.ptr());;
	_1e5514a8e_fnCallArgChecker _16813_fcac = _1e5514a8e_fnCallArgChecker{._field_e=(*(_16534_e)), ._field_args=(*(_16549_fc)).get()._field_Args, ._field_errorToken=(*(_16549_fc)).get()._field_Token, ._field_f=_16613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1e5516e59_check(&_16813_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1e5454b22_FnCallExprModel> _17913_model = jule::new_ptr<_1e5454b22_FnCallExprModel>(_1e5454b22_FnCallExprModel{._field_Token=(*(_16549_fc)).get()._field_Token, ._field_Func=_16613_f, ._field_Expr=(*(_16571_d)).get()._field_Model, ._field_Args=_16813_fcac._field_argModels, });;
	if ((_16613_f.get()._field_Result == nullptr)) {
		(*(_16571_d))=_1e554a60d_buildVoidData();
	} else {
		(*(_16571_d))=jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=_16613_f.get()._field_Result, });
	};
	(*(_16571_d)).get()._field_Model=jule::Any(_17913_model, &__jule_any_type34);
	return (*(_16571_d));;
}



inline jule::Ptr<_1e5522d00_Data> _1e621a6ea_builtinCallerCommon(jule::Ptr<_1e552486d_Eval>* _19829_e, jule::Ptr<_1e477bd29_FnCallExpr>* _19844_fc, jule::Ptr<_1e5522d00_Data>* _19866_d) {
	return _1e621a442_builtinCallerCommonPlain(_19829_e, _19844_fc, _19866_d);;
}



inline jule::Ptr<_1e5522d00_Data> _1e621aad5_builtinCallerCommonMut(jule::Ptr<_1e552486d_Eval>* _20232_e, jule::Ptr<_1e477bd29_FnCallExpr>* _20247_fc, jule::Ptr<_1e5522d00_Data>* _20269_d) {
	if ((!((*(_20269_d)).get()._field_Mutable))) {
		_1e5524d79_pushErr((*(_20232_e)).ptr(), (*(_20247_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	return _1e621a6ea_builtinCallerCommon(_20232_e, _20247_fc, _20269_d);;
}



inline jule::Ptr<_1e5522d00_Data> _1e621ae26_builtinCallerError(jule::Ptr<_1e552486d_Eval>* _20928_e, jule::Ptr<_1e477bd29_FnCallExpr>* _20943_fc) {
	if (((*(_20943_fc)).get()._field_Args.len() < 1LL)) {
		_1e5524d79_pushErr((*(_20928_e)).ptr(), (*(_20943_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_20943_fc)).get()._field_Args.len() > 1LL)) {
		_1e5524d79_pushErr((*(_20928_e)).ptr(), (*(_20943_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _21713_expr = _1e5540290_evalExpr((*(_20928_e)), (*(_20943_fc)).get()._field_Args[0LL]);;
	if ((_21713_expr == nullptr)) {
		return nullptr;;
	};
	if (_1e55231da_IsNil(_21713_expr.ptr())) {
		_1e5524d79_pushErr((*(_20928_e)).ptr(), (*(_20943_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _22613_d = _1e554a60d_buildVoidData();;
	_22613_d.get()._field_Model=jule::Any(jule::new_ptr<_1e545c08b_BuiltinErrorCallExprModel>(_1e545c08b_BuiltinErrorCallExprModel{._field_Err=_21713_expr}), &__jule_any_type22);
	return _22613_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e621b311_builtinCallerOut(jule::Ptr<_1e552486d_Eval>* _23126_e, jule::Ptr<_1e477bd29_FnCallExpr>* _23141_fc, jule::Ptr<_1e5522d00_Data>* ) {
	if (((*(_23141_fc)).get()._field_Args.len() < 1LL)) {
		_1e5524d79_pushErr((*(_23126_e)).ptr(), (*(_23141_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_23141_fc)).get()._field_Args.len() > 1LL)) {
		_1e5524d79_pushErr((*(_23126_e)).ptr(), (*(_23141_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _24013_expr = _1e5540290_evalExpr((*(_23126_e)), (*(_23141_fc)).get()._field_Args[0LL]);;
	if ((_24013_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e5566948_isBuiltinStrConvertable(&(_24013_expr.get()._field_Kind))))) {
		_1e5524d79_pushErr((*(_23126_e)).ptr(), (*(_23141_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5522d00_Data> _25013_d = _1e554a60d_buildVoidData();;
	_25013_d.get()._field_Model=jule::Any(jule::new_ptr<_1e5458c25_BuiltinOutCallExprModel>(_1e5458c25_BuiltinOutCallExprModel{._field_Expr=_24013_expr.get()._field_Model, }), &__jule_any_type27);
	return _25013_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e621b6eb_builtinCallerOutln(jule::Ptr<_1e552486d_Eval>* _25528_e, jule::Ptr<_1e477bd29_FnCallExpr>* _25543_fc, jule::Ptr<_1e5522d00_Data>* _25565_d) {
	(*(_25565_d))=_1e621b311_builtinCallerOut(_25528_e, _25543_fc, _25565_d);
	if (((*(_25565_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_25565_d)).get()._field_Model=jule::Any(jule::new_ptr<_1e5459110_BuiltinOutlnCallExprModel>(_1e5459110_BuiltinOutlnCallExprModel{._field_Expr=(*(_25565_d)).get()._field_Model.cast_ptr<_1e5458c25_BuiltinOutCallExprModel>(&__jule_any_type27).get()._field_Expr, }), &__jule_any_type28);
	return (*(_25565_d));;
}



inline jule::Ptr<_1e5522d00_Data> _1e621bad6_builtinCallerNew(jule::Ptr<_1e552486d_Eval>* _26726_e, jule::Ptr<_1e477bd29_FnCallExpr>* _26741_fc, jule::Ptr<_1e5522d00_Data>* _26763_d) {
	if (((*(_26741_fc)).get()._field_Args.len() < 1LL)) {
		_1e5524d79_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_26741_fc)).get()._field_Args.len() > 2LL)) {
		_1e5524d79_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _27613_t = _1e553eb74_evalExprKind((*(_26726_e)), (*(_26741_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_27613_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_27613_t.get()._field_Decl))) {
		_1e5524d79_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1e55663d7_isValidForSptrType(&(_27613_t.get()._field_Kind))))) {
		jule::Ptr<_1e47903e2_StructIns> _28717_s = _1e555256b_Struct(_27613_t.get()._field_Kind.ptr());;
		if ((((_28717_s != nullptr) && (_28717_s.get()._field_Decl != nullptr)) && _28717_s.get()._field_Decl.get()._field_CppLinked)) {
			_1e5524d79_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("cpp-linked structures cannot supports reference counting", 56), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*(_26763_d)).get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(jule::new_ptr<_1e5557263_Sptr>(_1e5557263_Sptr{._field_Elem=_27613_t.get()._field_Kind}), 7)});
	if (((*(_26741_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1e554dc82_TypeKind> _30117_old = (*(_26726_e)).get()._field_prefix;;
		(*(_26726_e)).get()._field_prefix=_27613_t.get()._field_Kind;
		jule::Ptr<_1e5522d00_Data> _30417_init = _1e5540290_evalExpr((*(_26726_e)), (*(_26741_fc)).get()._field_Args[1LL]);;
		(*(_26726_e)).get()._field_prefix=_30117_old;
		if ((_30417_init != nullptr)) {
			jule::Ptr<_20d155596_Token> _30921_token = (*(_26741_fc)).get()._field_Args[1LL].get()._field_Token;;
			;
			_1e54b9c53_checkValidityForInitExpr((*(_26726_e)).get()._field_s, (!((*(_26726_e)).get()._field_immutable)), false, &(_27613_t.get()._field_Kind), &(_30417_init), &(_30921_token));
			_1e54b6d3d_checkAssignType((*(_26726_e)).get()._field_s, false, &(_27613_t.get()._field_Kind), &(_30417_init), _30921_token);
			(*(_26763_d)).get()._field_Model=jule::Any(jule::new_ptr<_1e5459819_BuiltinNewCallExprModel>(_1e5459819_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, ._field_Init=_30417_init.get()._field_Model}), &__jule_any_type119);
		};
	} else {
		(*(_26763_d)).get()._field_Model=jule::Any(jule::new_ptr<_1e5459819_BuiltinNewCallExprModel>(_1e5459819_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, }), &__jule_any_type119);
	};
	return (*(_26763_d));;
}



inline jule::Ptr<_1e5522d00_Data> _1e621bec1_builtinCallerPanic(jule::Ptr<_1e552486d_Eval>* _32928_e, jule::Ptr<_1e477bd29_FnCallExpr>* _32943_fc, jule::Ptr<_1e5522d00_Data>* ) {
	if (((*(_32943_fc)).get()._field_Args.len() < 1LL)) {
		_1e5524d79_pushErr((*(_32928_e)).ptr(), (*(_32943_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_32943_fc)).get()._field_Args.len() > 1LL)) {
		_1e5524d79_pushErr((*(_32928_e)).ptr(), (*(_32943_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _33813_expr = _1e5540290_evalExpr((*(_32928_e)), (*(_32943_fc)).get()._field_Args[0LL]);;
	if ((_33813_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1e5551119_Prim(_33813_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1e5556c13_IsStr(_1e5551119_Prim(_33813_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1e5524d79_pushErr((*(_32928_e)).ptr(), (*(_32943_fc)).get()._field_Token, jule::Str("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _34713_d = _1e554a60d_buildVoidData();;
	_34713_d.get()._field_Model=jule::Any(jule::new_ptr<_1e5459c04_BuiltinPanicCallExprModel>(_1e5459c04_BuiltinPanicCallExprModel{._field_Token=(*(_32943_fc)).get()._field_Token, ._field_Expr=_33813_expr.get()._field_Model}), &__jule_any_type29);
	return _34713_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e621c5dc_builtinCallerMake(jule::Ptr<_1e552486d_Eval>* _35527_e, jule::Ptr<_1e477bd29_FnCallExpr>* _35542_fc, jule::Ptr<_1e5522d00_Data>* _35564_d) {
	if (((*(_35542_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_35542_fc)).get()._field_Args.len() == 1LL)) {
			_1e5524d79_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		_1e5524d79_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e5522d00_Data> _36513_t = _1e553eb74_evalExprKind((*(_35527_e)), (*(_35542_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_36513_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_36513_t.get()._field_Decl))) {
		_1e5524d79_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_35542_fc)).get()._field_Args.len() > 3LL)) {
		_1e5524d79_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Args[3LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_35564_d)).get()._field_Kind=_36513_t.get()._field_Kind;
	jule::Ptr<_1e5522d00_Data> _38113_lenExpr = _1e5540290_evalExpr(_1e54b6535_evalp((*(_35527_e)).get()._field_s, (*(_35527_e)).get()._field_lookup, _36513_t.get()._field_Kind), (*(_35542_fc)).get()._field_Args[1LL]);;
	if ((_38113_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1e552d46a_checkIntegerIndexingByData((*(_35527_e)).ptr(), &(_38113_lenExpr), (*(_35542_fc)).get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1e545a661_BuiltinMakeCallExprModel> _38813_model = jule::new_ptr<_1e545a661_BuiltinMakeCallExprModel>(_1e545a661_BuiltinMakeCallExprModel{._field_Kind=_36513_t.get()._field_Kind, ._field_Len=_38113_lenExpr.get()._field_Model, });;
	(*(_35564_d)).get()._field_Model=jule::Any(_38813_model, &__jule_any_type120);
	if (((*(_35542_fc)).get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1e5522d00_Data> _39417_capExpr = _1e5540290_evalExpr(_1e54b6535_evalp((*(_35527_e)).get()._field_s, (*(_35527_e)).get()._field_lookup, _36513_t.get()._field_Kind), (*(_35542_fc)).get()._field_Args[2LL]);;
		if ((_39417_capExpr == nullptr)) {
			return (*(_35564_d));;
		};
		_1e552d46a_checkIntegerIndexingByData((*(_35527_e)).ptr(), &(_39417_capExpr), (*(_35542_fc)).get()._field_Args[2LL].get()._field_Token);
		_38813_model.get()._field_Cap=_39417_capExpr.get()._field_Model;
	};
	return (*(_35564_d));;
}



inline jule::Ptr<_1e5522d00_Data> _1e621c9c7_builtinCallerAppend(jule::Ptr<_1e552486d_Eval>* _40429_e, jule::Ptr<_1e477bd29_FnCallExpr>* _40444_fc, jule::Ptr<_1e5522d00_Data>* _40466_d) {
	if (((*(_40444_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_40444_fc)).get()._field_Args.len() == 1LL)) {
			_1e5524d79_pushErr((*(_40429_e)).ptr(), (*(_40444_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1e5524d79_pushErr((*(_40429_e)).ptr(), (*(_40444_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e5522d00_Data> _41413_t = _1e5540290_evalExpr((*(_40429_e)), (*(_40444_fc)).get()._field_Args[0LL]);;
	if ((_41413_t == nullptr)) {
		return nullptr;;
	};
	if ((_1e5552093_Slc(_41413_t.get()._field_Kind.ptr()) == nullptr)) {
		_1e5524d79_pushErr((*(_40429_e)).ptr(), (*(_40444_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5463b75_FnIns> _42413_f = jule::new_ptr<_1e5463b75_FnIns>(_1e5463b75_FnIns{._field_Params=jule::Slice<jule::Ptr<_1e5462ca6_ParamIns>>::make({jule::new_ptr<_1e5462ca6_ParamIns>(_1e5462ca6_ParamIns{._field_Decl=jule::new_ptr<_1e545e687_Param>(_1e545e687_Param{._field_Mutable=true, }), ._field_Kind=_41413_t.get()._field_Kind}),jule::new_ptr<_1e5462ca6_ParamIns>(_1e5462ca6_ParamIns{._field_Decl=jule::new_ptr<_1e545e687_Param>(_1e545e687_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1e5552093_Slc(_41413_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41413_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1e5522d00_Data>(jule::Ptr<_1e552486d_Eval>*,jule::Ptr<_1e477bd29_FnCallExpr>*,jule::Ptr<_1e5522d00_Data>*)>(_1e621a442_builtinCallerCommonPlain), });;
	(*(_40466_d)).get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_42413_f, 1)});
	(*(_40466_d)).get()._field_Model=jule::Any(jule::new_ptr<_1e5457edd_CommonIdentExprModel>(_1e5457edd_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type72);
	(*(_40466_d))=_1e621a442_builtinCallerCommonPlain(_40429_e, _40444_fc, _40466_d);
	if (((*(_40466_d)) != nullptr)) {
		jule::Ptr<_1e5454b22_FnCallExprModel> _45217_model = (*(_40466_d)).get()._field_Model.cast_ptr<_1e5454b22_FnCallExprModel>(&__jule_any_type34);;
		(*(_40466_d)).get()._field_Model=jule::Any(jule::new_ptr<_1e545aa4b_BuiltinAppendCallExprModel>(_1e545aa4b_BuiltinAppendCallExprModel{._field_Dest=_45217_model.get()._field_Args[0LL], ._field_Elements=_45217_model.get()._field_Args[1LL]}), &__jule_any_type25);
	};
	return (*(_40466_d));;
}



inline jule::Ptr<_1e5522d00_Data> _1e621ce5b_callerCopySlice(jule::Ptr<_1e5522d00_Data>* _46125_dest, jule::Ptr<_1e552486d_Eval>* _46143_e, jule::Ptr<_1e477bd29_FnCallExpr>* _46158_fc, jule::Ptr<_1e5522d00_Data>* _46180_d) {
	if ((!((*(_46125_dest)).get()._field_Mutable))) {
		_1e5524d79_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _46613_src = _1e5540290_evalExpr((*(_46143_e)), (*(_46158_fc)).get()._field_Args[1LL]);;
	if ((_46613_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e5557bc0_Slc> _47013_slc = _1e5552093_Slc(_46613_src.get()._field_Kind.ptr());;
	if ((_47013_slc != nullptr)) {
		if (((!(_46613_src.get()._field_Mutable)) && _1e5550404_Mutable(_47013_slc.get()._field_Elem.ptr()))) {
			_1e5524d79_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1e554e48b_Equal((*(_46125_dest)).get()._field_Kind, _46613_src.get()._field_Kind)))) {
			_1e5524d79_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_46125_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		jule::Ptr<_1e55539ce_Prim> _48013_destPrim = _1e5551119_Prim(_1e5552093_Slc((*(_46125_dest)).get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1e55539ce_Prim> _48113_prim = _1e5551119_Prim(_46613_src.get()._field_Kind.ptr());;
		if (((((_48013_destPrim == nullptr) || (_48113_prim == nullptr)) || (!(_1e5556c13_IsStr(_48113_prim.ptr())))) || (!(_1e55552d8_IsU8(_48013_destPrim.ptr()))))) {
			_1e5524d79_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_46125_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	};
	(*(_46180_d)).get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("int", 3)), 6)});
	(*(_46180_d)).get()._field_Model=jule::Any(jule::new_ptr<_1e545bba1_BuiltinCopyCallExprModel>(_1e545bba1_BuiltinCopyCallExprModel{._field_Dest=(*(_46125_dest)), ._field_Src=_46613_src}), &__jule_any_type31);
	return (*(_46180_d));;
}



inline jule::Ptr<_1e5522d00_Data> _1e621d3e0_callerCopyStr(jule::Ptr<_1e5522d00_Data>* _49523_dest, jule::Ptr<_1e552486d_Eval>* _49541_e, jule::Ptr<_1e477bd29_FnCallExpr>* _49556_fc, jule::Ptr<_1e5522d00_Data>* _49578_d) {
	if ((!((*(_49523_dest)).get()._field_Mutable))) {
		_1e5524d79_pushErr((*(_49541_e)).ptr(), (*(_49556_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _50013_src = _1e5540290_evalExpr((*(_49541_e)), (*(_49556_fc)).get()._field_Args[1LL]);;
	if ((_50013_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1e5551119_Prim(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8cb6bbc:;
			{
				if (_1e5556c13_IsStr(_1e5551119_Prim(_50013_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1e5552093_Slc(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8cb6c33:;
			{
				jule::Ptr<_1e5557bc0_Slc> _51017_slc = _1e5552093_Slc(_50013_src.get()._field_Kind.ptr());;
				if (((_1e5551119_Prim(_51017_slc.get()._field_Elem.ptr()) != nullptr) && _1e55552d8_IsU8(_1e5551119_Prim(_51017_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1e8cb699c:;
	};
	_1e5524d79_pushErr((*(_49541_e)).ptr(), (*(_49556_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str((*(_49523_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1e554e17d_Str(_50013_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
	_julec_label_end:;
	(*(_49578_d)).get()._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("int", 3)), 6)});
	(*(_49578_d)).get()._field_Model=jule::Any(jule::new_ptr<_1e545bba1_BuiltinCopyCallExprModel>(_1e545bba1_BuiltinCopyCallExprModel{._field_Dest=(*(_49523_dest)), ._field_Src=_50013_src}), &__jule_any_type31);
	return (*(_49578_d));;
}



inline jule::Ptr<_1e5522d00_Data> _1e621d7ca_builtinCallerCopy(jule::Ptr<_1e552486d_Eval>* _52527_e, jule::Ptr<_1e477bd29_FnCallExpr>* _52542_fc, jule::Ptr<_1e5522d00_Data>* _52564_d) {
	if (((*(_52542_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_52542_fc)).get()._field_Args.len() == 1LL)) {
			_1e5524d79_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1e5524d79_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_52542_fc)).get()._field_Args.len() > 2LL)) {
		_1e5524d79_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _53813_dest = _1e5540290_evalExpr((*(_52527_e)), (*(_52542_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_53813_dest == nullptr)) {
			_case_begin_1e8cc1cd7:;
			{
				return nullptr;;
			}
		}
		else if ((_1e5552093_Slc(_53813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8cc1d4d:;
			{
				return _1e621ce5b_callerCopySlice(&(_53813_dest), _52527_e, _52542_fc, _52564_d);;
			}
		}
		else if (((_1e5551119_Prim(_53813_dest.get()._field_Kind.ptr()) != nullptr) && _1e5556c13_IsStr(_1e5551119_Prim(_53813_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1e8cc1b3e:;
			{
				return _1e621d3e0_callerCopyStr(&(_53813_dest), _52527_e, _52542_fc, _52564_d);;
			}
		}
		else {
			_case_begin_1e8cc0d91:;
			{
				_1e5524d79_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e8cc0d2a:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e621db1b_callerLenSlice(jule::Ptr<_1e5522d00_Data>* _55224_expr, jule::Ptr<_1e5522d00_Data>* _55242_d) {
	(*(_55242_d)).get()._field_Kind=_1e551c04c_lenKind();
	(*(_55242_d)).get()._field_Model=jule::Any(jule::new_ptr<_1e545ad6a_BuiltinLenCallExprModel>(_1e545ad6a_BuiltinLenCallExprModel{._field_Expr=(*(_55224_expr))}), &__jule_any_type121);
	return (*(_55242_d));;
}



inline jule::Ptr<_1e5522d00_Data> _1e621de5c_callerLenMap(jule::Ptr<_1e5522d00_Data>* _56022_expr, jule::Ptr<_1e5522d00_Data>* _56040_d) {
	(*(_56040_d)).get()._field_Kind=_1e551c04c_lenKind();
	(*(_56040_d)).get()._field_Model=jule::Any(jule::new_ptr<_1e545ad6a_BuiltinLenCallExprModel>(_1e545ad6a_BuiltinLenCallExprModel{._field_Expr=(*(_56022_expr))}), &__jule_any_type121);
	return (*(_56040_d));;
}



inline jule::Ptr<_1e5522d00_Data> _1e621e29d_callerLenArr(jule::Ptr<_1e5522d00_Data>* _56822_expr, jule::Ptr<_1e5522d00_Data>* _56840_d) {
	(*(_56840_d)).get()._field_Kind=_1e551c04c_lenKind();
	(*(_56840_d)).get()._field_Constant=static__1e5446e44_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e5551d2e_Arr((*(_56822_expr)).get()._field_Kind.ptr()).get()._field_N)));
	(*(_56840_d)).get()._field_Model=jule::Any((*(_56840_d)).get()._field_Constant, &__jule_any_type47);
	return (*(_56840_d));;
}



inline jule::Ptr<_1e5522d00_Data> _1e621e5de_callerLenStr(jule::Ptr<_1e5522d00_Data>* _57522_expr, jule::Ptr<_1e5522d00_Data>* _57540_d) {
	(*(_57540_d)).get()._field_Kind=_1e551c04c_lenKind();
	if (_1e55236b3_IsConst((*(_57522_expr)).ptr())) {
		(*(_57540_d)).get()._field_Constant=static__1e5446e44_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e5448a06_ReadStr((*(_57522_expr)).get()._field_Constant.ptr()).len())));
		(*(_57540_d)).get()._field_Model=jule::Any((*(_57540_d)).get()._field_Constant, &__jule_any_type47);
	} else {
		(*(_57540_d)).get()._field_Model=jule::Any(jule::new_ptr<_1e545ad6a_BuiltinLenCallExprModel>(_1e545ad6a_BuiltinLenCallExprModel{._field_Expr=(*(_57522_expr))}), &__jule_any_type121);
	};
	return (*(_57540_d));;
}



inline jule::Ptr<_1e5522d00_Data> _1e621e9c9_builtinCallerLen(jule::Ptr<_1e552486d_Eval>* _58826_e, jule::Ptr<_1e477bd29_FnCallExpr>* _58841_fc, jule::Ptr<_1e5522d00_Data>* _58863_d) {
	if (((*(_58841_fc)).get()._field_Args.len() < 1LL)) {
		_1e5524d79_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_58841_fc)).get()._field_Args.len() > 1LL)) {
		_1e5524d79_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _59613_dest = _1e5540290_evalExpr((*(_58826_e)), (*(_58841_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_59613_dest == nullptr)) {
			_case_begin_1e8ccb891:;
			{
				return nullptr;;
			}
		}
		else if (_59613_dest.get()._field_Decl) {
			_case_begin_1e8ccb907:;
			{
				_1e5524d79_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1e5552093_Slc(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8ccb6e8:;
			{
				return _1e621db1b_callerLenSlice(&(_59613_dest), _58863_d);;
			}
		}
		else if ((_1e5551d2e_Arr(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8ccb770:;
			{
				return _1e621e29d_callerLenArr(&(_59613_dest), _58863_d);;
			}
		}
		else if ((_1e5552a44_Map(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8cca9b1:;
			{
				return _1e621de5c_callerLenMap(&(_59613_dest), _58863_d);;
			}
		}
		else if (((_1e5551119_Prim(_59613_dest.get()._field_Kind.ptr()) != nullptr) && _1e5556c13_IsStr(_1e5551119_Prim(_59613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1e8ccaa27:;
			{
				return _1e621e5de_callerLenStr(&(_59613_dest), _58863_d);;
			}
		}
		else {
			_case_begin_1e8cca94a:;
			{
				_1e5524d79_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e8cca8d4:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e621ed1a_callerCapSlice(jule::Ptr<_1e5522d00_Data>* _61724_expr, jule::Ptr<_1e5522d00_Data>* _61742_d) {
	(*(_61742_d)).get()._field_Kind=_1e551c04c_lenKind();
	(*(_61742_d)).get()._field_Model=jule::Any(jule::new_ptr<_1e545b189_BuiltinCapCallExprModel>(_1e545b189_BuiltinCapCallExprModel{._field_Expr=(*(_61724_expr))}), &__jule_any_type122);
	return (*(_61742_d));;
}



inline jule::Ptr<_1e5522d00_Data> _1e622015b_callerCapStr(jule::Ptr<_1e5522d00_Data>* _62522_expr, jule::Ptr<_1e5522d00_Data>* _62540_d) {
	(*(_62540_d)).get()._field_Kind=_1e551c04c_lenKind();
	if (_1e55236b3_IsConst((*(_62522_expr)).ptr())) {
		(*(_62540_d)).get()._field_Constant=static__1e5446e44_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e5448a06_ReadStr((*(_62522_expr)).get()._field_Constant.ptr()).cap())));
		(*(_62540_d)).get()._field_Model=jule::Any((*(_62540_d)).get()._field_Constant, &__jule_any_type47);
	} else {
		(*(_62540_d)).get()._field_Model=jule::Any(jule::new_ptr<_1e545b189_BuiltinCapCallExprModel>(_1e545b189_BuiltinCapCallExprModel{._field_Expr=(*(_62522_expr))}), &__jule_any_type122);
	};
	return (*(_62540_d));;
}



inline jule::Ptr<_1e5522d00_Data> _1e6220546_builtinCallerCap(jule::Ptr<_1e552486d_Eval>* _63826_e, jule::Ptr<_1e477bd29_FnCallExpr>* _63841_fc, jule::Ptr<_1e5522d00_Data>* _63863_d) {
	if (((*(_63841_fc)).get()._field_Args.len() < 1LL)) {
		_1e5524d79_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_63841_fc)).get()._field_Args.len() > 1LL)) {
		_1e5524d79_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _64613_dest = _1e5540290_evalExpr((*(_63826_e)), (*(_63841_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_64613_dest == nullptr)) {
			_case_begin_1e8cd644a:;
			{
				return nullptr;;
			}
		}
		else if (_64613_dest.get()._field_Decl) {
			_case_begin_1e8cd64b1:;
			{
				_1e5524d79_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1e5552093_Slc(_64613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8cd62a2:;
			{
				return _1e621ed1a_callerCapSlice(&(_64613_dest), _63863_d);;
			}
		}
		else if (((_1e5551119_Prim(_64613_dest.get()._field_Kind.ptr()) != nullptr) && _1e5556c13_IsStr(_1e5551119_Prim(_64613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1e8cd6318:;
			{
				return _1e622015b_callerCapStr(&(_64613_dest), _63863_d);;
			}
		}
		else {
			_case_begin_1e8cd5504:;
			{
				_1e5524d79_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e8cd548d:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e62209ca_callerDeleteMap(jule::Ptr<_1e552486d_Eval>* _66325_e, jule::Ptr<_1e477bd29_FnCallExpr>* _66340_fc, jule::Ptr<_1e5522d00_Data>* _66362_expr, jule::Ptr<_1e5522d00_Data>* _66380_d) {
	if ((!((*(_66362_expr)).get()._field_Mutable))) {
		_1e5524d79_pushErr((*(_66325_e)).ptr(), (*(_66340_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_66380_d))=_1e554a60d_buildVoidData();
	jule::Ptr<_1e545b83d_BuiltinDeleteCallExprModel> _66813_model = jule::new_ptr<_1e545b83d_BuiltinDeleteCallExprModel>(_1e545b83d_BuiltinDeleteCallExprModel{._field_Dest=(*(_66362_expr)), });;
	if (((*(_66340_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1e5522d00_Data> _67217_key = _1e5540290_evalExpr((*(_66325_e)), (*(_66340_fc)).get()._field_Args[1LL]);;
		{
			
			if ((_67217_key == nullptr)) {
				_case_begin_1e8cdc96d:;
				{
					return nullptr;;
				}
			}
			else if (_67217_key.get()._field_Decl) {
				_case_begin_1e8cdb2c9:;
				{
					_1e5524d79_pushErr((*(_66325_e)).ptr(), (*(_66340_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1e8cdb263:;
				{
					;
					jule::Ptr<_1e554dc82_TypeKind> _68121_keyType = _1e5552a44_Map((*(_66362_expr)).get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_1e54b6d3d_checkAssignType((*(_66325_e)).get()._field_s, false, &(_68121_keyType), &(_67217_key), (*(_66340_fc)).get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1e8cdb1ec:;
		};
		_66813_model.get()._field_Key=_67217_key;
	};
	(*(_66380_d)).get()._field_Model=jule::Any(_66813_model, &__jule_any_type32);
	return (*(_66380_d));;
}



inline jule::Ptr<_1e5522d00_Data> _1e6220db5_builtinCallerDelete(jule::Ptr<_1e552486d_Eval>* _69229_e, jule::Ptr<_1e477bd29_FnCallExpr>* _69244_fc, jule::Ptr<_1e5522d00_Data>* _69266_d) {
	if (((*(_69244_fc)).get()._field_Args.len() < 1LL)) {
		_1e5524d79_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_69244_fc)).get()._field_Args.len() > 2LL)) {
		_1e5524d79_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _70013_dest = _1e5540290_evalExpr((*(_69229_e)), (*(_69244_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_70013_dest == nullptr)) {
			_case_begin_1e8ce2d6e:;
			{
				return nullptr;;
			}
		}
		else if (_70013_dest.get()._field_Decl) {
			_case_begin_1e8ce2dd5:;
			{
				_1e5524d79_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1e5552a44_Map(_70013_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e8ce2bc6:;
			{
				return _1e62209ca_callerDeleteMap(_69229_e, _69244_fc, &(_70013_dest), _69266_d);;
			}
		}
		else {
			_case_begin_1e8ce1e28:;
			{
				_1e5524d79_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1e8ce1db2:;
	};
}



inline jule::Ptr<_1e5522d00_Data> _1e62212a0_builtinCallerClone(jule::Ptr<_1e552486d_Eval>* _71528_e, jule::Ptr<_1e477bd29_FnCallExpr>* _71543_fc, jule::Ptr<_1e5522d00_Data>* ) {
	if (((*(_71543_fc)).get()._field_Args.len() < 1LL)) {
		_1e5524d79_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_71543_fc)).get()._field_Args.len() > 1LL)) {
		_1e5524d79_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _72413_d = _1e553eb74_evalExprKind((*(_71528_e)), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_72413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e5550b41_SupportsCloning(_72413_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1e5552093_Slc(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1e5552a44_Map(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1e5551d2e_Arr(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1e555137d_Sptr(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1e8ce7e40:;
				{
					{
						_1e5524d79_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ has internally types which is not supports cloning", 57), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
				}
			}
			else if ((_1e555256b_Struct(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1e8ce779c:;
				{
					{
						_1e5524d79_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not derives @", 23), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type75)}));
					};
				}
			}
			else {
				_case_begin_1e8ce7736:;
				{
					{
						_1e5524d79_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not support cloning", 29), jule::Slice<jule::Any>::make({jule::Any(_1e554e17d_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type75)}));
					};
				}
			}
			_match_end_1e8ce736d:;
		};
	};
	_72413_d.get()._field_Mutable=true;
	_72413_d.get()._field_Model=jule::Any(jule::new_ptr<_1e545942e_BuiltinCloneCallExprModel>(_1e545942e_BuiltinCloneCallExprModel{._field_Expr=_72413_d.get()._field_Model}), &__jule_any_type26);
	return _72413_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e6221866_builtinCallerAssert(jule::Ptr<_1e552486d_Eval>* _75729_e, jule::Ptr<_1e477bd29_FnCallExpr>* _75744_fc, jule::Ptr<_1e5522d00_Data>* ) {
	if (((*(_75744_fc)).get()._field_Args.len() < 1LL)) {
		_1e5524d79_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_75744_fc)).get()._field_Args.len() > 2LL)) {
		_1e5524d79_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _76613_expr = _1e5540290_evalExpr((*(_75729_e)), (*(_75744_fc)).get()._field_Args[0LL]);;
	if ((_76613_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1e5551119_Prim(_76613_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1e555699e_IsBool(_1e5551119_Prim(_76613_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1e5524d79_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Token, jule::Str("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e545a1aa_BuiltinAssertCallExprModel> _77513_model = jule::new_ptr<_1e545a1aa_BuiltinAssertCallExprModel>(_1e545a1aa_BuiltinAssertCallExprModel{._field_Token=(*(_75744_fc)).get()._field_Token, ._field_Expr=_76613_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if (((*(_75744_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1e5522d00_Data> _78317_log = _1e5540290_evalExpr((*(_75729_e)), (*(_75744_fc)).get()._field_Args[1LL]);;
		if ((_78317_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1e55236b3_IsConst(_78317_log.ptr()))) || (_1e5551119_Prim(_78317_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1e5556c13_IsStr(_1e5551119_Prim(_78317_log.get()._field_Kind.ptr()).ptr()))))) {
			_1e5524d79_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type5),jule::Any(_1e554e17d_Str(_78317_log.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return nullptr;;
		};
		_77513_model.get()._field_Log=_1e5448a06_ReadStr(_78317_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1e5522d00_Data> _79613_d = _1e554a60d_buildVoidData();;
	_79613_d.get()._field_Model=jule::Any(_77513_model, &__jule_any_type30);
	return _79613_d;;
}



inline jule::Ptr<_1e5522d00_Data> _1e6221bc9_builtinCallerStdMemSizeOf(jule::Ptr<_1e552486d_Eval>* _80135_e, jule::Ptr<_1e477bd29_FnCallExpr>* _80150_fc, jule::Ptr<_1e5522d00_Data>* ) {
	jule::Ptr<_1e5522d00_Data> _80213_result = jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if (((*(_80150_fc)).get()._field_Args.len() < 1LL)) {
		_1e5524d79_pushErr((*(_80135_e)).ptr(), (*(_80150_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _80213_result;;
	};
	if (((*(_80150_fc)).get()._field_Args.len() > 1LL)) {
		_1e5524d79_pushErr((*(_80135_e)).ptr(), (*(_80150_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _81413_d = _1e553eb74_evalExprKind((*(_80135_e)), (*(_80150_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_81413_d == nullptr)) {
		return _80213_result;;
	};
	_80213_result.get()._field_Model=jule::Any(jule::new_ptr<_1e545c388_SizeofExprModel>(_1e545c388_SizeofExprModel{._field_Expr=_81413_d.get()._field_Model}), &__jule_any_type123);
	return _80213_result;;
}



inline jule::Ptr<_1e5522d00_Data> _1e62220e7_builtinCallerStdMemAlignOf(jule::Ptr<_1e552486d_Eval>* _82336_e, jule::Ptr<_1e477bd29_FnCallExpr>* _82351_fc, jule::Ptr<_1e5522d00_Data>* ) {
	jule::Ptr<_1e5522d00_Data> _82413_result = jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if (((*(_82351_fc)).get()._field_Args.len() < 1LL)) {
		_1e5524d79_pushErr((*(_82336_e)).ptr(), (*(_82351_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _82413_result;;
	};
	if (((*(_82351_fc)).get()._field_Args.len() > 1LL)) {
		_1e5524d79_pushErr((*(_82336_e)).ptr(), (*(_82351_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _83613_d = _1e553eb74_evalExprKind((*(_82336_e)), (*(_82351_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_83613_d == nullptr)) {
		return _82413_result;;
	};
	_82413_result.get()._field_Model=jule::Any(jule::new_ptr<_1e545c674_AlignofExprModel>(_1e545c674_AlignofExprModel{._field_Expr=_83613_d.get()._field_Model}), &__jule_any_type124);
	return _82413_result;;
}



inline jule::Ptr<_1e5522d00_Data> _1e6222515_builtinCallerStdMemFree(jule::Ptr<_1e552486d_Eval>* _84533_e, jule::Ptr<_1e477bd29_FnCallExpr>* _84548_fc, jule::Ptr<_1e5522d00_Data>* ) {
	if (((*(_84548_fc)).get()._field_Args.len() < 1LL)) {
		_1e5524d79_pushErr((*(_84533_e)).ptr(), (*(_84548_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_84548_fc)).get()._field_Args.len() > 1LL)) {
		_1e5524d79_pushErr((*(_84533_e)).ptr(), (*(_84548_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _85413_d = _1e553eb74_evalExprKind((*(_84533_e)), (*(_84548_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_85413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e55508cc_PerformsRC(_85413_d.get()._field_Kind.ptr())))) {
		_1e5524d79_pushErr((*(_84533_e)).ptr(), (*(_84548_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _86313_result = _1e554a60d_buildVoidData();;
	_86313_result.get()._field_Model=jule::Any(jule::new_ptr<_1e545d422_FreeExprModel>(_1e545d422_FreeExprModel{._field_Expr=_85413_d.get()._field_Model}), &__jule_any_type33);
	return _86313_result;;
}



inline jule::Ptr<_1e5522d00_Data> _1e6222944_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1e552486d_Eval>* _86845_e, jule::Ptr<_1e477bd29_FnCallExpr>* _86860_fc, jule::Ptr<_1e5522d00_Data>* ) {
	if (((*(_86860_fc)).get()._field_Args.len() < 1LL)) {
		_1e5524d79_pushErr((*(_86845_e)).ptr(), (*(_86860_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_86860_fc)).get()._field_Args.len() > 1LL)) {
		_1e5524d79_pushErr((*(_86845_e)).ptr(), (*(_86860_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5522d00_Data> _87713_d = _1e553eb74_evalExprKind((*(_86845_e)), (*(_86860_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_87713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e5566948_isBuiltinStrConvertable(&(_87713_d.get()._field_Kind))))) {
		_1e5524d79_pushErr((*(_86845_e)).ptr(), (*(_86860_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1e5522d00_Data>(_1e5522d00_Data{._field_Kind=jule::new_ptr<_1e554dc82_TypeKind>(_1e554dc82_TypeKind{._field_Kind=jule::Trait<_1e554d853_Kind>(_1e5567075_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=jule::Any(jule::new_ptr<_1e545cc6d_IntegratedToStrExprModel>(_1e545cc6d_IntegratedToStrExprModel{._field_Expr=_87713_d.get()._field_Model}), &__jule_any_type125), });;
}



inline jule::Ptr<_1e5522d00_Data> _1e6222d62_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1e552486d_Eval>* _89544_e, jule::Ptr<_1e477bd29_FnCallExpr>* _89559_fc, jule::Ptr<_1e5522d00_Data>* _89581_d) {
	if ((!(_1e55257b4_isUnsafe((*(_89544_e)).ptr())))) {
		_1e5524d79_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*(_89559_fc)).get()._field_Args.len() < 1LL)) {
		_1e5524d79_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e5522d00_Data> _90513_argd = _1e5540290_evalExpr((*(_89544_e)), (*(_89559_fc)).get()._field_Args[0LL]);;
	if ((_90513_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1e5551119_Prim(_90513_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1e5556c13_IsStr(_1e5551119_Prim(_90513_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1e5524d79_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_1e554e17d_Str(_90513_argd.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!(_1e55236b3_IsConst(_90513_argd.ptr()))) || (!(_1e544ad9e_IsStr(_90513_argd.get()._field_Constant.ptr()))))) {
		_1e5524d79_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5522d00_Data> _92013_r = _1e554a60d_buildVoidData();;
	jule::Ptr<_1e5463b75_FnIns> _92213_f = _1e5552307_Fn((*(_89581_d)).get()._field_Kind.ptr());;
	if ((_92213_f.get()._field_Generics.len() > 0LL)) {
		_92013_r.get()._field_Kind=_92213_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1e545d136_BackendEmitExprModel> _92713_model = jule::new_ptr<_1e545d136_BackendEmitExprModel>(_1e545d136_BackendEmitExprModel{._field_Code=_1e5448a06_ReadStr(_90513_argd.get()._field_Constant.ptr()), });;
	if (((*(_89559_fc)).get()._field_Args.len() > 1LL)) {
		_92713_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*(_89559_fc)).get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*(_89559_fc)).get()._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1e8645194:;
			if (it != expr_end) {
				jule::Ptr<_1e4777d47_Expr> _93321_arg = *it;
				{
					_90513_argd=_1e553eb74_evalExprKind((*(_89544_e)), _93321_arg.get()._field_Kind);
					if ((_90513_argd == nullptr)) {
						return nullptr;;
					};
					_92713_model.get()._field_Exprs = jule::alloc_for_append(_92713_model.get()._field_Exprs,1);_92713_model.get()._field_Exprs.__push(_90513_argd.get()._field_Model);;
				}
				_iter_next_1e8645194:;
				++it;
				goto _iter_begin_1e8645194;
			}
			_iter_end_1e8645194:;
		};
	};
	_92013_r.get()._field_Model=jule::Any(_92713_model, &__jule_any_type24);
	return _92013_r;;
}



inline jule::Ptr<_1e5522d00_Data> _1e62232a2_builtinCallerStdDebugOut(jule::Ptr<_1e552486d_Eval>* _94634_e, jule::Ptr<_1e477bd29_FnCallExpr>* _94649_fc, jule::Ptr<_1e5522d00_Data>* _94671_d) {
	(*(_94671_d))=_1e621b311_builtinCallerOut(_94634_e, _94649_fc, _94671_d);
	if (((*(_94671_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_94671_d)).get()._field_Model.cast_ptr<_1e5458c25_BuiltinOutCallExprModel>(&__jule_any_type27).get()._field_Debug=true;
	return (*(_94671_d));;
}



inline jule::Ptr<_1e5522d00_Data> _1e622368c_builtinCallerStdDebugOutln(jule::Ptr<_1e552486d_Eval>* _95536_e, jule::Ptr<_1e477bd29_FnCallExpr>* _95551_fc, jule::Ptr<_1e5522d00_Data>* _95573_d) {
	(*(_95573_d))=_1e621b6eb_builtinCallerOutln(_95536_e, _95551_fc, _95573_d);
	if (((*(_95573_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_95573_d)).get()._field_Model.cast_ptr<_1e5459110_BuiltinOutlnCallExprModel>(&__jule_any_type28).get()._field_Debug=true;
	return (*(_95573_d));;
}



inline jule::Bool _1e4bd57e3_FindModuleFile(jule::Slice<jule::Ptr<_24050355a_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e864a2cb:;
		if (it != expr_end) {
			jule::Ptr<_24050355a_DirEntry> *_1312_d = it;
			{
				if (((!(_240503c53_IsDir((*(_1312_d)).get()._field_Stat.ptr()))) && ((*(_1312_d)).get()._field_Name == jule::Str("jule.mod", 8)))) {
					return true;;
				};
			}
			_iter_next_1e864a2cb:;
			++it;
			goto _iter_begin_1e864a2cb;
		}
		_iter_end_1e864a2cb:;
	};
	return false;;
}



inline jule::Str _1e4be5cdc_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_24050355a_DirEntry>> _2617_dirents = ({
				auto except = static__2412335ca_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1e864a50c;
				} jule::Slice<jule::Ptr<_24050355a_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _1e4bd57e3_FindModuleFile(&(_2617_dirents));;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_241316867_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1e864a50c;
			};
		}
	_iter_next_1e864a50c:;
	}
	_iter_end_1e864a50c:;;
	return jule::Str();;
}



inline jule::Slice<_24305e4ae_Log> _1e4be5ec9_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__24050435d_Read(_241312d08_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_24305e4ae_Log>::make({_24305e4ae_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _242edede0_Trim(static_cast<jule::Str>(_479_bytes), jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_24305e4ae_Log>::make({_24305e4ae_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_1e68db838_FileInfo> _1e68de440_ParseFile(jule::Ptr<_20d15a931_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e68db838_FileInfo> _2713_finf = jule::new_ptr<_1e68db838_FileInfo>();;
	({
		__jule_tuple_x_1e473e391_Ast__jule_tuple_s_24305e4ae_Log __jule_assign_result = _1e6935d8d_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_1e473e391_Ast__jule_tuple_s_24305e4ae_Log _1e6935d8d_parseFileset(jule::Ptr<_20d15a931_File> _5521_f) {
	__jule_tuple_x_1e473e391_Ast__jule_tuple_s_24305e4ae_Log __jule_func_result;
	jule::Ptr<_1e695483a_parser> _5613_p = jule::new_ptr<_1e695483a_parser>();;
	_1e696420c_parse(_5613_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1e47837ae_ScopeTree> _1e69367ea_newScope(void) {
	return jule::new_ptr<_1e47837ae_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1e6936aa3_isSt(jule::Ptr<_20d155596_Token> _499_current, jule::Ptr<_20d155596_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return __jule_func_result;;
}



inline jule::Bool _1e6936de4_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_20d155596_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*(_5526_tokens))[((*(_5545_i)) - 2LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_20d155596_Token> _6113_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _20d15608b_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < (*(_5526_tokens))[(*(_5545_i))].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1e6937279_nextStPos(jule::Slice<jule::Ptr<_20d155596_Token>>* _7015_tokens, jule::I64 _7033_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _7113_braceN = 0LL;;
	jule::I64 _7213_i = _7033_start;;
	for (; (_7213_i < (*(_7015_tokens)).len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_20d155596_Token> _7613_tok = (*(_7015_tokens))[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1e918033d:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1e918274c:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_1e6936de4_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))))) {
											({
												__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e6936aa3_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
												_7417_ok = __jule_assign_result.__jule_result_arg0;
												_7517_terminated = __jule_assign_result.__jule_result_arg1;
											});
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_1e9180b24:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < (*(_7015_tokens)).len()))) {
										({
											__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e6936aa3_isSt((*(_7015_tokens))[(_7213_i + 1LL)], _7613_tok);
											_7417_ok = __jule_assign_result.__jule_result_arg0;
											_7517_terminated = __jule_assign_result.__jule_result_arg1;
										});
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1e9180959:;
						};
						goto _iter_next_1e917da45;
					}
				}
				_match_end_1e91802c7:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_1e917da45;
			};
			if ((_7213_i > _7033_start)) {
				if (_1e6936de4_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))) {
					goto _iter_next_1e917da45;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e6936aa3_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e6936aa3_isSt(_7613_tok, _7613_tok);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7417_ok))) {
				goto _iter_next_1e917da45;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7213_i;
			__jule_func_result.__jule_result_arg1 = _7517_terminated;
			return __jule_func_result;;
		}
	_iter_next_1e917da45:;
	}
	_iter_end_1e917da45:;;
	__jule_func_result.__jule_result_arg0 = _7213_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_20d155596_Token__jule_tuple_bool _1e69375ba_skipSt(jule::I64* _13216_i, jule::Slice<jule::Ptr<_20d155596_Token>> _13228_tokens) {
	__jule_tuple_sx_20d155596_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1339_start = (*(_13216_i));;
	jule::Bool _13413_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e6937279_nextStPos(&(_13228_tokens), _1339_start);
		(*(_13216_i)) = __jule_assign_result.__jule_result_arg0;
		_13413_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_20d155596_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start, (*(_13216_i)));;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_20d155596_Token__jule_tuple_bool __jule_assign_result = _1e69375ba_skipSt(_13216_i, _13228_tokens);
				_13613_stTokens = __jule_assign_result.__jule_result_arg0;
				_13413_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13613_stTokens;
			__jule_func_result.__jule_result_arg1 = _13413_terminated;
			return __jule_func_result;;
		};
		_13613_stTokens=_13613_stTokens.slice(0LL, (_13613_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13613_stTokens;
	__jule_func_result.__jule_result_arg1 = _13413_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1e69378b7_stmt>> _1e6937c5d_splitStmts(jule::Slice<jule::Ptr<_20d155596_Token>>* _15420_tokens) {
	jule::Slice<jule::Ptr<_1e69378b7_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_1e69378b7_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _15613_pos = 0LL;;
	while ((_15613_pos < (*(_15420_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_20d155596_Token>> _15818_stmt;;
			jule::Bool _15824_terminated = false;;
			({
				__jule_tuple_sx_20d155596_Token__jule_tuple_bool __jule_assign_result = _1e69375ba_skipSt(&(_15613_pos), (*(_15420_tokens)));
				_15818_stmt = __jule_assign_result.__jule_result_arg0;
				_15824_terminated = __jule_assign_result.__jule_result_arg1;
			});
			_15513_stmts = jule::alloc_for_append(_15513_stmts,1);_15513_stmts.__push(jule::new_ptr<_1e69378b7_stmt>(_1e69378b7_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated}));;
		}
	_iter_next_1e918a39d:;
	}
	_iter_end_1e918a39d:;;
	return _15513_stmts;;
}



inline jule::Bool _1e694e44a_isTypeOp(jule::Str* _88814_kind) {
	return ((((*(_88814_kind)) == jule::Str("&", 1)) || ((*(_88814_kind)) == jule::Str("&&", 2))) || ((*(_88814_kind)) == jule::Str("*", 1)));;
}



inline jule::Bool _1e694e736_isTypeRange(jule::Slice<jule::Ptr<_20d155596_Token>>* _89521_tokens) {
	jule::Bool _89613_op = false;;
	{
		auto expr = _89521_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9243de6:;
		if (it != expr_end) {
			jule::I64 _8979_i = it - expr->begin();
			jule::Ptr<_20d155596_Token> _89712_token = *it;
			{
				if ((_89712_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					if ((_89712_token.get()._field_Kind == jule::Str("[", 1))) {
						if (_89613_op) {
							return true;;
						};
						jule::I64 _90325_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_20d155596_Token>> _90425_lTokens = (*(_89521_tokens)).slice(_8979_i);;
						{
							auto expr = &(_90425_lTokens);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1e924526b:;
							if (it != expr_end) {
								jule::Ptr<_20d155596_Token> _90524_lToken = *it;
								{
									{
										auto &_match_expr{ _90524_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(3LLU)) {
											_case_begin_1e92468ee:;
											{
												{
													auto &_match_expr{ _90524_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_1e924723a:;
														{
															(_90325_rangeN)++;
															goto _iter_next_1e924526b;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_1e92472b2:;
														{
															(_90325_rangeN)--;
															goto _iter_next_1e924526b;
														}
													}
													_match_end_1e9247070:;
												};
											}
										}
										_match_end_1e92466ac:;
									};
									if ((_90325_rangeN == 0LL)) {
										return _1e694e44a_isTypeOp(&(_90524_lToken.get()._field_Kind));;
									};
								}
								_iter_next_1e924526b:;
								++it;
								goto _iter_begin_1e924526b;
							}
							_iter_end_1e924526b:;
						};
						return true;;
					};
				};
				if ((!(_1e694e44a_isTypeOp(&(_89712_token.get()._field_Kind))))) {
					return false;;
				};
				_89613_op=true;
			}
			_iter_next_1e9243de6:;
			++it;
			_8979_i++;
			goto _iter_begin_1e9243de6;
		}
		_iter_end_1e9243de6:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_20d155596_Token>> _1e694e9cd_getBlockExpr(jule::Slice<jule::Ptr<_20d155596_Token>>* _93322_tokens) {
	jule::I64 _93413_braceN = 0LL;;
	jule::I64 _93513_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e92489bc:;
		if (it != expr_end) {
			jule::I64 _9369_i = it - expr->begin();
			jule::Ptr<_20d155596_Token> _93612_tok = *it;
			{
				{
					auto &_match_expr{ _93612_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1e924978c:;
						{
							(_93513_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1e9249814:;
						{
							{
								auto &_match_expr{ _93612_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1e924a5a1:;
									{
										if (((_93413_braceN > 0LL) || (_93513_skipToNextBraceClose > 0LL))) {
											if ((_93513_skipToNextBraceClose > 0LL)) {
												(_93513_skipToNextBraceClose)--;
											};
											(_93413_braceN)++;
											goto _match_end_1e924a6d3;
										};
										return (*(_93322_tokens)).slice(0LL, _9369_i);;
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1e924ac22:;
									{
										(_93413_braceN)++;
									}
								}
								else {
									_case_begin_1e924a749:;
									{
										(_93413_braceN)--;
									}
								}
								_match_end_1e924a6d3:;
							};
						}
					}
					_match_end_1e92496e3:;
				};
			}
			_iter_next_1e92489bc:;
			++it;
			_9369_i++;
			goto _iter_begin_1e92489bc;
		}
		_iter_end_1e92489bc:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_20d155596_Token__jule_tuple_sx_20d155596_Token _1e694ed63_splitDelim(jule::Slice<jule::Ptr<_20d155596_Token>>* _96420_tokens, jule::U64 _96438_delim) {
	__jule_tuple_sx_20d155596_Token__jule_tuple_sx_20d155596_Token __jule_func_result;
	jule::I64 _96513_rangeN = 0LL;;
	{
		auto expr = _96420_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e92492d6:;
		if (it != expr_end) {
			jule::I64 _9669_i = it - expr->begin();
			jule::Ptr<_20d155596_Token> _96612_token = *it;
			{
				{
					auto &_match_expr{ _96612_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1e924ce00:;
						{
							{
								auto &_match_expr{ _96612_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1e924dbd1:;
									{
										(_96513_rangeN)++;
										goto _iter_next_1e92492d6;
									}
								}
								else {
									_case_begin_1e924d7e6:;
									{
										(_96513_rangeN)--;
									}
								}
								_match_end_1e924d62b:;
							};
						}
					}
					else if (_match_expr == _96438_delim) {
						_case_begin_1e924ce77:;
						{
							if ((_96513_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_20d155596_Token>> _98025_l = (*(_96420_tokens)).slice(0LL, _9669_i);;
								jule::Slice<jule::Ptr<_20d155596_Token>> _98125_r = (*(_96420_tokens)).slice((_9669_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _98025_l;
								__jule_func_result.__jule_result_arg1 = _98125_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1e924cbd0:;
				};
			}
			_iter_next_1e92492d6:;
			++it;
			_9669_i++;
			goto _iter_begin_1e92492d6;
		}
		_iter_end_1e92492d6:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1e695010a_findLowestPrecOp(jule::Slice<jule::Ptr<_20d155596_Token>>* _99122_tokens) {
	jule::U8 _99613_prec = 255LLU;;
	jule::I64 _99713_precPos = -1LL;;
	jule::I64 _99913_braceN = 0LL;;
	jule::Bool _100013_skipToNextBraceOpen = false;;
	{
		auto expr = _99122_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e92514db:;
		if (it != expr_end) {
			jule::I64 _10019_i = it - expr->begin();
			jule::Ptr<_20d155596_Token> *_100112_token = it;
			{
				{
					
					if (((*(_100112_token)).get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1e9252223:;
						{
							{
								auto &_match_expr{ (*(_100112_token)).get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1e9252d6c:;
									{
										_100013_skipToNextBraceOpen=false;
										goto _case_begin_1e9253587;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1e9253587:;
									{
										(_99913_braceN)++;
									}
								}
								else {
									_case_begin_1e9253103:;
									{
										(_99913_braceN)--;
									}
								}
								_match_end_1e9252e38:;
							};
							goto _iter_next_1e92514db;
						}
					}
					else if (_100013_skipToNextBraceOpen) {
						_case_begin_1e925229a:;
						{
							goto _iter_next_1e92514db;
						}
					}
					else if (((*(_100112_token)).get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1e9252322:;
						{
							_100013_skipToNextBraceOpen=true;
							goto _iter_next_1e92514db;
						}
					}
					else if ((_10019_i == 0LL)) {
						_case_begin_1e9252399:;
						{
							goto _iter_next_1e92514db;
						}
					}
					else if (((*(_100112_token)).get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1e9252421:;
						{
							goto _iter_next_1e92514db;
						}
					}
					else if ((_99913_braceN > 0LL)) {
						_case_begin_1e9252498:;
						{
							goto _iter_next_1e92514db;
						}
					}
					_match_end_1e92520be:;
				};
				jule::Ptr<_20d155596_Token> _102813_left = (*(_99122_tokens))[(_10019_i - 1LL)];;
				if (((_102813_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_102813_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1e92514db;
				};
				if ((((_10019_i > 1LL) && (_102813_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && (_102813_left.get()._field_Kind == jule::Str("]", 1)))) {
					jule::Ptr<_20d155596_Token> _103617_lleft = (*(_99122_tokens))[(_10019_i - 2LL)];;
					if (((_103617_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_103617_lleft.get()._field_Kind == jule::Str("[", 1)))) {
						if ((((*(_100112_token)).get()._field_Kind == jule::Str("&", 1)) || ((*(_100112_token)).get()._field_Kind == jule::Str("*", 1)))) {
							goto _iter_next_1e92514db;
						};
					};
				};
				jule::U8 _104513_p = _20d15594d_Prec((*(_100112_token)).ptr());;
				if (((_104513_p != 0LLU) && (_104513_p <= _99613_prec))) {
					_99613_prec=_104513_p;
					_99713_precPos=_10019_i;
				};
			}
			_iter_next_1e92514db:;
			++it;
			_10019_i++;
			goto _iter_begin_1e92514db;
		}
		_iter_end_1e92514db:;
	};
	return _99713_precPos;;
}



inline jule::Ptr<_1e4779a08_IdentExpr> _1e69503a2_buildIdentExpr(jule::Ptr<_20d155596_Token>* _105424_token) {
	return jule::new_ptr<_1e4779a08_IdentExpr>(_1e4779a08_IdentExpr{._field_Token=(*(_105424_token)), ._field_Ident=(*(_105424_token)).get()._field_Kind, ._field_CppLinked=false});;
}



inline __jule_tuple_sx_20d155596_Token__jule_tuple_int _1e6950649_getRangeExprTokens(jule::Slice<jule::Ptr<_20d155596_Token>>* _106228_tokens) {
	__jule_tuple_sx_20d155596_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _106313_rangeN = 0LL;;
	jule::I64 _106413_i = ((*(_106228_tokens)).len() - 1LL);;
	for (; (_106413_i >= 0LL); (_106413_i)--) {
		{
			jule::Ptr<_20d155596_Token> _106613_tok = (*(_106228_tokens))[_106413_i];;
			if ((_106613_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _106613_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1e925b936:;
						{
							(_106313_rangeN)++;
						}
					}
					else {
						_case_begin_1e925b53a:;
						{
							(_106313_rangeN)--;
						}
					}
					_match_end_1e925b32b:;
				};
			};
			if ((_106313_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_106228_tokens)).slice(0LL, _106413_i);
				__jule_func_result.__jule_result_arg1 = _106313_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1e925a517:;
	}
	_iter_end_1e925a517:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _106313_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1e69513a3_checkAssignTokens(jule::Slice<jule::Ptr<_20d155596_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_20d159b3e_IsAssign((*(_1623_tokens))[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e941e577:;
		if (it != expr_end) {
			jule::Ptr<_20d155596_Token> *_2112_t = it;
			{
				if (((*(_2112_t)).get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ (*(_2112_t)).get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e94207ed:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1e9420402:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1e94201e3:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1e941e577;
				} else if ((((*(_2112_t)).get()._field_Id == static_cast<jule::U64>(7LLU)) && _20d15a17d_IsAssignOp((*(_2112_t)).get()._field_Kind))) {
					return true;;
				};
			}
			_iter_next_1e941e577:;
			++it;
			goto _iter_begin_1e941e577;
		}
		_iter_end_1e941e577:;
	};
	return false;;
}



inline _24305e4ae_Log _1e69525c4_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_20d15a931_File>* _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _24305e4ae_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=(*(_5233_f)).get()._field_Path, ._field_Text=_24305e8ee_Logf(_5243_fmt, _5256_args), };;
}



inline jule::Slice<jule::Ptr<_20d155596_Token>> _1e6952a9c_range(jule::I64* _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_20d155596_Token>>* _7163_tokens) {
	if (((*(_7115_i)) >= (*(_7163_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_20d155596_Token> _759_tok = (*(_7163_tokens))[(*(_7115_i))];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;;
	};
	((*(_7115_i)))++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = (*(_7115_i));;
	for (; ((_8013_rangeN != 0LL) && ((*(_7115_i)) < (*(_7163_tokens)).len())); ((*(_7115_i)))++) {
		{
			jule::Ptr<_20d155596_Token> _8313_token = (*(_7163_tokens))[(*(_7115_i))];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1e94260ea:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1e9426172:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_1e9425dca:;
				};
			};
		}
	_iter_next_1e942510a:;
	}
	_iter_end_1e942510a:;;
	return (*(_7163_tokens)).slice(_819_start, ((*(_7115_i)) - 1LL));;
}



inline __jule_tuple_sx_20d155596_Token__jule_tuple_sx_20d155596_Token _1e6952d44_rangeLast(jule::Slice<jule::Ptr<_20d155596_Token>>* _10319_tokens) {
	__jule_tuple_sx_20d155596_Token__jule_tuple_sx_20d155596_Token __jule_func_result;
	if (((*(_10319_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	} else if (((*(_10319_tokens))[((*(_10319_tokens)).len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = ((*(_10319_tokens)).len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_20d155596_Token> _11213_token = (*(_10319_tokens))[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1e942a3da:;
						{
							(_10913_braceN)++;
							goto _iter_next_1e9427140;
						}
					}
					else {
						_case_begin_1e9429ede:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_1e9429cd0:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_10319_tokens)).slice(0LL, _11013_i);
				__jule_func_result.__jule_result_arg1 = (*(_10319_tokens)).slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1e9427140:;
	}
	_iter_end_1e9427140:;;
	__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log _1e695322e_partsKind(jule::Slice<jule::Ptr<_20d155596_Token>>* _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	__jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log __jule_func_result;
	if (((*(_13219_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _13713_parts = nullptr;;
	jule::Slice<_24305e4ae_Log> _13813_errors = nullptr;;
	jule::I64 _14013_rangeN = 0LL;;
	jule::I64 _14113_last = 0LL;;
	{
		auto expr = _13219_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e942d113:;
		if (it != expr_end) {
			jule::I64 _1429_i = it - expr->begin();
			jule::Ptr<_20d155596_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e942e785:;
							{
								(_14013_rangeN)++;
								goto _iter_next_1e942d113;
							}
						}
						else {
							_case_begin_1e942e389:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_1e942e17a:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_1e942d113;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_24305e4ae_Log _16121_err = _1e69525c4_makeErr(_14212_token.get()._field_Row, _14212_token.get()._field_Column, &(_14212_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						_13813_errors = jule::alloc_for_append(_13813_errors,1);_13813_errors.__push(_16121_err);;
					};
					_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push((*(_13219_tokens)).slice(_14113_last, _1429_i));;
					_14113_last=static_cast<jule::I64>((_1429_i + 1LL));
				};
			}
			_iter_next_1e942d113:;
			++it;
			_1429_i++;
			goto _iter_begin_1e942d113;
		}
		_iter_end_1e942d113:;
	};
	if ((_14113_last < (*(_13219_tokens)).len())) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push((*(_13219_tokens)).slice(_14113_last));;
	} else if ((!(_13254_expr_must))) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(jule::Slice<jule::Ptr<_20d155596_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _13713_parts;
	__jule_func_result.__jule_result_arg1 = _13813_errors;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log _1e6953619_parts(jule::Slice<jule::Ptr<_20d155596_Token>>* _18415_tokens, jule::U64 _18433_id, jule::Bool _18446_expr_must) {
	__jule_tuple_ssx_20d155596_Token__jule_tuple_s_24305e4ae_Log __jule_func_result;
	if (((*(_18415_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20d155596_Token>>> _18913_parts = nullptr;;
	jule::Slice<_24305e4ae_Log> _19013_errors = nullptr;;
	jule::I64 _19213_rangeN = 0LL;;
	jule::I64 _19313_last = 0LL;;
	{
		auto expr = _18415_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e943478a:;
		if (it != expr_end) {
			jule::I64 _1949_i = it - expr->begin();
			jule::Ptr<_20d155596_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e9435e0c:;
							{
								(_19213_rangeN)++;
								goto _iter_next_1e943478a;
							}
						}
						else {
							_case_begin_1e9435a11:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_1e9435802:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_1e943478a;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_24305e4ae_Log _21321_err = _1e69525c4_makeErr(_19412_token.get()._field_Row, _19412_token.get()._field_Column, &(_19412_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						_19013_errors = jule::alloc_for_append(_19013_errors,1);_19013_errors.__push(_21321_err);;
					};
					_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push((*(_18415_tokens)).slice(_19313_last, _1949_i));;
					_19313_last=static_cast<jule::I64>((_1949_i + 1LL));
				};
			}
			_iter_next_1e943478a:;
			++it;
			_1949_i++;
			goto _iter_begin_1e943478a;
		}
		_iter_end_1e943478a:;
	};
	if ((_19313_last < (*(_18415_tokens)).len())) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push((*(_18415_tokens)).slice(_19313_last));;
	} else if ((!(_18446_expr_must))) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(jule::Slice<jule::Ptr<_20d155596_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _18913_parts;
	__jule_func_result.__jule_result_arg1 = _19013_errors;
	return __jule_func_result;;
}



inline jule::Str _1e69538b1_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1e94393a5:;
			{
				return jule::Str("(", 1);;
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1e943941b:;
			{
				return jule::Str("{", 1);;
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1e9439196:;
			{
				return jule::Str("[", 1);;
			}
		}
		else {
			_case_begin_1e9435071:;
			{
				return jule::Str();;
			}
		}
		_match_end_1e9438ae1:;
	};
}



inline _24305e4ae_Log _1e6953c9b_compilerErr(jule::Ptr<_20d155596_Token>* _24317_token, jule::Str* _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _24305e4ae_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_24317_token)).get()._field_Row, ._field_Column=(*(_24317_token)).get()._field_Column, ._field_Path=(*(_24317_token)).get()._field_File.get()._field_Path, ._field_Text=_24305e8ee_Logf((*(_24333_fmt)), _24346_args), ._field_Line=_20d15bb0d_GetRow((*(_24317_token)).get()._field_File.ptr(), (*(_24317_token)).get()._field_Row), };;
}



inline void _1e69541ca_pushSuggestion(_24305e4ae_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_24305e8ee_Logf(_25441_fmt, _25454_args);
}



inline jule::Str _1e6954472_tokstoa(jule::Slice<jule::Ptr<_20d155596_Token>>* _25813_tokens) {
	jule::I64 _25913_n = 0LL;;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e943bece:;
		if (it != expr_end) {
			jule::Ptr<_20d155596_Token> *_26012_token = it;
			{
				_25913_n+=(*(_26012_token)).get()._field_Kind.len();
			}
			_iter_next_1e943bece:;
			++it;
			goto _iter_begin_1e943bece;
		}
		_iter_end_1e943bece:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e943c683:;
		if (it != expr_end) {
			jule::Ptr<_20d155596_Token> *_26412_token = it;
			{
				_26313_s+=(*(_26412_token)).get()._field_Kind;
			}
			_iter_next_1e943c683:;
			++it;
			goto _iter_begin_1e943c683;
		}
		_iter_end_1e943c683:;
	};
	return _26313_s;;
}



inline jule::Bool _1e69644d7_isPub(jule::Str* _203511_ident) {
	jule::I32 _203610_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _242ea889d_DecodeRuneStr((*(_203511_ident)));
		_203610_r = __jule_assign_result.__jule_result_arg0;
	});
	return _241ad38c5_IsUpper(_203610_r);;
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e6964dab_buildVoidType(void) {
	return jule::new_ptr<_1e4773826_TypeDecl>();;
}



inline jule::Ptr<_1e4773826_TypeDecl> _1e69650ba_buildPrimType(jule::Ptr<_20d155596_Token> _2322_t) {
	return jule::new_ptr<_1e4773826_TypeDecl>(_1e4773826_TypeDecl{._field_Token=_2322_t, ._field_Kind=jule::Any(jule::new_ptr<_1e4773ddc_IdentTypeDecl>(_1e4773ddc_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }), &__jule_any_type19)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1e62c3a8e_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1e9485665:;
			{
				__jule_func_result.__jule_result_arg0=_2430627c0_IsWindows(_242d1e44a_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1e948506b:;
			{
				__jule_func_result.__jule_result_arg0=_243062a78_IsDarwin(_242d1e44a_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1e94850d2:;
			{
				__jule_func_result.__jule_result_arg0=_243062d20_IsLinux(_242d1e44a_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1e9485148:;
			{
				__jule_func_result.__jule_result_arg0=_243063925_IsUnix(_242d1e44a_Os);
			}
		}
		else {
			_case_begin_1e948481d:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1e9484c3b:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1e62d5034_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1e9487513:;
			{
				__jule_func_result.__jule_result_arg0=_24306313e_IsI386(_242d1dbec_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1e9487579:;
			{
				__jule_func_result.__jule_result_arg0=_2430633d6_IsAmd64(_242d1dbec_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1e94875e0:;
			{
				__jule_func_result.__jule_result_arg0=_24306367d_IsArm64(_242d1dbec_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1e9487656:;
			{
				__jule_func_result.__jule_result_arg0=_243064041_Is64Bit(_242d1dbec_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1e94876bc:;
			{
				__jule_func_result.__jule_result_arg0=_243063c99_Is32Bit(_242d1dbec_Arch);
			}
		}
		else {
			_case_begin_1e9486cb5:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1e94871d3:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e62bdcba_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_2412e85c4_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_529_n - _2413142c1_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _242eda7c0_FindLastByte(_5029_p, '_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e62c3a8e_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e62d5034_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL, _6413_i);;
	_6413_i=static_cast<jule::I64>(_242eda7c0_FindLastByte(_5029_p, '_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e62c3a8e_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e62d5034_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e62d5034_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e62c3a8e_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e62c3a8e_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _1e62d88c8_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	(*(_3619_vars)) = jule::alloc_for_append((*(_3619_vars)),1);(*(_3619_vars)).__push(_242d1e44a_Os);;
	if (_243063925_IsUnix(_242d1e44a_Os)) {
		(*(_3619_vars)) = jule::alloc_for_append((*(_3619_vars)),1);(*(_3619_vars)).__push(jule::Str("unix", 4));;
	};
}



inline void _1e62d8b2b_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(_242d1dbec_Arch);;
	if (_243064041_Is64Bit(_242d1dbec_Arch)) {
		(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(jule::Str("x64", 3));;
	};
	if (_243063c99_Is32Bit(_242d1dbec_Arch)) {
		(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(jule::Str("x32", 3));;
	};
}



inline void _1e62d8dd4_initVars(jule::Slice<jule::Str>* _5518_vars, _1e62d85ba_CompileInfo* _5532_info) {
	_1e62d88c8_setOsVars(_5518_vars);
	_1e62d8b2b_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("production", 10));;
	};
	if ((*(_5532_info))._field_Test) {
		(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1e949370b:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1e9493772:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1e94936a6:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1e9493be5:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1e9493c5b:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1e9493cc2:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1e9493b29:;
	};
}



inline jule::Slice<jule::U8> _1e4beec5d_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__24050435d_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_242d773b5_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _24305e4ae_Log _1e638129a_flatCompilerErr(jule::Str _4120_text) {
	return _24305e4ae_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1e6734dbd_pushPasses(jule::Ptr<_1e54a70a3_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*(_11120_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e94c5155:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto expr = &(_11217_f.get()._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e94c5ac3:;
					if (it != expr_end) {
						_1e5467e54_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1e94c5ac3;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1e94c6a5d:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1e94c5ac3;
										};
									}
									_iter_next_1e94c6a5d:;
									++it;
									goto _iter_begin_1e94c6a5d;
								}
								_iter_end_1e94c6a5d:;
							};
							(*(_11144_passes)) = jule::alloc_for_append((*(_11144_passes)),1);(*(_11144_passes)).__push(_11416_pass._field_Text);;
						}
						_iter_next_1e94c5ac3:;
						++it;
						goto _iter_begin_1e94c5ac3;
					}
					_iter_end_1e94c5ac3:;
				};
			}
			_iter_next_1e94c5155:;
			++it;
			goto _iter_begin_1e94c5155;
		}
		_iter_end_1e94c5155:;
	};
}



inline jule::Slice<jule::Str> _1e673883e_getAllUniquePasses(jule::Ptr<_1e54a70a3_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1e54a4149_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1e6734dbd_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e94c80ae:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_1e6734dbd_pushPasses(&(_13217_u.get()._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1e94c80ae:;
			++it;
			goto _iter_begin_1e94c80ae;
		}
		_iter_end_1e94c80ae:;
	};
	return _12913_passes;;
}



inline _1e62d85ba_CompileInfo _1e67a28a8_buildCompileInfo(void) {
	_1e62d85ba_CompileInfo _14213_info = _1e62d85ba_CompileInfo{._field_Prod=_2403599cc_Production, ._field_Test=_240359070_Test, };;
	{
		auto &_match_expr{ _24029d0a2_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1e94c93ce:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1e94c9456:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1e94c9357:;
	};
	{
		auto &_match_expr{ _240358833_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1e94c8c91:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1e94c97ec:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1e94c9863:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1e94c9c09:;
	};
	return _14213_info;;
}



inline void _1e6a7276b_EliminateDefines(jule::Ptr<_1e65154a6_IR>* _28526_ir) {
	jule::Ptr<_1e6a3849b_ObjectDeadCode> _28613_ocd = static__1e6a388ec_new(_28526_ir);;
	_1e6a724a2_elimanate(_28613_ocd);
}



inline jule::Ptr<_1e474057e_Directive> _1e6a72b01_findDirective(jule::Slice<jule::Ptr<_1e474057e_Directive>>* _29123_directives, jule::Str _29154_tag) {
	{
		auto expr = _29123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9518bc1:;
		if (it != expr_end) {
			jule::Ptr<_1e474057e_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;;
				};
			}
			_iter_next_1e9518bc1:;
			++it;
			goto _iter_begin_1e9518bc1;
		}
		_iter_end_1e9518bc1:;
	};
	return nullptr;;
}



inline jule::Bool _1e6a72e42_hasDirective(jule::Slice<jule::Ptr<_1e474057e_Directive>>* _30118_directives, jule::Str _30149_tag) {
	return (_1e6a72b01_findDirective(_30118_directives, _30149_tag) != nullptr);;
}



inline void _1e6a76a8e_eliminateDeadCodeOfScope(jule::Ptr<_1e5480ad7_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1e5483326_Label>> _2429_labels = jule::Slice<jule::Ptr<_1e5483326_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1e5483612_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1e5483612_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1e6a73b8a_scopeDeadCode> _24413_sdc = jule::new_ptr<_1e6a73b8a_scopeDeadCode>(_1e6a73b8a_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1e5483326_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1e5483612_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1e6a767a3_optimizeStmts(_24413_sdc);
	};
}



inline void _1e6a76d25_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1e5460ec4_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e96b8843:;
		if (it != expr_end) {
			jule::Ptr<_1e5460ec4_Fn> _25517_func = *it;
			{
				{
					auto expr = &(_25517_func.get()._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e96ba900:;
					if (it != expr_end) {
						jule::Ptr<_1e5463b75_FnIns> _25621_ins = *it;
						{
							_1e6a76a8e_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1e96ba900:;
						++it;
						goto _iter_begin_1e96ba900;
					}
					_iter_end_1e96ba900:;
				};
			}
			_iter_next_1e96b8843:;
			++it;
			goto _iter_begin_1e96b8843;
		}
		_iter_end_1e96b8843:;
	};
}



inline void _1e6a77067_eliminateFunctionsScopePackage(jule::Ptr<_1e54a70a3_Package>* _26240_pkg) {
	{
		auto expr = &((*(_26240_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e96bad73:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _26317_f = *it;
			{
				_1e6a76d25_eliminateScopeFunctions(&(_26317_f.get()._field_Funcs));
			}
			_iter_next_1e96bad73:;
			++it;
			goto _iter_begin_1e96bad73;
		}
		_iter_end_1e96bad73:;
	};
}



inline void _1e6a7730e_eliminateScopePackage(jule::Ptr<_1e54a70a3_Package>* _26831_pkg) {
	_1e6a77067_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1e6a7751d_EliminateScopes(jule::Ptr<_1e65154a6_IR>* _27325_ir) {
	jule::I64 _27413_i = ((*(_27325_ir)).get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1e54a4149_ImportInfo> _27617_u = (*(_27325_ir)).get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_1e6a7730e_eliminateScopePackage(&(_27617_u.get()._field_Package));
			};
		}
	_iter_next_1e96bc4d4:;
	}
	_iter_end_1e96bc4d4:;;
	_1e6a7730e_eliminateScopePackage(&((*(_27325_ir)).get()._field_Main));
}



inline jule::Bool _20d5b5561_isStdPackage(jule::Str _39817_f, jule::Str _39825_p) {
	return _242eae332_HasPrefix(_39817_f, _241312d08_Join(jule::Slice<jule::Str>::make({_242d165c9_PathStdlib,_39825_p})));;
}



inline jule::Bool _20d5b8476_isConstantValidConditionalCase(jule::Ptr<_1e5480ed3_If>* _40236_i) {
	{
		auto &_match_expr{ (*(_40236_i)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1e9740777:;
			{
				jule::Ptr<_1e54469c1_Const> _40513_c = (*(_40236_i)).get()._field_Expr.cast_ptr<_1e54469c1_Const>(&__jule_any_type47);;
				return (_1e544ab3a_IsBool(_40513_c.ptr()) && _1e5448792_ReadBool(_40513_c.ptr()));;
			}
		}
		_match_end_1e9740612:;
	};
	return false;;
}



inline jule::Bool _20d5bdc1d_isUnreachableExpr(jule::Any* _41123_expr) {
	{
		auto &_match_expr{ (*(_41123_expr)) };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1e97411b2:;
			{
				jule::Ptr<_1e54469c1_Const> _41413_c = (*(_41123_expr)).cast_ptr<_1e54469c1_Const>(&__jule_any_type47);;
				return (_1e544ab3a_IsBool(_41413_c.ptr()) && (!(_1e5448792_ReadBool(_41413_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1e9741239:;
			{
				jule::Ptr<_1e5452ca7_BinopExprModel> _41713_m = (*(_41123_expr)).cast_ptr<_1e5452ca7_BinopExprModel>(&__jule_any_type117);;
				if ((_41713_m.get()._field_Op.get()._field_Kind == jule::Str("&&", 2))) {
					return (_20d5bdc1d_isUnreachableExpr(&(_41713_m.get()._field_Left.get()._field_Model)) || _20d5bdc1d_isUnreachableExpr(&(_41713_m.get()._field_Right.get()._field_Model)));;
				};
			}
		}
		_match_end_1e9740843:;
	};
	return false;;
}



inline jule::Bool _20d58d6c1_isConstantValidMatchCase(jule::Ptr<_1e548537d_Case>* _42630_case) {
	{
		auto expr = &((*(_42630_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9742537:;
		if (it != expr_end) {
			jule::Ptr<_1e5522d00_Data> *_42712_expr = it;
			{
				if (((_1e55236b3_IsConst((*(_42712_expr)).ptr()) && _1e544ab3a_IsBool((*(_42712_expr)).get()._field_Constant.ptr())) && _1e5448792_ReadBool((*(_42712_expr)).get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1e9742537:;
			++it;
			goto _iter_begin_1e9742537;
		}
		_iter_end_1e9742537:;
	};
	return false;;
}



inline jule::Bool _20d5d2ec9_isUnreachableConditionalCase(jule::Ptr<_1e5480ed3_If>* _43534_i) {
	return _20d5bdc1d_isUnreachableExpr(&((*(_43534_i)).get()._field_Expr));;
}



inline jule::Bool _2269d5418_isUnreachableMatchCase(jule::Ptr<_1e548537d_Case>* _43928_case) {
	{
		auto expr = &((*(_43928_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9745e42:;
		if (it != expr_end) {
			jule::Ptr<_1e5522d00_Data> *_44012_expr = it;
			{
				if ((!(_20d5bdc1d_isUnreachableExpr(&((*(_44012_expr)).get()._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1e9745e42:;
			++it;
			goto _iter_begin_1e9745e42;
		}
		_iter_end_1e9745e42:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1e622465a_checkForBitShiftOpt(jule::Ptr<_1e54527e0_OperandExprModel>* _45125_l, jule::Ptr<_1e54527e0_OperandExprModel>* _45148_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1e5445dee_IsInt(_1e554e17d_Str((*(_45125_l)).get()._field_Kind.ptr())))) || (!(_1e5445dee_IsInt(_1e554e17d_Str((*(_45148_r)).get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_45148_r)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1e8d0b591:;
			{
				goto _match_end_1e8d0be10;
			}
		}
		else {
			_case_begin_1e8d0c053:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1e8d0be10:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1e5449243_AsU64((*(_45148_r)).get()._field_Model.cast_ptr<_1e54469c1_Const>(&__jule_any_type47).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4659_j = _1e540286c_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4669_z = static_cast<jule::U64>(_4659_j);;
	if ((static_cast<jule::F64>(_4669_z) != _4659_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4669_z;
	return __jule_func_result;;
}



inline void _1e6224968_PushOptLevel(jule::I64 _3217_level) {
	_2269bc9a5_Copy=(_3217_level >= static_cast<jule::I64>(1LL));
	_2269c80ed_Deadcode=(_3217_level >= static_cast<jule::I64>(1LL));
	_2269c85b5_Append=(_3217_level >= static_cast<jule::I64>(1LL));
	_2269ca067_Math=(_3217_level >= static_cast<jule::I64>(1LL));
	_2269d4e40_Access=(_3217_level >= static_cast<jule::I64>(1LL));
	_2269d50a5_Inline=(_3217_level >= static_cast<jule::I64>(1LL));
	_2269da7d6_Ptr=(_3217_level >= static_cast<jule::I64>(1LL));
	_226a3480d_Cond=(_3217_level >= static_cast<jule::I64>(1LL));
}



inline void _1e6a048da_detectEnabled(void) {
	_1e697651b_exprEnabled=(((_2269da7d6_Ptr || _2269ca067_Math) || _2269d4e40_Access) || _226a3480d_Cond);
	_1e6977187_scopeEnabled=((_226a3480d_Cond || _2269c85b5_Append) || _2269bc9a5_Copy);
}



inline void _1e6a9577d_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_242d773b5_Exit(1LL);
}



inline jule::U64 _1e7200d3e_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::U64 _1e720114c_unixYearToSeconds(jule::U64 _20122_y, jule::Bool* _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		(*(_20140_leap))=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if ((*(_20140_leap))) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));;
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		(*(_20140_leap))=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			(*(_20140_leap))=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			(*(_20140_leap))=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if ((*(_20140_leap))) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));;
}



inline jule::U64 _1e72014d2_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1e9844172:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1e9844309:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1e9844370:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1e98443d6:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1e984444c:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1e98444b3:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1e9844529:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1e9844590:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1e9844606:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1e984466c:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1e98446e4:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_1e984411c:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;;
}



inline jule::Bool _1e7152d90_isCopyOptimizable(jule::Ptr<_1e5522d00_Data>* _83123_expr) {
	if ((!((*(_83123_expr)).get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_83123_expr)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1e98e2d14:;
			{
				return false;;
			}
		}
		_match_end_1e98e2cae:;
	};
	return true;;
}



inline jule::Bool _1e7153225_isIterCopyOptimizable(jule::Ptr<_1e5522d00_Data>* _84227_expr, jule::Ptr<_1e54ca291_Var>* _84241_v) {
	if (((!((*(_84227_expr)).get()._field_Lvalue)) && (!(_1e5550404_Mutable((*(_84227_expr)).get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*(_84241_v)).get()._field_Mutable)) && (!((*(_84227_expr)).get()._field_Mutable)));;
}



inline jule::Str _1e71621e0_decomposeCommonEsq(jule::U8 _142923_b) {
	{
		auto &_match_expr{ _142923_b };
		
		if (_match_expr == '\\') {
			_case_begin_1e99a9480:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1e99a9a13:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1e99a9a79:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1e99a9ae0:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1e99a9716:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1e99a977c:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1e99a97e3:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1e99a9859:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1e99a9d32:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1e99a9d98:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_1e99a95c3:;
			{
				return jule::Str();;
			}
		}
		_match_end_1e99a9518:;
	};
}



inline jule::Str _1e71624cb_sbtoa(jule::U8 _145610_b) {
	if ((_145610_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_145610_b < 128LLU)) {
		jule::Str _146113_seq = _1e71621e0_decomposeCommonEsq(_145610_b);;
		if ((!(_146113_seq.empty()))) {
			return _146113_seq;;
		};
		if (((32LL <= _145610_b) && (_145610_b <= 126LLU))) {
			return static_cast<jule::Str>(_145610_b);;
		};
	};
	jule::Str _14699_seq = _1e543d18d_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_145610_b)), 8LL);;
	if ((_14699_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _14699_seq);;
	};
	return (jule::Str("\\", 1) + _14699_seq);;
}



inline jule::Str _1e7162773_cstrBytes(jule::Slice<jule::U8> _147614_bytes) {
	jule::Str _147713_lit = jule::Str::alloc(0LL, _147614_bytes.len());;
	{
		auto expr = &(_147614_bytes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e99b0909:;
		if (it != expr_end) {
			jule::U8 *_147812_b = it;
			{
				_147713_lit+=_1e71624cb_sbtoa((*(_147812_b)));
			}
			_iter_next_1e99b0909:;
			++it;
			goto _iter_begin_1e99b0909;
		}
		_iter_end_1e99b0909:;
	};
	return _147713_lit;;
}



inline jule::Str _1e7162a92_cstrLit(jule::Slice<jule::U8> _148412_bytes) {
	return ((jule::Str("\"", 1) + _1e7162773_cstrBytes(_148412_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _1e7162da0_ftoa(jule::F64 _14889_f, jule::I64 _148817_bitsize) {
	if ((_148817_bitsize != 32LL)) {
		if ((_14889_f == static_cast<jule::F64>(static_cast<jule::I64>(_14889_f)))) {
			return _1e7163147_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_14889_f)));;
		};
		if ((_14889_f == static_cast<jule::F64>(static_cast<jule::U64>(_14889_f)))) {
			return _1e71633de_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_14889_f)));;
		};
	};
	jule::Str _149713_m = _1e4d74476_FmtFloat(_14889_f, 'f', -1LL, _148817_bitsize);;
	if ((!(_242edc151_Contains(_149713_m, jule::Str(".", 1))))) {
		_149713_m+=jule::Str(".0", 2);
	};
	return _149713_m;;
}



inline jule::Str _1e7163147_itoa(jule::I64 _15049_x) {
	{
		
		if ((_15049_x == jule::MAX_I64)) {
			_case_begin_1e99b3ed4:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_15049_x == jule::MIN_I64)) {
			_case_begin_1e99b404a:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_1e99b3d91:;
	};
	jule::Str _15129_fmt = _1e543d523_FmtInt(_15049_x, 10LL);;
	if (_243064041_Is64Bit(jule::Str("amd64", 5))) {
		return (_15129_fmt + jule::Str("LL", 2));;
	};
	return (_15129_fmt + jule::Str("L", 1));;
}



inline jule::Str _1e71633de_utoa(jule::U64 _15199_x) {
	{
		
		if ((_15199_x == jule::MAX_U64)) {
			_case_begin_1e99b5ba6:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_1e99b5aa7:;
	};
	jule::Str _15259_fmt = _1e543d18d_FmtUint(_15199_x, 10LL);;
	if (_243064041_Is64Bit(jule::Str("amd64", 5))) {
		return (_15259_fmt + jule::Str("LLU", 3));;
	};
	return (_15259_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _1e7163796_isForwarded(jule::Ptr<_1e5480ad7_Scope>* _153217_s) {
	jule::Any _15339_last = (*(_153217_s)).get()._field_Stmts[((*(_153217_s)).get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _15339_last };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1e99b747c:;
			{
				{
					auto &_match_expr{ _15339_last.cast_ptr<_1e5522d00_Data>(&__jule_any_type23).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1e99b8505:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1e99b88bd:;
						{
							return false;;
						}
					}
					_match_end_1e99b8604:;
				};
			}
		}
		else {
			_case_begin_1e99b7c41:;
			{
				return true;;
			}
		}
		_match_end_1e99b7b64:;
	};
}



inline jule::Bool _1e7163a60_isBuiltinCallHasDebuginf(jule::Ptr<_1e5454b22_FnCallExprModel>* _154730_m) {
	if ((!(_1e546500b_IsBuiltin((*(_154730_m)).get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_154730_m)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1e99b8b65:;
			{
				jule::Ptr<_1e545854e_CommonSubIdentExprModel> _155313_csie = (*(_154730_m)).get()._field_Expr.cast_ptr<_1e545854e_CommonSubIdentExprModel>(&__jule_any_type73);;
				return (_155313_csie.get()._field_Ident == jule::Str("swap", 4));;
			}
		}
		else {
			_case_begin_1e99b7e83:;
			{
				return false;;
			}
		}
		_match_end_1e99b7e2d:;
	};
}



inline jule::Bool _1e7163c91_isExprComesFromBind(jule::Ptr<_1e5522d00_Data>* _156025_d) {
	{
		auto &_match_expr{ (*(_156025_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e99baddc:;
			{
				return (*(_156025_d)).get()._field_Model.cast_ptr<_1e54ca291_Var>(&__jule_any_type8).get()._field_CppLinked;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1e99bae53:;
			{
				return (*(_156025_d)).get()._field_Model.cast_ptr<_1e5457493_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Owner.get()._field_Decl.get()._field_CppLinked;;
			}
		}
		else {
			_case_begin_1e99ba55c:;
			{
				return false;;
			}
		}
		_match_end_1e99ba507:;
	};
}



inline jule::Bool _1e7164038_isAny(jule::Ptr<_1e554dc82_TypeKind>* _157215_t) {
	if ((_1e5551aba_TypeEnum((*(_157215_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1e55539ce_Prim> _15769_prim = _1e5551119_Prim((*(_157215_t)).ptr());;
	return ((_15769_prim != nullptr) && _1e5556e77_IsAny(_15769_prim.ptr()));;
}



inline void _1e720a783_iterFiles(jule::Ptr<_1e54a70a3_Package>* _123519_pkg, jule::Fn<void(jule::Ptr<_1e551cec6_SymbolTable>*)> _123534_f) {
	{
		auto expr = &((*(_123519_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9b48e16:;
		if (it != expr_end) {
			jule::Ptr<_1e551cec6_SymbolTable> _123617_file = *it;
			{
				_123534_f(&(_123617_file));
			}
			_iter_next_1e9b48e16:;
			++it;
			goto _iter_begin_1e9b48e16;
		}
		_iter_end_1e9b48e16:;
	};
}



inline jule::Str _1e720aa6e_concatAllParts(jule::Slice<jule::Ptr<_20d155596_Token>> _124219_parts) {
	jule::I64 _124313_n = 0LL;;
	{
		auto expr = &(_124219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9b4a1d1:;
		if (it != expr_end) {
			jule::Ptr<_20d155596_Token> *_124412_part = it;
			{
				_124313_n+=(*(_124412_part)).get()._field_Kind.len();
			}
			_iter_next_1e9b4a1d1:;
			++it;
			goto _iter_begin_1e9b4a1d1;
		}
		_iter_end_1e9b4a1d1:;
	};
	if ((_124313_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _125013_s = jule::Str::alloc(0LL, _124313_n);;
	{
		auto expr = &(_124219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9b495a9:;
		if (it != expr_end) {
			jule::Ptr<_20d155596_Token> *_125112_p = it;
			{
				_125013_s+=(*(_125112_p)).get()._field_Kind;
			}
			_iter_next_1e9b495a9:;
			++it;
			goto _iter_begin_1e9b495a9;
		}
		_iter_end_1e9b495a9:;
	};
	return _125013_s;;
}



inline jule::Ptr<_1e474057e_Directive> _1e72189a0_findDirective(jule::Slice<jule::Ptr<_1e474057e_Directive>>* _46523_directives, jule::Str _46554_tag) {
	{
		auto expr = _46523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9c34232:;
		if (it != expr_end) {
			jule::Ptr<_1e474057e_Directive> _46617_dr = *it;
			{
				if ((_46617_dr.get()._field_Tag.get()._field_Kind == _46554_tag)) {
					return _46617_dr;;
				};
			}
			_iter_next_1e9c34232:;
			++it;
			goto _iter_begin_1e9c34232;
		}
		_iter_end_1e9c34232:;
	};
	return nullptr;;
}



inline jule::Bool _1e7218d35_hasDirective(jule::Slice<jule::Ptr<_1e474057e_Directive>>* _47518_directives, jule::Str _47549_tag) {
	return (_1e72189a0_findDirective(_47518_directives, _47549_tag) != nullptr);;
}



inline jule::Bool _1e72190cc_shouldInitialized(jule::Ptr<_1e554dc82_TypeKind>* _48227_t) {
	jule::Ptr<_1e55539ce_Prim> _4839_prim = _1e5551119_Prim((*(_48227_t)).ptr());;
	if ((_4839_prim != nullptr)) {
		return ((!(_1e5556e77_IsAny(_4839_prim.ptr()))) && (!(_1e5556c13_IsStr(_4839_prim.ptr()))));;
	};
	{
		
		if ((_1e555137d_Sptr((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1e9c3bdd8:;
			{
				return false;;
			}
		}
		else if ((_1e5552a44_Map((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1e9c3b811:;
			{
				return false;;
			}
		}
		else if ((_1e5552093_Slc((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1e9c3b888:;
			{
				return false;;
			}
		}
		else if ((_1e55527d0_Trait((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1e9c3b910:;
			{
				return false;;
			}
		}
		else if ((_1e5552307_Fn((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1e9c3bab9:;
			{
				return false;;
			}
		}
		else if ((_1e5551d2e_Arr((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1e9c3bb30:;
			{
				jule::Ptr<_1e5559d6a_Arr> _49917_arr = _1e5551d2e_Arr((*(_48227_t)).ptr());;
				return _1e72190cc_shouldInitialized(&(_49917_arr.get()._field_Elem));;
			}
		}
		else if ((_1e555256b_Struct((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1e9c3bb96:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1e9c3b190:;
			{
				return true;;
			}
		}
		_match_end_1e9c3b13a:;
	};
}



inline void _242d78bbe_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _242d78d01_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_242d78bbe_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _4113_max = _242d78ac0_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_242d78ac0_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9ccbc7a:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _4313_n = (*(_4212_k))[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1e9ccbc7a:;
			++it;
			goto _iter_begin_1e9ccbc7a;
		}
		_iter_end_1e9ccbc7a:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto expr = &(_242d78ac0_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9ccd63e:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_4913_s+=(*(_5112_part))[0LL];
				_4913_s+=_242eaebe5_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((_4113_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_4913_s+=(*(_5112_part))[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1e9ccd63e:;
			++it;
			_519_i++;
			goto _iter_begin_1e9ccd63e;
		}
		_iter_end_1e9ccd63e:;
	};
	jule::outln(_4913_s);
}



inline void _242d78e33_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_242d78bbe_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.13 @master", 18));
}



inline void _242d79065_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _242d79197_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _242d792c9_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_242d78bbe_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1059_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1e9cd55d0:;
			{
				_242d79065_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1e9cd52e4:;
			{
				_242d79197_toolDistarch();
			}
		}
		else {
			_case_begin_1e9cd3b72:;
			{
				_242d78bbe_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1e9cd5107:;
	};
}



inline void _242d7940b_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_242d78bbe_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.13 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
	jule::outln((jule::Str("default compiler: ", 18) + _24029d0a2_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _240358833_CppStd));
}



inline void _242d7964d_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_242d78bbe_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1e9cd99be:;
			{
				({
					auto except = static__240504924_Write(jule::Str("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_242d78bbe_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1e9cd83a2:;
			{
				_242d78bbe_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1e9cd95e5:;
	};
}



inline jule::Bool _242d79780_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1e9cdb0ec:;
			{
				_242d78d01_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1e9cdb52b:;
			{
				_242d78e33_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1e9cdb592:;
			{
				_242d792c9_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1e9cdb680:;
			{
				_242d7940b_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1e9cdb6e6:;
			{
				_242d7964d_mod(_15320_args);
			}
		}
		else {
			_case_begin_1e9cdabac:;
			{
				return false;;
			}
		}
		_match_end_1e9cdaae1:;
	};
	return true;;
}



inline void _242d798b2_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _24128311e_Args();;
	if ((_18913_args.len() < 2LL)) {
		_242d798b2_showInfo();
		return;;
	};
	if (_242d79780_processCommand(&(_18913_args))) {
		return;;
	};
	_1e7251c08_compileCommand(&(_18913_args));
}



inline void _1e6eedd3a_init(void) {
	_24029d0a2_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_24042a4b5_File> _1e721b068_openOutput(jule::Str* _4316_path) {
	jule::Str _449_dir = _241316867_Dir((*(_4316_path)));;
	({
		auto except = static__240409a38_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__24125d11b_Create(_449_dir);
				if (!except.ok()) {
					_1e6a9577d_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__24040a1ba_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1e6a9577d_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1e704dd46_clearObjects(void) {
	({
		auto except = static__24042c75e_Remove(_1e721c4dc_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__241237e81_Remove(_1e6de6d10_OutDir);
}



inline void _1e721e654_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_242d3c358_Cmd> _7313_cmd = static__242d3c7a9_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=_242edbd10_Split(_7229_compilerCmd, jule::Str(" ", 1), -1LL);
	({
		auto except = _242d3c985_Spawn(_7313_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type131) == _match_expr) {
					_case_begin_1e9ce317b:;
					{
						static__1e6a93193_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type131) == _match_expr) {
					_case_begin_1e9ce2961:;
					{
						static__1e6a93193_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1e9ce2a93:;
					{
						static__1e6a93193_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1e9ce29e9:;
			};
			_1e6a9577d_Throw(jule::Str());
		}
	});
	jule::I64 _869_status = ({
		auto except = _242d3cdc5_Wait(_7313_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:18"));
		(except.result);
	});;
	if ((_869_status != 0LL)) {
		jule::Str _8813_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _24029d0a2_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1e6a93193_Print(jule::Str("\033[31m", 5), _8813_errorMessage);
		_1e6a9577d_Throw(jule::Str());
	};
	_1e704dd46_clearObjects();
}



inline jule::Bool _1e72305ee_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1009_offset = _242eda7c0_FindLastByte(_9920_path, '.');;
	if ((_1009_offset == -1LL)) {
		return false;;
	};
	return _24305289d_IsValidCppExt(_9920_path.slice(_1009_offset));;
}



inline void _1e72193a7_pushCompCmdClang(jule::Str* _10726_cmd) {
	(*(_10726_cmd))+=jule::Str("-Wno-everything ", 16);
	(*(_10726_cmd))+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _240358833_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1e9ce18c7:;
			{
				(*(_10726_cmd))+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1e9ce6dc7:;
			{
				(*(_10726_cmd))+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1e9ce6e3d:;
			{
				(*(_10726_cmd))+=jule::Str("c++20", 5);
			}
		}
		_match_end_1e9ce6ba7:;
	};
	(*(_10726_cmd))+=jule::Str(" ", 1);
	if (_2403599cc_Production) {
		(*(_10726_cmd))+=jule::Str("-O3 ", 4);
		(*(_10726_cmd))+=jule::Str("-flto ", 6);
		(*(_10726_cmd))+=jule::Str("-DNDEBUG ", 9);
		(*(_10726_cmd))+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		(*(_10726_cmd))+=jule::Str("-O0 ", 4);
	};
}



inline void _1e7240114_pushCompCmdGcc(jule::Str* _13324_cmd) {
	(*(_13324_cmd))+=jule::Str("-w ", 3);
	(*(_13324_cmd))+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _240358833_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1e9ce736c:;
			{
				(*(_13324_cmd))+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1e9ce966b:;
			{
				(*(_13324_cmd))+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1e9ce96d2:;
			{
				(*(_13324_cmd))+=jule::Str("c++20", 5);
			}
		}
		_match_end_1e9ce944b:;
	};
	(*(_13324_cmd))+=jule::Str(" ", 1);
	if (_2403599cc_Production) {
		(*(_13324_cmd))+=jule::Str("-O3 ", 4);
		(*(_13324_cmd))+=jule::Str("-DNDEBUG ", 9);
		(*(_13324_cmd))+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		(*(_13324_cmd))+=jule::Str("-O0 ", 4);
	};
}



inline __jule_tuple_str__jule_tuple_str _1e7244206_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1e65154a6_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_16010_compiler = &(_240358613_CompilerPath);;
	jule::Str _16113_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _24029d0a2_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1e9ceb52a:;
			{
				_1e7240114_pushCompCmdGcc(&(_16113_cmd));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1e9cec5c5:;
			{
				_1e72193a7_pushCompCmdClang(&(_16113_cmd));
			}
		}
		_match_end_1e9cec493:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9cece77:;
		if (it != expr_end) {
			jule::Str *_17112_pass = it;
			{
				_16113_cmd+=(*(_17112_pass));
				_16113_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1e9cece77:;
			++it;
			goto _iter_begin_1e9cece77;
		}
		_iter_end_1e9cece77:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e9cec64c:;
		if (it != expr_end) {
			jule::Ptr<_1e54a4149_ImportInfo> *_17712_u = it;
			{
				if (((*(_17712_u)).get()._field_CppLinked && _1e72305ee_isCppSourceFile((*(_17712_u)).get()._field_Path))) {
					_16113_cmd+=(*(_17712_u)).get()._field_Path;
					_16113_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1e9cec64c:;
			++it;
			goto _iter_begin_1e9cec64c;
		}
		_iter_end_1e9cec64c:;
	};
	if ((!(_1e7229719_Out.empty()))) {
		_16113_cmd+=jule::Str("-o ", 3);
		_16113_cmd+=_1e7229719_Out;
		_16113_cmd+=jule::Str(" ", 1);
	};
	_16113_cmd+=_15918_sourcePath;
	__jule_func_result.__jule_result_arg0 = (*(_16010_compiler));
	__jule_func_result.__jule_result_arg1 = _16113_cmd;
	return __jule_func_result;;
}



inline jule::Str _1e721c4dc_getCompilePath(void) {
	return _241312d08_Join(jule::Slice<jule::Str>::make({_1e6de6d10_OutDir,_1e721c08b_OutName}));;
}



inline void _1e72265b2_applyTargetIndependentOptimizations(jule::Ptr<_1e65154a6_IR>* _20045_ir) {
	jule::Ptr<_1e6974b57_Optimizer> _20213_opt = static__1e699435d_New(_20045_ir);;
	_1e69d46cd_Optimize(_20213_opt.ptr());
}



inline void _1e6d008a6_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _24029d0a2_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1e9ceddce:;
			{
				_1e6a9577d_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1e9d01156:;
			{
				if (_240358613_CompilerPath.empty()) {
					_240358613_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1e9d011bc:;
			{
				if (_240358613_CompilerPath.empty()) {
					_240358613_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1e9d010e0:;
			{
				_1e6a9577d_Throw((jule::Str("invalid option value for --compiler: ", 37) + _24029d0a2_Compiler));
			}
		}
		_match_end_1e9d00bd3:;
	};
}



inline void _1e721a2ed_checkTargetArch(jule::Str _22320_arch) {
	if ((((_22320_arch != jule::Str("amd64", 5)) && (_22320_arch != jule::Str("arm64", 5))) && (_22320_arch != jule::Str("i386", 4)))) {
		_1e6a9577d_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22320_arch));
	};
}



inline void _1e721a430_checkTargetOs(jule::Str _23118_os) {
	if ((((_23118_os != jule::Str("windows", 7)) && (_23118_os != jule::Str("linux", 5))) && (_23118_os != jule::Str("darwin", 6)))) {
		_1e6a9577d_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23118_os));
	};
}



inline void _1e725128a_checkTargetFlag(jule::Str* _23921_target) {
	if ((*(_23921_target)).empty()) {
		_1e6a9577d_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2449_parts = _242edbd10_Split((*(_23921_target)), jule::Str("-", 1), -1LL);;
	if ((_2449_parts.len() != 2LL)) {
		_1e6a9577d_Throw((jule::Str("--target: undefined platform target format: ", 44) + (*(_23921_target))));
	};
	jule::Str _24910_os;;
	jule::Str _24914_arch;;
	({
		jule::Str ___jule_assign_arg = _2449_parts[0LL];
		jule::Str _1___jule_assign_arg = _2449_parts[1LL];
		_24910_os = ___jule_assign_arg;
		_24914_arch = _1___jule_assign_arg;
	});
	if ((_24910_os != jule::Str("native", 6))) {
		_1e721a430_checkTargetOs(_24910_os);
		_242d1e44a_Os=_24910_os;
	};
	if ((_24914_arch != jule::Str("native", 6))) {
		_1e721a2ed_checkTargetArch(_24914_arch);
		_242d1dbec_Arch=_24914_arch;
	};
	_1e4d5c508_UpdateTarget();
}



inline void _1e72513bc_checkOptFlag(jule::Str* _26218_opt) {
	if ((*(_26218_opt)).empty()) {
		_1e6a9577d_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26218_opt)) };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1e9d08c0d:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1e9d09219:;
			{
				_1e6224968_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1e9d08a43:;
			{
				_1e6a9577d_Throw((jule::Str("--opt: invalid optimization level: ", 35) + (*(_26218_opt))));
			}
		}
		_match_end_1e9d089dd:;
	};
}



inline void _1e7251730_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _240358833_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1e9d09280:;
			{
				goto _match_end_1e9d0a0d8;
			}
		}
		else {
			_case_begin_1e9d09b87:;
			{
				_1e6a9577d_Throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _240358833_CppStd));
			}
		}
		_match_end_1e9d0a0d8:;
	};
}



inline jule::Slice<jule::Str> _1e7251862_checkFlags(jule::Slice<jule::Str>* _28716_args) {
	jule::Str _28813_opt = jule::Str("L0", 2);;
	jule::Str _28913_target = jule::Str("native-native", 13);;
	jule::Ptr<_1e724c4a6_FlagSet> _29113_fs = static__1e724c792_New();;
	_1e9d0c4c5_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_28813_opt)))), jule::Str("opt", 3), 0LL, jule::Str("Optimization level", 18));
	_1e9d0c4c5_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_28913_target)))), jule::Str("target", 6), 0LL, jule::Str("Target system", 13));
	_1e9d0c4c5_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e7229719_Out)))), jule::Str("out", 3), 'o', jule::Str("Output identifier", 17));
	_1e9d15d4c_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_240358a53_Shadowing)))), jule::Str("shadowing", 9), 0LL, jule::Str("Allow shadowing", 15));
	_1e9d15d4c_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_240358ca6_Transpilation)))), jule::Str("transpile", 9), 't', jule::Str("Transpile code", 14));
	_1e9d0c4c5_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_24029d0a2_Compiler)))), jule::Str("compiler", 8), 0LL, jule::Str("Backend compiler", 16));
	_1e9d0c4c5_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_240358613_CompilerPath)))), jule::Str("compiler-path", 13), 0LL, jule::Str("Path of backend compiler", 24));
	_1e9d15d4c_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2403599cc_Production)))), jule::Str("production", 10), 'p', jule::Str("Compile for production", 22));
	_1e9d15d4c_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_240359339_RC)))), jule::Str("disable-rc", 10), 0LL, jule::Str("Disable reference counting", 26));
	_1e9d15d4c_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_240359713_Safety)))), jule::Str("disable-safety", 14), 0LL, jule::Str("Disable safety", 14));
	_1e9d0c4c5_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_240358833_CppStd)))), jule::Str("cppstd", 6), 0LL, jule::Str("C++ standard", 12));
	_1e9d15d4c_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2269bc9a5_Copy)))), jule::Str("opt-copy", 8), 0LL, jule::Str("Copy optimization", 17));
	_1e9d15d4c_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2269c80ed_Deadcode)))), jule::Str("opt-deadcode", 12), 0LL, jule::Str("Deadcode optimization", 21));
	_1e9d15d4c_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2269c85b5_Append)))), jule::Str("opt-append", 10), 0LL, jule::Str("Append optimization", 19));
	_1e9d15d4c_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2269ca067_Math)))), jule::Str("opt-math", 8), 0LL, jule::Str("Math optimization", 17));
	_1e9d15d4c_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2269d4e40_Access)))), jule::Str("opt-access", 10), 0LL, jule::Str("Access optimization", 19));
	_1e9d15d4c_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2269d50a5_Inline)))), jule::Str("opt-inline", 10), 0LL, jule::Str("Inline optimization", 19));
	_1e9d15d4c_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2269da7d6_Ptr)))), jule::Str("opt-ptr", 7), 0LL, jule::Str("Pointer optimizations", 21));
	_1e9d15d4c_AddVar(_29113_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_226a3480d_Cond)))), jule::Str("opt-cond", 8), 0LL, jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _31313_content = ({
		auto except = _1e724d5a6_Parse(_29113_fs.ptr(), (*(_28716_args)));
		(except.ok()) ? (except.result) : ({
			_1e6a9577d_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1e6d008a6_checkCompilerFlag();
	_1e7251730_checkCppStdFlag();
	_1e725128a_checkTargetFlag(&(_28913_target));
	_1e72513bc_checkOptFlag(&(_28813_opt));
	return _31313_content;;
}



inline void _1e7251994_setupSemaFlags(jule::I64* _32624_flags) {
	if (_240358a53_Shadowing) {
		(*(_32624_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1e65154a6_IR> _1e7251ac6_buildIr(jule::Slice<jule::Str>* _33213_args) {
	jule::Slice<jule::Str> _3339_content = _1e7251862_checkFlags(_33213_args);;
	jule::I64 _33513_semaFlags = static_cast<jule::I64>(0LL);;
	_1e7251994_setupSemaFlags(&(_33513_semaFlags));
	if ((_3339_content.len() == 0LL)) {
		_1e6a9577d_Throw(_24305e8ee_Logf(jule::Str("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3339_content.len() > 1LL)) {
		_1e6a9577d_Throw((jule::Str("undefined content: ", 19) + _3339_content[1LL]));
	};
	jule::Str _34314_path;;
	jule::Bool _34320_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2412cc531_Abs(_3339_content[0LL]);
		_34314_path = __jule_assign_result.__jule_result_arg0;
		_34320_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34320_ok))) {
		_1e6a9577d_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_2411eda29_Status> _3499_inf = ({
		auto except = static__240409a38_Of(_242d165c9_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1e6a9577d_Throw(_24305e8ee_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_2411eda29_Status>(nullptr);});
	});;
	if ((!(_240503c53_IsDir(_3499_inf.ptr())))) {
		_1e6a9577d_Throw(_24305e8ee_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1e65154a6_IR> _35714_ir;;
	jule::Slice<_24305e4ae_Log> _35718_logs;;
	({
		__jule_tuple_x_1e65154a6_IR__jule_tuple_s_24305e4ae_Log __jule_assign_result = static__1e6558197_Build(_34314_path, _33513_semaFlags);
		_35714_ir = __jule_assign_result.__jule_result_arg0;
		_35718_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_35714_ir == nullptr) && (_35718_logs == nullptr))) {
		_1e6a9577d_Throw(_24305e8ee_Logf(jule::Str("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_34314_path, &__jule_any_type5)})));
	};
	if ((_35718_logs != nullptr)) {
		static__1e6a94d54_PrintLogs(&(_35718_logs));
		_1e6a9577d_Throw(jule::Str());
	};
	return _35714_ir;;
}



inline void _1e7251c08_compileCommand(jule::Slice<jule::Str>* _37224_args) {
	(*(_37224_args))=(*(_37224_args)).slice(1LL);
	if (((*(_37224_args))[0LL] == jule::Str("test", 4))) {
		_240359070_Test=true;
		(*(_37224_args))=(*(_37224_args)).slice(1LL);
	};
	jule::Ptr<_1e65154a6_IR> _37813_ir = _1e7251ac6_buildIr(_37224_args);;
	;
	if ((!(_240359070_Test))) {
		jule::Ptr<_1e5460ec4_Fn> _38317_main = _1e54a8857_FindFn(_37813_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
		if ((_38317_main == nullptr)) {
			_1e6a9577d_Throw(_24305e8ee_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1e72265b2_applyTargetIndependentOptimizations(&(_37813_ir));
	_1e672cb52_Order(_37813_ir.ptr());
	jule::Str _39410_compiler;;
	jule::Str _39420_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1e7244206_genCompileCmd(_1e721c4dc_getCompilePath(), &(_37813_ir));
		_39410_compiler = __jule_assign_result.__jule_result_arg0;
		_39420_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1e7205bbd_ObjectCoder> _39613_oc = static__1e7170907_New(&(_37813_ir), _1e719ae0a_SerializationInfo{._field_Compiler=_39410_compiler, ._field_CompilerCommand=_39420_compilerCmd});;
	if (_240359070_Test) {
		jule::Ptr<_1e7166018_TestCoder> _40117_tc = static__1e716648b_New(&(_39613_oc));;
		_1e71676bd_Serialize(_40117_tc);
	} else {
		_1e720a420_Serialize(_39613_oc);
	};
	jule::Str _4079_path = _1e721c4dc_getCompilePath();;
	jule::Ptr<_24042a4b5_File> _40813_file = _1e721b068_openOutput(&(_4079_path));;
	({
		auto except = _2403ddea1_Write(_40813_file.ptr(), static_cast<jule::Slice<jule::U8>>(_39613_oc.get()._field_Obj));
		if (!except.ok()) {
			_1e6a9577d_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _24042b252_Close(_40813_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:412:5"));
	});
	if ((!(_240358ca6_Transpilation))) {
		_1e721e654_compileIr(_39410_compiler, _39420_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_242d3763e_init();
	_1e4d29805_init();
	_1e6eedd3a_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}