// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 15/5/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _20d8413d0_Importer{};
struct _20d8e3251_Kind{};
struct _20d90e536_Lookup{};
struct _1ba713636_CommonFlag{};
struct _20b052e24_Range16;
struct _20b053397_Range32;
struct _20b05381a_RangeTable;
struct _20b114a85_acceptRange;
struct _2231c7933_lazyBuff;
struct _216327de2_DirEntry;
struct _21635d3ab_Directory;
struct _21624ed4c_File;
struct _216417b08_Status;
struct _20b2171a4_Cmd;
struct _20b1bc016_Log;
struct _20b4e5581_Token;
struct _20b4ea91b_File;
struct _20b4ec973_kindPair;
struct _20b5034d4_lex;
struct _20cb5014b_Ast;
struct _20cb50cea_Node;
struct _20cb511e6_Directive;
struct _20cb892ea_TypeDecl;
struct _20cb898b1_IdentTypeDecl;
struct _20cb8a010_SubIdentTypeDecl;
struct _20cb8a3b7_NamespaceTypeDecl;
struct _20cb8a6a3_SptrTypeDecl;
struct _20cb8aa9e_SlcTypeDecl;
struct _20cb8ad8a_TupleTypeDecl;
struct _20cb8b176_PtrTypeDecl;
struct _20cb8b808_ArrTypeDecl;
struct _20cb8c056_MapTypeDecl;
struct _20cb8c40d_RetTypeDecl;
struct _20cb8d81b_Expr;
struct _20cb8db07_RangeExpr;
struct _20cb8e1ac_UseExpr;
struct _20cb8e498_TupleExpr;
struct _20cb8e850_LitExpr;
struct _20cb90059_UnsafeExpr;
struct _20cb904cc_IdentExpr;
struct _20cb90bd6_UnaryExpr;
struct _20cb9108d_VariadicExpr;
struct _20cb91445_CastExpr;
struct _20cb917ec_NsSelectionExpr;
struct _20cb91c70_SubIdentExpr;
struct _20cb921e3_BinopExpr;
struct _20cb927ed_FnCallExpr;
struct _20cb9327c_FieldExprPair;
struct _20cb939ca_StructLit;
struct _20cb93e4d_BraceLit;
struct _20cb94723_KeyValPair;
struct _20cb94e0a_SliceExpr;
struct _20cb95779_IndexingExpr;
struct _20cb95d84_SlicingExpr;
struct _20cb96170_Constraint;
struct _20cb965e3_GenericDecl;
struct _20cb9699a_LabelSt;
struct _20cb96d52_GotoSt;
struct _20cb9713d_FallSt;
struct _20cb97748_AssignLeft;
struct _20cb97c87_AssignSt;
struct _20cb98b78_Stmt;
struct _20cb99283_ScopeTree;
struct _20cb99959_ParamDecl;
struct _20cb9ac79_FnDecl;
struct _20cb9bc58_VarDecl;
struct _20cb9c110_RetSt;
struct _20cb9c770_Iter;
struct _20cb9d045_WhileKind;
struct _20cb9d8d6_RangeKind;
struct _20cb9dc8d_BreakSt;
struct _20cb9e145_ContSt;
struct _20cb9e5b8_If;
struct _20cb9e970_Else;
struct _20cb9ede3_Conditional;
struct _20cba05b9_TypeAliasDecl;
struct _20cba0a3c_Case;
struct _20cba1213_MatchCase;
struct _20cba19a5_UseDecl;
struct _20cba1e28_EnumItemDecl;
struct _20cba2951_EnumDecl;
struct _20cba3457_TypeEnumItemDecl;
struct _20cba3a62_TypeEnumDecl;
struct _20cba3c60_FieldDecl;
struct _20cba4513_StructDecl;
struct _20cba4b1d_TraitDecl;
struct _20cba5228_Impl;
struct _20d3d1206_floatInfo;
struct _20d65823b_decimalSlice;
struct _20d804e98_leftCheat;
struct _20d8052a6_decimal;
struct _20cc572ec_Const;
struct _20cb79a49_Field;
struct _20cb8218e_Operators;
struct _20cba59dc_Struct;
struct _20cba5bc9_FieldIns;
struct _20cbed66c_OperandExprModel;
struct _20cc2c05d_BinopExprModel;
struct _20d80da0c_UnaryExprModel;
struct _20d80dbe9_StructArgExprModel;
struct _20d80ddd6_StructLitExprModel;
struct _20d80e0c3_AllocStructLitExprModel;
struct _20d80e2b0_CastingExprModel;
struct _20d80e49c_FnCallExprModel;
struct _20d80e689_SliceExprModel;
struct _20d80e876_IndexingExprModel;
struct _20d80ea63_AnonFnExprModel;
struct _20d80ec50_KeyValPairExprModel;
struct _20d80ee3c_MapExprModel;
struct _20d810129_SlicingExprModel;
struct _20d810316_TraitSubIdentExprModel;
struct _20d810734_StructSubIdentExprModel;
struct _20d810921_StructStaticIdentExprModel;
struct _20d810b0d_ArrayExprModel;
struct _20d810cea_CommonIdentExprModel;
struct _20d810ed7_CommonSubIdentExprModel;
struct _20d8111c4_TupleExprModel;
struct _20d8113b1_BuiltinOutCallExprModel;
struct _20d81159d_BuiltinOutlnCallExprModel;
struct _20d81178a_BuiltinCloneCallExprModel;
struct _20d811977_BuiltinNewCallExprModel;
struct _20d811b64_BuiltinPanicCallExprModel;
struct _20d811d51_BuiltinAssertCallExprModel;
struct _20d81203d_BuiltinMakeCallExprModel;
struct _20d81222a_BuiltinAppendCallExprModel;
struct _20d812417_BuiltinLenCallExprModel;
struct _20d812604_BuiltinCapCallExprModel;
struct _20d810503_BuiltinDeleteCallExprModel;
struct _20d812c64_BuiltinCopyCallExprModel;
struct _20d812e51_BuiltinErrorCallExprModel;
struct _20d81313d_SizeofExprModel;
struct _20d81332a_AlignofExprModel;
struct _20d813517_RuneExprModel;
struct _20d813704_IntegratedToStrExprModel;
struct _20d8138e1_BackendEmitExprModel;
struct _20d813acd_FreeExprModel;
struct _20d813e96_RetType;
struct _20d814183_Param;
struct _20d814370_Fn;
struct _20d81455c_ParamIns;
struct _20d814749_FnIns;
struct _20d8156e5_ReferenceStack;
struct _20d815edc_Pass;
struct _20d817e67_symbolBuilder;
struct _20d81a3ed_Trait;
struct _20d81ac8e_EnumItem;
struct _20d81b0ad_Enum;
struct _20d81b641_TypeEnumItem;
struct _20d81b82d_TypeEnum;
struct _20d81d8a7_constraintChecker;
struct _20d8207dd_Impl;
struct _20d825848_Scope;
struct _20d825c44_If;
struct _20d826030_Else;
struct _20d8263a4_Conditional;
struct _20d826690_InfIter;
struct _20d826b13_WhileIter;
struct _20d8274e8_RangeIter;
struct _20d8278e4_ContSt;
struct _20d827c9b_BreakSt;
struct _20d828087_Label;
struct _20d828373_GotoSt;
struct _20d82872a_Postfix;
struct _20d828b9d_Assign;
struct _20d829055_MultiAssign;
struct _20d829594_Match;
struct _20d82a0de_Case;
struct _20d82a694_FallSt;
struct _20d82aa18_RetSt;
struct _20d82b123_scopeLabel;
struct _20d82b596_scopeGoto;
struct _20d82c3aa_scopeChecker;
struct _20d83cec0_directiveChecker;
struct _20d84404d_ImportInfo;
struct _20d846ea7_Package;
struct _20d84c199_Sema;
struct _20d8672c4_missingRetChecker;
struct _20d868e85_IterRelation;
struct _20d869eb9_Var;
struct _20d86ac67_FuncPattern;
struct _20d89b7e2_typeCompatibilityChecker;
struct _20d89d41a_assignTypeChecker;
struct _20d89ed34_dynamicTypeAnnotation;
struct _20d8a4630_fnCallArgChecker;
struct _20d8a7039_structLitChecker;
struct _20d8a8b1d_rangeChecker;
struct _20d8aaba8_retTypeChecker;
struct _20d8aca67_SymbolTable;
struct _20d8b2891_Data;
struct _20d8b3919_Value;
struct _20d8b440e_Eval;
struct _20d8d02a4_unaryEval;
struct _20d8d2042_binaryEval;
struct _20d8e1e53_InsGeneric;
struct _20d8e298c_TypeAlias;
struct _20d8e3680_TypeKind;
struct _20d8e7a5d_TypeSymbol;
struct _20d8e83cc_Prim;
struct _20d8ebb61_Sptr;
struct _20d8ec5bd_Slc;
struct _20d8ed14b_Tuple;
struct _20d8edb74_Map;
struct _20d8ee768_Arr;
struct _20d9001c5_Ptr;
struct _20d90111b_referencer;
struct _20d901e30_typeChecker;
struct _20d909641_identTypeLookup;
struct _1e11c41ae_FileInfo;
struct _1e121ccc9_stmt;
struct _1e121d604_scopeParser;
struct _1e1229b1b_exprBuilder;
struct _1e123641e_assignInfo;
struct _1e1239c4c_parser;
struct _1e124a961_typeBuilder;
struct _20db32b77_CompileInfo;
struct _20db33eca_directiveEval;
struct _1e1146c7a_JuleImporter;
struct _1e1209348_OrderedDefines;
struct _1e0ee3a17_defineOrderer;
struct _1e1335809_liveTable;
struct _1e136b466_scopeDeadCode;
struct _1e13703c1_exprDeadCode;
struct _20da4b5eb_UnsafeBinopExprModel;
struct _20da4b91a_UnsafeIndexingExprModel;
struct _20da4bcd3_PushToSliceExprModel;
struct _20da4c399_MutSlicingExprModel;
struct _20da4c740_StrInsertBeginExprModel;
struct _20da4d8ea_scopeOptimizer;
struct _20da53eb6_exprOptimizer;
struct _1e12723e4_Optimizer;
struct _1e1379e14_AnsiEscape;
struct _1e137b432_Logger;
struct _1e1aa540d_AbsTime;
struct _1e1aa5aa1_Time;
struct _1e1a018ba_scopeCoder;
struct _1e1a09560_exprCoder;
struct _1e1a1810c_deriveCoder;
struct _1e1a19581_TestCoder;
struct _1e1a1bbd2_identCoder;
struct _1e1a4e473_SerializationInfo;
struct _1e1a24987_traitHash;
struct _1ba6aa446_customType;
struct _1ba6aac2c_typeCoder;
struct _1ba6b265c_resultCoder;
struct _1c9bd637a_Flag;
struct _1c9bda12b_Flag;
struct _1c9bdd948_Flag;
struct _1c9be22a9_Flag;
struct _1c9be5ac6_Flag;
struct _1ba7150a5_FlagSet;
struct _20cba5db6_StructIns;
struct _1e1335b06_ObjectDeadCode;
struct _1ba6a5e14_ObjectCoder;
struct _1e1012d55_IR;
struct _1ba71777d_argParser;
struct _20b052e24_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	_20b052e24_Range16(void) = default;

	inline bool operator==(_20b052e24_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_20b052e24_Range16 _other) { return !this->operator==(_other); }


};
struct _20b053397_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	_20b053397_Range32(void) = default;

	inline bool operator==(_20b053397_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_20b053397_Range32 _other) { return !this->operator==(_other); }


};
struct _20b05381a_RangeTable {
	jule::Slice<_20b052e24_Range16> _field_R16;
	jule::Slice<_20b053397_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	

	_20b05381a_RangeTable(void) = default;


};
struct _20b114a85_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	_20b114a85_acceptRange(void) = default;

	inline bool operator==(_20b114a85_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_20b114a85_acceptRange _other) { return !this->operator==(_other); }


};
inline jule::U8 _2231ce044_index(_2231c7933_lazyBuff*, jule::I64);
inline void _2231d1871_append(_2231c7933_lazyBuff*, jule::U8);
inline jule::Str _2231d319c_string(_2231c7933_lazyBuff*);
struct _2231c7933_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	

	_2231c7933_lazyBuff(void) = default;


};
struct _216327de2_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_216417b08_Status> _field_Stat;
	

	_216327de2_DirEntry(void) = default;

	inline bool operator==(_216327de2_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_216327de2_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_216327de2_DirEntry>>> static__20b13e021_Read(jule::Str);
inline jule::VoidExceptional static__20b13e153_Create(jule::Str);
inline jule::VoidExceptional static__20b13e285_Remove(jule::Str);
struct _21635d3ab_Directory {
	

	_21635d3ab_Directory(void) = default;

	inline bool operator==(_21635d3ab_Directory _other) { return true; }

	inline bool operator!=(_21635d3ab_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_21624ed4c_File>> static__216250c93_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__2162520e6_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _22ebe5a0a_Write(_21624ed4c_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _21622d5bc_Read(_21624ed4c_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_21624ed4c_File> static__216250039_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_21624ed4c_File>> static__21622ea52_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__216328be5_Read(jule::Str);
inline jule::VoidExceptional static__2163292ab_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _21622db83_Seek(_21624ed4c_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _216250ad9_Close(_21624ed4c_File*);
struct _21624ed4c_File {
	jule::Uintptr _field_handle = 0;
	

	_21624ed4c_File(void) = default;

	inline bool operator==(_21624ed4c_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_21624ed4c_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_216417b08_Status>> static__21622e3c0_Of(jule::Str);
inline jule::Bool _2163285da_IsDir(_216417b08_Status*);
inline jule::Bool _21635e016_IsReg(_216417b08_Status*);
struct _216417b08_Status {
	jule::U64 _field_Mode = 0;
	jule::U64 _field_Size = 0;
	

	_216417b08_Status(void) = default;

	inline bool operator==(_216417b08_Status _other) {
		return 
			this->_field_Mode == _other._field_Mode &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_216417b08_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20b2171a4_Cmd> static__20b2175d3_New(jule::Str);
inline jule::Exceptional<jule::I64> _20b217847_Spawn(_20b2171a4_Cmd*);
inline jule::Exceptional<jule::I64> _20b21a718_spawn(_20b2171a4_Cmd*);
struct _20b2171a4_Cmd {
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

	_20b2171a4_Cmd(void) = default;


};
struct _20b1bc016_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	_20b1bc016_Log(void) = default;

	inline bool operator==(_20b1bc016_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_20b1bc016_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _20b4e5938_Prec(_20b4e5581_Token*);
struct _20b4e5581_Token {
	jule::Ptr<_20b4ea91b_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	_20b4e5581_Token(void) = default;

	inline bool operator==(_20b4e5581_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_20b4e5581_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _20b4ead28_IsOk(_20b4ea91b_File*);
inline void _20b4eb09d_Fill(_20b4ea91b_File*, jule::Slice<jule::U8>);
inline jule::Str _20b4eb312_Dir(_20b4ea91b_File*);
inline jule::Str _20b4eb576_Name(_20b4ea91b_File*);
inline jule::Uintptr _20b4eb7da_Addr(_20b4ea91b_File*);
inline jule::Str _20b4ebae8_GetRow(_20b4ea91b_File*, jule::I64);
struct _20b4ea91b_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _field_Tokens;
	

	_20b4ea91b_File(void) = default;


};
struct _20b4ec973_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_20b4ec973_kindPair(void) = default;

	inline bool operator==(_20b4ec973_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_20b4ec973_kindPair _other) { return !this->operator==(_other); }


};
inline void _20b503a78_pushErr(_20b5034d4_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _20b503d97_pushErrTok(_20b5034d4_lex*, jule::Ptr<_20b4e5581_Token>&, jule::Str);
inline void _20b504073_lex(_20b5034d4_lex*);
inline jule::Str _20b504381_id(_20b5034d4_lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _20b5045e5_resume(_20b5034d4_lex*);
inline void _20b50486a_lexLineComment(_20b5034d4_lex*, jule::Ptr<_20b4e5581_Token>&);
inline void _20b504ae0_lexRangeComment(_20b5034d4_lex*, jule::Ptr<_20b4e5581_Token>&);
inline jule::Str _20b504ded_num(_20b5034d4_lex*, jule::Slice<jule::U8>&);
inline jule::Str _20b50520b_escapeSeq(_20b5034d4_lex*, jule::Slice<jule::U8>&);
inline jule::Str _20b5055b3_getRune(_20b5034d4_lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _20b5058c1_lexRune(_20b5034d4_lex*, jule::Slice<jule::U8>&);
inline jule::Str _20b505b35_lexStr(_20b5034d4_lex*);
inline jule::Bool _20b505d99_isFirstTokenOfLine(_20b5034d4_lex*);
inline void _20b506075_newLine(_20b5034d4_lex*);
inline jule::Bool _20b506570_isOp(_20b5034d4_lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_20b4e5581_Token>&);
inline jule::Bool _20b506927_lexBasicOps(_20b5034d4_lex*, jule::Slice<jule::U8>, jule::Ptr<_20b4e5581_Token>&);
inline jule::Bool _20b506cce_lexId(_20b5034d4_lex*, jule::Slice<jule::U8>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Bool _20b507186_lexNum(_20b5034d4_lex*, jule::Slice<jule::U8>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Ptr<_20b4e5581_Token> _20b5073ea_token(_20b5034d4_lex*);
struct _20b5034d4_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _field_tokens;
	jule::Ptr<_20b4ea91b_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_20b1bc016_Log> _field_errors;
	

	_20b5034d4_lex(void) = default;


};
struct _20cb5014b_Ast {
	jule::Ptr<_20b4ea91b_File> _field_File;
	jule::Slice<jule::Ptr<_20cb511e6_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_20cba19a5_UseDecl>> _field_UseDecls;
	jule::Slice<_20cb50cea_Node> _field_Nodes;
	

	_20cb5014b_Ast(void) = default;


};
struct _20cb50cea_Node {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_20cb50cea_Node(void) = default;

	inline bool operator==(_20cb50cea_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_20cb50cea_Node _other) { return !this->operator==(_other); }


};
struct _20cb511e6_Directive {
	jule::Ptr<_20b4e5581_Token> _field_Tag;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _field_Args;
	

	_20cb511e6_Directive(void) = default;


};
struct _20cb892ea_TypeDecl {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_20cb892ea_TypeDecl(void) = default;

	inline bool operator==(_20cb892ea_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20cb892ea_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _20cb89c24_IsPrim(_20cb898b1_IdentTypeDecl*);
struct _20cb898b1_IdentTypeDecl {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>> _field_Generics;
	

	_20cb898b1_IdentTypeDecl(void) = default;


};
struct _20cb8a010_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_20cb898b1_IdentTypeDecl>> _field_Idents;
	

	_20cb8a010_SubIdentTypeDecl(void) = default;


};
struct _20cb8a3b7_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _field_Idents;
	jule::Ptr<_20cb892ea_TypeDecl> _field_Kind;
	

	_20cb8a3b7_NamespaceTypeDecl(void) = default;


};
struct _20cb8a6a3_SptrTypeDecl {
	jule::Ptr<_20cb892ea_TypeDecl> _field_Elem;
	

	_20cb8a6a3_SptrTypeDecl(void) = default;

	inline bool operator==(_20cb8a6a3_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_20cb8a6a3_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _20cb8aa9e_SlcTypeDecl {
	jule::Ptr<_20cb892ea_TypeDecl> _field_Elem;
	

	_20cb8aa9e_SlcTypeDecl(void) = default;

	inline bool operator==(_20cb8aa9e_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_20cb8aa9e_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _20cb8ad8a_TupleTypeDecl {
	jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>> _field_Types;
	

	_20cb8ad8a_TupleTypeDecl(void) = default;


};
inline jule::Bool _20cb8b4c8_IsUnsafe(_20cb8b176_PtrTypeDecl*);
struct _20cb8b176_PtrTypeDecl {
	jule::Ptr<_20cb892ea_TypeDecl> _field_Elem;
	

	_20cb8b176_PtrTypeDecl(void) = default;

	inline bool operator==(_20cb8b176_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_20cb8b176_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _20cb8bbd2_AutoSized(_20cb8b808_ArrTypeDecl*);
struct _20cb8b808_ArrTypeDecl {
	jule::Ptr<_20cb892ea_TypeDecl> _field_Elem;
	jule::Ptr<_20cb8d81b_Expr> _field_Size;
	

	_20cb8b808_ArrTypeDecl(void) = default;

	inline bool operator==(_20cb8b808_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_20cb8b808_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _20cb8c056_MapTypeDecl {
	jule::Ptr<_20cb892ea_TypeDecl> _field_Key;
	jule::Ptr<_20cb892ea_TypeDecl> _field_Val;
	

	_20cb8c056_MapTypeDecl(void) = default;

	inline bool operator==(_20cb8c056_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_20cb8c056_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _20cb8c40d_RetTypeDecl {
	jule::Ptr<_20cb892ea_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _field_Idents;
	

	_20cb8c40d_RetTypeDecl(void) = default;


};
struct _20cb8d81b_Expr {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20b4e5581_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_20cb8d81b_Expr(void) = default;

	inline bool operator==(_20cb8d81b_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20cb8d81b_Expr _other) { return !this->operator==(_other); }


};
struct _20cb8db07_RangeExpr {
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	

	_20cb8db07_RangeExpr(void) = default;

	inline bool operator==(_20cb8db07_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20cb8db07_RangeExpr _other) { return !this->operator==(_other); }


};
struct _20cb8e1ac_UseExpr {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	

	_20cb8e1ac_UseExpr(void) = default;

	inline bool operator==(_20cb8e1ac_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20cb8e1ac_UseExpr _other) { return !this->operator==(_other); }


};
struct _20cb8e498_TupleExpr {
	jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _field_Expr;
	

	_20cb8e498_TupleExpr(void) = default;


};
inline jule::Bool _20cb8eba2_IsNil(_20cb8e850_LitExpr*);
struct _20cb8e850_LitExpr {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Value;
	

	_20cb8e850_LitExpr(void) = default;

	inline bool operator==(_20cb8e850_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_20cb8e850_LitExpr _other) { return !this->operator==(_other); }


};
struct _20cb90059_UnsafeExpr {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	

	_20cb90059_UnsafeExpr(void) = default;

	inline bool operator==(_20cb90059_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20cb90059_UnsafeExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _20cb9082e_IsSelf(_20cb904cc_IdentExpr*);
struct _20cb904cc_IdentExpr {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	

	_20cb904cc_IdentExpr(void) = default;

	inline bool operator==(_20cb904cc_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_20cb904cc_IdentExpr _other) { return !this->operator==(_other); }


};
struct _20cb90bd6_UnaryExpr {
	jule::Ptr<_20b4e5581_Token> _field_Op;
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	

	_20cb90bd6_UnaryExpr(void) = default;

	inline bool operator==(_20cb90bd6_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20cb90bd6_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _20cb9108d_VariadicExpr {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	

	_20cb9108d_VariadicExpr(void) = default;

	inline bool operator==(_20cb9108d_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20cb9108d_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _20cb91445_CastExpr {
	jule::Ptr<_20cb892ea_TypeDecl> _field_Kind;
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	

	_20cb91445_CastExpr(void) = default;

	inline bool operator==(_20cb91445_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20cb91445_CastExpr _other) { return !this->operator==(_other); }


};
struct _20cb917ec_NsSelectionExpr {
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _field_Ns;
	jule::Ptr<_20b4e5581_Token> _field_Ident;
	

	_20cb917ec_NsSelectionExpr(void) = default;


};
struct _20cb91c70_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	jule::Ptr<_20b4e5581_Token> _field_Ident;
	

	_20cb91c70_SubIdentExpr(void) = default;

	inline bool operator==(_20cb91c70_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_20cb91c70_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _20cb921e3_BinopExpr {
	jule::Ptr<_20cb8d81b_Expr> _field_Left;
	jule::Ptr<_20cb8d81b_Expr> _field_Right;
	jule::Ptr<_20b4e5581_Token> _field_Op;
	

	_20cb921e3_BinopExpr(void) = default;

	inline bool operator==(_20cb921e3_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_20cb921e3_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _20cb92b61_Unhandled(_20cb927ed_FnCallExpr*);
inline jule::Bool _20cb92dc5_Ignored(_20cb927ed_FnCallExpr*);
struct _20cb927ed_FnCallExpr {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _field_Args;
	jule::Ptr<_20cb99283_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	

	_20cb927ed_FnCallExpr(void) = default;


};
inline jule::Bool _20cb935ce_IsTargeted(_20cb9327c_FieldExprPair*);
struct _20cb9327c_FieldExprPair {
	jule::Ptr<_20b4e5581_Token> _field_Field;
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	

	_20cb9327c_FieldExprPair(void) = default;

	inline bool operator==(_20cb9327c_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20cb9327c_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _20cb939ca_StructLit {
	jule::Ptr<_20b4e5581_Token> _field_End;
	jule::Ptr<_20cb892ea_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _field_Exprs;
	

	_20cb939ca_StructLit(void) = default;


};
inline jule::Bool _20cb942a0_IsEmpty(_20cb93e4d_BraceLit*);
struct _20cb93e4d_BraceLit {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20b4e5581_Token> _field_End;
	jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _field_Exprs;
	

	_20cb93e4d_BraceLit(void) = default;


};
struct _20cb94723_KeyValPair {
	jule::Ptr<_20cb8d81b_Expr> _field_Key;
	jule::Ptr<_20cb8d81b_Expr> _field_Val;
	jule::Ptr<_20b4e5581_Token> _field_Colon;
	

	_20cb94723_KeyValPair(void) = default;

	inline bool operator==(_20cb94723_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_20cb94723_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _20cb9523a_IsEmpty(_20cb94e0a_SliceExpr*);
struct _20cb94e0a_SliceExpr {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20b4e5581_Token> _field_End;
	jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _field_Exprs;
	

	_20cb94e0a_SliceExpr(void) = default;


};
struct _20cb95779_IndexingExpr {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20b4e5581_Token> _field_End;
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	jule::Ptr<_20cb8d81b_Expr> _field_Index;
	

	_20cb95779_IndexingExpr(void) = default;

	inline bool operator==(_20cb95779_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_20cb95779_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _20cb95d84_SlicingExpr {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20b4e5581_Token> _field_End;
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	jule::Ptr<_20cb8d81b_Expr> _field_Start;
	jule::Ptr<_20cb8d81b_Expr> _field_To;
	

	_20cb95d84_SlicingExpr(void) = default;

	inline bool operator==(_20cb95d84_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_20cb95d84_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _20cb96170_Constraint {
	jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>> _field_Mask;
	

	_20cb96170_Constraint(void) = default;


};
struct _20cb965e3_GenericDecl {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_20cb96170_Constraint> _field_Constraint;
	

	_20cb965e3_GenericDecl(void) = default;

	inline bool operator==(_20cb965e3_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_20cb965e3_GenericDecl _other) { return !this->operator==(_other); }


};
struct _20cb9699a_LabelSt {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Ident;
	

	_20cb9699a_LabelSt(void) = default;

	inline bool operator==(_20cb9699a_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_20cb9699a_LabelSt _other) { return !this->operator==(_other); }


};
struct _20cb96d52_GotoSt {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20b4e5581_Token> _field_Label;
	

	_20cb96d52_GotoSt(void) = default;

	inline bool operator==(_20cb96d52_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_20cb96d52_GotoSt _other) { return !this->operator==(_other); }


};
struct _20cb9713d_FallSt {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	

	_20cb9713d_FallSt(void) = default;

	inline bool operator==(_20cb9713d_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_20cb9713d_FallSt _other) { return !this->operator==(_other); }


};
struct _20cb97748_AssignLeft {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	

	_20cb97748_AssignLeft(void) = default;

	inline bool operator==(_20cb97748_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20cb97748_AssignLeft _other) { return !this->operator==(_other); }


};
struct _20cb97c87_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_20b4e5581_Token> _field_Setter;
	jule::Slice<jule::Ptr<_20cb97748_AssignLeft>> _field_Left;
	jule::Ptr<_20cb8d81b_Expr> _field_Right;
	

	_20cb97c87_AssignSt(void) = default;


};
struct _20cb98b78_Stmt {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_20cb98b78_Stmt(void) = default;

	inline bool operator==(_20cb98b78_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_20cb98b78_Stmt _other) { return !this->operator==(_other); }


};
struct _20cb99283_ScopeTree {
	jule::Ptr<_20cb99283_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_20cb98b78_Stmt> _field_Stmts;
	jule::Ptr<_20b4e5581_Token> _field_End;
	

	_20cb99283_ScopeTree(void) = default;


};
inline jule::Bool _20cb99cbc_IsSelf(_20cb99959_ParamDecl*);
inline jule::Bool _20cb9a031_IsRef(_20cb99959_ParamDecl*);
struct _20cb99959_ParamDecl {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_20cb892ea_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	_20cb99959_ParamDecl(void) = default;

	inline bool operator==(_20cb99959_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_20cb99959_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _20cb9b0cb_IsAnon(_20cb9ac79_FnDecl*);
struct _20cb9ac79_FnDecl {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_20cb511e6_Directive>> _field_Directives;
	jule::Ptr<_20cb99283_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>> _field_Generics;
	jule::Ptr<_20cb8c40d_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_20cb99959_ParamDecl>> _field_Params;
	

	_20cb9ac79_FnDecl(void) = default;


};
struct _20cb9bc58_VarDecl {
	jule::Ptr<_20cb99283_ScopeTree> _field_Scope;
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_20cb511e6_Directive>> _field_Directives;
	jule::Ptr<_20cb892ea_TypeDecl> _field_Kind;
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	

	_20cb9bc58_VarDecl(void) = default;


};
struct _20cb9c110_RetSt {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	

	_20cb9c110_RetSt(void) = default;

	inline bool operator==(_20cb9c110_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20cb9c110_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _20cb9cac2_IsInf(_20cb9c770_Iter*);
struct _20cb9c770_Iter {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_20cb99283_ScopeTree> _field_Scope;
	

	_20cb9c770_Iter(void) = default;

	inline bool operator==(_20cb9c770_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20cb9c770_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _20cb9d397_IsWhileNext(_20cb9d045_WhileKind*);
struct _20cb9d045_WhileKind {
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_20b4e5581_Token> _field_NextToken;
	

	_20cb9d045_WhileKind(void) = default;

	inline bool operator==(_20cb9d045_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_20cb9d045_WhileKind _other) { return !this->operator==(_other); }


};
struct _20cb9d8d6_RangeKind {
	jule::Ptr<_20b4e5581_Token> _field_InToken;
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	jule::Ptr<_20cb9bc58_VarDecl> _field_KeyA;
	jule::Ptr<_20cb9bc58_VarDecl> _field_KeyB;
	

	_20cb9d8d6_RangeKind(void) = default;

	inline bool operator==(_20cb9d8d6_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_20cb9d8d6_RangeKind _other) { return !this->operator==(_other); }


};
struct _20cb9dc8d_BreakSt {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20b4e5581_Token> _field_Label;
	

	_20cb9dc8d_BreakSt(void) = default;

	inline bool operator==(_20cb9dc8d_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_20cb9dc8d_BreakSt _other) { return !this->operator==(_other); }


};
struct _20cb9e145_ContSt {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20b4e5581_Token> _field_Label;
	

	_20cb9e145_ContSt(void) = default;

	inline bool operator==(_20cb9e145_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_20cb9e145_ContSt _other) { return !this->operator==(_other); }


};
struct _20cb9e5b8_If {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	jule::Ptr<_20cb99283_ScopeTree> _field_Scope;
	

	_20cb9e5b8_If(void) = default;

	inline bool operator==(_20cb9e5b8_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20cb9e5b8_If _other) { return !this->operator==(_other); }


};
struct _20cb9e970_Else {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20cb99283_ScopeTree> _field_Scope;
	

	_20cb9e970_Else(void) = default;

	inline bool operator==(_20cb9e970_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20cb9e970_Else _other) { return !this->operator==(_other); }


};
struct _20cb9ede3_Conditional {
	jule::Ptr<_20cb9e5b8_If> _field_Head;
	jule::Slice<jule::Ptr<_20cb9e5b8_If>> _field_Tail;
	jule::Ptr<_20cb9e970_Else> _field_Default;
	

	_20cb9ede3_Conditional(void) = default;


};
struct _20cba05b9_TypeAliasDecl {
	jule::Ptr<_20cb99283_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_20cb892ea_TypeDecl> _field_Kind;
	

	_20cba05b9_TypeAliasDecl(void) = default;

	inline bool operator==(_20cba05b9_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20cba05b9_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _20cba0a3c_Case {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20cb99283_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _field_Exprs;
	

	_20cba0a3c_Case(void) = default;


};
struct _20cba1213_MatchCase {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20b4e5581_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_20cba0a3c_Case>> _field_Cases;
	jule::Ptr<_20cb9e970_Else> _field_Default;
	

	_20cba1213_MatchCase(void) = default;


};
struct _20cba19a5_UseDecl {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _field_Selected;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	

	_20cba19a5_UseDecl(void) = default;


};
inline jule::Bool _20cba227a_AutoExpr(_20cba1e28_EnumItemDecl*);
struct _20cba1e28_EnumItemDecl {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	

	_20cba1e28_EnumItemDecl(void) = default;

	inline bool operator==(_20cba1e28_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20cba1e28_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _20cba2ed4_DefaultTyped(_20cba2951_EnumDecl*);
struct _20cba2951_EnumDecl {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_20cb892ea_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_20cba1e28_EnumItemDecl>> _field_Items;
	jule::Ptr<_20b4e5581_Token> _field_End;
	

	_20cba2951_EnumDecl(void) = default;


};
struct _20cba3457_TypeEnumItemDecl {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_20cb892ea_TypeDecl> _field_Kind;
	

	_20cba3457_TypeEnumItemDecl(void) = default;

	inline bool operator==(_20cba3457_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20cba3457_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _20cba3a62_TypeEnumDecl {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_20cba3457_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_20b4e5581_Token> _field_End;
	

	_20cba3a62_TypeEnumDecl(void) = default;


};
struct _20cba3c60_FieldDecl {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_20cb892ea_TypeDecl> _field_Kind;
	jule::Ptr<_20cb8d81b_Expr> _field_Default;
	

	_20cba3c60_FieldDecl(void) = default;

	inline bool operator==(_20cba3c60_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_20cba3c60_FieldDecl _other) { return !this->operator==(_other); }


};
struct _20cba4513_StructDecl {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20b4e5581_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_20cba3c60_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_20cb511e6_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>> _field_Generics;
	

	_20cba4513_StructDecl(void) = default;


};
struct _20cba4b1d_TraitDecl {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20b4e5581_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_20cb9ac79_FnDecl>> _field_Methods;
	

	_20cba4b1d_TraitDecl(void) = default;


};
inline jule::Bool _20cba558b_IsTraitImpl(_20cba5228_Impl*);
inline jule::Bool _20cba5800_IsStructImpl(_20cba5228_Impl*);
struct _20cba5228_Impl {
	jule::Ptr<_20b4e5581_Token> _field_End;
	jule::Ptr<_20cb892ea_TypeDecl> _field_Base;
	jule::Ptr<_20cb892ea_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_20cb9ac79_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_20cb9bc58_VarDecl>> _field_Statics;
	

	_20cba5228_Impl(void) = default;


};
struct _20d3d1206_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	_20d3d1206_floatInfo(void) = default;

	inline bool operator==(_20d3d1206_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_20d3d1206_floatInfo _other) { return !this->operator==(_other); }


};
struct _20d65823b_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	

	_20d65823b_decimalSlice(void) = default;


};
struct _20d804e98_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	_20d804e98_leftCheat(void) = default;

	inline bool operator==(_20d804e98_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_20d804e98_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _20d22d130_set(_20d8052a6_decimal*, jule::Str);
struct _u64_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline _u64_bool _20d80256c_floatBits(_20d8052a6_decimal*, _20d3d1206_floatInfo&);
inline void _20d805493_assign(_20d8052a6_decimal*, jule::U64);
inline void _20d8055c5_shift(_20d8052a6_decimal*, jule::I64);
inline void _20d805707_roundDown(_20d8052a6_decimal*, jule::I64);
inline void _20d805839_roundUp(_20d8052a6_decimal*, jule::I64);
inline void _20d80596b_round(_20d8052a6_decimal*, jule::I64);
inline jule::U64 _20d805a9d_roundedInteger(_20d8052a6_decimal*);
struct _20d8052a6_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	_20d8052a6_decimal(void) = default;

	inline bool operator==(_20d8052a6_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_20d8052a6_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20cc572ec_Const> static__20cc98393_NewI64(jule::I64);
inline jule::Ptr<_20cc572ec_Const> static__20cc7e3ac_NewU64(jule::U64);
inline jule::Ptr<_20cc572ec_Const> static__20ccb8979_NewBool(jule::Bool);
inline jule::Ptr<_20cc572ec_Const> static__20ccbec49_NewStr(jule::Str);
inline jule::Ptr<_20cc572ec_Const> static__20ccbed7b_NewF64(jule::F64);
inline jule::Ptr<_20cc572ec_Const> static__20d80a2ab_NewNil(void);
inline jule::I64 _20d80a6a7_ReadI64(_20cc572ec_Const*);
inline jule::U64 _20d80a7d9_ReadU64(_20cc572ec_Const*);
inline jule::Bool _20d80a91b_ReadBool(_20cc572ec_Const*);
inline jule::Str _20d80aa4d_ReadStr(_20cc572ec_Const*);
inline jule::F64 _20d80ab80_ReadF64(_20cc572ec_Const*);
inline jule::I64 _20d80acb2_AsI64(_20cc572ec_Const*);
inline jule::U64 _20d80ade4_AsU64(_20cc572ec_Const*);
inline jule::F64 _20d80b026_AsF64(_20cc572ec_Const*);
inline void _20d80b158_SetI64(_20cc572ec_Const*, jule::I64);
inline void _20d80b28a_SetU64(_20cc572ec_Const*, jule::U64);
inline void _20d80b3bc_SetBool(_20cc572ec_Const*, jule::Bool);
inline void _20d80b4ee_SetStr(_20cc572ec_Const*, jule::Str);
inline void _20d80b631_SetF64(_20cc572ec_Const*, jule::F64);
inline void _20d80b763_SetNil(_20cc572ec_Const*);
inline jule::Bool _20d80b895_IsI64(_20cc572ec_Const*);
inline jule::Bool _20d80b9c7_IsU64(_20cc572ec_Const*);
inline jule::Bool _20d80bb09_IsBool(_20cc572ec_Const*);
inline jule::Bool _20d80bc3b_IsStr(_20cc572ec_Const*);
inline jule::Bool _20d80bd6d_IsF64(_20cc572ec_Const*);
inline jule::Bool _20d80bea0_IsNil(_20cc572ec_Const*);
inline jule::Bool _20d80c0d2_AreSameTypes(_20cc572ec_Const*, _20cc572ec_Const);
inline jule::Bool _20d80c214_And(_20cc572ec_Const*, _20cc572ec_Const);
inline jule::Bool _20d80c346_Or(_20cc572ec_Const*, _20cc572ec_Const);
inline jule::Bool _20d80c478_Eq(_20cc572ec_Const*, _20cc572ec_Const);
inline jule::Bool _20d80c5aa_Lt(_20cc572ec_Const*, _20cc572ec_Const);
inline jule::Bool _20d80c6dc_LtEq(_20cc572ec_Const*, _20cc572ec_Const);
inline jule::Bool _20d80c81e_Gt(_20cc572ec_Const*, _20cc572ec_Const);
inline jule::Bool _20d80c951_GtEq(_20cc572ec_Const*, _20cc572ec_Const);
inline jule::Bool _20d80ca83_Add(_20cc572ec_Const*, _20cc572ec_Const);
inline jule::Bool _20d80cbb5_Sub(_20cc572ec_Const*, _20cc572ec_Const);
inline jule::Bool _20d80cce7_Mul(_20cc572ec_Const*, _20cc572ec_Const);
inline jule::Bool _20d80ce29_Div(_20cc572ec_Const*, _20cc572ec_Const);
inline jule::Bool _20d80d05b_Mod(_20cc572ec_Const*, _20cc572ec_Const);
inline jule::Bool _20d80d18d_BitwiseAnd(_20cc572ec_Const*, _20cc572ec_Const);
inline jule::Bool _20d80d2c0_BitwiseOr(_20cc572ec_Const*, _20cc572ec_Const);
inline jule::Bool _20d80d402_Xor(_20cc572ec_Const*, _20cc572ec_Const);
inline jule::Bool _20d80d534_Lshift(_20cc572ec_Const*, _20cc572ec_Const);
inline jule::Bool _20d80d666_Rshift(_20cc572ec_Const*, _20cc572ec_Const);
struct _20cc572ec_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	_20cc572ec_Const(void) = default;

	inline jule::Bool operator==(_20cc572ec_Const _other) { return _20d80c478_Eq(this, _other); }

	inline bool operator!=(_20cc572ec_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_20cc572ec_Const _other) { return _20d80c81e_Gt(this, _other); }

	inline jule::Bool operator>=(_20cc572ec_Const _other) { return _20d80c951_GtEq(this, _other); }

	inline jule::Bool operator<(_20cc572ec_Const _other) { return _20d80c5aa_Lt(this, _other); }

	inline jule::Bool operator<=(_20cc572ec_Const _other) { return _20d80c6dc_LtEq(this, _other); }


};
inline jule::Ptr<_20cba5bc9_FieldIns> _20ca58cad_instance(jule::Ptr<_20cb79a49_Field>);
struct _20cb79a49_Field {
	jule::Ptr<_20cba59dc_Struct> _field_Owner;
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_20d8e7a5d_TypeSymbol> _field_Kind;
	jule::Ptr<_20cb8d81b_Expr> _field_Default;
	

	_20cb79a49_Field(void) = default;

	inline bool operator==(_20cb79a49_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_20cb79a49_Field _other) { return !this->operator==(_other); }


};
struct _20cb8218e_Operators {
	jule::Ptr<_20d814749_FnIns> _field_Eq;
	jule::Ptr<_20d814749_FnIns> _field_Gt;
	jule::Ptr<_20d814749_FnIns> _field_GtEq;
	jule::Ptr<_20d814749_FnIns> _field_Lt;
	jule::Ptr<_20d814749_FnIns> _field_LtEq;
	jule::Ptr<_20d814749_FnIns> _field_Shl;
	jule::Ptr<_20d814749_FnIns> _field_Shr;
	jule::Ptr<_20d814749_FnIns> _field_Add;
	jule::Ptr<_20d814749_FnIns> _field_Sub;
	jule::Ptr<_20d814749_FnIns> _field_Div;
	jule::Ptr<_20d814749_FnIns> _field_Mul;
	jule::Ptr<_20d814749_FnIns> _field_Mod;
	jule::Ptr<_20d814749_FnIns> _field_BitAnd;
	jule::Ptr<_20d814749_FnIns> _field_BitOr;
	jule::Ptr<_20d814749_FnIns> _field_BitXor;
	jule::Ptr<_20d814749_FnIns> _field_Neg;
	jule::Ptr<_20d814749_FnIns> _field_Pos;
	jule::Ptr<_20d814749_FnIns> _field_BitNot;
	jule::Ptr<_20d814749_FnIns> _field_AddAssign;
	jule::Ptr<_20d814749_FnIns> _field_SubAssign;
	jule::Ptr<_20d814749_FnIns> _field_DivAssign;
	jule::Ptr<_20d814749_FnIns> _field_MulAssign;
	jule::Ptr<_20d814749_FnIns> _field_ModAssign;
	jule::Ptr<_20d814749_FnIns> _field_ShlAssign;
	jule::Ptr<_20d814749_FnIns> _field_ShrAssign;
	jule::Ptr<_20d814749_FnIns> _field_BitOrAssign;
	jule::Ptr<_20d814749_FnIns> _field_BitAndAssign;
	jule::Ptr<_20d814749_FnIns> _field_BitXorAssign;
	

	_20cb8218e_Operators(void) = default;

	inline bool operator==(_20cb8218e_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_20cb8218e_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20cba5db6_StructIns> _20cb5c433_instance(jule::Ptr<_20cba59dc_Struct>);
inline jule::Ptr<_20cba5db6_StructIns> _20cb61206_appendInstance(_20cba59dc_Struct*, jule::Ptr<_20cba5db6_StructIns>&);
inline jule::Ptr<_20d814370_Fn> _20cb61e60_FindMethod(_20cba59dc_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_20d869eb9_Var> _20cb650b7_FindStatic(_20cba59dc_Struct*, jule::Str);
inline jule::Ptr<_20cb79a49_Field> _20cb64517_FindField(_20cba59dc_Struct*, jule::Str);
inline jule::Bool _20cb668e3_IsImplements(_20cba59dc_Struct*, jule::Ptr<_20d81a3ed_Trait>);
inline jule::Bool _20cb65bde_IsDerives(_20cba59dc_Struct*, jule::Str);
inline jule::Bool _20cb69bb0_IsUses(_20cba59dc_Struct*, jule::Ptr<_20cba59dc_Struct>);
inline jule::Bool _20cb6a375_HasRefAccessible(_20cba59dc_Struct*);
struct _20cba59dc_Struct {
	jule::Ptr<_20d84c199_Sema> _field_sema;
	jule::Slice<jule::Ptr<_20cba59dc_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_20cba59dc_Struct>> _field_Uses;
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_20cb79a49_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_20d814370_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_20d869eb9_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_20cb511e6_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_20d81a3ed_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_20cba5db6_StructIns>> _field_Instances;
	

	_20cba59dc_Struct(void) = default;


};
struct _20cba5bc9_FieldIns {
	jule::Ptr<_20cb79a49_Field> _field_Decl;
	jule::Ptr<_20d8e3680_TypeKind> _field_Kind;
	jule::Ptr<_20d8b2891_Data> _field_Default;
	

	_20cba5bc9_FieldIns(void) = default;

	inline bool operator==(_20cba5bc9_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_20cba5bc9_FieldIns _other) { return !this->operator==(_other); }


};
struct _20cbed66c_OperandExprModel {
	jule::Ptr<_20d8e3680_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	_20cbed66c_OperandExprModel(void) = default;

	inline bool operator==(_20cbed66c_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_20cbed66c_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _20cc2c05d_BinopExprModel {
	jule::Ptr<_20cbed66c_OperandExprModel> _field_Left;
	jule::Ptr<_20cbed66c_OperandExprModel> _field_Right;
	jule::Ptr<_20b4e5581_Token> _field_Op;
	

	_20cc2c05d_BinopExprModel(void) = default;

	inline bool operator==(_20cc2c05d_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_20cc2c05d_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _20d80da0c_UnaryExprModel {
	jule::Ptr<_20d8b2891_Data> _field_Expr;
	jule::Ptr<_20b4e5581_Token> _field_Op;
	

	_20d80da0c_UnaryExprModel(void) = default;

	inline bool operator==(_20d80da0c_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_20d80da0c_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _20d80dbe9_StructArgExprModel {
	jule::Ptr<_20cba5bc9_FieldIns> _field_Field;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_20d80dbe9_StructArgExprModel(void) = default;

	inline bool operator==(_20d80dbe9_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d80dbe9_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _20d80ddd6_StructLitExprModel {
	jule::Ptr<_20cba5db6_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_20d80dbe9_StructArgExprModel>> _field_Args;
	

	_20d80ddd6_StructLitExprModel(void) = default;


};
struct _20d80e0c3_AllocStructLitExprModel {
	jule::Ptr<_20d80ddd6_StructLitExprModel> _field_Lit;
	

	_20d80e0c3_AllocStructLitExprModel(void) = default;

	inline bool operator==(_20d80e0c3_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_20d80e0c3_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _20d80e2b0_CastingExprModel {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_20d8e3680_TypeKind> _field_Kind;
	jule::Ptr<_20d8e3680_TypeKind> _field_ExprKind;
	

	_20d80e2b0_CastingExprModel(void) = default;

	inline bool operator==(_20d80e2b0_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_20d80e2b0_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _20d80e49c_FnCallExprModel {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20d814749_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_20d825848_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	

	_20d80e49c_FnCallExprModel(void) = default;


};
struct _20d80e689_SliceExprModel {
	jule::Ptr<_20d8e3680_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

	_20d80e689_SliceExprModel(void) = default;


};
struct _20d80e876_IndexingExprModel {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20d8b2891_Data> _field_Expr;
	jule::Ptr<_20d8b2891_Data> _field_Index;
	

	_20d80e876_IndexingExprModel(void) = default;

	inline bool operator==(_20d80e876_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_20d80e876_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _20d80ea63_AnonFnExprModel {
	jule::Ptr<_20d814749_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	_20d80ea63_AnonFnExprModel(void) = default;

	inline bool operator==(_20d80ea63_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_20d80ea63_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _20d80ec50_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	_20d80ec50_KeyValPairExprModel(void) = default;

	inline bool operator==(_20d80ec50_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_20d80ec50_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _20d80ee3c_MapExprModel {
	jule::Ptr<_20d8e3680_TypeKind> _field_KeyKind;
	jule::Ptr<_20d8e3680_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_20d80ec50_KeyValPairExprModel>> _field_Entries;
	

	_20d80ee3c_MapExprModel(void) = default;


};
struct _20d810129_SlicingExprModel {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_20d810129_SlicingExprModel(void) = default;

	inline bool operator==(_20d810129_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_20d810129_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _20d810316_TraitSubIdentExprModel {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_20d814370_Fn> _field_Method;
	jule::Ptr<_20d81a3ed_Trait> _field_Trt;
	

	_20d810316_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_20d810316_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_20d810316_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _20d810734_StructSubIdentExprModel {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Ptr<_20d8b2891_Data> _field_Expr;
	jule::Ptr<_20d8e3680_TypeKind> _field_ExprKind;
	jule::Ptr<_20d814749_FnIns> _field_Method;
	jule::Ptr<_20cba5bc9_FieldIns> _field_Field;
	jule::Ptr<_20cba5db6_StructIns> _field_Owner;
	

	_20d810734_StructSubIdentExprModel(void) = default;

	inline bool operator==(_20d810734_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_20d810734_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _20d810921_StructStaticIdentExprModel {
	jule::Ptr<_20cba5db6_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_20d814749_FnIns> _field_Method;
	

	_20d810921_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_20d810921_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_20d810921_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _20d810b0d_ArrayExprModel {
	jule::Ptr<_20d8ee768_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

	_20d810b0d_ArrayExprModel(void) = default;


};
struct _20d810cea_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	_20d810cea_CommonIdentExprModel(void) = default;

	inline bool operator==(_20d810cea_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_20d810cea_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _20d810ed7_CommonSubIdentExprModel {
	jule::Ptr<_20d8e3680_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Ident;
	

	_20d810ed7_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_20d810ed7_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_20d810ed7_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _20d8111c4_TupleExprModel {
	jule::Slice<jule::Ptr<_20d8b2891_Data>> _field_Datas;
	

	_20d8111c4_TupleExprModel(void) = default;


};
struct _20d8113b1_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_20d8113b1_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_20d8113b1_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_20d8113b1_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d81159d_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_20d81159d_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_20d81159d_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_20d81159d_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d81178a_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_20d81178a_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_20d81178a_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d81178a_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d811977_BuiltinNewCallExprModel {
	jule::Ptr<_20d8e3680_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	_20d811977_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_20d811977_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_20d811977_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d811b64_BuiltinPanicCallExprModel {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_20d811b64_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_20d811b64_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d811b64_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d811d51_BuiltinAssertCallExprModel {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	_20d811d51_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_20d811d51_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_20d811d51_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d81203d_BuiltinMakeCallExprModel {
	jule::Ptr<_20d8e3680_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	_20d81203d_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_20d81203d_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_20d81203d_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d81222a_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	_20d81222a_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_20d81222a_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_20d81222a_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d812417_BuiltinLenCallExprModel {
	jule::Ptr<_20d8b2891_Data> _field_Expr;
	

	_20d812417_BuiltinLenCallExprModel(void) = default;

	inline bool operator==(_20d812417_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d812417_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d812604_BuiltinCapCallExprModel {
	jule::Ptr<_20d8b2891_Data> _field_Expr;
	

	_20d812604_BuiltinCapCallExprModel(void) = default;

	inline bool operator==(_20d812604_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d812604_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d810503_BuiltinDeleteCallExprModel {
	jule::Ptr<_20d8b2891_Data> _field_Dest;
	jule::Ptr<_20d8b2891_Data> _field_Key;
	

	_20d810503_BuiltinDeleteCallExprModel(void) = default;

	inline bool operator==(_20d810503_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_20d810503_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d812c64_BuiltinCopyCallExprModel {
	jule::Ptr<_20d8b2891_Data> _field_Dest;
	jule::Ptr<_20d8b2891_Data> _field_Src;
	

	_20d812c64_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_20d812c64_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_20d812c64_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d812e51_BuiltinErrorCallExprModel {
	jule::Ptr<_20d814749_FnIns> _field_Func;
	jule::Any _field_Err = jule::Any(nullptr);
	

	_20d812e51_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_20d812e51_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_20d812e51_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d81313d_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_20d81313d_SizeofExprModel(void) = default;

	inline bool operator==(_20d81313d_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d81313d_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _20d81332a_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_20d81332a_AlignofExprModel(void) = default;

	inline bool operator==(_20d81332a_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d81332a_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _20d813517_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	_20d813517_RuneExprModel(void) = default;

	inline bool operator==(_20d813517_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_20d813517_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _20d813704_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_20d813704_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_20d813704_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d813704_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _20d8138e1_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

	_20d8138e1_BackendEmitExprModel(void) = default;


};
struct _20d813acd_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_20d813acd_FreeExprModel(void) = default;

	inline bool operator==(_20d813acd_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d813acd_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _20d813e96_RetType {
	jule::Ptr<_20d8e7a5d_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _field_Idents;
	

	_20d813e96_RetType(void) = default;


};
inline jule::Ptr<_20d81455c_ParamIns> _20cbe05e8_instance(jule::Ptr<_20d814183_Param>);
inline jule::Bool _20cbece41_IsSelf(_20d814183_Param*);
inline jule::Bool _20cbedd43_IsRef(_20d814183_Param*);
struct _20d814183_Param {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_20d8e7a5d_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	_20d814183_Param(void) = default;

	inline bool operator==(_20d814183_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_20d814183_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _20cbeec56_IsVoid(_20d814370_Fn*);
inline jule::Bool _20cc3121b_IsMethod(_20d814370_Fn*);
inline jule::Bool _20cc3a258_IsEntryPoint(_20d814370_Fn*);
inline jule::Bool _20cbe0d35_IsInit(_20d814370_Fn*);
inline jule::Bool _20cbe30ac_IsAnon(_20d814370_Fn*);
inline jule::Bool _20cbe4b4c_AnyVar(_20d814370_Fn*);
inline jule::Ptr<_20d814749_FnIns> _20cbe58ea_instanceForce(jule::Ptr<_20d814370_Fn>);
inline jule::Ptr<_20d814749_FnIns> _20cc00383_instance(jule::Ptr<_20d814370_Fn>);
inline jule::Ptr<_20d814749_FnIns> _20cbde350_appendInstance(_20d814370_Fn*, jule::Ptr<_20d814749_FnIns>&);
struct _20d814370_Fn {
	jule::Ptr<_20d84c199_Sema> _field_sema;
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_20cb511e6_Directive>> _field_Directives;
	jule::Ptr<_20cb99283_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>> _field_Generics;
	jule::Ptr<_20d813e96_RetType> _field_Result;
	jule::Slice<jule::Ptr<_20d814183_Param>> _field_Params;
	jule::Ptr<_20cba59dc_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_20d814749_FnIns>> _field_Instances;
	

	_20d814370_Fn(void) = default;


};
inline jule::Str _20cc2772e_Str(_20d81455c_ParamIns*);
struct _20d81455c_ParamIns {
	jule::Ptr<_20d814183_Param> _field_Decl;
	jule::Ptr<_20d8e3680_TypeKind> _field_Kind;
	

	_20d81455c_ParamIns(void) = default;

	inline bool operator==(_20d81455c_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20d81455c_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _20cbe22ba_Str(_20d814749_FnIns*);
inline jule::Bool _20d814936_Equals(jule::Ptr<_20d814749_FnIns>, jule::Ptr<_20d8e3680_TypeKind>);
inline jule::Bool _20d814a68_EqualsFn(jule::Ptr<_20d814749_FnIns>, jule::Ptr<_20d814749_FnIns>&);
inline jule::Bool _20d814b9a_equalsTrait(jule::Ptr<_20d814749_FnIns>, jule::Ptr<_20d814749_FnIns>&);
inline jule::Slice<jule::Ptr<_20d8e3680_TypeKind>> _20d814ccc_Types(_20d814749_FnIns*);
inline jule::Bool _20d814e0e_IsBuiltin(_20d814749_FnIns*);
inline jule::Bool _20d815041_IsAnon(_20d814749_FnIns*);
inline jule::Bool _20d815173_Same(_20d814749_FnIns*, jule::Ptr<_20d814749_FnIns>);
inline jule::Str _20d8152a5_GetKindStr(_20d814749_FnIns*, jule::Bool);
struct _20d814749_FnIns {
	jule::Ptr<_20cba5db6_StructIns> _field_Owner;
	jule::Ptr<_20d814370_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_20d8e1e53_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_20d81455c_ParamIns>> _field_Params;
	jule::Ptr<_20d8e3680_TypeKind> _field_Result;
	jule::Ptr<_20d825848_Scope> _field_Scope;
	jule::Ptr<_20d8156e5_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)> _field_caller;
	jule::Bool _field_reloaded = false;
	

	_20d814749_FnIns(void) = default;


};
inline jule::Ptr<_20d8156e5_ReferenceStack> static__20d8158d2_new(void);
inline jule::I64 _20d815a14_Len(_20d8156e5_ReferenceStack*);
inline jule::Any _20d815b46_At(_20d8156e5_ReferenceStack*, jule::I64);
inline void _20d815c78_Push(_20d8156e5_ReferenceStack*, jule::Any);
inline jule::Bool _1c8d8523e_Exist(_20d8156e5_ReferenceStack*, jule::Ptr<_20d814749_FnIns>);
inline jule::Bool _1c8d991ed_Exist(_20d8156e5_ReferenceStack*, jule::Ptr<_20d869eb9_Var>);
inline jule::Bool _1c8e3b3d3_Exist(_20d8156e5_ReferenceStack*, jule::Ptr<_20cba5db6_StructIns>);
inline jule::Bool _1c91b1669_Exist(_20d8156e5_ReferenceStack*, jule::Ptr<_20d81a3ed_Trait>);
struct _20d8156e5_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

	_20d8156e5_ReferenceStack(void) = default;


};
struct _20d815edc_Pass {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Text;
	

	_20d815edc_Pass(void) = default;

	inline bool operator==(_20d815edc_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_20d815edc_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20d817e67_symbolBuilder> _20d81831e_getRoot(jule::Ptr<_20d817e67_symbolBuilder>);
inline void _20d818451_pushErr(_20d817e67_symbolBuilder*, jule::Ptr<_20b4e5581_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _20d818583_pushErrText(_20d817e67_symbolBuilder*, jule::Ptr<_20b4e5581_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _20d8186b5_pushSuggestion(_20d817e67_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20d8187e7_checkCppUseDeclPath(_20d817e67_symbolBuilder*, jule::Ptr<_20cba19a5_UseDecl>&, jule::Str);
inline jule::Ptr<_20d84404d_ImportInfo> _20d818929_buildCppHeaderImport(_20d817e67_symbolBuilder*, jule::Ptr<_20cba19a5_UseDecl>&);
inline jule::Ptr<_20d84404d_ImportInfo> _20d818a5b_buildStdImport(_20d817e67_symbolBuilder*, jule::Ptr<_20cba19a5_UseDecl>&);
inline jule::Ptr<_20d84404d_ImportInfo> _20d818b8d_buildIdentImport(jule::Ptr<_20d817e67_symbolBuilder>, jule::Ptr<_20cba19a5_UseDecl>&);
inline jule::Ptr<_20d84404d_ImportInfo> _20d818cc0_buildImport(jule::Ptr<_20d817e67_symbolBuilder>, jule::Ptr<_20cba19a5_UseDecl>&);
inline jule::Bool _20d818e02_checkDuplicateUseDecl(_20d817e67_symbolBuilder*, jule::Ptr<_20d84404d_ImportInfo>&);
inline void _20d819034_implImportSelections(_20d817e67_symbolBuilder*, jule::Ptr<_20d84404d_ImportInfo>&, jule::Ptr<_20cba19a5_UseDecl>&);
inline jule::Str _20d819166_getAsLinkPath(jule::Ptr<_20d817e67_symbolBuilder>, jule::Str);
inline void _20d819298_pushCycleError(jule::Ptr<_20d817e67_symbolBuilder>, jule::Ptr<_20d817e67_symbolBuilder>&, jule::Str, jule::Str&);
inline void _20d8193ca_pushCrossCycleError(jule::Ptr<_20d817e67_symbolBuilder>, jule::Ptr<_20d817e67_symbolBuilder>&, jule::Ptr<_20d84404d_ImportInfo>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Bool _20d81950c_checkImportCycles(jule::Ptr<_20d817e67_symbolBuilder>, jule::Ptr<_20d84404d_ImportInfo>, jule::Ptr<_20cba19a5_UseDecl>&);
inline void _20d81963e_checkPackageAccessibility(_20d817e67_symbolBuilder*, jule::Ptr<_20cba19a5_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _20d819771_importPackage(jule::Ptr<_20d817e67_symbolBuilder>, jule::Ptr<_20d84404d_ImportInfo>&, jule::Ptr<_20cba19a5_UseDecl>&);
inline jule::Ptr<_20d84404d_ImportInfo> _20d8198a3_importUseDecl(jule::Ptr<_20d817e67_symbolBuilder>, jule::Ptr<_20cba19a5_UseDecl>&);
inline void _20d8199d5_importUseDecls(jule::Ptr<_20d817e67_symbolBuilder>);
inline void _20d819b17_appendNode(_20d817e67_symbolBuilder*, _20cb50cea_Node&);
inline void _20d819c49_appendNodes(_20d817e67_symbolBuilder*);
inline void _20d819d7b_pushDirectivePass(_20d817e67_symbolBuilder*, jule::Ptr<_20cb511e6_Directive>&);
inline void _20d819ead_appendTopDirectives(_20d817e67_symbolBuilder*);
inline void _20d81a0e0_build(jule::Ptr<_20d817e67_symbolBuilder>);
struct _20d817e67_symbolBuilder {
	jule::Ptr<_20d817e67_symbolBuilder> _field_owner;
	jule::Trait<_20d8413d0_Importer> _field_importer;
	jule::Slice<_20b1bc016_Log> _field_errors;
	jule::Ptr<_20cb5014b_Ast> _field_ast;
	jule::Ptr<_20d8aca67_SymbolTable> _field_table;
	

	_20d817e67_symbolBuilder(void) = default;


};
inline jule::Str _20d81a5da_Str(_20d81a3ed_Trait*);
inline jule::Bool _20d81a71c_Equals(jule::Ptr<_20d81a3ed_Trait>, jule::Ptr<_20d8e3680_TypeKind>);
inline jule::Bool _20d81a84e_IsBuiltin(_20d81a3ed_Trait*);
inline jule::Ptr<_20d814370_Fn> _20d81a981_FindMethod(_20d81a3ed_Trait*, jule::Str);
struct _20d81a3ed_Trait {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_20d814370_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_20cba59dc_Struct>> _field_Implemented;
	

	_20d81a3ed_Trait(void) = default;


};
inline jule::Bool _20d81ae7b_AutoExpr(_20d81ac8e_EnumItem*);
struct _20d81ac8e_EnumItem {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_20d8b3919_Value> _field_Value;
	

	_20d81ac8e_EnumItem(void) = default;

	inline bool operator==(_20d81ac8e_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_20d81ac8e_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _20d81b29a_Str(_20d81b0ad_Enum*);
inline jule::Bool _20d81b3cc_Equals(jule::Ptr<_20d81b0ad_Enum>, jule::Ptr<_20d8e3680_TypeKind>);
inline jule::Ptr<_20d81ac8e_EnumItem> _20d81b50e_FindItem(_20d81b0ad_Enum*, jule::Str);
struct _20d81b0ad_Enum {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_20d8e7a5d_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_20d81ac8e_EnumItem>> _field_Items;
	

	_20d81b0ad_Enum(void) = default;


};
struct _20d81b641_TypeEnumItem {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_20d8e7a5d_TypeSymbol> _field_Kind;
	

	_20d81b641_TypeEnumItem(void) = default;

	inline bool operator==(_20d81b641_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20d81b641_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _20d81ba1a_Str(_20d81b82d_TypeEnum*);
inline jule::Bool _20d81bb4c_Equals(jule::Ptr<_20d81b82d_TypeEnum>, jule::Ptr<_20d8e3680_TypeKind>);
inline jule::Ptr<_20d81b641_TypeEnumItem> _20d81bdb1_FindItem(_20d81b82d_TypeEnum*, jule::Str);
struct _20d81b82d_TypeEnum {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_20d81b641_TypeEnumItem>> _field_Items;
	

	_20d81b82d_TypeEnum(void) = default;


};
inline jule::Fn<jule::Bool(jule::Ptr<_20d84c199_Sema>&,jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>&)> _20d81dcd6_readyFn(jule::Ptr<_20d81d8a7_constraintChecker>);
inline jule::Bool _20d81e04a_readyFi(jule::Ptr<_20d81d8a7_constraintChecker>);
inline jule::Bool _20d81e2ae_readySi(jule::Ptr<_20d81d8a7_constraintChecker>);
inline jule::Bool _20d81e523_ready(jule::Ptr<_20d81d8a7_constraintChecker>);
inline jule::Bool _20d81e787_check(jule::Ptr<_20d81d8a7_constraintChecker>);
struct _20d81d8a7_constraintChecker {
	jule::Ptr<_20d84c199_Sema> _field_s;
	jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_20d8e1e53_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>> _field_genericsA;
	jule::Ptr<_20d814749_FnIns> _field_fi;
	jule::Ptr<_20cba5db6_StructIns> _field_si;
	jule::Ptr<_20b4e5581_Token> _field_et;
	jule::Bool _field_uniq = false;
	

	_20d81d8a7_constraintChecker(void) = default;


};
inline jule::Bool _20d820bd9_IsTraitImpl(_20d8207dd_Impl*);
inline jule::Bool _20d820e4d_IsStructImpl(_20d8207dd_Impl*);
struct _20d8207dd_Impl {
	jule::Ptr<_20cb892ea_TypeDecl> _field_Base;
	jule::Ptr<_20cb892ea_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_20d814370_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_20d869eb9_Var>> _field_Statics;
	

	_20d8207dd_Impl(void) = default;


};
struct _20d825848_Scope {
	jule::Ptr<_20d825848_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	

	_20d825848_Scope(void) = default;


};
struct _20d825c44_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_20d825848_Scope> _field_Scope;
	

	_20d825c44_If(void) = default;

	inline bool operator==(_20d825c44_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20d825c44_If _other) { return !this->operator==(_other); }


};
struct _20d826030_Else {
	jule::Ptr<_20d825848_Scope> _field_Scope;
	

	_20d826030_Else(void) = default;

	inline bool operator==(_20d826030_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20d826030_Else _other) { return !this->operator==(_other); }


};
struct _20d8263a4_Conditional {
	jule::Slice<jule::Ptr<_20d825c44_If>> _field_Elifs;
	jule::Ptr<_20d826030_Else> _field_Default;
	

	_20d8263a4_Conditional(void) = default;


};
struct _20d826690_InfIter {
	jule::Ptr<_20d825848_Scope> _field_Scope;
	

	_20d826690_InfIter(void) = default;

	inline bool operator==(_20d826690_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20d826690_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _20d826ea9_IsWhileNext(_20d826b13_WhileIter*);
struct _20d826b13_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_20d825848_Scope> _field_Scope;
	

	_20d826b13_WhileIter(void) = default;

	inline bool operator==(_20d826b13_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20d826b13_WhileIter _other) { return !this->operator==(_other); }


};
struct _20d8274e8_RangeIter {
	jule::Ptr<_20d8b2891_Data> _field_Expr;
	jule::Ptr<_20d825848_Scope> _field_Scope;
	jule::Ptr<_20d869eb9_Var> _field_KeyA;
	jule::Ptr<_20d869eb9_Var> _field_KeyB;
	

	_20d8274e8_RangeIter(void) = default;

	inline bool operator==(_20d8274e8_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_20d8274e8_RangeIter _other) { return !this->operator==(_other); }


};
struct _20d8278e4_ContSt {
	jule::Uintptr _field_It = 0;
	

	_20d8278e4_ContSt(void) = default;

	inline bool operator==(_20d8278e4_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_20d8278e4_ContSt _other) { return !this->operator==(_other); }


};
struct _20d827c9b_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	_20d827c9b_BreakSt(void) = default;

	inline bool operator==(_20d827c9b_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_20d827c9b_BreakSt _other) { return !this->operator==(_other); }


};
struct _20d828087_Label {
	jule::Str _field_Ident;
	

	_20d828087_Label(void) = default;

	inline bool operator==(_20d828087_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_20d828087_Label _other) { return !this->operator==(_other); }


};
struct _20d828373_GotoSt {
	jule::Str _field_Ident;
	

	_20d828373_GotoSt(void) = default;

	inline bool operator==(_20d828373_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_20d828373_GotoSt _other) { return !this->operator==(_other); }


};
struct _20d82872a_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	_20d82872a_Postfix(void) = default;

	inline bool operator==(_20d82872a_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_20d82872a_Postfix _other) { return !this->operator==(_other); }


};
struct _20d828b9d_Assign {
	jule::Ptr<_20cbed66c_OperandExprModel> _field_L;
	jule::Ptr<_20cbed66c_OperandExprModel> _field_R;
	jule::Ptr<_20b4e5581_Token> _field_Op;
	

	_20d828b9d_Assign(void) = default;

	inline bool operator==(_20d828b9d_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_20d828b9d_Assign _other) { return !this->operator==(_other); }


};
struct _20d829055_MultiAssign {
	jule::Slice<jule::Ptr<_20d8b2891_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	

	_20d829055_MultiAssign(void) = default;


};
inline jule::Bool _20d829aa0_IsGenericTypeMatch(_20d829594_Match*);
struct _20d829594_Match {
	jule::Ptr<_20d8b2891_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Slice<jule::Ptr<_20d82a0de_Case>> _field_Cases;
	jule::Ptr<_20d82a0de_Case> _field_Default;
	

	_20d829594_Match(void) = default;


};
inline jule::Bool _20d82a3a8_isDefault(_20d82a0de_Case*);
struct _20d82a0de_Case {
	jule::Ptr<_20d829594_Match> _field_Owner;
	jule::Ptr<_20d825848_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_20d8b2891_Data>> _field_Exprs;
	jule::Ptr<_20d82a0de_Case> _field_Next;
	

	_20d82a0de_Case(void) = default;


};
struct _20d82a694_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	_20d82a694_FallSt(void) = default;

	inline bool operator==(_20d82a694_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_20d82a694_FallSt _other) { return !this->operator==(_other); }


};
struct _20d82aa18_RetSt {
	jule::Ptr<_20d814749_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_20d82aa18_RetSt(void) = default;

	inline bool operator==(_20d82aa18_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d82aa18_RetSt _other) { return !this->operator==(_other); }


};
struct _20d82b123_scopeLabel {
	jule::Ptr<_20b4e5581_Token> _field_token;
	jule::Ptr<_20d828087_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_20d82c3aa_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	_20d82b123_scopeLabel(void) = default;

	inline bool operator==(_20d82b123_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_20d82b123_scopeLabel _other) { return !this->operator==(_other); }


};
struct _20d82b596_scopeGoto {
	jule::Ptr<_20cb96d52_GotoSt> _field_gt;
	jule::Ptr<_20d82c3aa_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	_20d82b596_scopeGoto(void) = default;

	inline bool operator==(_20d82b596_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_20d82b596_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20d84404d_ImportInfo> _20d82c83e_FindPackage(_20d82c3aa_scopeChecker*, jule::Str);
inline jule::Ptr<_20d84404d_ImportInfo> _20d82cb4c_SelectPackage(_20d82c3aa_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)>);
inline jule::Ptr<_20d869eb9_Var> _20d82d004_FindVar(_20d82c3aa_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_20d8e298c_TypeAlias> _20d82d3ab_FindTypeAlias(_20d82c3aa_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_20cba59dc_Struct> _20d82d763_FindStruct(_20d82c3aa_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_20d814370_Fn> _20d82db1a_FindFn(_20d82c3aa_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_20d81a3ed_Trait> _20d82de28_FindTrait(_20d82c3aa_scopeChecker*, jule::Str);
inline jule::Ptr<_20d81b0ad_Enum> _20d82e236_FindEnum(_20d82c3aa_scopeChecker*, jule::Str);
inline jule::Ptr<_20d81b82d_TypeEnum> _20d82e544_FindTypeEnum(_20d82c3aa_scopeChecker*, jule::Str);
inline jule::Bool _20d82e874_isUnsafe(jule::Ptr<_20d82c3aa_scopeChecker>);
inline jule::Bool _20d82ead8_isRoot(_20d82c3aa_scopeChecker*);
inline void _20d82ecb4_stop(_20d82c3aa_scopeChecker*);
inline jule::Bool _20d830028_stopped(_20d82c3aa_scopeChecker*);
inline jule::Bool _20d83028c_isDeferred(jule::Ptr<_20d82c3aa_scopeChecker>);
inline jule::Ptr<_20d82c3aa_scopeChecker> _20d830501_getRoot(jule::Ptr<_20d82c3aa_scopeChecker>);
inline jule::Ptr<_20d82c3aa_scopeChecker> _20d830765_getHardRoot(jule::Ptr<_20d82c3aa_scopeChecker>);
inline jule::Ptr<_20d828087_Label> _20d830a73_findLabel(_20d82c3aa_scopeChecker*, jule::Str);
inline jule::Ptr<_20d82b123_scopeLabel> _20d830d81_findLabelScope(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Str);
inline jule::Ptr<_20d82b123_scopeLabel> _20d83118e_findLabelAll(_20d82c3aa_scopeChecker*, jule::Str);
inline jule::Bool _20d831546_isDuplicatedIdent(_20d82c3aa_scopeChecker*, jule::Uintptr, jule::Str);
inline void _20d8317bb_checkVarDecl(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb9bc58_VarDecl>);
inline void _20d831a41_checkTypeAliasDecl(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cba05b9_TypeAliasDecl>);
inline jule::Ptr<_20d825848_Scope> _20d831ca5_getChild(_20d82c3aa_scopeChecker*);
inline void _20d83216d_checkChildSsc(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb99283_ScopeTree>&, jule::Ptr<_20d825848_Scope>&, jule::Ptr<_20d82c3aa_scopeChecker>&);
inline jule::Ptr<_20d825848_Scope> _20d832525_checkChildSc(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb99283_ScopeTree>&, jule::Ptr<_20d82c3aa_scopeChecker>&);
inline jule::Ptr<_20d825848_Scope> _20d832833_checkChild(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb99283_ScopeTree>&);
inline void _20d832aa8_checkAnonScope(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb99283_ScopeTree>);
inline void _20d832dc7_processErrorCall(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20d812e51_BuiltinErrorCallExprModel>&, jule::Ptr<_20b4e5581_Token>);
inline void _20d83314c_checkExpr(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb8d81b_Expr>);
inline jule::Ptr<_20d825c44_If> _20d83345a_checkIf(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb9e5b8_If>);
inline jule::Ptr<_20d826030_Else> _20d833768_checkElse(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb9e970_Else>);
inline void _20d8339dd_checkConditional(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb9ede3_Conditional>);
inline void _20d833e50_checkIterScopeSsc(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Uintptr, jule::Ptr<_20cb99283_ScopeTree>, jule::Ptr<_20d825848_Scope>&, jule::Ptr<_20d82c3aa_scopeChecker>);
inline jule::Ptr<_20d825848_Scope> _20d8343a1_checkIterScopeSc(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Uintptr, jule::Ptr<_20cb99283_ScopeTree>, jule::Ptr<_20d82c3aa_scopeChecker>);
inline jule::Ptr<_20d825848_Scope> _20d834758_checkIterScope(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Uintptr, jule::Ptr<_20cb99283_ScopeTree>&);
inline void _20d8349cd_checkInfIter(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb9c770_Iter>&);
inline void _20d834c53_checkWhileIter(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb9c770_Iter>&);
inline void _20d834ec8_checkRangeIter(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb9c770_Iter>&);
inline void _20d83524d_checkIter(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb9c770_Iter>);
inline jule::Bool _20d83555b_checkValidContLabel(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Uintptr);
inline jule::Bool _20d835869_checkValidBreakLabel(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_20d8278e4_ContSt> _20d835b77_checkContValidScope(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb9e145_ContSt>);
inline void _20d835dec_checkCont(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb9e145_ContSt>);
inline void _20d836172_checkLabel(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb9699a_LabelSt>);
inline void _20d8363e7_pushGoto(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb96d52_GotoSt>);
inline void _20d83666c_checkPostfix(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb97c87_AssignSt>);
inline jule::Bool _20d83697a_isNewAssignIdent(_20d82c3aa_scopeChecker*, jule::Str);
inline jule::Bool _20d836dcb_checkStructureAssignOp(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cba5db6_StructIns>&, jule::Ptr<_20cb97c87_AssignSt>&, jule::Ptr<_20d8b2891_Data>&);
inline void _20d837151_checkSingleAssign(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb97c87_AssignSt>&);
inline void _20d83767e_processEndPartOfMultiAssign(_20d82c3aa_scopeChecker*, jule::Ptr<_20d829055_MultiAssign>&, jule::Ptr<_20cb97c87_AssignSt>&, jule::Ptr<_20cb97748_AssignLeft>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&);
inline void _20d837915_checkMultiAssign(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb97c87_AssignSt>&);
inline void _20d837b8a_checkAssignSt(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb97c87_AssignSt>);
inline jule::Ptr<_20d825848_Scope> _20d838042_checkCaseScope(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20d82a0de_Case>&, jule::Ptr<_20cb99283_ScopeTree>&);
inline jule::Ptr<_20d82a0de_Case> _20d83853c_checkCase(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20d829594_Match>, jule::I64, jule::Ptr<_20cba0a3c_Case>, jule::Ptr<_20d8b2891_Data>);
inline void _20d838905_checkCases(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cba1213_MatchCase>&, jule::Ptr<_20d829594_Match>, jule::Ptr<_20d8b2891_Data>);
inline jule::Ptr<_20d82a0de_Case> _20d838cac_checkDefault(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20d829594_Match>, jule::Ptr<_20cb9e970_Else>);
inline void _20d839032_checkComptimePanic(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20d825848_Scope>&);
inline void _20d839351_pushTypeMatch(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20d829594_Match>, jule::Ptr<_20cba1213_MatchCase>&);
inline void _20d8395c6_checkTypeMatch(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cba1213_MatchCase>&);
inline void _20d83984b_checkCommonMatch(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cba1213_MatchCase>&);
inline void _20d839ac1_checkMatch(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cba1213_MatchCase>);
inline void _20d839d46_checkFall(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb9713d_FallSt>);
inline jule::Ptr<_20d827c9b_BreakSt> _20d83a154_checkBreakWithLabel(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb9dc8d_BreakSt>);
inline jule::Ptr<_20d827c9b_BreakSt> _20d83a462_checkPlainBreak(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb9dc8d_BreakSt>);
inline void _20d83a6d7_checkBreak(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb9dc8d_BreakSt>);
inline void _20d83a95c_checkRet(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb9c110_RetSt>);
inline void _20d83abd2_checkUseExpr(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb8e1ac_UseExpr>);
inline void _20d83ae57_checkNode(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Any&);
inline void _20d83b133_checkResult(jule::Ptr<_20d82c3aa_scopeChecker>);
inline void _20d83b30e_checkTree(jule::Ptr<_20d82c3aa_scopeChecker>);
inline void _20d83b62d_checkGoto(_20d82c3aa_scopeChecker*, jule::Ptr<_20d82b596_scopeGoto>&, jule::Ptr<_20d82b123_scopeLabel>&);
inline void _20d83b809_checkGotos(_20d82c3aa_scopeChecker*);
inline void _20d83b9d5_checkLabels(_20d82c3aa_scopeChecker*);
inline void _20d83bbb1_checkVars(_20d82c3aa_scopeChecker*);
inline void _20d83bd8c_checkAliases(_20d82c3aa_scopeChecker*);
inline void _20d83c1ab_check(jule::Ptr<_20d82c3aa_scopeChecker>, jule::Ptr<_20cb99283_ScopeTree>&, jule::Ptr<_20d825848_Scope>&);
inline jule::Ptr<_20d82c3aa_scopeChecker> _20d83c420_newChildChecker(jule::Ptr<_20d82c3aa_scopeChecker>);
struct _20d82c3aa_scopeChecker {
	jule::Ptr<_20b4e5581_Token> _field_calledFrom;
	jule::Ptr<_20d84c199_Sema> _field_s;
	jule::Ptr<_20d814749_FnIns> _field_owner;
	jule::Ptr<_20d82c3aa_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_20d8aca67_SymbolTable> _field_table;
	jule::Ptr<_20d825848_Scope> _field_scope;
	jule::Ptr<_20cb99283_ScopeTree> _field_tree;
	jule::Ptr<_20d814749_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_20d82b123_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_20d82b596_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	_20d82c3aa_scopeChecker(void) = default;

	inline bool operator==(_20d82c3aa_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_20d82c3aa_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _20d83d410_checkCdef(_20d83cec0_directiveChecker*, jule::Ptr<_20cb511e6_Directive>&);
inline void _20d83d685_checkTypedef(_20d83cec0_directiveChecker*, jule::Ptr<_20cb511e6_Directive>&);
inline void _20d83d90a_checkDerive(_20d83cec0_directiveChecker*, jule::Ptr<_20cb511e6_Directive>&);
inline void _20d83db80_checkNamespace(_20d83cec0_directiveChecker*, jule::Ptr<_20cb511e6_Directive>&);
inline void _20d83de05_checkDeprecated(_20d83cec0_directiveChecker*, jule::Ptr<_20cb511e6_Directive>&);
inline void _20d83e17a_checkTest(_20d83cec0_directiveChecker*, jule::Ptr<_20cb511e6_Directive>&);
inline void _20d83e400_checkDirective(_20d83cec0_directiveChecker*, jule::Ptr<_20cb511e6_Directive>&);
inline void _20d83e5cb_check(_20d83cec0_directiveChecker*);
struct _20d83cec0_directiveChecker {
	jule::Ptr<_20d84c199_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_20cb511e6_Directive>>> _field_d;
	jule::Any _field_o;
	

	_20d83cec0_directiveChecker(void) = default;

	inline bool operator==(_20d83cec0_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_20d83cec0_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20d84404d_ImportInfo> _20d84456a_FindPackage(_20d84404d_ImportInfo*, jule::Str);
inline jule::Ptr<_20d84404d_ImportInfo> _20d844878_SelectPackage(_20d84404d_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)>);
inline jule::Ptr<_20d869eb9_Var> _20d844c30_FindVar(_20d84404d_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_20d8e298c_TypeAlias> _20d8450d7_FindTypeAlias(_20d84404d_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_20cba59dc_Struct> _20d84548e_FindStruct(_20d84404d_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_20d814370_Fn> _20d845846_FindFn(_20d84404d_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_20d81a3ed_Trait> _20d845b54_FindTrait(_20d84404d_ImportInfo*, jule::Str);
inline jule::Ptr<_20d81b0ad_Enum> _20d845e62_FindEnum(_20d84404d_ImportInfo*, jule::Str);
inline jule::Ptr<_20d81b82d_TypeEnum> _20d846270_FindTypeEnum(_20d84404d_ImportInfo*, jule::Str);
inline jule::Bool _20d846616_isLookupable(_20d84404d_ImportInfo*, jule::Str);
inline jule::Bool _20d846924_existIdent(_20d84404d_ImportInfo*, jule::Str);
inline jule::Bool _20d846baa_isAccessibleViaSelection(_20d84404d_ImportInfo*);
struct _20d84404d_ImportInfo {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _field_Selected;
	jule::Ptr<_20d846ea7_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	

	_20d84404d_ImportInfo(void) = default;


};
inline jule::Ptr<_20d84404d_ImportInfo> _20d847480_FindPackage(_20d846ea7_Package*, jule::Str);
inline jule::Ptr<_20d84404d_ImportInfo> _20d84778d_SelectPackage(_20d846ea7_Package*, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)>);
inline jule::Ptr<_20d869eb9_Var> _20d847b45_FindVar(_20d846ea7_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_20d8e298c_TypeAlias> _20d847eec_FindTypeAlias(_20d846ea7_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_20cba59dc_Struct> _20d8483a4_FindStruct(_20d846ea7_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_20d814370_Fn> _20d84875b_FindFn(_20d846ea7_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_20d81a3ed_Trait> _20d848a69_FindTrait(_20d846ea7_Package*, jule::Str);
inline jule::Ptr<_20d81b0ad_Enum> _20d848d77_FindEnum(_20d846ea7_Package*, jule::Str);
inline jule::Ptr<_20d81b82d_TypeEnum> _20d849185_FindTypeEnum(_20d846ea7_Package*, jule::Str);
struct _20d846ea7_Package {
	jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>> _field_Files;
	

	_20d846ea7_Package(void) = default;


};
inline jule::Ptr<_20d84404d_ImportInfo> _20d84c6b6_FindPackage(_20d84c199_Sema*, jule::Str);
inline jule::Ptr<_20d84404d_ImportInfo> _20d84c9c4_SelectPackage(_20d84c199_Sema*, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)>);
inline jule::Ptr<_20d869eb9_Var> _20d84cd7b_FindVar(_20d84c199_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_20d8e298c_TypeAlias> _20d84d233_FindTypeAlias(_20d84c199_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_20cba59dc_Struct> _20d84d5da_FindStruct(_20d84c199_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_20d814370_Fn> _20d84d992_FindFn(_20d84c199_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_20d81a3ed_Trait> _20d84dca0_FindTrait(_20d84c199_Sema*, jule::Str);
inline jule::Ptr<_20d81b0ad_Enum> _20d84e0ad_FindEnum(_20d84c199_Sema*, jule::Str);
inline jule::Ptr<_20d81b82d_TypeEnum> _20d84e3bb_FindTypeEnum(_20d84c199_Sema*, jule::Str);
inline jule::Bool _20d84e71d_isFlag(_20d84c199_Sema*, jule::I64);
inline void _20d84e993_setCurrentFile(_20d84c199_Sema*, jule::Ptr<_20d8aca67_SymbolTable>);
inline void _20d84ed5b_pushErr(_20d84c199_Sema*, jule::Ptr<_20b4e5581_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _20d85017a_pushSugggestion(_20d84c199_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20d850532_isAccessibleDefine(_20d84c199_Sema*, jule::Bool, jule::Ptr<_20b4e5581_Token>);
inline jule::Bool _20d850983_isDuplicatedIdent(_20d84c199_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _20d850ca2_checkDirectives(jule::Ptr<_20d84c199_Sema>, jule::Slice<jule::Ptr<_20cb511e6_Directive>>&, jule::Any);
inline jule::Bool _20d851203_checkGenericQuantity(_20d84c199_Sema*, jule::I64, jule::I64, jule::Ptr<_20b4e5581_Token>);
inline jule::Bool _20d8515cc_isDuplicatedImportSelection(_20d84c199_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _20d851995_getImportDef(_20d84c199_Sema*, jule::Str, jule::Ptr<_20d84404d_ImportInfo>&);
inline jule::Bool _1c8a0bd50_checkImportSelection(_20d84c199_Sema*, jule::Ptr<_20b4e5581_Token>&, jule::Ptr<_20d869eb9_Var>&);
inline jule::Bool _1c8a10d32_checkImportSelection(_20d84c199_Sema*, jule::Ptr<_20b4e5581_Token>&, jule::Ptr<_20d8e298c_TypeAlias>&);
inline jule::Bool _1c8a14cc0_checkImportSelection(_20d84c199_Sema*, jule::Ptr<_20b4e5581_Token>&, jule::Ptr<_20cba59dc_Struct>&);
inline jule::Bool _1c8a18de5_checkImportSelection(_20d84c199_Sema*, jule::Ptr<_20b4e5581_Token>&, jule::Ptr<_20d81a3ed_Trait>&);
inline jule::Bool _1c8a1cd83_checkImportSelection(_20d84c199_Sema*, jule::Ptr<_20b4e5581_Token>&, jule::Ptr<_20d81b0ad_Enum>&);
inline jule::Bool _1c8a21d21_checkImportSelection(_20d84c199_Sema*, jule::Ptr<_20b4e5581_Token>&, jule::Ptr<_20d81b82d_TypeEnum>&);
inline jule::Bool _1c8a25cae_checkImportSelection(_20d84c199_Sema*, jule::Ptr<_20b4e5581_Token>&, jule::Ptr<_20d814370_Fn>&);
inline jule::Bool _20d85217c_checkImportSelectedSelections(_20d84c199_Sema*, jule::Ptr<_20d84404d_ImportInfo>&);
inline jule::Bool _1c8a2a225_checkImportsAllSelectionsFromCollection(_20d84c199_Sema*, jule::Slice<jule::Ptr<_20d869eb9_Var>>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Bool _1c8a2b05b_checkImportsAllSelectionsFromCollection(_20d84c199_Sema*, jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Bool _1c8a2d965_checkImportsAllSelectionsFromCollection(_20d84c199_Sema*, jule::Slice<jule::Ptr<_20cba59dc_Struct>>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Bool _1c8a31638_checkImportsAllSelectionsFromCollection(_20d84c199_Sema*, jule::Slice<jule::Ptr<_20d814370_Fn>>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Bool _1c8a34806_checkImportsAllSelectionsFromCollection(_20d84c199_Sema*, jule::Slice<jule::Ptr<_20d81a3ed_Trait>>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Bool _1c8a37122_checkImportsAllSelectionsFromCollection(_20d84c199_Sema*, jule::Slice<jule::Ptr<_20d81b0ad_Enum>>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Bool _1c8a39d39_checkImportsAllSelectionsFromCollection(_20d84c199_Sema*, jule::Slice<jule::Ptr<_20d81b82d_TypeEnum>>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Bool _20d8528a8_checkImportAllSelections(_20d84c199_Sema*, jule::Ptr<_20d84404d_ImportInfo>&);
inline jule::Bool _20d852bc7_checkImportSelections(_20d84c199_Sema*, jule::Ptr<_20d84404d_ImportInfo>&);
inline jule::Bool _20d852ed5_isUseAliasDuplication(_20d84c199_Sema*, jule::Ptr<_20d84404d_ImportInfo>&);
inline jule::Bool _20d8532e3_checkImport(_20d84c199_Sema*, jule::Ptr<_20d84404d_ImportInfo>&);
inline void _20d8534be_checkImports(_20d84c199_Sema*);
inline void _20d85369a_implFileImpls(jule::Ptr<_20d84c199_Sema>);
inline void _20d853876_implImpls(jule::Ptr<_20d84c199_Sema>);
inline void _20d853a52_checkEnums(jule::Ptr<_20d84c199_Sema>);
inline _20d901e30_typeChecker _20d853ea3_typeChecker(jule::Ptr<_20d84c199_Sema>, jule::Trait<_20d90e536_Lookup>, jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>, jule::Ptr<_20d90111b_referencer>);
inline jule::Ptr<_20d8e3680_TypeKind> _20d85449d_buildTypeWithRefers(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cb892ea_TypeDecl>&, jule::Trait<_20d90e536_Lookup>, jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>, jule::Ptr<_20d90111b_referencer>);
inline jule::Bool _20d854998_checkTypeWithRefers(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d8e7a5d_TypeSymbol>&, jule::Trait<_20d90e536_Lookup>, jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>, jule::Ptr<_20d90111b_referencer>);
inline jule::Ptr<_20d81d8a7_constraintChecker> _20d854c0c_constraintChecker(jule::Ptr<_20d84c199_Sema>);
inline jule::Bool _20d8550b4_checkType(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d8e7a5d_TypeSymbol>&, jule::Trait<_20d90e536_Lookup>);
inline jule::Ptr<_20d8e3680_TypeKind> _20d855515_buildTypeWithGenerics(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cb892ea_TypeDecl>&, jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>, jule::Ptr<_20d8156e5_ReferenceStack>);
inline jule::Ptr<_20d8e3680_TypeKind> _20d855823_buildType(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cb892ea_TypeDecl>&);
inline jule::Ptr<_20d8e3680_TypeKind> _20d855b31_selectType(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cb892ea_TypeDecl>&);
inline jule::Ptr<_20d8b440e_Eval> _20d856082_evalpd(jule::Ptr<_20d84c199_Sema>, jule::Trait<_20d90e536_Lookup>, jule::Ptr<_20d8e3680_TypeKind>, jule::Ptr<_20d869eb9_Var>);
inline jule::Ptr<_20d8b440e_Eval> _20d856439_evalp(jule::Ptr<_20d84c199_Sema>, jule::Trait<_20d90e536_Lookup>, jule::Ptr<_20d8e3680_TypeKind>);
inline jule::Ptr<_20d8b440e_Eval> _20d856747_eval(jule::Ptr<_20d84c199_Sema>, jule::Trait<_20d90e536_Lookup>);
inline jule::Bool _20d856c42_checkAssignType(jule::Ptr<_20d84c199_Sema>, jule::Bool, jule::Ptr<_20d8e3680_TypeKind>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20b4e5581_Token>);
inline jule::Bool _20d857193_checkTypeCompatibility(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d8e3680_TypeKind>&, jule::Ptr<_20d8e3680_TypeKind>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Ptr<_20d8e3680_TypeKind> _20d85756c_buildNonGenericTypeKind(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cb892ea_TypeDecl>&, jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>>&);
inline void _20d857825_buildFnNonGenericTypeKinds(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d814749_FnIns>&);
inline jule::Ptr<_20d814749_FnIns> _20d857b44_getTraitCheckFnKind(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d814370_Fn>&);
inline jule::Bool _20d858095_checkConstraintsFn(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d814749_FnIns>&, jule::Ptr<_20b4e5581_Token>&, jule::Ptr<_20d814749_FnIns>);
inline jule::Bool _20d8584e6_checkConstraintsStruct(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cba5db6_StructIns>&, jule::Ptr<_20b4e5581_Token>&, jule::Ptr<_20cba5db6_StructIns>);
inline jule::Bool _20d85889d_fnEnvironment(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d814749_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_20d84c199_Sema>&,jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>&)>);
inline void _20d858b23_checkFnParamKind(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d81455c_ParamIns>&);
inline jule::Bool _20d858e31_reloadFnInsTypes(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d814749_FnIns>);
inline jule::Bool _20d8593a4_checkRefValidityForInitExpr(jule::Ptr<_20d84c199_Sema>, jule::Bool, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Bool _20d85997b_checkValidityForInitExpr(jule::Ptr<_20d84c199_Sema>, jule::Bool, jule::Bool, jule::Ptr<_20d8e3680_TypeKind>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Bool _20d859d44_checkTypeAliasDeclKind(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d8e298c_TypeAlias>&, jule::Trait<_20d90e536_Lookup>);
inline void _20d85a163_checkTypeAliasDecl(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d8e298c_TypeAlias>&, jule::Trait<_20d90e536_Lookup>);
inline void _20d85a3d8_checkTypeAliasDeclDup(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d8e298c_TypeAlias>&);
inline jule::Bool _20d85a64c_checkTypeAliasDecls(jule::Ptr<_20d84c199_Sema>);
inline void _1c8aaa739_checkEnumItemsDup(_20d84c199_Sema*, jule::Slice<jule::Ptr<_20d81ac8e_EnumItem>>);
inline void _1c8ab5ba6_checkEnumItemsDup(_20d84c199_Sema*, jule::Slice<jule::Ptr<_20d81b641_TypeEnumItem>>);
inline void _20d85ab47_checkEnumItemsStr(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d81b0ad_Enum>&);
inline void _20d85adbc_checkEnumItemsInt(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d81b0ad_Enum>&);
inline void _20d85b142_checkEnumDecl(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d81b0ad_Enum>&);
inline void _20d85b3b7_checkTypeEnumDecl(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d81b82d_TypeEnum>&);
inline jule::Bool _20d85b62b_checkEnumDecls(jule::Ptr<_20d84c199_Sema>);
inline jule::Bool _20d85b890_checkTypeEnumDecls(jule::Ptr<_20d84c199_Sema>);
inline jule::Bool _20d85bb9d_checkDeclGenerics(_20d84c199_Sema*, jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>>&);
inline jule::Bool _20d85beab_checkFnDeclParamsDup(_20d84c199_Sema*, jule::Ptr<_20d814370_Fn>&);
inline jule::Bool _20d85c2b9_checkFnDeclResultDup(_20d84c199_Sema*, jule::Ptr<_20d814370_Fn>&);
inline void _20d85c53e_checkFnDeclPrototype(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d814370_Fn>&);
inline void _20d85c7b4_checkTraitDeclMethod(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d814370_Fn>&);
inline void _20d85ca39_checkTraitDeclMethods(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d81a3ed_Trait>&);
inline void _20d85ccae_checkTraitDecl(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d81a3ed_Trait>&);
inline jule::Bool _20d85d023_checkTraitDecls(jule::Ptr<_20d84c199_Sema>);
inline jule::Bool _20d85d3ca_checkTraitImplMethods(_20d84c199_Sema*, jule::Ptr<_20d81a3ed_Trait>&, jule::Ptr<_20d8207dd_Impl>&);
inline jule::Bool _20d85d782_implToStruct(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cba59dc_Struct>&, jule::Ptr<_20d8207dd_Impl>&);
inline void _20d85da07_implTrait(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d8207dd_Impl>&);
inline void _20d85dc7c_implStruct(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d8207dd_Impl>&);
inline void _20d85e002_implImpl(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d8207dd_Impl>&);
inline void _20d85e321_checkVarDecl(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d869eb9_Var>&, jule::Trait<_20d90e536_Lookup>);
inline void _20d85e596_checkGlobalVarDecl(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d869eb9_Var>&);
inline jule::Bool _20d85e80a_checkGlobalDecls(jule::Ptr<_20d84c199_Sema>);
inline jule::Bool _20d85ebb2_checkStructTraitImpl(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cba59dc_Struct>&, jule::Ptr<_20d81a3ed_Trait>&);
inline jule::Bool _20d85eec0_checkStructImpls(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cba59dc_Struct>&);
inline jule::Bool _20d8602cd_checkStructFields(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cba59dc_Struct>&);
inline void _20d860553_checkStructDecl(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cba59dc_Struct>&);
inline jule::Bool _20d8607b7_checkStructDecls(jule::Ptr<_20d84c199_Sema>);
inline void _20d860a3c_checkFnDecl(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d814370_Fn>&);
inline jule::Bool _20d860ca1_checkFnDecls(jule::Ptr<_20d84c199_Sema>);
inline void _20d861169_pushCycleError(_20d84c199_Sema*, jule::Ptr<_20cba59dc_Struct>&, jule::Ptr<_20cba59dc_Struct>&, jule::Str&);
inline jule::Bool _20d8615ba_checkCrossCycle(_20d84c199_Sema*, jule::Ptr<_20cba59dc_Struct>&, jule::Ptr<_20cba59dc_Struct>&, jule::Str&);
inline jule::Bool _20d861a3d_checkStructDeriveIllegalCycles(_20d84c199_Sema*, jule::Str, jule::Ptr<_20cba59dc_Struct>&, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d861d7e_checkStructInsDeriveClone(_20d84c199_Sema*, jule::Ptr<_20cba5db6_StructIns>);
inline void _20d86206b_checkPackageDecls(jule::Ptr<_20d84c199_Sema>);
inline void _20d8623ac_checkDataForTypeInference(_20d84c199_Sema*, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20b4e5581_Token>&);
inline void _20d862643_checkVar(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d869eb9_Var>&);
inline void _20d862962_checkTypeVar(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d869eb9_Var>&, jule::Trait<_20d90e536_Lookup>);
inline void _20d862b3d_checkGlobalTypes(jule::Ptr<_20d84c199_Sema>);
inline jule::Ptr<_20d814749_FnIns> _20d862ee5_readyToCheckFn(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cba5db6_StructIns>&, jule::Ptr<_20d814370_Fn>&);
inline void _20d863314_checkTypeMethod(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cba5db6_StructIns>&, jule::Ptr<_20d814370_Fn>&);
inline jule::Ptr<_20d814749_FnIns> _20d863765_checkStructInsOp(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cba5db6_StructIns>&, jule::Ptr<_20d814370_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>);
inline jule::Bool _20d863b1c_checkStructEnv(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cba5db6_StructIns>&, jule::Ptr<_20b4e5581_Token>);
inline jule::Bool _20d863ec4_precheckStructIns(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cba5db6_StructIns>&, jule::Ptr<_20b4e5581_Token>);
inline void _20d864249_checkStructIns(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cba5db6_StructIns>&);
inline void _20d8644be_checkTypeStruct(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cba59dc_Struct>&);
inline void _20d86469a_checkStructTypes(jule::Ptr<_20d84c199_Sema>);
inline void _20d864942_checkStructInsOperators(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cba5db6_StructIns>);
inline void _20d864bc8_precheckStructType(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20cba59dc_Struct>&);
inline void _20d864da4_precheckStructTypes(jule::Ptr<_20d84c199_Sema>);
inline void _20d865129_checkRets(_20d84c199_Sema*, jule::Ptr<_20d814749_FnIns>&);
inline void _20d865448_checkFnInsSc(_20d84c199_Sema*, jule::Ptr<_20d814749_FnIns>&, jule::Ptr<_20d82c3aa_scopeChecker>&);
inline void _20d865767_checkFnInsCaller(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d814749_FnIns>&, jule::Ptr<_20b4e5581_Token>);
inline void _20d8659dc_checkFnIns(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d814749_FnIns>&);
inline void _20d865c62_checkTypeFn(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d814370_Fn>&);
inline void _20d865ed7_checkTestFn(_20d84c199_Sema*, jule::Ptr<_20d814749_FnIns>&);
inline void _20d86625c_precheckTypeFn(jule::Ptr<_20d84c199_Sema>, jule::Ptr<_20d814370_Fn>&);
inline void _20d866438_precheckFnTypes(jule::Ptr<_20d84c199_Sema>);
inline void _20d866614_checkFnTypes(jule::Ptr<_20d84c199_Sema>);
inline void _20d8667e0_checkPackageTypes(jule::Ptr<_20d84c199_Sema>);
inline void _20d8669bb_setFileSemaFields(jule::Ptr<_20d84c199_Sema>);
inline void _20d866b97_setSemaFields(jule::Ptr<_20d84c199_Sema>);
inline void _20d866e1c_check(jule::Ptr<_20d84c199_Sema>, jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>&);
struct _20d84c199_Sema {
	jule::Slice<_20b1bc016_Log> _field_errors;
	jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>> _field_files;
	jule::Ptr<_20d8aca67_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	

	_20d84c199_Sema(void) = default;


};
inline _20d8672c4_missingRetChecker static__20d86768c_new(void);
inline jule::Bool _20d867967_checkConditional(_20d8672c4_missingRetChecker*, jule::Ptr<_20d8263a4_Conditional>);
inline jule::Bool _20d867c75_checkMatch(_20d8672c4_missingRetChecker*, jule::Ptr<_20d829594_Match>);
inline jule::Bool _20d868083_checkInfIter(_20d8672c4_missingRetChecker*, jule::Ptr<_20d826690_InfIter>);
inline jule::Bool _20d868391_checkScope(_20d8672c4_missingRetChecker*, jule::Ptr<_20d825848_Scope>);
inline jule::Bool _20d86869e_check(_20d8672c4_missingRetChecker*, jule::Ptr<_20d825848_Scope>);
struct _20d8672c4_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	

	_20d8672c4_missingRetChecker(void) = default;


};
struct _20d868e85_IterRelation {
	jule::Ptr<_20d869eb9_Var> _field_Range;
	

	_20d868e85_IterRelation(void) = default;

	inline bool operator==(_20d868e85_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_20d868e85_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _20d86a382_IsInitialized(_20d869eb9_Var*);
inline jule::Bool _20d86a5e6_IsTypeInferred(_20d869eb9_Var*);
inline jule::Bool _20d86a85a_untypedConstant(_20d869eb9_Var*);
struct _20d869eb9_Var {
	jule::Ptr<_20d825848_Scope> _field_Scope;
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_20d8e7a5d_TypeSymbol> _field_Kind;
	jule::Ptr<_20d8b3919_Value> _field_Value;
	jule::Ptr<_20d8156e5_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_20cb511e6_Directive>> _field_Directives;
	jule::Ptr<_20d868e85_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_20d869eb9_Var>> _field_Depends;
	

	_20d869eb9_Var(void) = default;


};
inline jule::Bool static__20d86b3d8_Dispose(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d86b680_Str(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d86b9c1_logical(jule::Ptr<_20d814370_Fn>&, jule::Str);
inline jule::Bool static__20d86bc68_Eq(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d86c010_Gt(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d86c2a7_GtEq(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d86c54e_Lt(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d86c7e6_LtEq(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d86cb37_result(jule::Ptr<_20d814370_Fn>&, jule::Str);
inline jule::Bool static__20d86cdce_Shl(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d86d176_Shr(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d86d41d_Add(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d86d6b5_Sub(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d86d95c_Div(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d86dc04_Mul(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d86de9b_Mod(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d86e243_BitAnd(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d86e4da_BitOr(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d86e782_BitXor(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d86eac3_unary(jule::Ptr<_20d814370_Fn>&, jule::Str);
inline jule::Bool static__20d86ed6a_Neg(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d870112_Pos(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d8703a9_BitNot(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d8706ea_assign(jule::Ptr<_20d814370_Fn>&, jule::Str);
inline jule::Bool static__20d870992_AddAssign(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d870c39_SubAssign(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d870ed1_DivAssign(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d871278_MulAssign(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d871520_ModAssign(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d8717b7_ShlAssign(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d871a5e_ShrAssign(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d871d06_BitOrAssign(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d87209d_BitAndAssign(jule::Ptr<_20d814370_Fn>);
inline jule::Bool static__20d872345_BitXorAssign(jule::Ptr<_20d814370_Fn>);
struct _20d86ac67_FuncPattern {
	

	_20d86ac67_FuncPattern(void) = default;


};
inline void _20d89bd0e_pushErr(_20d89b7e2_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20d89c073_checkTrait(_20d89b7e2_typeCompatibilityChecker*);
inline jule::Bool _20d89c2d7_checkPtr(_20d89b7e2_typeCompatibilityChecker*);
inline jule::Bool _20d89c54b_checkPrim(_20d89b7e2_typeCompatibilityChecker*);
inline jule::Bool _20d89c903_typeEnum(_20d89b7e2_typeCompatibilityChecker*, jule::Ptr<_20d81b82d_TypeEnum>&, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d89cb67_checkTypeEnum(_20d89b7e2_typeCompatibilityChecker*);
inline jule::Bool _20d89cdcb_check(_20d89b7e2_typeCompatibilityChecker*);
struct _20d89b7e2_typeCompatibilityChecker {
	jule::Ptr<_20d84c199_Sema> _field_s;
	jule::Ptr<_20d8e3680_TypeKind> _field_dest;
	jule::Ptr<_20d8e3680_TypeKind> _field_src;
	jule::Ptr<_20b4e5581_Token> _field_errorToken;
	

	_20d89b7e2_typeCompatibilityChecker(void) = default;

	inline bool operator==(_20d89b7e2_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_20d89b7e2_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _20d89d87c_pushErr(_20d89d41a_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20d89dae1_checkValidity(_20d89d41a_assignTypeChecker*);
inline jule::Bool _20d89dd55_checkConst(_20d89d41a_assignTypeChecker*);
inline jule::Bool _20d89e0b9_isPrim(_20d89d41a_assignTypeChecker*);
inline jule::Bool _20d89e32d_checkCompatibility(_20d89d41a_assignTypeChecker*);
inline jule::Bool _20d89e592_check(_20d89d41a_assignTypeChecker*);
struct _20d89d41a_assignTypeChecker {
	jule::Ptr<_20d84c199_Sema> _field_s;
	jule::Ptr<_20d8e3680_TypeKind> _field_dest;
	jule::Ptr<_20d8b2891_Data> _field_d;
	jule::Ptr<_20b4e5581_Token> _field_errorToken;
	

	_20d89d41a_assignTypeChecker(void) = default;

	inline bool operator==(_20d89d41a_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_20d89d41a_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c8c4bdb4_annotateConstraintElem(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _1c8c4b5ab_annotateConstraintElem(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _1c8c510b6_annotateConstraintElem(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _1c8c4b941_annotateConstraintElem(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d8a0719_annotateConstraintMap(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d8a0a27_annotateConstraintTup(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d8a0d35_annotateConstraintFn(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d8a1165_annotateConstraintIdent(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d8a1484_annotateConstraint(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline void _20d8a17a3_pushGeneric(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&, jule::I64);
inline jule::Bool _20d8a1ab1_annotatePrim(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d8a1dbe_annotateArr(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d8a21cc_annotateSlc(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d8a2584_checkMapKey(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d8a2892_annotateMap(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d8a2ba0_annotateFn(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d8a2ead_annotatePtr(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d8a32bb_annotateSptr(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d8a35c9_annotateStruct(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d8a38d7_annotateAny(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d8a3be5_annotateKind(_20d89ed34_dynamicTypeAnnotation*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d8a3e59_annotate(_20d89ed34_dynamicTypeAnnotation*);
struct _20d89ed34_dynamicTypeAnnotation {
	jule::Ptr<_20d8b440e_Eval> _field_e;
	jule::Ptr<_20d814749_FnIns> _field_f;
	jule::Ptr<_20d81455c_ParamIns> _field_p;
	jule::Ptr<_20d8b2891_Data> _field_a;
	jule::Ptr<_20b4e5581_Token> _field_errorToken;
	jule::Ptr<_20d8e3680_TypeKind>* _field_k = nullptr;
	jule::Ptr<_20cb892ea_TypeDecl> _field_c;
	

	_20d89ed34_dynamicTypeAnnotation(void) = default;

	inline bool operator==(_20d89ed34_dynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_k == _other._field_k &&
			this->_field_c == _other._field_c;
	}

	inline bool operator!=(_20d89ed34_dynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _20d8a4b80_pushErrToken(_20d8a4630_fnCallArgChecker*, jule::Ptr<_20b4e5581_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _20d8a4e9e_pushErr(_20d8a4630_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_20d81455c_ParamIns>> _20d8a5213_getParams(_20d8a4630_fnCallArgChecker*);
inline jule::Bool _20d8a5521_checkCounts(_20d8a4630_fnCallArgChecker*, jule::Slice<jule::Ptr<_20d81455c_ParamIns>>&);
inline jule::Bool _20d8a5972_checkArg(_20d8a4630_fnCallArgChecker*, jule::Ptr<_20d81455c_ParamIns>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Bool _20d8a5d29_push(_20d8a4630_fnCallArgChecker*, jule::Ptr<_20d81455c_ParamIns>&, jule::Ptr<_20cb8d81b_Expr>);
inline jule::Bool _20d8a61d1_pushVariadic(_20d8a4630_fnCallArgChecker*, jule::Ptr<_20d81455c_ParamIns>&, jule::I64);
inline jule::Bool _20d8a64de_checkArgs(_20d8a4630_fnCallArgChecker*, jule::Slice<jule::Ptr<_20d81455c_ParamIns>>&);
inline jule::Bool _20d8a6775_checkDynamicTypeAnnotation(_20d8a4630_fnCallArgChecker*);
inline jule::Bool _20d8a69ea_check(_20d8a4630_fnCallArgChecker*);
struct _20d8a4630_fnCallArgChecker {
	jule::Ptr<_20d8b440e_Eval> _field_e;
	jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _field_args;
	jule::Ptr<_20b4e5581_Token> _field_errorToken;
	jule::Ptr<_20d814749_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	

	_20d8a4630_fnCallArgChecker(void) = default;


};
inline void _20d8a7545_pushErr(_20d8a7039_structLitChecker*, jule::Ptr<_20b4e5581_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _20d8a7864_pushSugggestion(_20d8a7039_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _20d8a7c2c_pushMatch(_20d8a7039_structLitChecker*, jule::Ptr<_20cba5bc9_FieldIns>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20b4e5581_Token>&);
inline void _20d8a804b_checkPair(_20d8a7039_structLitChecker*, jule::Ptr<_20cb9327c_FieldExprPair>&, jule::Slice<jule::Ptr<_20cb8d81b_Expr>>&);
inline jule::Bool _20d8a8359_readyExprs(_20d8a7039_structLitChecker*, jule::Slice<jule::Ptr<_20cb8d81b_Expr>>&);
inline void _20d8a85ce_check(_20d8a7039_structLitChecker*, jule::Slice<jule::Ptr<_20cb8d81b_Expr>>&);
struct _20d8a7039_structLitChecker {
	jule::Ptr<_20d8b440e_Eval> _field_e;
	jule::Ptr<_20b4e5581_Token> _field_errorToken;
	jule::Ptr<_20cba5db6_StructIns> _field_s;
	jule::Slice<jule::Ptr<_20d80dbe9_StructArgExprModel>> _field_args;
	

	_20d8a7039_structLitChecker(void) = default;


};
inline jule::Ptr<_20d869eb9_Var> _20d8a90b3_buildVar(_20d8a8b1d_rangeChecker*, jule::Ptr<_20cb9bc58_VarDecl>&);
inline void _20d8a928e_setSizeKey(_20d8a8b1d_rangeChecker*);
inline void _20d8a9657_checkRangeExprValidity(_20d8a8b1d_rangeChecker*, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d869eb9_Var>&, jule::Ptr<_20d8e3680_TypeKind>&);
inline void _20d8a9833_checkSlice(_20d8a8b1d_rangeChecker*);
inline void _20d8a9a0e_checkArray(_20d8a8b1d_rangeChecker*);
inline void _20d8a9bda_checkMapKeyA(_20d8a8b1d_rangeChecker*);
inline void _20d8a9db6_checkMapKeyB(_20d8a8b1d_rangeChecker*);
inline void _20d8aa092_checkMap(_20d8a8b1d_rangeChecker*);
inline void _20d8aa26d_checkStr(_20d8a8b1d_rangeChecker*);
inline jule::Bool _20d8aa4d2_check(_20d8a8b1d_rangeChecker*);
struct _20d8a8b1d_rangeChecker {
	jule::Ptr<_20d82c3aa_scopeChecker> _field_sc;
	jule::Ptr<_20cb9d8d6_RangeKind> _field_rang;
	jule::Ptr<_20d8274e8_RangeIter> _field_Kind;
	jule::Ptr<_20d8b2891_Data> _field_d;
	

	_20d8a8b1d_rangeChecker(void) = default;

	inline bool operator==(_20d8a8b1d_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_20d8a8b1d_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _20d8ab14d_prepareTypes(_20d8aaba8_retTypeChecker*);
inline void _20d8ab3c3_prepareExprs(_20d8aaba8_retTypeChecker*, jule::Ptr<_20cb8d81b_Expr>&);
inline void _20d8ab59e_checkExprs(_20d8aaba8_retTypeChecker*);
inline jule::Bool _20d8ab8ac_check(_20d8aaba8_retTypeChecker*, jule::Ptr<_20cb8d81b_Expr>&);
struct _20d8aaba8_retTypeChecker {
	jule::Ptr<_20d82c3aa_scopeChecker> _field_sc;
	jule::Ptr<_20d814749_FnIns> _field_f;
	jule::Slice<jule::Ptr<_20d8e3680_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _field_exprs;
	jule::Ptr<_20b4e5581_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	

	_20d8aaba8_retTypeChecker(void) = default;


};
inline jule::Ptr<_20d84404d_ImportInfo> _20d8ad084_FindPackage(_20d8aca67_SymbolTable*, jule::Str);
inline jule::Ptr<_20d84404d_ImportInfo> _20d8ad392_SelectPackage(_20d8aca67_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)>);
inline jule::Ptr<_20d869eb9_Var> _20d8ad749_FindVar(_20d8aca67_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_20d8e298c_TypeAlias> _20d8adb01_FindTypeAlias(_20d8aca67_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_20cba59dc_Struct> _20d8adea8_FindStruct(_20d8aca67_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_20d814370_Fn> _20d8ae360_FindFn(_20d8aca67_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_20d81a3ed_Trait> _20d8ae66d_FindTrait(_20d8aca67_SymbolTable*, jule::Str);
inline jule::Ptr<_20d81b0ad_Enum> _20d8ae97b_FindEnum(_20d8aca67_SymbolTable*, jule::Str);
inline jule::Ptr<_20d81b82d_TypeEnum> _20d8aec89_FindTypeEnum(_20d8aca67_SymbolTable*, jule::Str);
inline jule::Ptr<_20d869eb9_Var> _20d8b030b_findVar(_20d8aca67_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_20d8e298c_TypeAlias> _20d8b075c_findTypeAlias(_20d8aca67_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _20d8b0b14_defByIdent(_20d8aca67_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _20d8b1065_isDuplicatedIdent(_20d8aca67_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _20d8aca67_SymbolTable {
	jule::Ptr<_20b4ea91b_File> _field_File;
	jule::Slice<_20d815edc_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_20d84404d_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_20d869eb9_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_20cba59dc_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_20d814370_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_20d81a3ed_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_20d81b0ad_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_20d81b82d_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_20d8207dd_Impl>> _field_Impls;
	

	_20d8aca67_SymbolTable(void) = default;


};
inline jule::Bool _20d8b2c7b_IsNil(_20d8b2891_Data*);
inline jule::Bool _20d8b2ee0_IsVoid(_20d8b2891_Data*);
inline jule::Bool _20d8b3254_IsConst(_20d8b2891_Data*);
inline jule::Bool _20d8b3562_GoodOperand(_20d8b2891_Data*, jule::Ptr<_20d8b2891_Data>&);
struct _20d8b2891_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_20d8e3680_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_20cc572ec_Const> _field_Constant;
	

	_20d8b2891_Data(void) = default;

	inline bool operator==(_20d8b2891_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_20d8b2891_Data _other) { return !this->operator==(_other); }


};
struct _20d8b3919_Value {
	jule::Ptr<_20cb8d81b_Expr> _field_Expr;
	jule::Ptr<_20d8b2891_Data> _field_Data;
	

	_20d8b3919_Value(void) = default;

	inline bool operator==(_20d8b3919_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_20d8b3919_Value _other) { return !this->operator==(_other); }


};
inline void _20d8b491a_pushErr(_20d8b440e_Eval*, jule::Ptr<_20b4e5581_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _20d8b4c39_pushSugggestion(_20d8b440e_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _20d8b4e15_allowBuiltin(_20d8b440e_Eval*);
inline void _20d8b50e1_disallowBuiltin(_20d8b440e_Eval*);
inline jule::Bool _20d8b5355_isUnsafe(_20d8b440e_Eval*);
inline jule::Bool _20d8b55b9_isGlobal(_20d8b440e_Eval*);
inline jule::Bool _20d8b5894_applyNumericPrefix(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d8b5b08_litNil(_20d8b440e_Eval*);
inline jule::Ptr<_20d8b2891_Data> _20d8b5e16_litStr(_20d8b440e_Eval*, jule::Ptr<_20cb8e850_LitExpr>&);
inline jule::Ptr<_20d8b2891_Data> _20d8b6224_litBool(_20d8b440e_Eval*, jule::Ptr<_20cb8e850_LitExpr>&);
inline jule::Ptr<_20d8b2891_Data> _20d8b6532_litRune(_20d8b440e_Eval*, jule::Ptr<_20cb8e850_LitExpr>&);
inline jule::Ptr<_20d8b2891_Data> _20d8b6840_litFloat(_20d8b440e_Eval*, jule::Ptr<_20cb8e850_LitExpr>&);
inline jule::Ptr<_20d8b2891_Data> _20d8b6b4d_litInt(_20d8b440e_Eval*, jule::Ptr<_20cb8e850_LitExpr>&);
inline jule::Ptr<_20d8b2891_Data> _20d8b6e5b_litNum(_20d8b440e_Eval*, jule::Ptr<_20cb8e850_LitExpr>&);
inline jule::Ptr<_20d8b2891_Data> _20d8b7269_evalLit(_20d8b440e_Eval*, jule::Ptr<_20cb8e850_LitExpr>);
inline jule::Any _20d8b7577_findBuiltins(_20d8b440e_Eval*, jule::Str);
inline jule::Any _20d8b792e_getDef(_20d8b440e_Eval*, jule::Str, jule::Bool);
inline void _1c8d82a00_pushReference(_20d8b440e_Eval*, jule::Ptr<_20d814749_FnIns>&);
inline void _1c8d96a03_pushReference(_20d8b440e_Eval*, jule::Ptr<_20d869eb9_Var>&);
inline void _1c8e38b94_pushReference(_20d8b440e_Eval*, jule::Ptr<_20cba5db6_StructIns>&);
inline jule::Ptr<_20d8b2891_Data> _20d8b7eb2__evalEnum(_20d8b440e_Eval*, jule::Ptr<_20d81b0ad_Enum>);
inline jule::Ptr<_20d8b2891_Data> _20d8b8369_evalEnum(_20d8b440e_Eval*, jule::Ptr<_20d81b0ad_Enum>, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8b8677__evalTypeEnum(_20d8b440e_Eval*, jule::Ptr<_20d81b82d_TypeEnum>);
inline jule::Ptr<_20d8b2891_Data> _20d8b8a2e_evalTypeEnum(_20d8b440e_Eval*, jule::Ptr<_20d81b82d_TypeEnum>, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8b8d3c__evalStruct(_20d8b440e_Eval*, jule::Ptr<_20cba5db6_StructIns>);
inline jule::Ptr<_20d8b2891_Data> _20d8b91e4_evalStruct(_20d8b440e_Eval*, jule::Ptr<_20cba5db6_StructIns>, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8b9502_evalFnIns(_20d8b440e_Eval*, jule::Ptr<_20d814749_FnIns>);
inline void _20d8b9821_checkDeprecated(_20d8b440e_Eval*, jule::Slice<jule::Ptr<_20cb511e6_Directive>>&, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8b9bc8_evalFn(_20d8b440e_Eval*, jule::Ptr<_20d814370_Fn>, jule::Ptr<_20b4e5581_Token>);
inline void _20d8ba091_pushIllegalCycleError(_20d8b440e_Eval*, jule::Ptr<_20d869eb9_Var>&, jule::Ptr<_20d869eb9_Var>&, jule::Str&);
inline jule::Bool _20d8ba448_checkCrossCycle(_20d8b440e_Eval*, jule::Ptr<_20d869eb9_Var>&, jule::Str&);
inline jule::Bool _20d8ba800_checkIllegalCycles(_20d8b440e_Eval*, jule::Ptr<_20d869eb9_Var>&, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8baba7_evalVar(_20d8b440e_Eval*, jule::Ptr<_20d869eb9_Var>, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8bb05e_evalTypeAlias(_20d8b440e_Eval*, jule::Ptr<_20d8e298c_TypeAlias>, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8bb416_evalDef(_20d8b440e_Eval*, jule::Any, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8bb724_evalIdent(_20d8b440e_Eval*, jule::Ptr<_20cb904cc_IdentExpr>);
inline jule::Ptr<_20d8b2891_Data> _20d8bba32_evalUnary(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb90bd6_UnaryExpr>);
inline jule::Ptr<_20d8b2891_Data> _20d8bbd40_evalVariadic(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb9108d_VariadicExpr>);
inline jule::Ptr<_20d8b2891_Data> _20d8bc14d_evalUnsafe(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb90059_UnsafeExpr>);
inline jule::Ptr<_20d8b2891_Data> _20d8bc45b_evalArr(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb94e0a_SliceExpr>);
inline jule::Ptr<_20d8b2891_Data> _20d8bc8ac_evalExpSlc(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb94e0a_SliceExpr>, jule::Ptr<_20d8e3680_TypeKind>, jule::Any);
inline jule::Ptr<_20d8b2891_Data> _20d8bcbba_evalSliceExpr(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb94e0a_SliceExpr>);
inline void _20d8bd00b_checkIntegerIndexingByData(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20b4e5581_Token>);
inline void _20d8bd3d5_indexingPtr(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20cb95779_IndexingExpr>&);
inline void _20d8bd79d_indexingArr(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20cb95779_IndexingExpr>&);
inline void _20d8bdb66_indexingSlc(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20cb95779_IndexingExpr>&);
inline void _20d8be02e_indexingMap(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20cb95779_IndexingExpr>&);
inline void _20d8be3e7_indexingStr(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20cb95779_IndexingExpr>&);
inline void _20d8be7b0_toIndexing(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20cb95779_IndexingExpr>&);
inline jule::Bool _20d8bec33_pushGenericsFromExprSubIdent(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb91c70_SubIdentExpr>&, jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>>&, jule::Ptr<_20cb8d81b_Expr>&);
inline jule::Bool _20d8c00eb_pushGenericsFromData(jule::Ptr<_20d8b440e_Eval>, jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>>&, jule::Ptr<_20cb8d81b_Expr>&);
inline void _20d8c043c_evalIdentDeclFromIndexing(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20cb95779_IndexingExpr>&);
inline jule::Bool _20d8c089e_checkGenericFn(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20d814749_FnIns>&, jule::Ptr<_20b4e5581_Token>&, jule::Any&);
inline void _20d8c0be0_evalFnGenericFromIndexing(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20cb95779_IndexingExpr>&);
inline jule::Ptr<_20d8b2891_Data> _20d8c100e_evalIndexing(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb95779_IndexingExpr>);
struct _x_20d8b2891_Data_x_20d8b2891_Data {
	jule::Ptr<_20d8b2891_Data> __jule_result_arg0;
	jule::Ptr<_20d8b2891_Data> __jule_result_arg1;
};
inline _x_20d8b2891_Data_x_20d8b2891_Data _20d8c131c_evalSlicingExprs(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb95d84_SlicingExpr>&);
inline void _20d8c1592_slicingArr(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>&);
inline void _20d8c195a_slicingStr(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&);
inline void _20d8c1dbc_checkSlicing(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20cb95d84_SlicingExpr>&);
inline jule::Ptr<_20d8b2891_Data> _20d8c21ca_evalSlicing(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb95d84_SlicingExpr>);
inline void _20d8c2593_castPtr(_20d8b440e_Eval*, jule::Ptr<_20d8e3680_TypeKind>, jule::Ptr<_20d8b2891_Data>, jule::Ptr<_20b4e5581_Token>);
inline void _20d8c295b_castStruct(_20d8b440e_Eval*, jule::Ptr<_20d8e3680_TypeKind>, jule::Ptr<_20d8b2891_Data>, jule::Ptr<_20b4e5581_Token>);
inline void _20d8c2d24_castRef(_20d8b440e_Eval*, jule::Ptr<_20d8e3680_TypeKind>, jule::Ptr<_20d8b2891_Data>, jule::Ptr<_20b4e5581_Token>);
inline void _20d8c31dc_castSlc(_20d8b440e_Eval*, jule::Ptr<_20d8e3680_TypeKind>, jule::Ptr<_20d8b2891_Data>, jule::Ptr<_20b4e5581_Token>);
inline void _20d8c350b_castStr(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>, jule::Ptr<_20b4e5581_Token>);
inline void _20d8c38c4_castInt(_20d8b440e_Eval*, jule::Ptr<_20d8e3680_TypeKind>, jule::Ptr<_20d8b2891_Data>, jule::Ptr<_20b4e5581_Token>);
inline void _20d8c3c8c_castNum(_20d8b440e_Eval*, jule::Ptr<_20d8e3680_TypeKind>, jule::Ptr<_20d8b2891_Data>, jule::Ptr<_20b4e5581_Token>);
inline void _20d8c4155_castPrim(_20d8b440e_Eval*, jule::Ptr<_20d8e3680_TypeKind>, jule::Ptr<_20d8b2891_Data>, jule::Ptr<_20b4e5581_Token>);
inline void _20d8c4474_castConstant(_20d8b440e_Eval*, jule::Ptr<_20d8e3680_TypeKind>&, jule::Ptr<_20d8b2891_Data>&);
inline void _20d8c483c_castTypeEnum(_20d8b440e_Eval*, jule::Ptr<_20d8e3680_TypeKind>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20b4e5581_Token>&);
inline void _20d8c4c05_castTypeEnumT(_20d8b440e_Eval*, jule::Ptr<_20d8e3680_TypeKind>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Ptr<_20d8b2891_Data> _20d8c5156_evalCastByTypeNData(_20d8b440e_Eval*, jule::Ptr<_20d8e3680_TypeKind>, jule::Ptr<_20d8b2891_Data>, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8c55a7_evalCastT(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20d8e3680_TypeKind>&, jule::Ptr<_20cb8d81b_Expr>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Ptr<_20d8b2891_Data> _20d8c58b5_evalCast(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb91445_CastExpr>);
inline jule::Ptr<_20d8b2891_Data> _20d8c5bc3_evalNsSelection(_20d8b440e_Eval*, jule::Ptr<_20cb917ec_NsSelectionExpr>);
inline jule::Ptr<_20d8b2891_Data> _20d8c6124_evalStructLitExplicit(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cba5db6_StructIns>, jule::Slice<jule::Ptr<_20cb8d81b_Expr>>, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8c6432_evalStructLit(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb939ca_StructLit>);
inline _20d901e30_typeChecker _20d8c6696_typeChecker(_20d8b440e_Eval*);
inline jule::Ptr<_20d8b2891_Data> _20d8c69a4_evalType(_20d8b440e_Eval*, jule::Ptr<_20cb892ea_TypeDecl>);
inline void _20d8c6cc3_callTypeFn(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline void _20d8c70e2_callBuiltinFn(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline void _20d8c7433_checkFnOfConcurrentCall(_20d8b440e_Eval*, jule::Ptr<_20d814749_FnIns>&, jule::Ptr<_20b4e5581_Token>);
inline void _20d8c782e_processExceptionalHandler(_20d8b440e_Eval*, jule::Ptr<_20d814749_FnIns>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline void _20d8c7b5e_callFn(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d8c7e6c_evalFnCall(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb927ed_FnCallExpr>);
inline jule::Ptr<_20d8b2891_Data> _20d8c8324_evalEnumStatic(_20d8b440e_Eval*, jule::Ptr<_20d81b0ad_Enum>, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8c86cb_evalTypeEnumStatic(_20d8b440e_Eval*, jule::Ptr<_20d81b82d_TypeEnum>, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8c8a83_evalStructStatic(_20d8b440e_Eval*, jule::Ptr<_20cba5db6_StructIns>, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8c8ed4_evalTraitSubIdent(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>, jule::Ptr<_20d81a3ed_Trait>, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8c94ce_evalStructSubIdent(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>, jule::Ptr<_20cba5db6_StructIns>, jule::Ptr<_20cb91c70_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_20d8b2891_Data> _20d8c9886_evalSliceSubIdent(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8c9c3d_evalArraySubIdent(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8ca04b_evalIntTypeStatic(_20d8b440e_Eval*, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8ca359_evalUintTypeStatic(_20d8b440e_Eval*, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8ca667_evalI8TypeStatic(_20d8b440e_Eval*, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8ca975_evalI16TypeStatic(_20d8b440e_Eval*, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8cac83_evalI32TypeStatic(_20d8b440e_Eval*, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8cb091_evalI64TypeStatic(_20d8b440e_Eval*, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8cb39e_evalU8TypeStatic(_20d8b440e_Eval*, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8cb6ac_evalU16TypeStatic(_20d8b440e_Eval*, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8cb9ba_evalU32TypeStatic(_20d8b440e_Eval*, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8cbcc8_evalU64TypeStatic(_20d8b440e_Eval*, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8cc0d6_evalF32TypeStatic(_20d8b440e_Eval*, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8cc3e4_evalF64TypeStatic(_20d8b440e_Eval*, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8cc79b_evalPrimStatic(_20d8b440e_Eval*, jule::Str, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20d8b2891_Data> _20d8ccb53_evalTypeStatic(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>, jule::Ptr<_20cb91c70_SubIdentExpr>);
inline jule::Ptr<_20d8b2891_Data> _20d8cd00a_evalObjSubIdent(_20d8b440e_Eval*, jule::Ptr<_20d8b2891_Data>, jule::Ptr<_20cb91c70_SubIdentExpr>);
inline jule::Ptr<_20d8b2891_Data> _20d8cd318_evalSubIdent(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb91c70_SubIdentExpr>);
inline jule::Ptr<_20d8b2891_Data> _20d8cd626_evalTuple(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb8e498_TupleExpr>);
inline jule::Ptr<_20d8b2891_Data> _20d8cd9cd_evalMap(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20d8edb74_Map>, jule::Ptr<_20cb93e4d_BraceLit>);
inline jule::Ptr<_20d8b2891_Data> _20d8cdcdb_evalBraceLit(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb93e4d_BraceLit>);
inline jule::Ptr<_20d8b2891_Data> _20d8ce0e9_evalAnonFn(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb9ac79_FnDecl>);
inline jule::Ptr<_20d8b2891_Data> _20d8ce407_evalBinop(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb921e3_BinopExpr>);
inline jule::Ptr<_20d8b2891_Data> _20d8ce715_evalExprKind(jule::Ptr<_20d8b440e_Eval>, jule::Any);
inline jule::Ptr<_20d8b2891_Data> _20d8cea23_eval(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb8d81b_Expr>);
inline jule::Ptr<_20d8b2891_Data> _20d8ced31_evalExpr(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20cb8d81b_Expr>);
struct _20d8b440e_Eval {
	jule::Ptr<_20d84c199_Sema> _field_s;
	jule::Trait<_20d90e536_Lookup> _field_lookup;
	jule::Ptr<_20d8e3680_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_20d869eb9_Var> _field_owner;
	jule::Ptr<_20cba5bc9_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	_20d8b440e_Eval(void) = default;

	inline bool operator==(_20d8b440e_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_20d8b440e_Eval _other) { return !this->operator==(_other); }


};
inline _20d8d02a4_unaryEval static__20d8d075a_new(jule::Ptr<_20d8b440e_Eval>);
inline void _20d8d0936_minus(_20d8d02a4_unaryEval*);
inline void _20d8d0b12_plus(_20d8d02a4_unaryEval*);
inline void _20d8d0cdd_caret(_20d8d02a4_unaryEval*);
inline void _20d8d0eb9_excl(_20d8d02a4_unaryEval*);
inline void _20d8d1195_star(_20d8d02a4_unaryEval*);
inline void _20d8d1371_amper(_20d8d02a4_unaryEval*);
inline void _20d8d154c_typeDecl(_20d8d02a4_unaryEval*);
inline void _20d8d1728_evalData(_20d8d02a4_unaryEval*);
inline jule::Ptr<_20d8b2891_Data> _20d8d1a03_eval(_20d8d02a4_unaryEval*, jule::Ptr<_20cb90bd6_UnaryExpr>);
struct _20d8d02a4_unaryEval {
	jule::Ptr<_20d8b440e_Eval> _field_e;
	jule::Ptr<_20d8b2891_Data> _field_d;
	jule::Ptr<_20cb90bd6_UnaryExpr> _field_u;
	

	_20d8d02a4_unaryEval(void) = default;

	inline bool operator==(_20d8d02a4_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_20d8d02a4_unaryEval _other) { return !this->operator==(_other); }


};
inline _20d8d2042_binaryEval static__20d8d2619_newPlain(jule::Ptr<_20d8b440e_Eval>);
inline _20d8d2042_binaryEval static__20d8d295a_new(jule::Ptr<_20d8b440e_Eval>, jule::Ptr<_20b4e5581_Token>);
inline jule::Bool _20d8d2bbe_checkTypeCompatibility(_20d8d2042_binaryEval*);
inline jule::Bool _20d8d2e66_checkStructCommonOperatorCompatibility(_20d8d2042_binaryEval*);
inline jule::Ptr<_20d8b2891_Data> _20d8d320d_evalNil(_20d8d2042_binaryEval*);
inline jule::Ptr<_20d8b2891_Data> _20d8d3472_evalEnum(_20d8d2042_binaryEval*);
inline jule::Ptr<_20d8b2891_Data> _20d8d36d6_evalTypeEnum(_20d8d2042_binaryEval*);
inline jule::Ptr<_20d8b2891_Data> _20d8d394a_evalSptr(_20d8d2042_binaryEval*);
inline jule::Ptr<_20d8b2891_Data> _20d8d3bae_evalPtr(_20d8d2042_binaryEval*);
inline jule::Ptr<_20d8b2891_Data> _20d8d3e23_evalArr(_20d8d2042_binaryEval*);
inline jule::Ptr<_20d8b2891_Data> _20d8d4187_evalSlc(_20d8d2042_binaryEval*);
inline jule::Ptr<_20d8b2891_Data> _20d8d43eb_evalFn(_20d8d2042_binaryEval*);
inline jule::Ptr<_20d8b2891_Data> _20d8d4660_evalStruct(_20d8d2042_binaryEval*);
inline jule::Ptr<_20d8b2891_Data> _20d8d48c4_evalTrait(_20d8d2042_binaryEval*);
inline jule::Ptr<_20d8b2891_Data> _20d8d4b38_evalAny(_20d8d2042_binaryEval*);
inline jule::Ptr<_20d8b2891_Data> _20d8d4d9c_evalBool(_20d8d2042_binaryEval*);
inline jule::Ptr<_20d8b2891_Data> _20d8d5111_evalStr(_20d8d2042_binaryEval*);
inline void _20d8d52dc_setTypeToGreater(_20d8d2042_binaryEval*);
inline void _20d8d552e_checkModData(_20d8d2042_binaryEval*, jule::Ptr<_20d8b2891_Data>&);
inline void _20d8d570a_mod(_20d8d2042_binaryEval*);
inline jule::Bool _20d8d5ab2_numbersAreCompatibile(_20d8d2042_binaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_20d8b2891_Data> _20d8d5d26_evalFloat(_20d8d2042_binaryEval*);
inline jule::Ptr<_20d8b2891_Data> _20d8d608a_evalInt(_20d8d2042_binaryEval*);
inline jule::Ptr<_20d8b2891_Data> _20d8d62ee_evalPrim(_20d8d2042_binaryEval*);
inline void _20d8d64ca_checkSpecialCases(_20d8d2042_binaryEval*);
inline jule::Ptr<_20d8b2891_Data> _20d8d673e_evalOp(_20d8d2042_binaryEval*);
inline void _20d8d69b4_evalConst(_20d8d2042_binaryEval*, jule::Ptr<_20d8b2891_Data>&);
inline void _20d8d6c39_checkData(_20d8d2042_binaryEval*, jule::Ptr<_20d8b2891_Data>&);
inline void _20d8d6e15_checkDatas(_20d8d2042_binaryEval*);
inline void _20d8d718a_setModel(_20d8d2042_binaryEval*, jule::Ptr<_20d8b2891_Data>&);
inline void _20d8d7410_postEval(_20d8d2042_binaryEval*, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d8d77b7_solveExplicit(_20d8d2042_binaryEval*, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d8d7ac5_eval(_20d8d2042_binaryEval*, jule::Ptr<_20cb921e3_BinopExpr>&);
struct _20d8d2042_binaryEval {
	jule::Ptr<_20d8b440e_Eval> _field_e;
	jule::Ptr<_20d8b2891_Data> _field_l;
	jule::Ptr<_20d8b2891_Data> _field_r;
	jule::Ptr<_20b4e5581_Token> _field_op;
	

	_20d8d2042_binaryEval(void) = default;

	inline bool operator==(_20d8d2042_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_20d8d2042_binaryEval _other) { return !this->operator==(_other); }


};
struct _20d8e1e53_InsGeneric {
	jule::Ptr<_20d8e3680_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_20d8e3680_TypeKind>> _field_Constraint;
	

	_20d8e1e53_InsGeneric(void) = default;


};
struct _20d8e298c_TypeAlias {
	jule::Ptr<_20cb99283_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_20d8e7a5d_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>> _field_Generics;
	

	_20d8e298c_TypeAlias(void) = default;


};
inline jule::Str _20d8e3a7b_Str(_20d8e3680_TypeKind*);
inline jule::Bool _20d8e3d89_Equals(jule::Ptr<_20d8e3680_TypeKind>, jule::Ptr<_20d8e3680_TypeKind>);
inline jule::Bool _20d8e4351_CppLinked(_20d8e3680_TypeKind*);
inline jule::Bool _20d8e45b5_IsNil(_20d8e3680_TypeKind*);
inline jule::Bool _20d8e4829_Void(_20d8e3680_TypeKind*);
inline jule::Bool _20d8e4a8d_Comparable(_20d8e3680_TypeKind*);
inline jule::Bool _20d8e4d02_Mutable(_20d8e3680_TypeKind*);
inline jule::Bool _20d8e5066_NilCompatible(_20d8e3680_TypeKind*);
inline jule::Bool _20d8e52ca_PerformsRC(_20d8e3680_TypeKind*);
inline jule::Bool _20d8e553e_SupportsCloning(_20d8e3680_TypeKind*);
inline jule::Bool _20d8e57a3_Variadicable(_20d8e3680_TypeKind*);
inline jule::Ptr<_20d8e83cc_Prim> _20d8e5a17_Prim(_20d8e3680_TypeKind*);
inline jule::Ptr<_20d8ebb61_Sptr> _20d8e5c7b_Sptr(_20d8e3680_TypeKind*);
inline jule::Ptr<_20d9001c5_Ptr> _20d8e5ee0_Ptr(_20d8e3680_TypeKind*);
inline jule::Ptr<_20d81b0ad_Enum> _20d8e6254_Enum(_20d8e3680_TypeKind*);
inline jule::Ptr<_20d81b82d_TypeEnum> _20d8e64b8_TypeEnum(_20d8e3680_TypeKind*);
inline jule::Ptr<_20d8ee768_Arr> _20d8e672c_Arr(_20d8e3680_TypeKind*);
inline jule::Ptr<_20d8ec5bd_Slc> _20d8e6991_Slc(_20d8e3680_TypeKind*);
inline jule::Ptr<_20d814749_FnIns> _20d8e6c05_Fn(_20d8e3680_TypeKind*);
inline jule::Ptr<_20cba5db6_StructIns> _20d8e6e69_Struct(_20d8e3680_TypeKind*);
inline jule::Ptr<_20d81a3ed_Trait> _20d8e71cd_Trait(_20d8e3680_TypeKind*);
inline jule::Ptr<_20d8edb74_Map> _20d8e7442_Map(_20d8e3680_TypeKind*);
inline jule::Ptr<_20d8ed14b_Tuple> _20d8e76a6_Tup(_20d8e3680_TypeKind*);
struct _20d8e3680_TypeKind {
	jule::Str _field_CppIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_20d8e3251_Kind> _field_Kind;
	

	_20d8e3680_TypeKind(void) = default;

	inline bool operator==(_20d8e3680_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20d8e3680_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _20d8e7e15_checked(_20d8e7a5d_TypeSymbol*);
inline void _20d8e80e1_removeKind(_20d8e7a5d_TypeSymbol*);
struct _20d8e7a5d_TypeSymbol {
	jule::Ptr<_20cb892ea_TypeDecl> _field_Decl;
	jule::Ptr<_20d8e3680_TypeKind> _field_Kind;
	

	_20d8e7a5d_TypeSymbol(void) = default;

	inline bool operator==(_20d8e7a5d_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20d8e7a5d_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _20d8e8740_Str(_20d8e83cc_Prim*);
inline jule::Bool _20d8e8a4d_Equals(jule::Ptr<_20d8e83cc_Prim>, jule::Ptr<_20d8e3680_TypeKind>);
inline jule::Bool _20d8e8ec1_IsConstraint(_20d8e83cc_Prim*);
inline jule::Bool _20d8e9235_IsI8(_20d8e83cc_Prim*);
inline jule::Bool _20d8e9499_IsI16(_20d8e83cc_Prim*);
inline jule::Bool _20d8e970d_IsI32(_20d8e83cc_Prim*);
inline jule::Bool _20d8e9972_IsI64(_20d8e83cc_Prim*);
inline jule::Bool _20d8e9bd6_IsU8(_20d8e83cc_Prim*);
inline jule::Bool _20d8e9e4a_IsU16(_20d8e83cc_Prim*);
inline jule::Bool _20d8ea1ae_IsU32(_20d8e83cc_Prim*);
inline jule::Bool _20d8ea423_IsU64(_20d8e83cc_Prim*);
inline jule::Bool _20d8ea687_IsF32(_20d8e83cc_Prim*);
inline jule::Bool _20d8ea8eb_IsF64(_20d8e83cc_Prim*);
inline jule::Bool _20d8eab60_IsInt(_20d8e83cc_Prim*);
inline jule::Bool _20d8eadc4_IsUint(_20d8e83cc_Prim*);
inline jule::Bool _20d8eb138_IsUintptr(_20d8e83cc_Prim*);
inline jule::Bool _20d8eb39c_IsBool(_20d8e83cc_Prim*);
inline jule::Bool _20d8eb611_IsStr(_20d8e83cc_Prim*);
inline jule::Bool _20d8eb875_IsAny(_20d8e83cc_Prim*);
struct _20d8e83cc_Prim {
	jule::Str _field_Kind;
	

	_20d8e83cc_Prim(void) = default;

	inline bool operator==(_20d8e83cc_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20d8e83cc_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _20d8ebec4_Str(_20d8ebb61_Sptr*);
inline jule::Bool _20d8ec2d2_Equals(jule::Ptr<_20d8ebb61_Sptr>, jule::Ptr<_20d8e3680_TypeKind>);
struct _20d8ebb61_Sptr {
	jule::Ptr<_20d8e3680_TypeKind> _field_Elem;
	

	_20d8ebb61_Sptr(void) = default;

	inline bool operator==(_20d8ebb61_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_20d8ebb61_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _20d8ecac9_Str(_20d8ec5bd_Slc*);
inline jule::Bool _20d8ecdd7_Equals(jule::Ptr<_20d8ec5bd_Slc>, jule::Ptr<_20d8e3680_TypeKind>);
struct _20d8ec5bd_Slc {
	jule::Ptr<_20d8e3680_TypeKind> _field_Elem;
	

	_20d8ec5bd_Slc(void) = default;

	inline bool operator==(_20d8ec5bd_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_20d8ec5bd_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _20d8ed4ae_Str(_20d8ed14b_Tuple*);
inline jule::Bool _20d8ed7bc_Equals(jule::Ptr<_20d8ed14b_Tuple>, jule::Ptr<_20d8e3680_TypeKind>);
struct _20d8ed14b_Tuple {
	jule::Slice<jule::Ptr<_20d8e3680_TypeKind>> _field_Types;
	

	_20d8ed14b_Tuple(void) = default;


};
inline jule::Str _20d8eded7_Str(_20d8edb74_Map*);
inline jule::Bool _20d8ee2e5_Equals(jule::Ptr<_20d8edb74_Map>, jule::Ptr<_20d8e3680_TypeKind>);
struct _20d8edb74_Map {
	jule::Ptr<_20d8e3680_TypeKind> _field_Key;
	jule::Ptr<_20d8e3680_TypeKind> _field_Val;
	

	_20d8edb74_Map(void) = default;

	inline bool operator==(_20d8edb74_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_20d8edb74_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _20d8eeacb_Str(_20d8ee768_Arr*);
inline jule::Bool _20d8eedd9_Equals(jule::Ptr<_20d8ee768_Arr>, jule::Ptr<_20d8e3680_TypeKind>);
struct _20d8ee768_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_20d8e3680_TypeKind> _field_Elem;
	

	_20d8ee768_Arr(void) = default;

	inline bool operator==(_20d8ee768_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_20d8ee768_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _20d900538_Str(_20d9001c5_Ptr*);
inline jule::Bool _20d900846_Equals(jule::Ptr<_20d9001c5_Ptr>, jule::Ptr<_20d8e3680_TypeKind>);
inline jule::Bool _20d900b98_IsUnsafe(_20d9001c5_Ptr*);
struct _20d9001c5_Ptr {
	jule::Ptr<_20d8e3680_TypeKind> _field_Elem;
	

	_20d9001c5_Ptr(void) = default;

	inline bool operator==(_20d9001c5_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_20d9001c5_Ptr _other) { return !this->operator==(_other); }


};
struct _20d90111b_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_20d90111b_referencer(void) = default;

	inline bool operator==(_20d90111b_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_20d90111b_referencer _other) { return !this->operator==(_other); }


};
inline void _20d902639_pushErr(_20d901e30_typeChecker*, jule::Ptr<_20b4e5581_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _20d902815_allowBuiltin(_20d901e30_typeChecker*);
inline void _20d9029e1_disallowBuiltin(_20d901e30_typeChecker*);
inline jule::Ptr<_20d8e83cc_Prim> _20d902cee_buildPrim(_20d901e30_typeChecker*, jule::Ptr<_20cb898b1_IdentTypeDecl>&);
inline void _1c91abab5_pushReference(_20d901e30_typeChecker*, jule::Ptr<_20cba5db6_StructIns>&);
inline void _1c91ae9a8_pushReference(_20d901e30_typeChecker*, jule::Ptr<_20d81a3ed_Trait>&);
inline void _20d9032e9_pushReferenceByKind(_20d901e30_typeChecker*, jule::Ptr<_20d8e3680_TypeKind>&);
inline void _20d9036b2_pushCycleError(_20d901e30_typeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _20d903a69_checkCrossCycle(_20d901e30_typeChecker*, jule::Any, jule::Str&);
inline jule::Bool _20d903e21_checkIllegalCycles(_20d901e30_typeChecker*, jule::Ptr<_20cb898b1_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_20d8e3251_Kind> _20d9042c8_fromTypeAlias(_20d901e30_typeChecker*, jule::Ptr<_20cb898b1_IdentTypeDecl>&, jule::Ptr<_20d8e298c_TypeAlias>&);
inline jule::Ptr<_20d81b0ad_Enum> _20d904680_fromEnum(_20d901e30_typeChecker*, jule::Ptr<_20cb898b1_IdentTypeDecl>&, jule::Ptr<_20d81b0ad_Enum>&);
inline jule::Ptr<_20d81b82d_TypeEnum> _20d904a37_fromTypeEnum(_20d901e30_typeChecker*, jule::Ptr<_20cb898b1_IdentTypeDecl>&, jule::Ptr<_20d81b82d_TypeEnum>&);
inline jule::Ptr<_20d81a3ed_Trait> _20d904dde_fromTrait(_20d901e30_typeChecker*, jule::Ptr<_20cb898b1_IdentTypeDecl>&, jule::Ptr<_20d81a3ed_Trait>&);
inline jule::Bool _20d905296_checkStructIns(_20d901e30_typeChecker*, jule::Ptr<_20cba5db6_StructIns>&, jule::Ptr<_20b4e5581_Token>&);
inline void _20d90553d_appendUsedStructReference(_20d901e30_typeChecker*, jule::Ptr<_20cba59dc_Struct>&);
inline jule::Ptr<_20cba5db6_StructIns> _20d905906_buildStructInstance(_20d901e30_typeChecker*, jule::Ptr<_20cb898b1_IdentTypeDecl>&, jule::Ptr<_20cba59dc_Struct>&);
inline jule::Ptr<_20cba5db6_StructIns> _20d905cad_fromStruct(_20d901e30_typeChecker*, jule::Ptr<_20cb898b1_IdentTypeDecl>&, jule::Ptr<_20cba59dc_Struct>&);
inline jule::Trait<_20d8e3251_Kind> _20d9060bb_getDef(_20d901e30_typeChecker*, jule::Ptr<_20cb898b1_IdentTypeDecl>&);
inline jule::Trait<_20d8e3251_Kind> _20d9063c9_buildIdent(_20d901e30_typeChecker*, jule::Ptr<_20cb898b1_IdentTypeDecl>);
inline jule::Trait<_20d8e3251_Kind> _20d9066d7_buildSubIdent(_20d901e30_typeChecker*, jule::Ptr<_20cb8a010_SubIdentTypeDecl>);
inline jule::Ptr<_20d8ebb61_Sptr> _20d9069e5_buildSptrFromType(_20d901e30_typeChecker*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Ptr<_20d8ebb61_Sptr> _20d906d03_buildSptr(_20d901e30_typeChecker*, jule::Ptr<_20cb8a6a3_SptrTypeDecl>);
inline jule::Ptr<_20d9001c5_Ptr> _20d907111_buildPtrFromType(_20d901e30_typeChecker*, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Ptr<_20d9001c5_Ptr> _20d90741e_buildPtr(_20d901e30_typeChecker*, jule::Ptr<_20cb8b176_PtrTypeDecl>);
inline jule::Ptr<_20d8ec5bd_Slc> _20d90772c_buildSlc(_20d901e30_typeChecker*, jule::Ptr<_20cb8aa9e_SlcTypeDecl>);
inline jule::Ptr<_20d8ee768_Arr> _20d907a3a_buildArr(_20d901e30_typeChecker*, jule::Ptr<_20cb8b808_ArrTypeDecl>);
inline jule::Ptr<_20d8edb74_Map> _20d907d48_buildMap(_20d901e30_typeChecker*, jule::Ptr<_20cb8c056_MapTypeDecl>);
inline jule::Ptr<_20d8ed14b_Tuple> _20d908156_buildTuple(_20d901e30_typeChecker*, jule::Ptr<_20cb8ad8a_TupleTypeDecl>);
inline jule::Bool _20d908464_checkFnTypes(_20d901e30_typeChecker*, jule::Ptr<_20d814749_FnIns>&);
inline jule::Ptr<_20d814749_FnIns> _20d908772_buildFn(_20d901e30_typeChecker*, jule::Ptr<_20cb9ac79_FnDecl>);
inline jule::Trait<_20d8e3251_Kind> _20d908a80_buildByNamespace(_20d901e30_typeChecker*, jule::Ptr<_20cb8a3b7_NamespaceTypeDecl>);
inline jule::Ptr<_20d8e3680_TypeKind> _20d908d8d_build(_20d901e30_typeChecker*, jule::Any&);
inline jule::Ptr<_20d8e3680_TypeKind> _20d90919b_checkDecl(_20d901e30_typeChecker*, jule::Ptr<_20cb892ea_TypeDecl>&);
inline void _20d909421_check(_20d901e30_typeChecker*, jule::Ptr<_20d8e7a5d_TypeSymbol>&);
struct _20d901e30_typeChecker {
	jule::Ptr<_20d84c199_Sema> _field_s;
	jule::Trait<_20d90e536_Lookup> _field_rootLookup;
	jule::Trait<_20d90e536_Lookup> _field_lookup;
	jule::Ptr<_20d90111b_referencer> _field_referencer;
	jule::Ptr<_20d8156e5_ReferenceStack> _field_refers;
	jule::Ptr<_20b4e5581_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>> _field_useGenerics;
	jule::Bool _field_notPlain = false;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_20d8e298c_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	

	_20d901e30_typeChecker(void) = default;


};
inline jule::Bool static__20d909a81_identTypeDecl(jule::Str&, jule::Ptr<_20cb898b1_IdentTypeDecl>);
inline jule::Bool static__20d909dc2_exist(jule::Str&, jule::Any&);
struct _20d909641_identTypeLookup {
	

	_20d909641_identTypeLookup(void) = default;

	inline bool operator==(_20d909641_identTypeLookup _other) { return true; }

	inline bool operator!=(_20d909641_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1e11c41ae_FileInfo {
	jule::Ptr<_20cb5014b_Ast> _field_Ast;
	jule::Slice<_20b1bc016_Log> _field_Errors;
	

	_1e11c41ae_FileInfo(void) = default;


};
struct _1e121ccc9_stmt {
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	

	_1e121ccc9_stmt(void) = default;


};
inline void _1e121dc86_stop(_1e121d604_scopeParser*);
inline jule::Bool _1e121deea_stopped(_1e121d604_scopeParser*);
inline jule::Bool _1e121e25e_finished(_1e121d604_scopeParser*);
inline jule::Bool _1e121e4c3_isLastSt(_1e121d604_scopeParser*);
inline void _1e121e7e2_pushErr(_1e121d604_scopeParser*, jule::Ptr<_20b4e5581_Token>, jule::Str);
inline void _1e121eb11_pushSuggestion(_1e121d604_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1e121ed86_insertAsNext(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_1e121ccc9_stmt> _1e12200ea_next(_1e121d604_scopeParser*);
inline jule::Ptr<_20cb99283_ScopeTree> _1e12204a2_buildScope(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20cb9bc58_VarDecl> _1e12207b0_buildVarSt(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb9c110_RetSt> _1e1220abd_buildRetSt(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb9c770_Iter> _1e1220dcb_buildWhileNextIter(_1e121d604_scopeParser*, jule::Ptr<_1e121ccc9_stmt>&);
inline jule::Ptr<_20cb9d045_WhileKind> _1e12211d9_buildWhileIterKind(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _1e12214e7_getRangeKindKeysTokens(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb9bc58_VarDecl> _1e1221805_buildRangeKindKey(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Slice<jule::Ptr<_20cb9bc58_VarDecl>> _1e1221b13_buildRangeKindKeys(_1e121d604_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>>&);
inline void _1e1221e54_setupRangeKindKeysPlain(_1e121d604_scopeParser*, jule::Ptr<_20cb9d8d6_RangeKind>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline void _1e12222a6_setupRangeKindKeysExplicit(_1e121d604_scopeParser*, jule::Ptr<_20cb9d8d6_RangeKind>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline void _1e12225d6_setupRangeKindKeys(_1e121d604_scopeParser*, jule::Ptr<_20cb9d8d6_RangeKind>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb9d8d6_RangeKind> _1e1222a37_buildRangeIterKind(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Any _1e1222dde_buildCommonIterKind(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Ptr<_20cb9c770_Iter> _1e12231ec_buildCommonIter(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb9c770_Iter> _1e122350a_buildIterSt(_1e121d604_scopeParser*, jule::Ptr<_1e121ccc9_stmt>&);
inline jule::Ptr<_20cb9dc8d_BreakSt> _1e1223818_buildBreakSt(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb9e145_ContSt> _1e1223b26_buildContSt(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb9e5b8_If> _1e1223e34_buildIf(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb9e970_Else> _1e1224242_buildElse(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb9ede3_Conditional> _1e1224550_buildIfElseChain(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb8d81b_Expr> _1e122485d_buildCoCallSt(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb96d52_GotoSt> _1e1224b6b_buildGotoSt(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb9713d_FallSt> _1e1224e79_buildFallSt(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cba05b9_TypeAliasDecl> _1e1225287_buildTypeAliasSt(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline void _1e12256e9_pushCaseExpr(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>, jule::Ptr<_20b4e5581_Token>, jule::Bool, jule::Slice<jule::Ptr<_20cb8d81b_Expr>>&);
inline jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _1e1225b4a_buildCaseExprs(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Ptr<_20b4e5581_Token>&, jule::Bool);
inline jule::Ptr<_20cb99283_ScopeTree> _1e1225e58_buildCaseScope(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
struct _x_20cba0a3c_Case_bool {
	jule::Ptr<_20cba0a3c_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline _x_20cba0a3c_Case_bool _1e1226310_buildCase(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Bool);
struct _sx_20cba0a3c_Case_x_20cb9e970_Else {
	jule::Slice<jule::Ptr<_20cba0a3c_Case>> __jule_result_arg0;
	jule::Ptr<_20cb9e970_Else> __jule_result_arg1;
};
inline _sx_20cba0a3c_Case_x_20cb9e970_Else _1e12266b7_buildCases(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>, jule::Bool);
inline jule::Ptr<_20cba1213_MatchCase> _1e12269c5_buildMatchCase(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb99283_ScopeTree> _1e1226cd3_buildScopeSt(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb9699a_LabelSt> _1e12270e1_buildLabelSt(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
struct __20cb98947_StmtData_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline __20cb98947_StmtData_bool _1e12273ee_buildIdSt(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_1e123641e_assignInfo> _1e122770c_buildAssignInfo(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb97748_AssignLeft> _1e1227a1a_buildAssignL(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Slice<jule::Ptr<_20cb97748_AssignLeft>> _1e1227d28_buildAssignLs(_1e121d604_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>>&);
struct _x_20cb97c87_AssignSt_bool {
	jule::Ptr<_20cb97c87_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline _x_20cb97c87_AssignSt_bool _1e1228136_buildPlainAssign(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline _x_20cb97c87_AssignSt_bool _1e1228444_buildDeclAssign(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline _x_20cb97c87_AssignSt_bool _1e1228752_buildAssignSt(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb8e1ac_UseExpr> _1e1228a60_buildUseExpr(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Any _1e1228d6d_buildSt(_1e121d604_scopeParser*, jule::Ptr<_1e121ccc9_stmt>&);
inline void _1e122918c_build(_1e121d604_scopeParser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Ptr<_20cb99283_ScopeTree>&);
struct _1e121d604_scopeParser {
	jule::Ptr<_1e1239c4c_parser> _field_p;
	jule::Ptr<_20cb99283_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1e121ccc9_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	

	_1e121d604_scopeParser(void) = default;


};
inline void _1e122a3ad_pushErr(_1e1229b1b_exprBuilder*, jule::Ptr<_20b4e5581_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e122a6cc_pushSuggestion(_1e1229b1b_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_20cb8e498_TupleExpr> _1e122a9da_buildTuple(_1e1229b1b_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>>&);
inline jule::Ptr<_20cb8e850_LitExpr> _1e122ace8_buildLit(_1e1229b1b_exprBuilder*, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e122b106_buildPrimitiveType(_1e1229b1b_exprBuilder*, jule::Ptr<_20b4e5581_Token>&);
inline jule::Any _1e122b414_buildSingle(_1e1229b1b_exprBuilder*, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20cb904cc_IdentExpr> _1e122b722_buildCppLinkedIdent(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb90bd6_UnaryExpr> _1e122ba30_buildUnary(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb91c70_SubIdentExpr> _1e122bd3d_buildObjSubIdent(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb917ec_NsSelectionExpr> _1e122c14b_buildNsSubIdent(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e122c459_buildType(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Any _1e122c767_buildSubIdent(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb9108d_VariadicExpr> _1e122ca75_buildVariadic(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Any _1e122cd83_buildOpRight(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb8db07_RangeExpr> _1e122d1b3_buildBetweenParentheses(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb91445_CastExpr> _1e122d4d2_tryBuildCast(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline void _1e122d89a_pushArg(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20cb8d81b_Expr>>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>, jule::Ptr<_20b4e5581_Token>);
inline jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _1e122dba8_buildArgs(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>> _1e122deb6_buildCallGenerics(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb927ed_FnCallExpr> _1e122e417_buildFnCall(_1e1229b1b_exprBuilder*, jule::Ptr<_20b4e5581_Token>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Any _1e122e725_buildParenthesesRange(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb90059_UnsafeExpr> _1e122ea33_buildUnsafeExpr(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb9ac79_FnDecl> _1e122ed41_buildAnonFn(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Any _1e123014e_buildUnsafe(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline void _1e1230517_pushRangeLitPart(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>, jule::Ptr<_20b4e5581_Token>, jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _1e1230847_getBraceRangeLitExprParts(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb9327c_FieldExprPair> _1e1230b66_buildFieldExprPair(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb8d81b_Expr> _1e1230e74_buildStructLitExpr(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _1e1231282_buildStructLitExprs(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb939ca_StructLit> _1e12315b2_buildTypedStructLiteral(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb8d81b_Expr> _1e12318d1_buildBraceLitPart(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb93e4d_BraceLit> _1e1231bde_buildBraceLit(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Any _1e1231eec_buildBraceRange(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _1e123230a_getEnumerableParts(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb94e0a_SliceExpr> _1e1232618_buildSlice(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb95779_IndexingExpr> _1e1232a69_buildIndexing(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>, jule::Slice<jule::Ptr<_20b4e5581_Token>>, jule::Ptr<_20b4e5581_Token>);
inline jule::Ptr<_20cb95d84_SlicingExpr> _1e123310d_buildSlicing(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Ptr<_20b4e5581_Token>&, jule::Ptr<_20b4e5581_Token>);
inline jule::Any _1e123341b_buildBracketRange(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Any _1e1233729_buildData(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Any _1e1233ad1_buildBinop(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::I64);
inline jule::Any _1e1233dde_build(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Any _1e12341ec_buildKind(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb8d81b_Expr> _1e123450a_buildFromTokens(_1e1229b1b_exprBuilder*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
struct _1e1229b1b_exprBuilder {
	jule::Ptr<_1e1239c4c_parser> _field_p;
	

	_1e1229b1b_exprBuilder(void) = default;

	inline bool operator==(_1e1229b1b_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1e1229b1b_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1e123641e_assignInfo {
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _field_l;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _field_r;
	jule::Ptr<_20b4e5581_Token> _field_setter;
	jule::Bool _field_ok = false;
	

	_1e123641e_assignInfo(void) = default;


};
inline void _1e123a07c_stop(_1e1239c4c_parser*);
inline jule::Bool _1e123a2e1_stopped(_1e1239c4c_parser*);
inline void _1e123a6a9_pushErr(_1e1239c4c_parser*, jule::Ptr<_20b4e5581_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e123a9c8_pushSuggestion(_1e1239c4c_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_20cb8d81b_Expr> _1e123acd6_buildExpr(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb511e6_Directive> _1e123b0e4_buildDirective(_1e1239c4c_parser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline void _1e123b369_pushDirective(_1e1239c4c_parser*, jule::Ptr<_20cb511e6_Directive>);
inline jule::Ptr<_20cb99283_ScopeTree> _1e123b721_buildScope(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Ptr<_20b4e5581_Token>);
struct _x_20cb892ea_TypeDecl_bool {
	jule::Ptr<_20cb892ea_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline _x_20cb892ea_TypeDecl_bool _1e123bb72__buildType(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::I64*, jule::Bool);
inline _x_20cb892ea_TypeDecl_bool _1e123c0c3_buildType(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_20cba05b9_TypeAliasDecl> _1e123c3d1_buildTypeAliasDecl(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline void _1e123c700_buildVarTypeAndExpr(jule::Ptr<_1e1239c4c_parser>, jule::Ptr<_20cb9bc58_VarDecl>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline void _1e123ca1e_buildVarCommon(jule::Ptr<_1e1239c4c_parser>, jule::Ptr<_20cb9bc58_VarDecl>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline void _1e123cdd7_buildVarBegin(_1e1239c4c_parser*, jule::Ptr<_20cb9bc58_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb9bc58_VarDecl> _1e123d1e5_buildVar(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb965e3_GenericDecl> _1e123d503_buildGeneric(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>> _1e123d8aa_buildGenerics(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Ptr<_20b4e5581_Token>&);
inline jule::Ptr<_20cb99959_ParamDecl> _1e123dbb8_buildSelfParam(_1e1239c4c_parser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline void _1e123e081_paramTypeBegin(_1e1239c4c_parser*, jule::Ptr<_20cb99959_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline void _1e123e3a0_buildParamType(jule::Ptr<_1e1239c4c_parser>, jule::Ptr<_20cb99959_ParamDecl>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline void _1e123e6be_buildParamBody(jule::Ptr<_1e1239c4c_parser>, jule::Ptr<_20cb99959_ParamDecl>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb99959_ParamDecl> _1e123e9cc_buildParam(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline void _1e123ec52_checkParams(_1e1239c4c_parser*, jule::Slice<jule::Ptr<_20cb99959_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_20cb99959_ParamDecl>> _1e1240109_buildParams(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Bool);
struct _x_20cb8c40d_RetTypeDecl_bool {
	jule::Ptr<_20cb8c40d_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline _x_20cb8c40d_RetTypeDecl_bool _1e12404b1_buildMultiRetType(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::I64&);
inline _x_20cb8c40d_RetTypeDecl_bool _1e1240868_buildRetType(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::I64&);
inline jule::Ptr<_20cb9ac79_FnDecl> _1e1240cb9_buildFnPrototype(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_20cb9ac79_FnDecl> _1e124121a_buildFn(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_20b4e5581_Token>> _1e1241528_getUseDeclSelectors(_1e1239c4c_parser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline void _1e1241847_buildCppUseDecl(_1e1239c4c_parser*, jule::Ptr<_20cba19a5_UseDecl>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline void _1e1241b66_buildStdUseDecl(_1e1239c4c_parser*, jule::Ptr<_20cba19a5_UseDecl>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline void _1e1241e85_buildIdentUseDecl(_1e1239c4c_parser*, jule::Ptr<_20cba19a5_UseDecl>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline void _1e12422a4_parseUseDecl(_1e1239c4c_parser*, jule::Ptr<_20cba19a5_UseDecl>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cba19a5_UseDecl> _1e124265b_buildUseDecl(_1e1239c4c_parser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>, jule::Bool);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e1242a13_buildTypeEnumItemKind(jule::Ptr<_1e1239c4c_parser>, jule::I64&, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Slice<jule::Ptr<_20cba3457_TypeEnumItemDecl>> _1e1242d21_buildTypeEnumItems(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cba3a62_TypeEnumDecl> _1e124312e_buildTypeEnumDecl(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb8d81b_Expr> _1e12434d6_buildEnumItemExpr(jule::Ptr<_1e1239c4c_parser>, jule::I64&, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Slice<jule::Ptr<_20cba1e28_EnumItemDecl>> _1e12437e4_buildEnumItems(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cba2951_EnumDecl> _1e1243b02_buildEnumDecl(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Any _1e1243e10_buildNodeEnumDecl(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cba3c60_FieldDecl> _1e124421d_buildField(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Slice<jule::Ptr<_20cba3c60_FieldDecl>> _1e124452b_buildStructDeclFields(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cba4513_StructDecl> _1e1244839_buildStructDecl(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline void _1e1244aae_checkMethodReceiver(_1e1239c4c_parser*, jule::Ptr<_20cb9ac79_FnDecl>&);
inline jule::Slice<jule::Ptr<_20cb9ac79_FnDecl>> _1e1244dbc_buildTraitMethods(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cba4b1d_TraitDecl> _1e12451ca_buildTraitDecl(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb9ac79_FnDecl> _1e12454d8_buildCppLinkFn(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb9bc58_VarDecl> _1e12457e6_buildCppLinkVar(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cba4513_StructDecl> _1e1245b04_buildCppLinkStruct(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cba05b9_TypeAliasDecl> _1e1245e12_buildCppLinkTypeAlias(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cba19a5_UseDecl> _1e1246220_buildCppLinkUse(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Any _1e124652d_buildCppLink(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb9ac79_FnDecl> _1e124683b_getMethod(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline void _1e1246b5a_parseImplBody(jule::Ptr<_1e1239c4c_parser>, jule::Ptr<_20cba5228_Impl>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cba5228_Impl> _1e1246e68_buildImpl(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Any _1e1247276_buildNodeData(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline void _1e12474eb_applyFnMeta(_1e1239c4c_parser*, jule::Ptr<_20cb9ac79_FnDecl>&);
inline void _1e1247771_applyMeta(_1e1239c4c_parser*, _20cb50cea_Node&);
inline void _1e12479e6_pushUseDecl(jule::Ptr<_1e1239c4c_parser>, jule::Ptr<_20cba19a5_UseDecl>&);
inline jule::Bool _1e1247d04_pushMetaNodes(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline _20cb50cea_Node _1e1248112_parseNode(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline void _1e1248387_appendNode(jule::Ptr<_1e1239c4c_parser>, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline void _1e12487e9_removeRange(_1e1239c4c_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Slice<jule::I64>&);
inline void _1e1248bb2_pushWrongOrderCloseErr(_1e1239c4c_parser*, jule::Ptr<_20b4e5581_Token>&, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Slice<jule::I64>&);
inline void _1e1249124_pushRangeClose(_1e1239c4c_parser*, jule::Ptr<_20b4e5581_Token>, jule::Str, jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Slice<jule::I64>&);
inline void _1e1249399_checkRanges(_1e1239c4c_parser*, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline void _1e124961e_parse(jule::Ptr<_1e1239c4c_parser>, jule::Ptr<_20b4ea91b_File>&);
struct _1e1239c4c_parser {
	jule::Ptr<_20cb5014b_Ast> _field_ast;
	jule::Slice<jule::Ptr<_20cb511e6_Directive>> _field_directives;
	jule::Slice<_20b1bc016_Log> _field_errors;
	

	_1e1239c4c_parser(void) = default;


};
inline void _1e124b038_pushErr(_1e124a961_typeBuilder*, jule::Ptr<_20b4e5581_Token>, jule::Str);
inline void _1e124b357_pushSuggestion(_1e124a961_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e124b5bb_buildPrim(_1e124a961_typeBuilder*);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e124b830_buildNamespace(_1e124a961_typeBuilder*);
inline jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>> _1e124ba94_buildGenerics(_1e124a961_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _1e124bd08_identGenerics(_1e124a961_typeBuilder*);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e124c06c_buildIdent(_1e124a961_typeBuilder*);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e124c2d1_buildCppLink(_1e124a961_typeBuilder*);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e124c545_buildFn(_1e124a961_typeBuilder*);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e124c7a9_buildPtr(_1e124a961_typeBuilder*);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e124ca1d_buildSptr(_1e124a961_typeBuilder*);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e124cc82_buildOp(_1e124a961_typeBuilder*);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e124cee6_buildSlc(_1e124a961_typeBuilder*);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e124d25a_buildArr(_1e124a961_typeBuilder*);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e124d4be_buildMap(_1e124a961_typeBuilder*);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e124d733_buildEnumerable(_1e124a961_typeBuilder*);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e124d997_step(_1e124a961_typeBuilder*);
inline _x_20cb892ea_TypeDecl_bool _1e124dc0b_build(_1e124a961_typeBuilder*);
struct _1e124a961_typeBuilder {
	jule::Ptr<_1e1239c4c_parser> _field_p;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	

	_1e124a961_typeBuilder(void) = default;


};
struct _20db32b77_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_20db32b77_CompileInfo(void) = default;

	inline bool operator==(_20db32b77_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_20db32b77_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _20db3452a_pushErr(_20db33eca_directiveEval*, jule::Ptr<_20b4e5581_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _20db348d2_splitOperans(_20db33eca_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Bool _20db34be0_evalDirectiveIdent(_20db33eca_directiveEval*, jule::Str);
inline jule::Bool _20db34eed_evalDirectivePart(_20db33eca_directiveEval*, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Bool _20db35262_eval(_20db33eca_directiveEval*);
struct _20db33eca_directiveEval {
	jule::Slice<_20b1bc016_Log> _field_logs;
	jule::Ptr<_20cb511e6_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

	_20db33eca_directiveEval(void) = default;


};
inline jule::Ptr<_1e1146c7a_JuleImporter> static__1e1023591_New(_20db32b77_CompileInfo);
inline jule::Slice<jule::Ptr<_20d84404d_ImportInfo>> _1e108779d_AllPackages(_1e1146c7a_JuleImporter*);
inline void _1e10a3214_SetModPath(_1e1146c7a_JuleImporter*, jule::Str);
inline jule::Str _1e10c5896_GetModPath(_1e1146c7a_JuleImporter*);
inline jule::Str _1e10d5411_ModById(_1e1146c7a_JuleImporter*, jule::I64);
inline jule::Ptr<_20d84404d_ImportInfo> _1e1128487_GetImport(_1e1146c7a_JuleImporter*, jule::Str);
struct _sx_20cb5014b_Ast_s_20b1bc016_Log {
	jule::Slice<jule::Ptr<_20cb5014b_Ast>> __jule_result_arg0;
	jule::Slice<_20b1bc016_Log> __jule_result_arg1;
};
inline _sx_20cb5014b_Ast_s_20b1bc016_Log _1e113c314_ImportPackage(_1e1146c7a_JuleImporter*, jule::Str, jule::Bool);
inline void _1e116654c_Imported(_1e1146c7a_JuleImporter*, jule::Ptr<_20d84404d_ImportInfo>);
struct _bool_s_20b1bc016_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_20b1bc016_Log> __jule_result_arg1;
};
inline _bool_s_20b1bc016_Log _1e116d411_isPassBuildDirectives(_1e1146c7a_JuleImporter*, jule::Ptr<_20cb5014b_Ast>&);
struct _1e1146c7a_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_20d84404d_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

	_1e1146c7a_JuleImporter(void) = default;


};
struct _1e1209348_OrderedDefines {
	jule::Slice<jule::Ptr<_20cba59dc_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_20d869eb9_Var>> _field_Globals;
	

	_1e1209348_OrderedDefines(void) = default;


};
inline jule::Bool _1c9637826_isCommonOrdered(jule::Slice<jule::Ptr<_20cba59dc_Struct>>&, jule::Ptr<_20cba59dc_Struct>);
inline jule::Bool _1c9640796_isCommonOrdered(jule::Slice<jule::Ptr<_20d869eb9_Var>>&, jule::Ptr<_20d869eb9_Var>);
inline void _1c9632e4d_orderCommon(jule::Slice<jule::Ptr<_20cba59dc_Struct>>&);
inline void _1c96330b3_orderCommon(jule::Slice<jule::Ptr<_20d869eb9_Var>>&);
inline void static__1e1007c6d_orderStructures(jule::Slice<jule::Ptr<_20cba59dc_Struct>>&);
inline void static__1e103add3_orderVars(jule::Slice<jule::Ptr<_20d869eb9_Var>>&);
struct _1e0ee3a17_defineOrderer {
	

	_1e0ee3a17_defineOrderer(void) = default;

	inline bool operator==(_1e0ee3a17_defineOrderer _other) { return true; }

	inline bool operator!=(_1e0ee3a17_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1e1335809_liveTable {
	jule::Slice<jule::Ptr<_20d869eb9_Var>> _field_vars;
	jule::Slice<jule::Ptr<_20d814749_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_20cba5db6_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_20d81a3ed_Trait>> _field_traits;
	

	_1e1335809_liveTable(void) = default;


};
inline void _1e136b93e_optimizeChild(jule::Ptr<_1e136b466_scopeDeadCode>, jule::Ptr<_20d825848_Scope>&);
inline void _1e136bbd6_optimizeBodyChildExceptional(jule::Ptr<_1e136b466_scopeDeadCode>, jule::Ptr<_20d825848_Scope>&);
inline void _1e136be6c_optimizeBodyChild(jule::Ptr<_1e136b466_scopeDeadCode>, jule::Ptr<_20d825848_Scope>&);
inline void _1e136c1e2_optimizeExprModel(jule::Ptr<_1e136b466_scopeDeadCode>, jule::Any&);
inline void _1e136c3bd_eliminateFollowed(_1e136b466_scopeDeadCode*);
inline void _1e136c643_pushGoto(jule::Ptr<_1e136b466_scopeDeadCode>, jule::Ptr<_20d828373_GotoSt>);
inline void _1e136c8b8_pushLabel(jule::Ptr<_1e136b466_scopeDeadCode>, jule::Ptr<_20d828087_Label>);
inline void _1e136cb3d_optimizeRangeIter(jule::Ptr<_1e136b466_scopeDeadCode>, jule::Ptr<_20d8274e8_RangeIter>);
inline void _1e136cdb3_optimizeWhileIter(jule::Ptr<_1e136b466_scopeDeadCode>, jule::Ptr<_20d826b13_WhileIter>);
inline void _1e136d138_optimizeInfIter(jule::Ptr<_1e136b466_scopeDeadCode>, jule::Ptr<_20d826690_InfIter>);
inline void _1e136d3ad_optimizeConditional(jule::Ptr<_1e136b466_scopeDeadCode>, jule::Ptr<_20d8263a4_Conditional>);
inline void _1e136d633_optimizeMatch(jule::Ptr<_1e136b466_scopeDeadCode>, jule::Ptr<_20d829594_Match>);
inline void _1e136d8a8_optimizeAssign(jule::Ptr<_1e136b466_scopeDeadCode>, jule::Ptr<_20d828b9d_Assign>);
inline void _1e136db2d_optimizeMultiAssign(jule::Ptr<_1e136b466_scopeDeadCode>, jule::Ptr<_20d829055_MultiAssign>);
inline void _1e136dda3_optimizeStmt(jule::Ptr<_1e136b466_scopeDeadCode>, jule::Any);
inline void _1e136e07e_optimizeStmts(jule::Ptr<_1e136b466_scopeDeadCode>);
struct _1e136b466_scopeDeadCode {
	jule::Ptr<_1e136b466_scopeDeadCode> _field_parent;
	jule::Ptr<_20d825848_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_20d828087_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_20d828373_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	_1e136b466_scopeDeadCode(void) = default;

	inline bool operator==(_1e136b466_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1e136b466_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1e13703c1_exprDeadCode static__1e13709ed_new(jule::Ptr<_1e136b466_scopeDeadCode>&);
inline void _1e1370c73_binary(_1e13703c1_exprDeadCode*, jule::Ptr<_20cc2c05d_BinopExprModel>);
inline void _1e1370ee8_unary(_1e13703c1_exprDeadCode*, jule::Ptr<_20d80da0c_UnaryExprModel>);
inline void _1e137126d_structureLit(_1e13703c1_exprDeadCode*, jule::Ptr<_20d80ddd6_StructLitExprModel>);
inline void _1e13714e3_allocStructure(_1e13703c1_exprDeadCode*, jule::Ptr<_20d80e0c3_AllocStructLitExprModel>);
inline void _1e1371768_casting(_1e13703c1_exprDeadCode*, jule::Ptr<_20d80e2b0_CastingExprModel>);
inline void _1e13719dd_args(_1e13703c1_exprDeadCode*, jule::Slice<jule::Any>&);
inline void _1e1371c63_funcCall(_1e13703c1_exprDeadCode*, jule::Ptr<_20d80e49c_FnCallExprModel>);
inline void _1e1371ed8_slice(_1e13703c1_exprDeadCode*, jule::Ptr<_20d80e689_SliceExprModel>);
inline void _1e137225d_array(_1e13703c1_exprDeadCode*, jule::Ptr<_20d810b0d_ArrayExprModel>);
inline void _1e13724d3_indexing(_1e13703c1_exprDeadCode*, jule::Ptr<_20d80e876_IndexingExprModel>);
inline void _1e1372758_anonFunc(_1e13703c1_exprDeadCode*, jule::Ptr<_20d80ea63_AnonFnExprModel>);
inline void _1e13729cd_mapExpr(_1e13703c1_exprDeadCode*, jule::Ptr<_20d80ee3c_MapExprModel>);
inline void _1e1372c53_slicing(_1e13703c1_exprDeadCode*, jule::Ptr<_20d810129_SlicingExprModel>);
inline void _1e1372ec8_traitSub(_1e13703c1_exprDeadCode*, jule::Ptr<_20d810316_TraitSubIdentExprModel>);
inline void _1e137324d_structureSub(_1e13703c1_exprDeadCode*, jule::Ptr<_20d810734_StructSubIdentExprModel>);
inline void _1e13734c3_commonSub(_1e13703c1_exprDeadCode*, jule::Ptr<_20d810ed7_CommonSubIdentExprModel>);
inline void _1e1373748_tuple(_1e13703c1_exprDeadCode*, jule::Ptr<_20d8111c4_TupleExprModel>);
inline void _1e13739bd_newCall(_1e13703c1_exprDeadCode*, jule::Ptr<_20d811977_BuiltinNewCallExprModel>);
inline void _1e1373c43_outCall(_1e13703c1_exprDeadCode*, jule::Ptr<_20d8113b1_BuiltinOutCallExprModel>);
inline void _1e1373eb8_outlnCall(_1e13703c1_exprDeadCode*, jule::Ptr<_20d81159d_BuiltinOutlnCallExprModel>);
inline void _1e137423d_panicCall(_1e13703c1_exprDeadCode*, jule::Ptr<_20d811b64_BuiltinPanicCallExprModel>);
inline void _1e13744b3_assertCall(_1e13703c1_exprDeadCode*, jule::Ptr<_20d811d51_BuiltinAssertCallExprModel>);
inline void _1e1374738_errorCall(_1e13703c1_exprDeadCode*, jule::Ptr<_20d812e51_BuiltinErrorCallExprModel>);
inline void _1e13749ad_makeCall(_1e13703c1_exprDeadCode*, jule::Ptr<_20d81203d_BuiltinMakeCallExprModel>);
inline void _1e1374c33_appendCall(_1e13703c1_exprDeadCode*, jule::Ptr<_20d81222a_BuiltinAppendCallExprModel>);
inline void _1e1374ea8_lenCall(_1e13703c1_exprDeadCode*, jule::Ptr<_20d812417_BuiltinLenCallExprModel>);
inline void _1e137522d_capCall(_1e13703c1_exprDeadCode*, jule::Ptr<_20d812604_BuiltinCapCallExprModel>);
inline void _1e13754a3_cloneCall(_1e13703c1_exprDeadCode*, jule::Ptr<_20d81178a_BuiltinCloneCallExprModel>);
inline void _1e1375728_deleteCall(_1e13703c1_exprDeadCode*, jule::Ptr<_20d810503_BuiltinDeleteCallExprModel>);
inline void _1e137599d_sizeof(_1e13703c1_exprDeadCode*, jule::Ptr<_20d81313d_SizeofExprModel>);
inline void _1e1375c23_alignof(_1e13703c1_exprDeadCode*, jule::Ptr<_20d81332a_AlignofExprModel>);
inline void _1e1375e98_integratedToStr(_1e13703c1_exprDeadCode*, jule::Ptr<_20d813704_IntegratedToStrExprModel>);
inline void _1e137621d_free(_1e13703c1_exprDeadCode*, jule::Ptr<_20d813acd_FreeExprModel>);
inline void _1e1376493_backendEmit(_1e13703c1_exprDeadCode*, jule::Ptr<_20d8138e1_BackendEmitExprModel>);
inline void _1e1376718_optimize(_1e13703c1_exprDeadCode*, jule::Any&);
struct _1e13703c1_exprDeadCode {
	jule::Ptr<_1e136b466_scopeDeadCode> _field_s;
	

	_1e13703c1_exprDeadCode(void) = default;

	inline bool operator==(_1e13703c1_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1e13703c1_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _20da4b5eb_UnsafeBinopExprModel {
	jule::Ptr<_20cc2c05d_BinopExprModel> _field_Node;
	

	_20da4b5eb_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_20da4b5eb_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_20da4b5eb_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _20da4b91a_UnsafeIndexingExprModel {
	jule::Ptr<_20d80e876_IndexingExprModel> _field_Node;
	

	_20da4b91a_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_20da4b91a_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_20da4b91a_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _20da4bcd3_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_20d80e689_SliceExprModel> _field_Elems;
	

	_20da4bcd3_PushToSliceExprModel(void) = default;

	inline bool operator==(_20da4bcd3_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_20da4bcd3_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _20da4c399_MutSlicingExprModel {
	jule::Ptr<_20b4e5581_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_20da4c399_MutSlicingExprModel(void) = default;

	inline bool operator==(_20da4c399_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_20da4c399_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _20da4c740_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_20da4c740_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_20da4c740_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20da4c740_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20da4d8ea_scopeOptimizer> static__20da4de17_new(jule::Ptr<_20d825848_Scope>);
inline void _20da4e18c_setCurrentStmt(_20da4d8ea_scopeOptimizer*, jule::Any);
inline void _20da4e412_optimizeData(_20da4d8ea_scopeOptimizer*, jule::Ptr<_20d8b2891_Data>);
inline void _20da4e687_optimizeVar(_20da4d8ea_scopeOptimizer*, jule::Ptr<_20d869eb9_Var>);
inline void _20da4e90c_optimizeConditional(_20da4d8ea_scopeOptimizer*, jule::Ptr<_20d8263a4_Conditional>);
inline void _20da4ece7_buildDefaultConstatTrueCase(_20da4d8ea_scopeOptimizer*, jule::Ptr<_20d82a0de_Case>, jule::I64&, jule::Ptr<_20d829594_Match>&);
inline void _20da50006_optimizeMatch(_20da4d8ea_scopeOptimizer*, jule::Ptr<_20d829594_Match>);
inline void _20da5027b_optimizeRangeIter(_20da4d8ea_scopeOptimizer*, jule::Ptr<_20d8274e8_RangeIter>);
inline void _20da50501_optimizeWhileIter(_20da4d8ea_scopeOptimizer*, jule::Ptr<_20d826b13_WhileIter>);
inline jule::Bool _20da5080e_substr(_20da4d8ea_scopeOptimizer*, jule::Ptr<_20d828b9d_Assign>);
inline jule::Bool _20da50b1c_strInsert(_20da4d8ea_scopeOptimizer*, jule::Ptr<_20d828b9d_Assign>);
inline jule::Bool _20da50e2a_strAssign(_20da4d8ea_scopeOptimizer*, jule::Ptr<_20d828b9d_Assign>);
inline void _20da511a0_optimizeAssign(_20da4d8ea_scopeOptimizer*, jule::Ptr<_20d828b9d_Assign>);
inline void _20da51425_optimizeMultiAssign(_20da4d8ea_scopeOptimizer*, jule::Ptr<_20d829055_MultiAssign>);
inline void _20da5169a_optimizeRet(_20da4d8ea_scopeOptimizer*, jule::Ptr<_20d82aa18_RetSt>);
inline void _20da51920_optimizeStmt(_20da4d8ea_scopeOptimizer*, jule::Any);
inline void _20da51b95_optimizeChild(_20da4d8ea_scopeOptimizer*, jule::Ptr<_20d825848_Scope>);
inline void _20da51d71_optimize(_20da4d8ea_scopeOptimizer*);
struct _20da4d8ea_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_20d825848_Scope> _field_scope;
	

	_20da4d8ea_scopeOptimizer(void) = default;

	inline bool operator==(_20da4d8ea_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_20da4d8ea_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__20da544c2_optimize(jule::Any&);
inline jule::Bool _20da547d0_strCond(_20da53eb6_exprOptimizer*, jule::Ptr<_20cc2c05d_BinopExprModel>);
inline void _20da54a55_binary(_20da53eb6_exprOptimizer*, jule::Ptr<_20cc2c05d_BinopExprModel>);
inline void _20da54cca_unary(_20da53eb6_exprOptimizer*, jule::Ptr<_20d80da0c_UnaryExprModel>);
inline void _20da55050_structureLit(_20da53eb6_exprOptimizer*, jule::Ptr<_20d80ddd6_StructLitExprModel>);
inline void _20da552c5_allocStructure(_20da53eb6_exprOptimizer*, jule::Ptr<_20d80e0c3_AllocStructLitExprModel>);
inline void _20da5554a_casting(_20da53eb6_exprOptimizer*, jule::Ptr<_20d80e2b0_CastingExprModel>);
inline void _20da557c0_args(_20da53eb6_exprOptimizer*, jule::Slice<jule::Any>&);
inline void _20da55a45_scope(_20da53eb6_exprOptimizer*, jule::Ptr<_20d825848_Scope>&);
inline void _20da55cba_funcCall(_20da53eb6_exprOptimizer*, jule::Ptr<_20d80e49c_FnCallExprModel>);
inline void _20da56040_slice(_20da53eb6_exprOptimizer*, jule::Ptr<_20d80e689_SliceExprModel>);
inline void _20da562b5_array(_20da53eb6_exprOptimizer*, jule::Ptr<_20d810b0d_ArrayExprModel>);
inline void _20da5653a_indexing(_20da53eb6_exprOptimizer*, jule::Ptr<_20d80e876_IndexingExprModel>);
inline void _20da567b0_anonFunc(_20da53eb6_exprOptimizer*, jule::Ptr<_20d80ea63_AnonFnExprModel>);
inline void _20da56a35_mapExpr(_20da53eb6_exprOptimizer*, jule::Ptr<_20d80ee3c_MapExprModel>);
inline void _20da56caa_slicing(_20da53eb6_exprOptimizer*, jule::Ptr<_20d810129_SlicingExprModel>);
inline void _20da57030_traitSub(_20da53eb6_exprOptimizer*, jule::Ptr<_20d810316_TraitSubIdentExprModel>);
inline void _20da572a5_structureSub(_20da53eb6_exprOptimizer*, jule::Ptr<_20d810734_StructSubIdentExprModel>);
inline void _20da5752a_commonSub(_20da53eb6_exprOptimizer*, jule::Ptr<_20d810ed7_CommonSubIdentExprModel>);
inline void _20da577a0_tuple(_20da53eb6_exprOptimizer*, jule::Ptr<_20d8111c4_TupleExprModel>);
inline void _20da57a25_newCall(_20da53eb6_exprOptimizer*, jule::Ptr<_20d811977_BuiltinNewCallExprModel>);
inline void _20da57c9a_outCall(_20da53eb6_exprOptimizer*, jule::Ptr<_20d8113b1_BuiltinOutCallExprModel>);
inline void _20da58020_outlnCall(_20da53eb6_exprOptimizer*, jule::Ptr<_20d81159d_BuiltinOutlnCallExprModel>);
inline void _20da58295_panicCall(_20da53eb6_exprOptimizer*, jule::Ptr<_20d811b64_BuiltinPanicCallExprModel>);
inline void _20da5851a_assertCall(_20da53eb6_exprOptimizer*, jule::Ptr<_20d811d51_BuiltinAssertCallExprModel>);
inline void _20da58790_errorCall(_20da53eb6_exprOptimizer*, jule::Ptr<_20d812e51_BuiltinErrorCallExprModel>);
inline void _20da58a15_makeCall(_20da53eb6_exprOptimizer*, jule::Ptr<_20d81203d_BuiltinMakeCallExprModel>);
inline void _20da58c8a_appendCall(_20da53eb6_exprOptimizer*, jule::Ptr<_20d81222a_BuiltinAppendCallExprModel>);
inline void _20da59010_lenCall(_20da53eb6_exprOptimizer*, jule::Ptr<_20d812417_BuiltinLenCallExprModel>);
inline void _20da59285_capCall(_20da53eb6_exprOptimizer*, jule::Ptr<_20d812604_BuiltinCapCallExprModel>);
inline void _20da5950a_cloneCall(_20da53eb6_exprOptimizer*, jule::Ptr<_20d81178a_BuiltinCloneCallExprModel>);
inline void _20da59780_deleteCall(_20da53eb6_exprOptimizer*, jule::Ptr<_20d810503_BuiltinDeleteCallExprModel>);
inline void _20da59a05_sizeof(_20da53eb6_exprOptimizer*, jule::Ptr<_20d81313d_SizeofExprModel>);
inline void _20da59c7a_alignof(_20da53eb6_exprOptimizer*, jule::Ptr<_20d81332a_AlignofExprModel>);
inline void _20da5a000_integratedToStr(_20da53eb6_exprOptimizer*, jule::Ptr<_20d813704_IntegratedToStrExprModel>);
inline void _20da5a275_free(_20da53eb6_exprOptimizer*, jule::Ptr<_20d813acd_FreeExprModel>);
inline void _20da5a4ea_backendEmit(_20da53eb6_exprOptimizer*, jule::Ptr<_20d8138e1_BackendEmitExprModel>);
inline void _20da5a6c6_do(_20da53eb6_exprOptimizer*);
struct _20da53eb6_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	_20da53eb6_exprOptimizer(void) = default;

	inline bool operator==(_20da53eb6_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_20da53eb6_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e12723e4_Optimizer> static__1e1291aea_New(jule::Ptr<_1e1012d55_IR>&);
inline void _1e12a006a_optimizeGlobal(_1e12723e4_Optimizer*, jule::Ptr<_20d869eb9_Var>&);
inline void _1e12ce132_optimizeFunction(_1e12723e4_Optimizer*, jule::Ptr<_20d814370_Fn>&);
inline void _1e12dd916_optimizeStruct(_1e12723e4_Optimizer*, jule::Ptr<_20cba59dc_Struct>&);
inline void _1e12e6b1c_optimizeGlobals(_1e12723e4_Optimizer*, jule::Ptr<_20d846ea7_Package>&);
inline void _1e1306863_optimizeFunctions(_1e12723e4_Optimizer*, jule::Ptr<_20d846ea7_Package>&);
inline void _1e13080a1_optimizeStructs(_1e12723e4_Optimizer*, jule::Ptr<_20d846ea7_Package>&);
inline void _1e12a3612_optimizePackage(_1e12723e4_Optimizer*, jule::Ptr<_20d846ea7_Package>&);
inline void _1e12d1e6a_Optimize(_1e12723e4_Optimizer*);
struct _1e12723e4_Optimizer {
	jule::Ptr<_1e1012d55_IR> _field_ir;
	

	_1e12723e4_Optimizer(void) = default;

	inline bool operator==(_1e12723e4_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1e12723e4_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1e1378eac_Reset(void);
inline void static__1e137a101_Print(jule::Str, jule::Str);
struct _1e1379e14_AnsiEscape {
	

	_1e1379e14_AnsiEscape(void) = default;

	inline bool operator==(_1e1379e14_AnsiEscape _other) { return true; }

	inline bool operator!=(_1e1379e14_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1e137b685_LogFlat(_20b1bc016_Log&);
inline void static__1e137b894_LogError(_20b1bc016_Log&);
inline void static__1e137baa3_Log(_20b1bc016_Log&);
inline void static__1e137bcb2_PrintLogs(jule::Slice<_20b1bc016_Log>&);
struct _1e137b432_Logger {
	

	_1e137b432_Logger(void) = default;

	inline bool operator==(_1e137b432_Logger _other) { return true; }

	inline bool operator!=(_1e137b432_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1e1aa57b5_Unix(_1e1aa540d_AbsTime*);
struct _1e1aa540d_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	_1e1aa540d_AbsTime(void) = default;

	inline bool operator==(_1e1aa540d_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1e1aa540d_AbsTime _other) { return !this->operator==(_other); }


};
inline _1e1aa5aa1_Time static__1e1aa5e47_Unix(jule::U64);
inline _1e1aa5aa1_Time static__1e1aa6145_Now(void);
inline jule::U64 _1e1aa6596_Unix(_1e1aa5aa1_Time*);
inline jule::U64 _1e1aa680a_Day(_1e1aa5aa1_Time*);
inline jule::U64 _1e1aa6a6e_Month(_1e1aa5aa1_Time*);
inline jule::U64 _1e1aa6cd3_Year(_1e1aa5aa1_Time*);
inline jule::U64 _1e1aa7047_Second(_1e1aa5aa1_Time*);
inline jule::U64 _1e1aa72ab_Minute(_1e1aa5aa1_Time*);
inline jule::U64 _1e1aa7520_Hour(_1e1aa5aa1_Time*);
inline _1e1aa540d_AbsTime _1e1aa7784_Abs(_1e1aa5aa1_Time*);
struct _1e1aa5aa1_Time {
	jule::U64 _field_sec = 0;
	

	_1e1aa5aa1_Time(void) = default;

	inline bool operator==(_1e1aa5aa1_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1e1aa5aa1_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e1a018ba_scopeCoder> static__1e1a01ed6_new(jule::Ptr<_1ba6a5e14_ObjectCoder>&);
inline void _1e1a0225b_rangeIndexIter(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d8274e8_RangeIter>&);
inline void _1e1a024d1_rangeHashmapIter(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d8274e8_RangeIter>&);
inline void _1e1a02756_ifCase(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d825c44_If>);
inline void _1e1a029cb_conditional(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d8263a4_Conditional>);
inline void _1e1a02c51_infIter(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d826690_InfIter>);
inline void _1e1a02ec6_whileIter(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d826b13_WhileIter>);
inline void _1e1a0324b_rangeIter(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d8274e8_RangeIter>);
inline void _1e1a034c1_cont(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d8278e4_ContSt>);
inline void _1e1a03746_label(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d828087_Label>);
inline void _1e1a039bb_gotoSt(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d828373_GotoSt>);
inline void _1e1a03c41_postfix(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d82872a_Postfix>);
inline void _1e1a03eb6_assign(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d828b9d_Assign>);
inline void _1e1a0423b_mapLookupAssign(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d829055_MultiAssign>&);
inline void _1e1a044b1_multiAssignTup(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d829055_MultiAssign>&);
inline void _1e1a04736_multiAssignFn(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d829055_MultiAssign>&);
inline void _1e1a049ab_multiAssign(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d829055_MultiAssign>);
inline jule::Fn<void(void)> _1e1a04cb9_matchExpr(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d829594_Match>);
inline void _1e1a050d8_case(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d829594_Match>, jule::Ptr<_20d82a0de_Case>);
inline void _1e1a0535d_matchSt(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d829594_Match>);
inline void _1e1a055d3_fallSt(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d82a694_FallSt>);
inline void _1e1a05858_breakSt(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d827c9b_BreakSt>);
inline void _1e1a05acd_setResult(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d82aa18_RetSt>);
inline void _1e1a05d53_retSt(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d82aa18_RetSt>);
inline void _1e1a060c8_var(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d869eb9_Var>);
inline void _1e1a0634d_st(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Any);
inline void _1e1a065c3_scopeStmts(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d825848_Scope>&);
inline void _1e1a06848_scope(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d825848_Scope>);
inline void _1e1a06abd_funcScope(jule::Ptr<_1e1a018ba_scopeCoder>, jule::Ptr<_20d814749_FnIns>);
struct _1e1a018ba_scopeCoder {
	jule::Ptr<_1ba6a5e14_ObjectCoder> _field_oc;
	

	_1e1a018ba_scopeCoder(void) = default;

	inline bool operator==(_1e1a018ba_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1e1a018ba_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e1a09560_exprCoder> static__1e1a0995b_new(jule::Ptr<_1ba6a5e14_ObjectCoder>&);
inline void _1e1a09bd1_string(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20cc572ec_Const>&);
inline void _1e1a09e56_boolean(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20cc572ec_Const>&);
inline void _1e1a0a132_nilLit(jule::Ptr<_1e1a09560_exprCoder>);
inline jule::Bool _1e1a0a440_ftoaSpecialCases(jule::Ptr<_1e1a09560_exprCoder>, jule::F64&);
inline void _1e1a0a6b5_float32(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20cc572ec_Const>&);
inline void _1e1a0a93a_float64(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20cc572ec_Const>&);
inline void _1e1a0abb0_constant(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20cc572ec_Const>);
inline void _1e1a0b078_divByZeroBinary(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20b4e5581_Token>&, jule::Ptr<_20cbed66c_OperandExprModel>&, jule::Ptr<_20cbed66c_OperandExprModel>&);
inline void _1e1a0b2ed_unsafeBinary(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20cc2c05d_BinopExprModel>);
inline void _1e1a0b573_binary(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20cc2c05d_BinopExprModel>);
inline void _1e1a0b7e8_var(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d869eb9_Var>);
inline void _1e1a0ba6d_structureIns(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20cba5db6_StructIns>);
inline void _1e1a0bce3_unary(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d80da0c_UnaryExprModel>);
inline void _1e1a0c068_structureLit(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d80ddd6_StructLitExprModel>);
inline void _1e1a0c2dd_allocStructure(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d80e0c3_AllocStructLitExprModel>);
inline void _1e1a0c563_casting(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d80e2b0_CastingExprModel>);
inline void _1e1a0c7d8_args(jule::Ptr<_1e1a09560_exprCoder>, jule::Slice<jule::Any>);
inline void _1e1a0ca5d_modelForCall(jule::Ptr<_1e1a09560_exprCoder>, jule::Any);
inline void _1e1a0ccd3_pushCallInf(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d80e49c_FnCallExprModel>&);
inline jule::Bool _1e1a0d0e1_isWrapped(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d80e49c_FnCallExprModel>&);
inline void _1e1a0d366_pureFuncCall(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d80e49c_FnCallExprModel>&);
inline void _1e1a0d5db_coFuncCall(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d80e49c_FnCallExprModel>&);
inline void _1e1a0d861_funcCall(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d80e49c_FnCallExprModel>);
inline void _1e1a0dad6_slice(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d80e689_SliceExprModel>);
inline void _1e1a0dd5b_indexing(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d80e876_IndexingExprModel>);
inline void _1e1a0e0d1_unsafeIndexing(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20da4b91a_UnsafeIndexingExprModel>);
inline void _1e1a0e356_anonFunc(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d80ea63_AnonFnExprModel>);
inline void _1e1a0e5cb_mapExpr(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d80ee3c_MapExprModel>);
inline void _1e1a0e851_slicing(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d810129_SlicingExprModel>);
inline void _1e1a0eac6_traitSub(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d810316_TraitSubIdentExprModel>);
inline void _1e1a0ed4b_structureSub(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d810734_StructSubIdentExprModel>);
inline void _1e1a100c1_commonIdent(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d810cea_CommonIdentExprModel>);
inline void _1e1a10346_commonSub(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d810ed7_CommonSubIdentExprModel>);
inline void _1e1a105bb_array(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d810b0d_ArrayExprModel>);
inline void _1e1a10841_funcInsCommon(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d814749_FnIns>);
inline void _1e1a10ab6_funcIns(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d814749_FnIns>);
inline void _1e1a10d3b_tuple(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d8111c4_TupleExprModel>);
inline void _1e1a110b1_newCall(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d811977_BuiltinNewCallExprModel>);
inline void _1e1a11336_outCall(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d8113b1_BuiltinOutCallExprModel>);
inline void _1e1a115ab_outlnCall(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d81159d_BuiltinOutlnCallExprModel>);
inline void _1e1a11831_panicCall(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d811b64_BuiltinPanicCallExprModel>);
inline void _1e1a11aa6_assertCall(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d811d51_BuiltinAssertCallExprModel>);
inline void _1e1a11d2b_errorCall(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d812e51_BuiltinErrorCallExprModel>);
inline void _1e1a120a1_copyCall(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d812c64_BuiltinCopyCallExprModel>);
inline void _1e1a12326_lenCall(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d812417_BuiltinLenCallExprModel>);
inline void _1e1a1259b_capCall(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d812604_BuiltinCapCallExprModel>);
inline void _1e1a12821_deleteCall(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d810503_BuiltinDeleteCallExprModel>);
inline void _1e1a12a96_makeCallSlice(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d81203d_BuiltinMakeCallExprModel>&);
inline void _1e1a12d1b_makeCallStr(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d81203d_BuiltinMakeCallExprModel>&);
inline void _1e1a13091_makeCall(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d81203d_BuiltinMakeCallExprModel>);
inline void _1e1a13316_pushToSlice(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20da4bcd3_PushToSliceExprModel>);
inline void _1e1a1358b_appendCall(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d81222a_BuiltinAppendCallExprModel>);
inline void _1e1a13811_cloneCall(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d81178a_BuiltinCloneCallExprModel>);
inline void _1e1a13a86_sizeof(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d81313d_SizeofExprModel>);
inline void _1e1a13d0b_alignof(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d81332a_AlignofExprModel>);
inline jule::Str _1e1a14119_runeLit(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d813517_RuneExprModel>);
inline void _1e1a1438e_structureStatic(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d810921_StructStaticIdentExprModel>);
inline void _1e1a14614_integratedToStr(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d813704_IntegratedToStrExprModel>);
inline void _1e1a14889_backendEmit(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d8138e1_BackendEmitExprModel>);
inline void _1e1a14b0e_free(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d813acd_FreeExprModel>);
inline void _1e1a14d84_mutSlicing(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20da4c399_MutSlicingExprModel>);
inline void _1e1a15109_strInsertBegin(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20da4c740_StrInsertBeginExprModel>);
inline void _1e1a1537e_model(jule::Ptr<_1e1a09560_exprCoder>, jule::Any);
inline void _1e1a15604_expr(jule::Ptr<_1e1a09560_exprCoder>, jule::Any);
inline void _1e1a15879_val(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d8b3919_Value>);
inline void _1e1a15aee_initExpr(jule::Ptr<_1e1a09560_exprCoder>, jule::Ptr<_20d8e3680_TypeKind>);
struct _1e1a09560_exprCoder {
	jule::Ptr<_1ba6a5e14_ObjectCoder> _field_oc;
	

	_1e1a09560_exprCoder(void) = default;

	inline bool operator==(_1e1a09560_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1e1a09560_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1e1a18409_cloneFuncDecl(jule::Ptr<_20cba59dc_Struct>&);
inline jule::Str static__1e1a186a1_cloneFuncDef(jule::Ptr<_20cba59dc_Struct>&);
struct _1e1a1810c_deriveCoder {
	

	_1e1a1810c_deriveCoder(void) = default;

	inline bool operator==(_1e1a1810c_deriveCoder _other) { return true; }

	inline bool operator!=(_1e1a1810c_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e1a19581_TestCoder> static__1e1a19a04_New(jule::Ptr<_1ba6a5e14_ObjectCoder>&);
inline jule::Ptr<_20d84404d_ImportInfo> _1e1a19c68_findTestingPackage(jule::Ptr<_1e1a19581_TestCoder>);
inline void _1e1a19edd_appendTest(jule::Ptr<_1e1a19581_TestCoder>, jule::Ptr<_20d814749_FnIns>);
inline void _1e1a1a263_appendPackageTests(jule::Ptr<_1e1a19581_TestCoder>, jule::Ptr<_20d846ea7_Package>&);
inline jule::Bool _1e1a1a4c7_readyTestingPackage(jule::Ptr<_1e1a19581_TestCoder>);
inline void _1e1a1a6a3_callTmReset(jule::Ptr<_1e1a19581_TestCoder>);
inline void _1e1a1a87e_callTmFailed(jule::Ptr<_1e1a19581_TestCoder>);
inline void _1e1a1aa5a_callTmSkipped(jule::Ptr<_1e1a19581_TestCoder>);
inline void _1e1a1ac36_Serialize(jule::Ptr<_1e1a19581_TestCoder>);
struct _1e1a19581_TestCoder {
	jule::Ptr<_20cba5db6_StructIns> _field_t;
	jule::Ptr<_20d814370_Fn> _field_tmReset;
	jule::Ptr<_20d814370_Fn> _field_tmFailed;
	jule::Ptr<_20d814370_Fn> _field_tmSkipped;
	jule::Ptr<_1ba6a5e14_ObjectCoder> _field_oc;
	

	_1e1a19581_TestCoder(void) = default;

	inline bool operator==(_1e1a19581_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1e1a19581_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1e1a1c199_toOut(jule::Str&, jule::Uintptr);
inline jule::Str static__1e1a1c584_toLocal(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__1e1a1c82b_func(jule::Ptr<_20d814370_Fn>&);
inline jule::Str static__1e1a1cac3_funcIns(jule::Ptr<_20d814749_FnIns>&);
inline jule::Str static__1e1a1cd6a_traitDecl(jule::Ptr<_20d81a3ed_Trait>);
inline jule::Str static__1e1a1d112_param(jule::Ptr<_20d814183_Param>&);
inline jule::Str static__1e1a1d3a9_structure(jule::Ptr<_20cba59dc_Struct>&);
inline jule::Str static__1e1a1d651_structureIns(jule::Ptr<_20cba5db6_StructIns>&);
inline jule::Str static__1e1a1d8e8_field(jule::Ptr<_20cb79a49_Field>&);
inline jule::Str static__1e1a1db90_var(jule::Ptr<_20d869eb9_Var>);
inline jule::Str static__1e1a1de37_iterBegin(jule::Uintptr);
inline jule::Str static__1e1a1e1ce_iterEnd(jule::Uintptr);
inline jule::Str static__1e1a1e476_iterNext(jule::Uintptr);
inline jule::Str static__1e1a1e71d_label(jule::Str&);
inline jule::Str static__1e1a1e9b5_matchEnd(jule::Uintptr);
inline jule::Str static__1e1a1ec5c_caseBegin(jule::Uintptr);
struct _1e1a1bbd2_identCoder {
	

	_1e1a1bbd2_identCoder(void) = default;

	inline bool operator==(_1e1a1bbd2_identCoder _other) { return true; }

	inline bool operator!=(_1e1a1bbd2_identCoder _other) { return !this->operator==(_other); }


};
struct _1e1a4e473_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	_1e1a4e473_SerializationInfo(void) = default;

	inline bool operator==(_1e1a4e473_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1e1a4e473_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1e1a24987_traitHash {
	jule::Ptr<_20d81a3ed_Trait> _field_t;
	jule::Ptr<_20cba5db6_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	_1e1a24987_traitHash(void) = default;

	inline bool operator==(_1e1a24987_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1e1a24987_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1ba6aa6ee_Str(_1ba6aa446_customType*);
inline jule::Bool _1ba6aaa0c_Equals(jule::Ptr<_1ba6aa446_customType>, jule::Ptr<_20d8e3680_TypeKind>);
struct _1ba6aa446_customType {
	jule::Str _field_kind;
	

	_1ba6aa446_customType(void) = default;

	inline bool operator==(_1ba6aa446_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ba6aa446_customType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1ba6ab25a_toType(jule::Str);
inline jule::Str static__1ba6ab502_prim(jule::Ptr<_20d8e83cc_Prim>);
inline jule::Str static__1ba6ab799_tuple(jule::Ptr<_20d8ed14b_Tuple>);
inline jule::Str static__1ba6aba41_asSptr(jule::Str);
inline jule::Str static__1ba6abcd8_asPtr(jule::Str);
inline jule::Str static__1ba6ac080_sptr(jule::Ptr<_20d8ebb61_Sptr>);
inline jule::Str static__1ba6ac327_ptr(jule::Ptr<_20d9001c5_Ptr>);
inline jule::Str static__1ba6ac5be_enumDecl(jule::Ptr<_20d81b0ad_Enum>);
inline jule::Str static__1ba6ac866_typeEnumDecl(jule::Ptr<_20d81b82d_TypeEnum>);
inline jule::Str static__1ba6acb0d_asSlice(jule::Ptr<_20d8e3680_TypeKind>);
inline jule::Str static__1ba6acda5_slice(jule::Ptr<_20d8ec5bd_Slc>);
inline jule::Str static__1ba6ad14c_mapType(jule::Ptr<_20d8edb74_Map>);
inline jule::Str static__1ba6ad3e4_traitIdent(jule::Str);
inline jule::Str static__1ba6ad68b_traitDecl(jule::Ptr<_20d81a3ed_Trait>);
inline jule::Str static__1ba6ad933_structure(jule::Ptr<_20cba59dc_Struct>);
inline jule::Str static__1ba6adbca_structureIns(jule::Ptr<_20cba5db6_StructIns>);
inline jule::Str static__1ba6ade72_array(jule::Ptr<_20d8ee768_Arr>);
inline jule::Str static__1ba6ae4b1_paramIns(jule::Ptr<_20d81455c_ParamIns>&);
inline void static__1ba6aea11_funcInsResult(jule::Str&, jule::Ptr<_20d814749_FnIns>&);
inline jule::Str static__1ba6aeca8_anonFunc(jule::Ptr<_20d814749_FnIns>);
inline jule::Str static__1ba6b0050_func(jule::Ptr<_20d814749_FnIns>);
inline jule::Str static__1ba6b02e7_kind(jule::Ptr<_20d8e3680_TypeKind>);
struct _1ba6aac2c_typeCoder {
	

	_1ba6aac2c_typeCoder(void) = default;

	inline bool operator==(_1ba6aac2c_typeCoder _other) { return true; }

	inline bool operator!=(_1ba6aac2c_typeCoder _other) { return !this->operator==(_other); }


};
inline void static__1ba6b2b35_ptr(jule::Str&, jule::Ptr<_20d9001c5_Ptr>);
inline void static__1ba6b2ddd_sptr(jule::Str&, jule::Ptr<_20d8ebb61_Sptr>);
inline void static__1ba6b3196_mapType(jule::Str&, jule::Ptr<_20d8edb74_Map>);
inline void static__1ba6b344e_slice(jule::Str&, jule::Ptr<_20d8ec5bd_Slc>);
inline void static__1ba6b3707_arr(jule::Str&, jule::Ptr<_20d8ee768_Arr>);
inline void static__1ba6b39b0_func(jule::Str&, jule::Ptr<_20d814749_FnIns>);
inline void static__1ba6b3c68_tup(jule::Str&, jule::Ptr<_20d8ed14b_Tuple>);
inline void static__1ba6b4021_codeMut(jule::Str&, jule::Ptr<_20d8e3680_TypeKind>&);
inline void static__1ba6b42c9_codeMut1(jule::Str&, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Str static__1ba6b4571_code(jule::Ptr<_20d8e3680_TypeKind>&);
struct _1ba6b265c_resultCoder {
	

	_1ba6b265c_resultCoder(void) = default;

	inline bool operator==(_1ba6b265c_resultCoder _other) { return true; }

	inline bool operator!=(_1ba6b265c_resultCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1c9bd6743_Name(_1c9bd637a_Flag*);
inline jule::Str _1c9bd6886_What(_1c9bd637a_Flag*);
inline void _1c9bd69c9_Reset(_1c9bd637a_Flag*);
inline jule::I32 _1c9bd6b1c_Short(_1c9bd637a_Flag*);
struct _1c9bd637a_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	_1c9bd637a_Flag(void) = default;

	inline bool operator==(_1c9bd637a_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c9bd637a_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1c9bd88bb_Name(_1c9bda12b_Flag*);
inline jule::Str _1c9bd9ba8_What(_1c9bda12b_Flag*);
inline void _1c9bda417_Reset(_1c9bda12b_Flag*);
inline jule::I32 _1c9bda549_Short(_1c9bda12b_Flag*);
struct _1c9bda12b_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	_1c9bda12b_Flag(void) = default;

	inline bool operator==(_1c9bda12b_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c9bda12b_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1c9bdc1d8_Name(_1c9bdd948_Flag*);
inline jule::Str _1c9bdd4c5_What(_1c9bdd948_Flag*);
inline void _1c9bddc34_Reset(_1c9bdd948_Flag*);
inline jule::I32 _1c9bddd66_Short(_1c9bdd948_Flag*);
struct _1c9bdd948_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	_1c9bdd948_Flag(void) = default;

	inline bool operator==(_1c9bdd948_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c9bdd948_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1c9be0a49_Name(_1c9be22a9_Flag*);
inline jule::Str _1c9be1d36_What(_1c9be22a9_Flag*);
inline void _1c9be2595_Reset(_1c9be22a9_Flag*);
inline jule::I32 _1c9be26c7_Short(_1c9be22a9_Flag*);
struct _1c9be22a9_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	_1c9be22a9_Flag(void) = default;

	inline bool operator==(_1c9be22a9_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c9be22a9_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1c9be4366_Name(_1c9be5ac6_Flag*);
inline jule::Str _1c9be5653_What(_1c9be5ac6_Flag*);
inline void _1c9be5db2_Reset(_1c9be5ac6_Flag*);
inline jule::I32 _1c9be5ee4_Short(_1c9be5ac6_Flag*);
struct _1c9be5ac6_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	_1c9be5ac6_Flag(void) = default;

	inline bool operator==(_1c9be5ac6_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c9be5ac6_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ba7150a5_FlagSet> static__1ba715391_New(void);
inline jule::Trait<_1ba713636_CommonFlag> _1ba715825_FindFlag(_1ba7150a5_FlagSet*, jule::Str);
inline jule::Trait<_1ba713636_CommonFlag> _1ba715b33_FindFlagShort(_1ba7150a5_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1ba713636_CommonFlag>> _1ba715d97_Flags(_1ba7150a5_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1ba7161a5_Parse(_1ba7150a5_FlagSet*, jule::Slice<jule::Str>);
inline void _1ba716381_Reset(_1ba7150a5_FlagSet*);
inline jule::Ptr<_1c9be5ac6_Flag> _1c9c6c3ab_addFlagCommon(_1ba7150a5_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1c9be22a9_Flag> _1c9c75caa_addFlagCommon(_1ba7150a5_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1c9c6a332_AddVar(_1ba7150a5_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1c9c73c64_AddVar(_1ba7150a5_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1ba7150a5_FlagSet {
	jule::Slice<jule::Trait<_1ba713636_CommonFlag>> _field_flags;
	

	_1ba7150a5_FlagSet(void) = default;


};
inline jule::Str _20cb70842_Str(_20cba5db6_StructIns*);
inline jule::Bool _20cb7b71b_Equals(jule::Ptr<_20cba5db6_StructIns>, jule::Ptr<_20d8e3680_TypeKind>);
inline jule::Bool _20cb7c871_Same(_20cba5db6_StructIns*, jule::Ptr<_20cba5db6_StructIns>);
inline jule::Ptr<_20d814370_Fn> _20cb7ebc5_FindMethod(_20cba5db6_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_20cba5bc9_FieldIns> _20cb80ee5_FindField(_20cba5db6_StructIns*, jule::Str);
inline jule::Ptr<_20d869eb9_Var> _20cb23163_FindStatic(_20cba5db6_StructIns*, jule::Str);
struct _20cba5db6_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_20cba59dc_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_20d8e1e53_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_20cba5bc9_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_20d869eb9_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_20d814370_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_20d8156e5_ReferenceStack> _field_Refers;
	_20cb8218e_Operators _field_Operators;
	

	_20cba5db6_StructIns(void) = default;


};
inline jule::Ptr<_1e1335b06_ObjectDeadCode> static__1e13360ce_new(jule::Ptr<_1e1012d55_IR>&);
inline jule::Bool _1c9669616_isLive(jule::Ptr<_1e1335b06_ObjectDeadCode>, jule::Ptr<_20d81a3ed_Trait>&);
inline jule::Bool _1c966e64e_isLive(jule::Ptr<_1e1335b06_ObjectDeadCode>, jule::Ptr<_20d814749_FnIns>&);
inline jule::Bool _1c9677091_isLive(jule::Ptr<_1e1335b06_ObjectDeadCode>, jule::Ptr<_20cba5db6_StructIns>&);
inline jule::Bool _1c967cbbd_isLive(jule::Ptr<_1e1335b06_ObjectDeadCode>, jule::Ptr<_20d869eb9_Var>&);
inline void _1c9669979_pushLive(jule::Ptr<_1e1335b06_ObjectDeadCode>, jule::Ptr<_20d81a3ed_Trait>);
inline void _1c9670012_pushLive(jule::Ptr<_1e1335b06_ObjectDeadCode>, jule::Ptr<_20d814749_FnIns>);
inline void _1c967636a_pushLive(jule::Ptr<_1e1335b06_ObjectDeadCode>, jule::Ptr<_20cba5db6_StructIns>);
inline void _1c967d031_pushLive(jule::Ptr<_1e1335b06_ObjectDeadCode>, jule::Ptr<_20d869eb9_Var>);
inline void _1e1368210_setReferencesAsLive(jule::Ptr<_1e1335b06_ObjectDeadCode>, jule::Ptr<_20d8156e5_ReferenceStack>&);
inline void _1e1368485_inits(jule::Ptr<_1e1335b06_ObjectDeadCode>, jule::Ptr<_20d846ea7_Package>&);
inline void _1e136870a_collectLivePackage(jule::Ptr<_1e1335b06_ObjectDeadCode>, jule::Ptr<_20d846ea7_Package>&);
inline void _1e13688d6_collectLive(jule::Ptr<_1e1335b06_ObjectDeadCode>);
inline void _1e1368b5b_removeDeadGlobals(jule::Ptr<_1e1335b06_ObjectDeadCode>, jule::Slice<jule::Ptr<_20d869eb9_Var>>&);
inline void _1e1368dd1_removeDeadFns(jule::Ptr<_1e1335b06_ObjectDeadCode>, jule::Slice<jule::Ptr<_20d814370_Fn>>&);
inline void _1e1369156_removeDeadStructs(jule::Ptr<_1e1335b06_ObjectDeadCode>, jule::Slice<jule::Ptr<_20cba59dc_Struct>>&);
inline void _1e13693cb_removeDeadTraits(jule::Ptr<_1e1335b06_ObjectDeadCode>, jule::Slice<jule::Ptr<_20d81a3ed_Trait>>&);
inline void _1e1369651_removeDeadsFile(jule::Ptr<_1e1335b06_ObjectDeadCode>, jule::Ptr<_20d8aca67_SymbolTable>&);
inline void _1e13698c6_removeDeadsPackage(jule::Ptr<_1e1335b06_ObjectDeadCode>, jule::Ptr<_20d846ea7_Package>&);
inline void _1e1369aa2_removeDeads(jule::Ptr<_1e1335b06_ObjectDeadCode>);
inline void _1e1369c7d_elimanate(jule::Ptr<_1e1335b06_ObjectDeadCode>);
struct _1e1335b06_ObjectDeadCode {
	_1e1335809_liveTable _field_live;
	jule::Ptr<_1e1012d55_IR> _field_ir;
	

	_1e1335b06_ObjectDeadCode(void) = default;


};
inline jule::Ptr<_1ba6a5e14_ObjectCoder> static__1e1a4d65e_New(jule::Ptr<_1e1012d55_IR>&, _1e1a4e473_SerializationInfo);
inline void _1e1a533ab_write(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Str);
inline void _1e1a85e8d_addIndent(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1e1a23e70_doneIndent(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1e1a44358_indent(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1e1a8352e_pushResult(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20d814370_Fn>&);
inline jule::I64 _1e1a83a4b_findTypeOffset(_1ba6a5e14_ObjectCoder*, jule::Ptr<_20d81a3ed_Trait>, jule::Ptr<_20d8e3680_TypeKind>);
inline void _1e1a8709e_locInfo(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20b4e5581_Token>&);
inline void _1e1a8d083_head(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1e1a48956_links(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1e1a47b86_prepareStructures(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1e1a859e8_iterPackages(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Fn<void(jule::Ptr<_20d846ea7_Package>&)>);
inline void _1e1a246e0_buildTraitMap(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1ba6a64b9_traitDecls(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1ba6a65eb_structurePlainDecl(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20cba59dc_Struct>&);
inline void _1ba6a672d_structurePlainDecls(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1ba6a6860_fieldDecl(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20cba5bc9_FieldIns>&);
inline void _1ba6a6992_structureDestructor(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20cba5db6_StructIns>&);
inline void _1ba6a6ac4_structureDeriveDefsDecls(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20cba5db6_StructIns>&);
inline void _1ba6a6c06_structureOperatorEq(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Str&, jule::Ptr<_20cba5db6_StructIns>&);
inline void _1ba6a6d38_structureOperatorNotEq(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Str&, jule::Ptr<_20cba5db6_StructIns>&);
inline void _1ba6a6e6a_structureOperator(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Str&, jule::Ptr<_20d814749_FnIns>&, jule::Str);
inline void _1ba6a709c_structureOperators(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20cba5db6_StructIns>&);
inline void _1ba6a71ce_structureInsDecl(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20cba5db6_StructIns>&);
inline void _1ba6a7311_structureDecl(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20cba59dc_Struct>&);
inline void _1ba6a7443_structureDecls(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1ba6a7575_paramsDecls(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Slice<jule::Ptr<_20d81455c_ParamIns>>&);
inline void _1ba6a76a7_funcHead(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20d814749_FnIns>&, jule::Bool);
inline void _1ba6a77d9_funcDecl(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20d814370_Fn>&, jule::Bool);
inline void _1ba6a791b_funcDecls(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1ba6a7a4d_traitDataTypes(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1ba6a7b80_paramIns(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20d81455c_ParamIns>&);
inline void _1ba6a7cb2_paramsIns(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Slice<jule::Ptr<_20d81455c_ParamIns>>&);
inline void _1ba6a7de4_varInitExpr(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20d869eb9_Var>&, jule::Fn<void(void)>);
inline void _1ba6a8026_var(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20d869eb9_Var>);
inline void _1ba6a8158_func(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20d814370_Fn>&);
inline void _1ba6a828a_traitWrappers(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1ba6a83bc_traitDatas(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1ba6a84ee_globals(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1ba6a8631_decls(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1ba6a8763_structureMethods(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20cba5db6_StructIns>&);
inline void _1ba6a8895_structureDeriveDefs(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20cba5db6_StructIns>&);
inline void _1ba6a89c7_structureOstream(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20cba5db6_StructIns>&);
inline void _1ba6a8b09_structureIns(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20cba5db6_StructIns>&);
inline void _1ba6a8c3b_structure(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20cba59dc_Struct>&);
inline void _1ba6a8d6d_structures(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1ba6a8ea0_funcs(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1ba6a90d2_pushInit(jule::Ptr<_1ba6a5e14_ObjectCoder>, jule::Ptr<_20d846ea7_Package>&);
inline void _1ba6a9214_initCaller(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1ba6a9346_end(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1ba6a9478_serializeHead(jule::Ptr<_1ba6a5e14_ObjectCoder>);
inline void _1ba6a95aa_Serialize(jule::Ptr<_1ba6a5e14_ObjectCoder>);
struct _1ba6a5e14_ObjectCoder {
	jule::Str _field_Obj;
	jule::Ptr<_1e1012d55_IR> _field_ir;
	_1e1a4e473_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1e1a24987_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Ptr<_1e1a09560_exprCoder> _field_ec;
	jule::Ptr<_1e1a018ba_scopeCoder> _field_sc;
	

	_1ba6a5e14_ObjectCoder(void) = default;


};
struct _x_1e1012d55_IR_s_20b1bc016_Log {
	jule::Ptr<_1e1012d55_IR> __jule_result_arg0;
	jule::Slice<_20b1bc016_Log> __jule_result_arg1;
};
inline _x_1e1012d55_IR_s_20b1bc016_Log static__1e11752a3_Build(jule::Str, jule::I64);
inline void _1e11dd063_appendStructs(_1e1012d55_IR*, jule::Ptr<_20d846ea7_Package>&, jule::Slice<jule::Ptr<_20cba59dc_Struct>>&);
inline jule::Slice<jule::Ptr<_20cba59dc_Struct>> _1e11e5d5c_GetAllStructures(_1e1012d55_IR*);
inline void _1e1200141_appendGlobals(_1e1012d55_IR*, jule::Ptr<_20d846ea7_Package>&, jule::Slice<jule::Ptr<_20d869eb9_Var>>&);
inline jule::Slice<jule::Ptr<_20d869eb9_Var>> _1e1019db2_GetAllGlobals(_1e1012d55_IR*);
inline void _1e1127057_Order(_1e1012d55_IR*);
struct _1e1012d55_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_20d846ea7_Package> _field_Main;
	jule::Slice<jule::Ptr<_20d84404d_ImportInfo>> _field_Used;
	_1e1209348_OrderedDefines _field_Ordered;
	

	_1e1012d55_IR(void) = default;


};
struct _i64_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline _i64_bool _1c9c08ea2_parseInteger(_1ba71777d_argParser*, jule::Str&, jule::Fn<_i64_bool(jule::Str,jule::I64)>);
inline _u64_bool _1c9c16da0_parseInteger(_1ba71777d_argParser*, jule::Str&, jule::Fn<_u64_bool(jule::Str,jule::I64)>);
inline jule::Str _1ba718075_getData(_1ba71777d_argParser*);
inline jule::VoidExceptional _1ba7182b7_processFlag(_1ba71777d_argParser*, jule::Trait<_1ba713636_CommonFlag>&);
inline jule::VoidExceptional _1ba71853c_singleDash(_1ba71777d_argParser*, jule::Str&);
inline jule::VoidExceptional _1ba7187b2_doubleDash(_1ba71777d_argParser*, jule::Str&);
inline jule::VoidExceptional _1ba71898d_tryArg(_1ba71777d_argParser*);
inline jule::VoidExceptional _1ba718b69_parse(_1ba71777d_argParser*);
struct _1ba71777d_argParser {
	_1ba7150a5_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	

	_1ba71777d_argParser(void) = default;


};
inline void _2163a7625_Free(void*);
inline jule::Str _2163bbd54_BytePtrToStr(jule::U8*);
inline jule::I64 _22ebdc31a_GetLastErrno(void);
inline jule::I64 _2163da119_Stat(jule::U8*, struct stat*);
inline jule::I64 _2163da504_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _2163da845_Getcwd(jule::U8*, jule::U64);
inline DIR* _2163dad1d_Opendir(jule::U8*);
inline struct dirent* _2163db0b5_Readdir(DIR*);
inline jule::I64 _2163db35c_Closedir(DIR*);
inline jule::I64 _2163dbbdc_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _2163dbe84_Rmdir(jule::U8*);
inline jule::I64 _2163dc22b_Unlink(jule::U8*);
inline jule::I64 _21640792d_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _216407d18_Read(jule::I64, void*, jule::U64);
inline jule::I64 _21640818c_Close(jule::I64);
inline jule::I64 _216408577_Write(jule::I64, void*, jule::U64);
inline void _216408786_Exit(jule::I64);
inline jule::I64 _21649b719_getLastOsError(void);
inline jule::Slice<jule::Str> _21649c1ed_Args(void);
inline jule::Exceptional<jule::Str> _21649c671_WorkingDir(void);
inline jule::Exceptional<jule::Str> _21649d573_getwd(void);
inline jule::Bool _20a3cb8ec_IsLetter(jule::I32);
inline jule::Bool _20b0549d6_is16(jule::Slice<_20b052e24_Range16>, jule::U16);
inline jule::Bool _20b054d27_is32(jule::Slice<_20b053397_Range32>, jule::U32);
inline jule::Bool _20b0555b9_isExcludingLatin(jule::Ptr<_20b05381a_RangeTable>, jule::I32);
inline jule::Bool _20b055861_IsUpper(jule::I32);
struct _i32_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
inline _i32_int _20b115624_DecodeRune(jule::Slice<jule::U8>);
inline _i32_int _20b115943_DecodeRuneStr(jule::Str);
inline _i32_int _20b115bda_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _20b116988_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _20b116cc9_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _20b117318_RuneCountStr(jule::Str);
inline jule::Bool _20b1175b0_RuneStart(jule::U8);
inline jule::Slice<jule::U8> _20b12b64b_Stobs(jule::Str&);
inline void _20b135468_PushToStrBuffer(jule::Str&, jule::Slice<jule::U8>);
inline jule::I64 _20b135831_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _20b135a95_FindLastByteStr(jule::Str&, jule::U8);
inline jule::Str _20b11c7b3_Repeat(jule::Str, jule::I64);
inline jule::Bool _20b118c98_hasPrefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _20b135bc7_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _20b135d09_hasSuffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _20b136018_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _20b136403_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _20b136c3e_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _20b137080_FindLast(jule::Str, jule::Str);
inline jule::I64 _20b138328_findRune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _20b138b64_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _20b139978_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _20b13a1a4_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _20b13a4e5_Contains(jule::Str, jule::Str);
inline jule::Bool _20b13aeb8_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _20b13b309_Count(jule::Str, jule::Str);
inline jule::Str _20b13b78d_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _20b138801_trimLeft(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _20b13c849_TrimLeft(jule::Str, jule::Str);
inline void _20b13cb02_trimRight(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _20b13d284_Trim(jule::Str, jule::Str);
inline jule::Str _20b13d5c5_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _2231e6ea2_Clean(jule::Str);
inline jule::Str _2232167da_FromSlash(jule::Str);
inline jule::Str _223218d81_Join(jule::Slice<jule::Str>);
inline jule::Str _22321a349_Ext(jule::Str);
struct _str_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline _str_bool _2231d35a9_Abs(jule::Str);
inline jule::Str _2231ee64c_Base(jule::Str);
inline jule::Str _22321c8e0_Dir(jule::Str);
inline jule::Str _2231c7b20_VolumeName(jule::Str);
inline jule::Bool _20b13d916_IsPathSep(jule::U8);
inline jule::Bool _20b13da48_IsAbs(jule::Str);
inline jule::I64 _20b13db7a_volumeNameLen(jule::Str);
inline _str_bool _20b13dcac_abs(jule::Str);
inline jule::Str _20b13ddde_join(jule::Slice<jule::Str>);
inline jule::I64 _21623454b_getLastFsError(void);
inline jule::I64 _20b216923_getLastProcessError(void);
inline jule::Slice<char*> _20b219ae1_strSliceToCstrSlice(jule::Slice<jule::Str>);
inline jule::I64 _20b21a042_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _20b21a42c_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _20b21b043_Exit(jule::I64);
inline jule::Str _20b21b241_Executable(void);
inline jule::Bool _20b1aee3d_IsStdHeaderPath(jule::Str);
inline jule::Bool _20b1b015d_IsValidHeaderExt(jule::Str);
inline jule::Bool _20b1b0405_IsValidCppExt(jule::Str);
inline jule::Str _20b1bc456_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _20b1bc742_argToStr(jule::Any);
inline jule::I64 _20b1bc9d9_findNextFmt(jule::Str);
inline jule::Str _20b1bcd6e_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20b1bdde7_IsTopDirective(jule::Str);
inline jule::Bool _20b1c0327_IsWindows(jule::Str);
inline jule::Bool _20b1c05d0_IsDarwin(jule::Str);
inline jule::Bool _20b1c0877_IsLinux(jule::Str);
inline jule::Bool _20b1c0b96_IsI386(jule::Str);
inline jule::Bool _20b1c0e3d_IsAmd64(jule::Str);
inline jule::Bool _20b1c11d5_IsArm64(jule::Str);
inline jule::Bool _20b1c147c_IsUnix(jule::Str);
inline jule::Bool _20b1c1801_Is32Bit(jule::Str);
inline jule::Bool _20b1c1a98_Is64Bit(jule::Str);
inline void _20b206638_init(void);
inline jule::Bool _20b4e5c8a_IsUnaryOp(jule::Str);
inline jule::Bool _20b4e6076_IsBinOp(jule::Str);
inline jule::Bool _20b4e663c_IsStr(jule::Str);
inline jule::Bool _20b4e68d4_IsRawStr(jule::Str);
inline jule::Bool _20b4e6b7b_IsRune(jule::Str);
inline jule::Bool _20b4e7297_IsBool(jule::Str);
inline jule::Bool _20b4e753e_IsFloat(jule::Str);
inline jule::Bool _20b4e77d6_IsNum(jule::Str);
inline jule::Bool _20b4e7d25_IsIgnoreIdent(jule::Str);
inline jule::Bool _20b4e80bc_IsAnonIdent(jule::Str);
inline jule::Bool _20b4e860b_IsSpace(jule::I32);
inline jule::Bool _20b4e8a5c_IsLetter(jule::I32);
inline jule::Bool _20b4e909b_IsDecimal(jule::U8);
inline jule::Bool _20b4e9343_IsBinary(jule::U8);
inline jule::Bool _20b4e95da_IsOctal(jule::U8);
inline jule::Bool _20b4e9882_IsHex(jule::U8);
inline jule::Bool _20b4e9b29_IsAssign(jule::U64);
inline jule::Bool _20b4e9dc1_IsPostfixOp(jule::Str);
inline jule::Bool _20b4ea168_IsAssignOp(jule::Str);
inline jule::Ptr<_20b4ea91b_File> _20b4ebe4a_NewFileSet(jule::Str);
inline _20b1bc016_Log _20b4ed6dd_makeErr(jule::I64, jule::I64, jule::Ptr<_20b4ea91b_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20b4eda73_bytesHasPrefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _20b4eddb4_floatFmtE(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20b4ee249_floatFmtP(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20b4ee58a_floatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20b4ee8cb_floatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20b4eec1c_floatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20b50016d_floatNum(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20b500415_commonNum(jule::Slice<jule::U8>&);
inline jule::Str _20b5006ac_binaryNum(jule::Slice<jule::U8>&);
inline jule::Bool _20b5009ed_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _20b500d3e_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _20b501180_isFloatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _20b5014c1_isFloatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _20b501812_isFloatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20b501c63_octalNum(jule::Slice<jule::U8>&);
inline jule::Str _20b50200a_hexNum(jule::Slice<jule::U8>&);
inline jule::Str _20b50234b_hexEscape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20b5025e3_bigUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _20b5028ac_littleUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _20b502a66_hexByteEscape(jule::Slice<jule::U8>&);
inline jule::Str _20b502cec_byteEscape(jule::Slice<jule::U8>&);
inline jule::Slice<_20b1bc016_Log> _20b5077e6_Lex(jule::Ptr<_20b4ea91b_File>, jule::I64);
inline jule::I64 _20d7b6751_LeadingZeros64(jule::U64);
inline jule::I64 _20d7b7686_TrailingZeros(jule::U64);
inline jule::I64 _20d7b807c_TrailingZeros32(jule::U32);
inline jule::I64 _20d7b8324_TrailingZeros64(jule::U64);
inline jule::I64 _20d7bd934_Len32(jule::U32);
inline jule::I64 _20d7bdbcb_Len64(jule::U64);
struct _u64_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
inline _u64_u64 _20d7be88b_Add64(jule::U64, jule::U64, jule::U64);
inline _u64_u64 _20d7c101e_Mul64(jule::U64, jule::U64);
inline jule::U32 _20d6dd788_F32Bits(jule::F32);
inline jule::F32 _20d6dda74_F32FromBits(jule::U32);
inline jule::U64 _20d6ddd1b_F64Bits(jule::F64);
inline jule::F64 _20d6de13a_F64FromBits(jule::U64);
struct _f64_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
inline _f64_int _20d6e1626_Frexp(jule::F64);
inline jule::F64 _20d7c4cc0_NaN(void);
inline jule::Bool _20d7c4e02_IsNaN(jule::F64);
inline jule::F64 _20d7c5034_Inf(jule::I64);
inline jule::Bool _20d7c5166_IsInf(jule::F64, jule::I64);
inline _f64_int _20d7c5298_normalize(jule::F64);
inline jule::F64 _20d7c6167_Log(jule::F64);
inline jule::F64 _20d7c6783_Abs(jule::F64);
struct _f64_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
inline _f64_f64 _20d7ca534_Modf(jule::F64);
inline jule::F64 _20d7ca974_Log2(jule::F64);
inline jule::Str _20d25c03d_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _20d2546a6_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _20d280eb8_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _20d3d1206_floatInfo&);
inline jule::Slice<jule::U8> _20d2e4b53_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _20d65823b_decimalSlice, jule::I64, jule::U8);
inline void _20d3ada85_roundShortest(_20d8052a6_decimal&, jule::U64, jule::I64, _20d3d1206_floatInfo&);
inline jule::Slice<jule::U8> _20d3d2229_fmtE(jule::Slice<jule::U8>, jule::Bool, _20d65823b_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _20d4629a2_fmtF(jule::Slice<jule::U8>, jule::Bool, _20d65823b_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _20d484d59_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _20d3d1206_floatInfo&);
inline jule::Slice<jule::U8> _20d51603e_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _20d3d1206_floatInfo&);
inline jule::I64 _20d5d045a_min(jule::I64, jule::I64);
inline jule::I64 _20d61d740_max(jule::I64, jule::I64);
inline jule::U8 _20d61da70_lower(jule::U8);
struct _u64__20d20e188_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
inline _u64__20d20e188_ConvError _20d6717b5_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _20d3d4eeb_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _20d240a38_ParseInt(jule::Str, jule::I64, jule::I64);
struct _f64_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline _f64_bool _20d299311_eiselLemire64(jule::U64, jule::I64, jule::Bool);
struct _f32_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline _f32_bool _20d4c7011_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _20d4c60ed_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
struct _f64_int_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
inline _f64_int_bool _20d4c6230_special(jule::Str);
struct _u64_int_bool_bool_bool_int_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
inline _u64_int_bool_bool_bool_int_bool _20d22cdcc_readFloat(jule::Str);
inline _f64_bool _20d802a23_atof64exact(jule::U64, jule::I64, jule::Bool);
inline _f32_bool _20d802b55_atof32exact(jule::U64, jule::I64, jule::Bool);
struct _f64__20d20e188_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
inline _f64__20d20e188_ConvError _20d802c87_atofHex(jule::Str, _20d3d1206_floatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
struct _f32_int__20d20e188_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
inline _f32_int__20d20e188_ConvError _20d802ec9_atof32(jule::Str);
struct _f64_int__20d20e188_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
inline _f64_int__20d20e188_ConvError _20d80310b_atof64(jule::Str);
inline _f64_int__20d20e188_ConvError _20d80323d_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _20d803370_ParseFloat(jule::Str, jule::I64);
inline void _20d80378d_ryuFtoaFixed32(_20d65823b_decimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _20d8038c0_ryuFtoaFixed64(_20d65823b_decimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _20d803b23_formatDecimal(_20d65823b_decimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _20d803c55_ryuFtoaShortest(_20d65823b_decimalSlice&, jule::U64, jule::I64, _20d3d1206_floatInfo&);
inline jule::I64 _20d803d87_mulByLog2Log10(jule::I64);
inline jule::I64 _20d803eb9_mulByLog10Log2(jule::I64);
struct _u64_u64_u64_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
inline _u64_u64_u64_int _20d8040eb_computeBounds(jule::U64, jule::I64, _20d3d1206_floatInfo&);
inline void _20d80433d_ryuDigits(_20d65823b_decimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _20d804470_ryuDigits32(_20d65823b_decimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
struct _u32_int_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
inline _u32_int_bool _20d8045a2_mult64bitPow10(jule::U32, jule::I64, jule::I64);
struct _u64_int_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
inline _u64_int_bool _20d8046d4_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _20d804816_divisibleByPow5(jule::U64, jule::I64);
struct _u32_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
inline _u32_u32 _20d804948_divmod1e9(jule::U64);
inline void _20d805d12_trim(_20d8052a6_decimal&);
inline void _20d805e44_rightShift(_20d8052a6_decimal&, jule::U64);
inline jule::Bool _20d806076_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _20d8061a8_leftShift(_20d8052a6_decimal&, jule::U64);
inline jule::Bool _20d8062da_shouldRoundUp(_20d8052a6_decimal&, jule::I64);
inline jule::Str _20d806e9a_FmtUint(jule::U64, jule::I64);
inline jule::Str _20d8070cc_FmtInt(jule::I64, jule::I64);
inline jule::Str _20d80720e_Itoa(jule::I64);
inline jule::Str _20d807341_small(jule::I64);
inline jule::Bool _20d807473_isPowerOfTwo(jule::I64);
struct _su8_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _su8_str _20d8075a5_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _20cd5a6a8_RealKindOf(jule::Str);
inline jule::I64 _20cd6962e_BitsizeOf(jule::Str);
inline jule::Str _20cd80c1c_IntFromBits(jule::I64);
inline jule::Str _20cd7178a_UintFromBits(jule::I64);
inline jule::Str _20cdb22e2_FloatFromBits(jule::I64);
inline jule::Bool _20d0b4a77_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _20d0be389_BitsizeOfFloat(jule::F64);
inline jule::I64 _20d1345b9_BitsizeOfInt(jule::I64);
inline jule::I64 _20d1bb211_BitsizeOfUint(jule::U64);
inline void _20d1c466a_UpdateTarget(void);
inline void _20d1cec6e_init(void);
inline jule::F64 _20d8076d7_Min(jule::Str);
inline jule::F64 _20d807819_Max(jule::Str);
inline jule::Bool _20d1bb640_IsI8Compatible(jule::Str);
inline jule::Bool _20d807b27_IsI16Compatible(jule::Str);
inline jule::Bool _20d807c59_IsI32Compatible(jule::Str);
inline jule::Bool _20d807d8b_IsI64Compatible(jule::Str);
inline jule::Bool _20d807ebd_IsU8Compatible(jule::Str);
inline jule::Bool _20d808100_IsU16Compatible(jule::Str);
inline jule::Bool _20d808232_IsU32Compatible(jule::Str);
inline jule::Bool _20d808474_IsU64Compatible(jule::Str);
inline jule::Bool _20d8085a6_IsF32Compatible(jule::Str);
inline jule::Bool _20d8086d8_IsF64Compatible(jule::Str);
inline jule::Bool _20d80881a_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _20d80894c_IsI16Greater(jule::Str);
inline jule::Bool _20d808a7e_IsI32Greater(jule::Str);
inline jule::Bool _20d808bb1_IsI64Greater(jule::Str);
inline jule::Bool _20d808ce3_IsU16Greater(jule::Str);
inline jule::Bool _20d809156_IsU32Greater(jule::Str);
inline jule::Bool _20d809288_IsU64Greater(jule::Str);
inline jule::Bool _20d8093ba_IsF32Greater(jule::Str);
inline jule::Bool _20d8094ec_IsF64Greater(jule::Str);
inline jule::Bool _20d80962e_IsGreater(jule::Str, jule::Str);
inline jule::Bool _20d809a6e_IsSigInt(jule::Str);
inline jule::Bool _20d809ba1_IsUnsigInt(jule::Str);
inline jule::Bool _20d809cd3_IsInt(jule::Str);
inline jule::Bool _20d809e15_IsFloat(jule::Str);
inline jule::Bool _20d80a047_IsNum(jule::Str);
inline jule::Bool _20d80a179_IsSigNum(jule::Str);
inline void _20d80d798_lshiftUnsig(_20cc572ec_Const&, _20cc572ec_Const&);
inline void _20d80d8ca_rshiftUnsig(_20cc572ec_Const&, _20cc572ec_Const&);
inline jule::Bool _20d883510_IsAscii(jule::I32);
inline jule::I32 _20d883686_ToRune(jule::Slice<jule::U8>);
inline jule::Str _20d89a6c0_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _20d89a9bc_ToStr(jule::Slice<jule::U8>);
struct _u8_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline _u8_bool _20d89ac64_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _20d89b072_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _20d89b3b3_strEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _20d99727d_findFormatPrefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _20d99cd77_getFormatRange(jule::I64&, jule::Slice<jule::U8>&);
inline void _20d99d130_FmtByDefault(jule::Str&, jule::Any&);
inline void _20d99d509_applyFmtByDefault(jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline void _20d99d905_applyFmt(jule::Slice<jule::U8>&, jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Str _20d99dc13_Format(jule::Str&, jule::Slice<jule::Any>);
inline jule::Str _20d99e52c_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20d8153d7_parameterUsesGenerics(jule::Ptr<_20d814183_Param>&, jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>>&);
inline jule::Ptr<_20d8e7a5d_TypeSymbol> _20d8161c9_buildType(jule::Ptr<_20cb892ea_TypeDecl>);
inline jule::Ptr<_20d8b3919_Value> _20d81630b_buildExpr(jule::Ptr<_20cb8d81b_Expr>);
inline jule::Ptr<_20d8e298c_TypeAlias> _20d81643d_buildTypeAlias(jule::Ptr<_20cba05b9_TypeAliasDecl>);
inline jule::Ptr<_20cb79a49_Field> _20d816570_buildField(jule::Ptr<_20cba3c60_FieldDecl>);
inline jule::Slice<jule::Ptr<_20cb79a49_Field>> _20d8166a2_buildFields(jule::Slice<jule::Ptr<_20cba3c60_FieldDecl>>&);
inline jule::Ptr<_20cba59dc_Struct> _20d8167d4_buildStruct(jule::Ptr<_20cba4513_StructDecl>);
inline jule::Ptr<_20d814183_Param> _20d816916_buildParam(jule::Ptr<_20cb99959_ParamDecl>);
inline jule::Slice<jule::Ptr<_20d814183_Param>> _20d816a48_buildParams(jule::Slice<jule::Ptr<_20cb99959_ParamDecl>>&);
inline jule::Ptr<_20d813e96_RetType> _20d816b7a_buildRetType(jule::Ptr<_20cb8c40d_RetTypeDecl>);
inline jule::Ptr<_20d814370_Fn> _20d816cac_buildFn(jule::Ptr<_20cb9ac79_FnDecl>);
inline jule::Slice<jule::Ptr<_20d814370_Fn>> _20d816dde_buildMethods(jule::Slice<jule::Ptr<_20cb9ac79_FnDecl>>&);
inline jule::Ptr<_20d81a3ed_Trait> _20d817021_buildTrait(jule::Ptr<_20cba4b1d_TraitDecl>);
inline jule::Ptr<_20d81ac8e_EnumItem> _20d817153_buildEnumItem(jule::Ptr<_20cba1e28_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_20d81ac8e_EnumItem>> _20d817285_buildEnumItems(jule::Slice<jule::Ptr<_20cba1e28_EnumItemDecl>>&);
inline jule::Ptr<_20d81b0ad_Enum> _20d8173b7_buildEnum(jule::Ptr<_20cba2951_EnumDecl>);
inline jule::Ptr<_20d81b641_TypeEnumItem> _20d81772a_buildTypeEnumItem(jule::Ptr<_20cba3457_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_20d81b641_TypeEnumItem>> _20d81785c_buildTypeEnumItems(jule::Slice<jule::Ptr<_20cba3457_TypeEnumItemDecl>>&);
inline jule::Ptr<_20d81b82d_TypeEnum> _20d81798e_buildTypeEnum(jule::Ptr<_20cba3a62_TypeEnumDecl>);
inline jule::Ptr<_20d869eb9_Var> _20d817ac1_buildVar(jule::Ptr<_20cb9bc58_VarDecl>);
inline jule::Slice<jule::Ptr<_20d869eb9_Var>> _20d817c03_buildVars(jule::Slice<jule::Ptr<_20cb9bc58_VarDecl>>);
inline jule::Ptr<_20d8207dd_Impl> _20d817d35_buildImpl(jule::Ptr<_20cba5228_Impl>);
inline jule::Bool _20d81eb83_matchConstraint(jule::Str&, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d81ee6e_isBuiltinConstraint(jule::Str&);
inline jule::Ptr<_20d82c3aa_scopeChecker> _20d822878_newScopeCheckerBase(jule::Ptr<_20d84c199_Sema>&, jule::Ptr<_20d814749_FnIns>);
inline jule::Ptr<_20d82c3aa_scopeChecker> _20d822c0d_newScopeChecker(jule::Ptr<_20d84c199_Sema>&, jule::Ptr<_20d814749_FnIns>);
inline jule::Ptr<_20d82b123_scopeLabel> _20d82304e_findLabelParent(jule::Str, jule::Ptr<_20d82c3aa_scopeChecker>);
inline jule::Bool _20d8233d4_modelIsGotoScope(jule::Any, jule::Ptr<_20d825848_Scope>&);
inline jule::Bool _20d823725_stmtIsGotoScope(jule::Any&, jule::Ptr<_20d825848_Scope>&);
inline jule::I64 _20d823a66_countMatchType(jule::Ptr<_20d829594_Match>&, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Slice<jule::Ptr<_20d8b2891_Data>> _20d823d0d_getDatasFromTupleData(jule::Ptr<_20d8b2891_Data>&);
inline jule::Bool _20d824649_checkMut(jule::Ptr<_20d84c199_Sema>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>, jule::Ptr<_20b4e5581_Token>);
inline jule::Bool _20d824acd_checkAssign(jule::Ptr<_20d84c199_Sema>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>, jule::Ptr<_20b4e5581_Token>);
inline jule::Bool _20d824d75_isValidAstStForNextSt(jule::Any&);
inline jule::Bool _20d82511c_isValidStForNextSt(jule::Any&);
inline jule::Bool _20d8253b4_stmtIsDef(jule::Any&);
inline jule::Ptr<_20d869eb9_Var> _20d841765_findVarInPackage(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_20d8e298c_TypeAlias> _20d841b94_findTypeAliasInPackage(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_20cba59dc_Struct> _20d84207e_findStructInPackage(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_20d814370_Fn> _20d8424e1_findFnInPackage(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_20d81a3ed_Trait> _20d8427ee_findTraitInPackage(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>&, jule::Str);
inline jule::Ptr<_20d81b0ad_Enum> _20d842b40_findEnumInPackage(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>&, jule::Str);
inline jule::Ptr<_20d81b82d_TypeEnum> _20d842e81_findTypeEnumInPackage(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>&, jule::Str);
inline jule::Any _20d84347b_defByIdentPackage(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>&, jule::Str&, jule::Bool);
inline jule::Bool _20d849581_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _20d84a362_isValidModelForRef(jule::Any&);
inline _20b1bc016_Log _20d84a780_compilerErr(jule::Ptr<_20b4e5581_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20d84aac1_impIsLookupable(jule::Ptr<_20d84404d_ImportInfo>&, jule::Str);
inline void _20d84adbd_appendRetVars(jule::Slice<jule::Ptr<_20d869eb9_Var>>&, jule::Ptr<_20d814749_FnIns>&);
inline void _20d84b176_appendParamVars(jule::Slice<jule::Ptr<_20d869eb9_Var>>&, jule::Ptr<_20d814749_FnIns>&);
inline void _20d84b451_appendGenericTypeAliases(jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>&, jule::Ptr<_20d814749_FnIns>&);
inline jule::Ptr<_20d8aca67_SymbolTable> _20d84b7a3_findFile(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>&, jule::Ptr<_20b4ea91b_File>&);
inline void _20d84bc15_pushSugggestion(_20b1bc016_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20d88392d_traitHasReferenceReceiver(jule::Ptr<_20d81a3ed_Trait>&);
inline jule::Bool _20d883a60_floatAssignable(jule::Str, jule::Ptr<_20d8b2891_Data>&);
inline jule::Bool _20d89a439_sigAssignable(jule::Str, jule::Ptr<_20d8b2891_Data>&);
inline jule::Bool _20d89a56b_unsigAssignable(jule::Str, jule::Ptr<_20d8b2891_Data>&);
inline jule::Bool _20d89b616_intAssignable(jule::Str, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8e3680_TypeKind> _20d8abadd_lenKind(void);
inline jule::Ptr<_20cb511e6_Directive> _20d8d7ec1_findDirective(jule::Slice<jule::Ptr<_20cb511e6_Directive>>&, jule::Str);
inline jule::Any _20d8d8356_findBuiltinsImport(jule::Str, jule::Ptr<_20d84404d_ImportInfo>);
inline void _20d8d8565_fitBitsize(jule::Ptr<_20d8b2891_Data>&);
inline void _20d8d8862_makeStructLitAlloc(jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d80ddd6_StructLitExprModel>&);
inline jule::Ptr<_20d869eb9_Var> _20d8d8ba3_buildErrorVar(jule::Ptr<_20d825848_Scope>&, jule::Ptr<_20cb927ed_FnCallExpr>&);
inline jule::Any _20d8d8ee4_findBuiltinsSema(jule::Str, jule::Ptr<_20d84c199_Sema>);
inline jule::Bool _20d8d928b_isOkForShifting(jule::Ptr<_20d8b2891_Data>&);
inline jule::Bool _20d8d9643_isInstancedStruct(jule::Ptr<_20cba5db6_StructIns>);
inline jule::Bool _20d8d99a6_isPtrArithmeticCompatible(jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&);
inline void _20d8d9be8_applyCastKindModel(jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8e3680_TypeKind>&);
inline void _20d8d9ea1_applyCastKind(jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Ptr<_20d8b2891_Data> _20d8da19e_buildVoidData(void);
inline jule::Str _20d8da468_checkDataForIntegerIndexing(jule::Ptr<_20d8b2891_Data>&);
inline void _20d8da732_applyCastModelByEnum(jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d81b0ad_Enum>);
inline void _20d8e0968_castConstByType(jule::Str&, jule::Ptr<_20d8b2891_Data>&);
inline void _20d8e0d53_updateModelToGenericIns(jule::Any&, jule::Ptr<_20d814749_FnIns>&);
inline jule::Bool _20d8e1095_pushSubIdentFromExpr(jule::Any, jule::Ptr<_20cb8a010_SubIdentTypeDecl>&);
inline jule::Bool _20d90a2bd_kindUsesGenerics(jule::Any&, jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>>&);
inline jule::Bool _20d90a653_hasDirective(jule::Slice<jule::Ptr<_20cb511e6_Directive>>&, jule::Str);
inline jule::Bool _20d90a8ea_canGetPtr(jule::Ptr<_20d8b2891_Data>&);
inline jule::Bool _20d90ac19_isValidForSptrType(jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d90aeb1_isValidForRef(jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Bool _20d90b27a_isBuiltinStrConvertable(jule::Ptr<_20d8e3680_TypeKind>&);
inline jule::Str _20d90b500_buildLinkPathByTokens(jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20d8e83cc_Prim> _20d90b8a7_buildPrimType(jule::Str);
inline jule::Ptr<_20cba59dc_Struct> _20d90bb4e_getStructFromKind(jule::Ptr<_20d8e3680_TypeKind>);
inline jule::Bool _20d90bde6_isPrim(jule::Str);
inline void _20d90c19e_applyImplicitCast(jule::Ptr<_20d8e3680_TypeKind>&, jule::Ptr<_20d8b2891_Data>&);
struct _x_20d8aca67_SymbolTable_s_20b1bc016_Log {
	jule::Ptr<_20d8aca67_SymbolTable> __jule_result_arg0;
	jule::Slice<_20b1bc016_Log> __jule_result_arg1;
};
inline _x_20d8aca67_SymbolTable_s_20b1bc016_Log _20d910218_buildSymbols(jule::Ptr<_20cb5014b_Ast>&, jule::Trait<_20d8413d0_Importer>&, jule::Ptr<_20d817e67_symbolBuilder>);
struct _x_20d846ea7_Package_s_20b1bc016_Log {
	jule::Ptr<_20d846ea7_Package> __jule_result_arg0;
	jule::Slice<_20b1bc016_Log> __jule_result_arg1;
};
inline _x_20d846ea7_Package_s_20b1bc016_Log _20d910647_analyzePackage(jule::Slice<jule::Ptr<_20cb5014b_Ast>>&, jule::Trait<_20d8413d0_Importer>&, jule::I64&);
inline _x_20d846ea7_Package_s_20b1bc016_Log _20d910a32_AnalyzePackage(jule::Slice<jule::Ptr<_20cb5014b_Ast>>, jule::Trait<_20d8413d0_Importer>, jule::I64);
inline jule::Ptr<_20d814749_FnIns> _20d91bae8_findBuiltinFn(jule::Str);
inline jule::Ptr<_20d8e298c_TypeAlias> _20d91d732_findBuiltinTypeAlias(jule::Str);
inline jule::Any _20d92310a_findBuiltinDef(jule::Str);
inline jule::Any _20d9222b3_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _20d9223e5_findBuiltinDefStdMem(jule::Str);
inline jule::Any _20d919376_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _20d9194a8_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_20d8b2891_Data> _20d99e65e_builtinCallerCommonPlain(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d99e917_builtinCallerCommon(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d99ed02_builtinCallerCommonMut(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a0143_builtinCallerError(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a052d_builtinCallerOut(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a0918_builtinCallerOutln(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a0d03_builtinCallerNew(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a11dd_builtinCallerPanic(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a1809_builtinCallerMake(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a1be4_builtinCallerAppend(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a2178_callerCopySlice(jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a260c_callerCopyStr(jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a29e7_builtinCallerCopy(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a2d38_callerLenSlice(jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a3179_callerLenMap(jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a34ba_callerLenArr(jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a380b_callerLenStr(jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a3be6_builtinCallerLen(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a4037_callerCapSlice(jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a4378_callerCapStr(jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a4763_builtinCallerCap(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a4be7_callerDeleteMap(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a50d2_builtinCallerDelete(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a54bc_builtinCallerClone(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a5a83_builtinCallerAssert(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a5de6_builtinCallerStdMemSizeOf(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a6314_builtinCallerStdMemAlignOf(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a6732_builtinCallerStdMemFree(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a6b61_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a707e_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a74be_builtinCallerStdDebugOut(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Ptr<_20d8b2891_Data> _20d9a78a9_builtinCallerStdDebugOutln(jule::Ptr<_20d8b440e_Eval>&, jule::Ptr<_20cb927ed_FnCallExpr>&, jule::Ptr<_20d8b2891_Data>&);
inline jule::Bool _20db43e63_FindModuleFile(jule::Slice<jule::Ptr<_216327de2_DirEntry>>&);
inline jule::Str _20db4410b_FindModuleFileDeep(jule::Str);
inline jule::Slice<_20b1bc016_Log> _20db443a3_CheckModuleFile(jule::Str);
inline jule::Ptr<_1e11c41ae_FileInfo> _1e121ac1c_ParseFile(jule::Ptr<_20b4ea91b_File>);
struct _x_20cb5014b_Ast_s_20b1bc016_Log {
	jule::Ptr<_20cb5014b_Ast> __jule_result_arg0;
	jule::Slice<_20b1bc016_Log> __jule_result_arg1;
};
inline _x_20cb5014b_Ast_s_20b1bc016_Log _1e121b2a0_parseFileset(jule::Ptr<_20b4ea91b_File>);
inline jule::Ptr<_20cb99283_ScopeTree> _1e121bc0c_newScope(void);
struct _bool_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline _bool_bool _1e121beb5_isSt(jule::Ptr<_20b4e5581_Token>, jule::Ptr<_20b4e5581_Token>);
inline jule::Bool _1e121c306_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::I64&);
struct _int_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline _int_bool _1e121c68b_nextStPos(jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::I64);
struct _sx_20b4e5581_Token_bool {
	jule::Slice<jule::Ptr<_20b4e5581_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline _sx_20b4e5581_Token_bool _1e121c9cc_skipSt(jule::I64&, jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Slice<jule::Ptr<_1e121ccc9_stmt>> _1e121d170_splitStmts(jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Bool _1e123485c_isTypeOp(jule::Str&);
inline jule::Bool _1e1234b48_isTypeRange(jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Slice<jule::Ptr<_20b4e5581_Token>> _1e1234de0_getBlockExpr(jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
struct _sx_20b4e5581_Token_sx_20b4e5581_Token {
	jule::Slice<jule::Ptr<_20b4e5581_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> __jule_result_arg1;
};
inline _sx_20b4e5581_Token_sx_20b4e5581_Token _1e1235275_splitDelim(jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::U64);
inline jule::I64 _1e123551c_findLowestPrecOp(jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Ptr<_20cb904cc_IdentExpr> _1e12357b4_buildIdentExpr(jule::Ptr<_20b4e5581_Token>&);
struct _sx_20b4e5581_Token_int {
	jule::Slice<jule::Ptr<_20b4e5581_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
inline _sx_20b4e5581_Token_int _1e1235a5b_getRangeExprTokens(jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Bool _1e12367b5_checkAssignTokens(jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline _20b1bc016_Log _1e12379d6_makeErr(jule::I64, jule::I64, jule::Ptr<_20b4ea91b_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_20b4e5581_Token>> _1e1237eae_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline _sx_20b4e5581_Token_sx_20b4e5581_Token _1e1238256_rangeLast(jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
struct _ssx_20b4e5581_Token_s_20b1bc016_Log {
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> __jule_result_arg0;
	jule::Slice<_20b1bc016_Log> __jule_result_arg1;
};
inline _ssx_20b4e5581_Token_s_20b1bc016_Log _1e1238641_partsKind(jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::Str, jule::Bool);
inline _ssx_20b4e5581_Token_s_20b1bc016_Log _1e1238a2b_parts(jule::Slice<jule::Ptr<_20b4e5581_Token>>&, jule::U64, jule::Bool);
inline jule::Str _1e1238cc3_getCloseKindOfBrace(jule::Str);
inline _20b1bc016_Log _1e12391ad_compilerErr(jule::Ptr<_20b4e5581_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1e12395dc_pushSuggestion(_20b1bc016_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1e1239884_tokstoa(jule::Slice<jule::Ptr<_20b4e5581_Token>>&);
inline jule::Bool _1e12498e9_isPub(jule::Str&);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e124a2bd_buildVoidType(void);
inline jule::Ptr<_20cb892ea_TypeDecl> _1e124a4cc_buildPrimType(jule::Ptr<_20b4e5581_Token>);
inline _bool_bool _20db1d14b_checkOs(jule::Str);
inline _bool_bool _20db2e5e1_checkArch(jule::Str);
inline jule::Bool _20db18377_isPassFileAnnotation(jule::Str);
inline void _20db32e85_setOsVars(jule::Slice<jule::Str>&);
inline void _20db331d8_setArchVars(jule::Slice<jule::Str>&);
inline void _20db33491_initVars(jule::Slice<jule::Str>&, _20db32b77_CompileInfo&);
inline jule::Slice<jule::U8> _1e10178a4_readBuff(jule::Str);
inline _20b1bc016_Log _1e101eb20_flatCompilerErr(jule::Str);
inline void _1e0ee4683_pushPasses(jule::Ptr<_20d846ea7_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1e1040547_getAllUniquePasses(jule::Ptr<_20d846ea7_Package>&, jule::Slice<jule::Ptr<_20d84404d_ImportInfo>>);
inline _20db32b77_CompileInfo _1e106228e_buildCompileInfo(void);
inline void _1e136a047_EliminateDefines(jule::Ptr<_1e1012d55_IR>&);
inline jule::Ptr<_20cb511e6_Directive> _1e136a3cc_findDirective(jule::Slice<jule::Ptr<_20cb511e6_Directive>>&, jule::Str);
inline jule::Bool _1e136a71d_hasDirective(jule::Slice<jule::Ptr<_20cb511e6_Directive>>&, jule::Str);
inline void _1e136e36a_eliminateDeadCodeOfScope(jule::Ptr<_20d825848_Scope>);
inline void _1e136e601_eliminateScopeFunctions(jule::Slice<jule::Ptr<_20d814370_Fn>>&);
inline void _1e136e843_eliminateFunctionsScopePackage(jule::Ptr<_20d846ea7_Package>&);
inline void _1e136eada_eliminateScopePackage(jule::Ptr<_20d846ea7_Package>&);
inline void _1e136ece9_EliminateScopes(jule::Ptr<_1e1012d55_IR>&);
inline jule::Bool _20da5226c_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _20da5257a_isConstantValidConditionalCase(jule::Ptr<_20d825c44_If>&);
inline jule::Bool _20da52833_isUnreachableExpr(jule::Any&);
inline jule::Bool _20da52b74_isConstantValidMatchCase(jule::Ptr<_20d82a0de_Case>&);
inline jule::Bool _20da52e1b_isUnreachableConditionalCase(jule::Ptr<_20d825c44_If>&);
inline jule::Bool _20da531c4_isUnreachableMatchCase(jule::Ptr<_20d82a0de_Case>&);
struct _bool_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
inline _bool_u64 _20da5aac2_checkForBitShiftOpt(jule::Ptr<_20cbed66c_OperandExprModel>&, jule::Ptr<_20cbed66c_OperandExprModel>&);
inline void _20da5cb07_PushOptLevel(jule::I64);
inline void _1e1302177_detectEnabled(void);
inline void _1e137c6db_Throw(jule::Str);
inline jule::U64 _1e1aa7a3c_unix(void);
inline jule::U64 _1e1aa7d4a_unixYearToSeconds(jule::U64, jule::Bool&);
inline jule::U64 _1e1aa81d0_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1e1a06e20_isCopyOptimizable(jule::Ptr<_20d8b2891_Data>&);
inline jule::Bool _1e1a072a5_isIterCopyOptimizable(jule::Ptr<_20d8b2891_Data>&, jule::Ptr<_20d869eb9_Var>&);
inline jule::Str _1e1a15e51_decomposeCommonEsq(jule::U8);
inline jule::Str _1e1a1623c_sbtoa(jule::U8);
inline jule::Str _1e1a164d4_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1e1a16803_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1e1a16b11_ftoa(jule::F64, jule::I64);
inline jule::Str _1e1a16da8_itoa(jule::I64);
inline jule::Str _1e1a17150_utoa(jule::U64);
inline jule::Bool _1e1a17507_isForwarded(jule::Ptr<_20d825848_Scope>&);
inline jule::Bool _1e1a177c1_isBuiltinCallHasDebuginf(jule::Ptr<_20d80e49c_FnCallExprModel>&);
inline jule::Bool _1e1a17a02_isExprComesFromBind(jule::Ptr<_20d8b2891_Data>&);
inline void _1ba6a96dc_iterFiles(jule::Ptr<_20d846ea7_Package>&, jule::Fn<void(jule::Ptr<_20d8aca67_SymbolTable>&)>);
inline void _1ba6a981e_prepareStructure(jule::Ptr<_20cba59dc_Struct>&);
inline jule::Str _1ba6a9951_concatAllParts(jule::Slice<jule::Ptr<_20b4e5581_Token>>);
inline jule::Ptr<_20cb511e6_Directive> _1ba6b5e57_findDirective(jule::Slice<jule::Ptr<_20cb511e6_Directive>>&, jule::Str);
inline jule::Bool _1ba6b62dc_hasDirective(jule::Slice<jule::Ptr<_20cb511e6_Directive>>&, jule::Str);
inline jule::Bool _1ba6b6584_shouldInitialized(jule::Ptr<_20d8e3680_TypeKind>&);
inline void _20b191062_printErrorMessage(jule::Str);
inline void _20b19e46b_help(jule::Slice<jule::Str>&);
inline void _20b18d27e_version(jule::Slice<jule::Str>&);
inline void _20b18d3b1_toolDistos(void);
inline void _20b186178_toolDistarch(void);
inline void _20b1862aa_tool(jule::Slice<jule::Str>&);
inline void _20b1a0d30_julenv(jule::Slice<jule::Str>&);
inline void _20b1abc1a_mod(jule::Slice<jule::Str>&);
inline jule::Bool _20b1abd4c_processCommand(jule::Slice<jule::Str>&);
inline void _20b1aeaa8_showInfo(void);
void entry_point(void);
inline void _1ba6d89c4_init(void);
inline jule::Ptr<_21624ed4c_File> _1ba6dc0b0_openOutput(jule::Str&);
inline void _1ba6e81ed_clearObjects(void);
inline void _1ba6d6c03_compileIr(jule::Str, jule::Str);
inline jule::Bool _1ba707c13_isCppSourceFile(jule::Str);
inline void _1ba70bd05_pushCompCmdClang(jule::Str&);
inline void _1ba6d4eba_pushCompCmdGcc(jule::Str&);
struct _str_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _str_str _1ba6d9e48_genCompileCmd(jule::Str, jule::Ptr<_1e1012d55_IR>&);
inline jule::Str _1ba6d454c_getCompilePath(void);
inline void _1ba6e401d_applyTargetIndependentOptimizations(jule::Ptr<_1e1012d55_IR>&);
inline void _1ba6d3e75_checkCompilerFlag(void);
inline void _1ba6d7c59_checkTargetArch(jule::Str);
inline void _1ba6d7d8b_checkTargetOs(jule::Str);
inline void _1ba718d89_checkTargetFlag(jule::Str&);
inline void _1ba718ebb_checkOptFlag(jule::Str&);
inline void _1ba71932e_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1ba719461_checkFlags(jule::Slice<jule::Str>&);
inline void _1ba719593_setupSemaFlags(jule::I64&);
inline jule::Ptr<_1e1012d55_IR> _1ba7196c5_buildIr(jule::Slice<jule::Str>&);
inline void _1ba719807_compileCommand(jule::Slice<jule::Str>&);


struct _20d8413d0_ImporterMptrData {
	void(*_20d8402e1_SetModPath)(jule::Trait<_20d8413d0_Importer>, jule::Str);
	jule::Str(*_20d840544_GetModPath)(jule::Trait<_20d8413d0_Importer>);
	jule::Str(*_20d840852_ModById)(jule::Trait<_20d8413d0_Importer>, jule::I64);
	jule::Ptr<_20d84404d_ImportInfo>(*_20d840b60_GetImport)(jule::Trait<_20d8413d0_Importer>, jule::Str);
	_sx_20cb5014b_Ast_s_20b1bc016_Log(*_20d841017_ImportPackage)(jule::Trait<_20d8413d0_Importer>, jule::Str, jule::Bool);
	void(*_20d84128c_Imported)(jule::Trait<_20d8413d0_Importer>, jule::Ptr<_20d84404d_ImportInfo>);
};

struct _20d8e3251_KindMptrData {
	jule::Str(*_20d8e2d00_Str)(jule::Trait<_20d8e3251_Kind>);
	jule::Bool(*_20d8e310d_Equals)(jule::Trait<_20d8e3251_Kind>, jule::Ptr<_20d8e3680_TypeKind>);
};

struct _20d90e536_LookupMptrData {
	jule::Ptr<_20d84404d_ImportInfo>(*_20d90c6dd_FindPackage)(jule::Trait<_20d90e536_Lookup>, jule::Str);
	jule::Ptr<_20d84404d_ImportInfo>(*_20d90c9eb_SelectPackage)(jule::Trait<_20d90e536_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)>);
	jule::Ptr<_20d869eb9_Var>(*_20d90cda3_FindVar)(jule::Trait<_20d90e536_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_20d8e298c_TypeAlias>(*_20d90d25a_FindTypeAlias)(jule::Trait<_20d90e536_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_20cba59dc_Struct>(*_20d90d612_FindStruct)(jule::Trait<_20d90e536_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_20d814370_Fn>(*_20d90d9b9_FindFn)(jule::Trait<_20d90e536_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_20d81a3ed_Trait>(*_20d90dcc7_FindTrait)(jule::Trait<_20d90e536_Lookup>, jule::Str);
	jule::Ptr<_20d81b0ad_Enum>(*_20d90e0d5_FindEnum)(jule::Trait<_20d90e536_Lookup>, jule::Str);
	jule::Ptr<_20d81b82d_TypeEnum>(*_20d90e3e3_FindTypeEnum)(jule::Trait<_20d90e536_Lookup>, jule::Str);
};

struct _1ba713636_CommonFlagMptrData {
	jule::Str(*_1ba6d3958_Name)(jule::Trait<_1ba713636_CommonFlag>);
	jule::I32(*_1ba6d3a8a_Short)(jule::Trait<_1ba713636_CommonFlag>);
	jule::Str(*_1ba6d3bbc_What)(jule::Trait<_1ba713636_CommonFlag>);
	void(*_1ba6d3d43_Reset)(jule::Trait<_1ba713636_CommonFlag>);
};



inline void _20d8402e1_SetModPath_0(jule::Trait<_20d8413d0_Importer> _self_, jule::Str _1729_path) {
	_1e10a3214_SetModPath(_self_.safe_ptr<_1e1146c7a_JuleImporter>(), _1729_path);
}
inline jule::Str _20d840544_GetModPath_0(jule::Trait<_20d8413d0_Importer> _self_) {
	return _1e10c5896_GetModPath(_self_.safe_ptr<_1e1146c7a_JuleImporter>());
}
inline jule::Str _20d840852_ModById_0(jule::Trait<_20d8413d0_Importer> _self_, jule::I64 _2522_id) {
	return _1e10d5411_ModById(_self_.safe_ptr<_1e1146c7a_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_20d84404d_ImportInfo> _20d840b60_GetImport_0(jule::Trait<_20d8413d0_Importer> _self_, jule::Str _3128_path) {
	return _1e1128487_GetImport(_self_.safe_ptr<_1e1146c7a_JuleImporter>(), _3128_path);
}
inline _sx_20cb5014b_Ast_s_20b1bc016_Log _20d841017_ImportPackage_0(jule::Trait<_20d8413d0_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1e113c314_ImportPackage(_self_.safe_ptr<_1e1146c7a_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _20d84128c_Imported_0(jule::Trait<_20d8413d0_Importer> _self_, jule::Ptr<_20d84404d_ImportInfo> _4131__0) {
	_1e116654c_Imported(_self_.safe_ptr<_1e1146c7a_JuleImporter>(), _4131__0);
}
inline jule::Str _20d8e2d00_Str_0(jule::Trait<_20d8e3251_Kind> _self_) {
	return _20cb70842_Str(_self_.safe_ptr<_20cba5db6_StructIns>());
}
inline jule::Bool _20d8e310d_Equals_0(jule::Trait<_20d8e3251_Kind> _self_, jule::Ptr<_20d8e3680_TypeKind> _5622_other) {
	return _20cb7b71b_Equals(_self_.data.as<_20cba5db6_StructIns>(), _5622_other);
}
inline jule::Str _20d8e2d00_Str_1(jule::Trait<_20d8e3251_Kind> _self_) {
	return _20cbe22ba_Str(_self_.safe_ptr<_20d814749_FnIns>());
}
inline jule::Bool _20d8e310d_Equals_1(jule::Trait<_20d8e3251_Kind> _self_, jule::Ptr<_20d8e3680_TypeKind> _5622_other) {
	return _20d814936_Equals(_self_.data.as<_20d814749_FnIns>(), _5622_other);
}
inline jule::Str _20d8e2d00_Str_2(jule::Trait<_20d8e3251_Kind> _self_) {
	return _20d81a5da_Str(_self_.safe_ptr<_20d81a3ed_Trait>());
}
inline jule::Bool _20d8e310d_Equals_2(jule::Trait<_20d8e3251_Kind> _self_, jule::Ptr<_20d8e3680_TypeKind> _5622_other) {
	return _20d81a71c_Equals(_self_.data.as<_20d81a3ed_Trait>(), _5622_other);
}
inline jule::Str _20d8e2d00_Str_3(jule::Trait<_20d8e3251_Kind> _self_) {
	return _20d81b29a_Str(_self_.safe_ptr<_20d81b0ad_Enum>());
}
inline jule::Bool _20d8e310d_Equals_3(jule::Trait<_20d8e3251_Kind> _self_, jule::Ptr<_20d8e3680_TypeKind> _5622_other) {
	return _20d81b3cc_Equals(_self_.data.as<_20d81b0ad_Enum>(), _5622_other);
}
inline jule::Str _20d8e2d00_Str_4(jule::Trait<_20d8e3251_Kind> _self_) {
	return _20d81ba1a_Str(_self_.safe_ptr<_20d81b82d_TypeEnum>());
}
inline jule::Bool _20d8e310d_Equals_4(jule::Trait<_20d8e3251_Kind> _self_, jule::Ptr<_20d8e3680_TypeKind> _5622_other) {
	return _20d81bb4c_Equals(_self_.data.as<_20d81b82d_TypeEnum>(), _5622_other);
}
inline jule::Str _20d8e2d00_Str_5(jule::Trait<_20d8e3251_Kind> _self_) {
	return _20d8e3a7b_Str(_self_.safe_ptr<_20d8e3680_TypeKind>());
}
inline jule::Bool _20d8e310d_Equals_5(jule::Trait<_20d8e3251_Kind> _self_, jule::Ptr<_20d8e3680_TypeKind> _5622_other) {
	return _20d8e3d89_Equals(_self_.data.as<_20d8e3680_TypeKind>(), _5622_other);
}
inline jule::Str _20d8e2d00_Str_6(jule::Trait<_20d8e3251_Kind> _self_) {
	return _20d8e8740_Str(_self_.safe_ptr<_20d8e83cc_Prim>());
}
inline jule::Bool _20d8e310d_Equals_6(jule::Trait<_20d8e3251_Kind> _self_, jule::Ptr<_20d8e3680_TypeKind> _5622_other) {
	return _20d8e8a4d_Equals(_self_.data.as<_20d8e83cc_Prim>(), _5622_other);
}
inline jule::Str _20d8e2d00_Str_7(jule::Trait<_20d8e3251_Kind> _self_) {
	return _20d8ebec4_Str(_self_.safe_ptr<_20d8ebb61_Sptr>());
}
inline jule::Bool _20d8e310d_Equals_7(jule::Trait<_20d8e3251_Kind> _self_, jule::Ptr<_20d8e3680_TypeKind> _5622_other) {
	return _20d8ec2d2_Equals(_self_.data.as<_20d8ebb61_Sptr>(), _5622_other);
}
inline jule::Str _20d8e2d00_Str_8(jule::Trait<_20d8e3251_Kind> _self_) {
	return _20d8ecac9_Str(_self_.safe_ptr<_20d8ec5bd_Slc>());
}
inline jule::Bool _20d8e310d_Equals_8(jule::Trait<_20d8e3251_Kind> _self_, jule::Ptr<_20d8e3680_TypeKind> _5622_other) {
	return _20d8ecdd7_Equals(_self_.data.as<_20d8ec5bd_Slc>(), _5622_other);
}
inline jule::Str _20d8e2d00_Str_9(jule::Trait<_20d8e3251_Kind> _self_) {
	return _20d8ed4ae_Str(_self_.safe_ptr<_20d8ed14b_Tuple>());
}
inline jule::Bool _20d8e310d_Equals_9(jule::Trait<_20d8e3251_Kind> _self_, jule::Ptr<_20d8e3680_TypeKind> _5622_other) {
	return _20d8ed7bc_Equals(_self_.data.as<_20d8ed14b_Tuple>(), _5622_other);
}
inline jule::Str _20d8e2d00_Str_10(jule::Trait<_20d8e3251_Kind> _self_) {
	return _20d8eded7_Str(_self_.safe_ptr<_20d8edb74_Map>());
}
inline jule::Bool _20d8e310d_Equals_10(jule::Trait<_20d8e3251_Kind> _self_, jule::Ptr<_20d8e3680_TypeKind> _5622_other) {
	return _20d8ee2e5_Equals(_self_.data.as<_20d8edb74_Map>(), _5622_other);
}
inline jule::Str _20d8e2d00_Str_11(jule::Trait<_20d8e3251_Kind> _self_) {
	return _20d8eeacb_Str(_self_.safe_ptr<_20d8ee768_Arr>());
}
inline jule::Bool _20d8e310d_Equals_11(jule::Trait<_20d8e3251_Kind> _self_, jule::Ptr<_20d8e3680_TypeKind> _5622_other) {
	return _20d8eedd9_Equals(_self_.data.as<_20d8ee768_Arr>(), _5622_other);
}
inline jule::Str _20d8e2d00_Str_12(jule::Trait<_20d8e3251_Kind> _self_) {
	return _20d900538_Str(_self_.safe_ptr<_20d9001c5_Ptr>());
}
inline jule::Bool _20d8e310d_Equals_12(jule::Trait<_20d8e3251_Kind> _self_, jule::Ptr<_20d8e3680_TypeKind> _5622_other) {
	return _20d900846_Equals(_self_.data.as<_20d9001c5_Ptr>(), _5622_other);
}
inline jule::Str _20d8e2d00_Str_13(jule::Trait<_20d8e3251_Kind> _self_) {
	return _1ba6aa6ee_Str(_self_.safe_ptr<_1ba6aa446_customType>());
}
inline jule::Bool _20d8e310d_Equals_13(jule::Trait<_20d8e3251_Kind> _self_, jule::Ptr<_20d8e3680_TypeKind> _5622_other) {
	return _1ba6aaa0c_Equals(_self_.data.as<_1ba6aa446_customType>(), _5622_other);
}
inline jule::Ptr<_20d84404d_ImportInfo> _20d90c6dd_FindPackage_0(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _930_ident) {
	return _20d82c83e_FindPackage(_self_.safe_ptr<_20d82c3aa_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_20d84404d_ImportInfo> _20d90c9eb_SelectPackage_0(jule::Trait<_20d90e536_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)> _1332_selector) {
	return _20d82cb4c_SelectPackage(_self_.safe_ptr<_20d82c3aa_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_20d869eb9_Var> _20d90cda3_FindVar_0(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _20d82d004_FindVar(_self_.safe_ptr<_20d82c3aa_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_20d8e298c_TypeAlias> _20d90d25a_FindTypeAlias_0(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _20d82d3ab_FindTypeAlias(_self_.safe_ptr<_20d82c3aa_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_20cba59dc_Struct> _20d90d612_FindStruct_0(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _20d82d763_FindStruct(_self_.safe_ptr<_20d82c3aa_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_20d814370_Fn> _20d90d9b9_FindFn_0(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _20d82db1a_FindFn(_self_.safe_ptr<_20d82c3aa_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_20d81a3ed_Trait> _20d90dcc7_FindTrait_0(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _3328_ident) {
	return _20d82de28_FindTrait(_self_.safe_ptr<_20d82c3aa_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_20d81b0ad_Enum> _20d90e0d5_FindEnum_0(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _3727_ident) {
	return _20d82e236_FindEnum(_self_.safe_ptr<_20d82c3aa_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_20d81b82d_TypeEnum> _20d90e3e3_FindTypeEnum_0(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _4131_ident) {
	return _20d82e544_FindTypeEnum(_self_.safe_ptr<_20d82c3aa_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_20d84404d_ImportInfo> _20d90c6dd_FindPackage_1(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _930_ident) {
	return _20d84456a_FindPackage(_self_.safe_ptr<_20d84404d_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_20d84404d_ImportInfo> _20d90c9eb_SelectPackage_1(jule::Trait<_20d90e536_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)> _1332_selector) {
	return _20d844878_SelectPackage(_self_.safe_ptr<_20d84404d_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_20d869eb9_Var> _20d90cda3_FindVar_1(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _20d844c30_FindVar(_self_.safe_ptr<_20d84404d_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_20d8e298c_TypeAlias> _20d90d25a_FindTypeAlias_1(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _20d8450d7_FindTypeAlias(_self_.safe_ptr<_20d84404d_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_20cba59dc_Struct> _20d90d612_FindStruct_1(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _20d84548e_FindStruct(_self_.safe_ptr<_20d84404d_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_20d814370_Fn> _20d90d9b9_FindFn_1(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _20d845846_FindFn(_self_.safe_ptr<_20d84404d_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_20d81a3ed_Trait> _20d90dcc7_FindTrait_1(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _3328_ident) {
	return _20d845b54_FindTrait(_self_.safe_ptr<_20d84404d_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_20d81b0ad_Enum> _20d90e0d5_FindEnum_1(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _3727_ident) {
	return _20d845e62_FindEnum(_self_.safe_ptr<_20d84404d_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_20d81b82d_TypeEnum> _20d90e3e3_FindTypeEnum_1(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _4131_ident) {
	return _20d846270_FindTypeEnum(_self_.safe_ptr<_20d84404d_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_20d84404d_ImportInfo> _20d90c6dd_FindPackage_2(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _930_ident) {
	return _20d847480_FindPackage(_self_.safe_ptr<_20d846ea7_Package>(), _930_ident);
}
inline jule::Ptr<_20d84404d_ImportInfo> _20d90c9eb_SelectPackage_2(jule::Trait<_20d90e536_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)> _1332_selector) {
	return _20d84778d_SelectPackage(_self_.safe_ptr<_20d846ea7_Package>(), _1332_selector);
}
inline jule::Ptr<_20d869eb9_Var> _20d90cda3_FindVar_2(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _20d847b45_FindVar(_self_.safe_ptr<_20d846ea7_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_20d8e298c_TypeAlias> _20d90d25a_FindTypeAlias_2(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _20d847eec_FindTypeAlias(_self_.safe_ptr<_20d846ea7_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_20cba59dc_Struct> _20d90d612_FindStruct_2(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _20d8483a4_FindStruct(_self_.safe_ptr<_20d846ea7_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_20d814370_Fn> _20d90d9b9_FindFn_2(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _20d84875b_FindFn(_self_.safe_ptr<_20d846ea7_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_20d81a3ed_Trait> _20d90dcc7_FindTrait_2(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _3328_ident) {
	return _20d848a69_FindTrait(_self_.safe_ptr<_20d846ea7_Package>(), _3328_ident);
}
inline jule::Ptr<_20d81b0ad_Enum> _20d90e0d5_FindEnum_2(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _3727_ident) {
	return _20d848d77_FindEnum(_self_.safe_ptr<_20d846ea7_Package>(), _3727_ident);
}
inline jule::Ptr<_20d81b82d_TypeEnum> _20d90e3e3_FindTypeEnum_2(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _4131_ident) {
	return _20d849185_FindTypeEnum(_self_.safe_ptr<_20d846ea7_Package>(), _4131_ident);
}
inline jule::Ptr<_20d84404d_ImportInfo> _20d90c6dd_FindPackage_3(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _930_ident) {
	return _20d84c6b6_FindPackage(_self_.safe_ptr<_20d84c199_Sema>(), _930_ident);
}
inline jule::Ptr<_20d84404d_ImportInfo> _20d90c9eb_SelectPackage_3(jule::Trait<_20d90e536_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)> _1332_selector) {
	return _20d84c9c4_SelectPackage(_self_.safe_ptr<_20d84c199_Sema>(), _1332_selector);
}
inline jule::Ptr<_20d869eb9_Var> _20d90cda3_FindVar_3(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _20d84cd7b_FindVar(_self_.safe_ptr<_20d84c199_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_20d8e298c_TypeAlias> _20d90d25a_FindTypeAlias_3(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _20d84d233_FindTypeAlias(_self_.safe_ptr<_20d84c199_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_20cba59dc_Struct> _20d90d612_FindStruct_3(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _20d84d5da_FindStruct(_self_.safe_ptr<_20d84c199_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_20d814370_Fn> _20d90d9b9_FindFn_3(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _20d84d992_FindFn(_self_.safe_ptr<_20d84c199_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_20d81a3ed_Trait> _20d90dcc7_FindTrait_3(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _3328_ident) {
	return _20d84dca0_FindTrait(_self_.safe_ptr<_20d84c199_Sema>(), _3328_ident);
}
inline jule::Ptr<_20d81b0ad_Enum> _20d90e0d5_FindEnum_3(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _3727_ident) {
	return _20d84e0ad_FindEnum(_self_.safe_ptr<_20d84c199_Sema>(), _3727_ident);
}
inline jule::Ptr<_20d81b82d_TypeEnum> _20d90e3e3_FindTypeEnum_3(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _4131_ident) {
	return _20d84e3bb_FindTypeEnum(_self_.safe_ptr<_20d84c199_Sema>(), _4131_ident);
}
inline jule::Ptr<_20d84404d_ImportInfo> _20d90c6dd_FindPackage_4(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _930_ident) {
	return _20d8ad084_FindPackage(_self_.safe_ptr<_20d8aca67_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_20d84404d_ImportInfo> _20d90c9eb_SelectPackage_4(jule::Trait<_20d90e536_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)> _1332_selector) {
	return _20d8ad392_SelectPackage(_self_.safe_ptr<_20d8aca67_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_20d869eb9_Var> _20d90cda3_FindVar_4(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _20d8ad749_FindVar(_self_.safe_ptr<_20d8aca67_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_20d8e298c_TypeAlias> _20d90d25a_FindTypeAlias_4(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _20d8adb01_FindTypeAlias(_self_.safe_ptr<_20d8aca67_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_20cba59dc_Struct> _20d90d612_FindStruct_4(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _20d8adea8_FindStruct(_self_.safe_ptr<_20d8aca67_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_20d814370_Fn> _20d90d9b9_FindFn_4(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _20d8ae360_FindFn(_self_.safe_ptr<_20d8aca67_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_20d81a3ed_Trait> _20d90dcc7_FindTrait_4(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _3328_ident) {
	return _20d8ae66d_FindTrait(_self_.safe_ptr<_20d8aca67_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_20d81b0ad_Enum> _20d90e0d5_FindEnum_4(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _3727_ident) {
	return _20d8ae97b_FindEnum(_self_.safe_ptr<_20d8aca67_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_20d81b82d_TypeEnum> _20d90e3e3_FindTypeEnum_4(jule::Trait<_20d90e536_Lookup> _self_, jule::Str _4131_ident) {
	return _20d8aec89_FindTypeEnum(_self_.safe_ptr<_20d8aca67_SymbolTable>(), _4131_ident);
}
inline jule::Str _1ba6d3958_Name_0(jule::Trait<_1ba713636_CommonFlag> _self_) {
	return _1c9bd6743_Name(_self_.safe_ptr<_1c9bd637a_Flag>());
}
inline jule::I32 _1ba6d3a8a_Short_0(jule::Trait<_1ba713636_CommonFlag> _self_) {
	return _1c9bd6b1c_Short(_self_.safe_ptr<_1c9bd637a_Flag>());
}
inline jule::Str _1ba6d3bbc_What_0(jule::Trait<_1ba713636_CommonFlag> _self_) {
	return _1c9bd6886_What(_self_.safe_ptr<_1c9bd637a_Flag>());
}
inline void _1ba6d3d43_Reset_0(jule::Trait<_1ba713636_CommonFlag> _self_) {
	_1c9bd69c9_Reset(_self_.safe_ptr<_1c9bd637a_Flag>());
}
inline jule::Str _1ba6d3958_Name_1(jule::Trait<_1ba713636_CommonFlag> _self_) {
	return _1c9bd88bb_Name(_self_.safe_ptr<_1c9bda12b_Flag>());
}
inline jule::I32 _1ba6d3a8a_Short_1(jule::Trait<_1ba713636_CommonFlag> _self_) {
	return _1c9bda549_Short(_self_.safe_ptr<_1c9bda12b_Flag>());
}
inline jule::Str _1ba6d3bbc_What_1(jule::Trait<_1ba713636_CommonFlag> _self_) {
	return _1c9bd9ba8_What(_self_.safe_ptr<_1c9bda12b_Flag>());
}
inline void _1ba6d3d43_Reset_1(jule::Trait<_1ba713636_CommonFlag> _self_) {
	_1c9bda417_Reset(_self_.safe_ptr<_1c9bda12b_Flag>());
}
inline jule::Str _1ba6d3958_Name_2(jule::Trait<_1ba713636_CommonFlag> _self_) {
	return _1c9bdc1d8_Name(_self_.safe_ptr<_1c9bdd948_Flag>());
}
inline jule::I32 _1ba6d3a8a_Short_2(jule::Trait<_1ba713636_CommonFlag> _self_) {
	return _1c9bddd66_Short(_self_.safe_ptr<_1c9bdd948_Flag>());
}
inline jule::Str _1ba6d3bbc_What_2(jule::Trait<_1ba713636_CommonFlag> _self_) {
	return _1c9bdd4c5_What(_self_.safe_ptr<_1c9bdd948_Flag>());
}
inline void _1ba6d3d43_Reset_2(jule::Trait<_1ba713636_CommonFlag> _self_) {
	_1c9bddc34_Reset(_self_.safe_ptr<_1c9bdd948_Flag>());
}
inline jule::Str _1ba6d3958_Name_3(jule::Trait<_1ba713636_CommonFlag> _self_) {
	return _1c9be0a49_Name(_self_.safe_ptr<_1c9be22a9_Flag>());
}
inline jule::I32 _1ba6d3a8a_Short_3(jule::Trait<_1ba713636_CommonFlag> _self_) {
	return _1c9be26c7_Short(_self_.safe_ptr<_1c9be22a9_Flag>());
}
inline jule::Str _1ba6d3bbc_What_3(jule::Trait<_1ba713636_CommonFlag> _self_) {
	return _1c9be1d36_What(_self_.safe_ptr<_1c9be22a9_Flag>());
}
inline void _1ba6d3d43_Reset_3(jule::Trait<_1ba713636_CommonFlag> _self_) {
	_1c9be2595_Reset(_self_.safe_ptr<_1c9be22a9_Flag>());
}
inline jule::Str _1ba6d3958_Name_4(jule::Trait<_1ba713636_CommonFlag> _self_) {
	return _1c9be4366_Name(_self_.safe_ptr<_1c9be5ac6_Flag>());
}
inline jule::I32 _1ba6d3a8a_Short_4(jule::Trait<_1ba713636_CommonFlag> _self_) {
	return _1c9be5ee4_Short(_self_.safe_ptr<_1c9be5ac6_Flag>());
}
inline jule::Str _1ba6d3bbc_What_4(jule::Trait<_1ba713636_CommonFlag> _self_) {
	return _1c9be5653_What(_self_.safe_ptr<_1c9be5ac6_Flag>());
}
inline void _1ba6d3d43_Reset_4(jule::Trait<_1ba713636_CommonFlag> _self_) {
	_1c9be5db2_Reset(_self_.safe_ptr<_1c9be5ac6_Flag>());
}


static _20d8413d0_ImporterMptrData _20d8413d0_Importer_mptr_data[] = {
	{
		._20d8402e1_SetModPath=_20d8402e1_SetModPath_0,
		._20d840544_GetModPath=_20d840544_GetModPath_0,
		._20d840852_ModById=_20d840852_ModById_0,
		._20d840b60_GetImport=_20d840b60_GetImport_0,
		._20d841017_ImportPackage=_20d841017_ImportPackage_0,
		._20d84128c_Imported=_20d84128c_Imported_0,
	},
};
static _20d8e3251_KindMptrData _20d8e3251_Kind_mptr_data[] = {
	{
		._20d8e2d00_Str=_20d8e2d00_Str_0,
		._20d8e310d_Equals=_20d8e310d_Equals_0,
	},
	{
		._20d8e2d00_Str=_20d8e2d00_Str_1,
		._20d8e310d_Equals=_20d8e310d_Equals_1,
	},
	{
		._20d8e2d00_Str=_20d8e2d00_Str_2,
		._20d8e310d_Equals=_20d8e310d_Equals_2,
	},
	{
		._20d8e2d00_Str=_20d8e2d00_Str_3,
		._20d8e310d_Equals=_20d8e310d_Equals_3,
	},
	{
		._20d8e2d00_Str=_20d8e2d00_Str_4,
		._20d8e310d_Equals=_20d8e310d_Equals_4,
	},
	{
		._20d8e2d00_Str=_20d8e2d00_Str_5,
		._20d8e310d_Equals=_20d8e310d_Equals_5,
	},
	{
		._20d8e2d00_Str=_20d8e2d00_Str_6,
		._20d8e310d_Equals=_20d8e310d_Equals_6,
	},
	{
		._20d8e2d00_Str=_20d8e2d00_Str_7,
		._20d8e310d_Equals=_20d8e310d_Equals_7,
	},
	{
		._20d8e2d00_Str=_20d8e2d00_Str_8,
		._20d8e310d_Equals=_20d8e310d_Equals_8,
	},
	{
		._20d8e2d00_Str=_20d8e2d00_Str_9,
		._20d8e310d_Equals=_20d8e310d_Equals_9,
	},
	{
		._20d8e2d00_Str=_20d8e2d00_Str_10,
		._20d8e310d_Equals=_20d8e310d_Equals_10,
	},
	{
		._20d8e2d00_Str=_20d8e2d00_Str_11,
		._20d8e310d_Equals=_20d8e310d_Equals_11,
	},
	{
		._20d8e2d00_Str=_20d8e2d00_Str_12,
		._20d8e310d_Equals=_20d8e310d_Equals_12,
	},
	{
		._20d8e2d00_Str=_20d8e2d00_Str_13,
		._20d8e310d_Equals=_20d8e310d_Equals_13,
	},
};
static _20d90e536_LookupMptrData _20d90e536_Lookup_mptr_data[] = {
	{
		._20d90c6dd_FindPackage=_20d90c6dd_FindPackage_0,
		._20d90c9eb_SelectPackage=_20d90c9eb_SelectPackage_0,
		._20d90cda3_FindVar=_20d90cda3_FindVar_0,
		._20d90d25a_FindTypeAlias=_20d90d25a_FindTypeAlias_0,
		._20d90d612_FindStruct=_20d90d612_FindStruct_0,
		._20d90d9b9_FindFn=_20d90d9b9_FindFn_0,
		._20d90dcc7_FindTrait=_20d90dcc7_FindTrait_0,
		._20d90e0d5_FindEnum=_20d90e0d5_FindEnum_0,
		._20d90e3e3_FindTypeEnum=_20d90e3e3_FindTypeEnum_0,
	},
	{
		._20d90c6dd_FindPackage=_20d90c6dd_FindPackage_1,
		._20d90c9eb_SelectPackage=_20d90c9eb_SelectPackage_1,
		._20d90cda3_FindVar=_20d90cda3_FindVar_1,
		._20d90d25a_FindTypeAlias=_20d90d25a_FindTypeAlias_1,
		._20d90d612_FindStruct=_20d90d612_FindStruct_1,
		._20d90d9b9_FindFn=_20d90d9b9_FindFn_1,
		._20d90dcc7_FindTrait=_20d90dcc7_FindTrait_1,
		._20d90e0d5_FindEnum=_20d90e0d5_FindEnum_1,
		._20d90e3e3_FindTypeEnum=_20d90e3e3_FindTypeEnum_1,
	},
	{
		._20d90c6dd_FindPackage=_20d90c6dd_FindPackage_2,
		._20d90c9eb_SelectPackage=_20d90c9eb_SelectPackage_2,
		._20d90cda3_FindVar=_20d90cda3_FindVar_2,
		._20d90d25a_FindTypeAlias=_20d90d25a_FindTypeAlias_2,
		._20d90d612_FindStruct=_20d90d612_FindStruct_2,
		._20d90d9b9_FindFn=_20d90d9b9_FindFn_2,
		._20d90dcc7_FindTrait=_20d90dcc7_FindTrait_2,
		._20d90e0d5_FindEnum=_20d90e0d5_FindEnum_2,
		._20d90e3e3_FindTypeEnum=_20d90e3e3_FindTypeEnum_2,
	},
	{
		._20d90c6dd_FindPackage=_20d90c6dd_FindPackage_3,
		._20d90c9eb_SelectPackage=_20d90c9eb_SelectPackage_3,
		._20d90cda3_FindVar=_20d90cda3_FindVar_3,
		._20d90d25a_FindTypeAlias=_20d90d25a_FindTypeAlias_3,
		._20d90d612_FindStruct=_20d90d612_FindStruct_3,
		._20d90d9b9_FindFn=_20d90d9b9_FindFn_3,
		._20d90dcc7_FindTrait=_20d90dcc7_FindTrait_3,
		._20d90e0d5_FindEnum=_20d90e0d5_FindEnum_3,
		._20d90e3e3_FindTypeEnum=_20d90e3e3_FindTypeEnum_3,
	},
	{
		._20d90c6dd_FindPackage=_20d90c6dd_FindPackage_4,
		._20d90c9eb_SelectPackage=_20d90c9eb_SelectPackage_4,
		._20d90cda3_FindVar=_20d90cda3_FindVar_4,
		._20d90d25a_FindTypeAlias=_20d90d25a_FindTypeAlias_4,
		._20d90d612_FindStruct=_20d90d612_FindStruct_4,
		._20d90d9b9_FindFn=_20d90d9b9_FindFn_4,
		._20d90dcc7_FindTrait=_20d90dcc7_FindTrait_4,
		._20d90e0d5_FindEnum=_20d90e0d5_FindEnum_4,
		._20d90e3e3_FindTypeEnum=_20d90e3e3_FindTypeEnum_4,
	},
};
static _1ba713636_CommonFlagMptrData _1ba713636_CommonFlag_mptr_data[] = {
	{
		._1ba6d3958_Name=_1ba6d3958_Name_0,
		._1ba6d3a8a_Short=_1ba6d3a8a_Short_0,
		._1ba6d3bbc_What=_1ba6d3bbc_What_0,
		._1ba6d3d43_Reset=_1ba6d3d43_Reset_0,
	},
	{
		._1ba6d3958_Name=_1ba6d3958_Name_1,
		._1ba6d3a8a_Short=_1ba6d3a8a_Short_1,
		._1ba6d3bbc_What=_1ba6d3bbc_What_1,
		._1ba6d3d43_Reset=_1ba6d3d43_Reset_1,
	},
	{
		._1ba6d3958_Name=_1ba6d3958_Name_2,
		._1ba6d3a8a_Short=_1ba6d3a8a_Short_2,
		._1ba6d3bbc_What=_1ba6d3bbc_What_2,
		._1ba6d3d43_Reset=_1ba6d3d43_Reset_2,
	},
	{
		._1ba6d3958_Name=_1ba6d3958_Name_3,
		._1ba6d3a8a_Short=_1ba6d3a8a_Short_3,
		._1ba6d3bbc_What=_1ba6d3bbc_What_3,
		._1ba6d3d43_Reset=_1ba6d3d43_Reset_3,
	},
	{
		._1ba6d3958_Name=_1ba6d3958_Name_4,
		._1ba6d3a8a_Short=_1ba6d3a8a_Short_4,
		._1ba6d3bbc_What=_1ba6d3bbc_What_4,
		._1ba6d3d43_Reset=_1ba6d3d43_Reset_4,
	},
};


jule::Str _1ba6d478e_OutDir = jule::Str("dist", 4);
jule::Str _1ba6d4a9c_OutName = jule::Str("ir.cpp", 6);
jule::Str _1ba6d4c01_Out = jule::Str();
jule::Str _22eaa23bc_Compiler = jule::Str();
jule::Str _22eb6016c_CompilerPath = jule::Str();
jule::Str _22eb6038c_CppStd = jule::Str("cpp17", 5);
jule::Bool _22eb605ac_Shadowing = false;
jule::Bool _22eb60810_Transpilation = false;
jule::Bool _22eb60ac9_Test = false;
jule::Bool _22eb60d93_RC = true;
jule::Bool _22eb6126c_Safety = true;
jule::Bool _22eb61536_Production = false;
jule::Ptr<_20b05381a_RangeTable> _20a3cd943__L = jule::new_ptr<_20b05381a_RangeTable>(_20b05381a_RangeTable{._field_R16=jule::Slice<_20b052e24_Range16>::make({_20b052e24_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_20b052e24_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_20b052e24_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_20b052e24_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_20b052e24_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_20b052e24_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_20b052e24_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_20b052e24_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_20b052e24_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_20b052e24_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_20b052e24_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_20b052e24_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_20b052e24_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_20b052e24_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_20b052e24_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_20b052e24_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_20b052e24_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_20b052e24_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_20b052e24_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_20b052e24_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_20b052e24_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_20b052e24_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_20b052e24_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_20b052e24_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_20b052e24_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_20b052e24_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_20b052e24_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_20b052e24_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_20b052e24_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_20b052e24_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_20b052e24_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_20b052e24_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_20b052e24_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_20b052e24_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_20b052e24_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_20b052e24_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_20b052e24_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_20b052e24_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_20b052e24_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_20b052e24_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_20b052e24_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_20b052e24_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_20b052e24_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_20b052e24_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_20b052e24_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_20b052e24_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_20b052e24_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_20b052e24_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_20b052e24_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_20b052e24_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_20b052e24_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_20b052e24_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_20b052e24_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_20b052e24_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_20b052e24_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_20b052e24_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_20b052e24_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_20b052e24_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_20b052e24_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_20b052e24_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_20b053397_Range32>::make({_20b053397_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_20b053397_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_20b053397_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_20b053397_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_20b053397_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_20b053397_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_20b053397_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_20b053397_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_20b053397_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_20b053397_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_20b053397_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_20b053397_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_20b053397_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_20b053397_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_20b053397_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_20b053397_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_20b053397_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_20b053397_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_20b053397_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_20b053397_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_20b053397_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_20b053397_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_20b053397_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_20b053397_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_20b053397_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_20b053397_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_20b053397_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_20b053397_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_20b053397_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_20b053397_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_20b053397_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_20b053397_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_20b053397_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_20b053397_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_20b053397_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_20b053397_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_20b053397_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_20b053397_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_20b053397_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_20b053397_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_20b053397_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_20b053397_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_20b053397_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_20b05381a_RangeTable> _20a3ce933__LU = jule::new_ptr<_20b05381a_RangeTable>(_20b05381a_RangeTable{._field_R16=jule::Slice<_20b052e24_Range16>::make({_20b052e24_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_20b052e24_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_20b052e24_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_20b052e24_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_20b052e24_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_20b052e24_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_20b052e24_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_20b052e24_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_20b052e24_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_20b052e24_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_20b052e24_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_20b052e24_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_20b052e24_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_20b052e24_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_20b052e24_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_20b052e24_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_20b052e24_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_20b053397_Range32>::make({_20b053397_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_20b053397_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_20b053397_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_20b053397_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_20b053397_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_20b053397_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_20b053397_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::Str,4> _20b13e3b7_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _20b1ad1e4_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _20b1aed3e_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _20b20556b_PathStdlib = jule::Str();
jule::Str _20b205deb_PathExec = jule::Str();
jule::Str _20b20711c_PathWd = jule::Str();
jule::Str _20b215988_PathApi = jule::Str();
jule::Array<jule::I32,5> _20b444a1e_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _20b444c3e_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _20b444e92_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _20b4dea86_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _20b4ded83_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_20b4ec973_kindPair,47> _20b4ecda2_keywords = jule::Array<_20b4ec973_kindPair,47>({_20b4ec973_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(21LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(23LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(24LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(25LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(26LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(27LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(28LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(29LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(30LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(31LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(32LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(33LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(34LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(35LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(36LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(37LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(39LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_20b4ec973_kindPair,39> _20b4ed1e3_basicOps = jule::Array<_20b4ec973_kindPair,39>({_20b4ec973_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(22LLU)},_20b4ec973_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_20b4ec973_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_20b4ec973_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_20b4ec973_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(38LLU)}});
jule::Array<jule::U8,32> _20d7b6d5b__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _20d7b7422__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_20d3d1206_floatInfo _20d23e11e_f32info = _20d3d1206_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_20d3d1206_floatInfo _20d23e581_f64info = _20d3d1206_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _20d3d336d_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _20d48e814_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _20d536dd9_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _20d554cb4_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _20d5d2902_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_20d804e98_leftCheat> _20d6c1d32_leftCheats = jule::Slice<_20d804e98_leftCheat>::make({_20d804e98_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_20d804e98_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_20d804e98_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_20d804e98_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_20d804e98_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_20d804e98_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_20d804e98_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_20d804e98_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_20d804e98_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_20d804e98_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_20d804e98_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_20d804e98_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_20d804e98_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_20d804e98_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_20d804e98_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_20d804e98_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_20d804e98_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_20d804e98_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_20d804e98_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_20d804e98_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_20d804e98_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_20d804e98_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_20d804e98_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_20d804e98_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_20d804e98_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_20d804e98_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_20d804e98_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_20d804e98_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_20d804e98_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_20d804e98_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_20d804e98_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_20d804e98_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_20d804e98_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_20d804e98_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_20d804e98_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_20d804e98_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_20d804e98_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_20d804e98_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_20d804e98_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_20d804e98_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_20d804e98_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_20d804e98_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_20d804e98_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_20d804e98_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_20d804e98_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_20d804e98_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_20d804e98_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_20d804e98_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_20d804e98_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_20d804e98_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_20d804e98_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_20d804e98_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_20d804e98_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_20d804e98_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_20d804e98_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_20d804e98_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_20d804e98_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_20d804e98_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_20d804e98_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_20d804e98_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_20d804e98_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _20ccc2114_BitSize = 0LL;
jule::Str _20ccc3984_SysInt = jule::Str();
jule::Str _20cd24d26_SysUint = jule::Str();
jule::Slice<jule::Str> _20d81d0e3_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _20da5b320_Copy = false;
jule::Bool _20da5b62d_Deadcode = false;
jule::Bool _20da5b8e7_Append = false;
jule::Bool _20da5bc05_Math = false;
jule::Bool _20da5bebe_Access = false;
jule::Bool _20da5c288_Inline = false;
jule::Bool _20da5c552_Ptr = false;
jule::Bool _20da5c92b_Cond = false;
jule::Bool _1e1273ca8_exprEnabled = false;
jule::Bool _1e1274924_scopeEnabled = false;
jule::Array<jule::U64,12> _1e1aa4990_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1e1a01348_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_20b05381a_RangeTable> _20a3dc138_Upper = _20a3ce933__LU;
jule::Array<_20b114a85_acceptRange,16> _20b114d93_acceptRanges = jule::Array<_20b114a85_acceptRange,16>({_20b114a85_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_20b114a85_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_20b114a85_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_20b114a85_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_20b114a85_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _20b19dbeb_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _20b205901_Os = jule::Str("darwin", 6);
jule::Str _20b1cd07c_Arch = jule::Str("amd64", 5);
jule::Ptr<_20b05381a_RangeTable> _20a3d5ad2_Letter = _20a3cd943__L;
jule::Array<jule::U8,256> _20b04c281__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _20b114502_first = jule::Array<jule::U8,256>({});





std::ostream &operator<<(std::ostream &_Stream, _20b052e24_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20b053397_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20b05381a_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20b114a85_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _2231ce044_index(_2231c7933_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];;
	};
	return (*_self_)._field_path[_5424_i];;
}



inline void _2231d1871_append(_2231c7933_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len(), (*_self_)._field_path.len(), 0);
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _2231d319c_string(_2231c7933_lazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_volAndPath.slice(0LL,((*_self_)._field_volLen + (*_self_)._field_w));;
	};
	return ((*_self_)._field_volAndPath.slice(0LL,(*_self_)._field_volLen) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _2231c7933_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _216327de2_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_216327de2_DirEntry>>> static__20b13e021_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_216327de2_DirEntry>> __jule_func_result;
	DIR* _1617_dir = _2163dad1d_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_216327de2_DirEntry>>>(_21623454b_getLastFsError());
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _2163db0b5_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1c7c291b1;
			};
			jule::Str _2517_name = _2163bbd54_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_216417b08_Status> _2621_stat = ({
				auto except = static__21622e3c0_Of(_223218d81_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_216327de2_DirEntry>>>(except.error);
				} jule::Ptr<_216417b08_Status>(nullptr);});
			});;
			__jule_func_result = jule::alloc_for_append(__jule_func_result,1);__jule_func_result.__push(jule::new_ptr<_216327de2_DirEntry>(_216327de2_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat}));;
		}
	_iter_next_1c7c291b1:;
	}
	_iter_end_1c7c291b1:;;
	_2163db35c_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_216327de2_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__20b13e153_Create(jule::Str _3922_path) {
	if ((_2163dbbdc_Mkdir((&(_3922_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(_21623454b_getLastFsError());
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__20b13e285_Remove(jule::Str _5122_path) {
	if ((_2163dbe84_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_21623454b_getLastFsError());
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _21635d3ab_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_21624ed4c_File>> static__216250c93_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _1913_handle = _2163da504_Open((&(_1820_path[0LL])),static_cast<jule::I64>(_1831_flag),_1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_21624ed4c_File>>(_21623454b_getLastFsError());
	};
	return jule::Exceptional<jule::Ptr<_21624ed4c_File>>(jule::Any(), static__216250039_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));;
}



inline jule::VoidExceptional static__2162520e6_Remove(jule::Str _3022_path) {
	if ((_2163dc22b_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_21623454b_getLastFsError());
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _22ebe5a0a_Write(_21624ed4c_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_216408577_Write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4424_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(_21623454b_getLastFsError());
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _21622d5bc_Read(_21624ed4c_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_216407d18_Read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6427_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(_21623454b_getLastFsError());
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_21624ed4c_File> static__216250039_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_21624ed4c_File>(_21624ed4c_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_21624ed4c_File>> static__21622ea52_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_21624ed4c_File>>(jule::Any(), ({
		auto except = static__216250c93_Open(_5522_path,static_cast<jule::I64>(1538LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_21624ed4c_File>>(except.error);
		} jule::Ptr<_21624ed4c_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__216328be5_Read(jule::Str _6720_path) {
	jule::Ptr<_216417b08_Status> _6813_s = ({
		auto except = static__21622e3c0_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_216417b08_Status>(nullptr);});
	});;
	if ((!(_21635e016_IsReg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_Size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_21624ed4c_File> _7817_f = ({
		auto except = static__216250c93_Open(_6720_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_21624ed4c_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _216250ad9_Close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_Size), static_cast<jule::I64>(_6813_s.get()._field_Size), 0);;
	jule::I64 _8213_n = ({
		auto except = _21622d5bc_Read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8117_buff.slice(0LL,_8213_n));;
}



inline jule::VoidExceptional static__2163292ab_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_21624ed4c_File> _9217_f = ({
		auto except = static__216250c93_Open(_9121_path,static_cast<jule::I64>(1537LL),_9146_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_21624ed4c_File>(nullptr);});
	});;
	({
		auto except = _22ebe5a0a_Write(_9217_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _216250ad9_Close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _21622db83_Seek(_21624ed4c_File* _self_, jule::I64 _10523_offset, jule::I64 _10536_origin) {
	jule::I64 _10613_pos = _21640792d_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10523_offset,static_cast<jule::I64>(_10536_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_21623454b_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _10613_pos);;
}



inline jule::VoidExceptional _216250ad9_Close(_21624ed4c_File* _self_) {
	if ((_21640818c_Close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_21623454b_getLastFsError());
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _21624ed4c_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_216417b08_Status>> static__21622e3c0_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_216417b08_Status>>(static_cast<jule::I64>(4LL));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _2163da119_Stat((&(_1118_path[0LL])),(&(_1517_handle)));;
	if ((_1613_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_216417b08_Status>>(jule::Any(), jule::new_ptr<_216417b08_Status>(_216417b08_Status{._field_Mode=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_mode)), ._field_Size=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_size))}));;
	};
	return jule::Exceptional<jule::Ptr<_216417b08_Status>>(_21623454b_getLastFsError());
}



inline jule::Bool _2163285da_IsDir(_216417b08_Status* _self_) {
	return (((*_self_)._field_Mode & 16384LLU) == 16384LLU);;
}



inline jule::Bool _21635e016_IsReg(_216417b08_Status* _self_) {
	return (((*_self_)._field_Mode & 32768LLU) == 32768LLU);;
}







std::ostream &operator<<(std::ostream &_Stream, _216417b08_Status _Src) {
	_Stream << "Status{";
	_Stream << "Mode:" << _Src._field_Mode << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20b2171a4_Cmd> static__20b2175d3_New(jule::Str _2019_path) {
	return jule::new_ptr<_20b2171a4_Cmd>(_20b2171a4_Cmd{._field_path=_2019_path, });;
}



inline jule::Exceptional<jule::I64> _20b217847_Spawn(_20b2171a4_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _20b21a718_spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::Exceptional<jule::I64> _20b21a718_spawn(_20b2171a4_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(3LL));
	};
	jule::I64 _4913_pid = fork();;
	{
		auto &_match_expr{ _4913_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1c7c4b090:;
			{
				return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1c7c4c36b:;
			{
				jule::I64 _5421_status = 0LL;;
				if (((*_self_)._field_Env == nullptr)) {
					_5421_status=static_cast<jule::I64>(_20b21a042_execvp((*_self_)._field_path,(*_self_)._field_Args));
				} else {
					_5421_status=static_cast<jule::I64>(_20b21a42c_execve((*_self_)._field_path,(*_self_)._field_Args,(*_self_)._field_Env));
				};
				if ((_5421_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				};
				_20b21b043_Exit(255LL);
			}
		}
		_match_end_1c7c4c316:;
	};
	jule::I64 _6513_status = 0LL;;
	if ((waitpid(_4913_pid,((signed*)((&(_6513_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(_20b216923_getLastProcessError());
	};
	if (WIFSIGNALED(_6513_status)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(WEXITSTATUS(_6513_status)));;
}







std::ostream &operator<<(std::ostream &_Stream, _20b2171a4_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20b1bc016_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _20b4e5938_Prec(_20b4e5581_Token* _self_) {
	if (((*_self_)._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1c7ced87e:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1c7ced8e5:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1c7ced63c:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1c7ced6a3:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1c7ced719:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1c7ced087:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c7ced032:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20b4e5581_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20b4ead28_IsOk(_20b4ea91b_File* _self_) {
	({
		auto except = static__21622e3c0_Of((*_self_)._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} jule::Ptr<_216417b08_Status>(nullptr);});
	});
	return true;;
}



inline void _20b4eb09d_Fill(_20b4ea91b_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*_self_)._field_Data=_2327_data;
}



inline jule::Str _20b4eb312_Dir(_20b4ea91b_File* _self_) {
	return _22321c8e0_Dir((*_self_)._field_Path);;
}



inline jule::Str _20b4eb576_Name(_20b4ea91b_File* _self_) {
	return _2231ee64c_Base((*_self_)._field_Path);;
}



inline jule::Uintptr _20b4eb7da_Addr(_20b4ea91b_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));;
}



inline jule::Str _20b4ebae8_GetRow(_20b4ea91b_File* _self_, jule::I64 _4421_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_Data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_Data[_4717_i] != '\n')) {
				goto _iter_next_1c7d03433;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*_self_)._field_Data.slice(_4617_lineStart,_4717_i));;
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1c7d03433:;
	}
	_iter_end_1c7d03433:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _20b4ea91b_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20b4ec973_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _20b503a78_pushErr(_20b5034d4_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_20b4ed6dd_makeErr((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45826_fmt,_45839_args));;
}



inline void _20b503d97_pushErrTok(_20b5034d4_lex* _self_, jule::Ptr<_20b4e5581_Token>& _46330_token, jule::Str _46345_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_20b4ed6dd_makeErr(_46330_token.get()._field_Row,_46330_token.get()._field_Column,(*_self_)._field_file,_46345_fmt,jule::Slice<jule::Any>()));;
}



inline void _20b504073_lex(_20b5034d4_lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_20b506075_newLine(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_20b4e5581_Token> _47321_token = _20b5073ea_token(&(*_self_));;
			if ((_47321_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1c7d3bc0d:;
	}
	_iter_end_1c7d3bc0d:;;
}



inline jule::Str _20b504381_id(_20b5034d4_lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _48614_r = 0;;
	jule::I64 _48621_i = 0;;
	({
		_i32_int __jule_assign_result = _20b115624_DecodeRune(_48222_ln);
		_48614_r = __jule_assign_result.__jule_result_arg0;
		_48621_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_48614_r != '_') && (!(_20b4e8a5c_IsLetter(_48614_r))))) {
		return jule::Str();;
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr = 0;;
			jule::I64 _49222_n = 0;;
			({
				_i32_int __jule_assign_result = _20b115624_DecodeRune(_48222_ln.slice(_48621_i));
				_49218_pr = __jule_assign_result.__jule_result_arg0;
				_49222_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_49218_pr != '_') && (!(_20b4e909b_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_20b4e8a5c_IsLetter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));;
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1c7d3eded:;
	}
	_iter_end_1c7d3eded:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);;
}



inline jule::Slice<jule::U8> _20b5045e5_resume(_20b5034d4_lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_Data[_50717_i]);;
			if (_20b4e860b_IsSpace(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1c7d448c5:;
						{
							_20b506075_newLine(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1c7d446a5:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1c7d3ed65:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1c7d442a9:;
				};
				goto _iter_next_1c7d42a5a;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_1c7d43660;
					};
				}
			_iter_next_1c7d43660:;
			}
			_iter_end_1c7d43660:;;
			return (*_self_)._field_file.get()._field_Data.slice(_50717_i,_52421_j);;
		}
	_iter_next_1c7d42a5a:;
	}
	_iter_end_1c7d42a5a:;;
	return nullptr;;
}



inline void _20b50486a_lexLineComment(_20b5034d4_lex* _self_, jule::Ptr<_20b4e5581_Token>& _53538_token) {
	jule::I64 _53613_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53917_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_1c7d471ad;
			};
		}
	_iter_next_1c7d471ad:;
	}
	_iter_end_1c7d471ad:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53538_token.get()._field_Id=static_cast<jule::U64>(18LLU);
		_53538_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_53613_start,(*_self_)._field_pos));
	};
}



inline void _20b504ae0_lexRangeComment(_20b5034d4_lex* _self_, jule::Ptr<_20b4e5581_Token>& _55039_token) {
	jule::I64 _55113_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55417_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_1c7d4a502;
			};
			if ((_55417_r == '\n')) {
				_20b506075_newLine(&(*_self_));
				goto _iter_next_1c7d4a502;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*_self_)._field_file.get()._field_Data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55039_token.get()._field_Id=static_cast<jule::U64>(18LLU);
					_55039_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_55113_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1c7d4a502:;
	}
	_iter_end_1c7d4a502:;;
	_20b503a78_pushErr(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _20b504ded_num(_20b5034d4_lex* _self_, jule::Slice<jule::U8>& _57823_txt) {
	jule::Str __jule_func_result;
	if ((_57823_txt[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_20b50200a_hexNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_20b501c63_octalNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_20b5006ac_binaryNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_20b500415_commonNum(_57823_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _20b50520b_escapeSeq(_20b5034d4_lex* _self_, jule::Slice<jule::U8>& _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if ((_60029_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60029_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1c7d554c9:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60029_txt.slice(0LL,2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c7d5540d:;
			{
				_60117_seq=_20b5025e3_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1c7d55144:;
			{
				_60117_seq=_20b5028ac_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c7d551aa:;
			{
				_60117_seq=_20b502a66_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_1c7d548d5:;
			{
				_60117_seq=_20b502cec_byteEscape(_60029_txt);
			}
		}
		_match_end_1c7d55023:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*_self_)._field_pos)++;
		_20b503a78_pushErr(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*_self_)._field_pos+=_60117_seq.len();
	return _60117_seq;;
}



inline jule::Str _20b5055b3_getRune(_20b5034d4_lex* _self_, jule::Slice<jule::U8>& _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && (_63027_txt[0LL] == '\\'))) {
		return _20b50520b_escapeSeq(&(*_self_), _63027_txt);;
	};
	jule::I32 _63414_r = 0;;
	jule::I64 _63417_n = 0;;
	({
		_i32_int __jule_assign_result = _20b115624_DecodeRune(_63027_txt);
		_63414_r = __jule_assign_result.__jule_result_arg0;
		_63417_n = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_)._field_pos+=_63417_n;
	return static_cast<jule::Str>(_63414_r);;
}



inline jule::Str _20b5058c1_lexRune(_20b5034d4_lex* _self_, jule::Slice<jule::U8>& _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64217_n = 0LL;;
	jule::I64 _64317_i = 1LL;;
	for (; (_64317_i < _63927_txt.len()); (_64317_i)++) {
		{
			if ((_63927_txt[_64317_i] == '\r')) {
				goto _iter_next_1c7d5b4e1;
			};
			if ((_63927_txt[_64317_i] == '\n')) {
				_20b503a78_pushErr(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_20b506075_newLine(&(*_self_));
				return jule::Str();;
			};
			jule::Slice<jule::U8> _65517_part = _63927_txt.slice(_64317_i);;
			jule::Str _65617_r = _20b5055b3_getRune(&(*_self_), _65517_part,false);;
			_64017_run+=_65617_r;
			(*_self_)._field_column+=_20b117318_RuneCountStr(_65617_r);
			if ((_65617_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1c7d5b4e1;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_1c7d5b4e1:;
	}
	_iter_end_1c7d5b4e1:;;
	if ((_64217_n == 0LL)) {
		_20b503a78_pushErr(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_20b503a78_pushErr(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64017_run;;
}



inline jule::Str _20b505b35_lexStr(_20b5034d4_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	_67917_s+=static_cast<jule::Str>(_68013_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_1c7d630db;
			};
			if ((_68717_ch == '\n')) {
				_20b506075_newLine(&(*_self_));
				if ((!(_68213_raw))) {
					_20b503a78_pushErr(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _69921_part = (*_self_)._field_file.get()._field_Data.slice((*_self_)._field_pos);;
			jule::Str _70017_r = _20b5055b3_getRune(&(*_self_), _69921_part,_68213_raw);;
			_67917_s+=_70017_r;
			(*_self_)._field_column+=_20b117318_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_1c7d630db;
			};
		}
	_iter_next_1c7d630db:;
	}
	_iter_end_1c7d630db:;;
	return _67917_s;;
}



inline jule::Bool _20b505d99_isFirstTokenOfLine(_20b5034d4_lex* _self_) {
	return ((*_self_)._field_column == 1LL);;
}



inline void _20b506075_newLine(_20b5034d4_lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _20b506570_isOp(_20b5034d4_lex* _self_, jule::Slice<jule::U8>& _72024_txt, jule::Str _72037_kind, jule::U64 _72048_id, jule::Ptr<_20b4e5581_Token>& _72066_t) {
	if ((!(_20b4eda73_bytesHasPrefix(_72024_txt,_72037_kind)))) {
		return false;;
	};
	_72066_t.get()._field_Kind=_72037_kind;
	_72066_t.get()._field_Id=_72048_id;
	(*_self_)._field_pos+=_72037_kind.len();
	return true;;
}



inline jule::Bool _20b506927_lexBasicOps(_20b5034d4_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_20b4e5581_Token>& _73048_tok) {
	{
		auto &expr = _20b4ed1e3_basicOps;
		auto it = expr.begin();
		_iter_begin_1c7d692bd:;
		if (it != expr.end()) {
			_20b4ec973_kindPair &_73116_pair = *it;
			{
				if (_20b506570_isOp(&(*_self_), _73030_txt,_73116_pair._field_kind,_73116_pair._field_id,_73048_tok)) {
					return true;;
				};
			}
			_iter_next_1c7d692bd:;
			++it;
			goto _iter_begin_1c7d692bd;
		}
		_iter_end_1c7d692bd:;
	};
	return false;;
}



inline jule::Bool _20b506cce_lexId(_20b5034d4_lex* _self_, jule::Slice<jule::U8>& _74025_txt, jule::Ptr<_20b4e5581_Token>& _74043_t) {
	jule::Str _74113_lex = _20b504381_id(&(*_self_), _74025_txt);;
	if (_74113_lex.empty()) {
		return false;;
	};
	_74043_t.get()._field_Kind=_74113_lex;
	_74043_t.get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;;
}



inline jule::Bool _20b507186_lexNum(_20b5034d4_lex* _self_, jule::Slice<jule::U8>& _75026_txt, jule::Ptr<_20b4e5581_Token>& _75044_t) {
	jule::Str _75113_lex = _20b504ded_num(&(*_self_), _75026_txt);;
	if (_75113_lex.empty()) {
		return false;;
	};
	_75044_t.get()._field_Kind=_75113_lex;
	_75044_t.get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;;
}



inline jule::Ptr<_20b4e5581_Token> _20b5073ea_token(_20b5034d4_lex* _self_) {
	jule::Ptr<_20b4e5581_Token> _76217_t = jule::new_ptr<_20b4e5581_Token>(_20b4e5581_Token{._field_File=(*_self_)._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _20b5045e5_resume(&(*_self_));;
	if ((_76713_txt == nullptr)) {
		return _76217_t;;
	};
	_76217_t.get()._field_Column=(*_self_)._field_column;
	_76217_t.get()._field_Row=(*_self_)._field_row;
	{
		
		if (_20b507186_lexNum(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1c7d701d6:;
			{
				goto _match_end_1c7d6e78a;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_1c7d70406:;
			{
				_76217_t.get()._field_Kind=_20b5058c1_lexRune(&(*_self_), _76713_txt);
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_1c7d70abb:;
			{
				_76217_t.get()._field_Kind=_20b505b35_lexStr(&(*_self_));
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (_20b4eda73_bytesHasPrefix(_76713_txt,jule::Str("//", 2))) {
			_case_begin_1c7d70e1d:;
			{
				_20b50486a_lexLineComment(&(*_self_), _76217_t);
				return _76217_t;;
			}
		}
		else if (_20b4eda73_bytesHasPrefix(_76713_txt,jule::Str("/*", 2))) {
			_case_begin_1c7d70e84:;
			{
				_20b504ae0_lexRangeComment(&(*_self_), _76217_t);
				return _76217_t;;
			}
		}
		else if (_20b506570_isOp(&(*_self_), _76713_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76217_t) || _20b506570_isOp(&(*_self_), _76713_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76217_t) || _20b506570_isOp(&(*_self_), _76713_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76217_t) || _20b506570_isOp(&(*_self_), _76713_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76217_t) || _20b506570_isOp(&(*_self_), _76713_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76217_t) || _20b506570_isOp(&(*_self_), _76713_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76217_t) || _20b506927_lexBasicOps(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1c7d70eea:;
			{
				goto _match_end_1c7d6e78a;
			}
		}
		else if (_20b506cce_lexId(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1c7d6e878:;
			{
				{
					auto &expr = _20b4ecda2_keywords;
					auto it = expr.begin();
					_iter_begin_1c7d766b5:;
					if (it != expr.end()) {
						_20b4ec973_kindPair &_80520_pair = *it;
						{
							if ((_80520_pair._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=_80520_pair._field_id;
								goto _iter_end_1c7d766b5;
							};
						}
						_iter_next_1c7d766b5:;
						++it;
						goto _iter_begin_1c7d766b5;
					}
					_iter_end_1c7d766b5:;
				};
			}
		}
		else {
			_case_begin_1c7d6e812:;
			{
				jule::I32 _81218_r = 0;;
				jule::I64 _81221_sz = 0;;
				({
					_i32_int __jule_assign_result = _20b115624_DecodeRune(_76713_txt);
					_81218_r = __jule_assign_result.__jule_result_arg0;
					_81221_sz = __jule_assign_result.__jule_result_arg1;
				});
				_20b503a78_pushErr(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81218_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81221_sz;
				return _76217_t;;
			}
		}
		_match_end_1c7d6e78a:;
	};
	(*_self_)._field_column+=_20b117318_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _20b5034d4_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb5014b_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb50cea_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb511e6_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb892ea_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cb89c24_IsPrim(_20cb898b1_IdentTypeDecl* _self_) {
	return ((*_self_)._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb898b1_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb8a010_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb8a3b7_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb8a6a3_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb8aa9e_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb8ad8a_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cb8b4c8_IsUnsafe(_20cb8b176_PtrTypeDecl* _self_) {
	return ((*_self_)._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb8b176_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cb8bbd2_AutoSized(_20cb8b808_ArrTypeDecl* _self_) {
	return ((*_self_)._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb8b808_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb8c056_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb8c40d_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb8d81b_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb8db07_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb8e1ac_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb8e498_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cb8eba2_IsNil(_20cb8e850_LitExpr* _self_) {
	return ((*_self_)._field_Value == jule::Str("nil", 3));;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb8e850_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb90059_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cb9082e_IsSelf(_20cb904cc_IdentExpr* _self_) {
	return ((*_self_)._field_Ident == jule::Str("self", 4));;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb904cc_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb90bd6_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb9108d_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb91445_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb917ec_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb91c70_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb921e3_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cb92b61_Unhandled(_20cb927ed_FnCallExpr* _self_) {
	return ((*_self_)._field_Exception == nullptr);;
}



inline jule::Bool _20cb92dc5_Ignored(_20cb927ed_FnCallExpr* _self_) {
	return (((*_self_)._field_Exception != nullptr) && (*_self_)._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb927ed_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cb935ce_IsTargeted(_20cb9327c_FieldExprPair* _self_) {
	return ((*_self_)._field_Field != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb9327c_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb939ca_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cb942a0_IsEmpty(_20cb93e4d_BraceLit* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb93e4d_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb94723_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cb9523a_IsEmpty(_20cb94e0a_SliceExpr* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb94e0a_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb95779_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb95d84_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb96170_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb965e3_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb9699a_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb96d52_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb9713d_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb97748_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb97c87_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb98b78_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb99283_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cb99cbc_IsSelf(_20cb99959_ParamDecl* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));;
}



inline jule::Bool _20cb9a031_IsRef(_20cb99959_ParamDecl* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb99959_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cb9b0cb_IsAnon(_20cb9ac79_FnDecl* _self_) {
	return ((*_self_)._field_Ident == jule::Str("<anonymous>", 11));;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb9ac79_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb9bc58_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb9c110_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cb9cac2_IsInf(_20cb9c770_Iter* _self_) {
	return ((*_self_)._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb9c770_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cb9d397_IsWhileNext(_20cb9d045_WhileKind* _self_) {
	return ((*_self_)._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb9d045_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb9d8d6_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb9dc8d_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb9e145_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb9e5b8_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb9e970_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb9ede3_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cba05b9_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cba0a3c_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cba1213_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cba19a5_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cba227a_AutoExpr(_20cba1e28_EnumItemDecl* _self_) {
	return ((*_self_)._field_Expr == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20cba1e28_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cba2ed4_DefaultTyped(_20cba2951_EnumDecl* _self_) {
	return ((*_self_)._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20cba2951_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cba3457_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cba3a62_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cba3c60_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cba4513_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cba4b1d_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cba558b_IsTraitImpl(_20cba5228_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);;
}



inline jule::Bool _20cba5800_IsStructImpl(_20cba5228_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20cba5228_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3d1206_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d65823b_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d804e98_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d22d130_set(_20d8052a6_decimal* _self_, jule::Str _23322_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1c83e499c:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1c83e4a24:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1c83e4837:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1c83e6b8b:;
					{
						goto _iter_next_1c83e6460;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1c83e6c13:;
					{
						if (_25117_sawdot) {
							return __jule_func_result;;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1c83e6460;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1c83e6c8a:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1c83e6460;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1c83e6460;
					}
				}
				_match_end_1c83e6a6a:;
			};
			goto _iter_end_1c83e6460;
		}
	_iter_next_1c83e6460:;
	}
	_iter_end_1c83e6460:;;
	if ((!(_25217_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_20d61da70_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1c83ee479;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1c83ee479:;
		}
		_iter_end_1c83ee479:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline _u64_bool _20d80256c_floatBits(_20d8052a6_decimal* _self_, _20d3d1206_floatInfo& _32729_flt) {
	_u64_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _20d48e814_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_20d48e814_powtab[(*_self_)._field_dp];
			};
			_20d8055c5_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1c8405d98:;
	}
	_iter_end_1c8405d98:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _20d48e814_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_20d48e814_powtab[(-((*_self_)._field_dp))];
			};
			_20d8055c5_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1c8406629:;
	}
	_iter_end_1c8406629:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32729_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32729_flt._field_bias + 1LL) - _32817_exp);;
		_20d8055c5_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_20d8055c5_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32729_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_20d805a9d_roundedInteger(&(*_self_)));
	if ((_32917_mant == (2LLU << _32729_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32729_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32729_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32729_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32729_flt._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32729_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32729_flt._field_bias) & static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) << _32729_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32729_flt._field_mantbits) << _32729_flt._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _41717_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _20d805493_assign(_20d8052a6_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1c84145b0:;
	}
	_iter_end_1c84145b0:;;
	(*_self_)._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_33117_buf[_33417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1c841502d:;
	}
	_iter_end_1c841502d:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_20d805d12_trim((*_self_));
}



inline void _20d8055c5_shift(_20d8052a6_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1c8417173:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1c84171ea:;
			{
				while ((_35528_k > 60LL)) {
					{
						_20d8061a8_leftShift((*_self_),60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1c8417e65:;
				}
				_iter_end_1c8417e65:;;
				_20d8061a8_leftShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1c8417272:;
			{
				while ((_35528_k < -60LL)) {
					{
						_20d805e44_rightShift((*_self_),60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1c8417dcc:;
				}
				_iter_end_1c8417dcc:;;
				_20d805e44_rightShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_1c8417052:;
	};
}



inline void _20d805707_roundDown(_20d8052a6_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_37528_nd;
	_20d805d12_trim((*_self_));
}



inline void _20d805839_roundUp(_20d8052a6_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*_self_)._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*_self_)._field_d[_39017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1c841bad4:;
	}
	_iter_end_1c841bad4:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _20d80596b_round(_20d8052a6_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_20d8062da_shouldRoundUp((*_self_),_41124_nd)) {
		_20d805839_roundUp(&(*_self_), _41124_nd);
	} else {
		_20d805707_roundDown(&(*_self_), _41124_nd);
	};
}



inline jule::U64 _20d805a9d_roundedInteger(_20d8052a6_decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*_self_)._field_dp) && (_42817_i < (*_self_)._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_42817_i] - '0'))));
		}
	_iter_next_1c84134c1:;
	}
	_iter_end_1c84134c1:;;
	for (; (_42817_i < (*_self_)._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1c8421512:;
	}
	_iter_end_1c8421512:;;
	if (_20d8062da_shouldRoundUp((*_self_),(*_self_)._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8052a6_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20cc572ec_Const> static__20cc98393_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_20cc572ec_Const>(_20cc572ec_Const{._field_data=jule::Any(_1622_x)});;
}



inline jule::Ptr<_20cc572ec_Const> static__20cc7e3ac_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_20cc572ec_Const>(_20cc572ec_Const{._field_data=jule::Any(_1922_x)});;
}



inline jule::Ptr<_20cc572ec_Const> static__20ccb8979_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_20cc572ec_Const>(_20cc572ec_Const{._field_data=jule::Any(_2223_x)});;
}



inline jule::Ptr<_20cc572ec_Const> static__20ccbec49_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_20cc572ec_Const>(_20cc572ec_Const{._field_data=jule::Any(_2522_x)});;
}



inline jule::Ptr<_20cc572ec_Const> static__20ccbed7b_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_20cc572ec_Const>(_20cc572ec_Const{._field_data=jule::Any(_2822_x)});;
}



inline jule::Ptr<_20cc572ec_Const> static__20d80a2ab_NewNil(void) {
	return jule::new_ptr<_20cc572ec_Const>(_20cc572ec_Const{._field_data=nullptr});;
}



inline jule::I64 _20d80a6a7_ReadI64(_20cc572ec_Const* _self_) {
	if ((!(_20d80b895_IsI64(&(*_self_))))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());;
}



inline jule::U64 _20d80a7d9_ReadU64(_20cc572ec_Const* _self_) {
	if ((!(_20d80b9c7_IsU64(&(*_self_))))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());;
}



inline jule::Bool _20d80a91b_ReadBool(_20cc572ec_Const* _self_) {
	if ((!(_20d80bb09_IsBool(&(*_self_))))) {
		return false;;
	};
	return (*_self_)._field_data.operator jule::Bool();;
}



inline jule::Str _20d80aa4d_ReadStr(_20cc572ec_Const* _self_) {
	if ((!(_20d80bc3b_IsStr(&(*_self_))))) {
		return jule::Str();;
	};
	return (*_self_)._field_data.operator jule::Str();;
}



inline jule::F64 _20d80ab80_ReadF64(_20cc572ec_Const* _self_) {
	if ((!(_20d80bd6d_IsF64(&(*_self_))))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());;
}



inline jule::I64 _20d80acb2_AsI64(_20cc572ec_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1c8498721:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());;
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1c8498787:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));;
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1c849817c:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));;
			}
		}
		else {
			_case_begin_1c84977b9:;
			{
				return 0LL;;
			}
		}
		_match_end_1c8498116:;
	};
}



inline jule::U64 _20d80ade4_AsU64(_20cc572ec_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1c849a190:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());;
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1c849a206:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));;
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1c8499bc8:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));;
			}
		}
		else {
			_case_begin_1c849880e:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c8499b2e:;
	};
}



inline jule::F64 _20d80b026_AsF64(_20cc572ec_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1c849bb0e:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());;
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1c849bb75:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));;
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1c849b647:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));;
			}
		}
		else {
			_case_begin_1c849a27d:;
			{
				return 0LL;;
			}
		}
		_match_end_1c849b59d:;
	};
}



inline void _20d80b158_SetI64(_20cc572ec_Const* _self_, jule::I64 _13825_x) {
	(*_self_)._field_data=jule::Any(_13825_x);
}



inline void _20d80b28a_SetU64(_20cc572ec_Const* _self_, jule::U64 _14125_x) {
	(*_self_)._field_data=jule::Any(_14125_x);
}



inline void _20d80b3bc_SetBool(_20cc572ec_Const* _self_, jule::Bool _14426_x) {
	(*_self_)._field_data=jule::Any(_14426_x);
}



inline void _20d80b4ee_SetStr(_20cc572ec_Const* _self_, jule::Str _14725_x) {
	(*_self_)._field_data=jule::Any(_14725_x);
}



inline void _20d80b631_SetF64(_20cc572ec_Const* _self_, jule::F64 _15025_x) {
	(*_self_)._field_data=jule::Any(_15025_x);
}



inline void _20d80b763_SetNil(_20cc572ec_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _20d80b895_IsI64(_20cc572ec_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1c84a05d5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c84a085a:;
			{
				return false;;
			}
		}
		_match_end_1c84a0805:;
	};
}



inline jule::Bool _20d80b9c7_IsU64(_20cc572ec_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1c84a120c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c84a0a7a:;
			{
				return false;;
			}
		}
		_match_end_1c84a0926:;
	};
}



inline jule::Bool _20d80bb09_IsBool(_20cc572ec_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1c84a1493:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c84a1b7a:;
			{
				return false;;
			}
		}
		_match_end_1c84a1b25:;
	};
}



inline jule::Bool _20d80bc3b_IsStr(_20cc572ec_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1c84a26a3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c84a2087:;
			{
				return false;;
			}
		}
		_match_end_1c84a1e33:;
	};
}



inline jule::Bool _20d80bd6d_IsF64(_20cc572ec_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1c84a2939:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c84a3121:;
			{
				return false;;
			}
		}
		_match_end_1c84a30bb:;
	};
}



inline jule::Bool _20d80bea0_IsNil(_20cc572ec_Const* _self_) {
	return ((*_self_)._field_data == nullptr);;
}



inline jule::Bool _20d80c0d2_AreSameTypes(_20cc572ec_Const* _self_, _20cc572ec_Const _21327_x) {
	{
		
		if ((_20d80b895_IsI64(&(*_self_)) == _20d80b895_IsI64(&_21327_x))) {
			_case_begin_1c84a4bd3:;
			{
				return true;;
			}
		}
		else if ((_20d80b9c7_IsU64(&(*_self_)) == _20d80b9c7_IsU64(&_21327_x))) {
			_case_begin_1c84a44da:;
			{
				return true;;
			}
		}
		else if ((_20d80bd6d_IsF64(&(*_self_)) == _20d80bd6d_IsF64(&_21327_x))) {
			_case_begin_1c84a4562:;
			{
				return true;;
			}
		}
		else if ((_20d80bb09_IsBool(&(*_self_)) == _20d80bb09_IsBool(&_21327_x))) {
			_case_begin_1c84a45d9:;
			{
				return true;;
			}
		}
		else if ((_20d80bc3b_IsStr(&(*_self_)) == _20d80bc3b_IsStr(&_21327_x))) {
			_case_begin_1c84a4661:;
			{
				return true;;
			}
		}
		else if ((_20d80bea0_IsNil(&(*_self_)) == _20d80bea0_IsNil(&_21327_x))) {
			_case_begin_1c84a48b4:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c84a4463:;
			{
				return false;;
			}
		}
		_match_end_1c84a4397:;
	};
}



inline jule::Bool _20d80c214_And(_20cc572ec_Const* _self_, _20cc572ec_Const _23818_x) {
	{
		
		if ((_20d80bb09_IsBool(&(*_self_)) && _20d80bb09_IsBool(&_23818_x))) {
			_case_begin_1c84a7eb1:;
			{
				return (_20d80a91b_ReadBool(&(*_self_)) && _20d80a91b_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1c84a77b8:;
			{
				return false;;
			}
		}
		_match_end_1c84a7389:;
	};
}



inline jule::Bool _20d80c346_Or(_20cc572ec_Const* _self_, _20cc572ec_Const _24917_x) {
	{
		
		if ((_20d80bb09_IsBool(&(*_self_)) && _20d80bb09_IsBool(&_24917_x))) {
			_case_begin_1c84a9369:;
			{
				return (_20d80a91b_ReadBool(&(*_self_)) || _20d80a91b_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1c84a8ba4:;
			{
				return false;;
			}
		}
		_match_end_1c84a8302:;
	};
}



inline jule::Bool _20d80c478_Eq(_20cc572ec_Const* _self_, _20cc572ec_Const _26017_x) {
	{
		
		if (_20d80bea0_IsNil(&(*_self_))) {
			_case_begin_1c84aa788:;
			{
				return _20d80bea0_IsNil(&_26017_x);;
			}
		}
		else if (_20d80bb09_IsBool(&(*_self_))) {
			_case_begin_1c84aa0d4:;
			{
				return (_20d80bb09_IsBool(&_26017_x) && (_20d80a91b_ReadBool(&(*_self_)) == _20d80a91b_ReadBool(&_26017_x)));;
			}
		}
		else if (_20d80bc3b_IsStr(&(*_self_))) {
			_case_begin_1c84aa14a:;
			{
				return (_20d80bc3b_IsStr(&_26017_x) && (_20d80aa4d_ReadStr(&(*_self_)) == _20d80aa4d_ReadStr(&_26017_x)));;
			}
		}
		else if (_20d80b895_IsI64(&(*_self_))) {
			_case_begin_1c84aa1c2:;
			{
				return (_20d80a6a7_ReadI64(&(*_self_)) == _20d80acb2_AsI64(&_26017_x));;
			}
		}
		else if (_20d80b9c7_IsU64(&(*_self_))) {
			_case_begin_1c84aa249:;
			{
				return (_20d80a7d9_ReadU64(&(*_self_)) == _20d80ade4_AsU64(&_26017_x));;
			}
		}
		else if (_20d80bd6d_IsF64(&(*_self_))) {
			_case_begin_1c84aa48b:;
			{
				return (_20d80ab80_ReadF64(&(*_self_)) == _20d80b026_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1c84aa06d:;
			{
				return false;;
			}
		}
		_match_end_1c84a96bb:;
	};
}



inline jule::Bool _20d80c5aa_Lt(_20cc572ec_Const* _self_, _20cc572ec_Const _28717_x) {
	{
		
		if (_20d80bc3b_IsStr(&(*_self_))) {
			_case_begin_1c84ae6d2:;
			{
				return (_20d80bc3b_IsStr(&_28717_x) && (_20d80aa4d_ReadStr(&(*_self_)) < _20d80aa4d_ReadStr(&_28717_x)));;
			}
		}
		else if (_20d80b895_IsI64(&(*_self_))) {
			_case_begin_1c84ae094:;
			{
				return (_20d80a6a7_ReadI64(&(*_self_)) < _20d80acb2_AsI64(&_28717_x));;
			}
		}
		else if (_20d80b9c7_IsU64(&(*_self_))) {
			_case_begin_1c84ae10a:;
			{
				return (_20d80a7d9_ReadU64(&(*_self_)) < _20d80ade4_AsU64(&_28717_x));;
			}
		}
		else if (_20d80bd6d_IsF64(&(*_self_))) {
			_case_begin_1c84ae171:;
			{
				return (_20d80ab80_ReadF64(&(*_self_)) < _20d80b026_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1c84aaa96:;
			{
				return false;;
			}
		}
		_match_end_1c84aa9ca:;
	};
}



inline jule::Bool _20d80c6dc_LtEq(_20cc572ec_Const* _self_, _20cc572ec_Const _31019_x) {
	{
		
		if (_20d80bc3b_IsStr(&(*_self_))) {
			_case_begin_1c84b25c5:;
			{
				return (_20d80bc3b_IsStr(&_31019_x) && (_20d80aa4d_ReadStr(&(*_self_)) <= _20d80aa4d_ReadStr(&_31019_x)));;
			}
		}
		else if (_20d80b895_IsI64(&(*_self_))) {
			_case_begin_1c84b1e87:;
			{
				return (_20d80a6a7_ReadI64(&(*_self_)) <= _20d80acb2_AsI64(&_31019_x));;
			}
		}
		else if (_20d80b9c7_IsU64(&(*_self_))) {
			_case_begin_1c84b1eed:;
			{
				return (_20d80a7d9_ReadU64(&(*_self_)) <= _20d80ade4_AsU64(&_31019_x));;
			}
		}
		else if (_20d80bd6d_IsF64(&(*_self_))) {
			_case_begin_1c84b2064:;
			{
				return (_20d80ab80_ReadF64(&(*_self_)) <= _20d80b026_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1c84ae9e0:;
			{
				return false;;
			}
		}
		_match_end_1c84ae924:;
	};
}



inline jule::Bool _20d80c81e_Gt(_20cc572ec_Const* _self_, _20cc572ec_Const _33317_x) {
	{
		
		if (_20d80bc3b_IsStr(&(*_self_))) {
			_case_begin_1c84b54b8:;
			{
				return (_20d80bc3b_IsStr(&_33317_x) && (_20d80aa4d_ReadStr(&(*_self_)) > _20d80aa4d_ReadStr(&_33317_x)));;
			}
		}
		else if (_20d80b895_IsI64(&(*_self_))) {
			_case_begin_1c84b4d7a:;
			{
				return (_20d80a6a7_ReadI64(&(*_self_)) > _20d80acb2_AsI64(&_33317_x));;
			}
		}
		else if (_20d80b9c7_IsU64(&(*_self_))) {
			_case_begin_1c84b4de1:;
			{
				return (_20d80a7d9_ReadU64(&(*_self_)) > _20d80ade4_AsU64(&_33317_x));;
			}
		}
		else if (_20d80bd6d_IsF64(&(*_self_))) {
			_case_begin_1c84b4e57:;
			{
				return (_20d80ab80_ReadF64(&(*_self_)) > _20d80b026_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1c84b28d3:;
			{
				return false;;
			}
		}
		_match_end_1c84b2817:;
	};
}



inline jule::Bool _20d80c951_GtEq(_20cc572ec_Const* _self_, _20cc572ec_Const _35619_x) {
	{
		
		if (_20d80bc3b_IsStr(&(*_self_))) {
			_case_begin_1c84b83ab:;
			{
				return (_20d80bc3b_IsStr(&_35619_x) && (_20d80aa4d_ReadStr(&(*_self_)) >= _20d80aa4d_ReadStr(&_35619_x)));;
			}
		}
		else if (_20d80b895_IsI64(&(*_self_))) {
			_case_begin_1c84b7c6d:;
			{
				return (_20d80a6a7_ReadI64(&(*_self_)) >= _20d80acb2_AsI64(&_35619_x));;
			}
		}
		else if (_20d80b9c7_IsU64(&(*_self_))) {
			_case_begin_1c84b7cd4:;
			{
				return (_20d80a7d9_ReadU64(&(*_self_)) >= _20d80ade4_AsU64(&_35619_x));;
			}
		}
		else if (_20d80bd6d_IsF64(&(*_self_))) {
			_case_begin_1c84b7d4a:;
			{
				return (_20d80ab80_ReadF64(&(*_self_)) >= _20d80b026_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1c84b57c6:;
			{
				return false;;
			}
		}
		_match_end_1c84b570a:;
	};
}



inline jule::Bool _20d80ca83_Add(_20cc572ec_Const* _self_, _20cc572ec_Const _37722_x) {
	{
		
		if (_20d80bc3b_IsStr(&(*_self_))) {
			_case_begin_1c84bb29e:;
			{
				if ((!(_20d80bc3b_IsStr(&_37722_x)))) {
					return false;;
				};
				_20d80b4ee_SetStr(&(*_self_), (_20d80aa4d_ReadStr(&(*_self_)) + _20d80aa4d_ReadStr(&_37722_x)));
			}
		}
		else if (_20d80bd6d_IsF64(&(*_self_))) {
			_case_begin_1c84bab61:;
			{
				_20d80b631_SetF64(&(*_self_), static_cast<jule::F64>((_20d80ab80_ReadF64(&(*_self_)) + _20d80b026_AsF64(&_37722_x))));
			}
		}
		else if (_20d80b895_IsI64(&(*_self_))) {
			_case_begin_1c84babc7:;
			{
				if (_20d80bd6d_IsF64(&_37722_x)) {
					_20d80b631_SetF64(&(*_self_), static_cast<jule::F64>((_20d80b026_AsF64(&(*_self_)) + _20d80ab80_ReadF64(&_37722_x))));
				} else {
					_20d80b158_SetI64(&(*_self_), static_cast<jule::I64>((_20d80a6a7_ReadI64(&(*_self_)) + _20d80acb2_AsI64(&_37722_x))));
				};
			}
		}
		else if (_20d80b9c7_IsU64(&(*_self_))) {
			_case_begin_1c84bac3d:;
			{
				if (_20d80bd6d_IsF64(&_37722_x)) {
					_20d80b631_SetF64(&(*_self_), static_cast<jule::F64>((_20d80b026_AsF64(&(*_self_)) + _20d80ab80_ReadF64(&_37722_x))));
				} else {
					_20d80b28a_SetU64(&(*_self_), static_cast<jule::U64>((_20d80a7d9_ReadU64(&(*_self_)) + _20d80ade4_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1c84b86b9:;
			{
				return false;;
			}
		}
		_match_end_1c84b85ed:;
	};
	return true;;
}



inline jule::Bool _20d80cbb5_Sub(_20cc572ec_Const* _self_, _20cc572ec_Const _40622_x) {
	{
		
		if (_20d80bd6d_IsF64(&(*_self_))) {
			_case_begin_1c84c189d:;
			{
				_20d80b631_SetF64(&(*_self_), static_cast<jule::F64>((_20d80ab80_ReadF64(&(*_self_)) - _20d80b026_AsF64(&_40622_x))));
			}
		}
		else if (_20d80b895_IsI64(&(*_self_))) {
			_case_begin_1c84c11c7:;
			{
				if (_20d80bd6d_IsF64(&_40622_x)) {
					_20d80b631_SetF64(&(*_self_), static_cast<jule::F64>((_20d80b026_AsF64(&(*_self_)) - _20d80ab80_ReadF64(&_40622_x))));
				} else {
					_20d80b158_SetI64(&(*_self_), static_cast<jule::I64>((_20d80a6a7_ReadI64(&(*_self_)) - _20d80acb2_AsI64(&_40622_x))));
				};
			}
		}
		else if (_20d80b9c7_IsU64(&(*_self_))) {
			_case_begin_1c84c123d:;
			{
				if (_20d80bd6d_IsF64(&_40622_x)) {
					_20d80b631_SetF64(&(*_self_), static_cast<jule::F64>((_20d80b026_AsF64(&(*_self_)) - _20d80ab80_ReadF64(&_40622_x))));
				} else {
					_20d80b28a_SetU64(&(*_self_), static_cast<jule::U64>((_20d80a7d9_ReadU64(&(*_self_)) - _20d80ade4_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1c84c1161:;
			{
				return false;;
			}
		}
		_match_end_1c84c0858:;
	};
	return true;;
}



inline jule::Bool _20d80cce7_Mul(_20cc572ec_Const* _self_, _20cc572ec_Const _43022_x) {
	{
		
		if (_20d80bd6d_IsF64(&(*_self_))) {
			_case_begin_1c84c5e9b:;
			{
				_20d80b631_SetF64(&(*_self_), static_cast<jule::F64>((_20d80ab80_ReadF64(&(*_self_)) * _20d80b026_AsF64(&_43022_x))));
			}
		}
		else if (_20d80b895_IsI64(&(*_self_))) {
			_case_begin_1c84c57c5:;
			{
				if (_20d80bd6d_IsF64(&_43022_x)) {
					_20d80b631_SetF64(&(*_self_), static_cast<jule::F64>((_20d80b026_AsF64(&(*_self_)) * _20d80ab80_ReadF64(&_43022_x))));
				} else {
					_20d80b158_SetI64(&(*_self_), static_cast<jule::I64>((_20d80a6a7_ReadI64(&(*_self_)) * _20d80acb2_AsI64(&_43022_x))));
				};
			}
		}
		else if (_20d80b9c7_IsU64(&(*_self_))) {
			_case_begin_1c84c583b:;
			{
				if (_20d80bd6d_IsF64(&_43022_x)) {
					_20d80b631_SetF64(&(*_self_), static_cast<jule::F64>((_20d80b026_AsF64(&(*_self_)) * _20d80ab80_ReadF64(&_43022_x))));
				} else {
					_20d80b28a_SetU64(&(*_self_), static_cast<jule::U64>((_20d80a7d9_ReadU64(&(*_self_)) * _20d80ade4_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1c84c575e:;
			{
				return false;;
			}
		}
		_match_end_1c84c4d13:;
	};
	return true;;
}



inline jule::Bool _20d80ce29_Div(_20cc572ec_Const* _self_, _20cc572ec_Const _45822_x) {
	{
		
		if (_20d80bd6d_IsF64(&(*_self_))) {
			_case_begin_1c84ca599:;
			{
				jule::F64 _46117_l = _20d80b026_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_20d80b631_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_20d80ab80_ReadF64(&(*_self_)),_46117_l)));
			}
		}
		else if (_20d80b895_IsI64(&(*_self_))) {
			_case_begin_1c84c9dc3:;
			{
				jule::F64 _46717_l = _20d80b026_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_20d80b631_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_20d80b026_AsF64(&(*_self_)),_46717_l)));
			}
		}
		else if (_20d80b9c7_IsU64(&(*_self_))) {
			_case_begin_1c84c9e39:;
			{
				jule::F64 _47317_l = _20d80b026_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_20d80b631_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_20d80b026_AsF64(&(*_self_)),_47317_l)));
			}
		}
		else {
			_case_begin_1c84c9d5c:;
			{
				return false;;
			}
		}
		_match_end_1c84c9411:;
	};
	return true;;
}



inline jule::Bool _20d80d05b_Mod(_20cc572ec_Const* _self_, _20cc572ec_Const _48722_x) {
	{
		
		if (_20d80b895_IsI64(&(*_self_))) {
			_case_begin_1c84ceaed:;
			{
				jule::I64 _49017_l = _20d80acb2_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_20d80b158_SetI64(&(*_self_), static_cast<jule::I64>(jule::mod(_20d80a6a7_ReadI64(&(*_self_)),_49017_l)));
			}
		}
		else if (_20d80b9c7_IsU64(&(*_self_))) {
			_case_begin_1c84ce438:;
			{
				jule::U64 _49617_l = _20d80ade4_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_20d80b28a_SetU64(&(*_self_), static_cast<jule::U64>(jule::mod(_20d80a7d9_ReadU64(&(*_self_)),_49617_l)));
			}
		}
		else {
			_case_begin_1c84ce3c2:;
			{
				return false;;
			}
		}
		_match_end_1c84ce328:;
	};
	return true;;
}



inline jule::Bool _20d80d18d_BitwiseAnd(_20cc572ec_Const* _self_, _20cc572ec_Const _50929_x) {
	{
		
		if (_20d80b895_IsI64(&(*_self_))) {
			_case_begin_1c84d2caa:;
			{
				_20d80b158_SetI64(&(*_self_), static_cast<jule::I64>((_20d80a6a7_ReadI64(&(*_self_)) & _20d80acb2_AsI64(&_50929_x))));
			}
		}
		else if (_20d80b9c7_IsU64(&(*_self_))) {
			_case_begin_1c84d25e5:;
			{
				_20d80b28a_SetU64(&(*_self_), static_cast<jule::U64>((_20d80a7d9_ReadU64(&(*_self_)) & _20d80ade4_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1c84d257e:;
			{
				return false;;
			}
		}
		_match_end_1c84d24d5:;
	};
	return true;;
}



inline jule::Bool _20d80d2c0_BitwiseOr(_20cc572ec_Const* _self_, _20cc572ec_Const _52328_x) {
	{
		
		if (_20d80b895_IsI64(&(*_self_))) {
			_case_begin_1c84d4dbc:;
			{
				_20d80b158_SetI64(&(*_self_), static_cast<jule::I64>((_20d80a6a7_ReadI64(&(*_self_)) | _20d80acb2_AsI64(&_52328_x))));
			}
		}
		else if (_20d80b9c7_IsU64(&(*_self_))) {
			_case_begin_1c84d4707:;
			{
				_20d80b28a_SetU64(&(*_self_), static_cast<jule::U64>((_20d80a7d9_ReadU64(&(*_self_)) | _20d80ade4_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1c84d4691:;
			{
				return false;;
			}
		}
		_match_end_1c84d45c5:;
	};
	return true;;
}



inline jule::Bool _20d80d402_Xor(_20cc572ec_Const* _self_, _20cc572ec_Const _53722_x) {
	{
		
		if (_20d80b895_IsI64(&(*_self_))) {
			_case_begin_1c84d6ece:;
			{
				_20d80b158_SetI64(&(*_self_), static_cast<jule::I64>((_20d80a6a7_ReadI64(&(*_self_)) ^ _20d80acb2_AsI64(&_53722_x))));
			}
		}
		else if (_20d80b9c7_IsU64(&(*_self_))) {
			_case_begin_1c84d6819:;
			{
				_20d80b28a_SetU64(&(*_self_), static_cast<jule::U64>((_20d80a7d9_ReadU64(&(*_self_)) ^ _20d80ade4_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1c84d67a3:;
			{
				return false;;
			}
		}
		_match_end_1c84d66d7:;
	};
	return true;;
}



inline jule::Bool _20d80d534_Lshift(_20cc572ec_Const* _self_, _20cc572ec_Const _55125_x) {
	{
		
		if (_20d80b895_IsI64(&(*_self_))) {
			_case_begin_1c84d90e1:;
			{
				jule::I64 _55417_l = _20d80acb2_AsI64(&(*_self_));;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _20d80ade4_AsU64(&_55125_x);;
					_20d80b158_SetI64(&(*_self_), static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_20d80d798_lshiftUnsig((*_self_),_55125_x);
				};
			}
		}
		else if (_20d80b9c7_IsU64(&(*_self_))) {
			_case_begin_1c84d892b:;
			{
				_20d80d798_lshiftUnsig((*_self_),_55125_x);
			}
		}
		else {
			_case_begin_1c84d88b5:;
			{
				return false;;
			}
		}
		_match_end_1c84d87e9:;
	};
	return true;;
}



inline jule::Bool _20d80d666_Rshift(_20cc572ec_Const* _self_, _20cc572ec_Const _57125_x) {
	{
		
		if (_20d80b895_IsI64(&(*_self_))) {
			_case_begin_1c84db9a6:;
			{
				jule::I64 _57417_l = _20d80acb2_AsI64(&(*_self_));;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _20d80ade4_AsU64(&_57125_x);;
					_20d80b158_SetI64(&(*_self_), static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_20d80d8ca_rshiftUnsig((*_self_),_57125_x);
				};
			}
		}
		else if (_20d80b9c7_IsU64(&(*_self_))) {
			_case_begin_1c84db2e1:;
			{
				_20d80d8ca_rshiftUnsig((*_self_),_57125_x);
			}
		}
		else {
			_case_begin_1c84db27a:;
			{
				return false;;
			}
		}
		_match_end_1c84db1ae:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _20cc572ec_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20cba5bc9_FieldIns> _20ca58cad_instance(jule::Ptr<_20cb79a49_Field> _self_) {
	return jule::new_ptr<_20cba5bc9_FieldIns>(_20cba5bc9_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb79a49_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cb8218e_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20cba5db6_StructIns> _20cb5c433_instance(jule::Ptr<_20cba59dc_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_20cba5db6_StructIns> _9917_ins = jule::new_ptr<_20cba5db6_StructIns>(_20cba5db6_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_20cba5bc9_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_20d869eb9_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__20d8158d2_new(), });;
	{
		auto &expr = _self_.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_1c874eb81:;
		if (it != expr.end()) {
			jule::Ptr<_20d869eb9_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_20d869eb9_Var>((*(_10621_s))));;
			}
			_iter_next_1c874eb81:;
			++it;
			goto _iter_begin_1c874eb81;
		}
		_iter_end_1c874eb81:;
	};
	{
		auto &expr = _self_.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c8750ca3:;
		if (it != expr.end()) {
			jule::Ptr<_20cb79a49_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_20ca58cad_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _20d8e4d02_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1c8750ca3:;
			++it;
			goto _iter_begin_1c8750ca3;
		}
		_iter_end_1c8750ca3:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_20d814370_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto &expr = _self_.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1c8753756:;
			if (it != expr.end()) {
				jule::Ptr<_20d814370_Fn> _12125_f = *it;
				{
					jule::Ptr<_20d814370_Fn> _12225_fins = jule::new_ptr<_20d814370_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_1c8753756:;
				++it;
				goto _iter_begin_1c8753756;
			}
			_iter_end_1c8753756:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_20cba5db6_StructIns> _20cb61206_appendInstance(_20cba59dc_Struct* _self_, jule::Ptr<_20cba5db6_StructIns>& _13338_ins) {
	if ((((*_self_)._field_Generics.len() == 0LL) && ((*_self_)._field_Instances.len() == 1LL))) {
		return (*_self_)._field_Instances[0LL];;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c87559ab:;
		if (it != expr.end()) {
			jule::Ptr<_20cba5db6_StructIns> _13921_ains = *it;
			{
				if (_20cb7c871_Same(_13921_ains.ptr(), _13338_ins)) {
					return _13921_ains;;
				};
			}
			_iter_next_1c87559ab:;
			++it;
			goto _iter_begin_1c87559ab;
		}
		_iter_end_1c87559ab:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_13338_ins);;
	return nullptr;;
}



inline jule::Ptr<_20d814370_Fn> _20cb61e60_FindMethod(_20cba59dc_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c8756e96:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_1c8756e96:;
			++it;
			goto _iter_begin_1c8756e96;
		}
		_iter_end_1c8756e96:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d869eb9_Var> _20cb650b7_FindStatic(_20cba59dc_Struct* _self_, jule::Str _16229_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_1c8758140:;
		if (it != expr.end()) {
			jule::Ptr<_20d869eb9_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_1c8758140:;
			++it;
			goto _iter_begin_1c8758140;
		}
		_iter_end_1c8758140:;
	};
	return nullptr;;
}



inline jule::Ptr<_20cb79a49_Field> _20cb64517_FindField(_20cba59dc_Struct* _self_, jule::Str _17328_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c87585b3:;
		if (it != expr.end()) {
			jule::Ptr<_20cb79a49_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_1c87585b3:;
			++it;
			goto _iter_begin_1c87585b3;
		}
		_iter_end_1c87585b3:;
	};
	return nullptr;;
}



inline jule::Bool _20cb668e3_IsImplements(_20cba59dc_Struct* _self_, jule::Ptr<_20d81a3ed_Trait> _18327_t) {
	{
		auto &expr = (*_self_)._field_Implements;
		auto it = expr.begin();
		_iter_begin_1c87594d7:;
		if (it != expr.end()) {
			jule::Ptr<_20d81a3ed_Trait> &_18416_it = *it;
			{
				if ((_18327_t == _18416_it)) {
					return true;;
				};
			}
			_iter_next_1c87594d7:;
			++it;
			goto _iter_begin_1c87594d7;
		}
		_iter_end_1c87594d7:;
	};
	return false;;
}



inline jule::Bool _20cb65bde_IsDerives(_20cba59dc_Struct* _self_, jule::Str _19324_ident) {
	{
		auto &expr = (*_self_)._field_Directives;
		auto it = expr.begin();
		_iter_begin_1c875a461:;
		if (it != expr.end()) {
			jule::Ptr<_20cb511e6_Directive> &_19416_d = *it;
			{
				if ((_19416_d.get()._field_Tag.get()._field_Kind == jule::Str("derive", 6))) {
					if (((_19416_d.get()._field_Args.len() == 1LL) && (_19416_d.get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_1c875a461:;
			++it;
			goto _iter_begin_1c875a461;
		}
		_iter_end_1c875a461:;
	};
	return false;;
}



inline jule::Bool _20cb69bb0_IsUses(_20cba59dc_Struct* _self_, jule::Ptr<_20cba59dc_Struct> _20521_s) {
	{
		auto &expr = (*_self_)._field_Uses;
		auto it = expr.begin();
		_iter_begin_1c875cb7d:;
		if (it != expr.end()) {
			jule::Ptr<_20cba59dc_Struct> &_20616_u = *it;
			{
				while ((_20521_s == _20616_u)) {
					{
						return true;;
					}
				_iter_next_1c875d3dc:;
				}
				_iter_end_1c875d3dc:;;
			}
			_iter_next_1c875cb7d:;
			++it;
			goto _iter_begin_1c875cb7d;
		}
		_iter_end_1c875cb7d:;
	};
	return false;;
}



inline jule::Bool _20cb6a375_HasRefAccessible(_20cba59dc_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c875d5a7:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> &_21616_m = *it;
			{
				if (((_21616_m.get()._field_Params.len() > 0LL) && _20cbedd43_IsRef(_21616_m.get()._field_Params[0LL].ptr()))) {
					return true;;
				};
			}
			_iter_next_1c875d5a7:;
			++it;
			goto _iter_begin_1c875d5a7;
		}
		_iter_end_1c875d5a7:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _20cba59dc_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cba5bc9_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cbed66c_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20cc2c05d_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d80da0c_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d80dbe9_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d80ddd6_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d80e0c3_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d80e2b0_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d80e49c_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d80e689_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d80e876_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d80ea63_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d80ec50_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d80ee3c_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d810129_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d810316_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d810734_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d810921_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d810b0d_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d810cea_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d810ed7_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8111c4_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8113b1_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d81159d_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d81178a_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d811977_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d811b64_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d811d51_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d81203d_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d81222a_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d812417_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d812604_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d810503_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d812c64_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d812e51_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d81313d_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d81332a_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d813517_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d813704_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8138e1_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d813acd_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d813e96_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d81455c_ParamIns> _20cbe05e8_instance(jule::Ptr<_20d814183_Param> _self_) {
	return jule::new_ptr<_20d81455c_ParamIns>(_20d81455c_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _20cbece41_IsSelf(_20d814183_Param* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));;
}



inline jule::Bool _20cbedd43_IsRef(_20d814183_Param* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _20d814183_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20cbeec56_IsVoid(_20d814370_Fn* _self_) {
	return ((*_self_)._field_Result == nullptr);;
}



inline jule::Bool _20cc3121b_IsMethod(_20d814370_Fn* _self_) {
	return ((*_self_)._field_Owner != nullptr);;
}



inline jule::Bool _20cc3a258_IsEntryPoint(_20d814370_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("main", 4));;
}



inline jule::Bool _20cbe0d35_IsInit(_20d814370_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("init", 4));;
}



inline jule::Bool _20cbe30ac_IsAnon(_20d814370_Fn* _self_) {
	return _20b4e80bc_IsAnonIdent((*_self_)._field_Ident);;
}



inline jule::Bool _20cbe4b4c_AnyVar(_20d814370_Fn* _self_) {
	return (((*_self_)._field_Result != nullptr) && ((*_self_)._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_20d814749_FnIns> _20cbe58ea_instanceForce(jule::Ptr<_20d814370_Fn> _self_) {
	jule::Ptr<_20d814749_FnIns> _10017_ins = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_20d825848_Scope>(), ._field_Refers=static__20d8158d2_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_20d81455c_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto &expr = _self_.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c8772643:;
		if (it != expr.end()) {
			jule::Ptr<_20d814183_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_20cbe05e8_instance(_10721_p));;
			}
			_iter_next_1c8772643:;
			++it;
			goto _iter_begin_1c8772643;
		}
		_iter_end_1c8772643:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_20d814749_FnIns> _20cc00383_instance(jule::Ptr<_20d814370_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _20cbe58ea_instanceForce(_self_);;
}



inline jule::Ptr<_20d814749_FnIns> _20cbde350_appendInstance(_20d814370_Fn* _self_, jule::Ptr<_20d814749_FnIns>& _12838_ins) {
	if (((*_self_)._field_Generics.len() == 0LL)) {
		if (((*_self_)._field_Instances.len() == 1LL)) {
			return (*_self_)._field_Instances[0LL];;
		};
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;;
	};
	if (((*_self_)._field_Instances.len() == 0LL)) {
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c87770e8:;
		if (it != expr.end()) {
			jule::Ptr<_20d814749_FnIns> _14421_ains = *it;
			{
				if (_20d815173_Same(_14421_ains.ptr(), _12838_ins)) {
					return _14421_ains;;
				};
			}
			_iter_next_1c87770e8:;
			++it;
			goto _iter_begin_1c87770e8;
		}
		_iter_end_1c87770e8:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d814370_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20cc2772e_Str(_20d81455c_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_Decl.get()._field_Reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_20cbece41_IsSelf((*_self_)._field_Decl.ptr())) {
		if (_20cbedd43_IsRef((*_self_)._field_Decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;;
	};
	if ((*_self_)._field_Decl.get()._field_Variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_Kind != nullptr)) {
		_16617_s+=_20d8e3a7b_Str((*_self_)._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d81455c_ParamIns _Src) {
	_Stream << _20cc2772e_Str(&_Src);
	return _Stream;
}



inline jule::Str _20cbe22ba_Str(_20d814749_FnIns* _self_) {
	;
	return _20d8152a5_GetKindStr(&(*_self_), false);;
}



inline jule::Bool _20d814936_Equals(jule::Ptr<_20d814749_FnIns> _self_, jule::Ptr<_20d8e3680_TypeKind> _21722_other) {
	jule::Ptr<_20d814749_FnIns> _21813_f = _20d8e6c05_Fn(_21722_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _20d814a68_EqualsFn(_self_, _21813_f);;
}



inline jule::Bool _20d814a68_EqualsFn(jule::Ptr<_20d814749_FnIns> _self_, jule::Ptr<_20d814749_FnIns>& _22825_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != _22825_f.get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != _22825_f.get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_20cbeec56_IsVoid(_self_.get()._field_Decl.ptr()) != _20cbeec56_IsVoid(_22825_f.get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_20d81455c_ParamIns>,jule::Ptr<_20d81455c_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_20d81455c_ParamIns>,jule::Ptr<_20d81455c_ParamIns>)>([=](jule::Ptr<_20d81455c_ParamIns> _23830_p1, jule::Ptr<_20d81455c_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_20cbece41_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_20cbece41_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_20cbedd43_IsRef(_23830_p1.get()._field_Decl.ptr()) != _20cbedd43_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _20d8e3d89_Equals(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if ((_22825_f.get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i],_22825_f.get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_1c8784e19:;
	}
	_iter_end_1c8784e19:;;
	if ((!(_20cbeec56_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_20d8e3d89_Equals(_self_.get()._field_Result, _22825_f.get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _20d814b9a_equalsTrait(jule::Ptr<_20d814749_FnIns> _self_, jule::Ptr<_20d814749_FnIns>& _28728_other) {
	if ((!(_20d814a68_EqualsFn(_self_, _28728_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != _28728_other.get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_20d8e3680_TypeKind>> _20d814ccc_Types(_20d814749_FnIns* _self_) {
	{
		
		if (((*_self_)._field_Result == nullptr)) {
			_case_begin_1c878844a:;
			{
				return nullptr;;
			}
		}
		else if ((_20d8e76a6_Tup((*_self_)._field_Result.ptr()) == nullptr)) {
			_case_begin_1c87884b1:;
			{
				return jule::Slice<jule::Ptr<_20d8e3680_TypeKind>>::make({(*_self_)._field_Result});;
			}
		}
		else {
			_case_begin_1c87883d4:;
			{
				return _20d8e76a6_Tup((*_self_)._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_1c8788318:;
	};
}



inline jule::Bool _20d814e0e_IsBuiltin(_20d814749_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);;
}



inline jule::Bool _20d815041_IsAnon(_20d814749_FnIns* _self_) {
	return ((*_self_)._field_Anon || (((*_self_)._field_Decl != nullptr) && _20cbe30ac_IsAnon((*_self_)._field_Decl.ptr())));;
}



inline jule::Bool _20d815173_Same(_20d814749_FnIns* _self_, jule::Ptr<_20d814749_FnIns> _32419_f) {
	if ((((*_self_)._field_Decl != _32419_f.get()._field_Decl) || (_32419_f.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c878bd22:;
		if (it != expr.end()) {
			jule::I64 _32913_i = it - expr.begin();
			jule::Ptr<_20d8e1e53_InsGeneric> &_32916_g = *it;
			{
				if ((!(_20d8e3d89_Equals(_32916_g.get()._field_Kind, _32419_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1c878bd22:;
			++it;
			_32913_i++;
			goto _iter_begin_1c878bd22;
		}
		_iter_end_1c878bd22:;
	};
	return true;;
}



inline jule::Str _20d8152a5_GetKindStr(_20d814749_FnIns* _self_, jule::Bool _34025_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Unsafety) {
		_34117_s+=jule::Str("unsafe ", 7);
	};
	_34117_s+=jule::Str("fn", 2);
	if ((_34025_ident && ((*_self_)._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*_self_)._field_Decl.get()._field_Ident);
	};
	_34117_s+=jule::Str("(", 1);
	jule::I64 _35413_n = (*_self_)._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_Params;
			auto it = expr.begin();
			_iter_begin_1c8790b5b:;
			if (it != expr.end()) {
				jule::Ptr<_20d81455c_ParamIns> &_35620_p = *it;
				{
					_34117_s+=_20cc2772e_Str(_35620_p.ptr());
					_34117_s+=jule::Str(",", 1);
				}
				_iter_next_1c8790b5b:;
				++it;
				goto _iter_begin_1c8790b5b;
			}
			_iter_end_1c8790b5b:;
		};
		(_34117_s).mut_slice(0LL,(_34117_s.len() - 1LL));;
	};
	_34117_s+=jule::Str(")", 1);
	if ((*_self_)._field_Decl.get()._field_Exceptional) {
		_34117_s+=jule::Str("!", 1);
	};
	if ((!(_20cbeec56_IsVoid((*_self_)._field_Decl.ptr())))) {
		_34117_s+=jule::Str(":", 1);
		_34117_s+=_20d8e3a7b_Str((*_self_)._field_Result.ptr());
	};
	return _34117_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d814749_FnIns _Src) {
	_Stream << _20cbe22ba_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_20d8156e5_ReferenceStack> static__20d8158d2_new(void) {
	return jule::new_ptr<_20d8156e5_ReferenceStack>(_20d8156e5_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _20d815a14_Len(_20d8156e5_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());;
}



inline jule::Any _20d815b46_At(_20d8156e5_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*_self_)._field_buffer[_6821_i];;
}



inline void _20d815c78_Push(_20d8156e5_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(_7327_ref);;
}



inline jule::Bool _1c8d8523e_Exist(_20d8156e5_ReferenceStack* _self_, jule::Ptr<_20d814749_FnIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1c8d8655e:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;;
				};
			}
			_iter_next_1c8d8655e:;
			++it;
			goto _iter_begin_1c8d8655e;
		}
		_iter_end_1c8d8655e:;
	};
	return false;;
}

inline jule::Bool _1c8d991ed_Exist(_20d8156e5_ReferenceStack* _self_, jule::Ptr<_20d869eb9_Var> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1c8d9a4c9:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;;
				};
			}
			_iter_next_1c8d9a4c9:;
			++it;
			goto _iter_begin_1c8d9a4c9;
		}
		_iter_end_1c8d9a4c9:;
	};
	return false;;
}

inline jule::Bool _1c8e3b3d3_Exist(_20d8156e5_ReferenceStack* _self_, jule::Ptr<_20cba5db6_StructIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1c8e3c703:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;;
				};
			}
			_iter_next_1c8e3c703:;
			++it;
			goto _iter_begin_1c8e3c703;
		}
		_iter_end_1c8e3c703:;
	};
	return false;;
}

inline jule::Bool _1c91b1669_Exist(_20d8156e5_ReferenceStack* _self_, jule::Ptr<_20d81a3ed_Trait> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1c91b28bd:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;;
				};
			}
			_iter_next_1c91b28bd:;
			++it;
			goto _iter_begin_1c91b28bd;
		}
		_iter_end_1c91b28bd:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8156e5_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d815edc_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d817e67_symbolBuilder> _20d81831e_getRoot(jule::Ptr<_20d817e67_symbolBuilder> _self_) {
	jule::Ptr<_20d817e67_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1c87a86ce:;
	}
	_iter_end_1c87a86ce:;;
	return _31617_root;;
}



inline void _20d818451_pushErr(_20d817e67_symbolBuilder* _self_, jule::Ptr<_20b4e5581_Token>& _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_20d84a780_compilerErr(_32327_token,true,_32342_fmt,_32355_args));;
}



inline void _20d818583_pushErrText(_20d817e67_symbolBuilder* _self_, jule::Ptr<_20b4e5581_Token>& _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_20d84a780_compilerErr(_32731_token,false,_32746_fmt,_32759_args));;
}



inline void _20d8186b5_pushSuggestion(_20d817e67_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_20d84bc15_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33233_fmt,_33246_args);
	};
}



inline jule::Bool _20d8187e7_checkCppUseDeclPath(_20d817e67_symbolBuilder* _self_, jule::Ptr<_20cba19a5_UseDecl>& _33639_decl, jule::Str _33655_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _33713_ext = _22321a349_Ext(_33655_path);;
	if (((!(_20b1b015d_IsValidHeaderExt(_33713_ext))) && (!(_20b1b0405_IsValidCppExt(_33713_ext))))) {
		_20d818451_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_216417b08_Status> _34413_info = ({
		auto except = static__21622e3c0_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_20d818451_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_216417b08_Status>(nullptr);});
	});;
	if (_2163285da_IsDir(_34413_info.ptr())) {
		_20d818451_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_20d84404d_ImportInfo> _20d818929_buildCppHeaderImport(_20d817e67_symbolBuilder* _self_, jule::Ptr<_20cba19a5_UseDecl>& _35644_decl) {
	jule::Str _35717_path = _35644_decl.get()._field_LinkPath;;
	if ((!(_20b1aee3d_IsStdHeaderPath(_35644_decl.get()._field_LinkPath)))) {
		_35717_path=_223218d81_Join(jule::Slice<jule::Str>::make({_20b4eb312_Dir(_35644_decl.get()._field_Token.get()._field_File.ptr()),_35644_decl.get()._field_LinkPath}));
		jule::Bool _36121_ok = _20d8187e7_checkCppUseDeclPath(&(*_self_), _35644_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;;
		};
		({
			_str_bool __jule_assign_result = _2231d35a9_Abs(_35717_path);
			_35717_path = __jule_assign_result.__jule_result_arg0;
			_36121_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_36121_ok))) {
			_20d818451_pushErr(&(*_self_), _35644_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35644_decl.get()._field_LinkPath)}));
		};
	};
	return jule::new_ptr<_20d84404d_ImportInfo>(_20d84404d_ImportInfo{._field_Token=_35644_decl.get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=_35644_decl.get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_20d84404d_ImportInfo> _20d818a5b_buildStdImport(_20d817e67_symbolBuilder* _self_, jule::Ptr<_20cba19a5_UseDecl>& _38438_decl) {
	jule::Str _38517_path = _38438_decl.get()._field_LinkPath.slice(5LL);;
	_38517_path=_20b13b78d_Replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38517_path=_223218d81_Join(jule::Slice<jule::Str>::make({_20b20556b_PathStdlib,_38517_path}));
	jule::Bool _38820_ok = false;;
	({
		_str_bool __jule_assign_result = _2231d35a9_Abs(_38517_path);
		_38517_path = __jule_assign_result.__jule_result_arg0;
		_38820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_38820_ok))) {
		_20d818451_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;;
	};
	jule::Ptr<_216417b08_Status> _39513_info = ({
		auto except = static__21622e3c0_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_20d818451_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
			return nullptr;;
		} jule::Ptr<_216417b08_Status>(nullptr);});
	});;
	if ((!(_2163285da_IsDir(_39513_info.ptr())))) {
		_20d818451_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;;
	};
	jule::I64 _40513_i = (_20b137080_FindLast(_38438_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38438_decl.get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_20d84404d_ImportInfo>(_20d84404d_ImportInfo{._field_Token=_38438_decl.get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=_38438_decl.get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=_38438_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=_38438_decl.get()._field_Full, ._field_Package=jule::new_ptr<_20d846ea7_Package>(_20d846ea7_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_20d84404d_ImportInfo> _20d818b8d_buildIdentImport(jule::Ptr<_20d817e67_symbolBuilder> _self_, jule::Ptr<_20cba19a5_UseDecl>& _42341_decl) {
	jule::Str _42413_modPath = _20d8413d0_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20d840544_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_20d818451_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_20d8186b5_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _43117_path = _42341_decl.get()._field_LinkPath;;
	_43117_path=_20b13b78d_Replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_43117_path=_223218d81_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok = false;;
	({
		_str_bool __jule_assign_result = _2231d35a9_Abs(_43117_path);
		_43117_path = __jule_assign_result.__jule_result_arg0;
		_43520_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_43520_ok))) {
		_20d818451_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;;
	};
	jule::Ptr<_216417b08_Status> _44213_info = ({
		auto except = static__21622e3c0_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_20d818451_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
			return nullptr;;
		} jule::Ptr<_216417b08_Status>(nullptr);});
	});;
	if ((!(_2163285da_IsDir(_44213_info.ptr())))) {
		_20d818451_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;;
	};
	jule::I64 _45213_i = (_20b137080_FindLast(_42341_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42341_decl.get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_20d84404d_ImportInfo>(_20d84404d_ImportInfo{._field_Token=_42341_decl.get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=_42341_decl.get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=_42341_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=_42341_decl.get()._field_Full, ._field_Package=jule::new_ptr<_20d846ea7_Package>(_20d846ea7_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_20d84404d_ImportInfo> _20d818cc0_buildImport(jule::Ptr<_20d817e67_symbolBuilder> _self_, jule::Ptr<_20cba19a5_UseDecl>& _47036_decl) {
	{
		
		if (_47036_decl.get()._field_CppLinked) {
			_case_begin_1c87c5ed2:;
			{
				return _20d818929_buildCppHeaderImport(_self_.ptr(), _47036_decl);;
			}
		}
		else if (_47036_decl.get()._field_Std) {
			_case_begin_1c87c6235:;
			{
				return _20d818a5b_buildStdImport(_self_.ptr(), _47036_decl);;
			}
		}
		else {
			_case_begin_1c87c57d9:;
			{
				return _20d818b8d_buildIdentImport(_self_, _47036_decl);;
			}
		}
		_match_end_1c87c571d:;
	};
}



inline jule::Bool _20d818e02_checkDuplicateUseDecl(_20d817e67_symbolBuilder* _self_, jule::Ptr<_20d84404d_ImportInfo>& _48141_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d84404d_ImportInfo> _48313_lpkg = _20d8ad392_SelectPackage((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)>([=](jule::Ptr<_20d84404d_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return (_48141_pkg.get()._field_Path == _48348_spkg.get()._field_Path);;
	}));;
	if ((_48313_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_20d818451_pushErr(&(*_self_), _48141_pkg.get()._field_Token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48141_pkg.get()._field_LinkPath)}));
	_20d8186b5_pushSuggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _20d819034_implImportSelections(_20d817e67_symbolBuilder* _self_, jule::Ptr<_20d84404d_ImportInfo>& _49544_imp, jule::Ptr<_20cba19a5_UseDecl>& _49567_decl) {
	_49544_imp.get()._field_Selected=_49567_decl.get()._field_Selected;
	{
		auto &expr = _49544_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1c87c9bc8:;
		if (it != expr.end()) {
			jule::Ptr<_20b4e5581_Token> _49716_item = *it;
			{
				{
					auto &expr = _49544_imp.get()._field_Selected;
					auto it = expr.begin();
					_iter_begin_1c87ca415:;
					if (it != expr.end()) {
						jule::Ptr<_20b4e5581_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1c87ca415;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_20d818451_pushErr(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind)}));
								_20d8186b5_pushSuggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_1c87ca415;
							};
						}
						_iter_next_1c87ca415:;
						++it;
						goto _iter_begin_1c87ca415;
					}
					_iter_end_1c87ca415:;
				};
			}
			_iter_next_1c87c9bc8:;
			++it;
			goto _iter_begin_1c87c9bc8;
		}
		_iter_end_1c87c9bc8:;
	};
}



inline jule::Str _20d819166_getAsLinkPath(jule::Ptr<_20d817e67_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_20b135bc7_HasPrefix(_51037_path,_20b20556b_PathStdlib)) {
		(_51037_path).mut_slice(_20b20556b_PathStdlib.len());;
		return (jule::Str("std", 3) + _20b13b78d_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));;
	};
	jule::Str _51614_root;;
	({
		_str_bool __jule_assign_result = _2231d35a9_Abs(_20d8413d0_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20d840544_GetModPath(_self_.get()._field_importer));
		_51614_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 47LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _20b13b78d_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);;
}



inline void _20d819298_pushCycleError(jule::Ptr<_20d817e67_symbolBuilder> _self_, jule::Ptr<_20d817e67_symbolBuilder>& _52435_sb, jule::Str _52455_path, jule::Str& _52471_message) {
	;
	jule::Str _52613_refersTo = _20b1bc456_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_20d819166_getAsLinkPath(_self_, _20b4eb312_Dir(_52435_sb.get()._field_table.get()._field_File.ptr()))),jule::Any(_20d819166_getAsLinkPath(_self_, _52455_path))}));;
	(_52471_message).buffer.insert(0, (((_20b11c7b3_Repeat(jule::Str(" ", 1),4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _20d8193ca_pushCrossCycleError(jule::Ptr<_20d817e67_symbolBuilder> _self_, jule::Ptr<_20d817e67_symbolBuilder>& _53340_target, jule::Ptr<_20d84404d_ImportInfo>& _53365_imp, jule::Ptr<_20b4e5581_Token>& _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_20d819298_pushCycleError(_self_, _self_,_53365_imp.get()._field_Path,_53417_message);
	jule::Ptr<_20d817e67_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_20d817e67_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_20d819298_pushCycleError(_self_, _53917_old.get()._field_owner,_20b4eb312_Dir(_53917_old.get()._field_table.get()._field_File.ptr()),_53417_message);
			if ((_53817_owner.get()._field_owner == _53340_target)) {
				_20d819298_pushCycleError(_self_, _53340_target,_20b4eb312_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()),_53417_message);
				goto _iter_end_1c87d2dbd;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_1c87d2dbd:;
	}
	_iter_end_1c87d2dbd:;;
	_20d818451_pushErr(_self_.ptr(), _53384_errorToken,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53417_message)}));
}



inline jule::Bool _20d81950c_checkImportCycles(jule::Ptr<_20d817e67_symbolBuilder> _self_, jule::Ptr<_20d84404d_ImportInfo> _55637_imp, jule::Ptr<_20cba19a5_UseDecl>& _55656_decl) {
	if ((_55637_imp.get()._field_Path == _20b4eb312_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_20d818451_pushErr(_self_.ptr(), _55656_decl.get()._field_Token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_20d819166_getAsLinkPath(_self_, _55637_imp.get()._field_Path))}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_20b4eb312_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_20d8193ca_pushCrossCycleError(_self_, _self_.get()._field_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;;
	};
	jule::Ptr<_20d817e67_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_20b4eb312_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_20d8193ca_pushCrossCycleError(_self_, _57117_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _20d81963e_checkPackageAccessibility(_20d817e67_symbolBuilder* _self_, jule::Ptr<_20cba19a5_UseDecl>& _59245_decl, jule::Str& _59262_mod, jule::Str& _59273_path) {
	if (((_20d8413d0_Importer_mptr_data[((*_self_)._field_importer).type_offset]._20d840544_GetModPath((*_self_)._field_importer) != _59262_mod) && _20b13a4e5_Contains(_59273_path,jule::Str("internal", 8)))) {
		_20d818451_pushErr(&(*_self_), _59245_decl.get()._field_Token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _20d819771_importPackage(jule::Ptr<_20d817e67_symbolBuilder> _self_, jule::Ptr<_20d84404d_ImportInfo>& _59838_imp, jule::Ptr<_20cba19a5_UseDecl>& _59861_decl) {
	jule::Bool __jule_func_result = false;
	if (_59838_imp.get()._field_CppLinked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_20d84404d_ImportInfo> _60317_port = _20d8413d0_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20d840b60_GetImport(_self_.get()._field_importer, _59838_imp.get()._field_Path);;
	if ((_60317_port != nullptr)) {
		_59838_imp.get()._field_Package=_60317_port.get()._field_Package;
		_59838_imp.get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _20d8413d0_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20d840544_GetModPath(_self_.get()._field_importer);;
		_20d8413d0_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20d8402e1_SetModPath(_self_.get()._field_importer, _20d8413d0_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20d840852_ModById(_self_.get()._field_importer, _59838_imp.get()._field_ModId));
		_20d81963e_checkPackageAccessibility(_self_.ptr(), _59861_decl,_60817_oldMod,_60317_port.get()._field_Path);
		_20d8413d0_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20d8402e1_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_20d81950c_checkImportCycles(_self_, _59838_imp,_59861_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _61717_oldMod = _20d8413d0_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20d840544_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_20d8413d0_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20d8402e1_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if (_59838_imp.get()._field_Std) {
			_20d8413d0_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20d8402e1_SetModPath(_self_.get()._field_importer, _20b20556b_PathStdlib);
		};
		jule::Slice<jule::Ptr<_20cb5014b_Ast>> _62222_asts;;
		jule::Slice<_20b1bc016_Log> _62232_errors;;
		({
			_sx_20cb5014b_Ast_s_20b1bc016_Log __jule_assign_result = _20d8413d0_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20d841017_ImportPackage(_self_.get()._field_importer, _59838_imp.get()._field_Path,(!(_59838_imp.get()._field_Std)));
			_62222_asts = __jule_assign_result.__jule_result_arg0;
			_62232_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_20d81963e_checkPackageAccessibility(_self_.ptr(), _59861_decl,_61717_oldMod,_59838_imp.get()._field_Path);
		{
			auto &expr = _62222_asts;
			auto it = expr.begin();
			_iter_begin_1c87e2938:;
			if (it != expr.end()) {
				jule::Ptr<_20cb5014b_Ast> _63025_ast = *it;
				{
					jule::Ptr<_20d8aca67_SymbolTable> _63125_table = nullptr;;
					({
						_x_20d8aca67_SymbolTable_s_20b1bc016_Log __jule_assign_result = _20d910218_buildSymbols(_63025_ast,_self_.get()._field_importer,_self_);
						_63125_table = __jule_assign_result.__jule_result_arg0;
						_62232_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					_59838_imp.get()._field_Package.get()._field_Files = jule::alloc_for_append(_59838_imp.get()._field_Package.get()._field_Files,1);_59838_imp.get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_1c87e2938:;
				++it;
				goto _iter_begin_1c87e2938;
			}
			_iter_end_1c87e2938:;
		};
	};
	_20d819034_implImportSelections(_self_.ptr(), _59838_imp,_59861_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_20d84404d_ImportInfo> _20d8198a3_importUseDecl(jule::Ptr<_20d817e67_symbolBuilder> _self_, jule::Ptr<_20cba19a5_UseDecl>& _64538_decl) {
	jule::Ptr<_20d84404d_ImportInfo> _64617_imp = _20d818cc0_buildImport(_self_, _64538_decl);;
	if ((_64617_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _65217_ok = _20d818e02_checkDuplicateUseDecl(_self_.ptr(), _64617_imp);;
	if ((!(_65217_ok))) {
		return nullptr;;
	};
	_65217_ok=_20d819771_importPackage(_self_, _64617_imp,_64538_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_64617_imp);;
	if (_65217_ok) {
		_20d8413d0_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20d84128c_Imported(_self_.get()._field_importer, _64617_imp);
		return _64617_imp;;
	};
	return nullptr;;
}



inline void _20d8199d5_importUseDecls(jule::Ptr<_20d817e67_symbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_UseDecls;
		auto it = expr.begin();
		_iter_begin_1c87e6e15:;
		if (it != expr.end()) {
			jule::Ptr<_20cba19a5_UseDecl> _66721_decl = *it;
			{
				_20d8198a3_importUseDecl(_self_, _66721_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1c87e6e15;
				};
			}
			_iter_next_1c87e6e15:;
			++it;
			goto _iter_begin_1c87e6e15;
		}
		_iter_end_1c87e6e15:;
	};
}



inline void _20d819b17_appendNode(_20d817e67_symbolBuilder* _self_, _20cb50cea_Node& _67634_node) {
	{
		auto &_match_expr{ _67634_node._field_Data };
		
		if (_match_expr.type_is_ptr<_20cba5228_Impl>()) {
			_case_begin_1c87e760d:;
			{
				(*_self_)._field_table.get()._field_Impls = jule::alloc_for_append((*_self_)._field_table.get()._field_Impls,1);(*_self_)._field_table.get()._field_Impls.__push(_20d817d35_buildImpl(_67634_node._field_Data.operator jule::Ptr<_20cba5228_Impl>()));;
			}
		}
		else if (_match_expr.type_is_ptr<_20cba05b9_TypeAliasDecl>()) {
			_case_begin_1c87e8510:;
			{
				jule::Ptr<_20d8e298c_TypeAlias> _68121_ta = _20d81643d_buildTypeAlias(_67634_node._field_Data.operator jule::Ptr<_20cba05b9_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_TypeAliases = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeAliases,1);(*_self_)._field_table.get()._field_TypeAliases.__push(_68121_ta);;
			}
		}
		else if (_match_expr.type_is_ptr<_20cba4513_StructDecl>()) {
			_case_begin_1c87e8576:;
			{
				jule::Ptr<_20cba59dc_Struct> _68421_srct = _20d8167d4_buildStruct(_67634_node._field_Data.operator jule::Ptr<_20cba4513_StructDecl>());;
				(*_self_)._field_table.get()._field_Structs = jule::alloc_for_append((*_self_)._field_table.get()._field_Structs,1);(*_self_)._field_table.get()._field_Structs.__push(_68421_srct);;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb9ac79_FnDecl>()) {
			_case_begin_1c87e85dc:;
			{
				jule::Ptr<_20d814370_Fn> _68721_f = _20d816cac_buildFn(_67634_node._field_Data.operator jule::Ptr<_20cb9ac79_FnDecl>());;
				(*_self_)._field_table.get()._field_Funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_Funcs,1);(*_self_)._field_table.get()._field_Funcs.__push(_68721_f);;
			}
		}
		else if (_match_expr.type_is_ptr<_20cba4b1d_TraitDecl>()) {
			_case_begin_1c87e8d5c:;
			{
				jule::Ptr<_20d81a3ed_Trait> _69021_t = _20d817021_buildTrait(_67634_node._field_Data.operator jule::Ptr<_20cba4b1d_TraitDecl>());;
				(*_self_)._field_table.get()._field_Traits = jule::alloc_for_append((*_self_)._field_table.get()._field_Traits,1);(*_self_)._field_table.get()._field_Traits.__push(_69021_t);;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb9bc58_VarDecl>()) {
			_case_begin_1c87e8dc3:;
			{
				jule::Ptr<_20d869eb9_Var> _69321_v = _20d817ac1_buildVar(_67634_node._field_Data.operator jule::Ptr<_20cb9bc58_VarDecl>());;
				(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_69321_v);;
			}
		}
		else if (_match_expr.type_is_ptr<_20cba2951_EnumDecl>()) {
			_case_begin_1c87e8e39:;
			{
				jule::Ptr<_20d81b0ad_Enum> _69621_e = _20d8173b7_buildEnum(_67634_node._field_Data.operator jule::Ptr<_20cba2951_EnumDecl>());;
				(*_self_)._field_table.get()._field_Enums = jule::alloc_for_append((*_self_)._field_table.get()._field_Enums,1);(*_self_)._field_table.get()._field_Enums.__push(_69621_e);;
			}
		}
		else if (_match_expr.type_is_ptr<_20cba3a62_TypeEnumDecl>()) {
			_case_begin_1c87e8ea0:;
			{
				jule::Ptr<_20d81b82d_TypeEnum> _69921_e = _20d81798e_buildTypeEnum(_67634_node._field_Data.operator jule::Ptr<_20cba3a62_TypeEnumDecl>());;
				(*_self_)._field_table.get()._field_TypeEnums = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeEnums,1);(*_self_)._field_table.get()._field_TypeEnums.__push(_69921_e);;
			}
		}
		else {
			_case_begin_1c87e8400:;
			{
				_20d818451_pushErr(&(*_self_), _67634_node._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c87e839a:;
	};
}



inline void _20d819c49_appendNodes(_20d817e67_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_Nodes;
		auto it = expr.begin();
		_iter_begin_1c880254c:;
		if (it != expr.end()) {
			_20cb50cea_Node _70721_node = *it;
			{
				_20d819b17_appendNode(&(*_self_), _70721_node);
			}
			_iter_next_1c880254c:;
			++it;
			goto _iter_begin_1c880254c;
		}
		_iter_end_1c880254c:;
	};
}



inline void _20d819d7b_pushDirectivePass(_20d817e67_symbolBuilder* _self_, jule::Ptr<_20cb511e6_Directive>& _71241_d) {
	if ((_71241_d.get()._field_Args.len() == 0LL)) {
		_20d818451_pushErr(&(*_self_), _71241_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71241_d.get()._field_Args.len() > 1LL)) {
		jule::Ptr<_20b4e5581_Token> _71717_arg = _71241_d.get()._field_Args[1LL];;
		_20d818451_pushErr(&(*_self_), _71717_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20b4e5581_Token> _72113_arg = _71241_d.get()._field_Args[0LL];;
	if ((_72113_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_20d818451_pushErr(&(*_self_), _72113_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72113_arg.get()._field_Kind[0LL] != '\"')) {
		_20d818451_pushErr(&(*_self_), _72113_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_Passes = jule::alloc_for_append((*_self_)._field_table.get()._field_Passes,1);(*_self_)._field_table.get()._field_Passes.__push(_20d815edc_Pass{._field_Token=_71241_d.get()._field_Tag, ._field_Text=_72113_arg.get()._field_Kind.slice(1LL,(_72113_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _20d819ead_appendTopDirectives(_20d817e67_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1c8807640:;
		if (it != expr.end()) {
			jule::Ptr<_20cb511e6_Directive> _73921_d = *it;
			{
				{
					auto &_match_expr{ _73921_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1c8808300:;
						{
							_20d819d7b_pushDirectivePass(&(*_self_), _73921_d);
						}
					}
					_match_end_1c8808267:;
				};
			}
			_iter_next_1c8807640:;
			++it;
			goto _iter_begin_1c8807640;
		}
		_iter_end_1c8807640:;
	};
}



inline void _20d81a0e0_build(jule::Ptr<_20d817e67_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_20d8aca67_SymbolTable>(_20d8aca67_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_20d819ead_appendTopDirectives(_self_.ptr());
	_20d8199d5_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_20d819c49_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d817e67_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20d81a5da_Str(_20d81a3ed_Trait* _self_) {
	return (*_self_)._field_Ident;;
}



inline jule::Bool _20d81a71c_Equals(jule::Ptr<_20d81a3ed_Trait> _self_, jule::Ptr<_20d8e3680_TypeKind> _2522_other) {
	jule::Ptr<_20d81a3ed_Trait> _2613_trt = _20d8e71cd_Trait(_2522_other.ptr());;
	return (_self_ == _2613_trt);;
}



inline jule::Bool _20d81a84e_IsBuiltin(_20d81a3ed_Trait* _self_) {
	return ((*_self_)._field_Token == nullptr);;
}



inline jule::Ptr<_20d814370_Fn> _20d81a981_FindMethod(_20d81a3ed_Trait* _self_, jule::Str _3929_ident) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c880c117:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;;
				};
			}
			_iter_next_1c880c117:;
			++it;
			goto _iter_begin_1c880c117;
		}
		_iter_end_1c880c117:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d81a3ed_Trait _Src) {
	_Stream << _20d81a5da_Str(&_Src);
	return _Stream;
}



inline jule::Bool _20d81ae7b_AutoExpr(_20d81ac8e_EnumItem* _self_) {
	return ((*_self_)._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d81ac8e_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20d81b29a_Str(_20d81b0ad_Enum* _self_) {
	return (*_self_)._field_Ident;;
}



inline jule::Bool _20d81b3cc_Equals(jule::Ptr<_20d81b0ad_Enum> _self_, jule::Ptr<_20d8e3680_TypeKind> _3822_other) {
	jule::Ptr<_20d81b0ad_Enum> _3913_enm = _20d8e6254_Enum(_3822_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_20d81ac8e_EnumItem> _20d81b50e_FindItem(_20d81b0ad_Enum* _self_, jule::Str _4727_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1c880e7bd:;
		if (it != expr.end()) {
			jule::Ptr<_20d81ac8e_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1c880e7bd:;
			++it;
			goto _iter_begin_1c880e7bd;
		}
		_iter_end_1c880e7bd:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d81b0ad_Enum _Src) {
	_Stream << _20d81b29a_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d81b641_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20d81ba1a_Str(_20d81b82d_TypeEnum* _self_) {
	return (*_self_)._field_Ident;;
}



inline jule::Bool _20d81bb4c_Equals(jule::Ptr<_20d81b82d_TypeEnum> _self_, jule::Ptr<_20d8e3680_TypeKind> _8022_other) {
	jule::Ptr<_20d81b82d_TypeEnum> _8113_tenm = _20d8e64b8_TypeEnum(_8022_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_20d81b641_TypeEnumItem> _20d81bdb1_FindItem(_20d81b82d_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1c88118d0:;
		if (it != expr.end()) {
			jule::Ptr<_20d81b641_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1c88118d0:;
			++it;
			goto _iter_begin_1c88118d0;
		}
		_iter_end_1c88118d0:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d81b82d_TypeEnum _Src) {
	_Stream << _20d81ba1a_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_20d84c199_Sema>&,jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>&)> _20d81dcd6_readyFn(jule::Ptr<_20d81d8a7_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_20d84c199_Sema>&,jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>&)>([=](jule::Ptr<_20d84c199_Sema>& _6321_sema, jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>& _6339_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_genericsD;
			auto it = expr.begin();
			_iter_begin_1c881dd3d:;
			if (it != expr.end()) {
				jule::I64 _6418_i = it - expr.begin();
				jule::Ptr<_20cb965e3_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_20d8e1e53_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1c881dd3d;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_20d8e3680_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto &expr = _6425_g.get()._field_Constraint.get()._field_Mask;
						auto it = expr.begin();
						_iter_begin_1c88215e3:;
						if (it != expr.end()) {
							jule::Ptr<_20cb892ea_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = _6321_sema.get()._field_errors.len();;
								jule::Ptr<_20d8e3680_TypeKind> _7229_kind = _20d85449d_buildTypeWithRefers(_6321_sema, _7029_mask,jule::Trait<_20d90e536_Lookup>(_6321_sema, 3),_6339_generics,nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type_is_ptr<_20cb898b1_IdentTypeDecl>()) {
											_case_begin_1c8823150:;
											{
												jule::Ptr<_20cb898b1_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.operator jule::Ptr<_20cb898b1_IdentTypeDecl>();;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _20d81ee6e_isBuiltinConstraint(_7637_itd.get()._field_Ident))) {
													_7229_kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													_6321_sema.get()._field_errors=_6321_sema.get()._field_errors.slice(0LL,_7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1c88230b7:;
									};
									return false;;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1c88215e3:;
							++it;
							goto _iter_begin_1c88215e3;
						}
						_iter_end_1c88215e3:;
					};
				}
				_iter_next_1c881dd3d:;
				++it;
				_6418_i++;
				goto _iter_begin_1c881dd3d;
			}
			_iter_end_1c881dd3d:;
		};
		return true;;
	});;
}



inline jule::Bool _20d81e04a_readyFi(jule::Ptr<_20d81d8a7_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _20d85889d_fnEnvironment(_self_.get()._field_s, _self_.get()._field_fi,_20d81dcd6_readyFn(_self_)));;
}



inline jule::Bool _20d81e2ae_readySi(jule::Ptr<_20d81d8a7_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _20d81dcd6_readyFn(_self_)(_self_.get()._field_s,_self_.get()._field_genericsA));;
}



inline jule::Bool _20d81e523_ready(jule::Ptr<_20d81d8a7_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _20d81e04a_readyFi(_self_);;
	};
	return _20d81e2ae_readySi(_self_);;
}



inline jule::Bool _20d81e787_check(jule::Ptr<_20d81d8a7_constraintChecker> _self_) {
	if ((!(_20d81e523_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1c882a047:;
		if (it != expr.end()) {
			jule::I64 _11914_i = it - expr.begin();
			jule::Ptr<_20d8e1e53_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1c882a047;
				};
				{
					auto &expr = _11921_g.get()._field_Constraint;
					auto it = expr.begin();
					_iter_begin_1c882b048:;
					if (it != expr.end()) {
						jule::Ptr<_20d8e3680_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_20d8e83cc_Prim> _12425_prim = _20d8e5a17_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _20d8e8ec1_IsConstraint(_12425_prim.ptr()))) {
								if (_20d81eb83_matchConstraint(_12425_prim.get()._field_Kind,_11921_g.get()._field_Kind)) {
									goto _iter_next_1c882a047;
								};
								goto _iter_next_1c882b048;
							};
							if (_20d8e3d89_Equals(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1c882a047;
							};
						}
						_iter_next_1c882b048:;
						++it;
						goto _iter_begin_1c882b048;
					}
					_iter_end_1c882b048:;
				};
				_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_11921_g.get()._field_Kind.ptr())),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident)}));
				return false;;
			}
			_iter_next_1c882a047:;
			++it;
			_11914_i++;
			goto _iter_begin_1c882a047;
		}
		_iter_end_1c882a047:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d81d8a7_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d820bd9_IsTraitImpl(_20d8207dd_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);;
}



inline jule::Bool _20d820e4d_IsStructImpl(_20d8207dd_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8207dd_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d825848_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d825c44_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d826030_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8263a4_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d826690_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d826ea9_IsWhileNext(_20d826b13_WhileIter* _self_) {
	return ((*_self_)._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d826b13_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8274e8_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8278e4_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d827c9b_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d828087_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d828373_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d82872a_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d828b9d_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d829055_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d829aa0_IsGenericTypeMatch(_20d829594_Match* _self_) {
	return (((*_self_)._field_TypeMatch && ((*_self_)._field_Expr != nullptr)) && (*_self_)._field_Expr.get()._field_Kind.get()._field_Generic);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d829594_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d82a3a8_isDefault(_20d82a0de_Case* _self_) {
	return ((*_self_)._field_Exprs == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d82a0de_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d82a694_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d82aa18_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d82b123_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d82b596_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d84404d_ImportInfo> _20d82c83e_FindPackage(_20d82c3aa_scopeChecker* _self_, jule::Str _45430_ident) {
	return _20d84c6b6_FindPackage((*_self_)._field_s.ptr(), _45430_ident);;
}



inline jule::Ptr<_20d84404d_ImportInfo> _20d82cb4c_SelectPackage(_20d82c3aa_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)> _46432_selector) {
	return _20d84c9c4_SelectPackage((*_self_)._field_s.ptr(), _46432_selector);;
}



inline jule::Ptr<_20d869eb9_Var> _20d82d004_FindVar(_20d82c3aa_scopeChecker* _self_, jule::Str _47526_ident, jule::Bool _47538_cpp_linked) {
	;
	jule::Ptr<_20d869eb9_Var> _47817_v = _20d8b030b_findVar((*_self_)._field_table.ptr(), _47526_ident,_47538_cpp_linked,true);;
	if ((_47817_v != nullptr)) {
		return _47817_v;;
	};
	jule::Ptr<_20d82c3aa_scopeChecker> _48317_parent = (*_self_)._field_parent;;
	while ((_48317_parent != nullptr)) {
		{
			_47817_v=_20d8b030b_findVar(_48317_parent.get()._field_table.ptr(), _47526_ident,_47538_cpp_linked,true);
			if ((_47817_v != nullptr)) {
				return _47817_v;;
			};
			_48317_parent=_48317_parent.get()._field_parent;
		}
	_iter_next_1c8855171:;
	}
	_iter_end_1c8855171:;;
	return _20d84cd7b_FindVar((*_self_)._field_s.ptr(), _47526_ident,_47538_cpp_linked);;
}



inline jule::Ptr<_20d8e298c_TypeAlias> _20d82d3ab_FindTypeAlias(_20d82c3aa_scopeChecker* _self_, jule::Str _50232_ident, jule::Bool _50244_cppLinked) {
	;
	jule::Ptr<_20d8e298c_TypeAlias> _50517_ta = _20d8b075c_findTypeAlias((*_self_)._field_table.ptr(), _50232_ident,_50244_cppLinked,true);;
	if ((_50517_ta != nullptr)) {
		return _50517_ta;;
	};
	jule::Ptr<_20d82c3aa_scopeChecker> _51017_parent = (*_self_)._field_parent;;
	while ((_51017_parent != nullptr)) {
		{
			_50517_ta=_20d8b075c_findTypeAlias(_51017_parent.get()._field_table.ptr(), _50232_ident,_50244_cppLinked,true);
			if ((_50517_ta != nullptr)) {
				return _50517_ta;;
			};
			_51017_parent=_51017_parent.get()._field_parent;
		}
	_iter_next_1c8857d66:;
	}
	_iter_end_1c8857d66:;;
	return _20d84d233_FindTypeAlias((*_self_)._field_s.ptr(), _50232_ident,_50244_cppLinked);;
}



inline jule::Ptr<_20cba59dc_Struct> _20d82d763_FindStruct(_20d82c3aa_scopeChecker* _self_, jule::Str _52729_ident, jule::Bool _52741_cppLinked) {
	return _20d84d5da_FindStruct((*_self_)._field_s.ptr(), _52729_ident,_52741_cppLinked);;
}



inline jule::Ptr<_20d814370_Fn> _20d82db1a_FindFn(_20d82c3aa_scopeChecker* _self_, jule::Str _53625_ident, jule::Bool _53637_cppLinked) {
	return _20d84d992_FindFn((*_self_)._field_s.ptr(), _53625_ident,_53637_cppLinked);;
}



inline jule::Ptr<_20d81a3ed_Trait> _20d82de28_FindTrait(_20d82c3aa_scopeChecker* _self_, jule::Str _54528_ident) {
	return _20d84dca0_FindTrait((*_self_)._field_s.ptr(), _54528_ident);;
}



inline jule::Ptr<_20d81b0ad_Enum> _20d82e236_FindEnum(_20d82c3aa_scopeChecker* _self_, jule::Str _55427_ident) {
	return _20d84e0ad_FindEnum((*_self_)._field_s.ptr(), _55427_ident);;
}



inline jule::Ptr<_20d81b82d_TypeEnum> _20d82e544_FindTypeEnum(_20d82c3aa_scopeChecker* _self_, jule::Str _56331_ident) {
	return _20d84e3bb_FindTypeEnum((*_self_)._field_s.ptr(), _56331_ident);;
}



inline jule::Bool _20d82e874_isUnsafe(jule::Ptr<_20d82c3aa_scopeChecker> _self_) {
	jule::Ptr<_20d82c3aa_scopeChecker> _57117_scope = _self_;;
	_julec_label_iter:;
	if (_57117_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_57117_scope.get()._field_parent != nullptr)) {
		_57117_scope=_57117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _20d82ead8_isRoot(_20d82c3aa_scopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));;
}



inline void _20d82ecb4_stop(_20d82c3aa_scopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _20d830028_stopped(_20d82c3aa_scopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);;
}



inline jule::Bool _20d83028c_isDeferred(jule::Ptr<_20d82c3aa_scopeChecker> _self_) {
	jule::Ptr<_20d82c3aa_scopeChecker> _60417_scope = _self_;;
	_julec_label_iter:;
	if (_60417_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_60417_scope.get()._field_parent != nullptr)) {
		_60417_scope=_60417_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_20d82c3aa_scopeChecker> _20d830501_getRoot(jule::Ptr<_20d82c3aa_scopeChecker> _self_) {
	jule::Ptr<_20d82c3aa_scopeChecker> _62217_root = _self_;;
	while (((_62217_root.get()._field_parent != nullptr) && (_62217_root.get()._field_owner == nullptr))) {
		{
			_62217_root=_62217_root.get()._field_parent;
		}
	_iter_next_1c88624be:;
	}
	_iter_end_1c88624be:;;
	return _62217_root;;
}



inline jule::Ptr<_20d82c3aa_scopeChecker> _20d830765_getHardRoot(jule::Ptr<_20d82c3aa_scopeChecker> _self_) {
	jule::Ptr<_20d82c3aa_scopeChecker> _63217_root = _self_;;
	while ((_63217_root.get()._field_parent != nullptr)) {
		{
			_63217_root=_63217_root.get()._field_parent;
		}
	_iter_next_1c8863723:;
	}
	_iter_end_1c8863723:;;
	return _63217_root;;
}



inline jule::Ptr<_20d828087_Label> _20d830a73_findLabel(_20d82c3aa_scopeChecker* _self_, jule::Str _64228_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1c886427e:;
		if (it != expr.end()) {
			jule::Any _64321_st = *it;
			{
				{
					auto &_match_expr{ _64321_st };
					
					if (_match_expr.type_is_ptr<_20d828087_Label>()) {
						_case_begin_1c8864cb8:;
						{
							jule::Ptr<_20d828087_Label> _64625_label = _64321_st.operator jule::Ptr<_20d828087_Label>();;
							if ((_64625_label.get()._field_Ident == _64228_ident)) {
								return _64625_label;;
							};
						}
					}
					_match_end_1c8864bb9:;
				};
			}
			_iter_next_1c886427e:;
			++it;
			goto _iter_begin_1c886427e;
		}
		_iter_end_1c886427e:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d82b123_scopeLabel> _20d830d81_findLabelScope(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Str _65834_ident) {
	jule::Ptr<_20d82b123_scopeLabel> _65917_label = _20d83118e_findLabelAll(_self_.ptr(), _65834_ident);;
	if (((_65917_label != nullptr) && (_65917_label.get()._field_scope == _self_))) {
		return _65917_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_20d82b123_scopeLabel> _20d83118e_findLabelAll(_20d82c3aa_scopeChecker* _self_, jule::Str _67031_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1c886702e:;
		if (it != expr.end()) {
			jule::Ptr<_20d82b123_scopeLabel> _67121_lbl = *it;
			{
				if ((_67121_lbl.get()._field_label.get()._field_Ident == _67031_ident)) {
					return _67121_lbl;;
				};
			}
			_iter_next_1c886702e:;
			++it;
			goto _iter_begin_1c886702e;
		}
		_iter_end_1c886702e:;
	};
	return nullptr;;
}



inline jule::Bool _20d831546_isDuplicatedIdent(_20d82c3aa_scopeChecker* _self_, jule::Uintptr _68236_itself, jule::Str _68253_ident) {
	jule::Ptr<_20d869eb9_Var> _68313_v = _20d82d004_FindVar(&(*_self_), _68253_ident,false);;
	if (((_68313_v != nullptr) && (static_cast<jule::Uintptr>(_68313_v) != _68236_itself))) {
		if ((_68313_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_v.get()._field_Scope == (*_self_)._field_scope) || (!(_20d84e71d_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_20d8e298c_TypeAlias> _69113_ta = _20d82d3ab_FindTypeAlias(&(*_self_), _68253_ident,false);;
	if (((_69113_ta != nullptr) && (static_cast<jule::Uintptr>(_69113_ta) != _68236_itself))) {
		if ((_69113_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_69113_ta.get()._field_Scope == (*_self_)._field_tree) || (!(_20d84e71d_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _20d8317bb_checkVarDecl(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb9bc58_VarDecl> _70236_decl) {
	jule::Ptr<_20d869eb9_Var> _70317_v = _20d817ac1_buildVar(_70236_decl);;
	_70317_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70317_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_70317_v));;
	});;
	if (_20d831546_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70317_v)),_70317_v.get()._field_Ident)) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _70317_v.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70317_v.get()._field_Ident)}));
		_20d85017a_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_20d82ecb4_stop(_self_.ptr());
		return;;
	};
	_20d85e321_checkVarDecl(_self_.get()._field_s, _70317_v,jule::Trait<_20d90e536_Lookup>(_self_, 0));
	if (((!(_20d86a5e6_IsTypeInferred(_70317_v.ptr()))) && ((_70317_v.get()._field_Kind == nullptr) || (_70317_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_20d862962_checkTypeVar(_self_.get()._field_s, _70317_v,jule::Trait<_20d90e536_Lookup>(_self_, 0));
}



inline void _20d831a41_checkTypeAliasDecl(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cba05b9_TypeAliasDecl> _72642_decl) {
	jule::Ptr<_20d8e298c_TypeAlias> _72717_ta = _20d81643d_buildTypeAlias(_72642_decl);;
	if (_20d831546_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72717_ta)),_72717_ta.get()._field_Ident)) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _72717_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72717_ta.get()._field_Ident)}));
		_20d85017a_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_20d82ecb4_stop(_self_.ptr());
		return;;
	};
	_20d85a163_checkTypeAliasDecl(_self_.get()._field_s, _72717_ta,jule::Trait<_20d90e536_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72717_ta);;
	if ((_72717_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_20d82ecb4_stop(_self_.ptr());
	};
}



inline jule::Ptr<_20d825848_Scope> _20d831ca5_getChild(_20d82c3aa_scopeChecker* _self_) {
	return jule::new_ptr<_20d825848_Scope>(_20d825848_Scope{._field_Parent=(*_self_)._field_scope, });;
}



inline void _20d83216d_checkChildSsc(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb99283_ScopeTree>& _75038_tree, jule::Ptr<_20d825848_Scope>& _75061_s, jule::Ptr<_20d82c3aa_scopeChecker>& _75077_ssc) {
	_75077_ssc.get()._field_parent=_self_;
	_20d83c1ab_check(_75077_ssc, _75038_tree,_75061_s);
}



inline jule::Ptr<_20d825848_Scope> _20d832525_checkChildSc(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb99283_ScopeTree>& _75537_tree, jule::Ptr<_20d82c3aa_scopeChecker>& _75560_ssc) {
	jule::Ptr<_20d825848_Scope> _75617_s = _20d831ca5_getChild(_self_.ptr());;
	_20d83216d_checkChildSsc(_self_, _75537_tree,_75617_s,_75560_ssc);
	return _75617_s;;
}



inline jule::Ptr<_20d825848_Scope> _20d832833_checkChild(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb99283_ScopeTree>& _76135_tree) {
	jule::Ptr<_20d82c3aa_scopeChecker> _76217_ssc = _20d83c420_newChildChecker(_self_);;
	return _20d832525_checkChildSc(_self_, _76135_tree,_76217_ssc);;
}



inline void _20d832aa8_checkAnonScope(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb99283_ScopeTree> _76638_tree) {
	jule::Ptr<_20d825848_Scope> _76717_s = _20d832833_checkChild(_self_, _76638_tree);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_76717_s));;
}



inline void _20d832dc7_processErrorCall(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20d812e51_BuiltinErrorCallExprModel>& _77141_m, jule::Ptr<_20b4e5581_Token> _77172_err) {
	if (_20d83028c_isDeferred(_self_)) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _77172_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d82c3aa_scopeChecker> _77617_root = _20d830501_getRoot(_self_);;
	if ((!(_77617_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _77172_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_20d85017a_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77141_m.get()._field_Func=_77617_root.get()._field_owner;
}



inline void _20d83314c_checkExpr(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb8d81b_Expr> _78433_expr) {
	jule::Ptr<_20d8b440e_Eval> _78517_eval = _20d856747_eval(_self_.get()._field_s, jule::Trait<_20d90e536_Lookup>(_self_, 0));;
	_78517_eval.get()._field_ignored=true;
	jule::Ptr<_20d8b2891_Data> _78717_d = _20d8ced31_evalExpr(_78517_eval, _78433_expr);;
	if ((_78717_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78717_d.get()._field_Model };
		
		if (_match_expr.type_is_ptr<_20d812e51_BuiltinErrorCallExprModel>()) {
			_case_begin_1c887d1aa:;
			{
				jule::Ptr<_20d812e51_BuiltinErrorCallExprModel> _79421_m = _78717_d.get()._field_Model.operator jule::Ptr<_20d812e51_BuiltinErrorCallExprModel>();;
				_20d832dc7_processErrorCall(_self_, _79421_m,_78433_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78717_d));;
			}
		}
		else if (_match_expr.type_is_ptr<_20d8138e1_BackendEmitExprModel>() || _match_expr.type_is_ptr<_20d81222a_BuiltinAppendCallExprModel>() || _match_expr.type_is_ptr<_20d81178a_BuiltinCloneCallExprModel>() || _match_expr.type_is_ptr<_20d8113b1_BuiltinOutCallExprModel>() || _match_expr.type_is_ptr<_20d81159d_BuiltinOutlnCallExprModel>() || _match_expr.type_is_ptr<_20d811b64_BuiltinPanicCallExprModel>() || _match_expr.type_is_ptr<_20d811d51_BuiltinAssertCallExprModel>() || _match_expr.type_is_ptr<_20d812c64_BuiltinCopyCallExprModel>() || _match_expr.type_is_ptr<_20d810503_BuiltinDeleteCallExprModel>() || _match_expr.type_is_ptr<_20d813acd_FreeExprModel>() || _match_expr.type_is_ptr<_20d80e49c_FnCallExprModel>()) {
			_case_begin_1c887d3db:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78717_d));;
			}
		}
		else {
			_case_begin_1c887d375:;
			{
				_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _78433_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c887d320:;
	};
}



inline jule::Ptr<_20d825c44_If> _20d83345a_checkIf(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb9e5b8_If> _81431_i) {
	jule::Ptr<_20d825848_Scope> _81517_s = _20d832833_checkChild(_self_, _81431_i.get()._field_Scope);;
	jule::Ptr<_20d8b2891_Data> _81717_d = _20d8ced31_evalExpr(_20d856747_eval(_self_.get()._field_s, jule::Trait<_20d90e536_Lookup>(_self_, 0)), _81431_i.get()._field_Expr);;
	if ((_81717_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20d8e83cc_Prim> _82217_prim = _20d8e5a17_Prim(_81717_d.get()._field_Kind.ptr());;
	if (((_82217_prim == nullptr) || (!(_20d8eb39c_IsBool(_82217_prim.ptr()))))) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _81431_i.get()._field_Expr.get()._field_Token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_20d825c44_If>(_20d825c44_If{._field_Expr=_81717_d.get()._field_Model, ._field_Scope=_81517_s});;
}



inline jule::Ptr<_20d826030_Else> _20d833768_checkElse(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb9e970_Else> _83433_e) {
	return jule::new_ptr<_20d826030_Else>(_20d826030_Else{._field_Scope=_20d832833_checkChild(_self_, _83433_e.get()._field_Scope)});;
}



inline void _20d8339dd_checkConditional(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb9ede3_Conditional> _84040_conditional) {
	jule::Ptr<_20d8263a4_Conditional> _84117_c = jule::new_ptr<_20d8263a4_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_84117_c));;
	_84117_c.get()._field_Elifs=jule::Slice<jule::Ptr<_20d825c44_If>>::alloc(0LL, (_84040_conditional.get()._field_Tail.len() + 1LL));
	_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_20d83345a_checkIf(_self_, _84040_conditional.get()._field_Head));;
	{
		auto &expr = _84040_conditional.get()._field_Tail;
		auto it = expr.begin();
		_iter_begin_1c8886526:;
		if (it != expr.end()) {
			jule::Ptr<_20cb9e5b8_If> _84721_elif = *it;
			{
				_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_20d83345a_checkIf(_self_, _84721_elif));;
			}
			_iter_next_1c8886526:;
			++it;
			goto _iter_begin_1c8886526;
		}
		_iter_end_1c8886526:;
	};
	if ((_84040_conditional.get()._field_Default != nullptr)) {
		_84117_c.get()._field_Default=_20d833768_checkElse(_self_, _84040_conditional.get()._field_Default);
	};
}



inline void _20d833e50_checkIterScopeSsc(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Uintptr _85637_it, jule::Ptr<_20cb99283_ScopeTree> _85654_tree, jule::Ptr<_20d825848_Scope>& _85677_s, jule::Ptr<_20d82c3aa_scopeChecker> _85692_ssc) {
	_85692_ssc.get()._field_it=_85637_it;
	_20d83216d_checkChildSsc(_self_, _85654_tree,_85677_s,_85692_ssc);
}



inline jule::Ptr<_20d825848_Scope> _20d8343a1_checkIterScopeSc(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Uintptr _86136_it, jule::Ptr<_20cb99283_ScopeTree> _86153_tree, jule::Ptr<_20d82c3aa_scopeChecker> _86175_ssc) {
	jule::Ptr<_20d825848_Scope> _86217_scope = _20d831ca5_getChild(_self_.ptr());;
	_20d833e50_checkIterScopeSsc(_self_, _86136_it,_86153_tree,_86217_scope,_86175_ssc);
	return _86217_scope;;
}



inline jule::Ptr<_20d825848_Scope> _20d834758_checkIterScope(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Uintptr _86734_it, jule::Ptr<_20cb99283_ScopeTree>& _86752_tree) {
	jule::Ptr<_20d82c3aa_scopeChecker> _86817_ssc = _20d83c420_newChildChecker(_self_);;
	return _20d8343a1_checkIterScopeSc(_self_, _86734_it,_86752_tree,_86817_ssc);;
}



inline void _20d8349cd_checkInfIter(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb9c770_Iter>& _87237_it) {
	jule::Ptr<_20d826690_InfIter> _87317_kind = jule::new_ptr<_20d826690_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_87317_kind));;
	_87317_kind.get()._field_Scope=_20d834758_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87317_kind)),_87237_it.get()._field_Scope);
}



inline void _20d834c53_checkWhileIter(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb9c770_Iter>& _87839_it) {
	jule::Ptr<_20cb9d045_WhileKind> _87917_wh = _87839_it.get()._field_Kind.operator jule::Ptr<_20cb9d045_WhileKind>();;
	if (((_87917_wh.get()._field_Expr == nullptr) && (_87917_wh.get()._field_Next == nullptr))) {
		_20d8349cd_checkInfIter(_self_, _87839_it);
		return;;
	};
	jule::Ptr<_20d826b13_WhileIter> _88517_kind = jule::new_ptr<_20d826b13_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_88517_kind));;
	_88517_kind.get()._field_Scope=_20d834758_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_88517_kind)),_87839_it.get()._field_Scope);
	if ((_87917_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_20d8b2891_Data> _89021_d = _20d8ced31_evalExpr(_20d856747_eval(_self_.get()._field_s, jule::Trait<_20d90e536_Lookup>(_self_, 0)), _87917_wh.get()._field_Expr);;
		if ((_89021_d == nullptr)) {
			return;;
		};
		jule::Ptr<_20d8e83cc_Prim> _89517_prim = _20d8e5a17_Prim(_89021_d.get()._field_Kind.ptr());;
		if ((_89517_prim == nullptr)) {
			_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _87839_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_20d8eb39c_IsBool(_89517_prim.ptr())))) {
			_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _87839_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_88517_kind.get()._field_Expr=_89021_d.get()._field_Model;
	};
	if (_20cb9d397_IsWhileNext(_87917_wh.ptr())) {
		if ((!(_20d824d75_isValidAstStForNextSt(_87917_wh.get()._field_Next)))) {
			_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _91517_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_20d83ae57_checkNode(_self_, _87917_wh.get()._field_Next);
		if ((_91517_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91825_st = _self_.get()._field_scope.get()._field_Stmts[_91517_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL,_91517_n);
			if ((!(_20d82511c_isValidStForNextSt(_91825_st)))) {
				_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_88517_kind.get()._field_Next=_91825_st;
		};
	};
}



inline void _20d834ec8_checkRangeIter(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb9c770_Iter>& _92839_it) {
	jule::Ptr<_20cb9d8d6_RangeKind> _92917_rang = _92839_it.get()._field_Kind.operator jule::Ptr<_20cb9d8d6_RangeKind>();;
	jule::Ptr<_20d8b2891_Data> _93117_d = _20d8ced31_evalExpr(_20d856747_eval(_self_.get()._field_s, jule::Trait<_20d90e536_Lookup>(_self_, 0)), _92917_rang.get()._field_Expr);;
	if ((_93117_d == nullptr)) {
		return;;
	};
	jule::Ptr<_20d8274e8_RangeIter> _93617_kind = jule::new_ptr<_20d8274e8_RangeIter>(_20d8274e8_RangeIter{._field_Expr=_93117_d, });;
	_20d8a8b1d_rangeChecker _94017_rc = _20d8a8b1d_rangeChecker{._field_sc=_self_, ._field_rang=_92917_rang, ._field_Kind=_93617_kind, ._field_d=_93117_d};;
	jule::Bool _94613_ok = _20d8aa4d2_check(&_94017_rc);;
	if ((!(_94613_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_93617_kind));;
	jule::Ptr<_20d82c3aa_scopeChecker> _95317_ssc = _20d83c420_newChildChecker(_self_);;
	jule::Ptr<_20d825848_Scope> _95417_scope = _20d831ca5_getChild(_self_.ptr());;
	if ((_93617_kind.get()._field_KeyA != nullptr)) {
		if (((!(_20d84e71d_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _20d831546_isDuplicatedIdent(_self_.ptr(), 0LLU,_93617_kind.get()._field_KeyA.get()._field_Ident))) {
			_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyA.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyA.get()._field_Ident)}));
			_20d85017a_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyA.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyA);;
	};
	if ((_93617_kind.get()._field_KeyB != nullptr)) {
		if (((!(_20d84e71d_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _20d831546_isDuplicatedIdent(_self_.ptr(), 0LLU,_93617_kind.get()._field_KeyB.get()._field_Ident))) {
			_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyB.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyB.get()._field_Ident)}));
			_20d85017a_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyB.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyB);;
	};
	_20d833e50_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_93617_kind)),_92839_it.get()._field_Scope,_95417_scope,_95317_ssc);
	_93617_kind.get()._field_Scope=_95417_scope;
}



inline void _20d83524d_checkIter(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb9c770_Iter> _97833_it) {
	if (_20cb9cac2_IsInf(_97833_it.ptr())) {
		_20d8349cd_checkInfIter(_self_, _97833_it);
		return;;
	};
	{
		auto &_match_expr{ _97833_it.get()._field_Kind };
		
		if (_match_expr.type_is_ptr<_20cb9d045_WhileKind>()) {
			_case_begin_1c88a3e28:;
			{
				_20d834c53_checkWhileIter(_self_, _97833_it);
			}
		}
		else if (_match_expr.type_is_ptr<_20cb9d8d6_RangeKind>()) {
			_case_begin_1c88a3378:;
			{
				_20d834ec8_checkRangeIter(_self_, _97833_it);
			}
		}
		else {
			_case_begin_1c88a3213:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1c88a319c:;
	};
}



inline jule::Bool _20d83555b_checkValidContLabel(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Uintptr _99439_it) {
	jule::Ptr<_20d82c3aa_scopeChecker> _99517_scope = _self_;;
	_julec_label_iter:;
	if ((_99517_scope.get()._field_it == _99439_it)) {
		return true;;
	};
	if ((_99517_scope.get()._field_parent != nullptr)) {
		_99517_scope=_99517_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _20d835869_checkValidBreakLabel(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Uintptr _101040_ptr) {
	jule::Ptr<_20d82c3aa_scopeChecker> _101117_scope = _self_;;
	_julec_label_iter:;
	if ((_101117_scope.get()._field_it == _101040_ptr)) {
		return true;;
	};
	if ((_101117_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _101917_mtch = static_cast<jule::Uintptr>(((_20d82a0de_Case*)(_101117_scope.get()._field_cse))->_field_Owner);;
		if ((_101917_mtch == _101040_ptr)) {
			return true;;
		};
	};
	if ((_101117_scope.get()._field_parent != nullptr)) {
		_101117_scope=_101117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_20d8278e4_ContSt> _20d835b77_checkContValidScope(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb9e145_ContSt> _103339_c) {
	if (_20d83028c_isDeferred(_self_)) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_103339_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_20d8278e4_ContSt>();;
	};
	jule::Ptr<_20d82c3aa_scopeChecker> _104317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_104317_scope.get()._field_it == 0LLU) && (_104317_scope.get()._field_parent != nullptr)) && (_104317_scope.get()._field_owner == nullptr))) {
			_case_begin_1c88ab260:;
			{
				_104317_scope=_104317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_104317_scope.get()._field_it != 0LLU)) {
			_case_begin_1c88ab2d7:;
			{
				return jule::new_ptr<_20d8278e4_ContSt>(_20d8278e4_ContSt{._field_It=_104317_scope.get()._field_it});;
			}
		}
		_match_end_1c88ab1a5:;
	};
	_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _20d835dec_checkCont(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb9e145_ContSt> _105729_c) {
	jule::Ptr<_20d8278e4_ContSt> _105817_cont = _20d835b77_checkContValidScope(_self_, _105729_c);;
	if ((_105817_cont == nullptr)) {
		return;;
	};
	if ((_105729_c.get()._field_Label != nullptr)) {
		jule::Ptr<_20d82b123_scopeLabel> _106421_label = _20d82304e_findLabelParent(_105729_c.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
		if ((_106421_label == nullptr)) {
			_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		_106421_label.get()._field_used=true;
		if (((_106421_label.get()._field_pos + 1LL) >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		jule::I64 _107717_i = (_106421_label.get()._field_pos + 1LL);;
		if ((_107717_i >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _108125_st = _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_107717_i];;
			{
				auto &_match_expr{ _108125_st };
				
				if (_match_expr.type_is_ptr<_20d826690_InfIter>()) {
					_case_begin_1c88b3179:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.operator jule::Ptr<_20d826690_InfIter>()));
					}
				}
				else if (_match_expr.type_is_ptr<_20d8274e8_RangeIter>()) {
					_case_begin_1c88b4b09:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.operator jule::Ptr<_20d8274e8_RangeIter>()));
					}
				}
				else if (_match_expr.type_is_ptr<_20d826b13_WhileIter>()) {
					_case_begin_1c88b4b70:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.operator jule::Ptr<_20d826b13_WhileIter>()));
					}
				}
				else {
					_case_begin_1c88b4983:;
					{
						_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind)}));
					}
				}
				_match_end_1c88b491c:;
			};
		};
	};
	if ((_105817_cont.get()._field_It != 0LLU)) {
		if ((!(_20d83555b_checkValidContLabel(_self_, _105817_cont.get()._field_It)))) {
			_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_105817_cont));;
}



inline void _20d836172_checkLabel(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb9699a_LabelSt> _110434_l) {
	if ((_20d830a73_findLabel(_self_.ptr(), _110434_l.get()._field_Ident) != nullptr)) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _110434_l.get()._field_Token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_110434_l.get()._field_Ident)}));
		return;;
	};
	jule::Ptr<_20d828087_Label> _111017_label = jule::new_ptr<_20d828087_Label>(_20d828087_Label{._field_Ident=_110434_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_111017_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_20d82b123_scopeLabel>>::make({jule::new_ptr<_20d82b123_scopeLabel>(_20d82b123_scopeLabel{._field_token=_110434_l.get()._field_Token, ._field_label=_111017_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _20d8363e7_pushGoto(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb96d52_GotoSt> _112332_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_20d828373_GotoSt>(_20d828373_GotoSt{._field_Ident=_112332_gt.get()._field_Label.get()._field_Kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_20d82b596_scopeGoto>>::make({jule::new_ptr<_20d82b596_scopeGoto>(_20d82b596_scopeGoto{._field_gt=_112332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _20d83666c_checkPostfix(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb97c87_AssignSt> _113536_a) {
	if ((_113536_a.get()._field_Left.len() > 1LL)) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20cb8d81b_Expr> _114117_expr = _113536_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_20d8b2891_Data> _114217_d = _20d8ced31_evalExpr(_20d856747_eval(_self_.get()._field_s, jule::Trait<_20d90e536_Lookup>(_self_, 0)), _114117_expr);;
	if ((_114217_d == nullptr)) {
		return;;
	};
	_20d824acd_checkAssign(_self_.get()._field_s,_114217_d,nullptr,_113536_a.get()._field_Setter);
	if ((_20d8e5ee0_Ptr(_114217_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20d9001c5_Ptr> _115021_ptr = _20d8e5ee0_Ptr(_114217_d.get()._field_Kind.ptr());;
		if (_20d900b98_IsUnsafe(_115021_ptr.ptr())) {
			_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind),jule::Any(_20d8e3a7b_Str(_114217_d.get()._field_Kind.ptr()))}));
			return;;
		};
	} else {
		if (((_20d8e5a17_Prim(_114217_d.get()._field_Kind.ptr()) == nullptr) || (!(_20d80a047_IsNum(_20d8e5a17_Prim(_114217_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind),jule::Any(_20d8e3a7b_Str(_114217_d.get()._field_Kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_20d82872a_Postfix>(_20d82872a_Postfix{._field_Expr=_114217_d.get()._field_Model, ._field_Op=_113536_a.get()._field_Setter.get()._field_Kind})));;
}



inline jule::Bool _20d83697a_isNewAssignIdent(_20d82c3aa_scopeChecker* _self_, jule::Str _116835_ident) {
	if ((_20b4e7d25_IsIgnoreIdent(_116835_ident) || _116835_ident.empty())) {
		return false;;
	};
	return (_20d8b0b14_defByIdent((*_self_)._field_table.ptr(), _116835_ident,false) == nullptr);;
}



inline jule::Bool _20d836dcb_checkStructureAssignOp(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cba5db6_StructIns>& _117547_s, jule::Ptr<_20cb97c87_AssignSt>& _117567_a, jule::Ptr<_20d8b2891_Data>& _117586_r) {
	jule::Ptr<_20d814749_FnIns> _117817_overload = nullptr;;
	{
		auto &_match_expr{ _117567_a.get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1c88c6e6d:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1c88c836a:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1c88c83d1:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1c88c8447:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1c88c7424:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1c88c748a:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1c88c7501:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1c88c7567:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1c88c8634:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1c88c869a:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1c88c73ad:;
			{
				_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _117567_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117567_a.get()._field_Setter.get()._field_Kind),jule::Any(_20cb70842_Str(_117547_s.ptr()))}));
				return false;;
			}
		}
		_match_end_1c88c6ca3:;
	};
	if ((_117817_overload == nullptr)) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _117567_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117567_a.get()._field_Setter.get()._field_Kind),jule::Any(_20cb70842_Str(_117547_s.ptr()))}));
		return false;;
	};
	jule::Ptr<_20d81455c_ParamIns> _121017_p = _117817_overload.get()._field_Params[1LL];;
	return _20d856c42_checkAssignType(_self_.get()._field_s, _121017_p.get()._field_Decl.get()._field_Reference,_121017_p.get()._field_Kind,_117586_r,_117567_a.get()._field_Setter);;
}



inline void _20d837151_checkSingleAssign(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb97c87_AssignSt>& _121442_a) {
	jule::Ptr<_20d8b2891_Data> _121517_l = nullptr;;
	if ((!(_20b4e7d25_IsIgnoreIdent(_121442_a.get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_20cb8d81b_Expr> _121821_expr = _121442_a.get()._field_Left[0LL].get()._field_Expr;;
		_121517_l=_20d8ced31_evalExpr(_20d856747_eval(_self_.get()._field_s, jule::Trait<_20d90e536_Lookup>(_self_, 0)), _121821_expr);
		if ((_121517_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_20d8b440e_Eval> _122517_eval = nullptr;;
	if ((_121517_l != nullptr)) {
		_122517_eval=_20d856439_evalp(_self_.get()._field_s, jule::Trait<_20d90e536_Lookup>(_self_, 0),_121517_l.get()._field_Kind);
	} else {
		_122517_eval=_20d856747_eval(_self_.get()._field_s, jule::Trait<_20d90e536_Lookup>(_self_, 0));
	};
	_122517_eval.get()._field_unsafety=_20d82e874_isUnsafe(_self_);
	jule::Ptr<_20d8b2891_Data> _123217_r = _20d8ced31_evalExpr(_122517_eval, _121442_a.get()._field_Right);;
	if ((_123217_r == nullptr)) {
		return;;
	};
	if ((_121517_l == nullptr)) {
		if (_20d8e4829_Void(_123217_r.get()._field_Kind.ptr())) {
			_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _121442_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_123217_r));;
		return;;
	};
	if ((!(_20d824acd_checkAssign(_self_.get()._field_s,_121517_l,_123217_r,_121442_a.get()._field_Setter)))) {
		return;;
	};
	if ((_20d8e76a6_Tup(_123217_r.get()._field_Kind.ptr()) != nullptr)) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _121442_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20cbed66c_OperandExprModel> _125417_lm = jule::new_ptr<_20cbed66c_OperandExprModel>(_20cbed66c_OperandExprModel{._field_Kind=_121517_l.get()._field_Kind, ._field_Model=_121517_l.get()._field_Model});;
	jule::Ptr<_20cbed66c_OperandExprModel> _125817_rm = jule::new_ptr<_20cbed66c_OperandExprModel>(_20cbed66c_OperandExprModel{._field_Kind=_123217_r.get()._field_Kind, ._field_Model=_123217_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_20d828b9d_Assign>(_20d828b9d_Assign{._field_L=_125417_lm, ._field_R=_125817_rm, ._field_Op=_121442_a.get()._field_Setter})));;
	if ((_121442_a.get()._field_Setter.get()._field_Kind != jule::Str("=", 1))) {
		jule::Ptr<_20cba5db6_StructIns> _126521_strct = _20d8e6e69_Struct(_121517_l.get()._field_Kind.ptr());;
		if ((_126521_strct != nullptr)) {
			_20d836dcb_checkStructureAssignOp(_self_, _126521_strct,_121442_a,_123217_r);
			return;;
		};
		_121442_a.get()._field_Setter.get()._field_Kind=_121442_a.get()._field_Setter.get()._field_Kind.slice(0LL,(_121442_a.get()._field_Setter.get()._field_Kind.len() - 1LL));
		_20d8d2042_binaryEval _127221_solver = static__20d8d295a_new(_122517_eval,_121442_a.get()._field_Setter);;
		_123217_r=_20d8d77b7_solveExplicit(&_127221_solver, _121517_l,_123217_r);
		if ((_123217_r == nullptr)) {
			return;;
		};
		_121442_a.get()._field_Setter.get()._field_Kind+=jule::Str("=", 1);
		return;;
	};
	_20d89d41a_assignTypeChecker _128117_checker = _20d89d41a_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_121517_l.get()._field_Kind, ._field_d=_123217_r, ._field_errorToken=_121442_a.get()._field_Setter};;
	if (_20d89e592_check(&_128117_checker)) {
		_125817_rm.get()._field_Model=_123217_r.get()._field_Model;
		_125417_lm.get()._field_Model=_121517_l.get()._field_Model;
	};
}



inline void _20d83767e_processEndPartOfMultiAssign(_20d82c3aa_scopeChecker* _self_, jule::Ptr<_20d829055_MultiAssign>& _129351_st, jule::Ptr<_20cb97c87_AssignSt>& _129414_a, jule::Ptr<_20cb97748_AssignLeft>& _129433_lexpr, jule::Ptr<_20d8b2891_Data>& _129458_l, jule::Ptr<_20d8b2891_Data>& _129473_r) {
	if (_20b4e7d25_IsIgnoreIdent(_129433_lexpr.get()._field_Ident)) {
		if (_20d8e4829_Void(_129473_r.get()._field_Kind.ptr())) {
			_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _129414_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_129351_st.get()._field_L = jule::alloc_for_append(_129351_st.get()._field_L,1);_129351_st.get()._field_L.__push(nullptr);;
		return;;
	};
	if ((_129414_a.get()._field_Declarative && _20d83697a_isNewAssignIdent(&(*_self_), _129433_lexpr.get()._field_Ident))) {
		if (_20d831546_isDuplicatedIdent(&(*_self_), 0LLU,_129433_lexpr.get()._field_Ident)) {
			_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _129433_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129433_lexpr.get()._field_Ident)}));
			_20d85017a_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_20d82ecb4_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_20d869eb9_Var> _131221_v = jule::new_ptr<_20d869eb9_Var>(_20d869eb9_Var{._field_Scope=(*_self_)._field_scope, ._field_Token=_129433_lexpr.get()._field_Token, ._field_Ident=_129433_lexpr.get()._field_Ident, ._field_Mutable=_129433_lexpr.get()._field_Mutable, ._field_Reference=_129433_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_20d8b3919_Value>(_20d8b3919_Value{._field_Expr=_129414_a.get()._field_Right, ._field_Data=_129473_r}), });;
		_20d862643_checkVar((*_self_)._field_s, _131221_v);
		_131221_v.get()._field_Value=nullptr;
		_129351_st.get()._field_L = jule::alloc_for_append(_129351_st.get()._field_L,1);_129351_st.get()._field_L.__push(jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=_131221_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_131221_v.get()._field_Mutable, ._field_Reference=_131221_v.get()._field_Reference, ._field_Lvalue=(!(_131221_v.get()._field_Constant)), ._field_Model=static_cast<jule::Any>(_131221_v), }));;
		(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_131221_v);;
		(*_self_)._field_scope.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_Stmts,1);(*_self_)._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_131221_v));;
		return;;
	};
	if ((_129433_lexpr.get()._field_Mutable || _129433_lexpr.get()._field_Reference)) {
		_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _129433_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129433_lexpr.get()._field_Ident)}));
		_20d85017a_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_20d824acd_checkAssign((*_self_)._field_s,_129458_l,_129473_r,_129414_a.get()._field_Setter)))) {
		return;;
	};
	;
	_20d85997b_checkValidityForInitExpr((*_self_)._field_s, _129458_l.get()._field_Mutable,false,_129458_l.get()._field_Kind,_129473_r,_129414_a.get()._field_Setter);
	_20d89d41a_assignTypeChecker _135517_checker = _20d89d41a_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_129458_l.get()._field_Kind, ._field_d=_129473_r, ._field_errorToken=_129414_a.get()._field_Setter};;
	_20d89e592_check(&_135517_checker);
	_129351_st.get()._field_L = jule::alloc_for_append(_129351_st.get()._field_L,1);_129351_st.get()._field_L.__push(_129458_l);;
}



inline void _20d837915_checkMultiAssign(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb97c87_AssignSt>& _136541_a) {
	jule::Ptr<_20d8b2891_Data> _136617_rd = _20d8ced31_evalExpr(_20d856747_eval(_self_.get()._field_s, jule::Trait<_20d90e536_Lookup>(_self_, 0)), _136541_a.get()._field_Right);;
	if ((_136617_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_20d8b2891_Data>> _137017_right = _20d823d0d_getDatasFromTupleData(_136617_rd);;
	if ((_137017_right.len() == 1LL)) {
		{
			auto &_match_expr{ _137017_right[0LL].get()._field_Model };
			
			if (_match_expr.type_is_ptr<_20d80e876_IndexingExprModel>()) {
				_case_begin_1c88e8ce7:;
				{
					jule::Ptr<_20d80e876_IndexingExprModel> _137425_iem = _137017_right[0LL].get()._field_Model.operator jule::Ptr<_20d80e876_IndexingExprModel>();;
					if ((_20d8e7442_Map(_137425_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_137017_right=jule::Slice<jule::Ptr<_20d8b2891_Data>>::make({jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=_20d8e7442_Map(_137425_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), })});
					};
				}
			}
			_match_end_1c88e8c92:;
		};
	};
	{
		
		if ((_136541_a.get()._field_Left.len() > _137017_right.len())) {
			_case_begin_1c88e9127:;
			{
				_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _136541_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_136541_a.get()._field_Left.len() < _137017_right.len())) {
			_case_begin_1c88e918d:;
			{
				_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _136541_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c88e84de:;
	};
	jule::Ptr<_20d829055_MultiAssign> _139317_st = jule::new_ptr<_20d829055_MultiAssign>(_20d829055_MultiAssign{._field_R=_136617_rd.get()._field_Model});;
	{
		auto &expr = _136541_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_1c88ed44a:;
		if (it != expr.end()) {
			jule::I64 _139613_i = it - expr.begin();
			{
				jule::Ptr<_20cb97748_AssignLeft> _139721_lexpr = _136541_a.get()._field_Left[_139613_i];;
				jule::Ptr<_20d8b2891_Data> _139821_l = nullptr;;
				if (((!(_20b4e7d25_IsIgnoreIdent(_139721_lexpr.get()._field_Ident))) && ((!(_136541_a.get()._field_Declarative)) || (!(_20d83697a_isNewAssignIdent(_self_.ptr(), _139721_lexpr.get()._field_Ident)))))) {
					_139821_l=_20d8ced31_evalExpr(_20d856747_eval(_self_.get()._field_s, jule::Trait<_20d90e536_Lookup>(_self_, 0)), _139721_lexpr.get()._field_Expr);
					if ((_139821_l == nullptr)) {
						goto _iter_next_1c88ed44a;
					};
				};
				jule::Ptr<_20d8b2891_Data> _140621_r = _137017_right[_139613_i];;
				_20d83767e_processEndPartOfMultiAssign(_self_.ptr(), _139317_st,_136541_a,_139721_lexpr,_139821_l,_140621_r);
			}
			_iter_next_1c88ed44a:;
			++it;
			_139613_i++;
			goto _iter_begin_1c88ed44a;
		}
		_iter_end_1c88ed44a:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_139317_st));;
}



inline void _20d837b8a_checkAssignSt(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb97c87_AssignSt> _141237_a) {
	{
		
		if (_20b4e9dc1_IsPostfixOp(_141237_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1c89025c5:;
			{
				_20d83666c_checkPostfix(_self_, _141237_a);
			}
		}
		else if (((_141237_a.get()._field_Left.len() == 1LL) && (!(_141237_a.get()._field_Declarative)))) {
			_case_begin_1c8902a15:;
			{
				_20d837151_checkSingleAssign(_self_, _141237_a);
			}
		}
		else {
			_case_begin_1c8901c78:;
			{
				_20d837915_checkMultiAssign(_self_, _141237_a);
			}
		}
		_match_end_1c8901bac:;
	};
}



inline jule::Ptr<_20d825848_Scope> _20d838042_checkCaseScope(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20d82a0de_Case>& _142335_c, jule::Ptr<_20cb99283_ScopeTree>& _142350_tree) {
	jule::Ptr<_20d82c3aa_scopeChecker> _142417_ssc = _20d83c420_newChildChecker(_self_);;
	_142417_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_142335_c));
	return _20d832525_checkChildSc(_self_, _142350_tree,_142417_ssc);;
}



inline jule::Ptr<_20d82a0de_Case> _20d83853c_checkCase(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20d829594_Match> _142933_m, jule::I64 _142944_i, jule::Ptr<_20cba0a3c_Case> _142956_c, jule::Ptr<_20d8b2891_Data> _142975_expr) {
	jule::Ptr<_20d82a0de_Case> _143017_case = _142933_m.get()._field_Cases[_142944_i];;
	_143017_case.get()._field_Exprs=jule::Slice<jule::Ptr<_20d8b2891_Data>>::alloc(0LL, _142956_c.get()._field_Exprs.len());
	jule::Bool _143217_genericMatched = false;;
	jule::Ptr<_20d8b440e_Eval> _143317_eval = _20d856747_eval(_self_.get()._field_s, jule::Trait<_20d90e536_Lookup>(_self_, 0));;
	{
		auto &expr = _142956_c.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c8907487:;
		if (it != expr.end()) {
			jule::Ptr<_20cb8d81b_Expr> _143421_e = *it;
			{
				jule::Ptr<_20d8b2891_Data> _143521_d = _20d8ce715_evalExprKind(_143317_eval, _143421_e.get()._field_Kind);;
				if ((_143521_d == nullptr)) {
					goto _iter_next_1c8907487;
				};
				if (_142933_m.get()._field_TypeMatch) {
					_143017_case.get()._field_Exprs = jule::alloc_for_append(_143017_case.get()._field_Exprs,1);_143017_case.get()._field_Exprs.__push(_143521_d);;
					if ((_20d823a66_countMatchType(_142933_m,_143521_d.get()._field_Kind) > 1LL)) {
						_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _143421_e.get()._field_Token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_143521_d.get()._field_Kind.ptr()))}));
					};
					if (_142975_expr.get()._field_Kind.get()._field_Generic) {
						_143217_genericMatched=(_143217_genericMatched || _20d8e3d89_Equals(_142975_expr.get()._field_Kind, _143521_d.get()._field_Kind));
					} else {
						if ((_20d8e64b8_TypeEnum(_142975_expr.get()._field_Kind.ptr()) != nullptr)) {
							_20d857193_checkTypeCompatibility(_self_.get()._field_s, _142975_expr.get()._field_Kind,_143521_d.get()._field_Kind,_143421_e.get()._field_Token);
						} else {
							jule::Ptr<_20d81a3ed_Trait> _145029_trt = _20d8e71cd_Trait(_142975_expr.get()._field_Kind.ptr());;
							if ((_145029_trt != nullptr)) {
								_20d857193_checkTypeCompatibility(_self_.get()._field_s, _142975_expr.get()._field_Kind,_143521_d.get()._field_Kind,_143421_e.get()._field_Token);
							};
						};
					};
					goto _iter_next_1c8907487;
				};
				if (_143521_d.get()._field_Decl) {
					_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _143421_e.get()._field_Token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_20d85017a_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1c8907487;
				};
				_143017_case.get()._field_Exprs = jule::alloc_for_append(_143017_case.get()._field_Exprs,1);_143017_case.get()._field_Exprs.__push(_143521_d);;
				_20d89d41a_assignTypeChecker _146821_checker = _20d89d41a_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_142975_expr.get()._field_Kind, ._field_d=_143521_d, ._field_errorToken=_143421_e.get()._field_Token};;
				_20d89e592_check(&_146821_checker);
			}
			_iter_next_1c8907487:;
			++it;
			goto _iter_begin_1c8907487;
		}
		_iter_end_1c8907487:;
	};
	if ((((!(_142933_m.get()._field_TypeMatch)) || (!(_142975_expr.get()._field_Kind.get()._field_Generic))) || _143217_genericMatched)) {
		_143017_case.get()._field_Scope=_20d838042_checkCaseScope(_self_, _143017_case,_142956_c.get()._field_Scope);
	};
	return _143017_case;;
}



inline void _20d838905_checkCases(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cba1213_MatchCase>& _148235_m, jule::Ptr<_20d829594_Match> _148254_rm, jule::Ptr<_20d8b2891_Data> _148270_expr) {
	_148254_rm.get()._field_Cases=jule::Slice<jule::Ptr<_20d82a0de_Case>>::alloc(0LL, _148235_m.get()._field_Cases.len());
	{
		auto &expr = _148235_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c891135e:;
		if (it != expr.end()) {
			jule::I64 _148413_i = it - expr.begin();
			{
				jule::Ptr<_20d82a0de_Case> _148521_case = jule::new_ptr<_20d82a0de_Case>(_20d82a0de_Case{._field_Owner=_148254_rm, });;
				if ((_148413_i > 0LL)) {
					_148254_rm.get()._field_Cases[(_148413_i - 1LL)].get()._field_Next=_148521_case;
				};
				_148254_rm.get()._field_Cases = jule::alloc_for_append(_148254_rm.get()._field_Cases,1);_148254_rm.get()._field_Cases.__push(_148521_case);;
			}
			_iter_next_1c891135e:;
			++it;
			_148413_i++;
			goto _iter_begin_1c891135e;
		}
		_iter_end_1c891135e:;
	};
	if (((_148254_rm.get()._field_Default != nullptr) && (_148235_m.get()._field_Cases.len() > 0LL))) {
		_148254_rm.get()._field_Cases[(_148254_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_148254_rm.get()._field_Default;
	};
	{
		auto &expr = _148235_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c8913edd:;
		if (it != expr.end()) {
			jule::I64 _149814_i = it - expr.begin();
			jule::Ptr<_20cba0a3c_Case> _149821_c = *it;
			{
				_20d83853c_checkCase(_self_, _148254_rm,_149814_i,_149821_c,_148270_expr);
			}
			_iter_next_1c8913edd:;
			++it;
			_149814_i++;
			goto _iter_begin_1c8913edd;
		}
		_iter_end_1c8913edd:;
	};
}



inline jule::Ptr<_20d82a0de_Case> _20d838cac_checkDefault(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20d829594_Match> _150336_m, jule::Ptr<_20cb9e970_Else> _150351_d) {
	jule::Ptr<_20d82a0de_Case> _150417_def = jule::new_ptr<_20d82a0de_Case>(_20d82a0de_Case{._field_Owner=_150336_m, });;
	_150417_def.get()._field_Scope=_20d838042_checkCaseScope(_self_, _150417_def,_150351_d.get()._field_Scope);
	return _150417_def;;
}



inline void _20d839032_checkComptimePanic(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20d825848_Scope>& _151139_s) {
	if ((_151139_s.get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _151613_stmt = _151139_s.get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _151613_stmt };
		
		if (_match_expr.type_is_ptr<_20d8b2891_Data>()) {
			_case_begin_1c8917233:;
			{
				jule::Ptr<_20d8b2891_Data> _151917_d = _151613_stmt.operator jule::Ptr<_20d8b2891_Data>();;
				{
					auto &_match_expr{ _151917_d.get()._field_Model };
					
					if (_match_expr.type_is_ptr<_20d811b64_BuiltinPanicCallExprModel>()) {
						_case_begin_1c8918025:;
						{
							jule::Ptr<_20d811b64_BuiltinPanicCallExprModel> _152221_m = _151917_d.get()._field_Model.operator jule::Ptr<_20d811b64_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _152221_m.get()._field_Expr };
								
								if (_match_expr.type_is_ptr<_20cc572ec_Const>()) {
									_case_begin_1c8918ec1:;
									{
										jule::Ptr<_20cc572ec_Const> _152525_c = _152221_m.get()._field_Expr.operator jule::Ptr<_20cc572ec_Const>();;
										if (_20d80bc3b_IsStr(_152525_c.ptr())) {
											jule::Ptr<_20d82c3aa_scopeChecker> _152733_root = _20d830765_getHardRoot(_self_);;
											_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _152733_root.get()._field_calledFrom,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_20d80aa4d_ReadStr(_152525_c.ptr()))}));
										};
									}
								}
								_match_end_1c8918cb2:;
							};
						}
					}
					_match_end_1c8917b18:;
				};
			}
		}
		_match_end_1c89171cd:;
	};
}



inline void _20d839351_pushTypeMatch(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20d829594_Match> _153537_tm, jule::Ptr<_20cba1213_MatchCase>& _153554_m) {
	if (_153537_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto &expr = _153537_tm.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1c8918454:;
			if (it != expr.end()) {
				jule::Ptr<_20d82a0de_Case> _153925_c = *it;
				{
					if ((_153925_c.get()._field_Scope != nullptr)) {
						_20d839032_checkComptimePanic(_self_, _153925_c.get()._field_Scope);
						_153537_tm.get()._field_Default=_153925_c;
						_153537_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1c8918454:;
				++it;
				goto _iter_begin_1c8918454;
			}
			_iter_end_1c8918454:;
		};
		if ((_153554_m.get()._field_Default != nullptr)) {
			_153537_tm.get()._field_Cases=nullptr;
			_153537_tm.get()._field_Default=_20d838cac_checkDefault(_self_, _153537_tm,_153554_m.get()._field_Default);
			if ((_153537_tm.get()._field_Default != nullptr)) {
				_20d839032_checkComptimePanic(_self_, _153537_tm.get()._field_Default.get()._field_Scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_153537_tm));;
}



inline void _20d8395c6_checkTypeMatch(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cba1213_MatchCase>& _155939_m) {
	jule::Ptr<_20d8b2891_Data> _156017_d = _20d8cea23_eval(_20d856747_eval(_self_.get()._field_s, jule::Trait<_20d90e536_Lookup>(_self_, 0)), _155939_m.get()._field_Expr);;
	if ((_156017_d == nullptr)) {
		return;;
	};
	if (((!(_156017_d.get()._field_Kind.get()._field_Generic)) && (!(((((_20d8e5a17_Prim(_156017_d.get()._field_Kind.ptr()) != nullptr) && _20d8eb875_IsAny(_20d8e5a17_Prim(_156017_d.get()._field_Kind.ptr()).ptr())) || (_20d8e71cd_Trait(_156017_d.get()._field_Kind.ptr()) != nullptr)) || (_20d8e64b8_TypeEnum(_156017_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _155939_m.get()._field_Expr.get()._field_Token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20d829594_Match> _157117_tm = jule::new_ptr<_20d829594_Match>(_20d829594_Match{._field_Expr=_156017_d, ._field_TypeMatch=true, });;
	if (((!(_157117_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && (_155939_m.get()._field_Default != nullptr))) {
		_157117_tm.get()._field_Default=_20d838cac_checkDefault(_self_, _157117_tm,_155939_m.get()._field_Default);
	};
	_20d838905_checkCases(_self_, _155939_m,_157117_tm,_156017_d);
	_20d839351_pushTypeMatch(_self_, _157117_tm,_155939_m);
}



inline void _20d83984b_checkCommonMatch(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cba1213_MatchCase>& _158441_m) {
	jule::Ptr<_20d8b2891_Data> _158517_d = nullptr;;
	if ((_158441_m.get()._field_Expr == nullptr)) {
		_158517_d=jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__20ccb8979_NewBool(true)});
		_158517_d.get()._field_Model=static_cast<jule::Any>(_158517_d.get()._field_Constant);
	} else {
		_158517_d=_20d8ced31_evalExpr(_20d856747_eval(_self_.get()._field_s, jule::Trait<_20d90e536_Lookup>(_self_, 0)), _158441_m.get()._field_Expr);
		if ((_158517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_20d829594_Match> _159917_mc = jule::new_ptr<_20d829594_Match>(_20d829594_Match{._field_Expr=_158517_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_159917_mc));;
	if ((_158441_m.get()._field_Default != nullptr)) {
		_159917_mc.get()._field_Default=_20d838cac_checkDefault(_self_, _159917_mc,_158441_m.get()._field_Default);
	};
	_20d838905_checkCases(_self_, _158441_m,_159917_mc,_158517_d);
}



inline void _20d839ac1_checkMatch(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cba1213_MatchCase> _161134_m) {
	if (_161134_m.get()._field_TypeMatch) {
		_20d8395c6_checkTypeMatch(_self_, _161134_m);
		return;;
	};
	_20d83984b_checkCommonMatch(_self_, _161134_m);
}



inline void _20d839d46_checkFall(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb9713d_FallSt> _161929_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _20d83028c_isDeferred(_self_))) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _161929_f.get()._field_Token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_20d82a0de_Case* _162717_case = ((_20d82a0de_Case*)(_self_.get()._field_cse));;
	if ((_162717_case->_field_Next == nullptr)) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _161929_f.get()._field_Token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_20d85017a_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_20d82a694_FallSt>(_20d82a694_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_162717_case->_field_Next))})));;
}



inline jule::Ptr<_20d827c9b_BreakSt> _20d83a154_checkBreakWithLabel(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb9dc8d_BreakSt> _163939_b) {
	jule::Ptr<_20d827c9b_BreakSt> _164017_brk = _20d83a462_checkPlainBreak(_self_, _163939_b);;
	if ((_164017_brk == nullptr)) {
		return nullptr;;
	};
	_164017_brk.get()._field_It=0LLU;
	_164017_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_20d82b123_scopeLabel> _165017_label = _20d82304e_findLabelParent(_163939_b.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
	if ((_165017_label == nullptr)) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;;
	};
	_165017_label.get()._field_used=true;
	if (((_165017_label.get()._field_pos + 1LL) >= _165017_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;;
	};
	jule::I64 _166313_i = (_165017_label.get()._field_pos + 1LL);;
	if ((_166313_i >= _165017_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind)}));
	} else {
		jule::Any _166721_st = _165017_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_166313_i];;
		{
			auto &_match_expr{ _166721_st };
			
			if (_match_expr.type_is_ptr<_20d826690_InfIter>()) {
				_case_begin_1c8938a18:;
				{
					_164017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.operator jule::Ptr<_20d826690_InfIter>()));
				}
			}
			else if (_match_expr.type_is_ptr<_20d8274e8_RangeIter>()) {
				_case_begin_1c893a740:;
				{
					_164017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.operator jule::Ptr<_20d8274e8_RangeIter>()));
				}
			}
			else if (_match_expr.type_is_ptr<_20d826b13_WhileIter>()) {
				_case_begin_1c893a7a6:;
				{
					_164017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.operator jule::Ptr<_20d826b13_WhileIter>()));
				}
			}
			else if (_match_expr.type_is_ptr<_20d829594_Match>()) {
				_case_begin_1c893a81c:;
				{
					_164017_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.operator jule::Ptr<_20d829594_Match>()));
				}
			}
			else {
				_case_begin_1c893a5b9:;
				{
					_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind)}));
				}
			}
			_match_end_1c893a553:;
		};
	};
	if ((_164017_brk.get()._field_It != 0LLU)) {
		if ((!(_20d835869_checkValidBreakLabel(_self_, _164017_brk.get()._field_It)))) {
			_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	if ((_164017_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_20d835869_checkValidBreakLabel(_self_, _164017_brk.get()._field_Mtch)))) {
			_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	return _164017_brk;;
}



inline jule::Ptr<_20d827c9b_BreakSt> _20d83a462_checkPlainBreak(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb9dc8d_BreakSt> _169735_b) {
	if (_20d83028c_isDeferred(_self_)) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _169735_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d82c3aa_scopeChecker> _170317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_170317_scope.get()._field_it == 0LLU) && (_170317_scope.get()._field_cse == 0LLU)) && (_170317_scope.get()._field_parent != nullptr)) && (_170317_scope.get()._field_owner == nullptr))) {
			_case_begin_1c8941a21:;
			{
				_170317_scope=_170317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_170317_scope.get()._field_it != 0LLU)) {
			_case_begin_1c8941a98:;
			{
				return jule::new_ptr<_20d827c9b_BreakSt>(_20d827c9b_BreakSt{._field_It=_170317_scope.get()._field_it, });;
			}
		}
		else if ((_170317_scope.get()._field_cse != 0LLU)) {
			_case_begin_1c8941b20:;
			{
				return jule::new_ptr<_20d827c9b_BreakSt>(_20d827c9b_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_20d82a0de_Case*)(_170317_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_1c8941955:;
	};
	_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _169735_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _20d83a6d7_checkBreak(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb9dc8d_BreakSt> _171930_b) {
	if ((_171930_b.get()._field_Label != nullptr)) {
		jule::Ptr<_20d827c9b_BreakSt> _172121_brk = _20d83a154_checkBreakWithLabel(_self_, _171930_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_172121_brk));;
		return;;
	};
	jule::Ptr<_20d827c9b_BreakSt> _172617_brk = _20d83a462_checkPlainBreak(_self_, _171930_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_172617_brk));;
}



inline void _20d83a95c_checkRet(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb9c110_RetSt> _173032_r) {
	if (_20d83028c_isDeferred(_self_)) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _173032_r.get()._field_Token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d82aa18_RetSt> _173517_rt = jule::new_ptr<_20d82aa18_RetSt>(_20d82aa18_RetSt{._field_Func=_20d830501_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_173517_rt));;
	jule::Ptr<_20d8aaba8_retTypeChecker> _174017_rtc = jule::new_ptr<_20d8aaba8_retTypeChecker>(_20d8aaba8_retTypeChecker{._field_sc=_self_, ._field_f=_173517_rt.get()._field_Func, ._field_errorToken=_173032_r.get()._field_Token, });;
	jule::Bool _174513_ok = _20d8ab8ac_check(_174017_rtc.ptr(), _173032_r.get()._field_Expr);;
	if ((!(_174513_ok))) {
		return;;
	};
	if ((_173032_r.get()._field_Expr != nullptr)) {
		_173517_rt.get()._field_Expr=_174017_rtc.get()._field_model;
	};
}



inline void _20d83abd2_checkUseExpr(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb8e1ac_UseExpr> _175532_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _175532_ue.get()._field_Token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_20d83028c_isDeferred(_self_)) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _175532_ue.get()._field_Token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _175532_ue.get()._field_Token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _20d83ae57_checkNode(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Any& _177134_node) {
	{
		auto &_match_expr{ _177134_node };
		
		if (_match_expr.type_is_ptr<_20cb99283_ScopeTree>()) {
			_case_begin_1c894db82:;
			{
				_20d832aa8_checkAnonScope(_self_, _177134_node.operator jule::Ptr<_20cb99283_ScopeTree>());
			}
		}
		else if (_match_expr.type_is_ptr<_20cb9bc58_VarDecl>()) {
			_case_begin_1c894e07d:;
			{
				_20d8317bb_checkVarDecl(_self_, _177134_node.operator jule::Ptr<_20cb9bc58_VarDecl>());
			}
		}
		else if (_match_expr.type_is_ptr<_20cba05b9_TypeAliasDecl>()) {
			_case_begin_1c894e39c:;
			{
				_20d831a41_checkTypeAliasDecl(_self_, _177134_node.operator jule::Ptr<_20cba05b9_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8d81b_Expr>()) {
			_case_begin_1c894e413:;
			{
				_20d83314c_checkExpr(_self_, _177134_node.operator jule::Ptr<_20cb8d81b_Expr>());
			}
		}
		else if (_match_expr.type_is_ptr<_20cb9ede3_Conditional>()) {
			_case_begin_1c894e5bc:;
			{
				_20d8339dd_checkConditional(_self_, _177134_node.operator jule::Ptr<_20cb9ede3_Conditional>());
			}
		}
		else if (_match_expr.type_is_ptr<_20cb9c770_Iter>()) {
			_case_begin_1c894e633:;
			{
				_20d83524d_checkIter(_self_, _177134_node.operator jule::Ptr<_20cb9c770_Iter>());
			}
		}
		else if (_match_expr.type_is_ptr<_20cb9e145_ContSt>()) {
			_case_begin_1c894e699:;
			{
				_20d835dec_checkCont(_self_, _177134_node.operator jule::Ptr<_20cb9e145_ContSt>());
			}
		}
		else if (_match_expr.type_is_ptr<_20cb9699a_LabelSt>()) {
			_case_begin_1c894e710:;
			{
				_20d836172_checkLabel(_self_, _177134_node.operator jule::Ptr<_20cb9699a_LabelSt>());
			}
		}
		else if (_match_expr.type_is_ptr<_20cb96d52_GotoSt>()) {
			_case_begin_1c894e776:;
			{
				_20d8363e7_pushGoto(_self_, _177134_node.operator jule::Ptr<_20cb96d52_GotoSt>());
			}
		}
		else if (_match_expr.type_is_ptr<_20cb97c87_AssignSt>()) {
			_case_begin_1c894e7dc:;
			{
				_20d837b8a_checkAssignSt(_self_, _177134_node.operator jule::Ptr<_20cb97c87_AssignSt>());
			}
		}
		else if (_match_expr.type_is_ptr<_20cba1213_MatchCase>()) {
			_case_begin_1c894e853:;
			{
				_20d839ac1_checkMatch(_self_, _177134_node.operator jule::Ptr<_20cba1213_MatchCase>());
			}
		}
		else if (_match_expr.type_is_ptr<_20cb9713d_FallSt>()) {
			_case_begin_1c894e8b9:;
			{
				_20d839d46_checkFall(_self_, _177134_node.operator jule::Ptr<_20cb9713d_FallSt>());
			}
		}
		else if (_match_expr.type_is_ptr<_20cb9dc8d_BreakSt>()) {
			_case_begin_1c894e930:;
			{
				_20d83a6d7_checkBreak(_self_, _177134_node.operator jule::Ptr<_20cb9dc8d_BreakSt>());
			}
		}
		else if (_match_expr.type_is_ptr<_20cb9c110_RetSt>()) {
			_case_begin_1c894e996:;
			{
				_20d83a95c_checkRet(_self_, _177134_node.operator jule::Ptr<_20cb9c110_RetSt>());
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8e1ac_UseExpr>()) {
			_case_begin_1c894ea0c:;
			{
				_20d83abd2_checkUseExpr(_self_, _177134_node.operator jule::Ptr<_20cb8e1ac_UseExpr>());
			}
		}
		else {
			_case_begin_1c894dd08:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1c894dc2b:;
	};
}



inline void _20d83b133_checkResult(jule::Ptr<_20d82c3aa_scopeChecker> _self_) {
	_20cb98b78_Stmt _180917_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _180917_stmt._field_Data };
		
		if (_match_expr.type_is_ptr<_20cb8e1ac_UseExpr>()) {
			_case_begin_1c8958021:;
			{
				jule::Ptr<_20cb8e1ac_UseExpr> _181221_ue = _180917_stmt._field_Data.operator jule::Ptr<_20cb8e1ac_UseExpr>();;
				jule::Ptr<_20d8b2891_Data> _181321_d = _20d8ced31_evalExpr(_20d856747_eval(_self_.get()._field_s, jule::Trait<_20d90e536_Lookup>(_self_, 0)), _181221_ue.get()._field_Expr);;
				if ((_181321_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_181321_d));;
				jule::Ptr<_20d8aaba8_retTypeChecker> _181821_rtc = jule::new_ptr<_20d8aaba8_retTypeChecker>(_20d8aaba8_retTypeChecker{._field_sc=_self_, ._field_types=_20d814ccc_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_181221_ue.get()._field_Expr.get()._field_Token, });;
				_20d8ab8ac_check(_181821_rtc.ptr(), _181221_ue.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8d81b_Expr>()) {
			_case_begin_1c8957707:;
			{
				jule::Ptr<_20cb8d81b_Expr> _182521_expr = _180917_stmt._field_Data.operator jule::Ptr<_20cb8d81b_Expr>();;
				jule::Ptr<_20d8b2891_Data> _182621_d = _20d8ced31_evalExpr(_20d856747_eval(_self_.get()._field_s, jule::Trait<_20d90e536_Lookup>(_self_, 0)), _182521_expr);;
				if ((_182621_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _182621_d.get()._field_Model };
					
					if (_match_expr.type_is_ptr<_20d812e51_BuiltinErrorCallExprModel>()) {
						_case_begin_1c895c09c:;
						{
							jule::Ptr<_20d812e51_BuiltinErrorCallExprModel> _183225_m = _182621_d.get()._field_Model.operator jule::Ptr<_20d812e51_BuiltinErrorCallExprModel>();;
							_20d832dc7_processErrorCall(_self_, _183225_m,_182521_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_182621_d));;
						}
					}
					else {
						_case_begin_1c895c443:;
						{
							return;;
						}
					}
					_match_end_1c895c3dd:;
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20cb96d52_GotoSt>() || _match_expr.type_is_ptr<_20cb9dc8d_BreakSt>() || _match_expr.type_is_ptr<_20cb9e145_ContSt>() || _match_expr.type_is_ptr<_20cb9c110_RetSt>()) {
			_case_begin_1c895776d:;
			{
				_20d83ae57_checkNode(_self_, _180917_stmt._field_Data);
			}
		}
		else {
			_case_begin_1c8957691:;
			{
				_20d83ae57_checkNode(_self_, _180917_stmt._field_Data);
				return;;
			}
		}
		_match_end_1c8957509:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _20d83b30e_checkTree(jule::Ptr<_20d82c3aa_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _185417_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_185417_n)--;
	};
	for (; (_self_.get()._field_i < _185417_n); (_self_.get()._field_i)++) {
		{
			_20cb98b78_Stmt _186221_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_20d83ae57_checkNode(_self_, _186221_stmt._field_Data);
			if (_20d830028_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1c895ea94:;
	}
	_iter_end_1c895ea94:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_20d83b133_checkResult(_self_);
	};
}



inline void _20d83b62d_checkGoto(_20d82c3aa_scopeChecker* _self_, jule::Ptr<_20d82b596_scopeGoto>& _187333_gt, jule::Ptr<_20d82b123_scopeLabel>& _187354_label) {
	jule::Ptr<_20d82c3aa_scopeChecker> _187417_gtsc = _187333_gt.get()._field_scope;;
	while (((_187417_gtsc.get()._field_childIndex - 1LL) > _187354_label.get()._field_scope.get()._field_childIndex)) {
		{
			_187417_gtsc=_187417_gtsc.get()._field_parent;
		}
	_iter_next_1c8963922:;
	}
	_iter_end_1c8963922:;;
	jule::I64 _187917_n = 0LL;;
	if ((_187417_gtsc.get()._field_scope == _187354_label.get()._field_scope.get()._field_scope)) {
		if ((_187333_gt.get()._field_pos > _187354_label.get()._field_pos)) {
			return;;
		};
		_187917_n=_187333_gt.get()._field_pos;
	};
	jule::I64 _189217_i = (_187354_label.get()._field_pos - 1LL);;
	if ((_187917_n == 0LL)) {
		{
			auto &expr = _187354_label.get()._field_scope.get()._field_scope.get()._field_Stmts;
			auto it = expr.begin();
			_iter_begin_1c896602e:;
			if (it != expr.end()) {
				jule::I64 _189517_j = it - expr.begin();
				jule::Any _189520_stmt = *it;
				{
					if (_20d823725_stmtIsGotoScope(_189520_stmt,_187417_gtsc.get()._field_scope)) {
						_187917_n=_189517_j;
						goto _iter_end_1c896602e;
					};
				}
				_iter_next_1c896602e:;
				++it;
				_189517_j++;
				goto _iter_begin_1c896602e;
			}
			_iter_end_1c896602e:;
		};
	};
	for (; (_189217_i >= _187917_n); (_189217_i)--) {
		{
			jule::Any _190521_stmt = _187354_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_189217_i];;
			if (_20d8253b4_stmtIsDef(_190521_stmt)) {
				_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _187333_gt.get()._field_gt.get()._field_Token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_187333_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
				return;;
			};
		}
	_iter_next_1c8966e20:;
	}
	_iter_end_1c8966e20:;;
}



inline void _20d83b809_checkGotos(_20d82c3aa_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1c8967371:;
		if (it != expr.end()) {
			jule::Ptr<_20d82b596_scopeGoto> _191421_gt = *it;
			{
				jule::Ptr<_20d82b123_scopeLabel> _191521_label = _20d83118e_findLabelAll(&(*_self_), _191421_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_191521_label == nullptr)) {
					_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _191421_gt.get()._field_gt.get()._field_Token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_191421_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
					goto _iter_next_1c8967371;
				};
				_191521_label.get()._field_used=true;
				_20d83b62d_checkGoto(&(*_self_), _191421_gt,_191521_label);
			}
			_iter_next_1c8967371:;
			++it;
			goto _iter_begin_1c8967371;
		}
		_iter_end_1c8967371:;
	};
}



inline void _20d83b9d5_checkLabels(_20d82c3aa_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1c8969010:;
		if (it != expr.end()) {
			jule::Ptr<_20d82b123_scopeLabel> _192716_l = *it;
			{
				if ((!(_192716_l.get()._field_used))) {
					_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _192716_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_192716_l.get()._field_label.get()._field_Ident)}));
				};
			}
			_iter_next_1c8969010:;
			++it;
			goto _iter_begin_1c8969010;
		}
		_iter_end_1c8969010:;
	};
}



inline void _20d83bbb1_checkVars(_20d82c3aa_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1c896c80a:;
		if (it != expr.end()) {
			jule::Ptr<_20d869eb9_Var> _193516_v = *it;
			{
				if (((((!(_193516_v.get()._field_Used)) && (!(_20b4e7d25_IsIgnoreIdent(_193516_v.get()._field_Ident)))) && (!(_20b4e80bc_IsAnonIdent(_193516_v.get()._field_Ident)))) && (_193516_v.get()._field_Ident != jule::Str("self", 4)))) {
					_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _193516_v.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_193516_v.get()._field_Ident)}));
				};
			}
			_iter_next_1c896c80a:;
			++it;
			goto _iter_begin_1c896c80a;
		}
		_iter_end_1c896c80a:;
	};
}



inline void _20d83bd8c_checkAliases(_20d82c3aa_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1c896e785:;
		if (it != expr.end()) {
			jule::Ptr<_20d8e298c_TypeAlias> _194316_a = *it;
			{
				if ((((!(_194316_a.get()._field_Used)) && (!(_20b4e7d25_IsIgnoreIdent(_194316_a.get()._field_Ident)))) && (!(_20b4e80bc_IsAnonIdent(_194316_a.get()._field_Ident))))) {
					_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _194316_a.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_194316_a.get()._field_Ident)}));
				};
			}
			_iter_next_1c896e785:;
			++it;
			goto _iter_begin_1c896e785;
		}
		_iter_end_1c896e785:;
	};
}



inline void _20d83c1ab_check(jule::Ptr<_20d82c3aa_scopeChecker> _self_, jule::Ptr<_20cb99283_ScopeTree>& _195130_tree, jule::Ptr<_20d825848_Scope>& _195153_s) {
	_195153_s.get()._field_Deferred=_195130_tree.get()._field_Deferred;
	_195153_s.get()._field_Unsafety=_195130_tree.get()._field_Unsafety;
	jule::I64 _195513_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_195130_tree;
	_self_.get()._field_scope=_195153_s;
	_20d83b30e_checkTree(_self_);
	if ((_195513_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_20d83bbb1_checkVars(_self_.ptr());
		_20d83bd8c_checkAliases(_self_.ptr());
		if (_20d82ead8_isRoot(_self_.ptr())) {
			_20d83b809_checkGotos(_self_.ptr());
			_20d83b9d5_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_20d82c3aa_scopeChecker> _20d83c420_newChildChecker(jule::Ptr<_20d82c3aa_scopeChecker> _self_) {
	jule::Ptr<_20d82c3aa_scopeChecker> _197517_base = _20d822878_newScopeCheckerBase(_self_.get()._field_s,nullptr);;
	_197517_base.get()._field_parent=_self_;
	_197517_base.get()._field_labels=_self_.get()._field_labels;
	_197517_base.get()._field_gotos=_self_.get()._field_gotos;
	_197517_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _197517_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d82c3aa_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _20d83d410_checkCdef(_20d83cec0_directiveChecker* _self_, jule::Ptr<_20cb511e6_Directive>& _1629_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is_ptr<_20d814370_Fn>()) {
			_case_begin_1c8975b43:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_20d814370_Fn>().get()._field_CppLinked) {
					goto _match_end_1c8975d85;
				};
				goto _case_begin_1c8975dda;
			}
		}
		else {
			_case_begin_1c8975dda:;
			{
				_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1629_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1c8975d85:;
	};
	if ((_1629_d.get()._field_Args.len() > 0LL)) {
		_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _20d83d685_checkTypedef(_20d83cec0_directiveChecker* _self_, jule::Ptr<_20cb511e6_Directive>& _3232_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is_ptr<_20cba59dc_Struct>()) {
			_case_begin_1c89783e8:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_20cba59dc_Struct>().get()._field_CppLinked) {
					goto _match_end_1c8978629;
				};
				goto _case_begin_1c897867e;
			}
		}
		else {
			_case_begin_1c897867e:;
			{
				_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3232_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1c8978629:;
	};
	if ((_3232_d.get()._field_Args.len() > 0LL)) {
		_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _20d83d90a_checkDerive(_20d83cec0_directiveChecker* _self_, jule::Ptr<_20cb511e6_Directive>& _4831_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is_ptr<_20cba59dc_Struct>()) {
			_case_begin_1c897abc0:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_20cba59dc_Struct>().get()._field_CppLinked))) {
					goto _match_end_1c897ae01;
				};
				goto _case_begin_1c897ae56;
			}
		}
		else {
			_case_begin_1c897ae56:;
			{
				_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c897ae01:;
	};
	if ((_4831_d.get()._field_Args.len() == 0LL)) {
		_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_20d85017a_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4831_d.get()._field_Args.len() > 1LL)) {
		_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4831_d.get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1c897e883:;
		}
		else {
			_case_begin_1c897bb49:;
			{
				_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4831_d.get()._field_Args[0LL].get()._field_Kind)}));
			}
		}
		_match_end_1c897e4ba:;
	};
}



inline void _20d83db80_checkNamespace(_20d83cec0_directiveChecker* _self_, jule::Ptr<_20cb511e6_Directive>& _7438_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is_ptr<_20cba59dc_Struct>()) {
			_case_begin_1c897e7b7:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_20cba59dc_Struct>().get()._field_CppLinked))) {
					_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20d814370_Fn>()) {
			_case_begin_1c8980e06:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_20d814370_Fn>().get()._field_CppLinked))) {
					_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20d869eb9_Var>()) {
			_case_begin_1c8980e6c:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_20d869eb9_Var>().get()._field_CppLinked))) {
					_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_1c8980d4b:;
			{
				_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1c8980ce6:;
	};
	if ((_7438_d.get()._field_Args.len() == 0LL)) {
		_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7438_d.get()._field_Args.len() > 1LL)) {
		_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20b4e5581_Token> _9913_arg = _7438_d.get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7438_d.get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL,(_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is_ptr<_20cba59dc_Struct>()) {
			_case_begin_1c898955d:;
			{
				if ((_20d8d7ec1_findDirective((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_20cb511e6_Directive> _11625_typedef = jule::new_ptr<_20cb511e6_Directive>(_20cb511e6_Directive{._field_Tag=_7438_d.get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_20cb511e6_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1c8987c32:;
	};
}



inline void _20d83de05_checkDeprecated(_20d83cec0_directiveChecker* _self_, jule::Ptr<_20cb511e6_Directive>& _12539_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is_ptr<_20cba59dc_Struct>()) {
			_case_begin_1c8989d55:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_20cba59dc_Struct>().get()._field_CppLinked) {
					_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20d814370_Fn>()) {
			_case_begin_1c898b818:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_20d814370_Fn>().get()._field_CppLinked) {
					_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20d869eb9_Var>()) {
			_case_begin_1c898b87e:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_20d869eb9_Var>().get()._field_CppLinked) {
					_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_1c898b20d:;
			{
				_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1c898b054:;
	};
	if ((_12539_d.get()._field_Args.len() == 0LL)) {
		return;;
	};
	if ((_12539_d.get()._field_Args.len() > 1LL)) {
		_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20b4e5581_Token> _15013_arg = _12539_d.get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12539_d.get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL,(_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _20d83e17a_checkTest(_20d83cec0_directiveChecker* _self_, jule::Ptr<_20cb511e6_Directive>& _16429_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is_ptr<_20d814370_Fn>()) {
			_case_begin_1c899416c:;
			{
				jule::Ptr<_20d814370_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_20d814370_Fn>();;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_20cbe0d35_IsInit(_16717_f.ptr())))) && (!(_20cc3a258_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1c8994986;
				};
				if (_20cc3121b_IsMethod(_16717_f.ptr())) {
					_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _16717_f.get()._field_Token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1c8994986;
				};
				goto _case_begin_1c8994ada;
			}
		}
		else {
			_case_begin_1c8994ada:;
			{
				_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16429_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1c8994986:;
	};
	if ((_16429_d.get()._field_Args.len() > 0LL)) {
		_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _20d83e400_checkDirective(_20d83cec0_directiveChecker* _self_, jule::Ptr<_20cb511e6_Directive>& _18538_d) {
	{
		auto &_match_expr{ _18538_d.get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1c8998a12:;
			{
				_20d83d410_checkCdef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1c8998a78:;
			{
				_20d83d685_checkTypedef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1c8998ade:;
			{
				_20d83d90a_checkDerive(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1c8998b55:;
			{
				_20d83db80_checkNamespace(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1c89997d2:;
			{
				_20d83de05_checkDeprecated(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1c8999848:;
			{
				_20d83e17a_checkTest(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1c89998ae:;
			{
				_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		else {
			_case_begin_1c899899b:;
			{
				_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1c8998946:;
	};
}



inline void _20d83e5cb_check(_20d83cec0_directiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1c899be11:;
		if (it != expr.end()) {
			jule::Ptr<_20cb511e6_Directive> _20821_d = *it;
			{
				_20d83e400_checkDirective(&(*_self_), _20821_d);
			}
			_iter_next_1c899be11:;
			++it;
			goto _iter_begin_1c899be11;
		}
		_iter_end_1c899be11:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d83cec0_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d84404d_ImportInfo> _20d84456a_FindPackage(_20d84404d_ImportInfo* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_20d84404d_ImportInfo> _20d844878_SelectPackage(_20d84404d_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_20d869eb9_Var> _20d844c30_FindVar(_20d84404d_ImportInfo* _self_, jule::Str _19226_ident, jule::Bool ) {
	if ((!(_20d846616_isLookupable(&(*_self_), _19226_ident)))) {
		return nullptr;;
	};
	return _20d841765_findVarInPackage((*_self_)._field_Package.get()._field_Files,_19226_ident,false);;
}



inline jule::Ptr<_20d8e298c_TypeAlias> _20d8450d7_FindTypeAlias(_20d84404d_ImportInfo* _self_, jule::Str _20432_ident, jule::Bool ) {
	if ((!(_20d846616_isLookupable(&(*_self_), _20432_ident)))) {
		return nullptr;;
	};
	return _20d841b94_findTypeAliasInPackage((*_self_)._field_Package.get()._field_Files,_20432_ident,false);;
}



inline jule::Ptr<_20cba59dc_Struct> _20d84548e_FindStruct(_20d84404d_ImportInfo* _self_, jule::Str _21629_ident, jule::Bool ) {
	if ((!(_20d846616_isLookupable(&(*_self_), _21629_ident)))) {
		return nullptr;;
	};
	return _20d84207e_findStructInPackage((*_self_)._field_Package.get()._field_Files,_21629_ident,false);;
}



inline jule::Ptr<_20d814370_Fn> _20d845846_FindFn(_20d84404d_ImportInfo* _self_, jule::Str _22825_ident, jule::Bool ) {
	if ((!(_20d846616_isLookupable(&(*_self_), _22825_ident)))) {
		return nullptr;;
	};
	return _20d8424e1_findFnInPackage((*_self_)._field_Package.get()._field_Files,_22825_ident,false);;
}



inline jule::Ptr<_20d81a3ed_Trait> _20d845b54_FindTrait(_20d84404d_ImportInfo* _self_, jule::Str _23928_ident) {
	if ((!(_20d846616_isLookupable(&(*_self_), _23928_ident)))) {
		return nullptr;;
	};
	return _20d8427ee_findTraitInPackage((*_self_)._field_Package.get()._field_Files,_23928_ident);;
}



inline jule::Ptr<_20d81b0ad_Enum> _20d845e62_FindEnum(_20d84404d_ImportInfo* _self_, jule::Str _25027_ident) {
	if ((!(_20d846616_isLookupable(&(*_self_), _25027_ident)))) {
		return nullptr;;
	};
	return _20d842b40_findEnumInPackage((*_self_)._field_Package.get()._field_Files,_25027_ident);;
}



inline jule::Ptr<_20d81b82d_TypeEnum> _20d846270_FindTypeEnum(_20d84404d_ImportInfo* _self_, jule::Str _26131_ident) {
	if ((!(_20d846616_isLookupable(&(*_self_), _26131_ident)))) {
		return nullptr;;
	};
	return _20d842e81_findTypeEnumInPackage((*_self_)._field_Package.get()._field_Files,_26131_ident);;
}



inline jule::Bool _20d846616_isLookupable(_20d84404d_ImportInfo* _self_, jule::Str _27027_ident) {
	if ((*_self_)._field_CppLinked) {
		return false;;
	};
	if ((!((*_self_)._field_ImportAll))) {
		if ((((*_self_)._field_Alias.len() != 0LL) || _20d846924_existIdent(&(*_self_), jule::Str("self", 4)))) {
			return true;;
		};
		if (((*_self_)._field_Selected.len() > 0LL)) {
			if ((!(_20d846924_existIdent(&(*_self_), _27027_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _20d846924_existIdent(_20d84404d_ImportInfo* _self_, jule::Str _29025_ident) {
	{
		auto &expr = (*_self_)._field_Selected;
		auto it = expr.begin();
		_iter_begin_1c89b2520:;
		if (it != expr.end()) {
			jule::Ptr<_20b4e5581_Token> &_29116_sident = *it;
			{
				if ((_29116_sident.get()._field_Kind == _29025_ident)) {
					return true;;
				};
			}
			_iter_next_1c89b2520:;
			++it;
			goto _iter_begin_1c89b2520;
		}
		_iter_end_1c89b2520:;
	};
	return false;;
}



inline jule::Bool _20d846baa_isAccessibleViaSelection(_20d84404d_ImportInfo* _self_) {
	return (((*_self_)._field_ImportAll || ((*_self_)._field_Selected.len() == 0LL)) || _20d846924_existIdent(&(*_self_), jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _20d84404d_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d84404d_ImportInfo> _20d847480_FindPackage(_20d846ea7_Package* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_20d84404d_ImportInfo> _20d84778d_SelectPackage(_20d846ea7_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_20d869eb9_Var> _20d847b45_FindVar(_20d846ea7_Package* _self_, jule::Str _32026_ident, jule::Bool _32038_cpp_linked) {
	return _20d841765_findVarInPackage((*_self_)._field_Files,_32026_ident,_32038_cpp_linked);;
}



inline jule::Ptr<_20d8e298c_TypeAlias> _20d847eec_FindTypeAlias(_20d846ea7_Package* _self_, jule::Str _32632_ident, jule::Bool _32644_cpp_linked) {
	return _20d841b94_findTypeAliasInPackage((*_self_)._field_Files,_32632_ident,_32644_cpp_linked);;
}



inline jule::Ptr<_20cba59dc_Struct> _20d8483a4_FindStruct(_20d846ea7_Package* _self_, jule::Str _33229_ident, jule::Bool _33241_cpp_linked) {
	return _20d84207e_findStructInPackage((*_self_)._field_Files,_33229_ident,_33241_cpp_linked);;
}



inline jule::Ptr<_20d814370_Fn> _20d84875b_FindFn(_20d846ea7_Package* _self_, jule::Str _33825_ident, jule::Bool _33837_cpp_linked) {
	return _20d8424e1_findFnInPackage((*_self_)._field_Files,_33825_ident,_33837_cpp_linked);;
}



inline jule::Ptr<_20d81a3ed_Trait> _20d848a69_FindTrait(_20d846ea7_Package* _self_, jule::Str _34428_ident) {
	return _20d8427ee_findTraitInPackage((*_self_)._field_Files,_34428_ident);;
}



inline jule::Ptr<_20d81b0ad_Enum> _20d848d77_FindEnum(_20d846ea7_Package* _self_, jule::Str _35027_ident) {
	return _20d842b40_findEnumInPackage((*_self_)._field_Files,_35027_ident);;
}



inline jule::Ptr<_20d81b82d_TypeEnum> _20d849185_FindTypeEnum(_20d846ea7_Package* _self_, jule::Str _35631_ident) {
	return _20d842e81_findTypeEnumInPackage((*_self_)._field_Files,_35631_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d846ea7_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d84404d_ImportInfo> _20d84c6b6_FindPackage(_20d84c199_Sema* _self_, jule::Str _22330_ident) {
	return _20d8ad084_FindPackage((*_self_)._field_file.ptr(), _22330_ident);;
}



inline jule::Ptr<_20d84404d_ImportInfo> _20d84c9c4_SelectPackage(_20d84c199_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)> _23332_selector) {
	return _20d8ad392_SelectPackage((*_self_)._field_file.ptr(), _23332_selector);;
}



inline jule::Ptr<_20d869eb9_Var> _20d84cd7b_FindVar(_20d84c199_Sema* _self_, jule::Str _24326_ident, jule::Bool _24338_cpp_linked) {
	jule::Ptr<_20d869eb9_Var> _24517_v = _20d841765_findVarInPackage((*_self_)._field_files,_24326_ident,_24338_cpp_linked);;
	if ((_24517_v != nullptr)) {
		return _24517_v;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c89d5620:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _25121_imp = *it;
			{
				if ((!(_20d84aac1_impIsLookupable(_25121_imp,_24326_ident)))) {
					goto _iter_next_1c89d5620;
				};
				_24517_v=_20d844c30_FindVar(_25121_imp.ptr(), _24326_ident,_24338_cpp_linked);
				if (((_24517_v != nullptr) && _20d850532_isAccessibleDefine(&(*_self_), _24517_v.get()._field_Public,_24517_v.get()._field_Token))) {
					return _24517_v;;
				};
			}
			_iter_next_1c89d5620:;
			++it;
			goto _iter_begin_1c89d5620;
		}
		_iter_end_1c89d5620:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d8e298c_TypeAlias> _20d84d233_FindTypeAlias(_20d84c199_Sema* _self_, jule::Str _27032_ident, jule::Bool _27044_cpp_linked) {
	jule::Ptr<_20d8e298c_TypeAlias> _27217_ta = _20d841b94_findTypeAliasInPackage((*_self_)._field_files,_27032_ident,_27044_cpp_linked);;
	if ((_27217_ta != nullptr)) {
		return _27217_ta;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c89d7e2a:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _27821_imp = *it;
			{
				if ((!(_20d84aac1_impIsLookupable(_27821_imp,_27032_ident)))) {
					goto _iter_next_1c89d7e2a;
				};
				_27217_ta=_20d8450d7_FindTypeAlias(_27821_imp.ptr(), _27032_ident,_27044_cpp_linked);
				if (((_27217_ta != nullptr) && _20d850532_isAccessibleDefine(&(*_self_), _27217_ta.get()._field_Public,_27217_ta.get()._field_Token))) {
					return _27217_ta;;
				};
			}
			_iter_next_1c89d7e2a:;
			++it;
			goto _iter_begin_1c89d7e2a;
		}
		_iter_end_1c89d7e2a:;
	};
	return nullptr;;
}



inline jule::Ptr<_20cba59dc_Struct> _20d84d5da_FindStruct(_20d84c199_Sema* _self_, jule::Str _29729_ident, jule::Bool _29741_cppLinked) {
	jule::Ptr<_20cba59dc_Struct> _29917_s = _20d84207e_findStructInPackage((*_self_)._field_files,_29729_ident,_29741_cppLinked);;
	if ((_29917_s != nullptr)) {
		return _29917_s;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c89da735:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _30421_imp = *it;
			{
				if ((!(_20d84aac1_impIsLookupable(_30421_imp,_29729_ident)))) {
					goto _iter_next_1c89da735;
				};
				_29917_s=_20d84548e_FindStruct(_30421_imp.ptr(), _29729_ident,_29741_cppLinked);
				if (((_29917_s != nullptr) && _20d850532_isAccessibleDefine(&(*_self_), _29917_s.get()._field_Public,_29917_s.get()._field_Token))) {
					return _29917_s;;
				};
			}
			_iter_next_1c89da735:;
			++it;
			goto _iter_begin_1c89da735;
		}
		_iter_end_1c89da735:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d814370_Fn> _20d84d992_FindFn(_20d84c199_Sema* _self_, jule::Str _32225_ident, jule::Bool _32237_cpp_linked) {
	jule::Ptr<_20d814370_Fn> _32417_f = _20d8424e1_findFnInPackage((*_self_)._field_files,_32225_ident,_32237_cpp_linked);;
	if ((_32417_f != nullptr)) {
		return _32417_f;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c89dd040:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _33021_imp = *it;
			{
				if ((!(_20d84aac1_impIsLookupable(_33021_imp,_32225_ident)))) {
					goto _iter_next_1c89dd040;
				};
				_32417_f=_20d845846_FindFn(_33021_imp.ptr(), _32225_ident,_32237_cpp_linked);
				if (((_32417_f != nullptr) && _20d850532_isAccessibleDefine(&(*_self_), _32417_f.get()._field_Public,_32417_f.get()._field_Token))) {
					return _32417_f;;
				};
			}
			_iter_next_1c89dd040:;
			++it;
			goto _iter_begin_1c89dd040;
		}
		_iter_end_1c89dd040:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d81a3ed_Trait> _20d84dca0_FindTrait(_20d84c199_Sema* _self_, jule::Str _34928_ident) {
	jule::Ptr<_20d81a3ed_Trait> _35117_t = _20d8427ee_findTraitInPackage((*_self_)._field_files,_34928_ident);;
	if ((_35117_t != nullptr)) {
		return _35117_t;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c89e098d:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _35721_imp = *it;
			{
				if ((!(_20d84aac1_impIsLookupable(_35721_imp,_34928_ident)))) {
					goto _iter_next_1c89e098d;
				};
				_35117_t=_20d845b54_FindTrait(_35721_imp.ptr(), _34928_ident);
				if (((_35117_t != nullptr) && _20d850532_isAccessibleDefine(&(*_self_), _35117_t.get()._field_Public,_35117_t.get()._field_Token))) {
					return _35117_t;;
				};
			}
			_iter_next_1c89e098d:;
			++it;
			goto _iter_begin_1c89e098d;
		}
		_iter_end_1c89e098d:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d81b0ad_Enum> _20d84e0ad_FindEnum(_20d84c199_Sema* _self_, jule::Str _37627_ident) {
	jule::Ptr<_20d81b0ad_Enum> _37817_e = _20d842b40_findEnumInPackage((*_self_)._field_files,_37627_ident);;
	if ((_37817_e != nullptr)) {
		return _37817_e;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c89e3045:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _38421_imp = *it;
			{
				if ((!(_20d84aac1_impIsLookupable(_38421_imp,_37627_ident)))) {
					goto _iter_next_1c89e3045;
				};
				_37817_e=_20d845e62_FindEnum(_38421_imp.ptr(), _37627_ident);
				if (((_37817_e != nullptr) && _20d850532_isAccessibleDefine(&(*_self_), _37817_e.get()._field_Public,_37817_e.get()._field_Token))) {
					return _37817_e;;
				};
			}
			_iter_next_1c89e3045:;
			++it;
			goto _iter_begin_1c89e3045;
		}
		_iter_end_1c89e3045:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d81b82d_TypeEnum> _20d84e3bb_FindTypeEnum(_20d84c199_Sema* _self_, jule::Str _40331_ident) {
	jule::Ptr<_20d81b82d_TypeEnum> _40517_e = _20d842e81_findTypeEnumInPackage((*_self_)._field_files,_40331_ident);;
	if ((_40517_e != nullptr)) {
		return _40517_e;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c89e55ec:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _41121_imp = *it;
			{
				if ((!(_20d84aac1_impIsLookupable(_41121_imp,_40331_ident)))) {
					goto _iter_next_1c89e55ec;
				};
				_40517_e=_20d846270_FindTypeEnum(_41121_imp.ptr(), _40331_ident);
				if (((_40517_e != nullptr) && _20d850532_isAccessibleDefine(&(*_self_), _40517_e.get()._field_Public,_40517_e.get()._field_Token))) {
					return _40517_e;;
				};
			}
			_iter_next_1c89e55ec:;
			++it;
			goto _iter_begin_1c89e55ec;
		}
		_iter_end_1c89e55ec:;
	};
	return nullptr;;
}



inline jule::Bool _20d84e71d_isFlag(_20d84c199_Sema* _self_, jule::I64 _42721_flags) {
	return (((*_self_)._field_flags & _42721_flags) == _42721_flags);;
}



inline void _20d84e993_setCurrentFile(_20d84c199_Sema* _self_, jule::Ptr<_20d8aca67_SymbolTable> _42937_f) {
	(*_self_)._field_file=_42937_f;
}



inline void _20d84ed5b_pushErr(_20d84c199_Sema* _self_, jule::Ptr<_20b4e5581_Token> _43126_token, jule::Str _43141_fmt, jule::Slice<jule::Any> _43154_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_20d84a780_compilerErr(_43126_token,true,_43141_fmt,_43154_args));;
}



inline void _20d85017a_pushSugggestion(_20d84c199_Sema* _self_, jule::Str _43634_fmt, jule::Slice<jule::Any> _43647_args) {
	{
		_20d84bc15_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43634_fmt,_43647_args);
	};
}



inline jule::Bool _20d850532_isAccessibleDefine(_20d84c199_Sema* _self_, jule::Bool _44133_public, jule::Ptr<_20b4e5581_Token> _44147_token) {
	return ((_44133_public || (_44147_token.get()._field_File == nullptr)) || (_20b4eb312_Dir((*_self_)._field_file.get()._field_File.ptr()) == _20b4eb312_Dir(_44147_token.get()._field_File.ptr())));;
}



inline jule::Bool _20d850983_isDuplicatedIdent(_20d84c199_Sema* _self_, jule::Uintptr _44832_itself, jule::Str _44849_ident, jule::Bool _44861_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1c89eba87:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> &_44916_f = *it;
			{
				if (_20d8b1065_isDuplicatedIdent(_44916_f.ptr(), _44832_itself,_44849_ident,_44861_cpp_linked)) {
					return true;;
				};
				{
					auto &expr = _44916_f.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1c89ec912:;
					if (it != expr.end()) {
						jule::Ptr<_20d84404d_ImportInfo> &_45420_imp = *it;
						{
							{
								auto &expr = _45420_imp.get()._field_Selected;
								auto it = expr.begin();
								_iter_begin_1c89ed1c6:;
								if (it != expr.end()) {
									jule::Ptr<_20b4e5581_Token> &_45524_selected = *it;
									{
										if ((_45524_selected.get()._field_Kind == _44849_ident)) {
											return true;;
										};
									}
									_iter_next_1c89ed1c6:;
									++it;
									goto _iter_begin_1c89ed1c6;
								}
								_iter_end_1c89ed1c6:;
							};
						}
						_iter_next_1c89ec912:;
						++it;
						goto _iter_begin_1c89ec912;
					}
					_iter_end_1c89ec912:;
				};
			}
			_iter_next_1c89eba87:;
			++it;
			goto _iter_begin_1c89eba87;
		}
		_iter_end_1c89eba87:;
	};
	return false;;
}



inline void _20d850ca2_checkDirectives(jule::Ptr<_20d84c199_Sema> _self_, jule::Slice<jule::Ptr<_20cb511e6_Directive>>& _46540_d, jule::Any _46566_o) {
	_20d83cec0_directiveChecker _46617_dc = _20d83cec0_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_20cb511e6_Directive>>>)((&(_46540_d)))), ._field_o=_46566_o};;
	_20d83e5cb_check(&_46617_dc);
}



inline jule::Bool _20d851203_checkGenericQuantity(_20d84c199_Sema* _self_, jule::I64 _47439_required, jule::I64 _47454_given, jule::Ptr<_20b4e5581_Token> _47466_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_47439_required == 0LL) && (_47454_given > 0LL))) {
			_case_begin_1c8a00dee:;
			{
				_20d84ed5b_pushErr(&(*_self_), _47466_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_47439_required > 0LL) && (_47454_given == 0LL))) {
			_case_begin_1c8a00717:;
			{
				_20d84ed5b_pushErr(&(*_self_), _47466_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required < _47454_given)) {
			_case_begin_1c8a0077d:;
			{
				_20d84ed5b_pushErr(&(*_self_), _47466_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required > _47454_given)) {
			_case_begin_1c8a00805:;
			{
				_20d84ed5b_pushErr(&(*_self_), _47466_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c8a006a1:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c8a005d5:;
	};
}



inline jule::Bool _20d8515cc_isDuplicatedImportSelection(_20d84c199_Sema* _self_, jule::Uintptr _49342_itself, jule::Str _49359_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c8a021ec:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> &_49416_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49416_imp) == _49342_itself)) {
					goto _iter_end_1c8a021ec;
				};
				if (_20d846924_existIdent(_49416_imp.ptr(), _49359_ident)) {
					return true;;
				};
			}
			_iter_next_1c8a021ec:;
			++it;
			goto _iter_begin_1c8a021ec;
		}
		_iter_end_1c8a021ec:;
	};
	return false;;
}



inline jule::Any _20d851995_getImportDef(_20d84c199_Sema* _self_, jule::Str _50627_ident, jule::Ptr<_20d84404d_ImportInfo>& _50644_imp) {
	if ((_20d9194a8_findPackageBuiltinDef(_50644_imp.get()._field_LinkPath,_50627_ident) != nullptr)) {
		return jule::Any(true);;
	};
	{
		auto &expr = _50644_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c8a052bb:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _51021_f = *it;
			{
				;
				jule::Any _51321_def = _20d8b0b14_defByIdent(_51021_f.ptr(), _50627_ident,false);;
				if ((_51321_def != nullptr)) {
					return _51321_def;;
				};
			}
			_iter_next_1c8a052bb:;
			++it;
			goto _iter_begin_1c8a052bb;
		}
		_iter_end_1c8a052bb:;
	};
	return nullptr;;
}



inline jule::Bool _1c8a0bd50_checkImportSelection(_20d84c199_Sema* _self_, jule::Ptr<_20b4e5581_Token>& _52143_ident, jule::Ptr<_20d869eb9_Var>& _52159_s) {
	if ((!(_20d850532_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_20d84ed5b_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind)}));
		_20d85017a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20d84347b_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_20d84ed5b_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c8a10d32_checkImportSelection(_20d84c199_Sema* _self_, jule::Ptr<_20b4e5581_Token>& _52143_ident, jule::Ptr<_20d8e298c_TypeAlias>& _52159_s) {
	if ((!(_20d850532_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_20d84ed5b_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind)}));
		_20d85017a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20d84347b_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_20d84ed5b_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c8a14cc0_checkImportSelection(_20d84c199_Sema* _self_, jule::Ptr<_20b4e5581_Token>& _52143_ident, jule::Ptr<_20cba59dc_Struct>& _52159_s) {
	if ((!(_20d850532_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_20d84ed5b_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind)}));
		_20d85017a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20d84347b_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_20d84ed5b_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c8a18de5_checkImportSelection(_20d84c199_Sema* _self_, jule::Ptr<_20b4e5581_Token>& _52143_ident, jule::Ptr<_20d81a3ed_Trait>& _52159_s) {
	if ((!(_20d850532_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_20d84ed5b_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind)}));
		_20d85017a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20d84347b_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_20d84ed5b_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c8a1cd83_checkImportSelection(_20d84c199_Sema* _self_, jule::Ptr<_20b4e5581_Token>& _52143_ident, jule::Ptr<_20d81b0ad_Enum>& _52159_s) {
	if ((!(_20d850532_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_20d84ed5b_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind)}));
		_20d85017a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20d84347b_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_20d84ed5b_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c8a21d21_checkImportSelection(_20d84c199_Sema* _self_, jule::Ptr<_20b4e5581_Token>& _52143_ident, jule::Ptr<_20d81b82d_TypeEnum>& _52159_s) {
	if ((!(_20d850532_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_20d84ed5b_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind)}));
		_20d85017a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20d84347b_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_20d84ed5b_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c8a25cae_checkImportSelection(_20d84c199_Sema* _self_, jule::Ptr<_20b4e5581_Token>& _52143_ident, jule::Ptr<_20d814370_Fn>& _52159_s) {
	if ((!(_20d850532_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_20d84ed5b_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind)}));
		_20d85017a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20d84347b_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_20d84ed5b_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _20d85217c_checkImportSelectedSelections(_20d84c199_Sema* _self_, jule::Ptr<_20d84404d_ImportInfo>& _53553_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _53553_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1c8a07642:;
		if (it != expr.end()) {
			jule::Ptr<_20b4e5581_Token> _53716_ident = *it;
			{
				if ((_53716_ident.get()._field_Kind == jule::Str("self", 4))) {
					goto _iter_next_1c8a07642;
				};
				if (_20d8515cc_isDuplicatedImportSelection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_53553_imp)),_53716_ident.get()._field_Kind)) {
					_20d84ed5b_pushErr(&(*_self_), _53716_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind)}));
					_20d85017a_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1c8a07642;
				};
				jule::Any _54921_def = _20d851995_getImportDef(&(*_self_), _53716_ident.get()._field_Kind,_53553_imp);;
				{
					auto &_match_expr{ _54921_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1c8a0a90e:;
						{
							goto _iter_next_1c8a07642;
						}
					}
					else if (_match_expr.type_is_ptr<_20d869eb9_Var>()) {
						_case_begin_1c8a07d4b:;
						{
							jule::Ptr<_20d869eb9_Var> _55525_v = _54921_def.operator jule::Ptr<_20d869eb9_Var>();;
							__jule_func_result=(_1c8a0bd50_checkImportSelection(&(*_self_), _53716_ident,_55525_v) && __jule_func_result);
						}
					}
					else if (_match_expr.type_is_ptr<_20d8e298c_TypeAlias>()) {
						_case_begin_1c8a09e80:;
						{
							jule::Ptr<_20d8e298c_TypeAlias> _55825_ta = _54921_def.operator jule::Ptr<_20d8e298c_TypeAlias>();;
							__jule_func_result=(_1c8a10d32_checkImportSelection(&(*_self_), _53716_ident,_55825_ta) && __jule_func_result);
						}
					}
					else if (_match_expr.type_is_ptr<_20cba59dc_Struct>()) {
						_case_begin_1c8a0a007:;
						{
							jule::Ptr<_20cba59dc_Struct> _56125_s = _54921_def.operator jule::Ptr<_20cba59dc_Struct>();;
							__jule_func_result=(_1c8a14cc0_checkImportSelection(&(*_self_), _53716_ident,_56125_s) && __jule_func_result);
						}
					}
					else if (_match_expr.type_is_ptr<_20d81a3ed_Trait>()) {
						_case_begin_1c8a0a07e:;
						{
							jule::Ptr<_20d81a3ed_Trait> _56425_t = _54921_def.operator jule::Ptr<_20d81a3ed_Trait>();;
							__jule_func_result=(_1c8a18de5_checkImportSelection(&(*_self_), _53716_ident,_56425_t) && __jule_func_result);
						}
					}
					else if (_match_expr.type_is_ptr<_20d81b0ad_Enum>()) {
						_case_begin_1c8a0a106:;
						{
							jule::Ptr<_20d81b0ad_Enum> _56725_e = _54921_def.operator jule::Ptr<_20d81b0ad_Enum>();;
							__jule_func_result=(_1c8a1cd83_checkImportSelection(&(*_self_), _53716_ident,_56725_e) && __jule_func_result);
						}
					}
					else if (_match_expr.type_is_ptr<_20d81b82d_TypeEnum>()) {
						_case_begin_1c8a0ab2e:;
						{
							jule::Ptr<_20d81b82d_TypeEnum> _57025_e = _54921_def.operator jule::Ptr<_20d81b82d_TypeEnum>();;
							__jule_func_result=(_1c8a21d21_checkImportSelection(&(*_self_), _53716_ident,_57025_e) && __jule_func_result);
						}
					}
					else if (_match_expr.type_is_ptr<_20d814370_Fn>()) {
						_case_begin_1c8a0aba6:;
						{
							jule::Ptr<_20d814370_Fn> _57325_f = _54921_def.operator jule::Ptr<_20d814370_Fn>();;
							__jule_func_result=(_1c8a25cae_checkImportSelection(&(*_self_), _53716_ident,_57325_f) && __jule_func_result);
						}
					}
					else {
						_case_begin_1c8a09d1a:;
						{
							_20d84ed5b_pushErr(&(*_self_), _53716_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind)}));
							__jule_func_result=false;
							goto _iter_next_1c8a07642;
						}
					}
					_match_end_1c8a09cb5:;
				};
			}
			_iter_next_1c8a07642:;
			++it;
			goto _iter_begin_1c8a07642;
		}
		_iter_end_1c8a07642:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c8a2a225_checkImportsAllSelectionsFromCollection(_20d84c199_Sema* _self_, jule::Slice<jule::Ptr<_20d869eb9_Var>>& _58462_s, jule::Ptr<_20b4e5581_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1c8a2bcb5:;
		if (it != expr.end()) {
			jule::Ptr<_20d869eb9_Var> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1c8a0bd50_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1c8a2bcb5:;
			++it;
			goto _iter_begin_1c8a2bcb5;
		}
		_iter_end_1c8a2bcb5:;
	};
	return _58517_ok;;
}

inline jule::Bool _1c8a2b05b_checkImportsAllSelectionsFromCollection(_20d84c199_Sema* _self_, jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>& _58462_s, jule::Ptr<_20b4e5581_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1c8a2ea32:;
		if (it != expr.end()) {
			jule::Ptr<_20d8e298c_TypeAlias> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1c8a10d32_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1c8a2ea32:;
			++it;
			goto _iter_begin_1c8a2ea32;
		}
		_iter_end_1c8a2ea32:;
	};
	return _58517_ok;;
}

inline jule::Bool _1c8a2d965_checkImportsAllSelectionsFromCollection(_20d84c199_Sema* _self_, jule::Slice<jule::Ptr<_20cba59dc_Struct>>& _58462_s, jule::Ptr<_20b4e5581_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1c8a3278d:;
		if (it != expr.end()) {
			jule::Ptr<_20cba59dc_Struct> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1c8a14cc0_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1c8a3278d:;
			++it;
			goto _iter_begin_1c8a3278d;
		}
		_iter_end_1c8a3278d:;
	};
	return _58517_ok;;
}

inline jule::Bool _1c8a31638_checkImportsAllSelectionsFromCollection(_20d84c199_Sema* _self_, jule::Slice<jule::Ptr<_20d814370_Fn>>& _58462_s, jule::Ptr<_20b4e5581_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1c8a3551b:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1c8a25cae_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1c8a3551b:;
			++it;
			goto _iter_begin_1c8a3551b;
		}
		_iter_end_1c8a3551b:;
	};
	return _58517_ok;;
}

inline jule::Bool _1c8a34806_checkImportsAllSelectionsFromCollection(_20d84c199_Sema* _self_, jule::Slice<jule::Ptr<_20d81a3ed_Trait>>& _58462_s, jule::Ptr<_20b4e5581_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1c8a38233:;
		if (it != expr.end()) {
			jule::Ptr<_20d81a3ed_Trait> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1c8a18de5_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1c8a38233:;
			++it;
			goto _iter_begin_1c8a38233;
		}
		_iter_end_1c8a38233:;
	};
	return _58517_ok;;
}

inline jule::Bool _1c8a37122_checkImportsAllSelectionsFromCollection(_20d84c199_Sema* _self_, jule::Slice<jule::Ptr<_20d81b0ad_Enum>>& _58462_s, jule::Ptr<_20b4e5581_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1c8a3ae4a:;
		if (it != expr.end()) {
			jule::Ptr<_20d81b0ad_Enum> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1c8a1cd83_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1c8a3ae4a:;
			++it;
			goto _iter_begin_1c8a3ae4a;
		}
		_iter_end_1c8a3ae4a:;
	};
	return _58517_ok;;
}

inline jule::Bool _1c8a39d39_checkImportsAllSelectionsFromCollection(_20d84c199_Sema* _self_, jule::Slice<jule::Ptr<_20d81b82d_TypeEnum>>& _58462_s, jule::Ptr<_20b4e5581_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1c8a3dbea:;
		if (it != expr.end()) {
			jule::Ptr<_20d81b82d_TypeEnum> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1c8a21d21_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1c8a3dbea:;
			++it;
			goto _iter_begin_1c8a3dbea;
		}
		_iter_end_1c8a3dbea:;
	};
	return _58517_ok;;
}



inline jule::Bool _20d8528a8_checkImportAllSelections(_20d84c199_Sema* _self_, jule::Ptr<_20d84404d_ImportInfo>& _59444_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _59444_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c8a269e6:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> &_59616_file = *it;
			{
				__jule_func_result=(_1c8a2a225_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Vars,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1c8a2b05b_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_TypeAliases,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1c8a2d965_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Structs,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1c8a31638_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Funcs,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1c8a34806_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Traits,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1c8a37122_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Enums,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1c8a39d39_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_TypeEnums,_59444_imp.get()._field_Token) && __jule_func_result);
			}
			_iter_next_1c8a269e6:;
			++it;
			goto _iter_begin_1c8a269e6;
		}
		_iter_end_1c8a269e6:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20d852bc7_checkImportSelections(_20d84c199_Sema* _self_, jule::Ptr<_20d84404d_ImportInfo>& _60845_imp) {
	jule::Bool __jule_func_result = false;
	if ((_60845_imp.get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _20d85217c_checkImportSelectedSelections(&(*_self_), _60845_imp);
		return __jule_func_result;;
	} else if (_60845_imp.get()._field_ImportAll) {
		__jule_func_result = _20d8528a8_checkImportAllSelections(&(*_self_), _60845_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d852ed5_isUseAliasDuplication(_20d84c199_Sema* _self_, jule::Ptr<_20d84404d_ImportInfo>& _61741_imp) {
	if ((_61741_imp.get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c8a4166a:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _62221_imp2 = *it;
			{
				if ((_62221_imp2 == _61741_imp)) {
					goto _iter_end_1c8a4166a;
				};
				if ((_62221_imp2.get()._field_Alias == _61741_imp.get()._field_Alias)) {
					return true;;
				};
				if (((_62221_imp2.get()._field_Ident == _62221_imp2.get()._field_LinkPath) && (_62221_imp2.get()._field_Ident == _61741_imp.get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1c8a4166a:;
			++it;
			goto _iter_begin_1c8a4166a;
		}
		_iter_end_1c8a4166a:;
	};
	return false;;
}



inline jule::Bool _20d8532e3_checkImport(_20d84c199_Sema* _self_, jule::Ptr<_20d84404d_ImportInfo>& _63735_imp) {
	if ((_63735_imp.get()._field_CppLinked || (_63735_imp.get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_20d852ed5_isUseAliasDuplication(&(*_self_), _63735_imp)) {
		_20d84ed5b_pushErr(&(*_self_), _63735_imp.get()._field_Token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_63735_imp.get()._field_Alias)}));
		_20d85017a_pushSugggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_63735_imp.get()._field_Duplicate))) {
		jule::Ptr<_20d84c199_Sema> _64821_sema = jule::new_ptr<_20d84c199_Sema>(_20d84c199_Sema{._field_flags=(*_self_)._field_flags});;
		_20d866e1c_check(_64821_sema, _63735_imp.get()._field_Package.get()._field_Files);
		if ((_64821_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_64821_sema.get()._field_errors);
			_64821_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _20d852bc7_checkImportSelections(&(*_self_), _63735_imp);;
}



inline void _20d8534be_checkImports(_20d84c199_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1c8a47275:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _66221_file = *it;
			{
				_20d84e993_setCurrentFile(&(*_self_), _66221_file);
				{
					auto &expr = _66221_file.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1c8a47dd0:;
					if (it != expr.end()) {
						jule::Ptr<_20d84404d_ImportInfo> _66425_imp = *it;
						{
							jule::Bool _66521_ok = _20d8532e3_checkImport(&(*_self_), _66425_imp);;
							if ((!(_66521_ok))) {
								return;;
							};
						}
						_iter_next_1c8a47dd0:;
						++it;
						goto _iter_begin_1c8a47dd0;
					}
					_iter_end_1c8a47dd0:;
				};
			}
			_iter_next_1c8a47275:;
			++it;
			goto _iter_begin_1c8a47275;
		}
		_iter_end_1c8a47275:;
	};
}



inline void _20d85369a_implFileImpls(jule::Ptr<_20d84c199_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Impls;
		auto it = expr.begin();
		_iter_begin_1c8a479a1:;
		if (it != expr.end()) {
			jule::Ptr<_20d8207dd_Impl> _67521_imp = *it;
			{
				_20d85e002_implImpl(_self_, _67521_imp);
			}
			_iter_next_1c8a479a1:;
			++it;
			goto _iter_begin_1c8a479a1;
		}
		_iter_end_1c8a479a1:;
	};
}



inline void _20d853876_implImpls(jule::Ptr<_20d84c199_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c8a499b4:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _68121_file = *it;
			{
				_20d84e993_setCurrentFile(_self_.ptr(), _68121_file);
				_20d85369a_implFileImpls(_self_);
			}
			_iter_next_1c8a499b4:;
			++it;
			goto _iter_begin_1c8a499b4;
		}
		_iter_end_1c8a499b4:;
	};
}



inline void _20d853a52_checkEnums(jule::Ptr<_20d84c199_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c8a4aa3c:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _68821_file = *it;
			{
				_20d84e993_setCurrentFile(_self_.ptr(), _68821_file);
				_20d85b62b_checkEnumDecls(_self_);
			}
			_iter_next_1c8a4aa3c:;
			++it;
			goto _iter_begin_1c8a4aa3c;
		}
		_iter_end_1c8a4aa3c:;
	};
}



inline _20d901e30_typeChecker _20d853ea3_typeChecker(jule::Ptr<_20d84c199_Sema> _self_, jule::Trait<_20d90e536_Lookup> _69435_l, jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>> _69450_generics, jule::Ptr<_20d90111b_referencer> _69513_referencer) {
	_20d901e30_typeChecker _69617_tc = _20d901e30_typeChecker{._field_s=_self_, ._field_rootLookup=_69435_l, ._field_lookup=_69435_l, ._field_referencer=_69513_referencer, ._field_useGenerics=_69450_generics, };;
	{
		auto &_match_expr{ _69435_l };
		
		if (_match_expr.type_is<jule::Ptr<_20d82c3aa_scopeChecker>>()) {
			_case_begin_1c8a4c4cd:;
			{
				jule::Ptr<_20d82c3aa_scopeChecker> _70521_hard = _20d830765_getHardRoot(_69435_l.operator jule::Ptr<_20d82c3aa_scopeChecker>());;
				_69617_tc._field_refers=_70521_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1c8a4c3e0:;
	};
	if (((_69513_referencer != nullptr) && (_69513_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _69513_referencer.get()._field_owner };
			
			if (_match_expr.type_is_ptr<_20d8e298c_TypeAlias>()) {
				_case_begin_1c8a4d930:;
				{
					_69617_tc._field_ownerAlias=_69513_referencer.get()._field_owner.operator jule::Ptr<_20d8e298c_TypeAlias>();
				}
			}
			_match_end_1c8a4d8ca:;
		};
	};
	return _69617_tc;;
}



inline jule::Ptr<_20d8e3680_TypeKind> _20d85449d_buildTypeWithRefers(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cb892ea_TypeDecl>& _72144_t, jule::Trait<_20d90e536_Lookup> _72167_l, jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>> _72213_generics, jule::Ptr<_20d90111b_referencer> _72241_referencer) {
	return ({ auto _wrap_copy = _20d853ea3_typeChecker(_self_, _72167_l,_72213_generics,_72241_referencer); _20d90919b_checkDecl(&_wrap_copy, _72144_t); });;
}



inline jule::Bool _20d854998_checkTypeWithRefers(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d8e7a5d_TypeSymbol>& _72844_t, jule::Trait<_20d90e536_Lookup> _72864_l, jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>> _72913_generics, jule::Ptr<_20d90111b_referencer> _72941_referencer) {
	jule::Bool __jule_func_result = false;
	if (_20d8e7e15_checked(_72844_t.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_72844_t.get()._field_Kind=_20d85449d_buildTypeWithRefers(_self_, _72844_t.get()._field_Decl,_72864_l,_72913_generics,_72941_referencer);
	__jule_func_result = _20d8e7e15_checked(_72844_t.ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_20d81d8a7_constraintChecker> _20d854c0c_constraintChecker(jule::Ptr<_20d84c199_Sema> _self_) {
	return jule::new_ptr<_20d81d8a7_constraintChecker>(_20d81d8a7_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _20d8550b4_checkType(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d8e7a5d_TypeSymbol>& _74334_t, jule::Trait<_20d90e536_Lookup> _74354_l) {
	return _20d854998_checkTypeWithRefers(_self_, _74334_t,_74354_l,nullptr,nullptr);;
}



inline jule::Ptr<_20d8e3680_TypeKind> _20d855515_buildTypeWithGenerics(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cb892ea_TypeDecl>& _74946_t, jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>> _75013_generics, jule::Ptr<_20d8156e5_ReferenceStack> _75041_refers) {
	jule::Ptr<_20d901e30_typeChecker> _75117_tc = jule::new_ptr<_20d901e30_typeChecker>(_20d901e30_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_20d90e536_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_20d90e536_Lookup>(_self_, 3), ._field_refers=_75041_refers, ._field_useGenerics=_75013_generics, });;
	return _20d90919b_checkDecl(_75117_tc.ptr(), _74946_t);;
}



inline jule::Ptr<_20d8e3680_TypeKind> _20d855823_buildType(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cb892ea_TypeDecl>& _76234_t) {
	return _20d855515_buildTypeWithGenerics(_self_, _76234_t,nullptr,nullptr);;
}



inline jule::Ptr<_20d8e3680_TypeKind> _20d855b31_selectType(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cb892ea_TypeDecl>& _76735_t) {
	jule::Ptr<_20d901e30_typeChecker> _76817_tc = jule::new_ptr<_20d901e30_typeChecker>(_20d901e30_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_20d90e536_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_20d90e536_Lookup>(_self_, 3), ._field_selection=true, });;
	return _20d90919b_checkDecl(_76817_tc.ptr(), _76735_t);;
}



inline jule::Ptr<_20d8b440e_Eval> _20d856082_evalpd(jule::Ptr<_20d84c199_Sema> _self_, jule::Trait<_20d90e536_Lookup> _77930_l, jule::Ptr<_20d8e3680_TypeKind> _77945_p, jule::Ptr<_20d869eb9_Var> _77963_owner) {
	jule::Ptr<_20d8b440e_Eval> _78017_e = jule::new_ptr<_20d8b440e_Eval>(_20d8b440e_Eval{._field_s=_self_, ._field_lookup=_77930_l, ._field_owner=_77963_owner, });;
	{
		auto &_match_expr{ _77930_l };
		
		if (_match_expr.type_is<jule::Ptr<_20d82c3aa_scopeChecker>>()) {
			_case_begin_1c8a56b69:;
			{
				_78017_e.get()._field_unsafety=_20d82e874_isUnsafe(_77930_l.operator jule::Ptr<_20d82c3aa_scopeChecker>());
			}
		}
		_match_end_1c8a56b03:;
	};
	_78017_e.get()._field_prefix=_77945_p;
	return _78017_e;;
}



inline jule::Ptr<_20d8b440e_Eval> _20d856439_evalp(jule::Ptr<_20d84c199_Sema> _self_, jule::Trait<_20d90e536_Lookup> _79429_l, jule::Ptr<_20d8e3680_TypeKind> _79444_p) {
	return _20d856082_evalpd(_self_, _79429_l,_79444_p,nullptr);;
}



inline jule::Ptr<_20d8b440e_Eval> _20d856747_eval(jule::Ptr<_20d84c199_Sema> _self_, jule::Trait<_20d90e536_Lookup> _79928_l) {
	return _20d856439_evalp(_self_, _79928_l,nullptr);;
}



inline jule::Bool _20d856c42_checkAssignType(jule::Ptr<_20d84c199_Sema> _self_, jule::Bool _80335_destIsRef, jule::Ptr<_20d8e3680_TypeKind>& _80357_dest, jule::Ptr<_20d8b2891_Data>& _80414_d, jule::Ptr<_20b4e5581_Token> _80428_errorToken) {
	if (_80414_d.get()._field_Decl) {
		_20d84ed5b_pushErr(_self_.ptr(), _80428_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;;
	};
	if (_80335_destIsRef) {
		if ((!(_20d8e3d89_Equals(_80357_dest, _80414_d.get()._field_Kind)))) {
			_20d84ed5b_pushErr(_self_.ptr(), _80428_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_80357_dest.ptr())),jule::Any(_20d8e3a7b_Str(_80414_d.get()._field_Kind.ptr()))}));
			return false;;
		};
	} else {
		jule::Ptr<_20d89d41a_assignTypeChecker> _81521_atc = jule::new_ptr<_20d89d41a_assignTypeChecker>(_20d89d41a_assignTypeChecker{._field_s=_self_, ._field_dest=_80357_dest, ._field_d=_80414_d, ._field_errorToken=_80428_errorToken});;
		jule::Bool _82117_ok = _20d89e592_check(_81521_atc.ptr());;
		if ((!(_82117_ok))) {
			return false;;
		};
	};
	if (((!(_20d8b3254_IsConst(_80414_d.ptr()))) || (_20d8e5a17_Prim(_80357_dest.ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _83117_kind = _20d8e5a17_Prim(_80357_dest.ptr()).get()._field_Kind;;
	{
		
		if (_20d809a6e_IsSigInt(_83117_kind)) {
			_case_begin_1c8a5d2d0:;
			{
				_20d80b158_SetI64(_80414_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_20d80acb2_AsI64(_80414_d.get()._field_Constant.ptr())));
			}
		}
		else if (_20d809ba1_IsUnsigInt(_83117_kind)) {
			_case_begin_1c8a5d357:;
			{
				_20d80b28a_SetU64(_80414_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_20d80ade4_AsU64(_80414_d.get()._field_Constant.ptr())));
			}
		}
		else if (_20d809e15_IsFloat(_83117_kind)) {
			_case_begin_1c8a5d3ce:;
			{
				_20d80b631_SetF64(_80414_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_20d80b026_AsF64(_80414_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1c8a5d214:;
	};
	return true;;
}



inline jule::Bool _20d857193_checkTypeCompatibility(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d8e3680_TypeKind>& _84547_dest, jule::Ptr<_20d8e3680_TypeKind>& _84614_src, jule::Ptr<_20b4e5581_Token>& _84635_errorToken) {
	if ((_84614_src == nullptr)) {
		_20d84ed5b_pushErr(_self_.ptr(), _84635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_84547_dest.ptr())),jule::Any(_20d8e3a7b_Str(_84614_src.ptr()))}));
		return false;;
	};
	if ((_20d8e76a6_Tup(_84614_src.ptr()) != nullptr)) {
		_20d84ed5b_pushErr(_self_.ptr(), _84635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_84547_dest.ptr())),jule::Any(_20d8e3a7b_Str(_84614_src.ptr()))}));
		return false;;
	};
	_20d89b7e2_typeCompatibilityChecker _86017_tcc = _20d89b7e2_typeCompatibilityChecker{._field_s=_self_, ._field_dest=_84547_dest, ._field_src=_84614_src, ._field_errorToken=_84635_errorToken};;
	if (_20d89cdcb_check(&_86017_tcc)) {
		return true;;
	};
	_20d84ed5b_pushErr(_self_.ptr(), _84635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_84547_dest.ptr())),jule::Any(_20d8e3a7b_Str(_84614_src.ptr()))}));
	return false;;
}



inline jule::Ptr<_20d8e3680_TypeKind> _20d85756c_buildNonGenericTypeKind(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cb892ea_TypeDecl>& _88148_ast, jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>>& _88214_generics) {
	jule::Ptr<_20d901e30_typeChecker> _88317_tc = jule::new_ptr<_20d901e30_typeChecker>(_20d901e30_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_20d90e536_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_20d90e536_Lookup>(_self_, 3), ._field_ignoreGenerics=_88214_generics, });;
	return _20d90919b_checkDecl(_88317_tc.ptr(), _88148_ast);;
}



inline void _20d857825_buildFnNonGenericTypeKinds(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d814749_FnIns>& _89251_f) {
	jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>> _89317_generics = nullptr;;
	if (_20cc3121b_IsMethod(_89251_f.get()._field_Decl.ptr())) {
		_89317_generics=jule::append(_89251_f.get()._field_Decl.get()._field_Generics,_89251_f.get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_89317_generics=_89251_f.get()._field_Decl.get()._field_Generics;
	};
	{
		auto &expr = _89251_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c8a66360:;
		if (it != expr.end()) {
			jule::Ptr<_20d81455c_ParamIns> _90021_p = *it;
			{
				if ((!(_20cbece41_IsSelf(_90021_p.get()._field_Decl.ptr())))) {
					_90021_p.get()._field_Kind=_20d85756c_buildNonGenericTypeKind(_self_, _90021_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_89317_generics);
				};
			}
			_iter_next_1c8a66360:;
			++it;
			goto _iter_begin_1c8a66360;
		}
		_iter_end_1c8a66360:;
	};
	if ((!(_20cbeec56_IsVoid(_89251_f.get()._field_Decl.ptr())))) {
		_89251_f.get()._field_Result=_20d85756c_buildNonGenericTypeKind(_self_, _89251_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_89317_generics);
	};
}



inline jule::Ptr<_20d814749_FnIns> _20d857b44_getTraitCheckFnKind(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d814370_Fn>& _91044_f) {
	if ((_91044_f.get()._field_Instances.len() == 1LL)) {
		return _91044_f.get()._field_Instances[0LL];;
	};
	jule::Ptr<_20d814749_FnIns> _91417_ins = _20cbe58ea_instanceForce(_91044_f);;
	jule::Ptr<_20d901e30_typeChecker> _91617_tc = jule::new_ptr<_20d901e30_typeChecker>(_20d901e30_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_20d90e536_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_20d90e536_Lookup>(_self_, 3), });;
	{
		auto &expr = _91417_ins.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c8a68c7a:;
		if (it != expr.end()) {
			jule::Ptr<_20d81455c_ParamIns> _92121_p = *it;
			{
				if ((!(_20cbece41_IsSelf(_92121_p.get()._field_Decl.ptr())))) {
					_92121_p.get()._field_Kind=_20d90919b_checkDecl(_91617_tc.ptr(), _92121_p.get()._field_Decl.get()._field_Kind.get()._field_Decl);
				};
			}
			_iter_next_1c8a68c7a:;
			++it;
			goto _iter_begin_1c8a68c7a;
		}
		_iter_end_1c8a68c7a:;
	};
	if ((!(_20cbeec56_IsVoid(_91044_f.ptr())))) {
		_91417_ins.get()._field_Result=_20d90919b_checkDecl(_91617_tc.ptr(), _91044_f.get()._field_Result.get()._field_Kind.get()._field_Decl);
	};
	return _91417_ins;;
}



inline jule::Bool _20d858095_checkConstraintsFn(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d814749_FnIns>& _93343_f, jule::Ptr<_20b4e5581_Token>& _93359_et, jule::Ptr<_20d814749_FnIns> _93375_exist) {
	jule::Ptr<_20d81d8a7_constraintChecker> _93417_cc = _20d854c0c_constraintChecker(_self_);;
	_93417_cc.get()._field_et=_93359_et;
	_93417_cc.get()._field_fi=_93343_f;
	if ((_93375_exist != nullptr)) {
		{
			auto &expr = _93375_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1c8a6d90b:;
			if (it != expr.end()) {
				jule::I64 _93818_i = it - expr.begin();
				jule::Ptr<_20d8e1e53_InsGeneric> _93825_g = *it;
				{
					_93343_f.get()._field_Generics[_93818_i].get()._field_Constraint=_93825_g.get()._field_Constraint;
				}
				_iter_next_1c8a6d90b:;
				++it;
				_93818_i++;
				goto _iter_begin_1c8a6d90b;
			}
			_iter_end_1c8a6d90b:;
		};
	} else {
		_93417_cc.get()._field_uniq=true;
	};
	return _20d81e787_check(_93417_cc);;
}



inline jule::Bool _20d8584e6_checkConstraintsStruct(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cba5db6_StructIns>& _94747_s, jule::Ptr<_20b4e5581_Token>& _94767_et, jule::Ptr<_20cba5db6_StructIns> _94783_exist) {
	jule::Ptr<_20d81d8a7_constraintChecker> _94817_cc = _20d854c0c_constraintChecker(_self_);;
	_94817_cc.get()._field_et=_94767_et;
	_94817_cc.get()._field_si=_94747_s;
	if ((_94783_exist != nullptr)) {
		{
			auto &expr = _94783_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1c8a71414:;
			if (it != expr.end()) {
				jule::I64 _95218_i = it - expr.begin();
				jule::Ptr<_20d8e1e53_InsGeneric> _95225_g = *it;
				{
					_94747_s.get()._field_Generics[_95218_i].get()._field_Constraint=_95225_g.get()._field_Constraint;
				}
				_iter_next_1c8a71414:;
				++it;
				_95218_i++;
				goto _iter_begin_1c8a71414;
			}
			_iter_end_1c8a71414:;
		};
	} else {
		_94817_cc.get()._field_uniq=true;
	};
	return _20d81e787_check(_94817_cc);;
}



inline jule::Bool _20d85889d_fnEnvironment(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d814749_FnIns>& _96438_f, jule::Fn<jule::Bool(jule::Ptr<_20d84c199_Sema>&,jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>&)> _96449_algo) {
	jule::Ptr<_20d84c199_Sema> _96517_sema = _96438_f.get()._field_Decl.get()._field_sema;;
	jule::Ptr<_20d8aca67_SymbolTable> _96617_old = _96438_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_20d84e993_setCurrentFile(_96438_f.get()._field_Decl.get()._field_sema.ptr(), _96617_old);
	});;
	jule::Ptr<_20d8aca67_SymbolTable> _96817_file = _20d84b7a3_findFile(_96438_f.get()._field_Decl.get()._field_sema.get()._field_files,_96438_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_96817_file != nullptr)) {
		_20d84e993_setCurrentFile(_96438_f.get()._field_Decl.get()._field_sema.ptr(), _96817_file);
	};
	jule::I64 _97317_size = _96438_f.get()._field_Generics.len();;
	if (((_96438_f.get()._field_Decl != nullptr) && (_96438_f.get()._field_Decl.get()._field_Owner != nullptr))) {
		_97317_size+=_96438_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>> _97817_generics = jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>::alloc(0LL, _97317_size);;
	_20d84b451_appendGenericTypeAliases(_97817_generics,_96438_f);
	jule::Bool _98113_ok = _96449_algo(_96517_sema,_97817_generics);;
	if ((_96517_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_96517_sema.get()._field_errors);
		_96517_sema.get()._field_errors=nullptr;
	};
	return _98113_ok;;
}



inline void _20d858b23_checkFnParamKind(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d81455c_ParamIns>& _99141_p) {
	_99141_p.get()._field_Kind.get()._field_Variadic=_99141_p.get()._field_Decl.get()._field_Variadic;
	if ((_99141_p.get()._field_Decl.get()._field_Reference && (!(_20d90aeb1_isValidForRef(_99141_p.get()._field_Kind))))) {
		_20d84ed5b_pushErr(_self_.ptr(), _99141_p.get()._field_Decl.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_99141_p.get()._field_Kind.ptr()))}));
	};
}



inline jule::Bool _20d858e31_reloadFnInsTypes(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d814749_FnIns> _99840_f) {
	if ((_20d814e0e_IsBuiltin(_99840_f.ptr()) || _20d815041_IsAnon(_99840_f.ptr()))) {
		return true;;
	};
	return _20d85889d_fnEnvironment(_self_, _99840_f,jule::Fn<jule::Bool(jule::Ptr<_20d84c199_Sema>&,jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>&)>([=](jule::Ptr<_20d84c199_Sema>& _100243_sema, jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>& _100261_generics) mutable -> jule::Bool {
		jule::Bool _100321_ok = true;;
		{
			auto &expr = _99840_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1c8a8247a:;
			if (it != expr.end()) {
				jule::Ptr<_20d81455c_ParamIns> _100425_p = *it;
				{
					if (_20cbece41_IsSelf(_100425_p.get()._field_Decl.ptr())) {
						if (_20cbedd43_IsRef(_100425_p.get()._field_Decl.ptr())) {
							_100425_p.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(jule::new_ptr<_20d8ebb61_Sptr>(_20d8ebb61_Sptr{._field_Elem=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_99840_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_100425_p.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_99840_f.get()._field_Owner, 0)});
						};
					} else {
						_100425_p.get()._field_Kind=_20d855515_buildTypeWithGenerics(_100243_sema, _100425_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_100261_generics,_99840_f.get()._field_Refers);
						if ((_100425_p.get()._field_Kind != nullptr)) {
							_20d858b23_checkFnParamKind(_self_, _100425_p);
						} else {
							_100321_ok=false;
						};
					};
				}
				_iter_next_1c8a8247a:;
				++it;
				goto _iter_begin_1c8a8247a;
			}
			_iter_end_1c8a8247a:;
		};
		if ((!(_20cbeec56_IsVoid(_99840_f.get()._field_Decl.ptr())))) {
			_99840_f.get()._field_Result=_20d855515_buildTypeWithGenerics(_100243_sema, _99840_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_100261_generics,_99840_f.get()._field_Refers);
			_100321_ok=((_99840_f.get()._field_Result != nullptr) && _100321_ok);
		};
		return _100321_ok;;
	}));;
}



inline jule::Bool _20d8593a4_checkRefValidityForInitExpr(jule::Ptr<_20d84c199_Sema> _self_, jule::Bool _103447_leftMut, jule::Ptr<_20d8b2891_Data>& _103467_d, jule::Ptr<_20b4e5581_Token>& _103482_errorToken) {
	{
		auto &_match_expr{ _103467_d.get()._field_Model };
		
		if (_match_expr.type_is_ptr<_20d869eb9_Var>()) {
			_case_begin_1c8a87b12:;
			{
				goto _match_end_1c8a81875;
			}
		}
		else if (_match_expr.type_is_ptr<_20d810316_TraitSubIdentExprModel>()) {
			_case_begin_1c8a87b78:;
			{
				jule::Ptr<_20d810316_TraitSubIdentExprModel> _103921_model = _103467_d.get()._field_Model.operator jule::Ptr<_20d810316_TraitSubIdentExprModel>();;
				if ((!(_20d84a362_isValidModelForRef(_103921_model.get()._field_Expr)))) {
					_20d84ed5b_pushErr(_self_.ptr(), _103482_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_103921_model.get()._field_Method.get()._field_Ident)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20d810734_StructSubIdentExprModel>()) {
			_case_begin_1c8a87969:;
			{
				jule::Ptr<_20d810734_StructSubIdentExprModel> _104521_model = _103467_d.get()._field_Model.operator jule::Ptr<_20d810734_StructSubIdentExprModel>();;
				if ((!(_20d84a362_isValidModelForRef(_104521_model.get()._field_Expr.get()._field_Model)))) {
					_20d84ed5b_pushErr(_self_.ptr(), _103482_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_104521_model.get()._field_Field.get()._field_Decl.get()._field_Ident)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20d810cea_CommonIdentExprModel>() || _match_expr.type_is_ptr<_20d810ed7_CommonSubIdentExprModel>()) {
			_case_begin_1c8a879d0:;
			{
				_20d84ed5b_pushErr(_self_.ptr(), _103482_errorToken,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type_is_ptr<_20d80da0c_UnaryExprModel>()) {
			_case_begin_1c8a87172:;
			{
				jule::Ptr<_20d80da0c_UnaryExprModel> _105521_unary = _103467_d.get()._field_Model.operator jule::Ptr<_20d80da0c_UnaryExprModel>();;
				if ((_105521_unary.get()._field_Op.get()._field_Kind == jule::Str("*", 1))) {
					if ((!(_20d84a362_isValidModelForRef(_103467_d.get()._field_Model)))) {
						_20d84ed5b_pushErr(_self_.ptr(), _103482_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;;
					};
					goto _match_end_1c8a81875;
				};
				goto _case_begin_1c8a870d9;
			}
		}
		else {
			_case_begin_1c8a870d9:;
			{
				_20d84ed5b_pushErr(_self_.ptr(), _103482_errorToken,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1c8a81875:;
	};
	if ((_103447_leftMut && (!(_103467_d.get()._field_Mutable)))) {
		_20d84ed5b_pushErr(_self_.ptr(), _103482_errorToken,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _20d85997b_checkValidityForInitExpr(jule::Ptr<_20d84c199_Sema> _self_, jule::Bool _107544_leftMut, jule::Bool _107559_leftRef, jule::Ptr<_20d8e3680_TypeKind>& _107610_leftKind, jule::Ptr<_20d8b2891_Data>& _107636_d, jule::Ptr<_20b4e5581_Token>& _107651_errorToken) {
	if (((_107544_leftMut && (!(_107636_d.get()._field_Mutable))) && _20d8e4d02_Mutable(_107636_d.get()._field_Kind.ptr()))) {
		_20d84ed5b_pushErr(_self_.ptr(), _107651_errorToken,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_107636_d.get()._field_Kind.ptr()))}));
		return false;;
	};
	if (_107559_leftRef) {
		if ((!(_20d8593a4_checkRefValidityForInitExpr(_self_, _107544_leftMut,_107636_d,_107651_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_20d89d41a_assignTypeChecker> _108617_atc = jule::new_ptr<_20d89d41a_assignTypeChecker>(_20d89d41a_assignTypeChecker{._field_s=_self_, ._field_d=_107636_d, ._field_errorToken=_107651_errorToken});;
	return _20d89dae1_checkValidity(_108617_atc.ptr());;
}



inline jule::Bool _20d859d44_checkTypeAliasDeclKind(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d8e298c_TypeAlias>& _109447_ta, jule::Trait<_20d90e536_Lookup> _109467_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d8aca67_SymbolTable> _109517_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_20d84e993_setCurrentFile(_self_.ptr(), _109517_old);
	});;
	if ((_109447_ta.get()._field_Token != nullptr)) {
		jule::Ptr<_20d8aca67_SymbolTable> _110021_file = _20d84b7a3_findFile(_self_.get()._field_files,_109447_ta.get()._field_Token.get()._field_File);;
		if ((_110021_file != nullptr)) {
			_20d84e993_setCurrentFile(_self_.ptr(), _110021_file);
		};
	};
	__jule_func_result=_20d854998_checkTypeWithRefers(_self_, _109447_ta.get()._field_Kind,_109467_l,nullptr,jule::new_ptr<_20d90111b_referencer>(_20d90111b_referencer{._field_ident=_109447_ta.get()._field_Ident, ._field_owner=jule::Any(_109447_ta), ._field_refs=(&(_109447_ta.get()._field_Refers))}));
	if (((__jule_func_result && (_20d8e672c_Arr(_109447_ta.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _20d8e672c_Arr(_109447_ta.get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_20d84ed5b_pushErr(_self_.ptr(), _109447_ta.get()._field_Kind.get()._field_Decl.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _20d85a163_checkTypeAliasDecl(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d8e298c_TypeAlias>& _111743_ta, jule::Trait<_20d90e536_Lookup> _111763_l) {
	if (_20b4e7d25_IsIgnoreIdent(_111743_ta.get()._field_Ident)) {
		_20d84ed5b_pushErr(_self_.ptr(), _111743_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_20d859d44_checkTypeAliasDeclKind(_self_, _111743_ta,_111763_l);
}



inline void _20d85a3d8_checkTypeAliasDeclDup(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d8e298c_TypeAlias>& _112546_ta) {
	if (_20b4e7d25_IsIgnoreIdent(_112546_ta.get()._field_Ident)) {
		_20d84ed5b_pushErr(_self_.ptr(), _112546_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_20d850983_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_112546_ta)),_112546_ta.get()._field_Ident,_112546_ta.get()._field_CppLinked)) {
		_20d84ed5b_pushErr(_self_.ptr(), _112546_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_112546_ta.get()._field_Ident)}));
		_20d85017a_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_20d859d44_checkTypeAliasDeclKind(_self_, _112546_ta,jule::Trait<_20d90e536_Lookup>(_self_, 3));
}



inline jule::Bool _20d85a64c_checkTypeAliasDecls(jule::Ptr<_20d84c199_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1c8a99838:;
		if (it != expr.end()) {
			jule::Ptr<_20d8e298c_TypeAlias> _113821_ta = *it;
			{
				_20d85a3d8_checkTypeAliasDeclDup(_self_, _113821_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c8a99838:;
			++it;
			goto _iter_begin_1c8a99838;
		}
		_iter_end_1c8a99838:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c8aaa739_checkEnumItemsDup(_20d84c199_Sema* _self_, jule::Slice<jule::Ptr<_20d81ac8e_EnumItem>> _114939_items) {
	{
		auto &expr = _114939_items;
		auto it = expr.begin();
		_iter_begin_1c8aab96b:;
		if (it != expr.end()) {
			jule::Ptr<_20d81ac8e_EnumItem> &_115016_item = *it;
			{
				if (_115016_item.get()._field_Ident.empty()) {
					goto _iter_next_1c8aab96b;
				} else if (_20b4e7d25_IsIgnoreIdent(_115016_item.get()._field_Ident)) {
					_20d84ed5b_pushErr(&(*_self_), _115016_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _114939_items;
						auto it = expr.begin();
						_iter_begin_1c8aac708:;
						if (it != expr.end()) {
							jule::Ptr<_20d81ac8e_EnumItem> &_115624_citem = *it;
							{
								if ((_115016_item == _115624_citem)) {
									goto _iter_end_1c8aac708;
								} else if ((_115016_item.get()._field_Ident == _115624_citem.get()._field_Ident)) {
									_20d84ed5b_pushErr(&(*_self_), _115016_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_115016_item.get()._field_Ident)}));
									_20d85017a_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1c8aac708;
								};
							}
							_iter_next_1c8aac708:;
							++it;
							goto _iter_begin_1c8aac708;
						}
						_iter_end_1c8aac708:;
					};
				};
			}
			_iter_next_1c8aab96b:;
			++it;
			goto _iter_begin_1c8aab96b;
		}
		_iter_end_1c8aab96b:;
	};
}

inline void _1c8ab5ba6_checkEnumItemsDup(_20d84c199_Sema* _self_, jule::Slice<jule::Ptr<_20d81b641_TypeEnumItem>> _114939_items) {
	{
		auto &expr = _114939_items;
		auto it = expr.begin();
		_iter_begin_1c8ab6d94:;
		if (it != expr.end()) {
			jule::Ptr<_20d81b641_TypeEnumItem> &_115016_item = *it;
			{
				if (_115016_item.get()._field_Ident.empty()) {
					goto _iter_next_1c8ab6d94;
				} else if (_20b4e7d25_IsIgnoreIdent(_115016_item.get()._field_Ident)) {
					_20d84ed5b_pushErr(&(*_self_), _115016_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _114939_items;
						auto it = expr.begin();
						_iter_begin_1c8ab7b31:;
						if (it != expr.end()) {
							jule::Ptr<_20d81b641_TypeEnumItem> &_115624_citem = *it;
							{
								if ((_115016_item == _115624_citem)) {
									goto _iter_end_1c8ab7b31;
								} else if ((_115016_item.get()._field_Ident == _115624_citem.get()._field_Ident)) {
									_20d84ed5b_pushErr(&(*_self_), _115016_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_115016_item.get()._field_Ident)}));
									_20d85017a_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1c8ab7b31;
								};
							}
							_iter_next_1c8ab7b31:;
							++it;
							goto _iter_begin_1c8ab7b31;
						}
						_iter_end_1c8ab7b31:;
					};
				};
			}
			_iter_next_1c8ab6d94:;
			++it;
			goto _iter_begin_1c8ab6d94;
		}
		_iter_end_1c8ab6d94:;
	};
}



inline void _20d85ab47_checkEnumItemsStr(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d81b0ad_Enum>& _116942_e) {
	jule::Ptr<_20d8b440e_Eval> _117017_eval = _20d856747_eval(_self_, jule::Trait<_20d90e536_Lookup>(_self_, 3));;
	{
		auto &expr = _116942_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1c8a9b3c8:;
		if (it != expr.end()) {
			jule::Ptr<_20d81ac8e_EnumItem> _117121_item = *it;
			{
				if (_20d81ae7b_AutoExpr(_117121_item.ptr())) {
					_117121_item.get()._field_Value=jule::new_ptr<_20d8b3919_Value>(_20d8b3919_Value{._field_Data=jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Constant=static__20ccbec49_NewStr(_117121_item.get()._field_Ident)})});
					_117121_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_117121_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_20d8b2891_Data> _118025_d = _20d8ced31_evalExpr(_117017_eval, _117121_item.get()._field_Value.get()._field_Expr);;
					if ((_118025_d == nullptr)) {
						goto _iter_next_1c8a9b3c8;
					};
					if ((!(_20d8b3254_IsConst(_118025_d.ptr())))) {
						_20d84ed5b_pushErr(_self_.ptr(), _117121_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_20d856c42_checkAssignType(_self_, false,_116942_e.get()._field_Kind.get()._field_Kind,_118025_d,_117121_item.get()._field_Token);
					_117121_item.get()._field_Value.get()._field_Data=_118025_d;
				};
			}
			_iter_next_1c8a9b3c8:;
			++it;
			goto _iter_begin_1c8a9b3c8;
		}
		_iter_end_1c8a9b3c8:;
	};
}



inline void _20d85adbc_checkEnumItemsInt(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d81b0ad_Enum>& _119542_e) {
	jule::Ptr<_20d8e83cc_Prim> _119613_prim = _20d8e5a17_Prim(_119542_e.get()._field_Kind.get()._field_Kind.ptr());;
	jule::U64 _119717_max = static_cast<jule::U64>(_20d807819_Max(_20d8e8740_Str(_119613_prim.ptr())));;
	jule::Ptr<_20d8b440e_Eval> _119817_eval = _20d856747_eval(_self_, jule::Trait<_20d90e536_Lookup>(_self_, 3));;
	{
		auto &expr = _119542_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1c8aa080b:;
		if (it != expr.end()) {
			jule::I64 _119914_i = it - expr.begin();
			jule::Ptr<_20d81ac8e_EnumItem> _119921_item = *it;
			{
				if ((_119717_max == 0LLU)) {
					_20d84ed5b_pushErr(_self_.ptr(), _119921_item.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_119717_max)--;
				};
				if (_20d81ae7b_AutoExpr(_119921_item.ptr())) {
					_119921_item.get()._field_Value=jule::new_ptr<_20d8b3919_Value>(_20d8b3919_Value{._field_Data=jule::new_ptr<_20d8b2891_Data>()});
					{
						
						if (_20d809a6e_IsSigInt(_20d8e8740_Str(_119613_prim.ptr()))) {
							_case_begin_1c8aa3b3e:;
							{
								_119921_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__20cc98393_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((_119717_max - (_119717_max - static_cast<jule::U64>(_119914_i))))));
							}
						}
						else {
							_case_begin_1c8aa37cb:;
							{
								_119921_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__20cc7e3ac_NewU64(static_cast<jule::U64>((_119717_max - (_119717_max - static_cast<jule::U64>(_119914_i)))));
							}
						}
						_match_end_1c8aa3776:;
					};
					_119921_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_119921_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_20d8b2891_Data> _121725_d = _20d8ced31_evalExpr(_119817_eval, _119921_item.get()._field_Value.get()._field_Expr);;
					if ((_121725_d == nullptr)) {
						goto _iter_next_1c8aa080b;
					};
					if ((!(_20d8b3254_IsConst(_121725_d.ptr())))) {
						_20d84ed5b_pushErr(_self_.ptr(), _119921_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_20d856c42_checkAssignType(_self_, false,_119542_e.get()._field_Kind.get()._field_Kind,_121725_d,_119921_item.get()._field_Token);
					_119921_item.get()._field_Value.get()._field_Data=_121725_d;
				};
			}
			_iter_next_1c8aa080b:;
			++it;
			_119914_i++;
			goto _iter_begin_1c8aa080b;
		}
		_iter_end_1c8aa080b:;
	};
}



inline void _20d85b142_checkEnumDecl(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d81b0ad_Enum>& _123038_e) {
	if (_20b4e7d25_IsIgnoreIdent(_123038_e.get()._field_Ident)) {
		_20d84ed5b_pushErr(_self_.ptr(), _123038_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_20d850983_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_123038_e)),_123038_e.get()._field_Ident,false)) {
		_20d84ed5b_pushErr(_self_.ptr(), _123038_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_123038_e.get()._field_Ident)}));
		_20d85017a_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_123038_e.get()._field_Items.len() == 0LL)) {
		_20d84ed5b_pushErr(_self_.ptr(), _123038_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_123038_e.get()._field_Ident)}));
	};
	_1c8aaa739_checkEnumItemsDup(_self_.ptr(), _123038_e.get()._field_Items);
	if ((_123038_e.get()._field_Kind != nullptr)) {
		if ((!(_20d8550b4_checkType(_self_, _123038_e.get()._field_Kind,jule::Trait<_20d90e536_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_123038_e.get()._field_Kind=jule::new_ptr<_20d8e7a5d_TypeSymbol>(_20d8e7a5d_TypeSymbol{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_20d8e83cc_Prim> _125717_t = _20d8e5a17_Prim(_123038_e.get()._field_Kind.get()._field_Kind.ptr());;
	if ((_125717_t == nullptr)) {
		_20d84ed5b_pushErr(_self_.ptr(), _123038_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_20d8eb611_IsStr(_125717_t.ptr())) {
			_case_begin_1c8ab19a4:;
			{
				_20d85ab47_checkEnumItemsStr(_self_, _123038_e);
			}
		}
		else if (_20d809cd3_IsInt(_20d8e8740_Str(_125717_t.ptr()))) {
			_case_begin_1c8ab16a7:;
			{
				_20d85adbc_checkEnumItemsInt(_self_, _123038_e);
			}
		}
		else {
			_case_begin_1c8ab0b3a:;
			{
				_20d84ed5b_pushErr(_self_.ptr(), _123038_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c8ab0ad5:;
	};
}



inline void _20d85b3b7_checkTypeEnumDecl(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d81b82d_TypeEnum>& _127442_e) {
	if (_20b4e7d25_IsIgnoreIdent(_127442_e.get()._field_Ident)) {
		_20d84ed5b_pushErr(_self_.ptr(), _127442_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_20d850983_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_127442_e)),_127442_e.get()._field_Ident,false)) {
		_20d84ed5b_pushErr(_self_.ptr(), _127442_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_127442_e.get()._field_Ident)}));
		_20d85017a_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_127442_e.get()._field_Items.len() == 0LL)) {
		_20d84ed5b_pushErr(_self_.ptr(), _127442_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_127442_e.get()._field_Ident)}));
		return;;
	};
	_1c8ab5ba6_checkEnumItemsDup(_self_.ptr(), _127442_e.get()._field_Items);
	{
		auto &expr = _127442_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1c8ab910a:;
		if (it != expr.end()) {
			jule::Ptr<_20d81b641_TypeEnumItem> _128821_item = *it;
			{
				if ((_128821_item.get()._field_Kind == nullptr)) {
					_20d84ed5b_pushErr(_self_.ptr(), _128821_item.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_1c8ab910a;
				};
				jule::Bool _129317_ok = _20d8550b4_checkType(_self_, _128821_item.get()._field_Kind,jule::Trait<_20d90e536_Lookup>(_self_, 3));;
				if ((!(_129317_ok))) {
					goto _iter_next_1c8ab910a;
				};
				jule::Ptr<_20d8e83cc_Prim> _129717_p = _20d8e5a17_Prim(_128821_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_129717_p != nullptr) && _20d8eb875_IsAny(_129717_p.ptr()))) {
					_20d84ed5b_pushErr(_self_.ptr(), _128821_item.get()._field_Token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1c8ab910a:;
			++it;
			goto _iter_begin_1c8ab910a;
		}
		_iter_end_1c8ab910a:;
	};
	if ((_127442_e.get()._field_Items.len() == 1LL)) {
		jule::Ptr<_20d81b641_TypeEnumItem> _130321_item = _127442_e.get()._field_Items[0LL];;
		_20d8e3680_TypeKind _130417_tk = _20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_127442_e, 4)};;
		if (((_130321_item.get()._field_Kind.get()._field_Kind != nullptr) && _20d8e3d89_Equals(_130321_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_20d8e3680_TypeKind>)((&(_130417_tk))))))) {
			_20d84ed5b_pushErr(_self_.ptr(), _130321_item.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_20d81ba1a_Str(_127442_e.ptr()))}));
		};
	};
}



inline jule::Bool _20d85b62b_checkEnumDecls(jule::Ptr<_20d84c199_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Enums;
		auto it = expr.begin();
		_iter_begin_1c8abeeac:;
		if (it != expr.end()) {
			jule::Ptr<_20d81b0ad_Enum> _131521_e = *it;
			{
				_20d85b142_checkEnumDecl(_self_, _131521_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c8abeeac:;
			++it;
			goto _iter_begin_1c8abeeac;
		}
		_iter_end_1c8abeeac:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d85b890_checkTypeEnumDecls(jule::Ptr<_20d84c199_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1c8ac060b:;
		if (it != expr.end()) {
			jule::Ptr<_20d81b82d_TypeEnum> _132721_e = *it;
			{
				_20d85b3b7_checkTypeEnumDecl(_self_, _132721_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c8ac060b:;
			++it;
			goto _iter_begin_1c8ac060b;
		}
		_iter_end_1c8ac060b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d85bb9d_checkDeclGenerics(_20d84c199_Sema* _self_, jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>>& _133737_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _133737_generics;
		auto it = expr.begin();
		_iter_begin_1c8ac2a4d:;
		if (it != expr.end()) {
			jule::I64 _133913_i = it - expr.begin();
			jule::Ptr<_20cb965e3_GenericDecl> &_133916_g = *it;
			{
				if (_20b4e7d25_IsIgnoreIdent(_133916_g.get()._field_Ident)) {
					_20d84ed5b_pushErr(&(*_self_), _133916_g.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1c8ac2a4d;
				};
				_julec_label_duplicationLookup:;
				{
					auto &expr = _133737_generics;
					auto it = expr.begin();
					_iter_begin_1c8ac3a71:;
					if (it != expr.end()) {
						jule::I64 _134817_j = it - expr.begin();
						jule::Ptr<_20cb965e3_GenericDecl> &_134820_ct = *it;
						{
							{
								
								if ((_134817_j >= _133913_i)) {
									_case_begin_1c8ac51d2:;
									{
										goto _iter_end_1c8ac3a71;
									}
								}
								else if ((_133916_g.get()._field_Ident == _134820_ct.get()._field_Ident)) {
									_case_begin_1c8ac5259:;
									{
										_20d84ed5b_pushErr(&(*_self_), _133916_g.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_133916_g.get()._field_Ident)}));
										_20d85017a_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1c8ac3a71;
									}
								}
								_match_end_1c8ac50c2:;
							};
						}
						_iter_next_1c8ac3a71:;
						++it;
						_134817_j++;
						goto _iter_begin_1c8ac3a71;
					}
					_iter_end_1c8ac3a71:;
				};
			}
			_iter_next_1c8ac2a4d:;
			++it;
			_133913_i++;
			goto _iter_begin_1c8ac2a4d;
		}
		_iter_end_1c8ac2a4d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20d85beab_checkFnDeclParamsDup(_20d84c199_Sema* _self_, jule::Ptr<_20d814370_Fn>& _136440_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto &expr = _136440_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c8ac7558:;
		if (it != expr.end()) {
			jule::I64 _136713_i = it - expr.begin();
			jule::Ptr<_20d814183_Param> &_136716_p = *it;
			{
				{
					auto &expr = _136440_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1c8ac81e6:;
					if (it != expr.end()) {
						jule::Ptr<_20cb965e3_GenericDecl> &_136920_g = *it;
						{
							if ((_136716_p.get()._field_Ident == _136920_g.get()._field_Ident)) {
								__jule_func_result=false;
								_20d84ed5b_pushErr(&(*_self_), _136716_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136716_p.get()._field_Ident)}));
								_20d85017a_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1c8ac7558;
							};
						}
						_iter_next_1c8ac81e6:;
						++it;
						goto _iter_begin_1c8ac81e6;
					}
					_iter_end_1c8ac81e6:;
				};
				_julec_label_paramsLookup:;
				{
					auto &expr = _136440_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1c8ac8658:;
					if (it != expr.end()) {
						jule::I64 _137917_j = it - expr.begin();
						jule::Ptr<_20d814183_Param> &_137920_jp = *it;
						{
							{
								
								if ((_137917_j >= _136713_i)) {
									_case_begin_1c8aca89c:;
									{
										goto _iter_end_1c8ac8658;
									}
								}
								else if ((_20b4e80bc_IsAnonIdent(_136716_p.get()._field_Ident) || _20b4e80bc_IsAnonIdent(_137920_jp.get()._field_Ident))) {
									_case_begin_1c8aca924:;
									{
										goto _iter_end_1c8ac8658;
									}
								}
								else if ((_136716_p.get()._field_Ident == _137920_jp.get()._field_Ident)) {
									_case_begin_1c8aca99b:;
									{
										__jule_func_result=false;
										_20d84ed5b_pushErr(&(*_self_), _136716_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136716_p.get()._field_Ident)}));
										_20d85017a_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1c8ac7558;
									}
								}
								_match_end_1c8aca77b:;
							};
						}
						_iter_next_1c8ac8658:;
						++it;
						_137917_j++;
						goto _iter_begin_1c8ac8658;
					}
					_iter_end_1c8ac8658:;
				};
			}
			_iter_next_1c8ac7558:;
			++it;
			_136713_i++;
			goto _iter_begin_1c8ac7558;
		}
		_iter_end_1c8ac7558:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20d85c2b9_checkFnDeclResultDup(_20d84c199_Sema* _self_, jule::Ptr<_20d814370_Fn>& _139840_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_20cbeec56_IsVoid(_139840_f.ptr())) {
		return __jule_func_result;;
	};
	{
		auto &expr = _139840_f.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1c8acd75c:;
		if (it != expr.end()) {
			jule::I64 _140513_i = it - expr.begin();
			jule::Ptr<_20b4e5581_Token> &_140516_v = *it;
			{
				if ((_20b4e7d25_IsIgnoreIdent(_140516_v.get()._field_Kind) || _20b4e80bc_IsAnonIdent(_140516_v.get()._field_Kind))) {
					goto _iter_next_1c8acd75c;
				};
				{
					auto &expr = _139840_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1c8aceae3:;
					if (it != expr.end()) {
						jule::Ptr<_20cb965e3_GenericDecl> &_141020_g = *it;
						{
							if ((_140516_v.get()._field_Kind == _141020_g.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1c8aceae3:;
						++it;
						goto _iter_begin_1c8aceae3;
					}
					_iter_end_1c8aceae3:;
				};
				{
					auto &expr = _139840_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1c8ad0d25:;
					if (it != expr.end()) {
						jule::Ptr<_20d814183_Param> &_141620_p = *it;
						{
							if ((_140516_v.get()._field_Kind == _141620_p.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1c8ad0d25:;
						++it;
						goto _iter_begin_1c8ad0d25;
					}
					_iter_end_1c8ad0d25:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _139840_f.get()._field_Result.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1c8ad2024:;
					if (it != expr.end()) {
						jule::I64 _142417_j = it - expr.begin();
						jule::Ptr<_20b4e5581_Token> &_142420_jv = *it;
						{
							{
								
								if ((_142417_j >= _140513_i)) {
									_case_begin_1c8ad2c8e:;
									{
										goto _iter_end_1c8ad2024;
									}
								}
								else if ((_142420_jv.get()._field_Kind == _140516_v.get()._field_Kind)) {
									_case_begin_1c8ad2d16:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1c8ad2b7e:;
							};
						}
						_iter_next_1c8ad2024:;
						++it;
						_142417_j++;
						goto _iter_begin_1c8ad2024;
					}
					_iter_end_1c8ad2024:;
				};
				goto _iter_next_1c8acd75c;
				_julec_label_exist:;
				_20d84ed5b_pushErr(&(*_self_), _140516_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_140516_v.get()._field_Kind)}));
				_20d85017a_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1c8acd75c:;
			++it;
			_140513_i++;
			goto _iter_begin_1c8acd75c;
		}
		_iter_end_1c8acd75c:;
	};
	return __jule_func_result;;
}



inline void _20d85c53e_checkFnDeclPrototype(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d814370_Fn>& _144545_f) {
	if ((_144545_f.get()._field_Exceptional && _144545_f.get()._field_CppLinked)) {
		_20d84ed5b_pushErr(_self_.ptr(), _144545_f.get()._field_Token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_144545_f.get()._field_Exceptional) {
		if (_20cc3a258_IsEntryPoint(_144545_f.ptr())) {
			_20d84ed5b_pushErr(_self_.ptr(), _144545_f.get()._field_Token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_20cbe0d35_IsInit(_144545_f.ptr())) {
			_20d84ed5b_pushErr(_self_.ptr(), _144545_f.get()._field_Token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_20d85bb9d_checkDeclGenerics(_self_.ptr(), _144545_f.get()._field_Generics)))) {
			_case_begin_1c8ad5ea1:;
		}
		else if ((!(_20d85beab_checkFnDeclParamsDup(_self_.ptr(), _144545_f)))) {
			_case_begin_1c8ad6028:;
		}
		else if ((!(_20d85c2b9_checkFnDeclResultDup(_self_.ptr(), _144545_f)))) {
			_case_begin_1c8ad7359:;
		}
		_match_end_1c8ad5d6e:;
	};
}



inline void _20d85c7b4_checkTraitDeclMethod(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d814370_Fn>& _146645_f) {
	if (_20b4e7d25_IsIgnoreIdent(_146645_f.get()._field_Ident)) {
		_20d84ed5b_pushErr(_self_.ptr(), _146645_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_146645_f.get()._field_sema=_self_;
	_20d85c53e_checkFnDeclPrototype(_self_, _146645_f);
	jule::Ptr<_20d814749_FnIns> _147317_ins = _20cc00383_instance(_146645_f);;
	_20d858e31_reloadFnInsTypes(_self_, _147317_ins);
	_147317_ins.get()._field_reloaded=true;
	_20cbde350_appendInstance(_146645_f.ptr(), _147317_ins);
}



inline void _20d85ca39_checkTraitDeclMethods(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d81a3ed_Trait>& _147946_t) {
	{
		auto &expr = _147946_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c8ada846:;
		if (it != expr.end()) {
			jule::I64 _148014_i = it - expr.begin();
			jule::Ptr<_20d814370_Fn> _148021_f = *it;
			{
				_20d85c7b4_checkTraitDeclMethod(_self_, _148021_f);
				_147946_t.get()._field_Mutable=(_147946_t.get()._field_Mutable || _148021_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto &expr = _147946_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1c8adc87b:;
					if (it != expr.end()) {
						jule::I64 _149117_j = it - expr.begin();
						jule::Ptr<_20d814370_Fn> _149120_jf = *it;
						{
							{
								
								if ((_149117_j >= _148014_i)) {
									_case_begin_1c8add618:;
									{
										goto _iter_end_1c8adc87b;
									}
								}
								else if ((_148021_f.get()._field_Ident == _149120_jf.get()._field_Ident)) {
									_case_begin_1c8add690:;
									{
										_20d84ed5b_pushErr(_self_.ptr(), _148021_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_148021_f.get()._field_Ident)}));
										_20d85017a_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1c8adc87b;
									}
								}
								_match_end_1c8add508:;
							};
						}
						_iter_next_1c8adc87b:;
						++it;
						_149117_j++;
						goto _iter_begin_1c8adc87b;
					}
					_iter_end_1c8adc87b:;
				};
			}
			_iter_next_1c8ada846:;
			++it;
			_148014_i++;
			goto _iter_begin_1c8ada846;
		}
		_iter_end_1c8ada846:;
	};
}



inline void _20d85ccae_checkTraitDecl(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d81a3ed_Trait>& _151039_t) {
	if (_20b4e7d25_IsIgnoreIdent(_151039_t.get()._field_Ident)) {
		_20d84ed5b_pushErr(_self_.ptr(), _151039_t.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_20d850983_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_151039_t)),_151039_t.get()._field_Ident,false)) {
		_20d84ed5b_pushErr(_self_.ptr(), _151039_t.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_151039_t.get()._field_Ident)}));
		_20d85017a_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_20d85ca39_checkTraitDeclMethods(_self_, _151039_t);
}



inline jule::Bool _20d85d023_checkTraitDecls(jule::Ptr<_20d84c199_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1c8ae25b7:;
		if (it != expr.end()) {
			jule::Ptr<_20d81a3ed_Trait> _152321_t = *it;
			{
				_20d85ccae_checkTraitDecl(_self_, _152321_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c8ae25b7:;
			++it;
			goto _iter_begin_1c8ae25b7;
		}
		_iter_end_1c8ae25b7:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d85d3ca_checkTraitImplMethods(_20d84c199_Sema* _self_, jule::Ptr<_20d81a3ed_Trait>& _153345_base, jule::Ptr<_20d8207dd_Impl>& _153360_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _153360_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c8ae40ad:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> &_153516_f = *it;
			{
				if ((_20d81a981_FindMethod(_153345_base.ptr(), _153516_f.get()._field_Ident) == nullptr)) {
					_20d84ed5b_pushErr(&(*_self_), _153516_f.get()._field_Token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_153345_base.get()._field_Ident),jule::Any(_153516_f.get()._field_Ident)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1c8ae40ad:;
			++it;
			goto _iter_begin_1c8ae40ad;
		}
		_iter_end_1c8ae40ad:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20d85d782_implToStruct(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cba59dc_Struct>& _154437_dest, jule::Ptr<_20d8207dd_Impl>& _154457_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _154457_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c8ae6379:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> _154821_f = *it;
			{
				if (((_20cb61e60_FindMethod(_154437_dest.ptr(), _154821_f.get()._field_Ident,_154821_f.get()._field_Statically) != nullptr) || (_20cb64517_FindField(_154437_dest.ptr(), _154821_f.get()._field_Ident) != nullptr))) {
					_20d84ed5b_pushErr(_self_.ptr(), _154821_f.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154437_dest.get()._field_Ident),jule::Any(_154821_f.get()._field_Ident)}));
					__jule_func_result=false;
					goto _iter_next_1c8ae6379;
				};
				if (((_154437_dest.get()._field_Generics.len() > 0LL) && (_154821_f.get()._field_Generics.len() > 0LL))) {
					{
						auto &expr = _154821_f.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1c8ae8942:;
						if (it != expr.end()) {
							jule::Ptr<_20cb965e3_GenericDecl> _155624_fg = *it;
							{
								{
									auto &expr = _154437_dest.get()._field_Generics;
									auto it = expr.begin();
									_iter_begin_1c8ae9239:;
									if (it != expr.end()) {
										jule::Ptr<_20cb965e3_GenericDecl> _155728_dg = *it;
										{
											if ((_155624_fg.get()._field_Ident == _155728_dg.get()._field_Ident)) {
												_20d84ed5b_pushErr(_self_.ptr(), _155624_fg.get()._field_Token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1c8ae9239:;
										++it;
										goto _iter_begin_1c8ae9239;
									}
									_iter_end_1c8ae9239:;
								};
							}
							_iter_next_1c8ae8942:;
							++it;
							goto _iter_begin_1c8ae8942;
						}
						_iter_end_1c8ae8942:;
					};
				};
				_20d850ca2_checkDirectives(_self_, _154821_f.get()._field_Directives,jule::Any(_154821_f));
				_154821_f.get()._field_sema=_self_;
				_154821_f.get()._field_Owner=_154437_dest;
				_154437_dest.get()._field_Methods = jule::alloc_for_append(_154437_dest.get()._field_Methods,1);_154437_dest.get()._field_Methods.__push(_154821_f);;
			}
			_iter_next_1c8ae6379:;
			++it;
			goto _iter_begin_1c8ae6379;
		}
		_iter_end_1c8ae6379:;
	};
	{
		auto &expr = _154457_ipl.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_1c8aeb967:;
		if (it != expr.end()) {
			jule::Ptr<_20d869eb9_Var> _157321_v = *it;
			{
				;
				if (((_20cb61e60_FindMethod(_154437_dest.ptr(), _157321_v.get()._field_Ident,true) != nullptr) || (_20cb650b7_FindStatic(_154437_dest.ptr(), _157321_v.get()._field_Ident) != nullptr))) {
					_20d84ed5b_pushErr(_self_.ptr(), _157321_v.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154437_dest.get()._field_Ident),jule::Any(_157321_v.get()._field_Ident)}));
					__jule_func_result=false;
					goto _iter_next_1c8aeb967;
				};
				_154437_dest.get()._field_Statics = jule::alloc_for_append(_154437_dest.get()._field_Statics,1);_154437_dest.get()._field_Statics.__push(_157321_v);;
			}
			_iter_next_1c8aeb967:;
			++it;
			goto _iter_begin_1c8aeb967;
		}
		_iter_end_1c8aeb967:;
	};
	return __jule_func_result;;
}



inline void _20d85da07_implTrait(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d8207dd_Impl>& _158634_decl) {
	jule::Ptr<_20d8e3680_TypeKind> _158717_base_t = _20d855b31_selectType(_self_, _158634_decl.get()._field_Base);;
	if ((_158717_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_20d81a3ed_Trait> _159117_base = _20d8e71cd_Trait(_158717_base_t.ptr());;
	if ((_159117_base == nullptr)) {
		_20d84ed5b_pushErr(_self_.ptr(), _158634_decl.get()._field_Base.get()._field_Token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_158717_base_t.ptr()))}));
		_20d85017a_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20d8e3680_TypeKind> _159817_destT = _20d855b31_selectType(_self_, _158634_decl.get()._field_Dest);;
	if ((_159817_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_20cba5db6_StructIns> _160217_destS = _20d8e6e69_Struct(_159817_destT.ptr());;
	if ((_160217_destS == nullptr)) {
		_20d84ed5b_pushErr(_self_.ptr(), _158634_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_159817_destT.ptr()))}));
		_20d85017a_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20cba59dc_Struct> _160917_dest = _160217_destS.get()._field_Decl;;
	if ((_20b4eb312_Dir(_160917_dest.get()._field_Token.get()._field_File.ptr()) != _20b4eb312_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_20d84ed5b_pushErr(_self_.ptr(), _158634_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_159117_base.get()._field_Implemented = jule::alloc_for_append(_159117_base.get()._field_Implemented,1);_159117_base.get()._field_Implemented.__push(_160917_dest);;
	_160917_dest.get()._field_Implements = jule::alloc_for_append(_160917_dest.get()._field_Implements,1);_160917_dest.get()._field_Implements.__push(_159117_base);;
	if ((_158634_decl.get()._field_Statics.len() > 0LL)) {
		_20d84ed5b_pushErr(_self_.ptr(), _158634_decl.get()._field_Statics[0LL].get()._field_Token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_20d85d3ca_checkTraitImplMethods(_self_.ptr(), _159117_base,_158634_decl)))) {
			_case_begin_1c8b05e9e:;
			{
				return;;
			}
		}
		else if ((!(_20d85d782_implToStruct(_self_, _160917_dest,_158634_decl)))) {
			_case_begin_1c8b06026:;
			{
				return;;
			}
		}
		_match_end_1c8b05410:;
	};
}



inline void _20d85dc7c_implStruct(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d8207dd_Impl>& _163135_decl) {
	jule::Ptr<_20d8e3680_TypeKind> _163217_destT = _20d855b31_selectType(_self_, _163135_decl.get()._field_Dest);;
	if ((_163217_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_20cba5db6_StructIns> _163617_destS = _20d8e6e69_Struct(_163217_destT.ptr());;
	if ((_163617_destS == nullptr)) {
		_20d84ed5b_pushErr(_self_.ptr(), _163135_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_163217_destT.ptr()))}));
		_20d85017a_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20cba59dc_Struct> _164317_dest = _163617_destS.get()._field_Decl;;
	if ((_20b4eb312_Dir(_164317_dest.get()._field_Token.get()._field_File.ptr()) != _20b4eb312_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_20d84ed5b_pushErr(_self_.ptr(), _163135_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_20d85d782_implToStruct(_self_, _164317_dest,_163135_decl)))) {
			_case_begin_1c8b0a800:;
			{
				return;;
			}
		}
		_match_end_1c8b0804a:;
	};
}



inline void _20d85e002_implImpl(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d8207dd_Impl>& _165633_decl) {
	{
		
		if (_20d820bd9_IsTraitImpl(_165633_decl.ptr())) {
			_case_begin_1c8b0b405:;
			{
				_20d85da07_implTrait(_self_, _165633_decl);
			}
		}
		else if (_20d820e4d_IsStructImpl(_165633_decl.ptr())) {
			_case_begin_1c8b0b47c:;
			{
				_20d85dc7c_implStruct(_self_, _165633_decl);
			}
		}
		_match_end_1c8b0b2e5:;
	};
}



inline void _20d85e321_checkVarDecl(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d869eb9_Var>& _166737_decl, jule::Trait<_20d90e536_Lookup> _166753_l) {
	if (_20b4e7d25_IsIgnoreIdent(_166737_decl.get()._field_Ident)) {
		_20d84ed5b_pushErr(_self_.ptr(), _166737_decl.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_20d86a5e6_IsTypeInferred(_166737_decl.ptr())) {
		if ((!(_20d86a382_IsInitialized(_166737_decl.ptr())))) {
			_20d84ed5b_pushErr(_self_.ptr(), _166737_decl.get()._field_Token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_20d8550b4_checkType(_self_, _166737_decl.get()._field_Kind,_166753_l);
	};
	if ((_166737_decl.get()._field_Constant && _166737_decl.get()._field_Reference)) {
		_20d84ed5b_pushErr(_self_.ptr(), _166737_decl.get()._field_Token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_20d86a382_IsInitialized(_166737_decl.ptr())))) {
		if (_166737_decl.get()._field_Constant) {
			_20d84ed5b_pushErr(_self_.ptr(), _166737_decl.get()._field_Token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_166737_decl.get()._field_Statically) {
			_20d84ed5b_pushErr(_self_.ptr(), _166737_decl.get()._field_Token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_166737_decl.get()._field_Reference) {
			_20d84ed5b_pushErr(_self_.ptr(), _166737_decl.get()._field_Token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _20d85e596_checkGlobalVarDecl(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d869eb9_Var>& _169943_decl) {
	if (_20d850983_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_169943_decl)),_169943_decl.get()._field_Ident,_169943_decl.get()._field_CppLinked)) {
		_20d84ed5b_pushErr(_self_.ptr(), _169943_decl.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_169943_decl.get()._field_Ident)}));
		_20d85017a_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_169943_decl.get()._field_CppLinked && _169943_decl.get()._field_Constant)) {
		_20d84ed5b_pushErr(_self_.ptr(), _169943_decl.get()._field_Token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_169943_decl.get()._field_CppLinked)) && (!(_169943_decl.get()._field_Constant))) && (!(_169943_decl.get()._field_Statically)))) {
		_20d84ed5b_pushErr(_self_.ptr(), _169943_decl.get()._field_Token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_20d85017a_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_20d850ca2_checkDirectives(_self_, _169943_decl.get()._field_Directives,jule::Any(_169943_decl));
	_20d85e321_checkVarDecl(_self_, _169943_decl,jule::Trait<_20d90e536_Lookup>(_self_, 3));
}



inline jule::Bool _20d85e80a_checkGlobalDecls(jule::Ptr<_20d84c199_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1c8b15cb1:;
		if (it != expr.end()) {
			jule::Ptr<_20d869eb9_Var> _171721_decl = *it;
			{
				_20d85e596_checkGlobalVarDecl(_self_, _171721_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c8b15cb1:;
			++it;
			goto _iter_begin_1c8b15cb1;
		}
		_iter_end_1c8b15cb1:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d85ebb2_checkStructTraitImpl(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cba59dc_Struct>& _172745_strct, jule::Ptr<_20d81a3ed_Trait>& _172766_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _172766_trt.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c8b17554:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> _172821_tf = *it;
			{
				jule::Bool _172921_exist = false;;
				jule::Ptr<_20d814370_Fn> _173021_sf = _20cb61e60_FindMethod(_172745_strct.ptr(), _172821_tf.get()._field_Ident,_172821_tf.get()._field_Statically);;
				jule::Ptr<_20d814749_FnIns> _173117_tfK = _20d857b44_getTraitCheckFnKind(_self_, _172821_tf);;
				if ((_173021_sf != nullptr)) {
					jule::Ptr<_20d814749_FnIns> _173325_sfK = _20d857b44_getTraitCheckFnKind(_self_, _173021_sf);;
					_172921_exist=(((_173117_tfK.get()._field_Decl.get()._field_Public == _173325_sfK.get()._field_Decl.get()._field_Public) && (_173117_tfK.get()._field_Decl.get()._field_Ident == _173325_sfK.get()._field_Decl.get()._field_Ident)) && _20d814b9a_equalsTrait(_173117_tfK, _173325_sfK));
				};
				if (_172921_exist) {
					jule::Ptr<_20cb511e6_Directive> _173921_d = _20d8d7ec1_findDirective(_173021_sf.get()._field_Directives,jule::Str("deprecated", 10));;
					if ((_173921_d != nullptr)) {
						_20d84ed5b_pushErr(_self_.ptr(), _173921_d.get()._field_Tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					jule::Str _174625_s = _20d8152a5_GetKindStr(_173117_tfK.ptr(), true);;
					if (_172821_tf.get()._field_Public) {
						(_174625_s).buffer.insert(0, (jule::Str()));;
					};
					_20d84ed5b_pushErr(_self_.ptr(), _172745_strct.get()._field_Token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_172766_trt.get()._field_Ident),jule::Any(_174625_s)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1c8b17554:;
			++it;
			goto _iter_begin_1c8b17554;
		}
		_iter_end_1c8b17554:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20d85eec0_checkStructImpls(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cba59dc_Struct>& _175741_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _175741_s.get()._field_Implements;
		auto it = expr.begin();
		_iter_begin_1c8b1de51:;
		if (it != expr.end()) {
			jule::Ptr<_20d81a3ed_Trait> _175921_trt = *it;
			{
				__jule_func_result=(_20d85ebb2_checkStructTraitImpl(_self_, _175741_s,_175921_trt) && __jule_func_result);
			}
			_iter_next_1c8b1de51:;
			++it;
			goto _iter_begin_1c8b1de51;
		}
		_iter_end_1c8b1de51:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _20d8602cd_checkStructFields(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cba59dc_Struct>& _176542_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _176542_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c8b202d7:;
		if (it != expr.end()) {
			jule::Ptr<_20cb79a49_Field> _176721_f = *it;
			{
				_176721_f.get()._field_Owner=_176542_st;
				{
					auto &expr = _176542_st.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1c8b20d65:;
					if (it != expr.end()) {
						jule::Ptr<_20cb79a49_Field> _176920_cf = *it;
						{
							if ((_176721_f == _176920_cf)) {
								goto _iter_end_1c8b20d65;
							} else if ((_176721_f.get()._field_Ident == _176920_cf.get()._field_Ident)) {
								_20d84ed5b_pushErr(_self_.ptr(), _176721_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_176721_f.get()._field_Ident)}));
								_20d85017a_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1c8b20d65:;
						++it;
						goto _iter_begin_1c8b20d65;
					}
					_iter_end_1c8b20d65:;
				};
			}
			_iter_next_1c8b202d7:;
			++it;
			goto _iter_begin_1c8b202d7;
		}
		_iter_end_1c8b202d7:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _20d860553_checkStructDecl(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cba59dc_Struct>& _178240_s) {
	if (_20b4e7d25_IsIgnoreIdent(_178240_s.get()._field_Ident)) {
		_20d84ed5b_pushErr(_self_.ptr(), _178240_s.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_20d850983_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_178240_s)),_178240_s.get()._field_Ident,_178240_s.get()._field_CppLinked)) {
		_20d84ed5b_pushErr(_self_.ptr(), _178240_s.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_178240_s.get()._field_Ident)}));
		_20d85017a_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_20d850ca2_checkDirectives(_self_, _178240_s.get()._field_Directives,jule::Any(_178240_s));
	{
		
		if ((!(_20d85bb9d_checkDeclGenerics(_self_.ptr(), _178240_s.get()._field_Generics)))) {
			_case_begin_1c8b22c35:;
		}
		else if ((!(_20d8602cd_checkStructFields(_self_, _178240_s)))) {
			_case_begin_1c8b24b6b:;
		}
		else if ((!(_20d85eec0_checkStructImpls(_self_, _178240_s)))) {
			_case_begin_1c8b24bd2:;
		}
		_match_end_1c8b24a5b:;
	};
}



inline jule::Bool _20d8607b7_checkStructDecls(jule::Ptr<_20d84c199_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c8b25e58:;
		if (it != expr.end()) {
			jule::Ptr<_20cba59dc_Struct> _180121_s = *it;
			{
				_20d860553_checkStructDecl(_self_, _180121_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c8b25e58:;
			++it;
			goto _iter_begin_1c8b25e58;
		}
		_iter_end_1c8b25e58:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _20d860a3c_checkFnDecl(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d814370_Fn>& _181136_f) {
	if (_20b4e7d25_IsIgnoreIdent(_181136_f.get()._field_Ident)) {
		_20d84ed5b_pushErr(_self_.ptr(), _181136_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_20d850ca2_checkDirectives(_self_, _181136_f.get()._field_Directives,jule::Any(_181136_f));
	_181136_f.get()._field_sema=_self_;
	_20d85c53e_checkFnDeclPrototype(_self_, _181136_f);
	if (_20d850983_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_181136_f)),_181136_f.get()._field_Ident,_181136_f.get()._field_CppLinked)) {
		if ((_181136_f.get()._field_Ident == jule::Str("init", 4))) {
			jule::Ptr<_20d814370_Fn> _182321_init = _20d84d992_FindFn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_182321_init != nullptr)) {
				return;;
			};
		};
		_20d84ed5b_pushErr(_self_.ptr(), _181136_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_181136_f.get()._field_Ident)}));
		_20d85017a_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _20d860ca1_checkFnDecls(jule::Ptr<_20d84c199_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c8b2ada3:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> _183521_f = *it;
			{
				_20d860a3c_checkFnDecl(_self_, _183521_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c8b2ada3:;
			++it;
			goto _iter_begin_1c8b2ada3;
		}
		_iter_end_1c8b2ada3:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _20d861169_pushCycleError(_20d84c199_Sema* _self_, jule::Ptr<_20cba59dc_Struct>& _184530_st1, jule::Ptr<_20cba59dc_Struct>& _184545_st2, jule::Str& _184564_message) {
	;
	jule::Str _184713_refers_to = _20b1bc456_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_184530_st1.get()._field_Ident),jule::Any(_184545_st2.get()._field_Ident)}));;
	(_184564_message).buffer.insert(0, (((_20b11c7b3_Repeat(jule::Str(" ", 1),4LL) + _184713_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _20d8615ba_checkCrossCycle(_20d84c199_Sema* _self_, jule::Ptr<_20cba59dc_Struct>& _185131_st1, jule::Ptr<_20cba59dc_Struct>& _185146_st2, jule::Str& _185165_message) {
	{
		auto &expr = _185146_st2.get()._field_Uses;
		auto it = expr.begin();
		_iter_begin_1c8b2e14d:;
		if (it != expr.end()) {
			jule::Ptr<_20cba59dc_Struct> &_185216_u = *it;
			{
				if ((_185216_u == _185131_st1)) {
					_20d861169_pushCycleError(&(*_self_), _185146_st2,_185216_u,_185165_message);
					return false;;
				};
				if ((!(_20d8615ba_checkCrossCycle(&(*_self_), _185131_st1,_185216_u,_185165_message)))) {
					_20d861169_pushCycleError(&(*_self_), _185146_st2,_185216_u,_185165_message);
					return false;;
				};
			}
			_iter_next_1c8b2e14d:;
			++it;
			goto _iter_begin_1c8b2e14d;
		}
		_iter_end_1c8b2e14d:;
	};
	return true;;
}



inline jule::Bool _20d861a3d_checkStructDeriveIllegalCycles(_20d84c199_Sema* _self_, jule::Str _186649_derive, jule::Ptr<_20cba59dc_Struct>& _186663_st1, jule::Ptr<_20d8e3680_TypeKind>& _186682_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20cba59dc_Struct> _186717_st2 = _20d90bb4e_getStructFromKind(_186682_k);;
	if ((_186717_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((_186663_st1 == _186717_st2)) {
		_20d84ed5b_pushErr(&(*_self_), _186663_st1.get()._field_Token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_186649_derive),jule::Any(_186663_st1.get()._field_Ident)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _187917_message = jule::Str();;
	if ((!(_20d8615ba_checkCrossCycle(&(*_self_), _186663_st1,_186717_st2,_187917_message)))) {
		jule::Str _188121_errMsg = _187917_message;;
		_187917_message=jule::Str();
		_20d861169_pushCycleError(&(*_self_), _186663_st1,_186717_st2,_187917_message);
		_188121_errMsg+=_187917_message;
		_20d84ed5b_pushErr(&(*_self_), _186663_st1.get()._field_Token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_186649_derive),jule::Any(_188121_errMsg)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d861d7e_checkStructInsDeriveClone(_20d84c199_Sema* _self_, jule::Ptr<_20cba5db6_StructIns> _189148_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_20cb65bde_IsDerives(_189148_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &expr = _189148_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c8b349c2:;
		if (it != expr.end()) {
			jule::Ptr<_20cba5bc9_FieldIns> _189521_f = *it;
			{
				if ((_189521_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1c8b349c2;
				};
				if ((!(_20d8e553e_SupportsCloning(_189521_f.get()._field_Kind.ptr())))) {
					_20d84ed5b_pushErr(&(*_self_), _189148_st.get()._field_Decl.get()._field_Token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_189521_f.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_20d861a3d_checkStructDeriveIllegalCycles(&(*_self_), jule::Str("Clone", 5),_189148_st.get()._field_Decl,_189521_f.get()._field_Kind)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c8b349c2:;
			++it;
			goto _iter_begin_1c8b349c2;
		}
		_iter_end_1c8b349c2:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _20d86206b_checkPackageDecls(jule::Ptr<_20d84c199_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c8b34818:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _191321_f = *it;
			{
				_20d84e993_setCurrentFile(_self_.ptr(), _191321_f);
				if ((!(_20d85b890_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_20d85a64c_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c8b34818:;
			++it;
			goto _iter_begin_1c8b34818;
		}
		_iter_end_1c8b34818:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c8b32edc:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _192321_f = *it;
			{
				_20d84e993_setCurrentFile(_self_.ptr(), _192321_f);
				if ((!(_20d85d023_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c8b32edc:;
			++it;
			goto _iter_begin_1c8b32edc;
		}
		_iter_end_1c8b32edc:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c8b3891b:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _193021_f = *it;
			{
				_20d84e993_setCurrentFile(_self_.ptr(), _193021_f);
				if ((!(_20d85e80a_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c8b3891b:;
			++it;
			goto _iter_begin_1c8b3891b;
		}
		_iter_end_1c8b3891b:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c8b38e16:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _193721_f = *it;
			{
				_20d84e993_setCurrentFile(_self_.ptr(), _193721_f);
				{
					
					if ((!(_20d860ca1_checkFnDecls(_self_)))) {
						_case_begin_1c8b3aeb2:;
					}
					else if ((!(_20d8607b7_checkStructDecls(_self_)))) {
						_case_begin_1c8b3b028:;
					}
					else {
						_case_begin_1c8b3ae4b:;
						{
							goto _iter_next_1c8b38e16;
						}
					}
					_match_end_1c8b3add5:;
				};
				return;;
			}
			_iter_next_1c8b38e16:;
			++it;
			goto _iter_begin_1c8b38e16;
		}
		_iter_end_1c8b38e16:;
	};
}



inline void _20d8623ac_checkDataForTypeInference(_20d84c199_Sema* _self_, jule::Ptr<_20d8b2891_Data>& _194945_d, jule::Ptr<_20b4e5581_Token>& _194956_err_token) {
	{
		
		if (_20d8b2c7b_IsNil(_194945_d.ptr())) {
			_case_begin_1c8b3be6e:;
			{
				_20d84ed5b_pushErr(&(*_self_), _194956_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_20d8b2ee0_IsVoid(_194945_d.ptr())) {
			_case_begin_1c8b3bee6:;
			{
				_20d84ed5b_pushErr(&(*_self_), _194956_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_194945_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1c8b3c06d:;
			{
				_20d84ed5b_pushErr(&(*_self_), _194956_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c8b3bd4d:;
	};
}



inline void _20d862643_checkVar(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d869eb9_Var>& _196033_v) {
	if (_196033_v.get()._field_CppLinked) {
		return;;
	};
	if (_20d86a5e6_IsTypeInferred(_196033_v.ptr())) {
		_196033_v.get()._field_Kind=jule::new_ptr<_20d8e7a5d_TypeSymbol>(_20d8e7a5d_TypeSymbol{._field_Kind=_196033_v.get()._field_Value.get()._field_Data.get()._field_Kind});
		_20d8623ac_checkDataForTypeInference(_self_.ptr(), _196033_v.get()._field_Value.get()._field_Data,_196033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		_20d85997b_checkValidityForInitExpr(_self_, _196033_v.get()._field_Mutable,_196033_v.get()._field_Reference,_196033_v.get()._field_Kind.get()._field_Kind,_196033_v.get()._field_Value.get()._field_Data,_196033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
	} else {
		jule::Ptr<_20d8ee768_Arr> _197721_arr = _20d8e672c_Arr(_196033_v.get()._field_Kind.get()._field_Kind.ptr());;
		if ((_197721_arr != nullptr)) {
			if (_197721_arr.get()._field_Auto) {
				jule::Ptr<_20d8ee768_Arr> _198025_dataArr = _20d8e672c_Arr(_196033_v.get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_198025_dataArr != nullptr)) {
					_197721_arr.get()._field_N=_198025_dataArr.get()._field_N;
				};
			};
		};
		if (_20d856c42_checkAssignType(_self_, _196033_v.get()._field_Reference,_196033_v.get()._field_Kind.get()._field_Kind,_196033_v.get()._field_Value.get()._field_Data,_196033_v.get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_20d85997b_checkValidityForInitExpr(_self_, _196033_v.get()._field_Mutable,_196033_v.get()._field_Reference,_196033_v.get()._field_Kind.get()._field_Kind,_196033_v.get()._field_Value.get()._field_Data,_196033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		};
	};
	if ((_196033_v.get()._field_Reference && (!(_20d90aeb1_isValidForRef(_196033_v.get()._field_Kind.get()._field_Kind))))) {
		_20d84ed5b_pushErr(_self_.ptr(), _196033_v.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_196033_v.get()._field_Kind.get()._field_Kind.ptr()))}));
	};
	if (_196033_v.get()._field_Constant) {
		if ((!(_20d8b3254_IsConst(_196033_v.get()._field_Value.get()._field_Data.ptr())))) {
			_20d84ed5b_pushErr(_self_.ptr(), _196033_v.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_196033_v.get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_20d8e76a6_Tup(_196033_v.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		_196033_v.get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _20d862962_checkTypeVar(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d869eb9_Var>& _201537_decl, jule::Trait<_20d90e536_Lookup> _201553_l) {
	if ((_201537_decl.get()._field_CppLinked || (!(_20d86a382_IsInitialized(_201537_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_20d8b440e_Eval> _202017_eval = nullptr;;
	if ((_201537_decl.get()._field_Kind != nullptr)) {
		_202017_eval=_20d856082_evalpd(_self_, _201553_l,_201537_decl.get()._field_Kind.get()._field_Kind,_201537_decl);
	} else {
		_202017_eval=_20d856082_evalpd(_self_, _201553_l,nullptr,_201537_decl);
	};
	_202017_eval.get()._field_immutable=(!(_201537_decl.get()._field_Mutable));
	_201537_decl.get()._field_Value.get()._field_Data=_20d8ced31_evalExpr(_202017_eval, _201537_decl.get()._field_Value.get()._field_Expr);
	if ((_201537_decl.get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_20d862643_checkVar(_self_, _201537_decl);
}



inline void _20d862b3d_checkGlobalTypes(jule::Ptr<_20d84c199_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1c8b4b0c1:;
		if (it != expr.end()) {
			jule::Ptr<_20d869eb9_Var> _203621_decl = *it;
			{
				if (((_20d86a382_IsInitialized(_203621_decl.ptr()) && (_203621_decl.get()._field_Value.get()._field_Data == nullptr)) || (_20d86a5e6_IsTypeInferred(_203621_decl.ptr()) && (_203621_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_20d862962_checkTypeVar(_self_, _203621_decl,jule::Trait<_20d90e536_Lookup>(_self_, 3));
				};
			}
			_iter_next_1c8b4b0c1:;
			++it;
			goto _iter_begin_1c8b4b0c1;
		}
		_iter_end_1c8b4b0c1:;
	};
}



inline jule::Ptr<_20d814749_FnIns> _20d862ee5_readyToCheckFn(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cba5db6_StructIns>& _204739_s, jule::Ptr<_20d814370_Fn>& _204759_f) {
	jule::Ptr<_20d814749_FnIns> _204817_ins = _20cc00383_instance(_204759_f);;
	if ((_204759_f.get()._field_Instances.len() != 0LL)) {
		return _204817_ins;;
	};
	_204817_ins.get()._field_Owner=_204739_s;
	_20cbde350_appendInstance(_204759_f.ptr(), _204817_ins);
	_204817_ins.get()._field_reloaded=true;
	if (_20d858e31_reloadFnInsTypes(_self_, _204817_ins)) {
		return _204817_ins;;
	};
	return nullptr;;
}



inline void _20d863314_checkTypeMethod(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cba5db6_StructIns>& _206140_s, jule::Ptr<_20d814370_Fn>& _206160_f) {
	if ((_206160_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_20d814749_FnIns> _206617_ins = _206160_f.get()._field_Instances[0LL];;
	if ((_206617_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_20d8659dc_checkFnIns(_self_, _206617_ins);
}



inline jule::Ptr<_20d814749_FnIns> _20d863765_checkStructInsOp(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cba5db6_StructIns>& _207441_s, jule::Ptr<_20d814370_Fn>& _207461_f, jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)> _207469_p) {
	if ((((_207461_f == nullptr) || (_207461_f.get()._field_Generics.len() > 0LL)) || (!(_207469_p(_207461_f))))) {
		return nullptr;;
	};
	return _207461_f.get()._field_Instances[0LL];;
}



inline jule::Bool _20d863b1c_checkStructEnv(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cba5db6_StructIns>& _208439_s, jule::Ptr<_20b4e5581_Token> _208458_errorToken) {
	jule::Bool __jule_func_result = false;
	_20d901e30_typeChecker _208517_tc = _20d901e30_typeChecker{._field_s=_208439_s.get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_20d90e536_Lookup>(_208439_s.get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_20d90e536_Lookup>(_208439_s.get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_20d90111b_referencer>(_20d90111b_referencer{._field_ident=_208439_s.get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any(_208439_s.get()._field_Decl), }), ._field_refers=_208439_s.get()._field_Refers, };;
	if ((_208439_s.get()._field_Generics.len() > 0LL)) {
		_208517_tc._field_useGenerics=jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>::alloc(0LL, _208439_s.get()._field_Generics.len());
		{
			auto &expr = _208439_s.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1c8b55691:;
			if (it != expr.end()) {
				jule::I64 _209818_i = it - expr.begin();
				jule::Ptr<_20d8e1e53_InsGeneric> _209825_g = *it;
				{
					jule::Ptr<_20cb965e3_GenericDecl> _209925_decl = _208439_s.get()._field_Decl.get()._field_Generics[_209818_i];;
					_208517_tc._field_useGenerics = jule::alloc_for_append(_208517_tc._field_useGenerics,1);_208517_tc._field_useGenerics.__push(jule::new_ptr<_20d8e298c_TypeAlias>(_20d8e298c_TypeAlias{._field_Token=_209925_decl.get()._field_Token, ._field_Ident=_209925_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_20d8e7a5d_TypeSymbol>(_20d8e7a5d_TypeSymbol{._field_Kind=_209825_g.get()._field_Kind}), }));;
				}
				_iter_next_1c8b55691:;
				++it;
				_209818_i++;
				goto _iter_begin_1c8b55691;
			}
			_iter_end_1c8b55691:;
		};
	};
	jule::Ptr<_20d8aca67_SymbolTable> _210817_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_20d84e993_setCurrentFile(_self_.ptr(), _210817_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != _208439_s.get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_20d8aca67_SymbolTable> _211221_file = _20d84b7a3_findFile(_self_.get()._field_files,_208439_s.get()._field_Decl.get()._field_Token.get()._field_File);;
		if ((_211221_file != nullptr)) {
			_20d84e993_setCurrentFile(_self_.ptr(), _211221_file);
		};
	};
	if ((_208439_s.get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_20d81d8a7_constraintChecker> _211921_cc = _20d854c0c_constraintChecker(_self_);;
		_211921_cc.get()._field_et=_208458_errorToken;
		_211921_cc.get()._field_si=_208439_s;
		_211921_cc.get()._field_genericsA=_208517_tc._field_useGenerics;
		_211921_cc.get()._field_uniq=true;
		if ((!(_20d81e787_check(_211921_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if ((_208439_s.get()._field_Statics.len() > 0LL)) {
		jule::I64 _213221_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_208517_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto &expr = _208439_s.get()._field_Statics;
			auto it = expr.begin();
			_iter_begin_1c8b5c566:;
			if (it != expr.end()) {
				jule::Ptr<_20d869eb9_Var> _213425_v = *it;
				{
					_20d85e321_checkVarDecl(_self_, _213425_v,jule::Trait<_20d90e536_Lookup>(_self_, 3));
					_20d862962_checkTypeVar(_self_, _213425_v,jule::Trait<_20d90e536_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _213221_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1c8b5c566:;
				++it;
				goto _iter_begin_1c8b5c566;
			}
			_iter_end_1c8b5c566:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_208517_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_20d8b440e_Eval> _214517_eval = _20d856747_eval(_self_, jule::Trait<_20d90e536_Lookup>(_self_, 3));;
	_208439_s.get()._field_Comparable=true;
	{
		auto &expr = _208439_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c8b6037c:;
		if (it != expr.end()) {
			jule::Ptr<_20cba5bc9_FieldIns> _214721_f = *it;
			{
				jule::Ptr<_20d8e3680_TypeKind> _214821_kind = _20d90919b_checkDecl(&_208517_tc, _214721_f.get()._field_Decl.get()._field_Kind.get()._field_Decl);;
				__jule_func_result=((_214821_kind != nullptr) && __jule_func_result);
				if ((_214821_kind == nullptr)) {
					if (((_self_ != _208439_s.get()._field_Decl.get()._field_sema) && (_208439_s.get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_208439_s.get()._field_Decl.get()._field_sema.get()._field_errors);
						_208439_s.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1c8b6037c;
				};
				_214721_f.get()._field_Kind=_214821_kind;
				_208439_s.get()._field_Mutable=(_208439_s.get()._field_Mutable || ((!(_214721_f.get()._field_Decl.get()._field_Mutable)) && _20d8e4d02_Mutable(_214721_f.get()._field_Kind.ptr())));
				_208439_s.get()._field_Comparable=(_208439_s.get()._field_Comparable && _20d8e4a8d_Comparable(_214721_f.get()._field_Kind.ptr()));
				_20d861d7e_checkStructInsDeriveClone(_self_.ptr(), _208439_s);
				if ((_214721_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1c8b6037c;
				};
				_214517_eval.get()._field_prefix=_214721_f.get()._field_Kind;
				_214517_eval.get()._field_field=_214721_f;
				_214721_f.get()._field_Default=_20d8ced31_evalExpr(_214517_eval, _214721_f.get()._field_Decl.get()._field_Default);
				if ((_214721_f.get()._field_Default == nullptr)) {
					goto _iter_next_1c8b6037c;
				};
				;
				_20d856c42_checkAssignType(_self_, false,_214721_f.get()._field_Kind,_214721_f.get()._field_Default,_214721_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1c8b6037c:;
			++it;
			goto _iter_begin_1c8b6037c;
		}
		_iter_end_1c8b6037c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20d863ec4_precheckStructIns(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cba5db6_StructIns>& _218242_s, jule::Ptr<_20b4e5581_Token> _218261_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_20d863b1c_checkStructEnv(_self_, _218242_s,_218261_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &expr = _218242_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c8b675b5:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> _218721_f = *it;
			{
				if ((_218721_f.get()._field_Generics.len() == 0LL)) {
					if ((_20d862ee5_readyToCheckFn(_self_, _218242_s,_218721_f) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1c8b675b5:;
			++it;
			goto _iter_begin_1c8b675b5;
		}
		_iter_end_1c8b675b5:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _20d864249_checkStructIns(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cba5db6_StructIns>& _219739_s) {
	{
		auto &expr = _219739_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c8b68e57:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> _219821_f = *it;
			{
				_20d863314_checkTypeMethod(_self_, _219739_s,_219821_f);
			}
			_iter_next_1c8b68e57:;
			++it;
			goto _iter_begin_1c8b68e57;
		}
		_iter_end_1c8b68e57:;
	};
}



inline void _20d8644be_checkTypeStruct(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cba59dc_Struct>& _220340_s) {
	if (_220340_s.get()._field_CppLinked) {
		return;;
	};
	if ((_220340_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _220340_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c8b6a6a6:;
		if (it != expr.end()) {
			jule::Ptr<_20cba5db6_StructIns> _221621_ins = *it;
			{
				_20d864249_checkStructIns(_self_, _221621_ins);
			}
			_iter_next_1c8b6a6a6:;
			++it;
			goto _iter_begin_1c8b6a6a6;
		}
		_iter_end_1c8b6a6a6:;
	};
}



inline void _20d86469a_checkStructTypes(jule::Ptr<_20d84c199_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c8b6adc1:;
		if (it != expr.end()) {
			jule::Ptr<_20cba59dc_Struct> _222221_s = *it;
			{
				_20d8644be_checkTypeStruct(_self_, _222221_s);
			}
			_iter_next_1c8b6adc1:;
			++it;
			goto _iter_begin_1c8b6adc1;
		}
		_iter_end_1c8b6adc1:;
	};
}



inline void _20d864942_checkStructInsOperators(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cba5db6_StructIns> _222747_s) {
	{
		auto &expr = _222747_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c8b6c257:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> _222821_m = *it;
			{
				{
					auto &_match_expr{ _222821_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1c8b6cec2:;
						{
							_222747_s.get()._field_Operators._field_Eq=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _223165_f) mutable -> jule::Bool {
								return static__20d86bc68_Eq(_223165_f);;
							}));
							_222747_s.get()._field_Comparable=(_222747_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1c8b6d038:;
						{
							_222747_s.get()._field_Operators._field_Gt=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _223465_f) mutable -> jule::Bool {
								return static__20d86c010_Gt(_223465_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1c8b6d0b0:;
						{
							_222747_s.get()._field_Operators._field_GtEq=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _223667_f) mutable -> jule::Bool {
								return static__20d86c2a7_GtEq(_223667_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1c8b6d137:;
						{
							_222747_s.get()._field_Operators._field_Lt=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _223865_f) mutable -> jule::Bool {
								return static__20d86c54e_Lt(_223865_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1c8b6d1ae:;
						{
							_222747_s.get()._field_Operators._field_LtEq=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _224067_f) mutable -> jule::Bool {
								return static__20d86c7e6_LtEq(_224067_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1c8b6d236:;
						{
							_222747_s.get()._field_Operators._field_Shl=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _224266_f) mutable -> jule::Bool {
								return static__20d86cdce_Shl(_224266_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1c8b6d2ad:;
						{
							_222747_s.get()._field_Operators._field_Shr=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _224466_f) mutable -> jule::Bool {
								return static__20d86d176_Shr(_224466_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1c8b6d335:;
						{
							_222747_s.get()._field_Operators._field_Add=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _224666_f) mutable -> jule::Bool {
								return static__20d86d41d_Add(_224666_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1c8b6d3ac:;
						{
							_222747_s.get()._field_Operators._field_Sub=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _224866_f) mutable -> jule::Bool {
								return static__20d86d6b5_Sub(_224866_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1c8b6d434:;
						{
							_222747_s.get()._field_Operators._field_Div=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _225066_f) mutable -> jule::Bool {
								return static__20d86d95c_Div(_225066_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1c8b6d4ab:;
						{
							_222747_s.get()._field_Operators._field_Mul=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _225266_f) mutable -> jule::Bool {
								return static__20d86dc04_Mul(_225266_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1c8b6d533:;
						{
							_222747_s.get()._field_Operators._field_Mod=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _225466_f) mutable -> jule::Bool {
								return static__20d86de9b_Mod(_225466_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1c8b6d5aa:;
						{
							_222747_s.get()._field_Operators._field_BitAnd=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _225669_f) mutable -> jule::Bool {
								return static__20d86e243_BitAnd(_225669_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1c8b6d632:;
						{
							_222747_s.get()._field_Operators._field_BitOr=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _225868_f) mutable -> jule::Bool {
								return static__20d86e4da_BitOr(_225868_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1c8b6d6a9:;
						{
							_222747_s.get()._field_Operators._field_BitXor=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _226069_f) mutable -> jule::Bool {
								return static__20d86e782_BitXor(_226069_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1c8b6d731:;
						{
							_222747_s.get()._field_Operators._field_Neg=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _226266_f) mutable -> jule::Bool {
								return static__20d86ed6a_Neg(_226266_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1c8b6d7a8:;
						{
							_222747_s.get()._field_Operators._field_Pos=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _226466_f) mutable -> jule::Bool {
								return static__20d870112_Pos(_226466_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1c8b6d830:;
						{
							_222747_s.get()._field_Operators._field_BitNot=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _226669_f) mutable -> jule::Bool {
								return static__20d8703a9_BitNot(_226669_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1c8b6d8a7:;
						{
							_222747_s.get()._field_Operators._field_AddAssign=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _226872_f) mutable -> jule::Bool {
								return static__20d870992_AddAssign(_226872_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1c8b6d92e:;
						{
							_222747_s.get()._field_Operators._field_SubAssign=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _227072_f) mutable -> jule::Bool {
								return static__20d870c39_SubAssign(_227072_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1c8b6d9a6:;
						{
							_222747_s.get()._field_Operators._field_DivAssign=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _227272_f) mutable -> jule::Bool {
								return static__20d870ed1_DivAssign(_227272_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1c8b6da2d:;
						{
							_222747_s.get()._field_Operators._field_MulAssign=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _227472_f) mutable -> jule::Bool {
								return static__20d871278_MulAssign(_227472_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1c8b6daa5:;
						{
							_222747_s.get()._field_Operators._field_ModAssign=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _227672_f) mutable -> jule::Bool {
								return static__20d871520_ModAssign(_227672_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1c8b6db2c:;
						{
							_222747_s.get()._field_Operators._field_ShlAssign=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _227872_f) mutable -> jule::Bool {
								return static__20d8717b7_ShlAssign(_227872_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1c8b6dba4:;
						{
							_222747_s.get()._field_Operators._field_ShrAssign=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _228072_f) mutable -> jule::Bool {
								return static__20d871a5e_ShrAssign(_228072_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1c8b6dc2b:;
						{
							_222747_s.get()._field_Operators._field_BitOrAssign=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _228274_f) mutable -> jule::Bool {
								return static__20d871d06_BitOrAssign(_228274_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1c8b6dca3:;
						{
							_222747_s.get()._field_Operators._field_BitAndAssign=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _228475_f) mutable -> jule::Bool {
								return static__20d87209d_BitAndAssign(_228475_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1c8b6dd2a:;
						{
							_222747_s.get()._field_Operators._field_BitXorAssign=_20d863765_checkStructInsOp(_self_, _222747_s,_222821_m,jule::Fn<jule::Bool(jule::Ptr<_20d814370_Fn>)>([=](jule::Ptr<_20d814370_Fn> _228675_f) mutable -> jule::Bool {
								return static__20d872345_BitXorAssign(_228675_f);;
							}));
						}
					}
					_match_end_1c8b6caa4:;
				};
			}
			_iter_next_1c8b6c257:;
			++it;
			goto _iter_begin_1c8b6c257;
		}
		_iter_end_1c8b6c257:;
	};
}



inline void _20d864bc8_precheckStructType(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20cba59dc_Struct>& _229143_s) {
	if (_229143_s.get()._field_CppLinked) {
		return;;
	};
	if ((_229143_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_229143_s.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_20cba5db6_StructIns> _230221_ins = _20cb5c433_instance(_229143_s);;
		_230221_ins.get()._field_Checked=true;
		_20cb61206_appendInstance(_229143_s.ptr(), _230221_ins);
		_20d863ec4_precheckStructIns(_self_, _230221_ins,nullptr);
	};
	_20d864942_checkStructInsOperators(_self_, _229143_s.get()._field_Instances[0LL]);
}



inline void _20d864da4_precheckStructTypes(jule::Ptr<_20d84c199_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c8b97c77:;
		if (it != expr.end()) {
			jule::Ptr<_20cba59dc_Struct> _231221_s = *it;
			{
				_20d864bc8_precheckStructType(_self_, _231221_s);
			}
			_iter_next_1c8b97c77:;
			++it;
			goto _iter_begin_1c8b97c77;
		}
		_iter_end_1c8b97c77:;
	};
}



inline void _20d865129_checkRets(_20d84c199_Sema* _self_, jule::Ptr<_20d814749_FnIns>& _231733_f) {
	if (_20cbeec56_IsVoid(_231733_f.get()._field_Decl.ptr())) {
		return;;
	};
	_20d8672c4_missingRetChecker _232113_mrc = static__20d86768c_new();;
	jule::Bool _232213_ok = _20d86869e_check(&_232113_mrc, _231733_f.get()._field_Scope);;
	if ((!(_232213_ok))) {
		_20d84ed5b_pushErr(&(*_self_), _231733_f.get()._field_Decl.get()._field_Token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _20d865448_checkFnInsSc(_20d84c199_Sema* _self_, jule::Ptr<_20d814749_FnIns>& _232836_f, jule::Ptr<_20d82c3aa_scopeChecker>& _232852_sc) {
	_20d84adbd_appendRetVars(_232852_sc.get()._field_table.get()._field_Vars,_232836_f);
	_20d84b176_appendParamVars(_232852_sc.get()._field_table.get()._field_Vars,_232836_f);
	_20d84b451_appendGenericTypeAliases(_232852_sc.get()._field_table.get()._field_TypeAliases,_232836_f);
	_20d83c1ab_check(_232852_sc, _232836_f.get()._field_Decl.get()._field_Scope,_232836_f.get()._field_Scope);
	if ((!(_20d830028_stopped(_232852_sc.ptr())))) {
		_20d865129_checkRets(&(*_self_), _232836_f);
	};
}



inline void _20d865767_checkFnInsCaller(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d814749_FnIns>& _234141_f, jule::Ptr<_20b4e5581_Token> _234156_caller) {
	if (_234141_f.get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_20d8aca67_SymbolTable> _234617_old = _234141_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_20d84e993_setCurrentFile(_234141_f.get()._field_Decl.get()._field_sema.ptr(), _234617_old);
	});;
	jule::Ptr<_20d8aca67_SymbolTable> _234817_file = _20d84b7a3_findFile(_234141_f.get()._field_Decl.get()._field_sema.get()._field_files,_234141_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_234817_file != nullptr)) {
		_20d84e993_setCurrentFile(_234141_f.get()._field_Decl.get()._field_sema.ptr(), _234817_file);
	};
	jule::Ptr<_20d82c3aa_scopeChecker> _235317_sc = _20d822c0d_newScopeChecker(_234141_f.get()._field_Decl.get()._field_sema,_234141_f);;
	_235317_sc.get()._field_calledFrom=_234156_caller;
	_20d865448_checkFnInsSc(_self_.ptr(), _234141_f,_235317_sc);
	if ((_234141_f.get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_234141_f.get()._field_Decl.get()._field_sema.get()._field_errors);
		_234141_f.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _20d8659dc_checkFnIns(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d814749_FnIns>& _236335_f) {
	_20d865767_checkFnInsCaller(_self_, _236335_f,nullptr);
}



inline void _20d865c62_checkTypeFn(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d814370_Fn>& _236736_f) {
	if (_236736_f.get()._field_CppLinked) {
		return;;
	};
	if ((_236736_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _236736_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c8ba3502:;
		if (it != expr.end()) {
			jule::Ptr<_20d814749_FnIns> _237721_ins = *it;
			{
				_20d8659dc_checkFnIns(_self_, _237721_ins);
			}
			_iter_next_1c8ba3502:;
			++it;
			goto _iter_begin_1c8ba3502;
		}
		_iter_end_1c8ba3502:;
	};
}



inline void _20d865ed7_checkTestFn(_20d84c199_Sema* _self_, jule::Ptr<_20d814749_FnIns>& _238235_f) {
	if (_238235_f.get()._field_Decl.get()._field_Public) {
		_20d84ed5b_pushErr(&(*_self_), _238235_f.get()._field_Decl.get()._field_Token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_20d85017a_pushSugggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_238235_f.get()._field_Params.len() != 1LL) || (_238235_f.get()._field_Result != nullptr))) {
		_20d84ed5b_pushErr(&(*_self_), _238235_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_20d85017a_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20d8ebb61_Sptr> _239517_sptr = _20d8e5c7b_Sptr(_238235_f.get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_239517_sptr == nullptr)) {
		_20d84ed5b_pushErr(&(*_self_), _238235_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_20d85017a_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20cba5db6_StructIns> _240213_s = _20d8e6e69_Struct(_239517_sptr.get()._field_Elem.ptr());;
	if (((_240213_s == nullptr) || (!(_20d849581_isStdPackage(_240213_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("testing", 7)))))) {
		_20d84ed5b_pushErr(&(*_self_), _238235_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_20d85017a_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _20d86625c_precheckTypeFn(jule::Ptr<_20d84c199_Sema> _self_, jule::Ptr<_20d814370_Fn>& _241039_f) {
	if (_241039_f.get()._field_CppLinked) {
		return;;
	};
	if ((_241039_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_241039_f.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_20d814749_FnIns> _242121_ins = _20cbe58ea_instanceForce(_241039_f);;
		_241039_f.get()._field_Instances = jule::alloc_for_append(_241039_f.get()._field_Instances,1);_241039_f.get()._field_Instances.__push(_242121_ins);;
		_20d858e31_reloadFnInsTypes(_self_, _242121_ins);
		_242121_ins.get()._field_reloaded=true;
		if (_20d90a653_hasDirective(_241039_f.get()._field_Directives,jule::Str("test", 4))) {
			_20d865ed7_checkTestFn(_self_.ptr(), _242121_ins);
		};
	};
}



inline void _20d866438_precheckFnTypes(jule::Ptr<_20d84c199_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1c8baca8e:;
		if (it != expr.end()) {
			jule::Ptr<_20d81a3ed_Trait> _243421_decl = *it;
			{
				{
					auto &expr = _243421_decl.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1c8bad41e:;
					if (it != expr.end()) {
						jule::Ptr<_20d814370_Fn> _243525_m = *it;
						{
							_20d86625c_precheckTypeFn(_self_, _243525_m);
						}
						_iter_next_1c8bad41e:;
						++it;
						goto _iter_begin_1c8bad41e;
					}
					_iter_end_1c8bad41e:;
				};
			}
			_iter_next_1c8baca8e:;
			++it;
			goto _iter_begin_1c8baca8e;
		}
		_iter_end_1c8baca8e:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c8bad0de:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> _243921_decl = *it;
			{
				_20d86625c_precheckTypeFn(_self_, _243921_decl);
			}
			_iter_next_1c8bad0de:;
			++it;
			goto _iter_begin_1c8bad0de;
		}
		_iter_end_1c8bad0de:;
	};
}



inline void _20d866614_checkFnTypes(jule::Ptr<_20d84c199_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c8bae94d:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> _244621_decl = *it;
			{
				_20d865c62_checkTypeFn(_self_, _244621_decl);
			}
			_iter_next_1c8bae94d:;
			++it;
			goto _iter_begin_1c8bae94d;
		}
		_iter_end_1c8bae94d:;
	};
}



inline void _20d8667e0_checkPackageTypes(jule::Ptr<_20d84c199_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c8bb04cb:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _245421_f = *it;
			{
				_20d84e993_setCurrentFile(_self_.ptr(), _245421_f);
				_20d862b3d_checkGlobalTypes(_self_);
				_20d866438_precheckFnTypes(_self_);
				_20d864da4_precheckStructTypes(_self_);
			}
			_iter_next_1c8bb04cb:;
			++it;
			goto _iter_begin_1c8bb04cb;
		}
		_iter_end_1c8bb04cb:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c8bb1cd5:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _246521_f = *it;
			{
				_20d84e993_setCurrentFile(_self_.ptr(), _246521_f);
				_20d866614_checkFnTypes(_self_);
				_20d86469a_checkStructTypes(_self_);
			}
			_iter_next_1c8bb1cd5:;
			++it;
			goto _iter_begin_1c8bb1cd5;
		}
		_iter_end_1c8bb1cd5:;
	};
}



inline void _20d8669bb_setFileSemaFields(jule::Ptr<_20d84c199_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c8bb3127:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> _247321_f = *it;
			{
				_247321_f.get()._field_sema=_self_;
			}
			_iter_next_1c8bb3127:;
			++it;
			goto _iter_begin_1c8bb3127;
		}
		_iter_end_1c8bb3127:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c8bb3424:;
		if (it != expr.end()) {
			jule::Ptr<_20cba59dc_Struct> _247621_st = *it;
			{
				_247621_st.get()._field_sema=_self_;
			}
			_iter_next_1c8bb3424:;
			++it;
			goto _iter_begin_1c8bb3424;
		}
		_iter_end_1c8bb3424:;
	};
}



inline void _20d866b97_setSemaFields(jule::Ptr<_20d84c199_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c8bb3e6e:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _248221_file = *it;
			{
				_20d84e993_setCurrentFile(_self_.ptr(), _248221_file);
				_20d8669bb_setFileSemaFields(_self_);
			}
			_iter_next_1c8bb3e6e:;
			++it;
			goto _iter_begin_1c8bb3e6e;
		}
		_iter_end_1c8bb3e6e:;
	};
}



inline void _20d866e1c_check(jule::Ptr<_20d84c199_Sema> _self_, jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>& _248830_files) {
	_self_.get()._field_files=_248830_files;
	_20d8534be_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_20d866b97_setSemaFields(_self_);
	_20d853a52_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_20d853876_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_20d86206b_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_20d8667e0_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _20d84c199_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _20d8672c4_missingRetChecker static__20d86768c_new(void) {
	return _20d8672c4_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _20d867967_checkConditional(_20d8672c4_missingRetChecker* _self_, jule::Ptr<_20d8263a4_Conditional> _253135_c) {
	{
		auto &expr = _253135_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1c8bb8913:;
		if (it != expr.end()) {
			jule::Ptr<_20d825c44_If> _253221_elif = *it;
			{
				if ((_253221_elif == nullptr)) {
					return false;;
				};
				if ((!(_20d868391_checkScope(&(*_self_), _253221_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1c8bb8913:;
			++it;
			goto _iter_begin_1c8bb8913;
		}
		_iter_end_1c8bb8913:;
	};
	return ((_253135_c.get()._field_Default != nullptr) && _20d868391_checkScope(&(*_self_), _253135_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _20d867c75_checkMatch(_20d8672c4_missingRetChecker* _self_, jule::Ptr<_20d829594_Match> _254329_m) {
	{
		auto &expr = _254329_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c8bba5e6:;
		if (it != expr.end()) {
			jule::Ptr<_20d82a0de_Case> _254421_c = *it;
			{
				if ((_254421_c == nullptr)) {
					return false;;
				};
				jule::I64 _254817_n = (*_self_)._field_breaked.len();;
				jule::Bool _254917_ok = _20d868391_checkScope(&(*_self_), _254421_c.get()._field_Scope);;
				{
					
					if ((_254817_n != (*_self_)._field_breaked.len())) {
						_case_begin_1c8bbc274:;
						{
							return false;;
						}
					}
					else if ((!(_254917_ok))) {
						_case_begin_1c8bbc2eb:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;;
							};
							goto _case_begin_1c8bbc373;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1c8bbc373:;
						{
							(*_self_)._field_falled=false;
							if ((_254421_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1c8bba5e6;
						}
					}
					_match_end_1c8bbc1ec:;
				};
			}
			_iter_next_1c8bba5e6:;
			++it;
			goto _iter_begin_1c8bba5e6;
		}
		_iter_end_1c8bba5e6:;
	};
	return ((_254329_m.get()._field_Default != nullptr) && _20d868391_checkScope(&(*_self_), _254329_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _20d868083_checkInfIter(_20d8672c4_missingRetChecker* _self_, jule::Ptr<_20d826690_InfIter> _256931_it) {
	jule::I64 _257013_n = (*_self_)._field_breaked.len();;
	if (_20d868391_checkScope(&(*_self_), _256931_it.get()._field_Scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_257013_n);
		return true;;
	};
	if ((_257013_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _257617_itaddr = static_cast<jule::Uintptr>(_256931_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_257013_n);
			auto it = expr.begin();
			_iter_begin_1c8bc11ac:;
			if (it != expr.end()) {
				jule::Uintptr _257720_addr = *it;
				{
					if ((_257617_itaddr == _257720_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_257013_n);
						return false;;
					};
				}
				_iter_next_1c8bc11ac:;
				++it;
				goto _iter_begin_1c8bc11ac;
			}
			_iter_end_1c8bc11ac:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_257013_n);
	};
	return true;;
}



inline jule::Bool _20d868391_checkScope(_20d8672c4_missingRetChecker* _self_, jule::Ptr<_20d825848_Scope> _258829_s) {
	if ((_258829_s == nullptr)) {
		return false;;
	};
	{
		auto &expr = _258829_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1c8bc2b2b:;
		if (it != expr.end()) {
			jule::Any _259221_st = *it;
			{
				{
					auto &_match_expr{ _259221_st };
					
					if (_match_expr.type_is_ptr<_20d82a694_FallSt>()) {
						_case_begin_1c8bc3511:;
						{
							(*_self_)._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type_is_ptr<_20d827c9b_BreakSt>()) {
						_case_begin_1c8bc35aa:;
						{
							jule::Uintptr _259821_addr = _259221_st.operator jule::Ptr<_20d827c9b_BreakSt>().get()._field_It;;
							if ((_259821_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_259821_addr);;
							};
							return false;;
						}
					}
					else if (_match_expr.type_is_ptr<_20d8278e4_ContSt>()) {
						_case_begin_1c8bc3621:;
						{
							return false;;
						}
					}
					else if (_match_expr.type_is_ptr<_20d826690_InfIter>()) {
						_case_begin_1c8bc3687:;
						{
							if (_20d868083_checkInfIter(&(*_self_), _259221_st.operator jule::Ptr<_20d826690_InfIter>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type_is_ptr<_20d82aa18_RetSt>()) {
						_case_begin_1c8bc36ed:;
						{
							return true;;
						}
					}
					else if (_match_expr.type_is_ptr<_20d825848_Scope>()) {
						_case_begin_1c8bc3764:;
						{
							if (_20d868391_checkScope(&(*_self_), _259221_st.operator jule::Ptr<_20d825848_Scope>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type_is_ptr<_20d8b2891_Data>()) {
						_case_begin_1c8bc37db:;
						{
							{
								auto &_match_expr{ _259221_st.operator jule::Ptr<_20d8b2891_Data>().get()._field_Model };
								
								if (_match_expr.type_is_ptr<_20d811b64_BuiltinPanicCallExprModel>() || _match_expr.type_is_ptr<_20d812e51_BuiltinErrorCallExprModel>()) {
									_case_begin_1c8bc727e:;
									{
										return true;;
									}
								}
								_match_end_1c8bc6ec6:;
							};
						}
					}
					else if (_match_expr.type_is_ptr<_20d8263a4_Conditional>()) {
						_case_begin_1c8bc3863:;
						{
							if (_20d867967_checkConditional(&(*_self_), _259221_st.operator jule::Ptr<_20d8263a4_Conditional>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type_is_ptr<_20d829594_Match>()) {
						_case_begin_1c8bc38da:;
						{
							if (_20d867c75_checkMatch(&(*_self_), _259221_st.operator jule::Ptr<_20d829594_Match>())) {
								return true;;
							};
						}
					}
					_match_end_1c8bc3368:;
				};
			}
			_iter_next_1c8bc2b2b:;
			++it;
			goto _iter_begin_1c8bc2b2b;
		}
		_iter_end_1c8bc2b2b:;
	};
	return false;;
}



inline jule::Bool _20d86869e_check(_20d8672c4_missingRetChecker* _self_, jule::Ptr<_20d825848_Scope> _263424_s) {
	return _20d868391_checkScope(&(*_self_), _263424_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8672c4_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d868e85_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d86a382_IsInitialized(_20d869eb9_Var* _self_) {
	return ((*_self_)._field_Value != nullptr);;
}



inline jule::Bool _20d86a5e6_IsTypeInferred(_20d869eb9_Var* _self_) {
	return (((*_self_)._field_Kind == nullptr) || ((*_self_)._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _20d86a85a_untypedConstant(_20d869eb9_Var* _self_) {
	return (_20d86a5e6_IsTypeInferred(&(*_self_)) && (*_self_)._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d869eb9_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__20d86b3d8_Dispose(jule::Ptr<_20d814370_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && (_1023_f.get()._field_Ident == jule::Str("Dispose", 7))) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _20cbeec56_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_20cbedd43_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__20d86b680_Str(jule::Ptr<_20d814370_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (_2419_f.get()._field_Ident != jule::Str("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _20cbeec56_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _20cbedd43_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_20d814749_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_20d8e83cc_Prim> _3913_prim = _20d8e5a17_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _20d8eb611_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__20d86b9c1_logical(jule::Ptr<_20d814370_Fn>& _4624_f, jule::Str _4632_ident) {
	if ((((((((((((((_4624_f == nullptr) || (_4624_f.get()._field_Ident != _4632_ident)) || (_4624_f.get()._field_Owner == nullptr)) || (_4624_f.get()._field_Instances.len() == 0LL)) || _4624_f.get()._field_Statically) || _4624_f.get()._field_Unsafety) || _20cbeec56_IsVoid(_4624_f.ptr())) || (_4624_f.get()._field_Generics.len() != 0LL)) || (_4624_f.get()._field_Params.len() != 2LL)) || _4624_f.get()._field_Params[0LL].get()._field_Mutable) || _20cbedd43_IsRef(_4624_f.get()._field_Params[0LL].ptr())) || _4624_f.get()._field_Params[1LL].get()._field_Mutable) || _4624_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_20d814749_FnIns> _6317_ins = _4624_f.get()._field_Instances[0LL];;
	jule::Ptr<_20d8e83cc_Prim> _6413_prim = _20d8e5a17_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_20d8eb39c_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _20d8e6e69_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__20d86bc68_Eq(jule::Ptr<_20d814370_Fn> _7218_f) {
	return static__20d86b9c1_logical(_7218_f,jule::Str("Eq", 2));;
}



inline jule::Bool static__20d86c010_Gt(jule::Ptr<_20d814370_Fn> _7718_f) {
	return static__20d86b9c1_logical(_7718_f,jule::Str("Gt", 2));;
}



inline jule::Bool static__20d86c2a7_GtEq(jule::Ptr<_20d814370_Fn> _8220_f) {
	return static__20d86b9c1_logical(_8220_f,jule::Str("GtEq", 4));;
}



inline jule::Bool static__20d86c54e_Lt(jule::Ptr<_20d814370_Fn> _8718_f) {
	return static__20d86b9c1_logical(_8718_f,jule::Str("Lt", 2));;
}



inline jule::Bool static__20d86c7e6_LtEq(jule::Ptr<_20d814370_Fn> _9220_f) {
	return static__20d86b9c1_logical(_9220_f,jule::Str("LtEq", 4));;
}



inline jule::Bool static__20d86cb37_result(jule::Ptr<_20d814370_Fn>& _9623_f, jule::Str _9631_ident) {
	if ((((((((((((((_9623_f == nullptr) || (_9623_f.get()._field_Ident != _9631_ident)) || (_9623_f.get()._field_Owner == nullptr)) || (_9623_f.get()._field_Instances.len() == 0LL)) || _9623_f.get()._field_Statically) || _9623_f.get()._field_Unsafety) || _20cbeec56_IsVoid(_9623_f.ptr())) || (_9623_f.get()._field_Generics.len() != 0LL)) || (_9623_f.get()._field_Params.len() != 2LL)) || _9623_f.get()._field_Params[0LL].get()._field_Mutable) || _20cbedd43_IsRef(_9623_f.get()._field_Params[0LL].ptr())) || _9623_f.get()._field_Params[1LL].get()._field_Mutable) || _9623_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_20d814749_FnIns> _11317_ins = _9623_f.get()._field_Instances[0LL];;
	return (_20d8e6e69_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__20d86cdce_Shl(jule::Ptr<_20d814370_Fn> _11819_f) {
	return static__20d86cb37_result(_11819_f,jule::Str("Shl", 3));;
}



inline jule::Bool static__20d86d176_Shr(jule::Ptr<_20d814370_Fn> _12319_f) {
	return static__20d86cb37_result(_12319_f,jule::Str("Shr", 3));;
}



inline jule::Bool static__20d86d41d_Add(jule::Ptr<_20d814370_Fn> _12819_f) {
	return static__20d86cb37_result(_12819_f,jule::Str("Add", 3));;
}



inline jule::Bool static__20d86d6b5_Sub(jule::Ptr<_20d814370_Fn> _13319_f) {
	return static__20d86cb37_result(_13319_f,jule::Str("Sub", 3));;
}



inline jule::Bool static__20d86d95c_Div(jule::Ptr<_20d814370_Fn> _13819_f) {
	return static__20d86cb37_result(_13819_f,jule::Str("Div", 3));;
}



inline jule::Bool static__20d86dc04_Mul(jule::Ptr<_20d814370_Fn> _14319_f) {
	return static__20d86cb37_result(_14319_f,jule::Str("Mul", 3));;
}



inline jule::Bool static__20d86de9b_Mod(jule::Ptr<_20d814370_Fn> _14819_f) {
	return static__20d86cb37_result(_14819_f,jule::Str("Mod", 3));;
}



inline jule::Bool static__20d86e243_BitAnd(jule::Ptr<_20d814370_Fn> _15322_f) {
	return static__20d86cb37_result(_15322_f,jule::Str("BitAnd", 6));;
}



inline jule::Bool static__20d86e4da_BitOr(jule::Ptr<_20d814370_Fn> _15821_f) {
	return static__20d86cb37_result(_15821_f,jule::Str("BitOr", 5));;
}



inline jule::Bool static__20d86e782_BitXor(jule::Ptr<_20d814370_Fn> _16322_f) {
	return static__20d86cb37_result(_16322_f,jule::Str("BitXor", 6));;
}



inline jule::Bool static__20d86eac3_unary(jule::Ptr<_20d814370_Fn>& _16722_f, jule::Str _16730_ident) {
	if ((((((((((((_16722_f == nullptr) || (_16722_f.get()._field_Ident != _16730_ident)) || (_16722_f.get()._field_Owner == nullptr)) || (_16722_f.get()._field_Instances.len() == 0LL)) || _16722_f.get()._field_Statically) || _16722_f.get()._field_Unsafety) || _20cbeec56_IsVoid(_16722_f.ptr())) || (_16722_f.get()._field_Generics.len() != 0LL)) || (_16722_f.get()._field_Params.len() != 1LL)) || _16722_f.get()._field_Params[0LL].get()._field_Mutable) || _20cbedd43_IsRef(_16722_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_20d814749_FnIns> _18217_ins = _16722_f.get()._field_Instances[0LL];;
	return (_20d8e6e69_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__20d86ed6a_Neg(jule::Ptr<_20d814370_Fn> _18719_f) {
	return static__20d86eac3_unary(_18719_f,jule::Str("Neg", 3));;
}



inline jule::Bool static__20d870112_Pos(jule::Ptr<_20d814370_Fn> _19219_f) {
	return static__20d86eac3_unary(_19219_f,jule::Str("Pos", 3));;
}



inline jule::Bool static__20d8703a9_BitNot(jule::Ptr<_20d814370_Fn> _19722_f) {
	return static__20d86eac3_unary(_19722_f,jule::Str("BitNot", 6));;
}



inline jule::Bool static__20d8706ea_assign(jule::Ptr<_20d814370_Fn>& _20123_f, jule::Str _20131_ident) {
	if ((((((((((((((_20123_f == nullptr) || (_20123_f.get()._field_Ident != _20131_ident)) || (_20123_f.get()._field_Owner == nullptr)) || (_20123_f.get()._field_Instances.len() == 0LL)) || _20123_f.get()._field_Statically) || _20123_f.get()._field_Unsafety) || (!(_20cbeec56_IsVoid(_20123_f.ptr())))) || (_20123_f.get()._field_Generics.len() != 0LL)) || (_20123_f.get()._field_Params.len() != 2LL)) || (!(_20123_f.get()._field_Params[0LL].get()._field_Mutable))) || _20cbedd43_IsRef(_20123_f.get()._field_Params[0LL].ptr())) || _20123_f.get()._field_Params[1LL].get()._field_Mutable) || _20123_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__20d870992_AddAssign(jule::Ptr<_20d814370_Fn> _22125_f) {
	return static__20d8706ea_assign(_22125_f,jule::Str("AddAssign", 9));;
}



inline jule::Bool static__20d870c39_SubAssign(jule::Ptr<_20d814370_Fn> _22625_f) {
	return static__20d8706ea_assign(_22625_f,jule::Str("SubAssign", 9));;
}



inline jule::Bool static__20d870ed1_DivAssign(jule::Ptr<_20d814370_Fn> _23125_f) {
	return static__20d8706ea_assign(_23125_f,jule::Str("DivAssign", 9));;
}



inline jule::Bool static__20d871278_MulAssign(jule::Ptr<_20d814370_Fn> _23625_f) {
	return static__20d8706ea_assign(_23625_f,jule::Str("MulAssign", 9));;
}



inline jule::Bool static__20d871520_ModAssign(jule::Ptr<_20d814370_Fn> _24125_f) {
	return static__20d8706ea_assign(_24125_f,jule::Str("ModAssign", 9));;
}



inline jule::Bool static__20d8717b7_ShlAssign(jule::Ptr<_20d814370_Fn> _24625_f) {
	return static__20d8706ea_assign(_24625_f,jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__20d871a5e_ShrAssign(jule::Ptr<_20d814370_Fn> _25125_f) {
	return static__20d8706ea_assign(_25125_f,jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__20d871d06_BitOrAssign(jule::Ptr<_20d814370_Fn> _25627_f) {
	return static__20d8706ea_assign(_25627_f,jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__20d87209d_BitAndAssign(jule::Ptr<_20d814370_Fn> _26128_f) {
	return static__20d8706ea_assign(_26128_f,jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__20d872345_BitXorAssign(jule::Ptr<_20d814370_Fn> _26628_f) {
	return static__20d8706ea_assign(_26628_f,jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _20d86ac67_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _20d89bd0e_pushErr(_20d89b7e2_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_20d84ed5b_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_11726_fmt,_11739_args);
}



inline jule::Bool _20d89c073_checkTrait(_20d89b7e2_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_20d8e45b5_IsNil((*_self_)._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_20d81a3ed_Trait> _12513_trt = _20d8e71cd_Trait((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_20d8e5c7b_Sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1c8c15b3b:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_20d8e5c7b_Sptr((*_self_)._field_src.ptr()).get()._field_Elem;
				if ((_20d8e6e69_Struct((*_self_)._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1c8c154a9;
			}
		}
		else if ((_20d8e6e69_Struct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1c8c154a9:;
			{
				jule::Ptr<_20cba5db6_StructIns> _13617_s = _20d8e6e69_Struct((*_self_)._field_src.ptr());;
				if ((!(_20cb668e3_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _20d88392d_traitHasReferenceReceiver(_12513_trt))) {
					_20d89bd0e_pushErr(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_20d8e71cd_Trait((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1c8c15520:;
			{
				__jule_func_result = (_12513_trt == _20d8e71cd_Trait((*_self_)._field_src.ptr()));
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c8c15443:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c8c153cc:;
	};
}



inline jule::Bool _20d89c2d7_checkPtr(_20d89b7e2_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_20d8e45b5_IsNil((*_self_)._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_20d9001c5_Ptr> _15617_dest = _20d8e5ee0_Ptr((*_self_)._field_dest.ptr());;
	if (_20d900b98_IsUnsafe(_15617_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _20d8e3d89_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return __jule_func_result;;
}



inline jule::Bool _20d89c54b_checkPrim(_20d89b7e2_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*_self_)._field_dest.get()._field_Variadic))) {
		jule::Ptr<_20d8e83cc_Prim> _16517_prim = _20d8e5a17_Prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _20d8eb875_IsAny(_16517_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _20d8e3d89_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return __jule_func_result;;
}



inline jule::Bool _20d89c903_typeEnum(_20d89b7e2_typeCompatibilityChecker* _self_, jule::Ptr<_20d81b82d_TypeEnum>& _17328_e, jule::Ptr<_20d8e3680_TypeKind>& _17347_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _17328_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1c8c1cbed:;
		if (it != expr.end()) {
			jule::Ptr<_20d81b641_TypeEnumItem> _17421_item = *it;
			{
				if (_20d8e3d89_Equals(_17421_item.get()._field_Kind.get()._field_Kind, _17347_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_20d81b82d_TypeEnum> _17821_ke = _20d8e64b8_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1c8c1cbed;
				};
				if (_20d89c903_typeEnum(&(*_self_), _17821_ke,_17347_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1c8c1cbed:;
			++it;
			goto _iter_begin_1c8c1cbed;
		}
		_iter_end_1c8c1cbed:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _20d89cb67_checkTypeEnum(_20d89b7e2_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_20d8e3d89_Equals((*_self_)._field_dest, (*_self_)._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_20d81b82d_TypeEnum> _19317_e = _20d8e64b8_TypeEnum((*_self_)._field_dest.ptr());;
	__jule_func_result = _20d89c903_typeEnum(&(*_self_), _19317_e,(*_self_)._field_src);
	return __jule_func_result;;
}



inline jule::Bool _20d89cdcb_check(_20d89b7e2_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_20d8e5ee0_Ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _20d89c2d7_checkPtr(&(*_self_));
		return __jule_func_result;;
	};
	if (_20d8e5066_NilCompatible((*_self_)._field_dest.ptr())) {
		if (_20d8e45b5_IsNil((*_self_)._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_20d8e5a17_Prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1c8c22d35:;
			{
				__jule_func_result = _20d89c54b_checkPrim(&(*_self_));
				return __jule_func_result;;
			}
		}
		else if ((_20d8e64b8_TypeEnum((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1c8c22b7b:;
			{
				__jule_func_result = _20d89cb67_checkTypeEnum(&(*_self_));
				return __jule_func_result;;
			}
		}
		else if ((_20d8e71cd_Trait((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1c8c22362:;
			{
				__jule_func_result = _20d89c073_checkTrait(&(*_self_));
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c8c21d89:;
			{
				__jule_func_result = _20d8e3d89_Equals((*_self_)._field_dest, (*_self_)._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1c8c21c79:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d89b7e2_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _20d89d87c_pushErr(_20d89d41a_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_20d84ed5b_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_22926_fmt,_22939_args);
}



inline jule::Bool _20d89dae1_checkValidity(_20d89d41a_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_20d8e6c05_Fn((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8c25a5d:;
			{
				jule::Ptr<_20d814749_FnIns> _23717_f = _20d8e6c05_Fn((*_self_)._field_d.get()._field_Kind.ptr());;
				{
					
					if (_20d814e0e_IsBuiltin(_23717_f.ptr())) {
						_case_begin_1c8c27147:;
						{
							_20d89d87c_pushErr(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_1c8c271be:;
						{
							_20d89d87c_pushErr(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _20cc3121b_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_1c8c27246:;
						{
							_20d89d87c_pushErr(&(*_self_), jule::Str("non-static methods cannot use as anonymous function", 51),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1c8c272bd:;
						{
							_20d89d87c_pushErr(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_20d85017a_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1c8c2706a:;
				};
			}
		}
		else if ((_20d8e76a6_Tup((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8c25ad5:;
			{
				_20d89d87c_pushErr(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1c8c259a3:;
	};
	return _23417_valid;;
}



inline jule::Bool _20d89dd55_checkConst(_20d89d41a_assignTypeChecker* _self_) {
	if (((((!(_20d8b3254_IsConst((*_self_)._field_d.ptr()))) || (_20d8e5a17_Prim((*_self_)._field_dest.ptr()) == nullptr)) || (_20d8e5a17_Prim((*_self_)._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_20d80a047_IsNum(_20d8e5a17_Prim((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if (((*_self_)._field_d.get()._field_Model != (*_self_)._field_d.get()._field_Constant)) {
		return false;;
	};
	jule::Str _27413_kind = _20d8e5a17_Prim((*_self_)._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_20d809e15_IsFloat(_27413_kind)) {
			_case_begin_1c8c2e9ce:;
			{
				if ((!(_20d883a60_floatAssignable(_27413_kind,(*_self_)._field_d)))) {
					_20d89d87c_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;;
				};
				(*_self_)._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else if (_20d809cd3_IsInt(_27413_kind)) {
			_case_begin_1c8c2e35d:;
			{
				if ((!(_20d89b616_intAssignable(_27413_kind,(*_self_)._field_d)))) {
					_20d89d87c_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;;
				};
				(*_self_)._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else {
			_case_begin_1c8c2e2e7:;
			{
				return false;;
			}
		}
		_match_end_1c8c2e281:;
	};
	return true;;
}



inline jule::Bool _20d89e0b9_isPrim(_20d89d41a_assignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_Variadic || (*_self_)._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_20d8e4351_CppLinked((*_self_)._field_dest.ptr()) || _20d8e4351_CppLinked((*_self_)._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_20d8e5a17_Prim((*_self_)._field_dest.ptr()) != nullptr) && (_20d8e5a17_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _20d89e32d_checkCompatibility(_20d89d41a_assignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1c8c33be2:;
			{
				return false;;
			}
		}
		else if ((!(_20d89dae1_checkValidity(&(*_self_))))) {
			_case_begin_1c8c33c69:;
			{
				return false;;
			}
		}
		else if (_20d89dd55_checkConst(&(*_self_))) {
			_case_begin_1c8c33ce1:;
			{
				return true;;
			}
		}
		else if ((_20d8e6254_Enum((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8c33d68:;
			{
				jule::Ptr<_20d8e3680_TypeKind> _31821_dkind = (*_self_)._field_dest;;
				if ((_20d8e6254_Enum((*_self_)._field_dest.ptr()) != nullptr)) {
					_31821_dkind=_20d8e6254_Enum((*_self_)._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_20d8e5a17_Prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1c8c33a9e;
				};
				if (_20d80881a_TypesAreCompatible(_20d8e5a17_Prim(_20d8e6254_Enum((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind,_20d8e5a17_Prim(_31821_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_20d89e0b9_isPrim(&(*_self_))) {
			_case_begin_1c8c33de0:;
			{
				jule::Ptr<_20d8e83cc_Prim> _32817_dest = _20d8e5a17_Prim((*_self_)._field_dest.ptr());;
				if (_20d8eb875_IsAny(_32817_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_20d8e83cc_Prim> _33221_src = _20d8e5a17_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_20d80881a_TypesAreCompatible(_32817_dest.get()._field_Kind,_33221_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1c8c33a9e:;
	};
	return _20d857193_checkTypeCompatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_Kind,(*_self_)._field_errorToken);;
}



inline jule::Bool _20d89e592_check(_20d89d41a_assignTypeChecker* _self_) {
	jule::Bool _34113_ok = _20d89e32d_checkCompatibility(&(*_self_));;
	if ((_34113_ok && (!((*_self_)._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_20d90c19e_applyImplicitCast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _34113_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d89d41a_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c8c4bdb4_annotateConstraintElem(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _36049_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is_ptr<_20cb8b808_ArrTypeDecl>()) {
			_case_begin_1c8c4d4ae:;
			{
				jule::Ptr<_20d8e3680_TypeKind> _36321_elem = nullptr;;
				{
					
{
						_case_begin_1c8c4e2e5:;
						{
							_36321_elem=_20d8e672c_Arr(_36049_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1c8c4dd61:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_20cb8b808_ArrTypeDecl>().get()._field_Elem;
				return _20d8a1484_annotateConstraint(&(*_self_), _36321_elem);;
			}
		}
		_match_end_1c8c4d426:;
	};
	return false;;
}

inline jule::Bool _1c8c4b5ab_annotateConstraintElem(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _36049_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is_ptr<_20cb8aa9e_SlcTypeDecl>()) {
			_case_begin_1c8c51a23:;
			{
				jule::Ptr<_20d8e3680_TypeKind> _36321_elem = nullptr;;
				{
					
{
						_case_begin_1c8c528e2:;
						{
							_36321_elem=_20d8e6991_Slc(_36049_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1c8c523c5:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_20cb8aa9e_SlcTypeDecl>().get()._field_Elem;
				return _20d8a1484_annotateConstraint(&(*_self_), _36321_elem);;
			}
		}
		_match_end_1c8c5198a:;
	};
	return false;;
}

inline jule::Bool _1c8c510b6_annotateConstraintElem(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _36049_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is_ptr<_20cb8b176_PtrTypeDecl>()) {
			_case_begin_1c8c55087:;
			{
				jule::Ptr<_20d8e3680_TypeKind> _36321_elem = nullptr;;
				{
					
{
						_case_begin_1c8c55ebc:;
						{
							_36321_elem=_20d8e5ee0_Ptr(_36049_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1c8c55939:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_20cb8b176_PtrTypeDecl>().get()._field_Elem;
				return _20d8a1484_annotateConstraint(&(*_self_), _36321_elem);;
			}
		}
		_match_end_1c8c54eee:;
	};
	return false;;
}

inline jule::Bool _1c8c4b941_annotateConstraintElem(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _36049_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is_ptr<_20cb8a6a3_SptrTypeDecl>()) {
			_case_begin_1c8c582cc:;
			{
				jule::Ptr<_20d8e3680_TypeKind> _36321_elem = nullptr;;
				{
					
{
						_case_begin_1c8c59289:;
						{
							_36321_elem=_20d8e5c7b_Sptr(_36049_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1c8c58b7e:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_20cb8a6a3_SptrTypeDecl>().get()._field_Elem;
				return _20d8a1484_annotateConstraint(&(*_self_), _36321_elem);;
			}
		}
		_match_end_1c8c58244:;
	};
	return false;;
}



inline jule::Bool _20d8a0719_annotateConstraintMap(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _38045_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is_ptr<_20cb8c056_MapTypeDecl>()) {
			_case_begin_1c8c3b953:;
			{
				jule::Ptr<_20d8edb74_Map> _38321_m = _20d8e7442_Map(_38045_k.ptr());;
				jule::Ptr<_20cb8c056_MapTypeDecl> _38421_m2 = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_20cb8c056_MapTypeDecl>();;
				(*_self_)._field_c=_38421_m2.get()._field_Key;
				if ((!(_20d8a1484_annotateConstraint(&(*_self_), _38321_m.get()._field_Key)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*_self_)._field_c=_38421_m2.get()._field_Val;
				__jule_func_result = _20d8a1484_annotateConstraint(&(*_self_), _38321_m.get()._field_Val);
				return __jule_func_result;;
			}
		}
		_match_end_1c8c3b8ed:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _20d8a0a27_annotateConstraintTup(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _39545_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is_ptr<_20cb8ad8a_TupleTypeDecl>()) {
			_case_begin_1c8c3e13c:;
			{
				jule::Ptr<_20cb8ad8a_TupleTypeDecl> _39821_tup = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_20cb8ad8a_TupleTypeDecl>();;
				jule::Ptr<_20d8ed14b_Tuple> _39921_tup2 = _20d8e76a6_Tup(_39545_k.ptr());;
				{
					auto &expr = _39921_tup2.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1c8c4065a:;
					if (it != expr.end()) {
						jule::Ptr<_20d8e3680_TypeKind> _40025_t2 = *it;
						{
							{
								auto &expr = _39821_tup.get()._field_Types;
								auto it = expr.begin();
								_iter_begin_1c8c40da8:;
								if (it != expr.end()) {
									jule::Ptr<_20cb892ea_TypeDecl> _40129_t = *it;
									{
										(*_self_)._field_c=_40129_t;
										if (_20d8a1484_annotateConstraint(&(*_self_), _40025_t2)) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1c8c40da8:;
									++it;
									goto _iter_begin_1c8c40da8;
								}
								_iter_end_1c8c40da8:;
							};
						}
						_iter_next_1c8c4065a:;
						++it;
						goto _iter_begin_1c8c4065a;
					}
					_iter_end_1c8c4065a:;
				};
			}
		}
		_match_end_1c8c3e0b5:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _20d8a0d35_annotateConstraintFn(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _41244_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is_ptr<_20cb9ac79_FnDecl>()) {
			_case_begin_1c8c40b88:;
			{
				jule::Ptr<_20cb9ac79_FnDecl> _41521_pf = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_20cb9ac79_FnDecl>();;
				jule::Ptr<_20d814749_FnIns> _41621_f = _20d8e6c05_Fn(_41244_k.ptr());;
				{
					auto &expr = _41621_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1c8c430db:;
					if (it != expr.end()) {
						jule::I64 _41718_i = it - expr.begin();
						jule::Ptr<_20d81455c_ParamIns> _41725_fp = *it;
						{
							(*_self_)._field_c=_41521_pf.get()._field_Params[_41718_i].get()._field_Kind;
							if (_20d8a1484_annotateConstraint(&(*_self_), _41725_fp.get()._field_Kind)) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1c8c430db:;
						++it;
						_41718_i++;
						goto _iter_begin_1c8c430db;
					}
					_iter_end_1c8c430db:;
				};
				if ((_41521_pf.get()._field_Result != nullptr)) {
					(*_self_)._field_c=_41521_pf.get()._field_Result.get()._field_Kind;
					if (_20d8a1484_annotateConstraint(&(*_self_), _41621_f.get()._field_Result)) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1c8c40b33:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _20d8a1165_annotateConstraintIdent(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _43347_k) {
	jule::Ptr<_20cb898b1_IdentTypeDecl> _43417_ident = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_20cb898b1_IdentTypeDecl>();;
	jule::Ptr<_20cba5db6_StructIns> _43517_s = _20d8e6e69_Struct(_43347_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c8c45ece:;
		if (it != expr.end()) {
			jule::I64 _43613_i = it - expr.begin();
			jule::Ptr<_20cb965e3_GenericDecl> _43616_g = *it;
			{
				if ((_43616_g.get()._field_Ident == _43417_ident.get()._field_Ident)) {
					jule::Ptr<_20d8e1e53_InsGeneric> _43825_fg = (*_self_)._field_f.get()._field_Generics[_43613_i];;
					if ((_43825_fg != nullptr)) {
						return false;;
					};
					_20d8a17a3_pushGeneric(&(*_self_), _43347_k,_43613_i);
					return true;;
				};
				if ((_43517_s == nullptr)) {
					goto _iter_next_1c8c45ece;
				};
				jule::Ptr<_20cb892ea_TypeDecl> _44821_c = (*_self_)._field_c;;
				{
					auto &expr = _43417_ident.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1c8c48289:;
					if (it != expr.end()) {
						jule::Ptr<_20cb892ea_TypeDecl> _44925_ig = *it;
						{
							(*_self_)._field_c=_44925_ig;
							{
								auto &expr = _43517_s.get()._field_Generics;
								auto it = expr.begin();
								_iter_begin_1c8c49532:;
								if (it != expr.end()) {
									jule::Ptr<_20d8e1e53_InsGeneric> _45129_sg = *it;
									{
										if (_20d8a1484_annotateConstraint(&(*_self_), _45129_sg.get()._field_Kind)) {
											return true;;
										};
									}
									_iter_next_1c8c49532:;
									++it;
									goto _iter_begin_1c8c49532;
								}
								_iter_end_1c8c49532:;
							};
						}
						_iter_next_1c8c48289:;
						++it;
						goto _iter_begin_1c8c48289;
					}
					_iter_end_1c8c48289:;
				};
				(*_self_)._field_c=_44821_c;
			}
			_iter_next_1c8c45ece:;
			++it;
			_43613_i++;
			goto _iter_begin_1c8c45ece;
		}
		_iter_end_1c8c45ece:;
	};
	return false;;
}



inline jule::Bool _20d8a1484_annotateConstraint(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _46242_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is_ptr<_20cb898b1_IdentTypeDecl>()) {
			_case_begin_1c8c4991c:;
			{
				return _20d8a1165_annotateConstraintIdent(&(*_self_), _46242_k);;
			}
		}
		_match_end_1c8c498b7:;
	};
	{
		
		if ((_20d8e672c_Arr(_46242_k.ptr()) != nullptr)) {
			_case_begin_1c8c4a984:;
			{
				return _1c8c4bdb4_annotateConstraintElem(&(*_self_), _46242_k);;
			}
		}
		else if ((_20d8e6991_Slc(_46242_k.ptr()) != nullptr)) {
			_case_begin_1c8c4ae5c:;
			{
				return _1c8c4b5ab_annotateConstraintElem(&(*_self_), _46242_k);;
			}
		}
		else if ((_20d8e5ee0_Ptr(_46242_k.ptr()) != nullptr)) {
			_case_begin_1c8c4aec3:;
			{
				return _1c8c510b6_annotateConstraintElem(&(*_self_), _46242_k);;
			}
		}
		else if ((_20d8e5c7b_Sptr(_46242_k.ptr()) != nullptr)) {
			_case_begin_1c8c4b0a0:;
			{
				return _1c8c4b941_annotateConstraintElem(&(*_self_), _46242_k);;
			}
		}
		else if ((_20d8e7442_Map(_46242_k.ptr()) != nullptr)) {
			_case_begin_1c8c4b116:;
			{
				return _20d8a0719_annotateConstraintMap(&(*_self_), _46242_k);;
			}
		}
		else if ((_20d8e6c05_Fn(_46242_k.ptr()) != nullptr)) {
			_case_begin_1c8c4a555:;
			{
				return _20d8a0d35_annotateConstraintFn(&(*_self_), _46242_k);;
			}
		}
		else if ((_20d8e76a6_Tup(_46242_k.ptr()) != nullptr)) {
			_case_begin_1c8c4a5bb:;
			{
				return _20d8a0a27_annotateConstraintTup(&(*_self_), _46242_k);;
			}
		}
		else {
			_case_begin_1c8c4ad6e:;
			{
				return false;;
			}
		}
		_match_end_1c8c4ad19:;
	};
}



inline void _20d8a17a3_pushGeneric(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _48735_k, jule::I64 _48749_i) {
	(*_self_)._field_f.get()._field_Generics[_48749_i]=jule::new_ptr<_20d8e1e53_InsGeneric>(_20d8e1e53_InsGeneric{._field_Kind=_48735_k, });
	jule::Ptr<_20cb965e3_GenericDecl> _48917_gd = (*_self_)._field_f.get()._field_Decl.get()._field_Generics[_48749_i];;
	if (((_48917_gd.get()._field_Constraint == nullptr) || (_48917_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_48917_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_20d8a1484_annotateConstraint(&(*_self_), _48735_k);
}



inline jule::Bool _20d8a1ab1_annotatePrim(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _49743_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _20d8a38d7_annotateAny(&(*_self_), _49743_k);
	return __jule_func_result;;
}



inline jule::Bool _20d8a1dbe_annotateArr(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _50142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d8ee768_Arr> _50217_parr = _20d8e672c_Arr((*((*_self_)._field_k)).ptr());;
	if ((_50217_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20d8ee768_Arr> _50617_arr = _20d8e672c_Arr(_50142_k.ptr());;
	(*_self_)._field_k=(&(_50217_parr.get()._field_Elem));
	__jule_func_result = _20d8a3be5_annotateKind(&(*_self_), _50617_arr.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _20d8a21cc_annotateSlc(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _51142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d8ec5bd_Slc> _51217_pslc = _20d8e6991_Slc((*((*_self_)._field_k)).ptr());;
	if ((_51217_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20d8ec5bd_Slc> _51617_slc = _20d8e6991_Slc(_51142_k.ptr());;
	(*_self_)._field_k=(&(_51217_pslc.get()._field_Elem));
	__jule_func_result = _20d8a3be5_annotateKind(&(*_self_), _51617_slc.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _20d8a2584_checkMapKey(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>* _52141_k, jule::Ptr<_20d8e3680_TypeKind>& _52161_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d8e3680_TypeKind>* _52217_old = (*_self_)._field_k;;
	(*_self_)._field_k=_52141_k;
	__jule_func_result=_20d8a3be5_annotateKind(&(*_self_), _52161_ck);
	(*_self_)._field_k=_52217_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _20d8a2892_annotateMap(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _52942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d8edb74_Map> _53017_pmap = _20d8e7442_Map((*((*_self_)._field_k)).ptr());;
	if ((_53017_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20d8edb74_Map> _53417_m = _20d8e7442_Map(_52942_k.ptr());;
	__jule_func_result = (_20d8a2584_checkMapKey(&(*_self_), (&(_53017_pmap.get()._field_Key)),_53417_m.get()._field_Key) && _20d8a2584_checkMapKey(&(*_self_), (&(_53017_pmap.get()._field_Val)),_53417_m.get()._field_Val));
	return __jule_func_result;;
}



inline jule::Bool _20d8a2ba0_annotateFn(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _53941_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d814749_FnIns> _54017_pf = _20d8e6c05_Fn((*((*_self_)._field_k)).ptr());;
	if ((_54017_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20d814749_FnIns> _54417_f = _20d8e6c05_Fn(_53941_k.ptr());;
	{
		
		if ((_54017_pf.get()._field_Params.len() != _54417_f.get()._field_Params.len())) {
			_case_begin_1c8c673b8:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_20cbeec56_IsVoid(_54017_pf.get()._field_Decl.ptr()) != _20cbeec56_IsVoid(_54417_f.get()._field_Decl.ptr()))) {
			_case_begin_1c8c67440:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c8c67330:;
	};
	__jule_func_result=true;
	jule::Ptr<_20d8e3680_TypeKind>* _55317_old = (*_self_)._field_k;;
	{
		auto &expr = _54417_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c8c68c38:;
		if (it != expr.end()) {
			jule::I64 _55414_i = it - expr.begin();
			jule::Ptr<_20d81455c_ParamIns> _55421_fp = *it;
			{
				(*_self_)._field_k=(&(_54017_pf.get()._field_Params[_55414_i].get()._field_Kind));
				__jule_func_result=(_20d8a3be5_annotateKind(&(*_self_), _55421_fp.get()._field_Kind) && __jule_func_result);
			}
			_iter_next_1c8c68c38:;
			++it;
			_55414_i++;
			goto _iter_begin_1c8c68c38;
		}
		_iter_end_1c8c68c38:;
	};
	if ((!(_20cbeec56_IsVoid(_54017_pf.get()._field_Decl.ptr())))) {
		(*_self_)._field_k=(&(_54017_pf.get()._field_Result));
		__jule_func_result=(_20d8a3be5_annotateKind(&(*_self_), _54417_f.get()._field_Result) && __jule_func_result);
	};
	(*_self_)._field_k=_55317_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _20d8a2ead_annotatePtr(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _56842_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d9001c5_Ptr> _56917_pptr = _20d8e5ee0_Ptr((*((*_self_)._field_k)).ptr());;
	if ((_56917_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20d9001c5_Ptr> _57317_ptr = _20d8e5ee0_Ptr(_56842_k.ptr());;
	(*_self_)._field_k=(&(_56917_pptr.get()._field_Elem));
	__jule_func_result = _20d8a3be5_annotateKind(&(*_self_), _57317_ptr.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _20d8a32bb_annotateSptr(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _57843_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d8ebb61_Sptr> _57917_ssptr = _20d8e5c7b_Sptr((*((*_self_)._field_k)).ptr());;
	if ((_57917_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20d8ebb61_Sptr> _58317_sptr = _20d8e5c7b_Sptr(_57843_k.ptr());;
	(*_self_)._field_k=(&(_57917_ssptr.get()._field_Elem));
	__jule_func_result = _20d8a3be5_annotateKind(&(*_self_), _58317_sptr.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _20d8a35c9_annotateStruct(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _58845_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20cba5db6_StructIns> _58917_s = _20d8e6e69_Struct((*((*_self_)._field_k)).ptr());;
	if ((_58917_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20cba5db6_StructIns> _59317_s2 = _20d8e6e69_Struct(_58845_k.ptr());;
	if ((_58917_s.get()._field_Generics.len() != _59317_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &expr = _58917_s.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c8c71d73:;
		if (it != expr.end()) {
			jule::I64 _59714_i = it - expr.begin();
			jule::Ptr<_20d8e1e53_InsGeneric> _59721_g = *it;
			{
				jule::Ptr<_20d8e1e53_InsGeneric> _59821_g2 = _59317_s2.get()._field_Generics[_59714_i];;
				if (_20d8e3d89_Equals(_59721_g.get()._field_Kind, _59821_g2.get()._field_Kind)) {
					goto _iter_next_1c8c71d73;
				};
				(*_self_)._field_k=(&(_59721_g.get()._field_Kind));
				if ((!(_20d8a3be5_annotateKind(&(*_self_), _59821_g2.get()._field_Kind)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c8c71d73:;
			++it;
			_59714_i++;
			goto _iter_begin_1c8c71d73;
		}
		_iter_end_1c8c71d73:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d8a38d7_annotateAny(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _61042_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _61113_kind = _20d8e3a7b_Str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c8c747d2:;
		if (it != expr.end()) {
			jule::I64 _61213_i = it - expr.begin();
			jule::Ptr<_20cb965e3_GenericDecl> _61216_g = *it;
			{
				if ((_61113_kind != _61216_g.get()._field_Ident)) {
					goto _iter_next_1c8c747d2;
				};
				jule::Ptr<_20d8e1e53_InsGeneric> _61617_t = (*_self_)._field_f.get()._field_Generics[_61213_i];;
				{
					
					if ((_61617_t == nullptr) || (_61617_t.get()._field_Kind == nullptr)) {
						_case_begin_1c8c76471:;
						{
							_20d8a17a3_pushGeneric(&(*_self_), _61042_k,_61213_i);
						}
					}
					else if ((!(_20d8e3d89_Equals(_61617_t.get()._field_Kind, _61042_k)))) {
						_case_begin_1c8c764e8:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1c8c7631c:;
				};
				(*((*_self_)._field_k)).get()._field_Kind=_61042_k.get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1c8c747d2:;
			++it;
			_61213_i++;
			goto _iter_begin_1c8c747d2;
		}
		_iter_end_1c8c747d2:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _20d8a3be5_annotateKind(_20d89ed34_dynamicTypeAnnotation* _self_, jule::Ptr<_20d8e3680_TypeKind>& _63243_k) {
	jule::Bool __jule_func_result = false;
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_20d8a38d7_annotateAny(&(*_self_), _63243_k)) {
			_case_begin_1c8c78a39:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_20d8e5a17_Prim(_63243_k.ptr()) != nullptr)) {
			_case_begin_1c8c78aa0:;
			{
				__jule_func_result = _20d8a1ab1_annotatePrim(&(*_self_), _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_20d8e672c_Arr(_63243_k.ptr()) != nullptr)) {
			_case_begin_1c8c78b16:;
			{
				__jule_func_result = _20d8a1dbe_annotateArr(&(*_self_), _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_20d8e6991_Slc(_63243_k.ptr()) != nullptr)) {
			_case_begin_1c8c78b7c:;
			{
				__jule_func_result = _20d8a21cc_annotateSlc(&(*_self_), _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_20d8e7442_Map(_63243_k.ptr()) != nullptr)) {
			_case_begin_1c8c78e02:;
			{
				__jule_func_result = _20d8a2892_annotateMap(&(*_self_), _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_20d8e6c05_Fn(_63243_k.ptr()) != nullptr)) {
			_case_begin_1c8c78e68:;
			{
				__jule_func_result = _20d8a2ba0_annotateFn(&(*_self_), _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_20d8e5ee0_Ptr(_63243_k.ptr()) != nullptr)) {
			_case_begin_1c8c78ece:;
			{
				__jule_func_result = _20d8a2ead_annotatePtr(&(*_self_), _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_20d8e5c7b_Sptr(_63243_k.ptr()) != nullptr)) {
			_case_begin_1c8c79045:;
			{
				__jule_func_result = _20d8a32bb_annotateSptr(&(*_self_), _63243_k);
				return __jule_func_result;;
			}
		}
		else if ((_20d8e6e69_Struct(_63243_k.ptr()) != nullptr)) {
			_case_begin_1c8c79298:;
			{
				__jule_func_result = _20d8a35c9_annotateStruct(&(*_self_), _63243_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c8c789c3:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c8c7896d:;
	};
}



inline jule::Bool _20d8a3e59_annotate(_20d89ed34_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_Kind));
	__jule_func_result = _20d8a3be5_annotateKind(&(*_self_), (*_self_)._field_a.get()._field_Kind);
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d89ed34_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c;
	_Stream << "}";
	return _Stream;
}



inline void _20d8a4b80_pushErrToken(_20d8a4630_fnCallArgChecker* _self_, jule::Ptr<_20b4e5581_Token> _67631_token, jule::Str _67646_fmt, jule::Slice<jule::Any> _67659_args) {
	_20d84ed5b_pushErr((*_self_)._field_e.get()._field_s.ptr(), _67631_token,_67646_fmt,_67659_args);
}



inline void _20d8a4e9e_pushErr(_20d8a4630_fnCallArgChecker* _self_, jule::Str _68026_fmt, jule::Slice<jule::Any> _68039_args) {
	_20d8a4b80_pushErrToken(&(*_self_), (*_self_)._field_errorToken,_68026_fmt,_68039_args);
}



inline jule::Slice<jule::Ptr<_20d81455c_ParamIns>> _20d8a5213_getParams(_20d8a4630_fnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_Params.len() > 0LL) && ((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _20cbece41_IsSelf((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*_self_)._field_f.get()._field_Params.slice(1LL);;
	};
	return (*_self_)._field_f.get()._field_Params;;
}



inline jule::Bool _20d8a5521_checkCounts(_20d8a4630_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_20d81455c_ParamIns>>& _69331_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _69417_n = _69331_params.len();;
	if (((_69417_n > 0LL) && _20cbece41_IsSelf(_69331_params[0LL].get()._field_Decl.ptr()))) {
		(_69417_n)--;
	};
	jule::I64 _69917_diff = (_69417_n - (*_self_)._field_args.len());;
	{
		
		if ((_69917_diff == 0LL)) {
			_case_begin_1c8c84c54:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_69417_n > 0LL) && _69331_params[(_69417_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1c8c84ccb:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_69917_diff < 0LL) || (_69917_diff > _69331_params.len()))) {
			_case_begin_1c8c84d53:;
			{
				_20d8a4e9e_pushErr(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c8c84bcc:;
	};
	jule::Str _71017_idents = jule::Str();;
	for (; (_69917_diff > 0LL); (_69917_diff)--) {
		{
			_71017_idents+=(jule::Str(", ", 2) + _69331_params[(_69417_n - _69917_diff)].get()._field_Decl.get()._field_Ident);
		}
	_iter_next_1c8c86805:;
	}
	_iter_end_1c8c86805:;;
	(_71017_idents).mut_slice(2LL);;
	_20d8a4e9e_pushErr(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_71017_idents)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _20d8a5972_checkArg(_20d8a4630_fnCallArgChecker* _self_, jule::Ptr<_20d81455c_ParamIns>& _72032_p, jule::Ptr<_20d8b2891_Data>& _72051_arg, jule::Ptr<_20b4e5581_Token>& _72068_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*_self_)._field_dynamicAnnotation && _20d8153d7_parameterUsesGenerics(_72032_p.get()._field_Decl,(*_self_)._field_f.get()._field_Decl.get()._field_Generics))) {
		__jule_func_result=(!(_72032_p.get()._field_Decl.get()._field_Variadic));
		if (__jule_func_result) {
			_20d89ed34_dynamicTypeAnnotation _72425_dta = _20d89ed34_dynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_72032_p, ._field_a=_72051_arg, ._field_errorToken=_72068_errorToken, };;
			__jule_func_result=_20d8a3e59_annotate(&_72425_dta);
		};
		if ((!(__jule_func_result))) {
			_20d8a4b80_pushErrToken(&(*_self_), _72068_errorToken,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_20d85997b_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, _72032_p.get()._field_Decl.get()._field_Mutable,_72032_p.get()._field_Decl.get()._field_Reference,_72032_p.get()._field_Kind,_72051_arg,_72068_errorToken)) {
		_20d856c42_checkAssignType((*_self_)._field_e.get()._field_s, _72032_p.get()._field_Decl.get()._field_Reference,_72032_p.get()._field_Kind,_72051_arg,_72068_errorToken);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d8a5d29_push(_20d8a4630_fnCallArgChecker* _self_, jule::Ptr<_20d81455c_ParamIns>& _74728_p, jule::Ptr<_20cb8d81b_Expr> _74746_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d8e3680_TypeKind> _74817_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _74913_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_20d8b2891_Data> _75017_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_74728_p.get()._field_Decl.get()._field_Mutable));
	if (((!((*_self_)._field_dynamicAnnotation)) && (!(_74728_p.get()._field_Decl.get()._field_Variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_74728_p.get()._field_Kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_75017_d=_20d8ce715_evalExprKind((*_self_)._field_e, _74746_arg.get()._field_Kind);
	(*_self_)._field_e.get()._field_prefix=_74817_old;
	(*_self_)._field_e.get()._field_immutable=_74913_old_immut;
	if ((_75017_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_20d8a5972_checkArg(&(*_self_), _74728_p,_75017_d,_74746_arg.get()._field_Token);
	(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_75017_d.get()._field_Model);;
	return __jule_func_result;;
}



inline jule::Bool _20d8a61d1_pushVariadic(_20d8a4630_fnCallArgChecker* _self_, jule::Ptr<_20d81455c_ParamIns>& _77236_p, jule::I64 _77254_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _77417_variadiced = false;;
	jule::Bool _77513_more = ((_77254_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_20d80e689_SliceExprModel> _77617_model = jule::new_ptr<_20d80e689_SliceExprModel>(_20d80e689_SliceExprModel{._field_ElemKind=_77236_p.get()._field_Kind, });;
	jule::Ptr<_20d8e3680_TypeKind> _78017_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _78513_variadic = _77236_p.get()._field_Kind.get()._field_Variadic;;
	_77236_p.get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		_77236_p.get()._field_Kind.get()._field_Variadic=_78513_variadic;
	});;
	for (; (_77254_i < (*_self_)._field_args.len()); (_77254_i)++) {
		{
			jule::Ptr<_20cb8d81b_Expr> _79221_arg = (*_self_)._field_args[_77254_i];;
			{
				auto &_match_expr{ _79221_arg.get()._field_Kind };
				
				if (_match_expr.type_is_ptr<_20cb9108d_VariadicExpr>()) {
					_case_begin_1c8c9513d:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(jule::new_ptr<_20d8ec5bd_Slc>(_20d8ec5bd_Slc{._field_Elem=_77236_p.get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_1c8c9598a:;
					{
						(*_self_)._field_e.get()._field_prefix=_77236_p.get()._field_Kind;
					}
				}
				_match_end_1c8c95803:;
			};
			jule::Ptr<_20d8b2891_Data> _80521_d = _20d8cea23_eval((*_self_)._field_e, _79221_arg);;
			if ((_80521_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1c8c945b0;
			};
			if (_80521_d.get()._field_Kind.get()._field_Variadic) {
				_77417_variadiced=true;
				_77236_p.get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _20d8a5972_checkArg(&(*_self_), _77236_p,_80521_d,_79221_arg.get()._field_Token));
				{
					auto &_match_expr{ _80521_d.get()._field_Model };
					
					if (_match_expr.type_is_ptr<_20d80e689_SliceExprModel>()) {
						_case_begin_1c8c97b46:;
						{
							_77617_model=_80521_d.get()._field_Model.operator jule::Ptr<_20d80e689_SliceExprModel>();
							_77617_model.get()._field_ElemKind=_77236_p.get()._field_Kind;
						}
					}
					else {
						_case_begin_1c8c98927:;
						{
							_77617_model=nullptr;
							(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_80521_d.get()._field_Model);;
						}
					}
					_match_end_1c8c98a26:;
				};
				(_77254_i)++;
				goto _iter_end_1c8c945b0;
			};
			__jule_func_result=(__jule_func_result && _20d8a5972_checkArg(&(*_self_), _77236_p,_80521_d,_79221_arg.get()._field_Token));
			_77617_model.get()._field_Elems = jule::alloc_for_append(_77617_model.get()._field_Elems,1);_77617_model.get()._field_Elems.__push(_80521_d.get()._field_Model);;
		}
	_iter_next_1c8c945b0:;
	}
	_iter_end_1c8c945b0:;;
	(*_self_)._field_e.get()._field_prefix=_78017_old;
	if ((_77417_variadiced && _77513_more)) {
		_20d8a4b80_pushErrToken(&(*_self_), (*_self_)._field_args[_77254_i].get()._field_Token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_77617_model != nullptr)) {
		(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(static_cast<jule::Any>(_77617_model));;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _20d8a64de_checkArgs(_20d8a4630_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_20d81455c_ParamIns>>& _84833_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _84913_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I64 _85317_i = 0LL;;
	if (((_84833_params.len() > 0LL) && _20cbece41_IsSelf(_84833_params[0LL].get()._field_Decl.ptr()))) {
		(_85317_i)++;
	};
	_julec_label_iter:;
	while ((_85317_i < _84833_params.len())) {
		{
			jule::Ptr<_20d81455c_ParamIns> _86021_p = _84833_params[_85317_i];;
			{
				
				if (_86021_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1c8ca06ed:;
					{
						__jule_func_result=(_20d8a61d1_pushVariadic(&(*_self_), _86021_p,_85317_i) && __jule_func_result);
						goto _iter_end_1c8c9d531;
					}
				}
				else if (((*_self_)._field_args.len() <= _85317_i)) {
					_case_begin_1c8c9eea0:;
					{
						__jule_func_result=false;
						goto _iter_end_1c8c9d531;
					}
				}
				else {
					_case_begin_1c8c9eb09:;
					{
						__jule_func_result=(_20d8a5d29_push(&(*_self_), _86021_p,(*_self_)._field_args[_85317_i]) && __jule_func_result);
					}
				}
				_match_end_1c8c9ea93:;
			};
			(_85317_i)++;
		}
	_iter_next_1c8c9d531:;
	}
	_iter_end_1c8c9d531:;;
	(*_self_)._field_e.get()._field_arg=_84913_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _20d8a6775_checkDynamicTypeAnnotation(_20d8a4630_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = (*_self_)._field_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c8ca1eb3:;
		if (it != expr.end()) {
			jule::Ptr<_20d8e1e53_InsGeneric> _88016_g = *it;
			{
				if ((_88016_g == nullptr)) {
					_20d8a4e9e_pushErr(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c8ca1eb3:;
			++it;
			goto _iter_begin_1c8ca1eb3;
		}
		_iter_end_1c8ca1eb3:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d8a69ea_check(_20d8a4630_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_20d81455c_ParamIns>> _89017_params = _20d8a5213_getParams(&(*_self_));;
	__jule_func_result=_20d8a5521_checkCounts(&(*_self_), _89017_params);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_20d8a64de_checkArgs(&(*_self_), _89017_params);
	if ((__jule_func_result && (*_self_)._field_dynamicAnnotation)) {
		__jule_func_result=_20d8a6775_checkDynamicTypeAnnotation(&(*_self_));
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8a4630_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels;
	_Stream << "}";
	return _Stream;
}



inline void _20d8a7545_pushErr(_20d8a7039_structLitChecker* _self_, jule::Ptr<_20b4e5581_Token> _91126_token, jule::Str _91141_fmt, jule::Slice<jule::Any> _91154_args) {
	_20d8b491a_pushErr((*_self_)._field_e.ptr(), _91126_token,_91141_fmt,_91154_args);
}



inline void _20d8a7864_pushSugggestion(_20d8a7039_structLitChecker* _self_, jule::Str _91634_fmt, jule::Slice<jule::Any> _91647_args) {
	_20d8b4c39_pushSugggestion((*_self_)._field_e.ptr(), _91634_fmt,_91647_args);
}



inline void _20d8a7c2c_pushMatch(_20d8a7039_structLitChecker* _self_, jule::Ptr<_20cba5bc9_FieldIns>& _92033_f, jule::Ptr<_20d8b2891_Data>& _92052_d, jule::Ptr<_20b4e5581_Token>& _92067_errorToken) {
	;
	if (_20d85997b_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_92033_f.get()._field_Kind,_92052_d,_92067_errorToken)) {
		_20d856c42_checkAssignType((*_self_)._field_e.get()._field_s, false,_92033_f.get()._field_Kind,_92052_d,_92067_errorToken);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_20d80dbe9_StructArgExprModel>(_20d80dbe9_StructArgExprModel{._field_Field=_92033_f, ._field_Expr=_92052_d.get()._field_Model}));;
}



inline void _20d8a804b_checkPair(_20d8a7039_structLitChecker* _self_, jule::Ptr<_20cb9327c_FieldExprPair>& _93333_pair, jule::Slice<jule::Ptr<_20cb8d81b_Expr>>& _93360_exprs) {
	jule::Ptr<_20cba5bc9_FieldIns> _93517_f = _20cb80ee5_FindField((*_self_)._field_s.ptr(), _93333_pair.get()._field_Field.get()._field_Kind);;
	if ((_93517_f == nullptr)) {
		_20d8a7545_pushErr(&(*_self_), _93333_pair.get()._field_Field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_93333_pair.get()._field_Field.get()._field_Kind)}));
		return;;
	};
	if ((!(_20d850532_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _93517_f.get()._field_Decl.get()._field_Public,_93517_f.get()._field_Decl.get()._field_Token)))) {
		_20d8a7545_pushErr(&(*_self_), _93333_pair.get()._field_Field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_93333_pair.get()._field_Field.get()._field_Kind)}));
		_20d8a7864_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _93360_exprs;
		auto it = expr.begin();
		_iter_begin_1c8cab9c3:;
		if (it != expr.end()) {
			jule::Ptr<_20cb8d81b_Expr> _94721_expr = *it;
			{
				{
					auto &_match_expr{ _94721_expr.get()._field_Kind };
					
					if (_match_expr.type_is_ptr<_20cb9327c_FieldExprPair>()) {
						_case_begin_1c8cac397:;
						{
							jule::Ptr<_20cb9327c_FieldExprPair> _95025_dpair = _94721_expr.get()._field_Kind.operator jule::Ptr<_20cb9327c_FieldExprPair>();;
							{
								
								if ((_93333_pair == _95025_dpair)) {
									_case_begin_1c8cad2cc:;
									{
										goto _iter_end_1c8cab9c3;
									}
								}
								else if ((_93333_pair.get()._field_Field.get()._field_Kind == _95025_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1c8cad354:;
									{
										_20d8a7545_pushErr(&(*_self_), _93333_pair.get()._field_Field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_93333_pair.get()._field_Field.get()._field_Kind)}));
										goto _iter_end_1c8cab9c3;
									}
								}
								_match_end_1c8cad222:;
							};
						}
					}
					_match_end_1c8cac177:;
				};
			}
			_iter_next_1c8cab9c3:;
			++it;
			goto _iter_begin_1c8cab9c3;
		}
		_iter_end_1c8cab9c3:;
	};
	jule::Ptr<_20d8e3680_TypeKind> _96117_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_96117_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_93517_f.get()._field_Kind;
	jule::Ptr<_20d8b2891_Data> _96517_d = _20d8ce715_evalExprKind((*_self_)._field_e, _93333_pair.get()._field_Expr.get()._field_Kind);;
	if ((_96517_d == nullptr)) {
		return;;
	};
	_20d8a7c2c_pushMatch(&(*_self_), _93517_f,_96517_d,_93333_pair.get()._field_Field);
}



inline jule::Bool _20d8a8359_readyExprs(_20d8a7039_structLitChecker* _self_, jule::Slice<jule::Ptr<_20cb8d81b_Expr>>& _97234_exprs) {
	jule::Bool _97317_ok = true;;
	{
		auto &expr = _97234_exprs;
		auto it = expr.begin();
		_iter_begin_1c8cb1bd7:;
		if (it != expr.end()) {
			jule::I64 _97414_i = it - expr.begin();
			jule::Ptr<_20cb8d81b_Expr> _97421_expr = *it;
			{
				{
					auto &_match_expr{ _97421_expr.get()._field_Kind };
					
					if (_match_expr.type_is_ptr<_20cb94723_KeyValPair>()) {
						_case_begin_1c8cb2996:;
						{
							jule::Ptr<_20cb94723_KeyValPair> _97725_pair = _97421_expr.get()._field_Kind.operator jule::Ptr<_20cb94723_KeyValPair>();;
							{
								auto &_match_expr{ _97725_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type_is_ptr<_20cb904cc_IdentExpr>()) {
									_case_begin_1c8cb326b:;
									{
										goto _match_end_1c8cb3700;
									}
								}
								else {
									_case_begin_1c8cb3975:;
									{
										_20d8a7545_pushErr(&(*_self_), _97725_pair.get()._field_Colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_97317_ok=false;
										goto _iter_next_1c8cb1bd7;
									}
								}
								_match_end_1c8cb3700:;
							};
							_97234_exprs[_97414_i].get()._field_Kind=static_cast<jule::Any>(jule::new_ptr<_20cb9327c_FieldExprPair>(_20cb9327c_FieldExprPair{._field_Field=_97725_pair.get()._field_Key.get()._field_Token, ._field_Expr=_97725_pair.get()._field_Val}));
						}
					}
					_match_end_1c8cb2776:;
				};
			}
			_iter_next_1c8cb1bd7:;
			++it;
			_97414_i++;
			goto _iter_begin_1c8cb1bd7;
		}
		_iter_end_1c8cb1bd7:;
	};
	return _97317_ok;;
}



inline void _20d8a85ce_check(_20d8a7039_structLitChecker* _self_, jule::Slice<jule::Ptr<_20cb8d81b_Expr>>& _99629_exprs) {
	if ((_99629_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_20d8a8359_readyExprs(&(*_self_), _99629_exprs)))) {
		return;;
	};
	jule::Bool _100317_paired = false;;
	{
		auto &expr = _99629_exprs;
		auto it = expr.begin();
		_iter_begin_1c8cb26bb:;
		if (it != expr.end()) {
			jule::I64 _100414_i = it - expr.begin();
			jule::Ptr<_20cb8d81b_Expr> _100421_expr = *it;
			{
				{
					auto &_match_expr{ _100421_expr.get()._field_Kind };
					
					if (_match_expr.type_is_ptr<_20cb9327c_FieldExprPair>()) {
						_case_begin_1c8cbb175:;
						{
							jule::Ptr<_20cb9327c_FieldExprPair> _100725_pair = _100421_expr.get()._field_Kind.operator jule::Ptr<_20cb9327c_FieldExprPair>();;
							if (((_100414_i > 0LL) && (!(_100317_paired)))) {
								_20d8a7545_pushErr(&(*_self_), _100725_pair.get()._field_Field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_100317_paired=true;
							_20d8a804b_checkPair(&(*_self_), _100725_pair,_99629_exprs);
						}
					}
					else {
						_case_begin_1c8cb6a55:;
						{
							if (_100317_paired) {
								_20d8a7545_pushErr(&(*_self_), _100421_expr.get()._field_Token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_100414_i >= (*_self_)._field_s.get()._field_Fields.len())) {
								_20d8a7545_pushErr(&(*_self_), _100421_expr.get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1c8cb26bb;
							};
							jule::Ptr<_20cba5bc9_FieldIns> _102225_field = (*_self_)._field_s.get()._field_Fields[_100414_i];;
							if ((!(_20d850532_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _102225_field.get()._field_Decl.get()._field_Public,_102225_field.get()._field_Decl.get()._field_Token)))) {
								_20d8a7545_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_20d8a7864_pushSugggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_20d8e3680_TypeKind> _103025_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_103025_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102225_field.get()._field_Kind;
							jule::Ptr<_20d8b2891_Data> _103425_d = _20d8ce715_evalExprKind((*_self_)._field_e, _100421_expr.get()._field_Kind);;
							if ((_103425_d == nullptr)) {
								goto _iter_next_1c8cb26bb;
							};
							_20d8a7c2c_pushMatch(&(*_self_), _102225_field,_103425_d,_100421_expr.get()._field_Token);
						}
					}
					_match_end_1c8cb68bd:;
				};
			}
			_iter_next_1c8cb26bb:;
			++it;
			_100414_i++;
			goto _iter_begin_1c8cb26bb;
		}
		_iter_end_1c8cb26bb:;
	};
	if ((!(_100317_paired))) {
		jule::I64 _104517_n = (*_self_)._field_s.get()._field_Fields.len();;
		jule::I64 _104621_diff = (_104517_n - _99629_exprs.len());;
		{
			
			if ((_104621_diff <= 0LL)) {
				_case_begin_1c8cbe332:;
				{
					return;;
				}
			}
			_match_end_1c8cbe211:;
		};
		jule::Str _105221_idents = jule::Str();;
		for (; (_104621_diff > 0LL); (_104621_diff)--) {
			{
				_105221_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_Fields[(_104517_n - _104621_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1c8cbec28:;
		}
		_iter_end_1c8cbec28:;;
		(_105221_idents).mut_slice(2LL);;
		_20d8a7545_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105221_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d8a7039_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d869eb9_Var> _20d8a90b3_buildVar(_20d8a8b1d_rangeChecker* _self_, jule::Ptr<_20cb9bc58_VarDecl>& _107128_decl) {
	jule::Ptr<_20d869eb9_Var> _107217_v = _20d817ac1_buildVar(_107128_decl);;
	return _107217_v;;
}



inline void _20d8a928e_setSizeKey(_20d8a8b1d_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _20b4e7d25_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyA=_20d8a90b3_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_20d8e7a5d_TypeSymbol>(_20d8e7a5d_TypeSymbol{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is_ptr<_20d869eb9_Var>()) {
			_case_begin_1c8cc3897:;
			{
				(*_self_)._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_20d868e85_IterRelation>(_20d868e85_IterRelation{._field_Range=(*_self_)._field_d.get()._field_Model.operator jule::Ptr<_20d869eb9_Var>()});
			}
		}
		_match_end_1c8cc3842:;
	};
}



inline void _20d8a9657_checkRangeExprValidity(_20d8a8b1d_rangeChecker* _self_, jule::Ptr<_20d8b2891_Data>& _110246_d, jule::Ptr<_20d869eb9_Var>& _110257_key, jule::Ptr<_20d8e3680_TypeKind>& _110273_k) {
	jule::Bool _110317__mut = _110257_key.get()._field_Mutable;;
	if ((_110317__mut && (!(_20d8e4d02_Mutable(_110273_k.ptr()))))) {
		_110317__mut=false;
	};
	_20d85997b_checkValidityForInitExpr((*_self_)._field_sc.get()._field_s, _110317__mut,_110257_key.get()._field_Reference,_110257_key.get()._field_Kind.get()._field_Kind,_110246_d,(*_self_)._field_rang.get()._field_InToken);
}



inline void _20d8a9833_checkSlice(_20d8a8b1d_rangeChecker* _self_) {
	_20d8a928e_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _20b4e7d25_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_20d8ec5bd_Slc> _112117_slc = _20d8e6991_Slc((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_20d8a90b3_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_20d8e7a5d_TypeSymbol>(_20d8e7a5d_TypeSymbol{._field_Kind=_112117_slc.get()._field_Elem});
	_20d8a9657_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_112117_slc.get()._field_Elem);
}



inline void _20d8a9a0e_checkArray(_20d8a8b1d_rangeChecker* _self_) {
	_20d8a928e_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _20b4e7d25_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_20d8ee768_Arr> _113417_arr = _20d8e672c_Arr((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_20d8a90b3_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_20d8e7a5d_TypeSymbol>(_20d8e7a5d_TypeSymbol{._field_Kind=_113417_arr.get()._field_Elem});
	_20d8a9657_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_113417_arr.get()._field_Elem);
}



inline void _20d8a9bda_checkMapKeyA(_20d8a8b1d_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _20b4e7d25_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_20d8edb74_Map> _114617_m = _20d8e7442_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyA=_20d8a90b3_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_20d8e7a5d_TypeSymbol>(_20d8e7a5d_TypeSymbol{._field_Kind=_114617_m.get()._field_Key});
	jule::Ptr<_20d8b2891_Data> _115017_d = jule::new_ptr<_20d8b2891_Data>((*((*_self_)._field_d)));;
	_115017_d.get()._field_Kind=_114617_m.get()._field_Key;
	_20d8a9657_checkRangeExprValidity(&(*_self_), _115017_d,(*_self_)._field_Kind.get()._field_KeyA,_114617_m.get()._field_Key);
}



inline void _20d8a9db6_checkMapKeyB(_20d8a8b1d_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _20b4e7d25_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_20d8edb74_Map> _116117_m = _20d8e7442_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_20d8a90b3_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_20d8e7a5d_TypeSymbol>(_20d8e7a5d_TypeSymbol{._field_Kind=_116117_m.get()._field_Val});
	jule::Ptr<_20d8b2891_Data> _116517_d = jule::new_ptr<_20d8b2891_Data>((*((*_self_)._field_d)));;
	_116517_d.get()._field_Kind=_116117_m.get()._field_Val;
	_20d8a9657_checkRangeExprValidity(&(*_self_), _116517_d,(*_self_)._field_Kind.get()._field_KeyB,_116117_m.get()._field_Val);
}



inline void _20d8aa092_checkMap(_20d8a8b1d_rangeChecker* _self_) {
	_20d8a9bda_checkMapKeyA(&(*_self_));
	_20d8a9db6_checkMapKeyB(&(*_self_));
}



inline void _20d8aa26d_checkStr(_20d8a8b1d_rangeChecker* _self_) {
	_20d8a928e_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _20b4e7d25_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyB=_20d8a90b3_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_20d8e7a5d_TypeSymbol>(_20d8e7a5d_TypeSymbol{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _20d8aa4d2_check(_20d8a8b1d_rangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1c8cd6e60:;
		}
		else if ((_20d8e6991_Slc((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8cd6855:;
			{
				_20d8a9833_checkSlice(&(*_self_));
				return true;;
			}
		}
		else if ((_20d8e672c_Arr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8cd68bb:;
			{
				_20d8a9a0e_checkArray(&(*_self_));
				return true;;
			}
		}
		else if ((_20d8e7442_Map((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8cd6932:;
			{
				_20d8aa092_checkMap(&(*_self_));
				return true;;
			}
		}
		else {
			_case_begin_1c8cd67de:;
			{
				jule::Ptr<_20d8e83cc_Prim> _120317_prim = _20d8e5a17_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (((_120317_prim != nullptr) && _20d8eb611_IsStr(_120317_prim.ptr()))) {
					_20d8aa26d_checkStr(&(*_self_));
					return true;;
				};
			}
		}
		_match_end_1c8cd6723:;
	};
	_20d84ed5b_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_InToken,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8a8b1d_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _20d8ab14d_prepareTypes(_20d8aaba8_retTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_20d814ccc_Types((*_self_)._field_f.ptr());
	};
}



inline void _20d8ab3c3_prepareExprs(_20d8aaba8_retTypeChecker* _self_, jule::Ptr<_20cb8d81b_Expr>& _123136_e) {
	if ((_123136_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123136_e.get()._field_Kind };
		
		if (_match_expr.type_is_ptr<_20cb8e498_TupleExpr>()) {
			_case_begin_1c8cdc196:;
			{
				(*_self_)._field_exprs=_123136_e.get()._field_Kind.operator jule::Ptr<_20cb8e498_TupleExpr>().get()._field_Expr;
			}
		}
		else {
			_case_begin_1c8cdc394:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123136_e);;
			}
		}
		_match_end_1c8cdbedc:;
	};
}



inline void _20d8ab59e_checkExprs(_20d8aaba8_retTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_20d8b2891_Data>> _124717_datas = jule::Slice<jule::Ptr<_20d8b2891_Data>>::alloc(0LL, (*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1c8cde2db:;
		if (it != expr.end()) {
			jule::I64 _124814_i = it - expr.begin();
			jule::Ptr<_20cb8d81b_Expr> _124821_expr = *it;
			{
				if ((_124814_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1c8cde2db;
				};
				jule::Ptr<_20d8e3680_TypeKind> _125321_t = (*_self_)._field_types[_124814_i];;
				jule::Ptr<_20d8b2891_Data> _125521_d = _20d8ced31_evalExpr(_20d856439_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_20d90e536_Lookup>((*_self_)._field_sc, 0),_125321_t), _124821_expr);;
				if ((_125521_d == nullptr)) {
					goto _iter_next_1c8cde2db;
				};
				_124717_datas = jule::alloc_for_append(_124717_datas,1);_124717_datas.__push(_125521_d);;
				if (((!(_125521_d.get()._field_Mutable)) && _20d8e4d02_Mutable(_125521_d.get()._field_Kind.ptr()))) {
					_20d84ed5b_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_20d89d41a_assignTypeChecker _126721_ac = _20d89d41a_assignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_125321_t, ._field_d=_125521_d, ._field_errorToken=(*_self_)._field_errorToken};;
				_20d89e592_check(&_126721_ac);
			}
			_iter_next_1c8cde2db:;
			++it;
			_124814_i++;
			goto _iter_begin_1c8cde2db;
		}
		_iter_end_1c8cde2db:;
	};
	if ((_124717_datas.len() > 1LL)) {
		(*_self_)._field_model=static_cast<jule::Any>(jule::new_ptr<_20d8111c4_TupleExprModel>(_20d8111c4_TupleExprModel{._field_Datas=_124717_datas}));
	} else if ((_124717_datas.len() == 1LL)) {
		(*_self_)._field_model=_124717_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _20d8ab8ac_check(_20d8aaba8_retTypeChecker* _self_, jule::Ptr<_20cb8d81b_Expr>& _128629_e) {
	_20d8ab14d_prepareTypes(&(*_self_));
	_20d8ab3c3_prepareExprs(&(*_self_), _128629_e);
	jule::I64 _129013_n = (*_self_)._field_exprs.len();;
	if (((_129013_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_20cbe4b4c_AnyVar((*_self_)._field_f.get()._field_Decl.ptr())))) {
			_20d84ed5b_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_129013_n > 0LL) && ((*_self_)._field_f != nullptr)) && _20cbeec56_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		_20d84ed5b_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;;
	};
	if ((_129013_n > (*_self_)._field_types.len())) {
		_20d84ed5b_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_129013_n < (*_self_)._field_types.len())) {
		_20d84ed5b_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_20d8ab59e_checkExprs(&(*_self_));
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8aaba8_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d84404d_ImportInfo> _20d8ad084_FindPackage(_20d8aca67_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c8cea46d:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;;
				};
			}
			_iter_next_1c8cea46d:;
			++it;
			goto _iter_begin_1c8cea46d;
		}
		_iter_end_1c8cea46d:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d84404d_ImportInfo> _20d8ad392_SelectPackage(_20d8aca67_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c8ceb617:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;;
				};
			}
			_iter_next_1c8ceb617:;
			++it;
			goto _iter_begin_1c8ceb617;
		}
		_iter_end_1c8ceb617:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d869eb9_Var> _20d8ad749_FindVar(_20d8aca67_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _20d8b030b_findVar(&(*_self_), _5226_ident,_5238_cppLinked,false);;
}



inline jule::Ptr<_20d8e298c_TypeAlias> _20d8adb01_FindTypeAlias(_20d8aca67_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _20d8b075c_findTypeAlias(&(*_self_), _5832_ident,_5844_cppLinked,false);;
}



inline jule::Ptr<_20cba59dc_Struct> _20d8adea8_FindStruct(_20d8aca67_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c8cedc79:;
		if (it != expr.end()) {
			jule::Ptr<_20cba59dc_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;;
				};
			}
			_iter_next_1c8cedc79:;
			++it;
			goto _iter_begin_1c8cedc79;
		}
		_iter_end_1c8cedc79:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d814370_Fn> _20d8ae360_FindFn(_20d8aca67_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c8d001a9:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;;
				};
			}
			_iter_next_1c8d001a9:;
			++it;
			goto _iter_begin_1c8d001a9;
		}
		_iter_end_1c8d001a9:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d81a3ed_Trait> _20d8ae66d_FindTrait(_20d8aca67_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1c8d013db:;
		if (it != expr.end()) {
			jule::Ptr<_20d81a3ed_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;;
				};
			}
			_iter_next_1c8d013db:;
			++it;
			goto _iter_begin_1c8d013db;
		}
		_iter_end_1c8d013db:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d81b0ad_Enum> _20d8ae97b_FindEnum(_20d8aca67_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1c8d0185e:;
		if (it != expr.end()) {
			jule::Ptr<_20d81b0ad_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1c8d0185e:;
			++it;
			goto _iter_begin_1c8d0185e;
		}
		_iter_end_1c8d0185e:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d81b82d_TypeEnum> _20d8aec89_FindTypeEnum(_20d8aca67_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1c8d02783:;
		if (it != expr.end()) {
			jule::Ptr<_20d81b82d_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;;
				};
			}
			_iter_next_1c8d02783:;
			++it;
			goto _iter_begin_1c8d02783;
		}
		_iter_end_1c8d02783:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d869eb9_Var> _20d8b030b_findVar(_20d8aca67_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*_self_)._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_20d869eb9_Var> _12325_v = (*_self_)._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;;
				};
			}
		_iter_next_1c8d051ae:;
		}
		_iter_end_1c8d051ae:;;
	} else {
		{
			auto &expr = (*_self_)._field_Vars;
			auto it = expr.begin();
			_iter_begin_1c8d04763:;
			if (it != expr.end()) {
				jule::Ptr<_20d869eb9_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;;
					};
				}
				_iter_next_1c8d04763:;
				++it;
				goto _iter_begin_1c8d04763;
			}
			_iter_end_1c8d04763:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_20d8e298c_TypeAlias> _20d8b075c_findTypeAlias(_20d8aca67_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*_self_)._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_20d8e298c_TypeAlias> _14225_ta = (*_self_)._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;;
				};
			}
		_iter_next_1c8d0835a:;
		}
		_iter_end_1c8d0835a:;;
	} else {
		{
			auto &expr = (*_self_)._field_TypeAliases;
			auto it = expr.begin();
			_iter_begin_1c8d0790e:;
			if (it != expr.end()) {
				jule::Ptr<_20d8e298c_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;;
					};
				}
				_iter_next_1c8d0790e:;
				++it;
				goto _iter_begin_1c8d0790e;
			}
			_iter_end_1c8d0790e:;
		};
	};
	return nullptr;;
}



inline jule::Any _20d8b0b14_defByIdent(_20d8aca67_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1c8d0a659:;
		if (it != expr.end()) {
			jule::Ptr<_20d869eb9_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v);;
				};
			}
			_iter_next_1c8d0a659:;
			++it;
			goto _iter_begin_1c8d0a659;
		}
		_iter_end_1c8d0a659:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1c8d0b10a:;
		if (it != expr.end()) {
			jule::Ptr<_20d8e298c_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta);;
				};
			}
			_iter_next_1c8d0b10a:;
			++it;
			goto _iter_begin_1c8d0b10a;
		}
		_iter_end_1c8d0b10a:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c8d0b89c:;
		if (it != expr.end()) {
			jule::Ptr<_20cba59dc_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s);;
				};
			}
			_iter_next_1c8d0b89c:;
			++it;
			goto _iter_begin_1c8d0b89c;
		}
		_iter_end_1c8d0b89c:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c8d0cb78:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f);;
				};
			}
			_iter_next_1c8d0cb78:;
			++it;
			goto _iter_begin_1c8d0cb78;
		}
		_iter_end_1c8d0cb78:;
	};
	if (_15941_cppLinked) {
		return nullptr;;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1c8d0dd55:;
		if (it != expr.end()) {
			jule::Ptr<_20d81a3ed_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t);;
				};
			}
			_iter_next_1c8d0dd55:;
			++it;
			goto _iter_begin_1c8d0dd55;
		}
		_iter_end_1c8d0dd55:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1c8d0eb47:;
		if (it != expr.end()) {
			jule::Ptr<_20d81b0ad_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e);;
				};
			}
			_iter_next_1c8d0eb47:;
			++it;
			goto _iter_begin_1c8d0eb47;
		}
		_iter_end_1c8d0eb47:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1c8d108b2:;
		if (it != expr.end()) {
			jule::Ptr<_20d81b82d_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te);;
				};
			}
			_iter_next_1c8d108b2:;
			++it;
			goto _iter_begin_1c8d108b2;
		}
		_iter_end_1c8d108b2:;
	};
	return nullptr;;
}



inline jule::Bool _20d8b1065_isDuplicatedIdent(_20d8aca67_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1c8d11671:;
		if (it != expr.end()) {
			jule::Ptr<_20d869eb9_Var> &_21316_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21316_v) != _21232_itself) && (_21316_v.get()._field_Ident == _21249_ident)) && (_21316_v.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1c8d11671:;
			++it;
			goto _iter_begin_1c8d11671;
		}
		_iter_end_1c8d11671:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1c8d12a29:;
		if (it != expr.end()) {
			jule::Ptr<_20d8e298c_TypeAlias> &_21916_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21916_ta) != _21232_itself) && (_21916_ta.get()._field_Ident == _21249_ident)) && (_21916_ta.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1c8d12a29:;
			++it;
			goto _iter_begin_1c8d12a29;
		}
		_iter_end_1c8d12a29:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c8d12672:;
		if (it != expr.end()) {
			jule::Ptr<_20cba59dc_Struct> &_22516_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22516_s) != _21232_itself) && (_22516_s.get()._field_Ident == _21249_ident)) && (_22516_s.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1c8d12672:;
			++it;
			goto _iter_begin_1c8d12672;
		}
		_iter_end_1c8d12672:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c8d14c6d:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> &_23116_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23116_f) != _21232_itself) && (_23116_f.get()._field_Ident == _21249_ident)) && (_23116_f.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1c8d14c6d:;
			++it;
			goto _iter_begin_1c8d14c6d;
		}
		_iter_end_1c8d14c6d:;
	};
	if (_21261_cppLinked) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1c8d162d0:;
		if (it != expr.end()) {
			jule::Ptr<_20d81a3ed_Trait> &_24116_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24116_t) != _21232_itself) && (_24116_t.get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1c8d162d0:;
			++it;
			goto _iter_begin_1c8d162d0;
		}
		_iter_end_1c8d162d0:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1c8d16753:;
		if (it != expr.end()) {
			jule::Ptr<_20d81b0ad_Enum> &_24716_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24716_e) != _21232_itself) && (_24716_e.get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1c8d16753:;
			++it;
			goto _iter_begin_1c8d16753;
		}
		_iter_end_1c8d16753:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1c8d17ad9:;
		if (it != expr.end()) {
			jule::Ptr<_20d81b82d_TypeEnum> &_25316_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25316_te) != _21232_itself) && (_25316_te.get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1c8d17ad9:;
			++it;
			goto _iter_begin_1c8d17ad9;
		}
		_iter_end_1c8d17ad9:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8aca67_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d8b2c7b_IsNil(_20d8b2891_Data* _self_) {
	return _20d8e45b5_IsNil((*_self_)._field_Kind.ptr());;
}



inline jule::Bool _20d8b2ee0_IsVoid(_20d8b2891_Data* _self_) {
	return _20d8e4829_Void((*_self_)._field_Kind.ptr());;
}



inline jule::Bool _20d8b3254_IsConst(_20d8b2891_Data* _self_) {
	return ((*_self_)._field_Constant != nullptr);;
}



inline jule::Bool _20d8b3562_GoodOperand(_20d8b2891_Data* _self_, jule::Ptr<_20d8b2891_Data>& _10031_other) {
	if ((_20d8e64b8_TypeEnum(_10031_other.get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_20d8e5a17_Prim(_10031_other.get()._field_Kind.ptr()) == nullptr) || (!(_20d8eb875_IsAny(_20d8e5a17_Prim(_10031_other.get()._field_Kind.ptr()).ptr())))) && (_20d8e71cd_Trait(_10031_other.get()._field_Kind.ptr()) == nullptr)) && (!(_20d8e45b5_IsNil((*_self_)._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8b2891_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8b3919_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _20d8b491a_pushErr(_20d8b440e_Eval* _self_, jule::Ptr<_20b4e5581_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _13126_token,_13141_fmt,_13154_args);
}



inline void _20d8b4c39_pushSugggestion(_20d8b440e_Eval* _self_, jule::Str _13634_fmt, jule::Slice<jule::Any> _13647_args) {
	_20d85017a_pushSugggestion((*_self_)._field_s.ptr(), _13634_fmt,_13647_args);
}



inline void _20d8b4e15_allowBuiltin(_20d8b440e_Eval* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _20d8b50e1_disallowBuiltin(_20d8b440e_Eval* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Bool _20d8b5355_isUnsafe(_20d8b440e_Eval* _self_) {
	return (*_self_)._field_unsafety;;
}



inline jule::Bool _20d8b55b9_isGlobal(_20d8b440e_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_20d84c199_Sema>>()) {
			_case_begin_1c8d4c190:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c8d4c6bd:;
			{
				return false;;
			}
		}
		_match_end_1c8d4c668:;
	};
}



inline jule::Bool _20d8b5894_applyNumericPrefix(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data>& _16342_d) {
	if (((((_16342_d == nullptr) || (!(_20d8b3254_IsConst(_16342_d.ptr())))) || (_20d8e5a17_Prim(_16342_d.get()._field_Kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_20d8e83cc_Prim> _17013_prim = _20d8e5a17_Prim((*_self_)._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_20d809e15_IsFloat(_20d8e8740_Str(_17013_prim.ptr()))) {
			_case_begin_1c8d50072:;
			{
				_16342_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>((*((*_self_)._field_prefix)));
				_20d80b631_SetF64(_16342_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_20d80b026_AsF64(_16342_d.get()._field_Constant.ptr())));
			}
		}
		else if (_20d809a6e_IsSigInt(_20d8e8740_Str(_17013_prim.ptr()))) {
			_case_begin_1c8d500d8:;
			{
				if ((!(_20d89a439_sigAssignable(_20d8e8740_Str(_17013_prim.ptr()),_16342_d)))) {
					return false;;
				};
				_16342_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>((*((*_self_)._field_prefix)));
				_20d80b158_SetI64(_16342_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_20d80acb2_AsI64(_16342_d.get()._field_Constant.ptr())));
			}
		}
		else if (_20d809ba1_IsUnsigInt(_20d8e8740_Str(_17013_prim.ptr()))) {
			_case_begin_1c8d5014e:;
			{
				if ((!(_20d89a56b_unsigAssignable(_20d8e8740_Str(_17013_prim.ptr()),_16342_d)))) {
					return false;;
				};
				_16342_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>((*((*_self_)._field_prefix)));
				_20d80b28a_SetU64(_16342_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_20d80ade4_AsU64(_16342_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1c8d4ed74:;
	};
	return true;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8b5b08_litNil(_20d8b440e_Eval* _self_) {
	jule::Ptr<_20cc572ec_Const> _19917_constant = static__20d80a2ab_NewNil();;
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_19917_constant), ._field_Constant=_19917_constant});;
}



inline jule::Ptr<_20d8b2891_Data> _20d8b5e16_litStr(_20d8b440e_Eval* _self_, jule::Ptr<_20cb8e850_LitExpr>& _20822_l) {
	jule::Str _20917_s = _20822_l.get()._field_Value.slice(1LL,(_20822_l.get()._field_Value.len() - 1LL));;
	if (_20b4e68d4_IsRawStr(_20822_l.get()._field_Value)) {
		_20917_s=_20d89a6c0_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20917_s));
	} else {
		_20917_s=_20d89a9bc_ToStr(static_cast<jule::Slice<jule::U8>>(_20917_s));
	};
	jule::Ptr<_20cc572ec_Const> _21517_constant = static__20ccbec49_NewStr(_20917_s);;
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_21517_constant), ._field_Constant=_21517_constant});;
}



inline jule::Ptr<_20d8b2891_Data> _20d8b6224_litBool(_20d8b440e_Eval* _self_, jule::Ptr<_20cb8e850_LitExpr>& _22723_l) {
	jule::Ptr<_20cc572ec_Const> _22817_constant = static__20ccb8979_NewBool((_22723_l.get()._field_Value == jule::Str("true", 4)));;
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_22817_constant), ._field_Constant=_22817_constant});;
}



inline jule::Ptr<_20d8b2891_Data> _20d8b6532_litRune(_20d8b440e_Eval* _self_, jule::Ptr<_20cb8e850_LitExpr>& _23923_l) {
	;
	;
	jule::Str _24413_lt = _23923_l.get()._field_Value.slice(1LL,(_23923_l.get()._field_Value.len() - 1LL));;
	jule::I32 _24513_r = _20d883686_ToRune(static_cast<jule::Slice<jule::U8>>(_24413_lt));;
	jule::Ptr<_20d8b2891_Data> _24617_data = jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Constant=static__20cc98393_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24513_r)))});;
	jule::Bool _25013_isAscii = _20d883510_IsAscii(_24513_r);;
	if (_25013_isAscii) {
		_24617_data.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_24617_data.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_24617_data.get()._field_Mutable=true;
	_24617_data.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d813517_RuneExprModel>(_20d813517_RuneExprModel{._field_Code=_24513_r}));
	_24617_data.get()._field_IsRune=true;
	_24617_data.get()._field_untyped=true;
	return _24617_data;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8b6840_litFloat(_20d8b440e_Eval* _self_, jule::Ptr<_20cb8e850_LitExpr>& _26824_l) {
	;
	jule::F64 _27013_f = ({
		auto except = _20d803370_ParseFloat(_26824_l.get()._field_Value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_20cc572ec_Const> _27117_constant = static__20ccbed7b_NewF64(_27013_f);;
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_untyped=true, ._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_27117_constant), ._field_Constant=_27117_constant});;
}



inline jule::Ptr<_20d8b2891_Data> _20d8b6b4d_litInt(_20d8b440e_Eval* _self_, jule::Ptr<_20cb8e850_LitExpr>& _28326_l) {
	;
	jule::Str _28617_lit = _28326_l.get()._field_Value;;
	jule::I64 _28717_base = 0LL;;
	{
		
		if (_20b135bc7_HasPrefix(_28617_lit,jule::Str("0x", 2))) {
			_case_begin_1c8d6100b:;
			{
				(_28617_lit).mut_slice(2LL);;
				_28717_base=16LLU;
			}
		}
		else if (_20b135bc7_HasPrefix(_28617_lit,jule::Str("0b", 2))) {
			_case_begin_1c8d61072:;
			{
				(_28617_lit).mut_slice(2LL);;
				_28717_base=2LLU;
			}
		}
		else if (_20b135bc7_HasPrefix(_28617_lit,jule::Str("0o", 2))) {
			_case_begin_1c8d60c20:;
			{
				(_28617_lit).mut_slice(2LL);;
				_28717_base=8LLU;
			}
		}
		else if (((_28617_lit[0LL] == '0') && (_28617_lit.len() > 1LL))) {
			_case_begin_1c8d60c86:;
			{
				(_28617_lit).mut_slice(1LL);;
				_28717_base=8LLU;
			}
		}
		else {
			_case_begin_1c8d60ba9:;
			{
				_28717_base=10LLU;
			}
		}
		_match_end_1c8d60b43:;
	};
	jule::Ptr<_20d8b2891_Data> _30717_d = jule::new_ptr<_20d8b2891_Data>();;
	jule::Bool _30917_ok = true;;
	jule::I64 _31013_sig = ({
		auto except = _20d240a38_ParseInt(_28617_lit,_28717_base,64LL);
		(except.ok()) ? (except.result) : ({
			_30917_ok=false;
			0LL;
		});
	});;
	if (_30917_ok) {
		_30717_d.get()._field_Constant=static__20cc98393_NewI64(_31013_sig);
		_30717_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _32017_unsig = ({
			auto except = _20d3d4eeb_ParseUint(_28617_lit,_28717_base,64LL);
			(except.ok()) ? (except.result) : ({
				_20d8b491a_pushErr(&(*_self_), _28326_l.get()._field_Token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_20d8b4c39_pushSugggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_30717_d.get()._field_Constant=static__20cc7e3ac_NewU64(_32017_unsig);
		_30717_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_30717_d.get()._field_Model=static_cast<jule::Any>(_30717_d.get()._field_Constant);
	if ((!(_20d8b5894_applyNumericPrefix(&(*_self_), _30717_d)))) {
		_20d8d8565_fitBitsize(_30717_d);
	};
	_30717_d.get()._field_Mutable=true;
	_30717_d.get()._field_untyped=true;
	return _30717_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8b6e5b_litNum(_20d8b440e_Eval* _self_, jule::Ptr<_20cb8e850_LitExpr>& _34326_l) {
	{
		
		if (_20b4e753e_IsFloat(_34326_l.get()._field_Value)) {
			_case_begin_1c8d69102:;
			{
				return _20d8b6840_litFloat(&(*_self_), _34326_l);;
			}
		}
		else {
			_case_begin_1c8d68909:;
			{
				return _20d8b6b4d_litInt(&(*_self_), _34326_l);;
			}
		}
		_match_end_1c8d6883d:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8b7269_evalLit(_20d8b440e_Eval* _self_, jule::Ptr<_20cb8e850_LitExpr> _35226_lit) {
	{
		
		if (_20cb8eba2_IsNil(_35226_lit.ptr())) {
			_case_begin_1c8d6a246:;
			{
				return _20d8b5b08_litNil(&(*_self_));;
			}
		}
		else if (_20b4e663c_IsStr(_35226_lit.get()._field_Value)) {
			_case_begin_1c8d69b4c:;
			{
				return _20d8b5e16_litStr(&(*_self_), _35226_lit);;
			}
		}
		else if (_20b4e7297_IsBool(_35226_lit.get()._field_Value)) {
			_case_begin_1c8d69bc4:;
			{
				return _20d8b6224_litBool(&(*_self_), _35226_lit);;
			}
		}
		else if (_20b4e6b7b_IsRune(_35226_lit.get()._field_Value)) {
			_case_begin_1c8d69c4b:;
			{
				return _20d8b6532_litRune(&(*_self_), _35226_lit);;
			}
		}
		else if (_20b4e77d6_IsNum(_35226_lit.get()._field_Value)) {
			_case_begin_1c8d69e7c:;
			{
				return _20d8b6e5b_litNum(&(*_self_), _35226_lit);;
			}
		}
		else {
			_case_begin_1c8d69685:;
			{
				return nullptr;;
			}
		}
		_match_end_1c8d695b9:;
	};
}



inline jule::Any _20d8b7577_findBuiltins(_20d8b440e_Eval* _self_, jule::Str _36931_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_20d84404d_ImportInfo>>()) {
			_case_begin_1c8d6c138:;
			{
				jule::Any _37221_def = _20d8d8356_findBuiltinsImport(_36931_ident,(*_self_)._field_lookup.operator jule::Ptr<_20d84404d_ImportInfo>());;
				if ((_37221_def != nullptr)) {
					return _37221_def;;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20d84c199_Sema>>()) {
			_case_begin_1c8d6c589:;
			{
				jule::Any _37721_def = _20d8d8ee4_findBuiltinsSema(_36931_ident,(*_self_)._field_lookup.operator jule::Ptr<_20d84c199_Sema>());;
				if ((_37721_def != nullptr)) {
					return _37721_def;;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20d82c3aa_scopeChecker>>()) {
			_case_begin_1c8d6c600:;
			{
				jule::Any _38221_def = _20d8d8ee4_findBuiltinsSema(_36931_ident,(*_self_)._field_lookup.operator jule::Ptr<_20d82c3aa_scopeChecker>().get()._field_s);;
				if ((_38221_def != nullptr)) {
					return _38221_def;;
				};
			}
		}
		_match_end_1c8d6c0d3:;
	};
	if ((*_self_)._field_disBuiltin) {
		return nullptr;;
	};
	return _20d92310a_findBuiltinDef(_36931_ident);;
}



inline jule::Any _20d8b792e_getDef(_20d8b440e_Eval* _self_, jule::Str _39325_ident, jule::Bool _39337_cppLinked) {
	jule::Ptr<_20d869eb9_Var> _39817_v = _20d90e536_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._20d90cda3_FindVar((*_self_)._field_lookup, _39325_ident,_39337_cppLinked);;
	if ((_39817_v != nullptr)) {
		return jule::Any(_39817_v);;
	};
	jule::Ptr<_20d8e298c_TypeAlias> _40317_ta = _20d90e536_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._20d90d25a_FindTypeAlias((*_self_)._field_lookup, _39325_ident,_39337_cppLinked);;
	if ((_40317_ta != nullptr)) {
		return jule::Any(_40317_ta);;
	};
	if ((!(_39337_cppLinked))) {
		jule::Ptr<_20d81b0ad_Enum> _40921_enm = _20d90e536_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._20d90e0d5_FindEnum((*_self_)._field_lookup, _39325_ident);;
		if ((_40921_enm != nullptr)) {
			return jule::Any(_40921_enm);;
		};
		jule::Ptr<_20d81b82d_TypeEnum> _41421_tenm = _20d90e536_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._20d90e3e3_FindTypeEnum((*_self_)._field_lookup, _39325_ident);;
		if ((_41421_tenm != nullptr)) {
			return jule::Any(_41421_tenm);;
		};
	};
	jule::Ptr<_20d814370_Fn> _42017_f = _20d90e536_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._20d90d9b9_FindFn((*_self_)._field_lookup, _39325_ident,_39337_cppLinked);;
	if ((_42017_f != nullptr)) {
		return jule::Any(_42017_f);;
	};
	jule::Ptr<_20cba59dc_Struct> _42517_s = _20d90e536_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._20d90d612_FindStruct((*_self_)._field_lookup, _39325_ident,_39337_cppLinked);;
	if ((_42517_s != nullptr)) {
		return jule::Any(_42517_s);;
	};
	return _20d8b7577_findBuiltins(&(*_self_), _39325_ident);;
}



inline void _1c8d82a00_pushReference(_20d8b440e_Eval* _self_, jule::Ptr<_20d814749_FnIns>& _43340_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_20d82c3aa_scopeChecker>>()) {
			_case_begin_1c8d87340:;
			{
				jule::Ptr<_20d82c3aa_scopeChecker> _43621_sc = _20d830765_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_20d82c3aa_scopeChecker>());;
				if ((!(_1c8d8523e_Exist(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), _43340_ref)))) {
					_20d815c78_Push(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref));
				};
			}
		}
		else {
			_case_begin_1c8d83e1e:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1c8d8523e_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43340_ref))))) {
					_20d815c78_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref));
				};
			}
		}
		_match_end_1c8d83db9:;
	};
}

inline void _1c8d96a03_pushReference(_20d8b440e_Eval* _self_, jule::Ptr<_20d869eb9_Var>& _43340_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_20d82c3aa_scopeChecker>>()) {
			_case_begin_1c8d9b156:;
			{
				jule::Ptr<_20d82c3aa_scopeChecker> _43621_sc = _20d830765_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_20d82c3aa_scopeChecker>());;
				if ((!(_1c8d991ed_Exist(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), _43340_ref)))) {
					_20d815c78_Push(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref));
				};
			}
		}
		else {
			_case_begin_1c8d97dcd:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1c8d991ed_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43340_ref))))) {
					_20d815c78_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref));
				};
			}
		}
		_match_end_1c8d97d78:;
	};
}

inline void _1c8e38b94_pushReference(_20d8b440e_Eval* _self_, jule::Ptr<_20cba5db6_StructIns>& _43340_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_20d82c3aa_scopeChecker>>()) {
			_case_begin_1c8e39d2c:;
			{
				jule::Ptr<_20d82c3aa_scopeChecker> _43621_sc = _20d830765_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_20d82c3aa_scopeChecker>());;
				if ((!(_1c8e3b3d3_Exist(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), _43340_ref)))) {
					_20d815c78_Push(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref));
				};
			}
		}
		else {
			_case_begin_1c8e3a0b3:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1c8e3b3d3_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43340_ref))))) {
					_20d815c78_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref));
				};
			}
		}
		_match_end_1c8e3a05d:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8b7eb2__evalEnum(_20d8b440e_Eval* _self_, jule::Ptr<_20d81b0ad_Enum> _44728_enm) {
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_44728_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_20d8b2891_Data> _20d8b8369_evalEnum(_20d8b440e_Eval* _self_, jule::Ptr<_20d81b0ad_Enum> _45631_enm, jule::Ptr<_20b4e5581_Token> _45643_errorToken) {
	if ((!(_20d850532_isAccessibleDefine((*_self_)._field_s.ptr(), _45631_enm.get()._field_Public,_45631_enm.get()._field_Token)))) {
		_20d8b491a_pushErr(&(*_self_), _45643_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_45631_enm.get()._field_Ident)}));
		_20d8b4c39_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _20d8b7eb2__evalEnum(&(*_self_), _45631_enm);;
}



inline jule::Ptr<_20d8b2891_Data> _20d8b8677__evalTypeEnum(_20d8b440e_Eval* _self_, jule::Ptr<_20d81b82d_TypeEnum> _46532_enm) {
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_46532_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_20d8b2891_Data> _20d8b8a2e_evalTypeEnum(_20d8b440e_Eval* _self_, jule::Ptr<_20d81b82d_TypeEnum> _47435_enm, jule::Ptr<_20b4e5581_Token> _47451_errorToken) {
	if ((!(_20d850532_isAccessibleDefine((*_self_)._field_s.ptr(), _47435_enm.get()._field_Public,_47435_enm.get()._field_Token)))) {
		_20d8b491a_pushErr(&(*_self_), _47451_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_47435_enm.get()._field_Ident)}));
		_20d8b4c39_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _20d8b8677__evalTypeEnum(&(*_self_), _47435_enm);;
}



inline jule::Ptr<_20d8b2891_Data> _20d8b8d3c__evalStruct(_20d8b440e_Eval* _self_, jule::Ptr<_20cba5db6_StructIns> _48330_s) {
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_48330_s, 0)}), ._field_Model=static_cast<jule::Any>(_48330_s), ._field_Decl=true, });;
}



inline jule::Ptr<_20d8b2891_Data> _20d8b91e4_evalStruct(_20d8b440e_Eval* _self_, jule::Ptr<_20cba5db6_StructIns> _49333_s, jule::Ptr<_20b4e5581_Token> _49348_errorToken) {
	if ((!(_20d850532_isAccessibleDefine((*_self_)._field_s.ptr(), _49333_s.get()._field_Decl.get()._field_Public,_49333_s.get()._field_Decl.get()._field_Token)))) {
		_20d8b491a_pushErr(&(*_self_), _49348_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_49333_s.get()._field_Decl.get()._field_Ident)}));
		_20d8b4c39_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_20d8b9821_checkDeprecated(&(*_self_), _49333_s.get()._field_Decl.get()._field_Directives,_49348_errorToken);
	return _20d8b8d3c__evalStruct(&(*_self_), _49333_s);;
}



inline jule::Ptr<_20d8b2891_Data> _20d8b9502_evalFnIns(_20d8b440e_Eval* _self_, jule::Ptr<_20d814749_FnIns> _50328_f) {
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_50328_f, 1)}), ._field_Model=static_cast<jule::Any>(_50328_f), });;
}



inline void _20d8b9821_checkDeprecated(_20d8b440e_Eval* _self_, jule::Slice<jule::Ptr<_20cb511e6_Directive>>& _51239_directives, jule::Ptr<_20b4e5581_Token> _51270_tok) {
	if (_20d8b5355_isUnsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_20cb511e6_Directive> _51713_d = _20d8d7ec1_findDirective(_51239_directives,jule::Str("deprecated", 10));;
	if ((_51713_d != nullptr)) {
		if ((_51713_d.get()._field_Args.len() == 0LL)) {
			_20d8b491a_pushErr(&(*_self_), _51270_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_20d8b491a_pushErr(&(*_self_), _51270_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_51713_d.get()._field_Args[0LL].get()._field_Kind)}));
		};
		_20d8b4c39_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8b9bc8_evalFn(_20d8b440e_Eval* _self_, jule::Ptr<_20d814370_Fn> _52829_f, jule::Ptr<_20b4e5581_Token> _52837_errorToken) {
	if ((!(_20d850532_isAccessibleDefine((*_self_)._field_s.ptr(), _52829_f.get()._field_Public,_52829_f.get()._field_Token)))) {
		_20d8b491a_pushErr(&(*_self_), _52837_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52829_f.get()._field_Ident)}));
		_20d8b4c39_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_20d8b9821_checkDeprecated(&(*_self_), _52829_f.get()._field_Directives,_52837_errorToken);
	jule::Ptr<_20d814749_FnIns> _53717_ins = _20cc00383_instance(_52829_f);;
	_1c8d82a00_pushReference(&(*_self_), _53717_ins);
	return _20d8b9502_evalFnIns(&(*_self_), _53717_ins);;
}



inline void _20d8ba091_pushIllegalCycleError(_20d8b440e_Eval* _self_, jule::Ptr<_20d869eb9_Var>& _54241_v1, jule::Ptr<_20d869eb9_Var>& _54252_v2, jule::Str& _54267_message) {
	;
	jule::Str _54413_refers_to = _20b1bc456_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_54241_v1.get()._field_Ident),jule::Any(_54252_v2.get()._field_Ident)}));;
	(_54267_message).buffer.insert(0, (((_20b11c7b3_Repeat(jule::Str(" ", 1),4LL) + _54413_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _20d8ba448_checkCrossCycle(_20d8b440e_Eval* _self_, jule::Ptr<_20d869eb9_Var>& _54835_v, jule::Str& _54849_message) {
	{
		auto &expr = _54835_v.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_1c8d8a2ee:;
		if (it != expr.end()) {
			jule::Ptr<_20d869eb9_Var> &_54916_d = *it;
			{
				if ((_54916_d == (*_self_)._field_owner)) {
					_20d8ba091_pushIllegalCycleError(&(*_self_), _54835_v,_54916_d,_54849_message);
					return false;;
				};
				if ((!(_20d8ba448_checkCrossCycle(&(*_self_), _54916_d,_54849_message)))) {
					_20d8ba091_pushIllegalCycleError(&(*_self_), _54835_v,_54916_d,_54849_message);
					return false;;
				};
			}
			_iter_next_1c8d8a2ee:;
			++it;
			goto _iter_begin_1c8d8a2ee;
		}
		_iter_end_1c8d8a2ee:;
	};
	return true;;
}



inline jule::Bool _20d8ba800_checkIllegalCycles(_20d8b440e_Eval* _self_, jule::Ptr<_20d869eb9_Var>& _56742_v, jule::Ptr<_20b4e5581_Token> _56751_decl_token) {
	jule::Bool __jule_func_result = false;
	if (((*_self_)._field_owner == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*_self_)._field_owner == _56742_v)) {
		_20d8b491a_pushErr(&(*_self_), (*_self_)._field_owner.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_Ident)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _57917_message = jule::Str();;
	if ((!(_20d8ba448_checkCrossCycle(&(*_self_), _56742_v,_57917_message)))) {
		jule::Str _58221_errMsg = _57917_message;;
		_57917_message=jule::Str();
		_20d8ba091_pushIllegalCycleError(&(*_self_), (*_self_)._field_owner,_56742_v,_57917_message);
		_58221_errMsg+=_57917_message;
		_20d8b491a_pushErr(&(*_self_), _56751_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_58221_errMsg)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*_self_)._field_owner.get()._field_Depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_Depends,1);(*_self_)._field_owner.get()._field_Depends.__push(_56742_v);;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8baba7_evalVar(_20d8b440e_Eval* _self_, jule::Ptr<_20d869eb9_Var> _59430_v, jule::Ptr<_20b4e5581_Token> _59439_errorToken) {
	if ((!(_20d850532_isAccessibleDefine((*_self_)._field_s.ptr(), _59430_v.get()._field_Public,_59430_v.get()._field_Token)))) {
		_20d8b491a_pushErr(&(*_self_), _59439_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_59430_v.get()._field_Ident)}));
		_20d8b4c39_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_20d8b9821_checkDeprecated(&(*_self_), _59430_v.get()._field_Directives,_59439_errorToken);
	_59430_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_20d84c199_Sema>>()) {
			_case_begin_1c8d92867:;
			{
				jule::Bool _60817_ok = _20d8ba800_checkIllegalCycles(&(*_self_), _59430_v,_59439_errorToken);;
				if ((!(_60817_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20d82c3aa_scopeChecker>>()) {
			_case_begin_1c8d92911:;
			{
				if (((!(_59430_v.get()._field_Reference)) || _20d8b5355_isUnsafe(&(*_self_)))) {
					goto _match_end_1c8d92812;
				};
				jule::Ptr<_20d82c3aa_scopeChecker> _61621_s = (*_self_)._field_lookup.operator jule::Ptr<_20d82c3aa_scopeChecker>();;
				while (((_61621_s.get()._field_owner == nullptr) && (_61621_s.get()._field_parent != nullptr))) {
					{
						_61621_s=_61621_s.get()._field_parent;
					}
				_iter_next_1c8d946b0:;
				}
				_iter_end_1c8d946b0:;;
				if ((((_61621_s.get()._field_owner != nullptr) && _61621_s.get()._field_owner.get()._field_Anon) && (_59430_v.get()._field_Scope != _61621_s.get()._field_owner.get()._field_Scope))) {
					_20d8b491a_pushErr(&(*_self_), _59439_errorToken,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_59430_v.get()._field_Ident)}));
				};
			}
		}
		_match_end_1c8d92812:;
	};
	if ((_59430_v.get()._field_Scope == nullptr)) {
		_1c8d96a03_pushReference(&(*_self_), _59430_v);
	};
	if (((!(_59430_v.get()._field_CppLinked)) && ((_59430_v.get()._field_Value == nullptr) || (_59430_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_59430_v.get()._field_Constant) {
			_20d862962_checkTypeVar((*_self_)._field_s, _59430_v,jule::Trait<_20d90e536_Lookup>((*_self_)._field_s, 3));
			if ((_59430_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;;
			};
		};
	};
	if (((_59430_v.get()._field_Kind == nullptr) || (_59430_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_59430_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_20d862962_checkTypeVar((*_self_)._field_s, _59430_v,(*_self_)._field_lookup);
		if (((_59430_v.get()._field_Kind == nullptr) || (_59430_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_20d8b2891_Data> _65917_d = jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=_59430_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_59430_v.get()._field_Mutable, ._field_Reference=_59430_v.get()._field_Reference, ._field_Lvalue=(!(_59430_v.get()._field_Constant)), ._field_Model=static_cast<jule::Any>(_59430_v), });;
	if ((((!(_59430_v.get()._field_CppLinked)) && _20d86a382_IsInitialized(_59430_v.ptr())) && (_59430_v.get()._field_Value.get()._field_Data != nullptr))) {
		_65917_d.get()._field_IsRune=_59430_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_59430_v.get()._field_Constant && (_59430_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_65917_d.get()._field_Constant=jule::new_ptr<_20cc572ec_Const>((*(_59430_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_65917_d.get()._field_Model=static_cast<jule::Any>(_65917_d.get()._field_Constant);
		if (_20d86a85a_untypedConstant(_59430_v.ptr())) {
			_20d8b5894_applyNumericPrefix(&(*_self_), _65917_d);
			_65917_d.get()._field_untyped=true;
		};
	};
	return _65917_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8bb05e_evalTypeAlias(_20d8b440e_Eval* _self_, jule::Ptr<_20d8e298c_TypeAlias> _68336_ta, jule::Ptr<_20b4e5581_Token> _68352_errorToken) {
	if ((!(_20d850532_isAccessibleDefine((*_self_)._field_s.ptr(), _68336_ta.get()._field_Public,_68336_ta.get()._field_Token)))) {
		_20d8b491a_pushErr(&(*_self_), _68352_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_68336_ta.get()._field_Ident)}));
		_20d8b4c39_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_68336_ta.get()._field_Used=true;
	jule::Trait<_20d8e3251_Kind> _69217_kind = _68336_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_20d8b2891_Data> _69317_d = nullptr;;
	{
		auto &_match_expr{ _69217_kind };
		
		if (_match_expr.type_is<jule::Ptr<_20cba5db6_StructIns>>()) {
			_case_begin_1c8da7a25:;
			{
				_69317_d=_20d8b8d3c__evalStruct(&(*_self_), _69217_kind.operator jule::Ptr<_20cba5db6_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20d81b0ad_Enum>>()) {
			_case_begin_1c8da8262:;
			{
				_69317_d=_20d8b7eb2__evalEnum(&(*_self_), _69217_kind.operator jule::Ptr<_20d81b0ad_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20d81b82d_TypeEnum>>()) {
			_case_begin_1c8da6cee:;
			{
				_69317_d=_20d8b8677__evalTypeEnum(&(*_self_), _69217_kind.operator jule::Ptr<_20d81b82d_TypeEnum>());
			}
		}
		else {
			_case_begin_1c8da6bcd:;
			{
				_69317_d=jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=_68336_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_68336_ta.get()._field_CppLinked) {
					_69317_d.get()._field_Kind.get()._field_CppIdent=_68336_ta.get()._field_Ident;
				} else {
					_69317_d.get()._field_Kind.get()._field_CppIdent=_68336_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_69317_d.get()._field_Model=static_cast<jule::Any>(_69317_d.get()._field_Kind);
			}
		}
		_match_end_1c8da6b78:;
	};
	_69317_d.get()._field_Kind.get()._field_Generic=_68336_ta.get()._field_Generic;
	return _69317_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8bb416_evalDef(_20d8b440e_Eval* _self_, jule::Any _71930_def, jule::Ptr<_20b4e5581_Token> _71940_ident) {
	{
		auto &_match_expr{ _71930_def };
		
		if (_match_expr.type_is_ptr<_20d869eb9_Var>()) {
			_case_begin_1c8daab05:;
			{
				return _20d8baba7_evalVar(&(*_self_), _71930_def.operator jule::Ptr<_20d869eb9_Var>(),_71940_ident);;
			}
		}
		else if (_match_expr.type_is_ptr<_20d81b0ad_Enum>()) {
			_case_begin_1c8daab6b:;
			{
				return _20d8b8369_evalEnum(&(*_self_), _71930_def.operator jule::Ptr<_20d81b0ad_Enum>(),_71940_ident);;
			}
		}
		else if (_match_expr.type_is_ptr<_20d81b82d_TypeEnum>()) {
			_case_begin_1c8daabd2:;
			{
				return _20d8b8a2e_evalTypeEnum(&(*_self_), _71930_def.operator jule::Ptr<_20d81b82d_TypeEnum>(),_71940_ident);;
			}
		}
		else if (_match_expr.type_is_ptr<_20cba59dc_Struct>()) {
			_case_begin_1c8daac59:;
			{
				return _20d8b91e4_evalStruct(&(*_self_), _20cb5c433_instance(_71930_def.operator jule::Ptr<_20cba59dc_Struct>()),_71940_ident);;
			}
		}
		else if (_match_expr.type_is_ptr<_20d814370_Fn>()) {
			_case_begin_1c8daacc0:;
			{
				jule::Ptr<_20d814370_Fn> _73021_f = _71930_def.operator jule::Ptr<_20d814370_Fn>();;
				if ((_73021_f.get()._field_Ident != jule::Str("init", 4))) {
					return _20d8b9bc8_evalFn(&(*_self_), _73021_f,_71940_ident);;
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20d814749_FnIns>()) {
			_case_begin_1c8daad47:;
			{
				return _20d8b9502_evalFnIns(&(*_self_), _71930_def.operator jule::Ptr<_20d814749_FnIns>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20d8e298c_TypeAlias>()) {
			_case_begin_1c8daadbe:;
			{
				return _20d8bb05e_evalTypeAlias(&(*_self_), _71930_def.operator jule::Ptr<_20d8e298c_TypeAlias>(),_71940_ident);;
			}
		}
		_match_end_1c8daaa17:;
	};
	_20d8b491a_pushErr(&(*_self_), _71940_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_71940_ident.get()._field_Kind)}));
	return nullptr;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8bb724_evalIdent(_20d8b440e_Eval* _self_, jule::Ptr<_20cb904cc_IdentExpr> _74328_ident) {
	jule::Any _74417_def = _20d8b792e_getDef(&(*_self_), _74328_ident.get()._field_Ident,_74328_ident.get()._field_CppLinked);;
	return _20d8bb416_evalDef(&(*_self_), _74417_def,_74328_ident.get()._field_Token);;
}



inline jule::Ptr<_20d8b2891_Data> _20d8bba32_evalUnary(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb90bd6_UnaryExpr> _74833_u) {
	_20d8d02a4_unaryEval _74917_unary = static__20d8d075a_new(_self_);;
	return _20d8d1a03_eval(&_74917_unary, _74833_u);;
}



inline jule::Ptr<_20d8b2891_Data> _20d8bbd40_evalVariadic(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb9108d_VariadicExpr> _75336_v) {
	if ((_75336_v.get()._field_Expr == nullptr)) {
		_20d8b491a_pushErr(_self_.ptr(), _75336_v.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d8e3680_TypeKind> _75917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75917_prefix;
	});;
	jule::Ptr<_20d8b2891_Data> _76317_d = _20d8ce715_evalExprKind(_self_, _75336_v.get()._field_Expr.get()._field_Kind);;
	if ((_76317_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_20d8e57a3_Variadicable(_76317_d.get()._field_Kind.ptr())))) {
		_20d8b491a_pushErr(_self_.ptr(), _75336_v.get()._field_Token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_76317_d.get()._field_Kind.ptr()))}));
		return nullptr;;
	};
	jule::Ptr<_20d8ec5bd_Slc> _77313_slc = _20d8e6991_Slc(_76317_d.get()._field_Kind.ptr());;
	_76317_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_CppIdent=_77313_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_77313_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_77313_slc.get()._field_Elem.get()._field_Kind});
	return _76317_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8bc14d_evalUnsafe(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb90059_UnsafeExpr> _78334_u) {
	jule::Bool _78413_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_20d8b2891_Data> _78617_d = _20d8ce715_evalExprKind(_self_, _78334_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_78413_unsafety;
	return _78617_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8bc45b_evalArr(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb94e0a_SliceExpr> _79131_s) {
	jule::Ptr<_20d8ee768_Arr> _79317_pt = _20d8e672c_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_20d8ee768_Arr> _79517_arr = jule::new_ptr<_20d8ee768_Arr>(_20d8ee768_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_79317_pt.get()._field_Elem});;
	jule::Bool _80117_filled = false;;
	if ((_79131_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _79131_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type_is_ptr<_20cb9108d_VariadicExpr>()) {
				_case_begin_1c8db9cac:;
				{
					if ((_79131_s.get()._field_Exprs[1LL].get()._field_Kind.operator jule::Ptr<_20cb9108d_VariadicExpr>().get()._field_Expr != nullptr)) {
						goto _match_end_1c8db9c57;
					};
					if (_79317_pt.get()._field_Auto) {
						_20d8b491a_pushErr(_self_.ptr(), _79131_s.get()._field_Token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;;
					};
					_80117_filled=true;
					_79131_s.get()._field_Exprs=_79131_s.get()._field_Exprs.slice(0LL,1LL);
				}
			}
			_match_end_1c8db9c57:;
		};
	};
	_79517_arr.get()._field_N=static_cast<jule::I64>(_79131_s.get()._field_Exprs.len());
	if ((!(_79317_pt.get()._field_Auto))) {
		if ((_79517_arr.get()._field_N > _79317_pt.get()._field_N)) {
			_20d8b491a_pushErr(_self_.ptr(), _79131_s.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_79517_arr.get()._field_N < _79317_pt.get()._field_N)) {
			_79517_arr.get()._field_N=_79317_pt.get()._field_N;
		};
	};
	jule::Ptr<_20d810b0d_ArrayExprModel> _83017_model = jule::new_ptr<_20d810b0d_ArrayExprModel>(_20d810b0d_ArrayExprModel{._field_Kind=_79517_arr, });;
	if (_80117_filled) {
		_83017_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_83017_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _79131_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_20d8e3680_TypeKind> _83917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_79517_arr.get()._field_Elem;
	{
		auto &expr = _79131_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c8dbeb19:;
		if (it != expr.end()) {
			jule::Ptr<_20cb8d81b_Expr> _84121_elem = *it;
			{
				jule::Ptr<_20d8b2891_Data> _84221_d = _20d8ce715_evalExprKind(_self_, _84121_elem.get()._field_Kind);;
				if ((_84221_d == nullptr)) {
					goto _iter_next_1c8dbeb19;
				};
				_20d856c42_checkAssignType(_self_.get()._field_s, false,_79517_arr.get()._field_Elem,_84221_d,_79131_s.get()._field_Token);
				_83017_model.get()._field_Elems = jule::alloc_for_append(_83017_model.get()._field_Elems,1);_83017_model.get()._field_Elems.__push(_84221_d.get()._field_Model);;
			}
			_iter_next_1c8dbeb19:;
			++it;
			goto _iter_begin_1c8dbeb19;
		}
		_iter_end_1c8dbeb19:;
	};
	_self_.get()._field_prefix=_83917_prefix;
	if (_80117_filled) {
		_83017_model.get()._field_Elems = jule::alloc_for_append(_83017_model.get()._field_Elems,1);_83017_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_79517_arr, 11)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_83017_model), });;
}



inline jule::Ptr<_20d8b2891_Data> _20d8bc8ac_evalExpSlc(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb94e0a_SliceExpr> _86634_s, jule::Ptr<_20d8e3680_TypeKind> _86653_t, jule::Any _86671_first) {
	jule::Ptr<_20d8ec5bd_Slc> _86717_slc = jule::new_ptr<_20d8ec5bd_Slc>(_20d8ec5bd_Slc{._field_Elem=_86653_t});;
	jule::Ptr<_20d80e689_SliceExprModel> _87117_model = jule::new_ptr<_20d80e689_SliceExprModel>(_20d80e689_SliceExprModel{._field_ElemKind=_86653_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _86634_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_86671_first != nullptr)) {
		_87117_model.get()._field_Elems = jule::alloc_for_append(_87117_model.get()._field_Elems,1);_87117_model.get()._field_Elems.__push(_86671_first);;
		_86634_s.get()._field_Exprs=_86634_s.get()._field_Exprs.slice(1LL);
	};
	jule::Ptr<_20d8e3680_TypeKind> _88017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_86717_slc.get()._field_Elem;
	{
		auto &expr = _86634_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c8dc557b:;
		if (it != expr.end()) {
			jule::Ptr<_20cb8d81b_Expr> _88221_elem = *it;
			{
				jule::Ptr<_20d8b2891_Data> _88321_d = _20d8ce715_evalExprKind(_self_, _88221_elem.get()._field_Kind);;
				if ((_88321_d == nullptr)) {
					goto _iter_next_1c8dc557b;
				};
				_20d856c42_checkAssignType(_self_.get()._field_s, false,_86717_slc.get()._field_Elem,_88321_d,_86634_s.get()._field_Token);
				_87117_model.get()._field_Elems = jule::alloc_for_append(_87117_model.get()._field_Elems,1);_87117_model.get()._field_Elems.__push(_88321_d.get()._field_Model);;
			}
			_iter_next_1c8dc557b:;
			++it;
			goto _iter_begin_1c8dc557b;
		}
		_iter_end_1c8dc557b:;
	};
	_self_.get()._field_prefix=_88017_prefix;
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_86717_slc, 8)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_87117_model), });;
}



inline jule::Ptr<_20d8b2891_Data> _20d8bcbba_evalSliceExpr(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb94e0a_SliceExpr> _90137_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_20d8e672c_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1c8dc81e9:;
				{
					return _20d8bc45b_evalArr(_self_, _90137_s);;
				}
			}
			else if ((_20d8e6991_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1c8dc8271:;
				{
					jule::Ptr<_20d8ec5bd_Slc> _90725_pt = _20d8e6991_Slc(_self_.get()._field_prefix.ptr());;
					return _20d8bc8ac_evalExpSlc(_self_, _90137_s,_90725_pt.get()._field_Elem,nullptr);;
				}
			}
			_match_end_1c8dc80d9:;
		};
	};
	jule::Ptr<_20d8e3680_TypeKind> _91217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_90137_s.get()._field_Exprs.len() == 0LL)) {
		_20d8b491a_pushErr(_self_.ptr(), _90137_s.get()._field_Token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d8b2891_Data> _92017_first_elem = _20d8ce715_evalExprKind(_self_, _90137_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_92017_first_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20d8b2891_Data> _92517_d = _20d8bc8ac_evalExpSlc(_self_, _90137_s,_92017_first_elem.get()._field_Kind,_92017_first_elem.get()._field_Model);;
	_self_.get()._field_prefix=_91217_prefix;
	return _92517_d;;
}



inline void _20d8bd00b_checkIntegerIndexingByData(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data>& _93150_d, jule::Ptr<_20b4e5581_Token> _93160_token) {
	jule::Str _93213_err_key = _20d8da468_checkDataForIntegerIndexing(_93150_d);;
	{
		auto &_match_expr{ _93213_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1c8dcd2ed:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1c8dcd7d7:;
			{
				_20d8b491a_pushErr(&(*_self_), _93160_token,_93213_err_key,jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_93150_d.get()._field_Kind.ptr()))}));
			}
		}
		else {
			_case_begin_1c8dcd672:;
			{
				_20d8b491a_pushErr(&(*_self_), _93160_token,_93213_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1c8dcd595:;
	};
}



inline void _20d8bd3d5_indexingPtr(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data>& _94335_d, jule::Ptr<_20d8b2891_Data>& _94350_index, jule::Ptr<_20cb95779_IndexingExpr>& _94365_i) {
	_20d8bd00b_checkIntegerIndexingByData(&(*_self_), _94350_index,_94365_i.get()._field_Token);
	jule::Ptr<_20d9001c5_Ptr> _94617_ptr = _20d8e5ee0_Ptr(_94335_d.get()._field_Kind.ptr());;
	{
		
		if (_20d900b98_IsUnsafe(_94617_ptr.ptr())) {
			_case_begin_1c8dd1004:;
			{
				_20d8b491a_pushErr(&(*_self_), _94365_i.get()._field_Token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_20d8b5355_isUnsafe(&(*_self_))))) {
			_case_begin_1c8dd106a:;
			{
				_20d8b491a_pushErr(&(*_self_), _94365_i.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c8dd0dd3:;
	};
	_94335_d.get()._field_Kind=_94617_ptr.get()._field_Elem;
}



inline void _20d8bd79d_indexingArr(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data>& _95835_d, jule::Ptr<_20d8b2891_Data>& _95850_index, jule::Ptr<_20cb95779_IndexingExpr>& _95865_i) {
	jule::Ptr<_20d8ee768_Arr> _95917_arr = _20d8e672c_Arr(_95835_d.get()._field_Kind.ptr());;
	_95835_d.get()._field_Kind=_95917_arr.get()._field_Elem;
	_20d8bd00b_checkIntegerIndexingByData(&(*_self_), _95850_index,_95865_i.get()._field_Token);
	if ((_20d8b3254_IsConst(_95850_index.ptr()) && (_20d80b026_AsF64(_95850_index.get()._field_Constant.ptr()) >= static_cast<jule::F64>(_95917_arr.get()._field_N)))) {
		_20d8b491a_pushErr(&(*_self_), _95865_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _20d8bdb66_indexingSlc(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data>& _96735_d, jule::Ptr<_20d8b2891_Data>& _96750_index, jule::Ptr<_20cb95779_IndexingExpr>& _96765_i) {
	jule::Ptr<_20d8ec5bd_Slc> _96817_slc = _20d8e6991_Slc(_96735_d.get()._field_Kind.ptr());;
	_96735_d.get()._field_Kind=_96817_slc.get()._field_Elem;
	_20d8bd00b_checkIntegerIndexingByData(&(*_self_), _96750_index,_96765_i.get()._field_Token);
	if ((!(_20d8b3254_IsConst(_96750_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _96735_d.get()._field_Model };
		
		if (_match_expr.type_is_ptr<_20d80e689_SliceExprModel>()) {
			_case_begin_1c8dd6933:;
			{
				jule::Ptr<_20d80e689_SliceExprModel> _97821_m = _96735_d.get()._field_Model.operator jule::Ptr<_20d80e689_SliceExprModel>();;
				jule::F64 _97917_indx = _20d80b026_AsF64(_96750_index.get()._field_Constant.ptr());;
				if ((_97917_indx >= static_cast<jule::F64>(_97821_m.get()._field_Elems.len()))) {
					_20d8b491a_pushErr(&(*_self_), _96765_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_96735_d.get()._field_Model=_97821_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_97917_indx))];
					_96735_d.get()._field_Decl=true;
				};
			}
		}
		_match_end_1c8dd6889:;
	};
}



inline void _20d8be02e_indexingMap(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data>& _98935_d, jule::Ptr<_20d8b2891_Data>& _98950_index, jule::Ptr<_20cb95779_IndexingExpr>& _98969_i) {
	if ((_98950_index == nullptr)) {
		return;;
	};
	jule::Ptr<_20d8edb74_Map> _99317_m = _20d8e7442_Map(_98935_d.get()._field_Kind.ptr());;
	_20d89d41a_assignTypeChecker _99417_atc = _20d89d41a_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_99317_m.get()._field_Key, ._field_d=_98950_index, ._field_errorToken=_98969_i.get()._field_Token};;
	_20d89e592_check(&_99417_atc);
	_98935_d.get()._field_Kind=_99317_m.get()._field_Val;
}



inline void _20d8be3e7_indexingStr(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data>& _100435_d, jule::Ptr<_20d8b2891_Data>& _100450_index, jule::Ptr<_20cb95779_IndexingExpr>& _100465_i) {
	;
	_100435_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("u8", 2)), 6)});
	if ((_100450_index == nullptr)) {
		return;;
	};
	_20d8bd00b_checkIntegerIndexingByData(&(*_self_), _100450_index,_100465_i.get()._field_Token);
	if ((!(_20d8b3254_IsConst(_100450_index.ptr())))) {
		_100435_d.get()._field_Constant=nullptr;
		return;;
	};
	if (_20d8b3254_IsConst(_100435_d.ptr())) {
		jule::Ptr<_20b4e5581_Token> _102017_errorToken = _100465_i.get()._field_Token;;
		jule::I64 _102117_j = _20d80acb2_AsI64(_100450_index.get()._field_Constant.ptr());;
		jule::Str _102217_s = _20d80aa4d_ReadStr(_100435_d.get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_102117_j) >= _102217_s.len())) {
			_20d8b491a_pushErr(&(*_self_), _102017_errorToken,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_20d80b28a_SetU64(_100435_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_102217_s[_102117_j])));
		};
	};
}



inline void _20d8be7b0_toIndexing(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data>& _103134_d, jule::Ptr<_20d8b2891_Data>& _103149_index, jule::Ptr<_20cb95779_IndexingExpr>& _103168_i) {
	{
		
		if ((_20d8e5ee0_Ptr(_103134_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8de15ca:;
			{
				_20d8bd3d5_indexingPtr(&(*_self_), _103134_d,_103149_index,_103168_i);
				return;;
			}
		}
		else if ((_20d8e672c_Arr(_103134_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8de1652:;
			{
				_20d8bd79d_indexingArr(&(*_self_), _103134_d,_103149_index,_103168_i);
				return;;
			}
		}
		else if ((_20d8e6991_Slc(_103134_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8de16c9:;
			{
				_20d8bdb66_indexingSlc(&(*_self_), _103134_d,_103149_index,_103168_i);
				return;;
			}
		}
		else if ((_20d8e7442_Map(_103134_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8de1751:;
			{
				_20d8be02e_indexingMap(&(*_self_), _103134_d,_103149_index,_103168_i);
				return;;
			}
		}
		else if ((_20d8e5a17_Prim(_103134_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8de17c8:;
			{
				jule::Ptr<_20d8e83cc_Prim> _104617_prim = _20d8e5a17_Prim(_103134_d.get()._field_Kind.ptr());;
				{
					
					if (_20d8eb611_IsStr(_104617_prim.ptr())) {
						_case_begin_1c8de5700:;
						{
							_20d8be3e7_indexingStr(&(*_self_), _103134_d,_103149_index,_103168_i);
							return;;
						}
					}
					_match_end_1c8de5656:;
				};
			}
		}
		_match_end_1c8de1487:;
	};
	_20d8b491a_pushErr(&(*_self_), _103168_i.get()._field_Token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_103134_d.get()._field_Kind.ptr()))}));
}



inline jule::Bool _20d8bec33_pushGenericsFromExprSubIdent(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb91c70_SubIdentExpr>& _105653_sexpr, jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>>& _105714_generics, jule::Ptr<_20cb8d81b_Expr>& _105742_expr) {
	jule::Ptr<_20cb8a010_SubIdentTypeDecl> _105817_t = jule::new_ptr<_20cb8a010_SubIdentTypeDecl>();;
	if ((!(_20d8e1095_pushSubIdentFromExpr(static_cast<jule::Any>(_105653_sexpr),_105817_t)))) {
		_20d8b491a_pushErr(_self_.ptr(), _105742_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;;
	};
	_105714_generics = jule::alloc_for_append(_105714_generics,1);_105714_generics.__push(jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Kind=static_cast<jule::Any>(_105817_t)}));;
	return true;;
}



inline jule::Bool _20d8c00eb_pushGenericsFromData(jule::Ptr<_20d8b440e_Eval> _self_, jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>>& _106745_generics, jule::Ptr<_20cb8d81b_Expr>& _106773_expr) {
	{
		auto &_match_expr{ _106773_expr.get()._field_Kind };
		
		if (_match_expr.type_is_ptr<_20cb90bd6_UnaryExpr>()) {
			_case_begin_1c8de95d3:;
			{
				jule::Ptr<_20cb90bd6_UnaryExpr> _107021_u = _106773_expr.get()._field_Kind.operator jule::Ptr<_20cb90bd6_UnaryExpr>();;
				{
					auto &_match_expr{ _107021_u.get()._field_Op.get()._field_Kind };
					
					if (_match_expr == jule::Str("*", 1)) {
						_case_begin_1c8deb0da:;
						{
							jule::Ptr<_20cb8b176_PtrTypeDecl> _107325_kind = jule::new_ptr<_20cb8b176_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>> _107425__generics = jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>>::alloc(0LL, 1LL);;
							_20d8c00eb_pushGenericsFromData(_self_, _107425__generics,_107021_u.get()._field_Expr);
							_107325_kind.get()._field_Elem=_107425__generics[0LL];
							_106745_generics = jule::alloc_for_append(_106745_generics,1);_106745_generics.__push(jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Token=_106773_expr.get()._field_Token, ._field_Kind=static_cast<jule::Any>(_107325_kind)}));;
						}
					}
					else if (_match_expr == jule::Str("&", 1)) {
						_case_begin_1c8deb151:;
						{
							jule::Ptr<_20cb8a6a3_SptrTypeDecl> _108225_kind = jule::new_ptr<_20cb8a6a3_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>> _108325__generics = jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>>::alloc(0LL, 1LL);;
							_20d8c00eb_pushGenericsFromData(_self_, _108325__generics,_107021_u.get()._field_Expr);
							_108225_kind.get()._field_Elem=_108325__generics[0LL];
							_106745_generics = jule::alloc_for_append(_106745_generics,1);_106745_generics.__push(jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Token=_106773_expr.get()._field_Token, ._field_Kind=static_cast<jule::Any>(_108225_kind)}));;
						}
					}
					else {
						_case_begin_1c8dea4c4:;
						{
							_20d8b491a_pushErr(_self_.ptr(), _107021_u.get()._field_Op,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1c8dea24e:;
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20cb892ea_TypeDecl>()) {
			_case_begin_1c8de9649:;
			{
				_106745_generics = jule::alloc_for_append(_106745_generics,1);_106745_generics.__push(_106773_expr.get()._field_Kind.operator jule::Ptr<_20cb892ea_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb91c70_SubIdentExpr>()) {
			_case_begin_1c8de943a:;
			{
				jule::Ptr<_20cb91c70_SubIdentExpr> _109721_sexpr = _106773_expr.get()._field_Kind.operator jule::Ptr<_20cb91c70_SubIdentExpr>();;
				return _20d8bec33_pushGenericsFromExprSubIdent(_self_, _109721_sexpr,_106745_generics,_106773_expr);;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb904cc_IdentExpr>()) {
			_case_begin_1c8de94a1:;
			{
				jule::Ptr<_20cb904cc_IdentExpr> _110021_ident = _106773_expr.get()._field_Kind.operator jule::Ptr<_20cb904cc_IdentExpr>();;
				_106745_generics = jule::alloc_for_append(_106745_generics,1);_106745_generics.__push(jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_20cb898b1_IdentTypeDecl>(_20cb898b1_IdentTypeDecl{._field_Token=_110021_ident.get()._field_Token, ._field_Ident=_110021_ident.get()._field_Ident, ._field_CppLinked=_110021_ident.get()._field_CppLinked, }))}));;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8e498_TupleExpr>()) {
			_case_begin_1c8de8a77:;
			{
				{
					auto &expr = _106773_expr.get()._field_Kind.operator jule::Ptr<_20cb8e498_TupleExpr>().get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_1c8e01200:;
					if (it != expr.end()) {
						jule::Ptr<_20cb8d81b_Expr> _110925_texpr = *it;
						{
							if ((!(_20d8c00eb_pushGenericsFromData(_self_, _106745_generics,_110925_texpr)))) {
								return false;;
							};
						}
						_iter_next_1c8e01200:;
						++it;
						goto _iter_begin_1c8e01200;
					}
					_iter_end_1c8e01200:;
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20cb917ec_NsSelectionExpr>()) {
			_case_begin_1c8de8add:;
			{
				jule::Ptr<_20cb917ec_NsSelectionExpr> _111521_ns = _106773_expr.get()._field_Kind.operator jule::Ptr<_20cb917ec_NsSelectionExpr>();;
				jule::Ptr<_20cb898b1_IdentTypeDecl> _111621_decl = jule::new_ptr<_20cb898b1_IdentTypeDecl>(_20cb898b1_IdentTypeDecl{._field_Token=_111521_ns.get()._field_Ident, ._field_Ident=_111521_ns.get()._field_Ident.get()._field_Kind, });;
				_106745_generics = jule::alloc_for_append(_106745_generics,1);_106745_generics.__push(jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Token=_111621_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_20cb8a3b7_NamespaceTypeDecl>(_20cb8a3b7_NamespaceTypeDecl{._field_Idents=_111521_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Token=_111621_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(_111621_decl)})}))}));;
			}
		}
		else {
			_case_begin_1c8de8a11:;
			{
				_20d8b491a_pushErr(_self_.ptr(), _106773_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1c8de89ab:;
	};
	return true;;
}



inline void _20d8c043c_evalIdentDeclFromIndexing(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20d8b2891_Data>& _113750_d, jule::Ptr<_20cb95779_IndexingExpr>& _113765_i) {
	jule::Ptr<_20cba5db6_StructIns> _113817_s = _20d8e6e69_Struct(_113750_d.get()._field_Kind.ptr());;
	if ((_113817_s == nullptr)) {
		_20d8b491a_pushErr(_self_.ptr(), _113765_i.get()._field_Expr.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_113750_d.get()._field_Kind.ptr()))}));
		_113750_d=nullptr;
		return;;
	};
	jule::Ptr<_20cb898b1_IdentTypeDecl> _114517_decl = nullptr;;
	{
		auto &_match_expr{ _113765_i.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is_ptr<_20cb904cc_IdentExpr>()) {
			_case_begin_1c8e065ce:;
			{
				jule::Ptr<_20cb904cc_IdentExpr> _114821_expr = _113765_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_20cb904cc_IdentExpr>();;
				_114517_decl=jule::new_ptr<_20cb898b1_IdentTypeDecl>(_20cb898b1_IdentTypeDecl{._field_Token=_114821_expr.get()._field_Token, ._field_Ident=_114821_expr.get()._field_Ident, ._field_CppLinked=_114821_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type_is_ptr<_20cb917ec_NsSelectionExpr>()) {
			_case_begin_1c8e0769b:;
			{
				jule::Ptr<_20cb917ec_NsSelectionExpr> _115521_expr = _113765_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_20cb917ec_NsSelectionExpr>();;
				_114517_decl=jule::new_ptr<_20cb898b1_IdentTypeDecl>(_20cb898b1_IdentTypeDecl{._field_Token=_115521_expr.get()._field_Ident, ._field_Ident=_115521_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1c8e069db:;
			{
				_20d8b491a_pushErr(_self_.ptr(), _113765_i.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_113750_d=nullptr;
				return;;
			}
		}
		_match_end_1c8e06986:;
	};
	if ((!(_20d8c00eb_pushGenericsFromData(_self_, _114517_decl.get()._field_Generics,_113765_i.get()._field_Index)))) {
		_113750_d=nullptr;
		return;;
	};
	_113817_s=({ auto _wrap_copy = _20d8c6696_typeChecker(_self_.ptr()); _20d905cad_fromStruct(&_wrap_copy, _114517_decl,_113817_s.get()._field_Decl); });
	if ((_113817_s == nullptr)) {
		_113750_d=nullptr;
		return;;
	};
	_113750_d.get()._field_Kind.get()._field_Kind=jule::Trait<_20d8e3251_Kind>(_113817_s, 0);
}



inline jule::Bool _20d8c089e_checkGenericFn(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20d814749_FnIns>& _118039_f, jule::Ptr<_20b4e5581_Token>& _118055_et, jule::Any& _118072_model) {
	jule::Bool _118113_ok = _20d858e31_reloadFnInsTypes(_self_.get()._field_s, _118039_f);;
	_118039_f.get()._field_reloaded=true;
	if ((!(_118113_ok))) {
		return false;;
	};
	jule::Ptr<_20d814749_FnIns> _118617_existInstance = _20cbde350_appendInstance(_118039_f.get()._field_Decl.ptr(), _118039_f);;
	if ((!(_20d858095_checkConstraintsFn(_self_.get()._field_s, _118039_f,_118055_et,_118617_existInstance)))) {
		return false;;
	};
	if ((_118617_existInstance != nullptr)) {
		_118039_f=_118617_existInstance;
		_20d8e0d53_updateModelToGenericIns(_118072_model,_118617_existInstance);
	} else {
		_20d865767_checkFnInsCaller(_self_.get()._field_s, _118039_f,_118055_et);
	};
	return true;;
}



inline void _20d8c0be0_evalFnGenericFromIndexing(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20d8b2891_Data>& _120550_d, jule::Ptr<_20cb95779_IndexingExpr>& _120565_i) {
	jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>> _120617_generics = jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_20d8c00eb_pushGenericsFromData(_self_, _120617_generics,_120565_i.get()._field_Index)))) {
		_120550_d=nullptr;
		return;;
	};
	jule::Ptr<_20d814749_FnIns> _121217_f = _20d8e6c05_Fn(_120550_d.get()._field_Kind.ptr());;
	jule::I64 _121317_genericsLen = 0LL;;
	if ((_121217_f.get()._field_Decl != nullptr)) {
		_121317_genericsLen=static_cast<jule::I64>(_121217_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_20d851203_checkGenericQuantity(_self_.get()._field_s.ptr(), _121317_genericsLen,static_cast<jule::I64>(_120617_generics.len()),_120565_i.get()._field_Expr.get()._field_Token)))) {
		_120550_d=nullptr;
		return;;
	};
	_121217_f.get()._field_Generics=jule::Slice<jule::Ptr<_20d8e1e53_InsGeneric>>::alloc(0LL, _121217_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto &expr = _120617_generics;
		auto it = expr.begin();
		_iter_begin_1c8e11991:;
		if (it != expr.end()) {
			jule::Ptr<_20cb892ea_TypeDecl> _122421_g = *it;
			{
				jule::Ptr<_20d8b2891_Data> _122521_k = _20d8c69a4_evalType(_self_.ptr(), _122421_g);;
				if ((_122521_k == nullptr)) {
					_120550_d=nullptr;
					return;;
				};
				_121217_f.get()._field_Generics = jule::alloc_for_append(_121217_f.get()._field_Generics,1);_121217_f.get()._field_Generics.__push(jule::new_ptr<_20d8e1e53_InsGeneric>(_20d8e1e53_InsGeneric{._field_Kind=_122521_k.get()._field_Kind, }));;
			}
			_iter_next_1c8e11991:;
			++it;
			goto _iter_begin_1c8e11991;
		}
		_iter_end_1c8e11991:;
	};
	if (_20d814e0e_IsBuiltin(_121217_f.ptr())) {
		return;;
	};
	if (_20d8c089e_checkGenericFn(_self_, _121217_f,_120565_i.get()._field_Expr.get()._field_Token,_120550_d.get()._field_Model)) {
		_120550_d.get()._field_Kind.get()._field_Kind=jule::Trait<_20d8e3251_Kind>(_121217_f, 1);
	} else {
		_120550_d=nullptr;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8c100e_evalIndexing(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb95779_IndexingExpr> _124436_i) {
	jule::Ptr<_20d8e3680_TypeKind> _124517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_124517_prefix;
	});;
	jule::Ptr<_20d8b2891_Data> _124917_d = _20d8ce715_evalExprKind(_self_, _124436_i.get()._field_Expr.get()._field_Kind);;
	if ((_124917_d == nullptr)) {
		return nullptr;;
	};
	if (_124917_d.get()._field_Decl) {
		_20d8c043c_evalIdentDeclFromIndexing(_self_, _124917_d,_124436_i);
		return _124917_d;;
	};
	if ((_20d8e6c05_Fn(_124917_d.get()._field_Kind.ptr()) != nullptr)) {
		_20d8c0be0_evalFnGenericFromIndexing(_self_, _124917_d,_124436_i);
		return _124917_d;;
	};
	_20d8b2891_Data _126517_old_d = (*(_124917_d));;
	jule::Ptr<_20d8b2891_Data> _126717_index = _20d8ce715_evalExprKind(_self_, _124436_i.get()._field_Index.get()._field_Kind);;
	if ((_126717_index == nullptr)) {
		return nullptr;;
	};
	_124917_d.get()._field_Decl=false;
	_20d8be7b0_toIndexing(_self_.ptr(), _124917_d,_126717_index,_124436_i);
	if (_20d8b3254_IsConst(_124917_d.ptr())) {
		_124917_d.get()._field_Decl=false;
		_124917_d.get()._field_Model=static_cast<jule::Any>(_124917_d.get()._field_Constant);
	} else if (_124917_d.get()._field_Decl) {
		_124917_d.get()._field_Decl=false;
	} else {
		_124917_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d80e876_IndexingExprModel>(_20d80e876_IndexingExprModel{._field_Token=_124436_i.get()._field_Token, ._field_Expr=jule::new_ptr<_20d8b2891_Data>(_126517_old_d), ._field_Index=_126717_index}));
	};
	return _124917_d;;
}



inline _x_20d8b2891_Data_x_20d8b2891_Data _20d8c131c_evalSlicingExprs(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb95d84_SlicingExpr>& _129841_s) {
	_x_20d8b2891_Data_x_20d8b2891_Data __jule_func_result;
	jule::Ptr<_20d8e3680_TypeKind> _129917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_129917_prefix;
	});;
	jule::Ptr<_20d8b2891_Data> _130317_l = nullptr;;
	jule::Ptr<_20d8b2891_Data> _130417_r = nullptr;;
	if ((_129841_s.get()._field_Start != nullptr)) {
		_130317_l=_20d8ce715_evalExprKind(_self_, _129841_s.get()._field_Start.get()._field_Kind);
		if ((_130317_l != nullptr)) {
			_20d8bd00b_checkIntegerIndexingByData(_self_.ptr(), _130317_l,_129841_s.get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_130317_l=jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__20cc98393_NewI64(0LL)});
		_130317_l.get()._field_Model=static_cast<jule::Any>(_130317_l.get()._field_Constant);
	};
	if ((_129841_s.get()._field_To != nullptr)) {
		_130417_r=_20d8ce715_evalExprKind(_self_, _129841_s.get()._field_To.get()._field_Kind);
		if ((_130417_r != nullptr)) {
			_20d8bd00b_checkIntegerIndexingByData(_self_.ptr(), _130417_r,_129841_s.get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _130317_l;
	__jule_func_result.__jule_result_arg1 = _130417_r;
	return __jule_func_result;;
}



inline void _20d8c1592_slicingArr(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data>& _133330_d) {
	jule::Ptr<_20d8e3680_TypeKind> _133417_elemType = _20d8e672c_Arr(_133330_d.get()._field_Kind.ptr()).get()._field_Elem;;
	_133330_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(jule::new_ptr<_20d8ec5bd_Slc>(_20d8ec5bd_Slc{._field_Elem=_133417_elemType}), 8)});
	_133330_d.get()._field_Lvalue=false;
	_133330_d.get()._field_Mutable=(_133330_d.get()._field_Mutable || (!(_20d8e4d02_Mutable(_133417_elemType.ptr()))));
}



inline void _20d8c195a_slicingStr(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data>& _134830_d, jule::Ptr<_20d8b2891_Data>& _134841_l, jule::Ptr<_20d8b2891_Data>& _134852_r) {
	_134830_d.get()._field_Lvalue=false;
	_134830_d.get()._field_Mutable=true;
	if ((!(_20d8b3254_IsConst(_134830_d.ptr())))) {
		return;;
	};
	if (((_134841_l == nullptr) || (_134852_r == nullptr))) {
		_134830_d.get()._field_Constant=nullptr;
		return;;
	};
	if ((_20d8b3254_IsConst(_134841_l.ptr()) && _20d8b3254_IsConst(_134852_r.ptr()))) {
		jule::I64 _136117_left = _20d80acb2_AsI64(_134841_l.get()._field_Constant.ptr());;
		if ((_136117_left < 0LL)) {
			return;;
		};
		jule::Str _136617_s = _20d80aa4d_ReadStr(_134830_d.get()._field_Constant.ptr());;
		jule::I64 _136721_right = 0LL;;
		if ((_134852_r == nullptr)) {
			_136721_right=static_cast<jule::I64>(static_cast<jule::I64>(_136617_s.len()));
		} else {
			_136721_right=static_cast<jule::I64>(_20d80acb2_AsI64(_134852_r.get()._field_Constant.ptr()));
		};
		if ((_136117_left > _136721_right)) {
			return;;
		};
		_20d80b4ee_SetStr(_134830_d.get()._field_Constant.ptr(), _136617_s.slice(_136117_left,_136721_right));
		_134830_d.get()._field_Decl=true;
	} else {
		_134830_d.get()._field_Constant=nullptr;
	};
}



inline void _20d8c1dbc_checkSlicing(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data>& _138436_d, jule::Ptr<_20d8b2891_Data>& _138447_l, jule::Ptr<_20d8b2891_Data>& _138458_r, jule::Ptr<_20cb95d84_SlicingExpr>& _138469_s) {
	{
		
		if ((_20d8e672c_Arr(_138436_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8e28a85:;
			{
				_20d8c1592_slicingArr(&(*_self_), _138436_d);
				return;;
			}
		}
		else if ((_20d8e6991_Slc(_138436_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8e28b0c:;
			{
				return;;
			}
		}
		else if ((_20d8e5a17_Prim(_138436_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8e28b84:;
			{
				jule::Ptr<_20d8e83cc_Prim> _139217_prim = _20d8e5a17_Prim(_138436_d.get()._field_Kind.ptr());;
				{
					
					if (_20d8eb611_IsStr(_139217_prim.ptr())) {
						_case_begin_1c8e2b11a:;
						{
							_20d8c195a_slicingStr(&(*_self_), _138436_d,_138447_l,_138458_r);
							return;;
						}
					}
					_match_end_1c8e2b071:;
				};
			}
		}
		_match_end_1c8e28964:;
	};
	_20d8b491a_pushErr(&(*_self_), _138469_s.get()._field_Token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_138436_d.get()._field_Kind.ptr()))}));
}



inline jule::Ptr<_20d8b2891_Data> _20d8c21ca_evalSlicing(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb95d84_SlicingExpr> _140335_s) {
	jule::Ptr<_20d8b2891_Data> _140417_d = _20d8ce715_evalExprKind(_self_, _140335_s.get()._field_Expr.get()._field_Kind);;
	if ((_140417_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20d8b2891_Data> _140918_l;;
	jule::Ptr<_20d8b2891_Data> _140925_r;;
	({
		_x_20d8b2891_Data_x_20d8b2891_Data __jule_assign_result = _20d8c131c_evalSlicingExprs(_self_, _140335_s);
		_140918_l = __jule_assign_result.__jule_result_arg0;
		_140925_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_140918_l == nullptr)) {
		return _140417_d;;
	};
	_140417_d.get()._field_Decl=false;
	_20d8c1dbc_checkSlicing(_self_.ptr(), _140417_d,_140918_l,_140925_r,_140335_s);
	if (_20d8b3254_IsConst(_140417_d.ptr())) {
		_140417_d.get()._field_Decl=false;
		_140417_d.get()._field_Model=static_cast<jule::Any>(_140417_d.get()._field_Constant);
	} else if (_140417_d.get()._field_Decl) {
		_140417_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_20d810129_SlicingExprModel> _142721_model = jule::new_ptr<_20d810129_SlicingExprModel>(_20d810129_SlicingExprModel{._field_Token=_140335_s.get()._field_Token, ._field_Expr=_140417_d.get()._field_Model, ._field_Left=_140918_l.get()._field_Model, });;
		if ((_140925_r != nullptr)) {
			_142721_model.get()._field_Right=_140925_r.get()._field_Model;
		};
		_140417_d.get()._field_Model=static_cast<jule::Any>(_142721_model);
	};
	return _140417_d;;
}



inline void _20d8c2593_castPtr(_20d8b440e_Eval* _self_, jule::Ptr<_20d8e3680_TypeKind> _144030_t, jule::Ptr<_20d8b2891_Data> _144048_d, jule::Ptr<_20b4e5581_Token> _144058_errorToken) {
	_144048_d.get()._field_Constant=nullptr;
	jule::Ptr<_20d8ebb61_Sptr> _144213_sptr = _20d8e5c7b_Sptr(_144048_d.get()._field_Kind.ptr());;
	if ((_144213_sptr != nullptr)) {
		if ((!(_20d8e3d89_Equals(_20d8e5ee0_Ptr(_144030_t.ptr()).get()._field_Elem, _144213_sptr.get()._field_Elem)))) {
			_20d8b491a_pushErr(&(*_self_), _144058_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_144048_d.get()._field_Kind.ptr())),jule::Any(_20d8e3a7b_Str(_144030_t.ptr()))}));
		};
		return;;
	};
	if ((!(_20d8b5355_isUnsafe(&(*_self_))))) {
		_20d8b491a_pushErr(&(*_self_), _144058_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20d8e83cc_Prim> _145513_prim = _20d8e5a17_Prim(_144048_d.get()._field_Kind.ptr());;
	if (((_20d8e5ee0_Ptr(_144048_d.get()._field_Kind.ptr()) == nullptr) && ((_145513_prim == nullptr) || (!(_20d809cd3_IsInt(_20d8e8740_Str(_145513_prim.ptr()))))))) {
		_20d8b491a_pushErr(&(*_self_), _144058_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_144048_d.get()._field_Kind.ptr())),jule::Any(_20d8e3a7b_Str(_144030_t.ptr()))}));
	};
}



inline void _20d8c295b_castStruct(_20d8b440e_Eval* _self_, jule::Ptr<_20d8e3680_TypeKind> _146133_t, jule::Ptr<_20d8b2891_Data> _146151_d, jule::Ptr<_20b4e5581_Token> _146161_errorToken) {
	_146151_d.get()._field_Constant=nullptr;
	jule::Ptr<_20d81a3ed_Trait> _146317_tr = _20d8e71cd_Trait(_146151_d.get()._field_Kind.ptr());;
	if ((_146317_tr == nullptr)) {
		_20d8b491a_pushErr(&(*_self_), _146161_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_146151_d.get()._field_Kind.ptr())),jule::Any(_20d8e3a7b_Str(_146133_t.ptr()))}));
		return;;
	};
	jule::Ptr<_20cba5db6_StructIns> _146917_s = _20d8e6e69_Struct(_146133_t.ptr());;
	_1c8e38b94_pushReference(&(*_self_), _146917_s);
	if ((!(_20cb668e3_IsImplements(_146917_s.get()._field_Decl.ptr(), _146317_tr)))) {
		_20d8b491a_pushErr(&(*_self_), _146161_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_146151_d.get()._field_Kind.ptr())),jule::Any(_20d8e3a7b_Str(_146133_t.ptr()))}));
	};
}



inline void _20d8c2d24_castRef(_20d8b440e_Eval* _self_, jule::Ptr<_20d8e3680_TypeKind> _147730_t, jule::Ptr<_20d8b2891_Data> _147748_d, jule::Ptr<_20b4e5581_Token> _147758_errorToken) {
	_147748_d.get()._field_Constant=nullptr;
	jule::Ptr<_20d8ebb61_Sptr> _147917_sptr = _20d8e5c7b_Sptr(_147730_t.ptr());;
	jule::Ptr<_20d9001c5_Ptr> _148117_ptr = _20d8e5ee0_Ptr(_147748_d.get()._field_Kind.ptr());;
	if (((_148117_ptr != nullptr) && _20d8e3d89_Equals(_147917_sptr.get()._field_Elem, _148117_ptr.get()._field_Elem))) {
		if ((!(_20d8b5355_isUnsafe(&(*_self_))))) {
			_20d8b491a_pushErr(&(*_self_), _147758_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_20d8e6e69_Struct(_147917_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_20d8c295b_castStruct(&(*_self_), _147917_sptr.get()._field_Elem,_147748_d,_147758_errorToken);
		return;;
	};
	_20d8b491a_pushErr(&(*_self_), _147758_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_147748_d.get()._field_Kind.ptr())),jule::Any(_20d8e3a7b_Str(_147730_t.ptr()))}));
}



inline void _20d8c31dc_castSlc(_20d8b440e_Eval* _self_, jule::Ptr<_20d8e3680_TypeKind> _149930_t, jule::Ptr<_20d8b2891_Data> _149948_d, jule::Ptr<_20b4e5581_Token> _149958_errorToken) {
	_149948_d.get()._field_Constant=nullptr;
	if ((_20d8e6254_Enum(_149948_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_20d8e5a17_Prim(_20d8e6254_Enum(_149948_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_20d8eb611_IsStr(_20d8e5a17_Prim(_20d8e6254_Enum(_149948_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_20d8b491a_pushErr(&(*_self_), _149958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_149948_d.get()._field_Kind.ptr())),jule::Any(_20d8e3a7b_Str(_149930_t.ptr()))}));
			return;;
		};
	} else if (((_20d8e5a17_Prim(_149948_d.get()._field_Kind.ptr()) == nullptr) || (!(_20d8eb611_IsStr(_20d8e5a17_Prim(_149948_d.get()._field_Kind.ptr()).ptr()))))) {
		_20d8b491a_pushErr(&(*_self_), _149958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_149948_d.get()._field_Kind.ptr())),jule::Any(_20d8e3a7b_Str(_149930_t.ptr()))}));
		return;;
	};
	_149930_t=_20d8e6991_Slc(_149930_t.ptr()).get()._field_Elem;
	jule::Ptr<_20d8e83cc_Prim> _151213_prim = _20d8e5a17_Prim(_149930_t.ptr());;
	if (((_151213_prim == nullptr) || ((!(_20d8e9bd6_IsU8(_151213_prim.ptr()))) && (!(_20d8e970d_IsI32(_151213_prim.ptr())))))) {
		_20d8b491a_pushErr(&(*_self_), _149958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_149948_d.get()._field_Kind.ptr())),jule::Any(_20d8e3a7b_Str(_149930_t.ptr()))}));
	};
}



inline void _20d8c350b_castStr(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data> _151830_d, jule::Ptr<_20b4e5581_Token> _151840_errorToken) {
	_151830_d.get()._field_Constant=nullptr;
	if ((_20d8e6254_Enum(_151830_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20d81b0ad_Enum> _152121_e = _20d8e6254_Enum(_151830_d.get()._field_Kind.ptr());;
		if (((_20d8e5a17_Prim(_152121_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _20d8eb611_IsStr(_20d8e5a17_Prim(_152121_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_20d8e5a17_Prim(_151830_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20d8e83cc_Prim> _152817_prim = _20d8e5a17_Prim(_151830_d.get()._field_Kind.ptr());;
		if (((!(_20d8e9bd6_IsU8(_152817_prim.ptr()))) && (!(_20d8e970d_IsI32(_152817_prim.ptr()))))) {
			_20d8b491a_pushErr(&(*_self_), _151840_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_20d8e3a7b_Str(_151830_d.get()._field_Kind.ptr()))}));
		};
		return;;
	};
	if ((_20d8e6991_Slc(_151830_d.get()._field_Kind.ptr()) == nullptr)) {
		_20d8b491a_pushErr(&(*_self_), _151840_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_20d8e3a7b_Str(_151830_d.get()._field_Kind.ptr()))}));
		return;;
	};
	jule::Ptr<_20d8e3680_TypeKind> _154017_t = _20d8e6991_Slc(_151830_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_20d8e83cc_Prim> _154113_prim = _20d8e5a17_Prim(_154017_t.ptr());;
	if (((_154113_prim == nullptr) || ((!(_20d8e9bd6_IsU8(_154113_prim.ptr()))) && (!(_20d8e970d_IsI32(_154113_prim.ptr())))))) {
		_20d8b491a_pushErr(&(*_self_), _151840_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_20d8e3a7b_Str(_151830_d.get()._field_Kind.ptr()))}));
	};
}



inline void _20d8c38c4_castInt(_20d8b440e_Eval* _self_, jule::Ptr<_20d8e3680_TypeKind> _154730_t, jule::Ptr<_20d8b2891_Data> _154748_d, jule::Ptr<_20b4e5581_Token> _154758_errorToken) {
	if (_20d8b3254_IsConst(_154748_d.ptr())) {
		jule::Ptr<_20d8e83cc_Prim> _154917_prim = _20d8e5a17_Prim(_154730_t.ptr());;
		{
			
			if (_20d809a6e_IsSigInt(_154917_prim.get()._field_Kind)) {
				_case_begin_1c8e539d3:;
				{
					_20d80b158_SetI64(_154748_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_20d80acb2_AsI64(_154748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_20d809ba1_IsUnsigInt(_154917_prim.get()._field_Kind)) {
				_case_begin_1c8e53a5a:;
				{
					_20d80b28a_SetU64(_154748_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_20d80ade4_AsU64(_154748_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1c8e53928:;
		};
	} else {
		_154748_d.get()._field_Constant=nullptr;
	};
	if ((_20d8e6254_Enum(_154748_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20d81b0ad_Enum> _156117_e = _20d8e6254_Enum(_154748_d.get()._field_Kind.ptr());;
		if (_20d80a047_IsNum(_20d8e3a7b_Str(_156117_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_20d8e5c7b_Sptr(_154748_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20d8e83cc_Prim> _156817_prim = _20d8e5a17_Prim(_154730_t.ptr());;
		if ((!(_20d8eb138_IsUintptr(_156817_prim.ptr())))) {
			_20d8b491a_pushErr(&(*_self_), _154758_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_154748_d.get()._field_Kind.ptr())),jule::Any(_20d8e3a7b_Str(_154730_t.ptr()))}));
		};
		return;;
	};
	if ((_20d8e5ee0_Ptr(_154748_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20d8e83cc_Prim> _157517_prim = _20d8e5a17_Prim(_154730_t.ptr());;
		if (_20d8eb138_IsUintptr(_157517_prim.ptr())) {
		} else if ((!(_20d8b5355_isUnsafe(&(*_self_))))) {
			_20d8b491a_pushErr(&(*_self_), _154758_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_20d8e83cc_Prim> _158413_prim = _20d8e5a17_Prim(_154748_d.get()._field_Kind.ptr());;
	if (((_158413_prim != nullptr) && _20d80a047_IsNum(_20d8e8740_Str(_158413_prim.ptr())))) {
		return;;
	};
	_20d8b491a_pushErr(&(*_self_), _154758_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_154748_d.get()._field_Kind.ptr())),jule::Any(_20d8e3a7b_Str(_154730_t.ptr()))}));
}



inline void _20d8c3c8c_castNum(_20d8b440e_Eval* _self_, jule::Ptr<_20d8e3680_TypeKind> _159230_t, jule::Ptr<_20d8b2891_Data> _159248_d, jule::Ptr<_20b4e5581_Token> _159258_errorToken) {
	if (_20d8b3254_IsConst(_159248_d.ptr())) {
		jule::Ptr<_20d8e83cc_Prim> _159417_prim = _20d8e5a17_Prim(_159230_t.ptr());;
		{
			
			if (_20d809e15_IsFloat(_159417_prim.get()._field_Kind)) {
				_case_begin_1c8e5c712:;
				{
					_20d80b631_SetF64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_20d80b026_AsF64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			else if (_20d809a6e_IsSigInt(_159417_prim.get()._field_Kind)) {
				_case_begin_1c8e5c789:;
				{
					_20d80b158_SetI64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_20d80acb2_AsI64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			else if (_20d809ba1_IsUnsigInt(_159417_prim.get()._field_Kind)) {
				_case_begin_1c8e5c811:;
				{
					_20d80b28a_SetU64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_20d80ade4_AsU64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1c8e5c646:;
		};
	} else {
		_159248_d.get()._field_Constant=nullptr;
	};
	if ((_20d8e6254_Enum(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20d81b0ad_Enum> _160817_e = _20d8e6254_Enum(_159248_d.get()._field_Kind.ptr());;
		if (_20d80a047_IsNum(_20d8e3a7b_Str(_160817_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_20d8e83cc_Prim> _161413_prim = _20d8e5a17_Prim(_159248_d.get()._field_Kind.ptr());;
	if (((_161413_prim != nullptr) && _20d80a047_IsNum(_20d8e8740_Str(_161413_prim.ptr())))) {
		return;;
	};
	_20d8b491a_pushErr(&(*_self_), _159258_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_159248_d.get()._field_Kind.ptr())),jule::Any(_20d8e3a7b_Str(_159230_t.ptr()))}));
}



inline void _20d8c4155_castPrim(_20d8b440e_Eval* _self_, jule::Ptr<_20d8e3680_TypeKind> _162231_t, jule::Ptr<_20d8b2891_Data> _162249_d, jule::Ptr<_20b4e5581_Token> _162259_errorToken) {
	jule::Ptr<_20d8e83cc_Prim> _162313_prim = _20d8e5a17_Prim(_162231_t.ptr());;
	{
		
		if (_20d8eb875_IsAny(_162313_prim.ptr())) {
			_case_begin_1c8e63361:;
			{
				_162249_d.get()._field_Constant=nullptr;
			}
		}
		else if (_20d8eb611_IsStr(_162313_prim.ptr())) {
			_case_begin_1c8e638d3:;
			{
				_20d8c350b_castStr(&(*_self_), _162249_d,_162259_errorToken);
			}
		}
		else if (_20d809cd3_IsInt(_20d8e8740_Str(_162313_prim.ptr()))) {
			_case_begin_1c8e63949:;
			{
				_20d8c38c4_castInt(&(*_self_), _162231_t,_162249_d,_162259_errorToken);
			}
		}
		else if (_20d80a047_IsNum(_20d8e8740_Str(_162313_prim.ptr()))) {
			_case_begin_1c8e639b0:;
			{
				_20d8c3c8c_castNum(&(*_self_), _162231_t,_162249_d,_162259_errorToken);
			}
		}
		else {
			_case_begin_1c8e6386c:;
			{
				_20d8b491a_pushErr(&(*_self_), _162259_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_162231_t.ptr()))}));
			}
		}
		_match_end_1c8e63806:;
	};
}



inline void _20d8c4474_castConstant(_20d8b440e_Eval* _self_, jule::Ptr<_20d8e3680_TypeKind>& _163936_t, jule::Ptr<_20d8b2891_Data>& _163955_d) {
	if (((_163955_d == nullptr) || (!(_20d8b3254_IsConst(_163955_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_20d8e83cc_Prim> _164313_prim = _20d8e5a17_Prim(_163936_t.ptr());;
	_20d8e0968_castConstByType(_164313_prim.get()._field_Kind,_163955_d);
	_163955_d.get()._field_Model=static_cast<jule::Any>(_163955_d.get()._field_Constant);
}



inline void _20d8c483c_castTypeEnum(_20d8b440e_Eval* _self_, jule::Ptr<_20d8e3680_TypeKind>& _164836_t, jule::Ptr<_20d8b2891_Data>& _164855_d, jule::Ptr<_20b4e5581_Token>& _164870_errorToken) {
	jule::I64 _164913_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_20d857193_checkTypeCompatibility((*_self_)._field_s, _164855_d.get()._field_Kind,_164836_t,_164870_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_164913_n);
		_20d8b491a_pushErr(&(*_self_), _164870_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_164855_d.get()._field_Kind.ptr())),jule::Any(_20d8e3a7b_Str(_164836_t.ptr()))}));
	};
	_164855_d.get()._field_Constant=nullptr;
}



inline void _20d8c4c05_castTypeEnumT(_20d8b440e_Eval* _self_, jule::Ptr<_20d8e3680_TypeKind>& _165737_t, jule::Ptr<_20d8b2891_Data>& _165756_d, jule::Ptr<_20b4e5581_Token>& _165771_errorToken) {
	jule::I64 _165813_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_20d857193_checkTypeCompatibility((*_self_)._field_s, _165737_t,_165756_d.get()._field_Kind,_165771_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_165813_n);
		_20d8b491a_pushErr(&(*_self_), _165771_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_165756_d.get()._field_Kind.ptr())),jule::Any(_20d8e3a7b_Str(_165737_t.ptr()))}));
	};
	_165756_d.get()._field_Constant=nullptr;
}



inline jule::Ptr<_20d8b2891_Data> _20d8c5156_evalCastByTypeNData(_20d8b440e_Eval* _self_, jule::Ptr<_20d8e3680_TypeKind> _166642_t, jule::Ptr<_20d8b2891_Data> _166660_d, jule::Ptr<_20b4e5581_Token> _166674_errorToken) {
	if (((_166660_d != nullptr) && _166660_d.get()._field_Decl)) {
		_20d8b491a_pushErr(&(*_self_), _166674_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_20d8b2c7b_IsNil(_166660_d.ptr())) {
			_case_begin_1c8e6e537:;
			{
				if ((!(_20d8e5066_NilCompatible(_166642_t.ptr())))) {
					_20d8b491a_pushErr(&(*_self_), _166674_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5)),jule::Any(_20d8e3a7b_Str(_166642_t.ptr()))}));
				};
				_166660_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_20d8e5a17_Prim(_166660_d.get()._field_Kind.ptr()) != nullptr) && _20d8eb875_IsAny(_20d8e5a17_Prim(_166660_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c8e6e2b2:;
			{
				if ((_20d8e6254_Enum(_166642_t.ptr()) != nullptr)) {
					_20d8b491a_pushErr(&(*_self_), _166674_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_20d8b4c39_pushSugggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_20d8e64b8_TypeEnum(_166642_t.ptr()) != nullptr)) {
					_20d8b491a_pushErr(&(*_self_), _166674_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
				_166660_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_20d8e64b8_TypeEnum(_166660_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8e6e328:;
			{
				_20d8c483c_castTypeEnum(&(*_self_), _166642_t,_166660_d,_166674_errorToken);
			}
		}
		else if ((_20d8e64b8_TypeEnum(_166642_t.ptr()) != nullptr)) {
			_case_begin_1c8e6e38e:;
			{
				_20d8c4c05_castTypeEnumT(&(*_self_), _166642_t,_166660_d,_166674_errorToken);
			}
		}
		else if ((_20d8e5ee0_Ptr(_166642_t.ptr()) != nullptr)) {
			_case_begin_1c8e7003d:;
			{
				_20d8c2593_castPtr(&(*_self_), _166642_t,_166660_d,_166674_errorToken);
			}
		}
		else if ((_20d8e5c7b_Sptr(_166642_t.ptr()) != nullptr)) {
			_case_begin_1c8e700a4:;
			{
				_20d8c2d24_castRef(&(*_self_), _166642_t,_166660_d,_166674_errorToken);
			}
		}
		else if ((_20d8e6991_Slc(_166642_t.ptr()) != nullptr)) {
			_case_begin_1c8e7011a:;
			{
				_20d8c31dc_castSlc(&(*_self_), _166642_t,_166660_d,_166674_errorToken);
			}
		}
		else if ((_20d8e6e69_Struct(_166642_t.ptr()) != nullptr)) {
			_case_begin_1c8e70181:;
			{
				_20d8c295b_castStruct(&(*_self_), _166642_t,_166660_d,_166674_errorToken);
			}
		}
		else if ((_20d8e5a17_Prim(_166642_t.ptr()) != nullptr)) {
			_case_begin_1c8e701e7:;
			{
				_20d8c4155_castPrim(&(*_self_), _166642_t,_166660_d,_166674_errorToken);
				_20d8c4474_castConstant(&(*_self_), _166642_t,_166660_d);
			}
		}
		else {
			_case_begin_1c8e6e191:;
			{
				_20d8b491a_pushErr(&(*_self_), _166674_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_166642_t.ptr()))}));
				_166660_d=nullptr;
			}
		}
		_match_end_1c8e6e12a:;
	};
	if ((_166660_d == nullptr)) {
		return nullptr;;
	};
	_166660_d.get()._field_Mutable=(_166660_d.get()._field_Mutable || ((!(_20d8e4d02_Mutable(_166660_d.get()._field_Kind.ptr()))) && _20d8e4d02_Mutable(_166642_t.ptr())));
	_166660_d.get()._field_Lvalue=false;
	_166660_d.get()._field_Decl=false;
	if (((_20d8e6254_Enum(_166660_d.get()._field_Kind.ptr()) == nullptr) || (!(_20d8e3d89_Equals(_20d8e6254_Enum(_166660_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _166642_t))))) {
		_20d8d9ea1_applyCastKind(_166660_d,_166642_t);
		_166660_d.get()._field_Model.operator jule::Ptr<_20d80e2b0_CastingExprModel>().get()._field_Token=_166674_errorToken;
	} else {
		_166660_d.get()._field_Kind=_166642_t;
	};
	_166660_d.get()._field_untyped=false;
	if (_20d8b3254_IsConst(_166660_d.ptr())) {
		_166660_d.get()._field_Constant.get()._field_Kind=_20d8e5a17_Prim(_166642_t.ptr()).get()._field_Kind;
	};
	return _166660_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8c55a7_evalCastT(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20d8e3680_TypeKind>& _173134_t, jule::Ptr<_20cb8d81b_Expr>& _173153_e, jule::Ptr<_20b4e5581_Token>& _173168_et) {
	jule::Ptr<_20d8e3680_TypeKind> _173217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_173217_prefix;
	});;
	if ((_20d8e6991_Slc(_173134_t.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _173153_e.get()._field_Kind };
			
			if (_match_expr.type_is_ptr<_20cb94e0a_SliceExpr>()) {
				_case_begin_1c8e7cdd6:;
				{
					_self_.get()._field_prefix=_173134_t;
				}
			}
			_match_end_1c8e7cc2c:;
		};
	};
	jule::Ptr<_20d8b2891_Data> _174117_d = _20d8ce715_evalExprKind(_self_, _173153_e.get()._field_Kind);;
	if (((_174117_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _174117_d;;
	};
	return _20d8c5156_evalCastByTypeNData(_self_.ptr(), _173134_t,_174117_d,_173168_et);;
}



inline jule::Ptr<_20d8b2891_Data> _20d8c58b5_evalCast(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb91445_CastExpr> _174832_c) {
	jule::Ptr<_20d8e7a5d_TypeSymbol> _174917_t = _20d8161c9_buildType(_174832_c.get()._field_Kind);;
	jule::Bool _175013_ok = _20d8550b4_checkType(_self_.get()._field_s, _174917_t,_self_.get()._field_lookup);;
	if ((!(_175013_ok))) {
		return nullptr;;
	};
	return _20d8c55a7_evalCastT(_self_, _174917_t.get()._field_Kind,_174832_c.get()._field_Expr,_174832_c.get()._field_Kind.get()._field_Token);;
}



inline jule::Ptr<_20d8b2891_Data> _20d8c5bc3_evalNsSelection(_20d8b440e_Eval* _self_, jule::Ptr<_20cb917ec_NsSelectionExpr> _175734_s) {
	jule::Str _175813_path = _20d90b500_buildLinkPathByTokens(_175734_s.get()._field_Ns);;
	jule::Ptr<_20d84404d_ImportInfo> _175917_imp = _20d90e536_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._20d90c9eb_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)>([=](jule::Ptr<_20d84404d_ImportInfo> _175952_imp) mutable -> jule::Bool {
		if (((_175734_s.get()._field_Ns.len() == 1LL) && (_175952_imp.get()._field_Alias == _175813_path))) {
			return true;;
		};
		return ((_175952_imp.get()._field_LinkPath == _175813_path) && _20d846baa_isAccessibleViaSelection(_175952_imp.ptr()));;
	}));;
	if ((_175917_imp == nullptr)) {
		_20d8b491a_pushErr(&(*_self_), _175734_s.get()._field_Ns[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_175813_path)}));
		return nullptr;;
	};
	jule::Trait<_20d90e536_Lookup> _177117_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_20d90e536_Lookup>(_175917_imp, 1);
	;
	_20d8b50e1_disallowBuiltin(&(*_self_));
	jule::Any _177617_def = _20d8b792e_getDef(&(*_self_), _175734_s.get()._field_Ident.get()._field_Kind,false);;
	_20d8b4e15_allowBuiltin(&(*_self_));
	(*_self_)._field_lookup=_177117_lookup;
	jule::Ptr<_20d8b2891_Data> _177917_d = _20d8bb416_evalDef(&(*_self_), _177617_def,_175734_s.get()._field_Ident);;
	return _177917_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8c6124_evalStructLitExplicit(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cba5db6_StructIns> _178345_s, jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _178413_exprs, jule::Ptr<_20b4e5581_Token> _178433_errorToken) {
	jule::Bool _178513_ok = _20d851203_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_178345_s.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_178345_s.get()._field_Generics.len()),_178433_errorToken);;
	if ((!(_178513_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _178345_s.get()._field_Decl))) {
		_20d8b491a_pushErr(_self_.ptr(), _178433_errorToken,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_178345_s.get()._field_Decl.get()._field_Ident)}));
	};
	_1c8e38b94_pushReference(_self_.ptr(), _178345_s);
	_20d8b9821_checkDeprecated(_self_.ptr(), _178345_s.get()._field_Decl.get()._field_Directives,_178433_errorToken);
	_20d8a7039_structLitChecker _179817_slc = _20d8a7039_structLitChecker{._field_e=_self_, ._field_errorToken=_178433_errorToken, ._field_s=_178345_s, };;
	_20d8a85ce_check(&_179817_slc, _178413_exprs);
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_178345_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d80ddd6_StructLitExprModel>(_20d80ddd6_StructLitExprModel{._field_Strct=_178345_s, ._field_Args=_179817_slc._field_args})), });;
}



inline jule::Ptr<_20d8b2891_Data> _20d8c6432_evalStructLit(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb939ca_StructLit> _181737_lit) {
	jule::Ptr<_20d8e7a5d_TypeSymbol> _181817_t = _20d8161c9_buildType(_181737_lit.get()._field_Kind);;
	jule::Bool _181913_ok = _20d8550b4_checkType(_self_.get()._field_s, _181817_t,_self_.get()._field_lookup);;
	if ((!(_181913_ok))) {
		return nullptr;;
	};
	jule::Ptr<_20cba5db6_StructIns> _182417_s = _20d8e6e69_Struct(_181817_t.get()._field_Kind.ptr());;
	if ((_182417_s == nullptr)) {
		if ((_20d8e5c7b_Sptr(_181817_t.get()._field_Kind.ptr()) != nullptr)) {
			_182417_s=_20d8e6e69_Struct(_20d8e5c7b_Sptr(_181817_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_182417_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_20d8b491a_pushErr(_self_.ptr(), _181737_lit.get()._field_Kind.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_20d8b2891_Data> _183717_d = _20d8c6124_evalStructLitExplicit(_self_, _182417_s,_181737_lit.get()._field_Exprs,_181737_lit.get()._field_Kind.get()._field_Token);;
	if ((_20d8e5c7b_Sptr(_181817_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20d80ddd6_StructLitExprModel> _183921_model = _183717_d.get()._field_Model.operator jule::Ptr<_20d80ddd6_StructLitExprModel>();;
		_20d8d8862_makeStructLitAlloc(_183717_d,_183921_model);
	};
	return _183717_d;;
}



inline _20d901e30_typeChecker _20d8c6696_typeChecker(_20d8b440e_Eval* _self_) {
	return _20d853ea3_typeChecker((*_self_)._field_s, (*_self_)._field_lookup,nullptr,nullptr);;
}



inline jule::Ptr<_20d8b2891_Data> _20d8c69a4_evalType(_20d8b440e_Eval* _self_, jule::Ptr<_20cb892ea_TypeDecl> _184931_t) {
	jule::Ptr<_20d8e7a5d_TypeSymbol> _185017_tk = _20d8161c9_buildType(_184931_t);;
	jule::Bool _185113_ok = _20d8550b4_checkType((*_self_)._field_s, _185017_tk,(*_self_)._field_lookup);;
	if ((!(_185113_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=_185017_tk.get()._field_Kind, ._field_Model=static_cast<jule::Any>(_185017_tk.get()._field_Kind), ._field_Decl=true, });;
}



inline void _20d8c6cc3_callTypeFn(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb927ed_FnCallExpr>& _186235_fc, jule::Ptr<_20d8b2891_Data>& _186257_d) {
	if ((_186235_fc.get()._field_Args.len() < 1LL)) {
		_20d8b491a_pushErr(_self_.ptr(), _186235_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_186235_fc.get()._field_Args.len() > 1LL)) {
		_20d8b491a_pushErr(_self_.ptr(), _186235_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	} else if (_186235_fc.get()._field_IsCo) {
		_20d8b491a_pushErr(_self_.ptr(), _186235_fc.get()._field_Token,jule::Str("concurrent calls are not allowed for type-cast calls", 52),jule::Slice<jule::Any>());
		_186257_d=nullptr;
		return;;
	} else if ((_186235_fc.get()._field_Exception != nullptr)) {
		_20d8b491a_pushErr(_self_.ptr(), _186235_fc.get()._field_Token,jule::Str("exceptionals are not supported for type-cast call", 49),jule::Slice<jule::Any>());
		_186257_d=nullptr;
		return;;
	};
	if ((_186235_fc.get()._field_Args.len() > 0LL)) {
		jule::Ptr<_20cb8d81b_Expr> _187821_arg = _186235_fc.get()._field_Args[0LL];;
		_186257_d=_20d8c55a7_evalCastT(_self_, _186257_d.get()._field_Kind,_187821_arg,_187821_arg.get()._field_Token);
		return;;
	};
	if ((_186257_d != nullptr)) {
		_186257_d.get()._field_Decl=false;
	};
}



inline void _20d8c70e2_callBuiltinFn(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb927ed_FnCallExpr>& _188838_fc, jule::Ptr<_20d8b2891_Data>& _188860_d) {
	_188860_d=_20d8e6c05_Fn(_188860_d.get()._field_Kind.ptr()).get()._field_caller(_self_,_188838_fc,_188860_d);
	if ((_188860_d == nullptr)) {
		return;;
	};
	_188860_d.get()._field_Mutable=true;
}



inline void _20d8c7433_checkFnOfConcurrentCall(_20d8b440e_Eval* _self_, jule::Ptr<_20d814749_FnIns>& _189643_f, jule::Ptr<_20b4e5581_Token> _189654_errorToken) {
	if (_20d8b5355_isUnsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _189643_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c8ea1da5:;
		if (it != expr.end()) {
			jule::Ptr<_20d81455c_ParamIns> &_190016_p = *it;
			{
				if (_20cbece41_IsSelf(_190016_p.get()._field_Decl.ptr())) {
					if ((!(_20cbedd43_IsRef(_190016_p.get()._field_Decl.ptr())))) {
						_20d8b491a_pushErr(&(*_self_), _189654_errorToken,jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97),jule::Slice<jule::Any>());
						_20d8b4c39_pushSugggestion(&(*_self_), jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99),jule::Slice<jule::Any>());
					};
				};
				if (_190016_p.get()._field_Decl.get()._field_Reference) {
					_20d8b491a_pushErr(&(*_self_), _189654_errorToken,jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96),jule::Slice<jule::Any>());
					_20d8b4c39_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1c8ea1da5:;
			++it;
			goto _iter_begin_1c8ea1da5;
		}
		_iter_end_1c8ea1da5:;
	};
}



inline void _20d8c782e_processExceptionalHandler(_20d8b440e_Eval* _self_, jule::Ptr<_20d814749_FnIns>& _191549_f, jule::Ptr<_20cb927ed_FnCallExpr>& _191565_fc, jule::Ptr<_20d8b2891_Data>& _191587_d) {
	jule::Bool _191613_resultNeeded = ((!(_20cbeec56_IsVoid(_191549_f.get()._field_Decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_20d82c3aa_scopeChecker> _191717_csc = nullptr;;
	jule::Ptr<_20d825848_Scope> _191817_ch = nullptr;;
	jule::Ptr<_20d80e49c_FnCallExprModel> _192017_model = _191587_d.get()._field_Model.operator jule::Ptr<_20d80e49c_FnCallExprModel>();;
	jule::Ptr<_20d82c3aa_scopeChecker> _192417_sc = (*_self_)._field_lookup.operator jule::Ptr<_20d82c3aa_scopeChecker>();;
	_191717_csc=_20d83c420_newChildChecker(_192417_sc);
	if (_191613_resultNeeded) {
		_191717_csc.get()._field_result=_191549_f;
	};
	_191817_ch=_20d831ca5_getChild(_192417_sc.ptr());
	_191565_fc.get()._field_Exception.get()._field_Parent=_192417_sc.get()._field_tree;
	_191717_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_191717_csc.get()._field_table.get()._field_Vars,1);_191717_csc.get()._field_table.get()._field_Vars.__push(_20d8d8ba3_buildErrorVar(_191817_ch,_191565_fc));;
	_20d83216d_checkChildSsc(_192417_sc, _191565_fc.get()._field_Exception,_191817_ch,_191717_csc);
	_192017_model.get()._field_Assigned=_191613_resultNeeded;
	_192017_model.get()._field_Except=_191817_ch;
	if ((_191613_resultNeeded && (_191717_csc.get()._field_result != nullptr))) {
		_20d8b491a_pushErr(&(*_self_), _191565_fc.get()._field_Token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _20d8c7b5e_callFn(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb927ed_FnCallExpr>& _194231_fc, jule::Ptr<_20d8b2891_Data>& _194253_d) {
	jule::Ptr<_20d814749_FnIns> _194317_f = _20d8e6c05_Fn(_194253_d.get()._field_Kind.ptr());;
	if (_20d814e0e_IsBuiltin(_194317_f.ptr())) {
		_20d8c70e2_callBuiltinFn(_self_, _194231_fc,_194253_d);
		return;;
	};
	if ((_20d8b55b9_isGlobal(_self_.ptr()) && _194317_f.get()._field_Decl.get()._field_Exceptional)) {
		_20d8b491a_pushErr(_self_.ptr(), _194231_fc.get()._field_Token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_20d8b4c39_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_194253_d=nullptr;
		return;;
	};
	if (((!(_20cc3121b_IsMethod(_194317_f.get()._field_Decl.ptr()))) && _20d90a653_hasDirective(_194317_f.get()._field_Decl.get()._field_Directives,jule::Str("test", 4)))) {
		_20d8b491a_pushErr(_self_.ptr(), _194231_fc.get()._field_Token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_194253_d=nullptr;
		return;;
	};
	if (((((!(_194253_d.get()._field_Mutable)) && _20cc3121b_IsMethod(_194317_f.get()._field_Decl.ptr())) && (!(_194317_f.get()._field_Decl.get()._field_Statically))) && _194317_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_20d8b491a_pushErr(_self_.ptr(), _194231_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_20d8b5355_isUnsafe(_self_.ptr()))) && _194317_f.get()._field_Decl.get()._field_Unsafety)) {
		_20d8b491a_pushErr(_self_.ptr(), _194231_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _196717_dynamicAnnotation = (((_194317_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_194317_f.get()._field_Generics.len() == 0LL)) && (_194317_f.get()._field_Params.len() > 0LL));;
	if (_196717_dynamicAnnotation) {
		_194317_f.get()._field_Generics=jule::Slice<jule::Ptr<_20d8e1e53_InsGeneric>>::alloc(_194317_f.get()._field_Decl.get()._field_Generics.len(), _194317_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_194317_f.get()._field_Generics.len() != _194317_f.get()._field_Decl.get()._field_Generics.len())) {
		_20d851203_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_194317_f.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_194317_f.get()._field_Generics.len()),_194231_fc.get()._field_Token);
		_194253_d=nullptr;
		return;;
	};
	jule::Ptr<_20d84c199_Sema> _197617_old = _self_.get()._field_s;;
	if ((_194317_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_194317_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_197617_old != _self_.get()._field_s)) {
			_197617_old.get()._field_errors=jule::append(_197617_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_197617_old;
	});;
	if ((!(_196717_dynamicAnnotation))) {
		if ((!(_194317_f.get()._field_reloaded))) {
			jule::Bool _199121_ok = _20d858e31_reloadFnInsTypes(_self_.get()._field_s, _194317_f);;
			_194317_f.get()._field_reloaded=true;
			if ((!(_199121_ok))) {
				_194253_d=nullptr;
				return;;
			};
		};
		jule::Ptr<_20d814749_FnIns> _199821_existInstance = _20cbde350_appendInstance(_194317_f.get()._field_Decl.ptr(), _194317_f);;
		if ((_199821_existInstance != nullptr)) {
			_194317_f=_199821_existInstance;
		};
	} else {
		_20d857825_buildFnNonGenericTypeKinds(_self_.get()._field_s, _194317_f);
	};
	_20d8a4630_fnCallArgChecker _200617_fcac = _20d8a4630_fnCallArgChecker{._field_e=_self_, ._field_args=_194231_fc.get()._field_Args, ._field_errorToken=_194231_fc.get()._field_Token, ._field_f=_194317_f, ._field_dynamicAnnotation=_196717_dynamicAnnotation, };;
	jule::Bool _201317_ok = false;;
	if ((_194317_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_20d84c199_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_20d84c199_Sema> _1___jule_assign_arg = _197617_old;
			_197617_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_201317_ok=_20d8a69ea_check(&_200617_fcac);
		({
			jule::Ptr<_20d84c199_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_20d84c199_Sema> _1___jule_assign_arg = _197617_old;
			_197617_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_201317_ok=_20d8a69ea_check(&_200617_fcac);
	};
	if (_196717_dynamicAnnotation) {
		if ((!(_201317_ok))) {
			_194253_d=nullptr;
			return;;
		};
		if ((!(_20d8c089e_checkGenericFn(_self_, _194317_f,_194231_fc.get()._field_Token,_194253_d.get()._field_Model)))) {
			_194253_d=nullptr;
			return;;
		};
	};
	jule::Any _203317_callModel = _194253_d.get()._field_Model;;
	if (_20cbeec56_IsVoid(_194317_f.get()._field_Decl.ptr())) {
		_194253_d=_20d8da19e_buildVoidData();
	} else {
		_194253_d.get()._field_Kind=_194317_f.get()._field_Result;
		_194253_d.get()._field_Lvalue=false;
	};
	jule::Ptr<_20d80e49c_FnCallExprModel> _204217_model = jule::new_ptr<_20d80e49c_FnCallExprModel>(_20d80e49c_FnCallExprModel{._field_Token=_194231_fc.get()._field_Token, ._field_Func=_194317_f, ._field_IsCo=_194231_fc.get()._field_IsCo, ._field_Expr=_203317_callModel, ._field_Args=_200617_fcac._field_argModels, });;
	_194253_d.get()._field_Model=static_cast<jule::Any>(_204217_model);
	_194253_d.get()._field_Mutable=true;
	if (_194317_f.get()._field_Decl.get()._field_Exceptional) {
		if (_194231_fc.get()._field_IsCo) {
			_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _194231_fc.get()._field_Token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
			_20d85017a_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
		};
		{
			
			if (_20cb92b61_Unhandled(_194231_fc.ptr())) {
				_case_begin_1c8ebe785:;
				{
					_20d8b491a_pushErr(_self_.ptr(), _194231_fc.get()._field_Token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_20d8b4c39_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_20cb92dc5_Ignored(_194231_fc.ptr())) {
				_case_begin_1c8ebe6ca:;
				{
					goto _match_end_1c8ebd762;
				}
			}
			else {
				_case_begin_1c8ebd7c8:;
				{
					_20d8c782e_processExceptionalHandler(_self_.ptr(), _194317_f,_194231_fc,_194253_d);
				}
			}
			_match_end_1c8ebd762:;
		};
	} else if ((!(_20cb92b61_Unhandled(_194231_fc.ptr())))) {
		_20d8b491a_pushErr(_self_.ptr(), _194231_fc.get()._field_Token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
	if (_194231_fc.get()._field_IsCo) {
		_20d8c7433_checkFnOfConcurrentCall(_self_.ptr(), _204217_model.get()._field_Func,_194231_fc.get()._field_Token);
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8c7e6c_evalFnCall(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb927ed_FnCallExpr> _207734_fc) {
	jule::Ptr<_20d8e3680_TypeKind> _207817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_207817_prefix;
	});;
	{
		auto &_match_expr{ _207734_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is_ptr<_20cb904cc_IdentExpr>()) {
			_case_begin_1c8ec27ee:;
			{
				if ((_207734_fc.get()._field_Expr.get()._field_Token.get()._field_Kind == jule::Str("error", 5))) {
					return _20d9a0143_builtinCallerError(_self_,_207734_fc);;
				};
			}
		}
		_match_end_1c8ec2799:;
	};
	jule::Ptr<_20d8b2891_Data> _209117_d = _20d8ce715_evalExprKind(_self_, _207734_fc.get()._field_Expr.get()._field_Kind);;
	if ((_209117_d == nullptr)) {
		return nullptr;;
	};
	if (_209117_d.get()._field_Decl) {
		_20d8c6cc3_callTypeFn(_self_, _207734_fc,_209117_d);
		return _209117_d;;
	};
	if ((_20d8e6c05_Fn(_209117_d.get()._field_Kind.ptr()) == nullptr)) {
		_20d8b491a_pushErr(_self_.ptr(), _207734_fc.get()._field_Token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_20d8c7b5e_callFn(_self_, _207734_fc,_209117_d);
	return _209117_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8c8324_evalEnumStatic(_20d8b440e_Eval* _self_, jule::Ptr<_20d81b0ad_Enum> _211037_enm, jule::Ptr<_20b4e5581_Token> _211049_ident) {
	jule::Ptr<_20d8b2891_Data> _211117_d = jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_211037_enm, 3)}), });;
	jule::Ptr<_20d81ac8e_EnumItem> _211717_item = _20d81b50e_FindItem(_211037_enm.ptr(), _211049_ident.get()._field_Kind);;
	if ((_211717_item == nullptr)) {
		_20d8b491a_pushErr(&(*_self_), _211049_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_211037_enm.get()._field_Ident),jule::Any(_211049_ident.get()._field_Kind)}));
	} else {
		_211117_d.get()._field_Constant=jule::new_ptr<_20cc572ec_Const>((*(_211717_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_211117_d.get()._field_Model=static_cast<jule::Any>(_211117_d.get()._field_Constant);
		_20d8da732_applyCastModelByEnum(_211117_d,_211037_enm);
	};
	return _211117_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8c86cb_evalTypeEnumStatic(_20d8b440e_Eval* _self_, jule::Ptr<_20d81b82d_TypeEnum> _212941_enm, jule::Ptr<_20b4e5581_Token> _212957_ident) {
	jule::Ptr<_20d81b641_TypeEnumItem> _213017_item = _20d81bdb1_FindItem(_212941_enm.ptr(), _212957_ident.get()._field_Kind);;
	if ((_213017_item == nullptr)) {
		_20d8b491a_pushErr(&(*_self_), _212957_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_212941_enm.get()._field_Ident),jule::Any(_212957_ident.get()._field_Kind)}));
		return nullptr;;
	};
	{
		
		if ((_20d8e6254_Enum(_213017_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8eca85c:;
			{
				return _20d8b7eb2__evalEnum(&(*_self_), _20d8e6254_Enum(_213017_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_20d8e64b8_TypeEnum(_213017_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8ecb022:;
			{
				return _20d8b8677__evalTypeEnum(&(*_self_), _20d8e64b8_TypeEnum(_213017_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_20d8e6e69_Struct(_213017_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8eca384:;
			{
				return _20d8b8d3c__evalStruct(&(*_self_), _20d8e6e69_Struct(_213017_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1c8ec8eed:;
			{
				jule::Ptr<_20d8b2891_Data> _214321_d = jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=_213017_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_214321_d.get()._field_Model=static_cast<jule::Any>(_214321_d.get()._field_Kind);
				return _214321_d;;
			}
		}
		_match_end_1c8eca1ec:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8c8a83_evalStructStatic(_20d8b440e_Eval* _self_, jule::Ptr<_20cba5db6_StructIns> _215239_s, jule::Ptr<_20b4e5581_Token> _215254_ident) {
	jule::Ptr<_20d8b2891_Data> _215317_d = jule::new_ptr<_20d8b2891_Data>();;
	;
	jule::Ptr<_20d814370_Fn> _215717_method = _20cb7ebc5_FindMethod(_215239_s.ptr(), _215254_ident.get()._field_Kind,true);;
	if ((_215717_method != nullptr)) {
		if ((!(_20d850532_isAccessibleDefine((*_self_)._field_s.ptr(), _215717_method.get()._field_Public,_215717_method.get()._field_Token)))) {
			_20d8b491a_pushErr(&(*_self_), _215254_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_215254_ident.get()._field_Kind)}));
			_20d8b4c39_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_20d814749_FnIns> _216421_ins = _20cc00383_instance(_215717_method);;
		_216421_ins.get()._field_Owner=_215239_s;
		_1c8d82a00_pushReference(&(*_self_), _216421_ins);
		_215317_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d810921_StructStaticIdentExprModel>(_20d810921_StructStaticIdentExprModel{._field_Structure=_215239_s, ._field_Expr=_215317_d.get()._field_Model, ._field_Method=_216421_ins}));
		_215317_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_216421_ins, 1)});
		return _215317_d;;
	};
	jule::Ptr<_20d869eb9_Var> _217817_sttc = _20cb23163_FindStatic(_215239_s.ptr(), _215254_ident.get()._field_Kind);;
	if ((_217817_sttc != nullptr)) {
		return _20d8baba7_evalVar(&(*_self_), _217817_sttc,_215254_ident);;
	};
	_20d8b491a_pushErr(&(*_self_), _215254_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_215239_s.get()._field_Decl.get()._field_Ident),jule::Any(_215254_ident.get()._field_Kind)}));
	return nullptr;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8c8ed4_evalTraitSubIdent(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data> _218740_d, jule::Ptr<_20d81a3ed_Trait> _218754_trt, jule::Ptr<_20b4e5581_Token> _218771_ident) {
	jule::Ptr<_20d814370_Fn> _218817_f = _20d81a981_FindMethod(_218754_trt.ptr(), _218771_ident.get()._field_Kind);;
	if ((_218817_f == nullptr)) {
		_20d8b491a_pushErr(&(*_self_), _218771_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_218754_trt.get()._field_Ident),jule::Any(_218771_ident.get()._field_Kind)}));
		return nullptr;;
	};
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20cc00383_instance(_218817_f), 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d810316_TraitSubIdentExprModel>(_20d810316_TraitSubIdentExprModel{._field_Token=_218771_ident, ._field_Expr=_218740_d.get()._field_Model, ._field_Method=_218817_f, ._field_Trt=_218754_trt})), });;
}



inline jule::Ptr<_20d8b2891_Data> _20d8c94ce_evalStructSubIdent(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data> _220641_d, jule::Ptr<_20cba5db6_StructIns> _220655_s, jule::Ptr<_20cb91c70_SubIdentExpr> _220674_si, jule::Bool _220693_ref) {
	jule::Ptr<_20cba5bc9_FieldIns> _220717_f = _20cb80ee5_FindField(_220655_s.ptr(), _220674_si.get()._field_Ident.get()._field_Kind);;
	if ((_220717_f != nullptr)) {
		if ((!(_20d850532_isAccessibleDefine((*_self_)._field_s.ptr(), _220717_f.get()._field_Decl.get()._field_Public,_220717_f.get()._field_Decl.get()._field_Token)))) {
			_20d8b491a_pushErr(&(*_self_), _220674_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_220717_f.get()._field_Decl.get()._field_Ident)}));
			_20d8b4c39_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_20d810734_StructSubIdentExprModel> _221421_model = jule::new_ptr<_20d810734_StructSubIdentExprModel>(_20d810734_StructSubIdentExprModel{._field_Token=_220674_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_20d8b2891_Data>((*(_220641_d))), ._field_ExprKind=_220641_d.get()._field_Kind, ._field_Field=_220717_f, ._field_Owner=_220655_s});;
		_220641_d.get()._field_Model=static_cast<jule::Any>(_221421_model);
		_220641_d.get()._field_Kind=_220717_f.get()._field_Kind;
		_220641_d.get()._field_Lvalue=true;
		if ((_220717_f.get()._field_Decl.get()._field_Mutable && (!(_220641_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_20d82c3aa_scopeChecker>>()) {
					_case_begin_1c8edb9c2:;
					{
						jule::Ptr<_20d82c3aa_scopeChecker> _222925_scope = _20d830501_getRoot((*_self_)._field_lookup.operator jule::Ptr<_20d82c3aa_scopeChecker>());;
						_220641_d.get()._field_Mutable=((_222925_scope.get()._field_owner != nullptr) && (_222925_scope.get()._field_owner.get()._field_Owner == _220655_s));
					}
				}
				_match_end_1c8edb96c:;
			};
		};
		return _220641_d;;
	};
	;
	jule::Ptr<_20d814370_Fn> _223817_m = _20cb7ebc5_FindMethod(_220655_s.ptr(), _220674_si.get()._field_Ident.get()._field_Kind,false);;
	if ((_223817_m == nullptr)) {
		_20d8b491a_pushErr(&(*_self_), _220674_si.get()._field_Ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_220655_s.get()._field_Decl.get()._field_Ident),jule::Any(_220674_si.get()._field_Ident.get()._field_Kind)}));
		return nullptr;;
	};
	if ((!(_20d850532_isAccessibleDefine((*_self_)._field_s.ptr(), _223817_m.get()._field_Public,_223817_m.get()._field_Token)))) {
		_20d8b491a_pushErr(&(*_self_), _220674_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_223817_m.get()._field_Ident)}));
		_20d8b4c39_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_20cbedd43_IsRef(_223817_m.get()._field_Params[0LL].ptr()) && (!(_220693_ref)))) {
		_20d8b491a_pushErr(&(*_self_), _220674_si.get()._field_Ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_20d8b9821_checkDeprecated(&(*_self_), _223817_m.get()._field_Directives,_220674_si.get()._field_Ident);
	jule::Ptr<_20d814749_FnIns> _225417_ins = _20cc00383_instance(_223817_m);;
	_225417_ins.get()._field_Owner=_220655_s;
	_1c8d82a00_pushReference(&(*_self_), _225417_ins);
	jule::Ptr<_20d8b2891_Data> _225717_model = jule::new_ptr<_20d8b2891_Data>((*(_220641_d)));;
	_220641_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d810734_StructSubIdentExprModel>(_20d810734_StructSubIdentExprModel{._field_Token=_220674_si.get()._field_Ident, ._field_Expr=_225717_model, ._field_ExprKind=_220641_d.get()._field_Kind, ._field_Method=_225417_ins, ._field_Owner=_220655_s}));
	_220641_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_225417_ins, 1)});
	return _220641_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8c9886_evalSliceSubIdent(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data> _226940_d, jule::Ptr<_20b4e5581_Token> _226954_ident) {
	{
		auto &_match_expr{ _226954_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1c8ee4eb4:;
			{
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_Params=jule::Slice<jule::Ptr<_20d81455c_ParamIns>>::make({jule::new_ptr<_20d81455c_ParamIns>(_20d81455c_ParamIns{._field_Decl=jule::new_ptr<_20d814183_Param>(_20d814183_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_20d81455c_ParamIns>(_20d81455c_ParamIns{._field_Decl=jule::new_ptr<_20d814183_Param>(_20d814183_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d99ed02_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_226940_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d810ed7_CommonSubIdentExprModel>(_20d810ed7_CommonSubIdentExprModel{._field_ExprKind=_226940_d.get()._field_Kind, ._field_Expr=_226940_d.get()._field_Model, ._field_Token=_226954_ident, ._field_Ident=jule::Str("swap", 4)})), });;
			}
		}
		else {
			_case_begin_1c8ee528e:;
			{
				_20d8b491a_pushErr(&(*_self_), _226954_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_226940_d.get()._field_Kind.ptr())),jule::Any(_226954_ident.get()._field_Kind)}));
				return nullptr;;
			}
		}
		_match_end_1c8ee504c:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8c9c3d_evalArraySubIdent(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data> _230640_d, jule::Ptr<_20b4e5581_Token> _230654_ident) {
	{
		auto &_match_expr{ _230654_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1c8ee6559:;
			{
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_Params=jule::Slice<jule::Ptr<_20d81455c_ParamIns>>::make({jule::new_ptr<_20d81455c_ParamIns>(_20d81455c_ParamIns{._field_Decl=jule::new_ptr<_20d814183_Param>(_20d814183_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_20d81455c_ParamIns>(_20d81455c_ParamIns{._field_Decl=jule::new_ptr<_20d814183_Param>(_20d814183_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d99ed02_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_230640_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d810ed7_CommonSubIdentExprModel>(_20d810ed7_CommonSubIdentExprModel{._field_ExprKind=_230640_d.get()._field_Kind, ._field_Expr=_230640_d.get()._field_Model, ._field_Token=_230654_ident, ._field_Ident=jule::Str("swap", 4)})), });;
			}
		}
		else {
			_case_begin_1c8ee85b1:;
			{
				_20d8b491a_pushErr(&(*_self_), _230654_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_230640_d.get()._field_Kind.ptr())),jule::Any(_230654_ident.get()._field_Kind)}));
				return nullptr;;
			}
		}
		_match_end_1c8ee8528:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8ca04b_evalIntTypeStatic(_20d8b440e_Eval* _self_, jule::Ptr<_20b4e5581_Token> _234336_ident) {
	;
	{
		auto &_match_expr{ _234336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c8eec917:;
			{
				jule::Ptr<_20cc572ec_Const> _234721_c = static__20cc98393_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_20d807819_Max(jule::Str("int", 3)))));;
				_234721_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_234721_c), ._field_Constant=_234721_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c8eec97d:;
			{
				jule::Ptr<_20cc572ec_Const> _235521_c = static__20cc98393_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_20d8076d7_Min(jule::Str("int", 3)))));;
				_235521_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_235521_c), ._field_Constant=_235521_c});;
			}
		}
		else {
			_case_begin_1c8eebb9c:;
			{
				_20d8b491a_pushErr(&(*_self_), _234336_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_234336_ident.get()._field_Kind)}));
				return nullptr;;
			}
		}
		_match_end_1c8eeb9e3:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8ca359_evalUintTypeStatic(_20d8b440e_Eval* _self_, jule::Ptr<_20b4e5581_Token> _236837_ident) {
	;
	{
		auto &_match_expr{ _236837_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c9000695:;
			{
				jule::Ptr<_20cc572ec_Const> _237221_c = static__20cc7e3ac_NewU64(static_cast<jule::U64>(static_cast<jule::U64>(_20d807819_Max(jule::Str("uint", 4)))));;
				_237221_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_237221_c), ._field_Constant=_237221_c});;
			}
		}
		else {
			_case_begin_1c9000893:;
			{
				_20d8b491a_pushErr(&(*_self_), _236837_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_236837_ident.get()._field_Kind)}));
				return nullptr;;
			}
		}
		_match_end_1c900083d:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8ca667_evalI8TypeStatic(_20d8b440e_Eval* _self_, jule::Ptr<_20b4e5581_Token> _238535_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _238535_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c9004677:;
			{
				jule::Ptr<_20cc572ec_Const> _239121_c = static__20cc98393_NewI64(127LL);;
				_239121_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_239121_c), ._field_Constant=_239121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c90046dd:;
			{
				jule::Ptr<_20cc572ec_Const> _239921_c = static__20cc98393_NewI64(-128LL);;
				_239921_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_239921_c), ._field_Constant=_239921_c});;
			}
		}
		else {
			_case_begin_1c9003984:;
			{
				_20d8b491a_pushErr(&(*_self_), _238535_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_238535_ident.get()._field_Kind)}));
				return nullptr;;
			}
		}
		_match_end_1c9003896:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8ca975_evalI16TypeStatic(_20d8b440e_Eval* _self_, jule::Ptr<_20b4e5581_Token> _241236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _241236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c9008626:;
			{
				jule::Ptr<_20cc572ec_Const> _241821_c = static__20cc98393_NewI64(32767LL);;
				_241821_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_241821_c), ._field_Constant=_241821_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c900868c:;
			{
				jule::Ptr<_20cc572ec_Const> _242621_c = static__20cc98393_NewI64(-32768LL);;
				_242621_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_242621_c), ._field_Constant=_242621_c});;
			}
		}
		else {
			_case_begin_1c9007933:;
			{
				_20d8b491a_pushErr(&(*_self_), _241236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_241236_ident.get()._field_Kind)}));
				return nullptr;;
			}
		}
		_match_end_1c9007845:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8cac83_evalI32TypeStatic(_20d8b440e_Eval* _self_, jule::Ptr<_20b4e5581_Token> _243936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _243936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c900c5c5:;
			{
				jule::Ptr<_20cc572ec_Const> _244521_c = static__20cc98393_NewI64(2147483647LL);;
				_244521_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_244521_c), ._field_Constant=_244521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c900c63b:;
			{
				jule::Ptr<_20cc572ec_Const> _245321_c = static__20cc98393_NewI64(-2147483648LL);;
				_245321_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_245321_c), ._field_Constant=_245321_c});;
			}
		}
		else {
			_case_begin_1c900b8d2:;
			{
				_20d8b491a_pushErr(&(*_self_), _243936_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_243936_ident.get()._field_Kind)}));
				return nullptr;;
			}
		}
		_match_end_1c900b7e4:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8cb091_evalI64TypeStatic(_20d8b440e_Eval* _self_, jule::Ptr<_20b4e5581_Token> _246636_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _246636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c9011574:;
			{
				jule::Ptr<_20cc572ec_Const> _247221_c = static__20cc98393_NewI64(jule::MAX_I64);;
				_247221_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_247221_c), ._field_Constant=_247221_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c90115da:;
			{
				jule::Ptr<_20cc572ec_Const> _248021_c = static__20cc98393_NewI64(jule::MIN_I64);;
				_248021_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_248021_c), ._field_Constant=_248021_c});;
			}
		}
		else {
			_case_begin_1c9010881:;
			{
				_20d8b491a_pushErr(&(*_self_), _246636_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_246636_ident.get()._field_Kind)}));
				return nullptr;;
			}
		}
		_match_end_1c9010793:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8cb39e_evalU8TypeStatic(_20d8b440e_Eval* _self_, jule::Ptr<_20b4e5581_Token> _249335_ident) {
	;
	;
	{
		auto &_match_expr{ _249335_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c90146ed:;
			{
				jule::Ptr<_20cc572ec_Const> _249821_c = static__20cc7e3ac_NewU64(255LLU);;
				_249821_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_249821_c), ._field_Constant=_249821_c});;
			}
		}
		else {
			_case_begin_1c901406b:;
			{
				_20d8b491a_pushErr(&(*_self_), _249335_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_249335_ident.get()._field_Kind)}));
				return nullptr;;
			}
		}
		_match_end_1c90142be:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8cb6ac_evalU16TypeStatic(_20d8b440e_Eval* _self_, jule::Ptr<_20b4e5581_Token> _251136_ident) {
	;
	;
	{
		auto &_match_expr{ _251136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c901724a:;
			{
				jule::Ptr<_20cc572ec_Const> _251621_c = static__20cc7e3ac_NewU64(65535LLU);;
				_251621_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_251621_c), ._field_Constant=_251621_c});;
			}
		}
		else {
			_case_begin_1c9016a30:;
			{
				_20d8b491a_pushErr(&(*_self_), _251136_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_251136_ident.get()._field_Kind)}));
				return nullptr;;
			}
		}
		_match_end_1c9016c94:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8cb9ba_evalU32TypeStatic(_20d8b440e_Eval* _self_, jule::Ptr<_20b4e5581_Token> _252936_ident) {
	;
	;
	{
		auto &_match_expr{ _252936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c9019c20:;
			{
				jule::Ptr<_20cc572ec_Const> _253421_c = static__20cc7e3ac_NewU64(4294967295LLU);;
				_253421_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_253421_c), ._field_Constant=_253421_c});;
			}
		}
		else {
			_case_begin_1c9019505:;
			{
				_20d8b491a_pushErr(&(*_self_), _252936_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_252936_ident.get()._field_Kind)}));
				return nullptr;;
			}
		}
		_match_end_1c9019769:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8cbcc8_evalU64TypeStatic(_20d8b440e_Eval* _self_, jule::Ptr<_20b4e5581_Token> _254736_ident) {
	;
	;
	{
		auto &_match_expr{ _254736_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c901c6e5:;
			{
				jule::Ptr<_20cc572ec_Const> _255221_c = static__20cc7e3ac_NewU64(jule::MAX_U64);;
				_255221_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_255221_c), ._field_Constant=_255221_c});;
			}
		}
		else {
			_case_begin_1c901beca:;
			{
				_20d8b491a_pushErr(&(*_self_), _254736_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_254736_ident.get()._field_Kind)}));
				return nullptr;;
			}
		}
		_match_end_1c901c23e:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8cc0d6_evalF32TypeStatic(_20d8b440e_Eval* _self_, jule::Ptr<_20b4e5581_Token> _256536_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _256536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c9021276:;
			{
				jule::Ptr<_20cc572ec_Const> _257221_c = static__20ccbed7b_NewF64(340282346638528860000000000000000000000.0);;
				_257221_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_257221_c), ._field_Constant=_257221_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c90212dc:;
			{
				jule::Ptr<_20cc572ec_Const> _258021_c = static__20ccbed7b_NewF64(-340282346638528860000000000000000000000.0);;
				_258021_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_258021_c), ._field_Constant=_258021_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1c9021122:;
			{
				jule::Ptr<_20cc572ec_Const> _258821_c = static__20ccbed7b_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_258821_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_258821_c), ._field_Constant=_258821_c});;
			}
		}
		else {
			_case_begin_1c90204d9:;
			{
				_20d8b491a_pushErr(&(*_self_), _256536_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_256536_ident.get()._field_Kind)}));
				return nullptr;;
			}
		}
		_match_end_1c9020484:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8cc3e4_evalF64TypeStatic(_20d8b440e_Eval* _self_, jule::Ptr<_20b4e5581_Token> _260136_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _260136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c9026655:;
			{
				jule::Ptr<_20cc572ec_Const> _260821_c = static__20ccbed7b_NewF64(jule::MAX_F64);;
				_260821_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_260821_c), ._field_Constant=_260821_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c90266bb:;
			{
				jule::Ptr<_20cc572ec_Const> _261621_c = static__20ccbed7b_NewF64(jule::MIN_F64);;
				_261621_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_261621_c), ._field_Constant=_261621_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1c9026501:;
			{
				jule::Ptr<_20cc572ec_Const> _262421_c = static__20ccbed7b_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_262421_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_262421_c), ._field_Constant=_262421_c});;
			}
		}
		else {
			_case_begin_1c90258b8:;
			{
				_20d8b491a_pushErr(&(*_self_), _260136_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_260136_ident.get()._field_Kind)}));
				return nullptr;;
			}
		}
		_match_end_1c9025863:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8cc79b_evalPrimStatic(_20d8b440e_Eval* _self_, jule::Str _263733_kind, jule::Ptr<_20b4e5581_Token> _263744_ident) {
	{
		auto &_match_expr{ _263733_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c90295c0:;
			{
				return _20d8ca04b_evalIntTypeStatic(&(*_self_), _263744_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1c902aa44:;
			{
				return _20d8ca359_evalUintTypeStatic(&(*_self_), _263744_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c902aaaa:;
			{
				return _20d8ca667_evalI8TypeStatic(&(*_self_), _263744_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c9029eb6:;
			{
				return _20d8ca975_evalI16TypeStatic(&(*_self_), _263744_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c902a02c:;
			{
				return _20d8cac83_evalI32TypeStatic(&(*_self_), _263744_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c902a093:;
			{
				return _20d8cb091_evalI64TypeStatic(&(*_self_), _263744_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1c902a109:;
			{
				return _20d8cb39e_evalU8TypeStatic(&(*_self_), _263744_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c902ab21:;
			{
				return _20d8cb6ac_evalU16TypeStatic(&(*_self_), _263744_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c902ab87:;
			{
				return _20d8cb9ba_evalU32TypeStatic(&(*_self_), _263744_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c902abed:;
			{
				return _20d8cbcc8_evalU64TypeStatic(&(*_self_), _263744_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c902ac64:;
			{
				return _20d8cc0d6_evalF32TypeStatic(&(*_self_), _263744_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c902acca:;
			{
				return _20d8cc3e4_evalF64TypeStatic(&(*_self_), _263744_ident);;
			}
		}
		else {
			_case_begin_1c9025a72:;
			{
				_20d8b491a_pushErr(&(*_self_), _263744_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_263733_kind),jule::Any(_263744_ident.get()._field_Kind)}));
				return nullptr;;
			}
		}
		_match_end_1c9026831:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8ccb53_evalTypeStatic(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data> _266937_d, jule::Ptr<_20cb91c70_SubIdentExpr> _266951_si) {
	{
		
		if ((_20d8e5a17_Prim(_266937_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c9030d35:;
			{
				return _20d8cc79b_evalPrimStatic(&(*_self_), _20d8e8740_Str(_20d8e5a17_Prim(_266937_d.get()._field_Kind.ptr()).ptr()),_266951_si.get()._field_Ident);;
			}
		}
		else if ((_20d8e6254_Enum(_266937_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c9030d9b:;
			{
				return _20d8c8324_evalEnumStatic(&(*_self_), _20d8e6254_Enum(_266937_d.get()._field_Kind.ptr()),_266951_si.get()._field_Ident);;
			}
		}
		else if ((_20d8e64b8_TypeEnum(_266937_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c9030b8c:;
			{
				return _20d8c86cb_evalTypeEnumStatic(&(*_self_), _20d8e64b8_TypeEnum(_266937_d.get()._field_Kind.ptr()),_266951_si.get()._field_Ident);;
			}
		}
		else if ((_20d8e6e69_Struct(_266937_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c9030c03:;
			{
				return _20d8c8a83_evalStructStatic(&(*_self_), _20d8e6e69_Struct(_266937_d.get()._field_Kind.ptr()),_266951_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1c902ed45:;
			{
				_20d8b491a_pushErr(&(*_self_), _266951_si.get()._field_Ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_266937_d.get()._field_Kind.ptr()))}));
				return nullptr;;
			}
		}
		_match_end_1c902ec79:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8cd00a_evalObjSubIdent(_20d8b440e_Eval* _self_, jule::Ptr<_20d8b2891_Data> _268538_d, jule::Ptr<_20cb91c70_SubIdentExpr> _268552_si) {
	if (_20b4e7d25_IsIgnoreIdent(_268552_si.get()._field_Ident.get()._field_Kind)) {
		_20d8b491a_pushErr(&(*_self_), _268552_si.get()._field_Ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d8e3680_TypeKind> _269117_kind = _268538_d.get()._field_Kind;;
	{
		
		if ((_20d8e5ee0_Ptr(_268538_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c903593e:;
			{
				jule::Ptr<_20d9001c5_Ptr> _269417_ptr = _20d8e5ee0_Ptr(_268538_d.get()._field_Kind.ptr());;
				if (_20d900b98_IsUnsafe(_269417_ptr.ptr())) {
					goto _match_end_1c903581d;
				};
				if (((!(_268552_si.get()._field_IsSelf)) && (!(_20d8b5355_isUnsafe(&(*_self_)))))) {
					_20d8b491a_pushErr(&(*_self_), _268552_si.get()._field_Ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_269117_kind=_20d8e5ee0_Ptr(_268538_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_20d8e5c7b_Sptr(_268538_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c90359a5:;
			{
				_269117_kind=_20d8e5c7b_Sptr(_268538_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1c903581d:;
	};
	{
		
		if ((_20d8e71cd_Trait(_268538_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c9038403:;
			{
				return _20d8c8ed4_evalTraitSubIdent(&(*_self_), _268538_d,_20d8e71cd_Trait(_268538_d.get()._field_Kind.ptr()),_268552_si.get()._field_Ident);;
			}
		}
		else if ((_20d8e6e69_Struct(_269117_kind.ptr()) != nullptr)) {
			_case_begin_1c903847a:;
			{
				jule::Ptr<_20cba5db6_StructIns> _271017_s = _20d8e6e69_Struct(_269117_kind.ptr());;
				if (_20d8d9643_isInstancedStruct(_271017_s)) {
					jule::Bool _271225_usedReferenceElem = (_20d8e5c7b_Sptr(_268538_d.get()._field_Kind.ptr()) != nullptr);;
					return _20d8c94ce_evalStructSubIdent(&(*_self_), _268538_d,_20d8e6e69_Struct(_269117_kind.ptr()),_268552_si,_271225_usedReferenceElem);;
				};
			}
		}
		else if ((_20d8e6991_Slc(_269117_kind.ptr()) != nullptr)) {
			_case_begin_1c9038502:;
			{
				return _20d8c9886_evalSliceSubIdent(&(*_self_), _268538_d,_268552_si.get()._field_Ident);;
			}
		}
		else if ((_20d8e672c_Arr(_269117_kind.ptr()) != nullptr)) {
			_case_begin_1c9038579:;
			{
				return _20d8c9c3d_evalArraySubIdent(&(*_self_), _268538_d,_268552_si.get()._field_Ident);;
			}
		}
		_match_end_1c9038326:;
	};
	_20d8b491a_pushErr(&(*_self_), _268552_si.get()._field_Ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_268538_d.get()._field_Kind.ptr()))}));
	return nullptr;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8cd318_evalSubIdent(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb91c70_SubIdentExpr> _272436_si) {
	jule::Ptr<_20d8e3680_TypeKind> _272517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_272517_prefix;
	});;
	jule::Ptr<_20d8b2891_Data> _272917_d = _20d8ce715_evalExprKind(_self_, _272436_si.get()._field_Expr.get()._field_Kind);;
	if ((_272917_d == nullptr)) {
		return nullptr;;
	};
	if (_272917_d.get()._field_Decl) {
		return _20d8ccb53_evalTypeStatic(_self_.ptr(), _272917_d,_272436_si);;
	};
	return _20d8cd00a_evalObjSubIdent(_self_.ptr(), _272917_d,_272436_si);;
}



inline jule::Ptr<_20d8b2891_Data> _20d8cd626_evalTuple(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb8e498_TupleExpr> _274133_tup) {
	jule::Ptr<_20d8ed14b_Tuple> _274217_tupT = jule::new_ptr<_20d8ed14b_Tuple>();;
	_274217_tupT.get()._field_Types=jule::Slice<jule::Ptr<_20d8e3680_TypeKind>>::alloc(0LL, _274133_tup.get()._field_Expr.len());
	jule::Ptr<_20d8111c4_TupleExprModel> _274517_model = jule::new_ptr<_20d8111c4_TupleExprModel>(_20d8111c4_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_20d8b2891_Data>>::alloc(0LL, _274133_tup.get()._field_Expr.len())});;
	jule::Bool _274917_ok = true;;
	{
		auto &expr = _274133_tup.get()._field_Expr;
		auto it = expr.begin();
		_iter_begin_1c9042451:;
		if (it != expr.end()) {
			jule::Ptr<_20cb8d81b_Expr> _275021_expr = *it;
			{
				jule::Ptr<_20d8b2891_Data> _275121_d = _20d8ce715_evalExprKind(_self_, _275021_expr.get()._field_Kind);;
				if ((_275121_d == nullptr)) {
					_274917_ok=false;
					goto _iter_next_1c9042451;
				};
				_274217_tupT.get()._field_Types = jule::alloc_for_append(_274217_tupT.get()._field_Types,1);_274217_tupT.get()._field_Types.__push(_275121_d.get()._field_Kind);;
				_274517_model.get()._field_Datas = jule::alloc_for_append(_274517_model.get()._field_Datas,1);_274517_model.get()._field_Datas.__push(_275121_d);;
			}
			_iter_next_1c9042451:;
			++it;
			goto _iter_begin_1c9042451;
		}
		_iter_end_1c9042451:;
	};
	if ((!(_274917_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_274217_tupT, 9)}), ._field_Model=static_cast<jule::Any>(_274517_model), });;
}



inline jule::Ptr<_20d8b2891_Data> _20d8cd9cd_evalMap(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20d8edb74_Map> _277031_m, jule::Ptr<_20cb93e4d_BraceLit> _277044_lit) {
	jule::Ptr<_20d80ee3c_MapExprModel> _277117_model = jule::new_ptr<_20d80ee3c_MapExprModel>(_20d80ee3c_MapExprModel{._field_KeyKind=_277031_m.get()._field_Key, ._field_ValKind=_277031_m.get()._field_Val, });;
	{
		auto &expr = _277044_lit.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c9045586:;
		if (it != expr.end()) {
			jule::Ptr<_20cb8d81b_Expr> _277621_expr = *it;
			{
				{
					auto &_match_expr{ _277621_expr.get()._field_Kind };
					
					if (_match_expr.type_is_ptr<_20cb94723_KeyValPair>()) {
						_case_begin_1c9045ca1:;
						{
							goto _match_end_1c9045d5b;
						}
					}
					else {
						_case_begin_1c9045ee3:;
						{
							_20d8b491a_pushErr(_self_.ptr(), _277044_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1c9045d5b:;
				};
				jule::Ptr<_20cb94723_KeyValPair> _278621_pair = _277621_expr.get()._field_Kind.operator jule::Ptr<_20cb94723_KeyValPair>();;
				jule::Ptr<_20d8b2891_Data> _278821_key = _20d8ce715_evalExprKind(_self_, _278621_pair.get()._field_Key.get()._field_Kind);;
				if ((_278821_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_20d8b2891_Data> _279321_val = _20d8ce715_evalExprKind(_self_, _278621_pair.get()._field_Val.get()._field_Kind);;
				if ((_279321_val == nullptr)) {
					return nullptr;;
				};
				_20d856c42_checkAssignType(_self_.get()._field_s, false,_277031_m.get()._field_Key,_278821_key,_278621_pair.get()._field_Colon);
				_20d856c42_checkAssignType(_self_.get()._field_s, false,_277031_m.get()._field_Val,_279321_val,_278621_pair.get()._field_Colon);
				_277117_model.get()._field_Entries = jule::alloc_for_append(_277117_model.get()._field_Entries,1);_277117_model.get()._field_Entries.__push(jule::new_ptr<_20d80ec50_KeyValPairExprModel>(_20d80ec50_KeyValPairExprModel{._field_Key=_278821_key.get()._field_Model, ._field_Val=_279321_val.get()._field_Model}));;
			}
			_iter_next_1c9045586:;
			++it;
			goto _iter_begin_1c9045586;
		}
		_iter_end_1c9045586:;
	};
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_277031_m, 10)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_277117_model), });;
}



inline jule::Ptr<_20d8b2891_Data> _20d8cdcdb_evalBraceLit(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb93e4d_BraceLit> _281436_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1c904b2a1:;
			{
				_20d8b491a_pushErr(_self_.ptr(), _281436_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_20d8e7442_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1c904b317:;
			{
				return _20d8cd9cd_evalMap(_self_, _20d8e7442_Map(_self_.get()._field_prefix.ptr()),_281436_lit);;
			}
		}
		else if ((_20d8e6e69_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1c904b12a:;
			{
				return _20d8c6124_evalStructLitExplicit(_self_, _20d8e6e69_Struct(_self_.get()._field_prefix.ptr()),_281436_lit.get()._field_Exprs,_281436_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_1c904a602:;
			{
				_20d8b491a_pushErr(_self_.ptr(), _281436_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c904a536:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8ce0e9_evalAnonFn(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb9ac79_FnDecl> _282934_decl) {
	_20d901e30_typeChecker _283017_tc = _20d901e30_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_20d814749_FnIns> _283517_ins = _20d908772_buildFn(&_283017_tc, _282934_decl);;
	if ((_283517_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_20d82c3aa_scopeChecker>>()) {
			_case_begin_1c905076c:;
			{
				jule::Ptr<_20d82c3aa_scopeChecker> _284121_sc = _self_.get()._field_lookup.operator jule::Ptr<_20d82c3aa_scopeChecker>();;
				jule::Ptr<_20d82c3aa_scopeChecker> _284221_scc = _20d83c420_newChildChecker(_284121_sc);;
				_284221_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_20d82b123_scopeLabel>>>(nullptr);
				_284221_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_20d82b596_scopeGoto>>>(nullptr);
				_284221_scc.get()._field_owner=nullptr;
				_284221_scc.get()._field_childIndex=0LL;
				_284221_scc.get()._field_it=0LLU;
				_284221_scc.get()._field_cse=0LLU;
				_284221_scc.get()._field_owner=_283517_ins;
				_20d865448_checkFnInsSc(_self_.get()._field_s.ptr(), _283517_ins,_284221_scc);
			}
		}
		else {
			_case_begin_1c904ed10:;
			{
				_20d8659dc_checkFnIns(_self_.get()._field_s, _283517_ins);
			}
		}
		_match_end_1c904ea57:;
	};
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_283517_ins, 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d80ea63_AnonFnExprModel>(_20d80ea63_AnonFnExprModel{._field_Func=_283517_ins, ._field_Global=_20d8b55b9_isGlobal(_self_.ptr())})), });;
}



inline jule::Ptr<_20d8b2891_Data> _20d8ce407_evalBinop(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb921e3_BinopExpr> _286433_op) {
	_20d8d2042_binaryEval _286517_bs = static__20d8d2619_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_20d8e83cc_Prim> _286817_prim = _20d8e5a17_Prim(_self_.get()._field_prefix.ptr());;
		if (((_286817_prim == nullptr) || (!(_20d80a047_IsNum(_20d8e8740_Str(_286817_prim.ptr())))))) {
			jule::Ptr<_20d8e3680_TypeKind> _287025_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_287025_prefix;
			});;
			return _20d8d7ac5_eval(&_286517_bs, _286433_op);;
		};
	};
	return _20d8d7ac5_eval(&_286517_bs, _286433_op);;
}



inline jule::Ptr<_20d8b2891_Data> _20d8ce715_evalExprKind(jule::Ptr<_20d8b440e_Eval> _self_, jule::Any _287936_kind) {
	{
		auto &_match_expr{ _287936_kind };
		
		if (_match_expr.type_is_ptr<_20cb8db07_RangeExpr>()) {
			_case_begin_1c9054331:;
			{
				jule::Ptr<_20cb8db07_RangeExpr> _288221_e = _287936_kind.operator jule::Ptr<_20cb8db07_RangeExpr>();;
				return _20d8ce715_evalExprKind(_self_, _288221_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8e850_LitExpr>()) {
			_case_begin_1c90571d0:;
			{
				return _20d8b7269_evalLit(_self_.ptr(), _287936_kind.operator jule::Ptr<_20cb8e850_LitExpr>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb904cc_IdentExpr>()) {
			_case_begin_1c9057246:;
			{
				return _20d8bb724_evalIdent(_self_.ptr(), _287936_kind.operator jule::Ptr<_20cb904cc_IdentExpr>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb90bd6_UnaryExpr>()) {
			_case_begin_1c9056c4b:;
			{
				return _20d8bba32_evalUnary(_self_, _287936_kind.operator jule::Ptr<_20cb90bd6_UnaryExpr>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb9108d_VariadicExpr>()) {
			_case_begin_1c9056cb2:;
			{
				return _20d8bbd40_evalVariadic(_self_, _287936_kind.operator jule::Ptr<_20cb9108d_VariadicExpr>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb90059_UnsafeExpr>()) {
			_case_begin_1c9056d39:;
			{
				return _20d8bc14d_evalUnsafe(_self_, _287936_kind.operator jule::Ptr<_20cb90059_UnsafeExpr>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb94e0a_SliceExpr>()) {
			_case_begin_1c9056db1:;
			{
				return _20d8bcbba_evalSliceExpr(_self_, _287936_kind.operator jule::Ptr<_20cb94e0a_SliceExpr>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb95779_IndexingExpr>()) {
			_case_begin_1c90572bd:;
			{
				return _20d8c100e_evalIndexing(_self_, _287936_kind.operator jule::Ptr<_20cb95779_IndexingExpr>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb95d84_SlicingExpr>()) {
			_case_begin_1c9057345:;
			{
				return _20d8c21ca_evalSlicing(_self_, _287936_kind.operator jule::Ptr<_20cb95d84_SlicingExpr>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb91445_CastExpr>()) {
			_case_begin_1c90573bc:;
			{
				return _20d8c58b5_evalCast(_self_, _287936_kind.operator jule::Ptr<_20cb91445_CastExpr>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb917ec_NsSelectionExpr>()) {
			_case_begin_1c9057444:;
			{
				return _20d8c5bc3_evalNsSelection(_self_.ptr(), _287936_kind.operator jule::Ptr<_20cb917ec_NsSelectionExpr>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb939ca_StructLit>()) {
			_case_begin_1c90574bb:;
			{
				return _20d8c6432_evalStructLit(_self_, _287936_kind.operator jule::Ptr<_20cb939ca_StructLit>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb892ea_TypeDecl>()) {
			_case_begin_1c9057543:;
			{
				return _20d8c69a4_evalType(_self_.ptr(), _287936_kind.operator jule::Ptr<_20cb892ea_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb927ed_FnCallExpr>()) {
			_case_begin_1c90575ba:;
			{
				return _20d8c7e6c_evalFnCall(_self_, _287936_kind.operator jule::Ptr<_20cb927ed_FnCallExpr>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb91c70_SubIdentExpr>()) {
			_case_begin_1c9057642:;
			{
				return _20d8cd318_evalSubIdent(_self_, _287936_kind.operator jule::Ptr<_20cb91c70_SubIdentExpr>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8e498_TupleExpr>()) {
			_case_begin_1c90576b9:;
			{
				return _20d8cd626_evalTuple(_self_, _287936_kind.operator jule::Ptr<_20cb8e498_TupleExpr>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb93e4d_BraceLit>()) {
			_case_begin_1c9057741:;
			{
				return _20d8cdcdb_evalBraceLit(_self_, _287936_kind.operator jule::Ptr<_20cb93e4d_BraceLit>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb9ac79_FnDecl>()) {
			_case_begin_1c90577b8:;
			{
				return _20d8ce0e9_evalAnonFn(_self_, _287936_kind.operator jule::Ptr<_20cb9ac79_FnDecl>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb921e3_BinopExpr>()) {
			_case_begin_1c9057840:;
			{
				return _20d8ce407_evalBinop(_self_, _287936_kind.operator jule::Ptr<_20cb921e3_BinopExpr>());;
			}
		}
		else {
			_case_begin_1c9056b4c:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9056ae7:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8cea23_eval(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb8d81b_Expr> _292728_expr) {
	jule::Ptr<_20d8b2891_Data> _292817_d = _20d8ce715_evalExprKind(_self_, _292728_expr.get()._field_Kind);;
	if (((_292817_d == nullptr) || (_292817_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_20d8e6c05_Fn(_292817_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c9061dbb:;
			{
				jule::Ptr<_20d814749_FnIns> _293521_f = _20d8e6c05_Fn(_292817_d.get()._field_Kind.ptr());;
				if (_20d814e0e_IsBuiltin(_293521_f.ptr())) {
					goto _match_end_1c9061c89;
				};
				if ((_293521_f.get()._field_Generics.len() != _293521_f.get()._field_Decl.get()._field_Generics.len())) {
					_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _292728_expr.get()._field_Token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (((!(_293521_f.get()._field_Decl.get()._field_Statically)) && _20cc3121b_IsMethod(_293521_f.get()._field_Decl.ptr()))) {
					_20d84ed5b_pushErr(_self_.get()._field_s.ptr(), _292728_expr.get()._field_Token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1c9061c89:;
	};
	return _292817_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8ced31_evalExpr(jule::Ptr<_20d8b440e_Eval> _self_, jule::Ptr<_20cb8d81b_Expr> _295332_expr) {
	jule::Ptr<_20d8b2891_Data> _295417_d = _20d8cea23_eval(_self_, _295332_expr);;
	{
		
		if ((_295417_d == nullptr)) {
			_case_begin_1c90659e6:;
			{
				return nullptr;;
			}
		}
		else if (_295417_d.get()._field_Decl) {
			_case_begin_1c9065a6d:;
			{
				_20d8b491a_pushErr(_self_.ptr(), _295332_expr.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1c906593b:;
			{
				return _295417_d;;
			}
		}
		_match_end_1c90658d6:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d8b440e_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _20d8d02a4_unaryEval static__20d8d075a_new(jule::Ptr<_20d8b440e_Eval> _297423_e) {
	return _20d8d02a4_unaryEval{._field_e=_297423_e, };;
}



inline void _20d8d0936_minus(_20d8d02a4_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1c9067553:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_20d8e5a17_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c9067223:;
			{
				if ((!(_20d80a047_IsNum(_20d8e3a7b_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_20d8e6e69_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c9067289:;
			{
				if ((_20d8e6e69_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c90671ac:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c906707a:;
	};
	if (_20d8b3254_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_20d80bd6d_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c906ac2c:;
				{
					_20d80b631_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_20d80ab80_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_20d80b895_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c906aca4:;
				{
					_20d80b158_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_20d80a6a7_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_20d80b9c7_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c906ad2b:;
				{
					_20d80b158_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_20d80acb2_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1c906ab3e:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d80da0c_UnaryExprModel>(_20d80da0c_UnaryExprModel{._field_Expr=jule::new_ptr<_20d8b2891_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _20d8d0b12_plus(_20d8d02a4_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1c9070391:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_20d8e5a17_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c9070061:;
			{
				if ((!(_20d80a047_IsNum(_20d8e3a7b_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_20d8e6e69_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c90700c7:;
			{
				if ((_20d8e6e69_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c906eeea:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c906ee2e:;
	};
	if (_20d8b3254_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_20d80bd6d_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c9073a6a:;
				{
					_20d80b631_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_20d80ab80_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_20d80b895_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c9073ae2:;
				{
					_20d80b158_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_20d80a6a7_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_20d80b9c7_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c9073b69:;
				{
					_20d80b158_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_20d80acb2_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1c907397c:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d80da0c_UnaryExprModel>(_20d80da0c_UnaryExprModel{._field_Expr=jule::new_ptr<_20d8b2891_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _20d8d0cdd_caret(_20d8d02a4_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1c90781ce:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_20d8e5a17_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c9077d9e:;
			{
				if ((!(_20d809cd3_IsInt(_20d8e3a7b_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_20d8e6e69_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c9077e15:;
			{
				if ((_20d8e6e69_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c9077d38:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c9077c6c:;
	};
	if (_20d8b3254_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_20d80b895_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c907b897:;
				{
					_20d80b158_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_20d80a6a7_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_20d80b9c7_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c907b91e:;
				{
					_20d80b28a_SetU64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_20d80a7d9_ReadU64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1c907b7ba:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d80da0c_UnaryExprModel>(_20d80da0c_UnaryExprModel{._field_Expr=jule::new_ptr<_20d8b2891_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _20d8d0eb9_excl(_20d8d02a4_unaryEval* _self_) {
	jule::Ptr<_20d8e83cc_Prim> _309313_t = _20d8e5a17_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
	if (((_309313_t == nullptr) || (!(_20d8eb39c_IsBool(_309313_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_20d8b3254_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_20d80bb09_IsBool((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c9081308:;
				{
					_20d80b3bc_SetBool((*_self_)._field_d.get()._field_Constant.ptr(), (!(_20d80a91b_ReadBool((*_self_)._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1c9081209:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d80da0c_UnaryExprModel>(_20d80da0c_UnaryExprModel{._field_Expr=jule::new_ptr<_20d8b2891_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _20d8d1195_star(_20d8d02a4_unaryEval* _self_) {
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d80da0c_UnaryExprModel>(_20d80da0c_UnaryExprModel{._field_Expr=jule::new_ptr<_20d8b2891_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
	{
		
		if ((_20d8e5ee0_Ptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c9084350:;
			{
				if ((!(_20d8b5355_isUnsafe((*_self_)._field_e.ptr())))) {
					_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_20d9001c5_Ptr> _312521_t = _20d8e5ee0_Ptr((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_20d900b98_IsUnsafe(_312521_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_Kind=_312521_t.get()._field_Elem;
			}
		}
		else if ((_20d8e5c7b_Sptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c9084020:;
			{
				(*_self_)._field_d.get()._field_Kind=_20d8e5c7b_Sptr((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1c9083ea9:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c9083e43:;
	};
	(*_self_)._field_d.get()._field_Constant=nullptr;
	(*_self_)._field_d.get()._field_Lvalue=true;
}



inline void _20d8d1371_amper(_20d8d02a4_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is_ptr<_20d80ddd6_StructLitExprModel>()) {
			_case_begin_1c9088dd2:;
			{
				jule::Ptr<_20d80ddd6_StructLitExprModel> _314521_lit = (*_self_)._field_d.get()._field_Model.operator jule::Ptr<_20d80ddd6_StructLitExprModel>();;
				_20d8d8862_makeStructLitAlloc((*_self_)._field_d,_314521_lit);
			}
		}
		else {
			_case_begin_1c90887a5:;
			{
				{
					
					if (_20d90a8ea_canGetPtr((*_self_)._field_d)) {
						_case_begin_1c9089432:;
						{
							(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(jule::new_ptr<_20d9001c5_Ptr>(_20d9001c5_Ptr{._field_Elem=(*_self_)._field_d.get()._field_Kind}), 12)});
							(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d80da0c_UnaryExprModel>(_20d80da0c_UnaryExprModel{._field_Expr=jule::new_ptr<_20d8b2891_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
						}
					}
					else {
						_case_begin_1c9088d6b:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1c9088ca0:;
				};
			}
		}
		_match_end_1c9088750:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_Constant=nullptr;
		(*_self_)._field_d.get()._field_Lvalue=false;
	};
}



inline void _20d8d154c_typeDecl(_20d8d02a4_unaryEval* _self_) {
	_20d901e30_typeChecker _316917_tc = _20d901e30_typeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_rootLookup=(*_self_)._field_e.get()._field_lookup, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_errorToken=(*_self_)._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c908c5cd:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d907111_buildPtrFromType(&_316917_tc, (*_self_)._field_d.get()._field_Kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c908ed3e:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d9069e5_buildSptrFromType(&_316917_tc, (*_self_)._field_d.get()._field_Kind), 7)});
			}
		}
		else {
			_case_begin_1c908d623:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_20d8e3a7b_Str((*_self_)._field_d.get()._field_Kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c908d5bd:;
	};
	(*_self_)._field_d.get()._field_Decl=true;
}



inline void _20d8d1728_evalData(_20d8d02a4_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1c90922a3:;
			{
				jule::Ptr<_20d8e3680_TypeKind> _319221_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_20d8ce715_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
				(*_self_)._field_e.get()._field_prefix=_319221_prefix;
			}
		}
		else {
			_case_begin_1c9091d63:;
			{
				(*_self_)._field_d=_20d8ce715_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_1c9091cdb:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8d1a03_eval(_20d8d02a4_unaryEval* _self_, jule::Ptr<_20cb90bd6_UnaryExpr> _320127_u) {
	(*_self_)._field_u=_320127_u;
	_20d8d1728_evalData(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*_self_)._field_d.get()._field_Decl) {
		_20d8d154c_typeDecl(&(*_self_));
		return (*_self_)._field_d;;
	};
	jule::Ptr<_20d8e3680_TypeKind> _321213_kind = (*_self_)._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1c9096670:;
			{
				_20d8d0936_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1c9096153:;
			{
				_20d8d0b12_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1c90961b9:;
			{
				_20d8d0cdd_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1c9096230:;
			{
				_20d8d0eb9_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c9096296:;
			{
				_20d8d1195_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c9096818:;
			{
				_20d8d1371_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1c90960dc:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1c9096087:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1c9098694:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_20d8e3a7b_Str(_321213_kind.ptr()))}));
				return nullptr;;
			}
		}
		else if (_20d8b3254_IsConst((*_self_)._field_d.ptr())) {
			_case_begin_1c9096890:;
			{
				(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>((*_self_)._field_d.get()._field_Constant);
			}
		}
		_match_end_1c909863e:;
	};
	(*_self_)._field_d.get()._field_Mutable=true;
	return (*_self_)._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8d02a4_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _20d8d2042_binaryEval static__20d8d2619_newPlain(jule::Ptr<_20d8b440e_Eval> _325028_e) {
	return _20d8d2042_binaryEval{._field_e=_325028_e, };;
}



inline _20d8d2042_binaryEval static__20d8d295a_new(jule::Ptr<_20d8b440e_Eval> _325623_e, jule::Ptr<_20b4e5581_Token> _325637_op) {
	return _20d8d2042_binaryEval{._field_e=_325623_e, ._field_op=_325637_op};;
}



inline jule::Bool _20d8d2bbe_checkTypeCompatibility(_20d8d2042_binaryEval* _self_) {
	return _20d857193_checkTypeCompatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_Kind,(*_self_)._field_r.get()._field_Kind,(*_self_)._field_op);;
}



inline jule::Bool _20d8d2e66_checkStructCommonOperatorCompatibility(_20d8d2042_binaryEval* _self_) {
	jule::Ptr<_20d814749_FnIns> _327017_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1c909ca2d:;
			{
				_327017_overload=_20d8e6e69_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1c909e15b:;
			{
				_327017_overload=_20d8e6e69_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1c909ceb2:;
			{
				_327017_overload=_20d8e6e69_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1c909d028:;
			{
				_327017_overload=_20d8e6e69_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1c909d08e:;
			{
				_327017_overload=_20d8e6e69_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c909d105:;
			{
				_327017_overload=_20d8e6e69_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c909e38c:;
			{
				_327017_overload=_20d8e6e69_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c909e403:;
			{
				_327017_overload=_20d8e6e69_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1c909e469:;
			{
				_327017_overload=_20d8e6e69_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1c909e4d0:;
			{
				_327017_overload=_20d8e6e69_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1c909ce4b:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_20d8e3a7b_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return false;;
			}
		}
		_match_end_1c909cde6:;
	};
	if ((_327017_overload == nullptr)) {
		_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_20d8e3a7b_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
		return false;;
	};
	jule::Ptr<_20d81455c_ParamIns> _330217_p = _327017_overload.get()._field_Params[1LL];;
	return _20d856c42_checkAssignType((*_self_)._field_e.get()._field_s, _330217_p.get()._field_Decl.get()._field_Reference,_330217_p.get()._field_Kind,(*_self_)._field_r,(*_self_)._field_op);;
}



inline jule::Ptr<_20d8b2891_Data> _20d8d320d_evalNil(_20d8d2042_binaryEval* _self_) {
	if ((!(_20d8e5066_NilCompatible((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_20d8e3a7b_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c90a73ea:;
			{
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1c90a8660:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;;
			}
		}
		_match_end_1c90a860a:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8d3472_evalEnum(_20d8d2042_binaryEval* _self_) {
	jule::Ptr<_20d81b0ad_Enum> _332717_enm = _20d8e6254_Enum((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c90aa7d8:;
			{
				jule::Ptr<_20d8e3680_TypeKind> _333121_rkind = (*_self_)._field_r.get()._field_Kind;;
				if ((_20d8e6254_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_333121_rkind=_20d8e6254_Enum((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_20d857193_checkTypeCompatibility((*_self_)._field_e.get()._field_s, _332717_enm.get()._field_Kind.get()._field_Kind,_333121_rkind,(*_self_)._field_op)))) {
					return nullptr;;
				};
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1c90aa783:;
	};
	if (((_20d8e6254_Enum((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr) || (_332717_enm != _20d8e6254_Enum((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_332717_enm.get()._field_Ident),jule::Any(_20d8e3a7b_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1c90aa134:;
			{
				if ((!(_20d80a047_IsNum(_20d8e3a7b_Str(_332717_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_332717_enm.get()._field_Ident)}));
					return nullptr;;
				};
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1c90b0ce9:;
			{
				if (((_20d8e5a17_Prim(_332717_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_20d809cd3_IsInt(_20d8e8740_Str(_20d8e5a17_Prim(_332717_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_332717_enm.get()._field_Ident)}));
				};
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_1c90aec3d:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_332717_enm.get()._field_Ident)}));
				return nullptr;;
			}
		}
		_match_end_1c90aeb72:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8d36d6_evalTypeEnum(_20d8d2042_binaryEval* _self_) {
	jule::Ptr<_20d81b82d_TypeEnum> _337817_enm = _20d8e64b8_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr());;
	if ((!(_20d8d2bbe_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c90b5d98:;
			{
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1c90b5903:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_20d81ba1a_Str(_337817_enm.ptr()))}));
				return nullptr;;
			}
		}
		_match_end_1c90b59d0:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8d394a_evalSptr(_20d8d2042_binaryEval* _self_) {
	if ((!(_20d8d2bbe_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c90b798d:;
			{
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1c90b7aae:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_20d8e3a7b_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;;
			}
		}
		_match_end_1c90b70db:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8d3bae_evalPtr(_20d8d2042_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1c90b985d:;
			{
				if ((!(_20d8d2bbe_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;;
				};
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1c90baa90:;
			{
				if ((_20d8e5ee0_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_20d8b2891_Data> ___jule_assign_arg = (*_self_)._field_r;
						jule::Ptr<_20d8b2891_Data> _1___jule_assign_arg = (*_self_)._field_l;
						(*_self_)._field_l = ___jule_assign_arg;
						(*_self_)._field_r = _1___jule_assign_arg;
					});
				};
				if (_20d900b98_IsUnsafe(_20d8e5ee0_Ptr((*_self_)._field_l.get()._field_Kind.ptr()).ptr())) {
					_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_20d8e3a7b_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				};
				if ((!(_20d8d99a6_isPtrArithmeticCompatible((*_self_)._field_l,(*_self_)._field_r)))) {
					_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
					return nullptr;;
				};
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_1c90b92db:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_20d8e3a7b_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;;
			}
		}
		_match_end_1c90b7cbd:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8d3e23_evalArr(_20d8d2042_binaryEval* _self_) {
	if ((!(_20d8d2bbe_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c90c0ba5:;
			{
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1c90c0d2b:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_20d8e3a7b_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;;
			}
		}
		_match_end_1c90c0cc6:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8d4187_evalSlc(_20d8d2042_binaryEval* _self_) {
	if ((!(_20d8d2bbe_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c90c2da5:;
			{
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1c90c2ec6:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_20d8e3a7b_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;;
			}
		}
		_match_end_1c90c2503:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8d43eb_evalFn(_20d8d2042_binaryEval* _self_) {
	if ((!(_20d8d2bbe_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c90c50a5:;
			{
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1c90c51c6:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_20d8e3a7b_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;;
			}
		}
		_match_end_1c90c4703:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8d4660_evalStruct(_20d8d2042_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1c90c6969:;
			{
				if ((_20d8e6e69_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_20d8e3a7b_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;;
				};
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1c90c69d0:;
			{
				if ((_20d8e6e69_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_20d8e3a7b_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;;
				};
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1c90c70c9:;
			{
				if ((_20d8e6e69_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_20d8e3a7b_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;;
				};
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1c90c7140:;
			{
				if ((_20d8e6e69_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_20d8e3a7b_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;;
				};
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c90c71a6:;
			{
				if ((!(_20d8d2bbe_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;;
				};
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1c90c53d5:;
	};
	if ((!(_20d8d2e66_checkStructCommonOperatorCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	return (*_self_)._field_l;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8d48c4_evalTrait(_20d8d2042_binaryEval* _self_) {
	if ((!(_20d8d2bbe_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c90d13d0:;
			{
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1c90d1501:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_20d8e3a7b_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;;
			}
		}
		_match_end_1c90d0e29:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8d4b38_evalAny(_20d8d2042_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c90d32a0:;
			{
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1c90d2c2d:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;;
			}
		}
		_match_end_1c90d1710:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8d4d9c_evalBool(_20d8d2042_binaryEval* _self_) {
	if ((!(_20d8d2bbe_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1c90d3514:;
			{
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_1c90d51e7:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_20d8e3a7b_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;;
			}
		}
		_match_end_1c90d4724:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8d5111_evalStr(_20d8d2042_binaryEval* _self_) {
	jule::Str _362017_rk = _20d8e3a7b_Str((*_self_)._field_r.get()._field_Kind.ptr());;
	if ((_362017_rk != jule::Str("str", 3))) {
		_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_362017_rk)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1c90d8690:;
			{
				return (*_self_)._field_l;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1c90d9361:;
			{
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1c90d6c21:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;;
			}
		}
		_match_end_1c90d82c7:;
	};
}



inline void _20d8d52dc_setTypeToGreater(_20d8d2042_binaryEval* _self_) {
	jule::Ptr<_20d8e83cc_Prim> _364713_lp = _20d8e5a17_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_20d8e83cc_Prim> _364813_rp = _20d8e5a17_Prim((*_self_)._field_r.get()._field_Kind.ptr());;
	if (_20d8b3254_IsConst((*_self_)._field_l.ptr())) {
		if ((!(_20d8b3254_IsConst((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_364813_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_20d8b3254_IsConst((*_self_)._field_r.ptr())) {
		(*_self_)._field_r.get()._field_Constant.get()._field_Kind=_364713_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*_self_)._field_l.get()._field_untyped && (!((*_self_)._field_r.get()._field_untyped)))) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
		if (_20d8b3254_IsConst((*_self_)._field_l.ptr())) {
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_364813_rp.get()._field_Kind;
		};
		(*_self_)._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*_self_)._field_l.get()._field_untyped)) && (*_self_)._field_r.get()._field_untyped)) {
		return;;
	};
	if (_20d80962e_IsGreater(_364813_rp.get()._field_Kind,_364713_lp.get()._field_Kind)) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
		if (_20d8b3254_IsConst((*_self_)._field_l.ptr())) {
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_364813_rp.get()._field_Kind;
		};
	};
}



inline void _20d8d552e_checkModData(_20d8d2042_binaryEval* _self_, jule::Ptr<_20d8b2891_Data>& _368036_d) {
	if ((!(_20d8b3254_IsConst(_368036_d.ptr())))) {
		if (((_20d8e5a17_Prim(_368036_d.get()._field_Kind.ptr()) == nullptr) || (!(_20d809cd3_IsInt(_20d8e5a17_Prim(_368036_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_20d89a439_sigAssignable(jule::Str("i64", 3),_368036_d)) {
			_case_begin_1c90e3e92:;
			{
				_20d80b158_SetI64(_368036_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_20d80acb2_AsI64(_368036_d.get()._field_Constant.ptr())));
			}
		}
		else if (_20d89a56b_unsigAssignable(jule::Str("u64", 3),_368036_d)) {
			_case_begin_1c90e3b62:;
			{
				_20d80b28a_SetU64(_368036_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_20d80ade4_AsU64(_368036_d.get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1c90e3aeb:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c90e24ce:;
	};
}



inline void _20d8d570a_mod(_20d8d2042_binaryEval* _self_) {
	_20d8d552e_checkModData(&(*_self_), (*_self_)._field_l);
	_20d8d552e_checkModData(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _20d8d5ab2_numbersAreCompatibile(_20d8d2042_binaryEval* _self_, jule::Str& _370237_lk, jule::Str& _370247_rk) {
	if ((!(_20d80a047_IsNum(_370247_rk)))) {
		return false;;
	};
	if ((_20d8b3254_IsConst((*_self_)._field_l.ptr()) && (*_self_)._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((_370237_lk == jule::Str("f32", 3))) {
		if ((_20d8b3254_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;;
		};
		return (_370247_rk == jule::Str("f32", 3));;
	};
	if ((_370237_lk == jule::Str("f64", 3))) {
		if ((_20d8b3254_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;;
		};
		return (_370247_rk == jule::Str("f64", 3));;
	};
	if ((_20d8b3254_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
		return true;;
	};
	return (_370237_lk == _370247_rk);;
}



inline jule::Ptr<_20d8b2891_Data> _20d8d5d26_evalFloat(_20d8d2042_binaryEval* _self_) {
	jule::Str _372813_lk = _20d8e5a17_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _372913_rk = _20d8e5a17_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_20d8d5ab2_numbersAreCompatibile(&(*_self_), _372813_lk,_372913_rk)))) {
		_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_372813_lk),jule::Any(_372913_rk)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1c90ec121:;
			{
				if (((!(_20d8b3254_IsConst((*_self_)._field_l.ptr()))) || (!(_20d89b616_intAssignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_372813_lk),jule::Any(_372913_rk)}));
					return nullptr;;
				};
				if (((!(_20d8b3254_IsConst((*_self_)._field_r.ptr()))) || (!(_20d89b616_intAssignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_372813_lk),jule::Any(_372913_rk)}));
					return nullptr;;
				};
				_20d80b158_SetI64((*_self_)._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_20d80acb2_AsI64((*_self_)._field_l.get()._field_Constant.ptr())));
				_20d80b28a_SetU64((*_self_)._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_20d80ade4_AsU64((*_self_)._field_r.get()._field_Constant.ptr())));
				if ((!(_20d8d928b_isOkForShifting((*_self_)._field_r)))) {
					_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*_self_)._field_l;;
			}
		}
		_match_end_1c90eb483:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1c9101c08:;
			{
				_20d8d52dc_setTypeToGreater(&(*_self_));
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1c9101ba3:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1c90eb31d:;
			{
				_20d8d52dc_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c9103d81:;
			{
				if ((!(_20d809cd3_IsInt(_372913_rk)))) {
					_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_372813_lk),jule::Any(_372913_rk)}));
					return nullptr;;
				};
				_20d8d570a_mod(&(*_self_));
				_20d8d52dc_setTypeToGreater(&(*_self_));
				return (*_self_)._field_r;;
			}
		}
		else {
			_case_begin_1c9102753:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;;
			}
		}
		_match_end_1c9102c2b:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8d608a_evalInt(_20d8d2042_binaryEval* _self_) {
	jule::Str _379413_lk = _20d8e5a17_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _379513_rk = _20d8e5a17_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1c910436a:;
			{
				if (((!(_20d809cd3_IsInt(_379413_lk))) || (!(_20d809cd3_IsInt(_379513_rk))))) {
					_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_379413_lk),jule::Any(_379513_rk)}));
					return nullptr;;
				};
				if ((!(_20d8d928b_isOkForShifting((*_self_)._field_r)))) {
					_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*_self_)._field_l;;
			}
		}
		_match_end_1c910be33:;
	};
	if ((!(_20d8d5ab2_numbersAreCompatibile(&(*_self_), _379413_lk,_379513_rk)))) {
		_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_379413_lk),jule::Any(_379513_rk)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1c910edd1:;
			{
				return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1c910c61a:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1c910c043:;
			{
				_20d8d52dc_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c9111de4:;
			{
				_20d8d570a_mod(&(*_self_));
				_20d8d52dc_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_1c9110bc3:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;;
			}
		}
		_match_end_1c910eed0:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8d62ee_evalPrim(_20d8d2042_binaryEval* _self_) {
	jule::Ptr<_20d8e83cc_Prim> _385313_prim = _20d8e5a17_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		
		if (_20d8eb39c_IsBool(_385313_prim.ptr())) {
			_case_begin_1c9113e6d:;
			{
				return _20d8d4d9c_evalBool(&(*_self_));;
			}
		}
		else if (_20d8eb611_IsStr(_385313_prim.ptr())) {
			_case_begin_1c9113ee5:;
			{
				return _20d8d5111_evalStr(&(*_self_));;
			}
		}
		_match_end_1c9113db3:;
	};
	if ((_20d8e5a17_Prim((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_20d8e8740_Str(_385313_prim.ptr())),jule::Any(_20d8e3a7b_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;;
	};
	{
		
		if (_20d809e15_IsFloat(_385313_prim.get()._field_Kind)) {
			_case_begin_1c91167cd:;
			{
				return _20d8d5d26_evalFloat(&(*_self_));;
			}
		}
		else if (_20d809cd3_IsInt(_385313_prim.get()._field_Kind)) {
			_case_begin_1c91161a1:;
			{
				return _20d8d608a_evalInt(&(*_self_));;
			}
		}
		else {
			_case_begin_1c911613a:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9110794:;
	};
}



inline void _20d8d64ca_checkSpecialCases(_20d8d2042_binaryEval* _self_) {
	if (((!(_20d8e4a8d_Comparable((*_self_)._field_l.get()._field_Kind.ptr()))) && (!(_20d8e45b5_IsNil((*_self_)._field_r.get()._field_Kind.ptr()))))) {
		_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is not comparable", 24),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
	} else if (((!(_20d8e4a8d_Comparable((*_self_)._field_r.get()._field_Kind.ptr()))) && (!(_20d8e45b5_IsNil((*_self_)._field_l.get()._field_Kind.ptr()))))) {
		_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is not comparable", 24),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d8d673e_evalOp(_20d8d2042_binaryEval* _self_) {
	_20d8d64ca_checkSpecialCases(&(*_self_));
	{
		
		if (_20d8e4829_Void((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1c911a150:;
			{
				_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;;
			}
		}
		else if (((_20d8e5a17_Prim((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr) && _20d8eb875_IsAny(_20d8e5a17_Prim((*_self_)._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c911acdd:;
			{
				({
					jule::Ptr<_20d8b2891_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_20d8b2891_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1c911ad54;
			}
		}
		else if (((_20d8e5a17_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr) && _20d8eb875_IsAny(_20d8e5a17_Prim((*_self_)._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c911ad54:;
			{
				return _20d8d4b38_evalAny(&(*_self_));;
			}
		}
		else if ((_20d8e64b8_TypeEnum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c911a749:;
			{
				({
					jule::Ptr<_20d8b2891_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_20d8b2891_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1c911a7c1;
			}
		}
		else if ((_20d8e64b8_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c911a7c1:;
			{
				return _20d8d36d6_evalTypeEnum(&(*_self_));;
			}
		}
		else if (_20d8e45b5_IsNil((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1c911a848:;
			{
				return _20d8d320d_evalNil(&(*_self_));;
			}
		}
		else if ((_20d8e6254_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c911a8c0:;
			{
				({
					jule::Ptr<_20d8b2891_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_20d8b2891_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1c911adcb;
			}
		}
		else if ((_20d8e6254_Enum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c911adcb:;
			{
				return _20d8d3472_evalEnum(&(*_self_));;
			}
		}
		else if ((_20d8e5c7b_Sptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c911ae53:;
			{
				({
					jule::Ptr<_20d8b2891_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_20d8b2891_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1c911aeca;
			}
		}
		else if ((_20d8e5c7b_Sptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c911aeca:;
			{
				return _20d8d394a_evalSptr(&(*_self_));;
			}
		}
		else if ((_20d8e5ee0_Ptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c911b052:;
			{
				({
					jule::Ptr<_20d8b2891_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_20d8b2891_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1c911b0c9;
			}
		}
		else if ((_20d8e5ee0_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c911b0c9:;
			{
				return _20d8d3bae_evalPtr(&(*_self_));;
			}
		}
		else if ((_20d8e672c_Arr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c911b151:;
			{
				return _20d8d3e23_evalArr(&(*_self_));;
			}
		}
		else if ((_20d8e6991_Slc((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c911b1c8:;
			{
				return _20d8d4187_evalSlc(&(*_self_));;
			}
		}
		else if ((_20d8e6c05_Fn((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c911b250:;
			{
				return _20d8d43eb_evalFn(&(*_self_));;
			}
		}
		else if ((_20d8e71cd_Trait((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c911b2c7:;
			{
				({
					jule::Ptr<_20d8b2891_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_20d8b2891_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1c911b34e;
			}
		}
		else if ((_20d8e71cd_Trait((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c911b34e:;
			{
				return _20d8d48c4_evalTrait(&(*_self_));;
			}
		}
		else if ((_20d8e6e69_Struct((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c911b3c6:;
			{
				return _20d8d4660_evalStruct(&(*_self_));;
			}
		}
		else if ((_20d8e5a17_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c911b44d:;
			{
				return _20d8d62ee_evalPrim(&(*_self_));;
			}
		}
		else {
			_case_begin_1c911a6c2:;
			{
				return nullptr;;
			}
		}
		_match_end_1c911a65b:;
	};
}



inline void _20d8d69b4_evalConst(_20d8d2042_binaryEval* _self_, jule::Ptr<_20d8b2891_Data>& _393733_d) {
	{
		
		if ((_393733_d == nullptr)) {
			_case_begin_1c912acba:;
			{
				return;;
			}
		}
		else if ((!(_20d8b3254_IsConst((*_self_)._field_l.ptr()))) || (!(_20d8b3254_IsConst((*_self_)._field_r.ptr())))) {
			_case_begin_1c912ad31:;
			{
				_393733_d.get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1c912a649:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1c912bc11:;
			{
				_393733_d.get()._field_Constant=static__20ccb8979_NewBool(_20d80c478_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1c912bc88:;
			{
				_393733_d.get()._field_Constant=static__20ccb8979_NewBool((!(_20d80c478_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1c912c45e:;
			{
				_393733_d.get()._field_Constant=static__20ccb8979_NewBool(_20d80c346_Or((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1c912c4c5:;
			{
				_393733_d.get()._field_Constant=static__20ccb8979_NewBool(_20d80c214_And((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1c912c53b:;
			{
				_393733_d.get()._field_Constant=static__20ccb8979_NewBool(_20d80c81e_Gt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1c912c5a2:;
			{
				_393733_d.get()._field_Constant=static__20ccb8979_NewBool(_20d80c5aa_Lt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1c912c618:;
			{
				_393733_d.get()._field_Constant=static__20ccb8979_NewBool(_20d80c951_GtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1c912c690:;
			{
				_393733_d.get()._field_Constant=static__20ccb8979_NewBool(_20d80c6dc_LtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1c912c717:;
			{
				_20d80ca83_Add((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_393733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1c912c78e:;
			{
				_20d80cbb5_Sub((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_393733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c912c816:;
			{
				_20d80cce7_Mul((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_393733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1c912c88d:;
			{
				jule::Bool _397417_ok = _20d80ce29_Div((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_397417_ok)) && (_20d80b026_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_393733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
				jule::Ptr<_20d8e83cc_Prim> _397921_prim = _20d8e5a17_Prim(_393733_d.get()._field_Kind.ptr());;
				{
					
					if (_20d809a6e_IsSigInt(_397921_prim.get()._field_Kind)) {
						_case_begin_1c9139515:;
						{
							_20d80b158_SetI64(_393733_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_20d80acb2_AsI64(_393733_d.get()._field_Constant.ptr())));
						}
					}
					else if (_20d809ba1_IsUnsigInt(_397921_prim.get()._field_Kind)) {
						_case_begin_1c913958c:;
						{
							_20d80b28a_SetU64(_393733_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_20d80ade4_AsU64(_393733_d.get()._field_Constant.ptr())));
						}
					}
					_match_end_1c913945a:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c912c915:;
			{
				jule::Bool _398717_ok = _20d80d05b_Mod((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_398717_ok)) && (_20d80b026_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_393733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1c912c98c:;
			{
				_20d80d2c0_BitwiseOr((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_393733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c912ca14:;
			{
				_20d80d18d_BitwiseAnd((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_393733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1c912ca8b:;
			{
				_20d80d402_Xor((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_393733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1c912cb13:;
			{
				_20d80d534_Lshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_393733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1c912cb8a:;
			{
				_20d80d666_Rshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_393733_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		_match_end_1c912bdba:;
	};
	_393733_d.get()._field_Model=static_cast<jule::Any>(_393733_d.get()._field_Constant);
	_20d8da732_applyCastModelByEnum(_393733_d,_20d8e6254_Enum(_393733_d.get()._field_Kind.ptr()));
}



inline void _20d8d6c39_checkData(_20d8d2042_binaryEval* _self_, jule::Ptr<_20d8b2891_Data>& _401233_d) {
	jule::Ptr<_20d814749_FnIns> _401313_f = _20d8e6c05_Fn(_401233_d.get()._field_Kind.ptr());;
	if ((((_401313_f != nullptr) && (_401313_f.get()._field_Decl != nullptr)) && _20cc3121b_IsMethod(_401313_f.get()._field_Decl.ptr()))) {
		_20d8b491a_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _20d8d6e15_checkDatas(_20d8d2042_binaryEval* _self_) {
	_20d8d6c39_checkData(&(*_self_), (*_self_)._field_l);
	_20d8d6c39_checkData(&(*_self_), (*_self_)._field_r);
}



inline void _20d8d718a_setModel(_20d8d2042_binaryEval* _self_, jule::Ptr<_20d8b2891_Data>& _402432_d) {
	if (_20d8b3254_IsConst(_402432_d.ptr())) {
		if ((_20d8b3254_IsConst((*_self_)._field_l.ptr()) && _20d8b3254_IsConst((*_self_)._field_r.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_20d8b2891_Data> _403218_l;;
	jule::Ptr<_20d8b2891_Data> _403225_r;;
	({
		jule::Ptr<_20d8b2891_Data> ___jule_assign_arg = (*_self_)._field_l;
		jule::Ptr<_20d8b2891_Data> _1___jule_assign_arg = (*_self_)._field_r;
		_403218_l = ___jule_assign_arg;
		_403225_r = _1___jule_assign_arg;
	});
	if ((!(_20d8b3562_GoodOperand(_403218_l.ptr(), _403225_r)))) {
		({
			jule::Ptr<_20d8b2891_Data> ___jule_assign_arg = _403225_r;
			jule::Ptr<_20d8b2891_Data> _1___jule_assign_arg = _403218_l;
			_403218_l = ___jule_assign_arg;
			_403225_r = _1___jule_assign_arg;
		});
	};
	_402432_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20cc2c05d_BinopExprModel>(_20cc2c05d_BinopExprModel{._field_Left=jule::new_ptr<_20cbed66c_OperandExprModel>(_20cbed66c_OperandExprModel{._field_Kind=_403218_l.get()._field_Kind, ._field_Model=_403218_l.get()._field_Model}), ._field_Right=jule::new_ptr<_20cbed66c_OperandExprModel>(_20cbed66c_OperandExprModel{._field_Kind=_403225_r.get()._field_Kind, ._field_Model=_403225_r.get()._field_Model}), ._field_Op=(*_self_)._field_op}));
}



inline void _20d8d7410_postEval(_20d8d2042_binaryEval* _self_, jule::Ptr<_20d8b2891_Data>& _405032_d) {
	_405032_d.get()._field_Lvalue=false;
	_20d8d718a_setModel(&(*_self_), _405032_d);
}



inline jule::Ptr<_20d8b2891_Data> _20d8d77b7_solveExplicit(_20d8d2042_binaryEval* _self_, jule::Ptr<_20d8b2891_Data>& _405537_l, jule::Ptr<_20d8b2891_Data>& _405552_r) {
	({
		jule::Ptr<_20d8b2891_Data> ___jule_assign_arg = _405537_l;
		jule::Ptr<_20d8b2891_Data> _1___jule_assign_arg = _405552_r;
		(*_self_)._field_l = ___jule_assign_arg;
		(*_self_)._field_r = _1___jule_assign_arg;
	});
	_20d8d6e15_checkDatas(&(*_self_));
	jule::Ptr<_20d8b2891_Data> _406017_d = _20d8d673e_evalOp(&(*_self_));;
	({
		jule::Ptr<_20d8b2891_Data> ___jule_assign_arg = _405537_l;
		jule::Ptr<_20d8b2891_Data> _1___jule_assign_arg = _405552_r;
		(*_self_)._field_l = ___jule_assign_arg;
		(*_self_)._field_r = _1___jule_assign_arg;
	});
	_20d8d69b4_evalConst(&(*_self_), _406017_d);
	if ((_406017_d != nullptr)) {
		_406017_d.get()._field_Mutable=true;
		_20d8d7410_postEval(&(*_self_), _406017_d);
	};
	return _406017_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d8d7ac5_eval(_20d8d2042_binaryEval* _self_, jule::Ptr<_20cb921e3_BinopExpr>& _407528_op) {
	if ((_407528_op.get()._field_Op.get()._field_Kind == jule::Str("=", 1))) {
		_20d8b491a_pushErr((*_self_)._field_e.ptr(), _407528_op.get()._field_Op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_20d8b4c39_pushSugggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d8b2891_Data> _408217_l = _20d8ce715_evalExprKind((*_self_)._field_e, _407528_op.get()._field_Left.get()._field_Kind);;
	if (((_408217_l == nullptr) || (_408217_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_20d8e3680_TypeKind> _408717_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_408217_l.get()._field_Kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_408717_prefix;
	});;
	jule::Ptr<_20d8b2891_Data> _409017_r = _20d8ce715_evalExprKind((*_self_)._field_e, _407528_op.get()._field_Right.get()._field_Kind);;
	if (((_409017_r == nullptr) || (_409017_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*_self_)._field_op=_407528_op.get()._field_Op;
	jule::Ptr<_20d8b2891_Data> _409717_d = _20d8d77b7_solveExplicit(&(*_self_), _408217_l,_409017_r);;
	if ((((_409717_d != nullptr) && _408217_l.get()._field_IsRune) && _409017_r.get()._field_IsRune)) {
		_409717_d.get()._field_IsRune=true;
	};
	return _409717_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8d2042_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8e1e53_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8e298c_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20d8e3a7b_Str(_20d8e3680_TypeKind* _self_) {
	if (_20d8e45b5_IsNil(&(*_self_))) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_Variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_20d8e4351_CppLinked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_CppIdent;
	} else {
		_7417_kind+=_20d8e3251_Kind_mptr_data[((*_self_)._field_Kind).type_offset]._20d8e2d00_Str((*_self_)._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _20d8e3d89_Equals(jule::Ptr<_20d8e3680_TypeKind> _self_, jule::Ptr<_20d8e3680_TypeKind> _9022_other) {
	if (_20d8e45b5_IsNil(_self_.ptr())) {
		return _20d8e45b5_IsNil(_9022_other.ptr());;
	};
	if (_20d8e4351_CppLinked(_self_.ptr())) {
		return (_20d8e4351_CppLinked(_9022_other.ptr()) && (_self_.get()._field_CppIdent == _9022_other.get()._field_CppIdent));;
	};
	return _20d8e3251_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._20d8e310d_Equals(_self_.get()._field_Kind, _9022_other);;
}



inline jule::Bool _20d8e4351_CppLinked(_20d8e3680_TypeKind* _self_) {
	return ((*_self_)._field_CppIdent.len() != 0LL);;
}



inline jule::Bool _20d8e45b5_IsNil(_20d8e3680_TypeKind* _self_) {
	return ((*_self_)._field_Kind == nullptr);;
}



inline jule::Bool _20d8e4829_Void(_20d8e3680_TypeKind* _self_) {
	jule::Ptr<_20d8e83cc_Prim> _11113_prim = _20d8e5a17_Prim(&(*_self_));;
	return ((_11113_prim != nullptr) && (_11113_prim.get()._field_Kind == jule::Str("void", 4)));;
}



inline jule::Bool _20d8e4a8d_Comparable(_20d8e3680_TypeKind* _self_) {
	{
		_20d8e3680_TypeKind* _11821__self = (&((*_self_)));;
		if ((_20d8e6e69_Struct(_11821__self) != nullptr)) {
			return _20d8e6e69_Struct(_11821__self).get()._field_Comparable;;
		};
		return (((_20d8e7442_Map(_11821__self) == nullptr) && (_20d8e6991_Slc(_11821__self) == nullptr)) && (_20d8e6c05_Fn(_11821__self) == nullptr));;
	};
}



inline jule::Bool _20d8e4d02_Mutable(_20d8e3680_TypeKind* _self_) {
	{
		_20d8e3680_TypeKind* _12921__self = (&((*_self_)));;
		if ((_20d8e6e69_Struct(_12921__self) != nullptr)) {
			return _20d8e6e69_Struct(_12921__self).get()._field_Mutable;;
		};
		if ((_20d8e71cd_Trait(_12921__self) != nullptr)) {
			return _20d8e71cd_Trait(_12921__self).get()._field_Mutable;;
		};
		if ((_20d8e5a17_Prim(_12921__self) != nullptr)) {
			jule::Ptr<_20d8e83cc_Prim> _13721_p = _20d8e5a17_Prim(_12921__self);;
			return _20d8eb875_IsAny(_13721_p.ptr());;
		};
		if ((_20d8e672c_Arr(_12921__self) != nullptr)) {
			return _20d8e4d02_Mutable(_20d8e672c_Arr(_12921__self).get()._field_Elem.ptr());;
		};
		return (((_20d8e6991_Slc(_12921__self) != nullptr) || (_20d8e5ee0_Ptr(_12921__self) != nullptr)) || (_20d8e5c7b_Sptr(_12921__self) != nullptr));;
	};
}



inline jule::Bool _20d8e5066_NilCompatible(_20d8e3680_TypeKind* _self_) {
	{
		_20d8e3680_TypeKind* _15221__self = (&((*_self_)));;
		jule::Ptr<_20d8e83cc_Prim> _15417_prim = _20d8e5a17_Prim(_15221__self);;
		if (((_15417_prim != nullptr) && _20d8eb875_IsAny(_15417_prim.ptr()))) {
			return true;;
		};
		return (((((((_20d8e45b5_IsNil(_15221__self) || (_20d8e6c05_Fn(_15221__self) != nullptr)) || (_20d8e5c7b_Sptr(_15221__self) != nullptr)) || (_20d8e5ee0_Ptr(_15221__self) != nullptr)) || (_20d8e71cd_Trait(_15221__self) != nullptr)) || (_20d8e6991_Slc(_15221__self) != nullptr)) || (_20d8e7442_Map(_15221__self) != nullptr)) || (_20d8e64b8_TypeEnum(_15221__self) != nullptr));;
	};
}



inline jule::Bool _20d8e52ca_PerformsRC(_20d8e3680_TypeKind* _self_) {
	{
		_20d8e3680_TypeKind* _17321__self = (&((*_self_)));;
		jule::Ptr<_20d8e83cc_Prim> _17417_prim = _20d8e5a17_Prim(_17321__self);;
		if ((_17417_prim != nullptr)) {
			return _20d8eb875_IsAny(_17417_prim.ptr());;
		};
		return (((_20d8e5c7b_Sptr(_17321__self) != nullptr) || (_20d8e6991_Slc(_17321__self) != nullptr)) || (_20d8e71cd_Trait(_17321__self) != nullptr));;
	};
}



inline jule::Bool _20d8e553e_SupportsCloning(_20d8e3680_TypeKind* _self_) {
	{
		_20d8e3680_TypeKind* _18521__self = (&((*_self_)));;
		{
			
			if ((_20d8e5a17_Prim(_18521__self) != nullptr)) {
				_case_begin_1c9177894:;
				{
					return (!(_20d8eb875_IsAny(_20d8e5a17_Prim(_18521__self).ptr())));;
				}
			}
			else if ((_20d8e6254_Enum(_18521__self) != nullptr)) {
				_case_begin_1c91796ed:;
				{
					return true;;
				}
			}
			else if ((_20d8e6c05_Fn(_18521__self) != nullptr)) {
				_case_begin_1c9179764:;
				{
					return true;;
				}
			}
			else if ((_20d8e5ee0_Ptr(_18521__self) != nullptr)) {
				_case_begin_1c91797ca:;
				{
					return true;;
				}
			}
			else if ((_20d8e6991_Slc(_18521__self) != nullptr)) {
				_case_begin_1c9179324:;
				{
					return _20d8e553e_SupportsCloning(_20d8e6991_Slc(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_20d8e7442_Map(_18521__self) != nullptr)) {
				_case_begin_1c917938a:;
				{
					jule::Ptr<_20d8edb74_Map> _19821_m = _20d8e7442_Map(_18521__self);;
					return (_20d8e553e_SupportsCloning(_19821_m.get()._field_Key.ptr()) && _20d8e553e_SupportsCloning(_19821_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_20d8e672c_Arr(_18521__self) != nullptr)) {
				_case_begin_1c9179401:;
				{
					return _20d8e553e_SupportsCloning(_20d8e672c_Arr(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_20d8e5c7b_Sptr(_18521__self) != nullptr)) {
				_case_begin_1c9179467:;
				{
					return _20d8e553e_SupportsCloning(_20d8e5c7b_Sptr(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_20d8e6e69_Struct(_18521__self) != nullptr)) {
				_case_begin_1c9179a0b:;
				{
					jule::Ptr<_20cba5db6_StructIns> _20525_s = _20d8e6e69_Struct(_18521__self);;
					return (((_20525_s.get()._field_Decl != nullptr) && (!(_20525_s.get()._field_Decl.get()._field_CppLinked))) && _20cb65bde_IsDerives(_20525_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_1c91792ad:;
				{
					return false;;
				}
			}
			_match_end_1c9179247:;
		};
	};
}



inline jule::Bool _20d8e57a3_Variadicable(_20d8e3680_TypeKind* _self_) {
	{
		_20d8e3680_TypeKind* _21821__self = (&((*_self_)));;
		return (_20d8e6991_Slc(_21821__self) != nullptr);;
	};
}



inline jule::Ptr<_20d8e83cc_Prim> _20d8e5a17_Prim(_20d8e3680_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_20d8e83cc_Prim>>()) {
			_case_begin_1c91776a7:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_20d8e83cc_Prim>();;
			}
		}
		else {
			_case_begin_1c9178ad7:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9178a82:;
	};
}



inline jule::Ptr<_20d8ebb61_Sptr> _20d8e5c7b_Sptr(_20d8e3680_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_20d8ebb61_Sptr>>()) {
			_case_begin_1c9178b5e:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_20d8ebb61_Sptr>();;
			}
		}
		else {
			_case_begin_1c918253b:;
			{
				return nullptr;;
			}
		}
		_match_end_1c91824d6:;
	};
}



inline jule::Ptr<_20d9001c5_Ptr> _20d8e5ee0_Ptr(_20d8e3680_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_20d9001c5_Ptr>>()) {
			_case_begin_1c9182a9c:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_20d9001c5_Ptr>();;
			}
		}
		else {
			_case_begin_1c918321d:;
			{
				return nullptr;;
			}
		}
		_match_end_1c91831b8:;
	};
}



inline jule::Ptr<_20d81b0ad_Enum> _20d8e6254_Enum(_20d8e3680_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_20d81b0ad_Enum>>()) {
			_case_begin_1c9183790:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_20d81b0ad_Enum>();;
			}
		}
		else {
			_case_begin_1c9183e11:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9183dab:;
	};
}



inline jule::Ptr<_20d81b82d_TypeEnum> _20d8e64b8_TypeEnum(_20d8e3680_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_20d81b82d_TypeEnum>>()) {
			_case_begin_1c9184483:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_20d81b82d_TypeEnum>();;
			}
		}
		else {
			_case_begin_1c9184b04:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9184a9e:;
	};
}



inline jule::Ptr<_20d8ee768_Arr> _20d8e672c_Arr(_20d8e3680_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_20d8ee768_Arr>>()) {
			_case_begin_1c9185176:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_20d8ee768_Arr>();;
			}
		}
		else {
			_case_begin_1c91857e7:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9185792:;
	};
}



inline jule::Ptr<_20d8ec5bd_Slc> _20d8e6991_Slc(_20d8e3680_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_20d8ec5bd_Slc>>()) {
			_case_begin_1c9185d69:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_20d8ec5bd_Slc>();;
			}
		}
		else {
			_case_begin_1c91864da:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9186485:;
	};
}



inline jule::Ptr<_20d814749_FnIns> _20d8e6c05_Fn(_20d8e3680_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_20d814749_FnIns>>()) {
			_case_begin_1c9186a5c:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_20d814749_FnIns>();;
			}
		}
		else {
			_case_begin_1c91871cd:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9187178:;
	};
}



inline jule::Ptr<_20cba5db6_StructIns> _20d8e6e69_Struct(_20d8e3680_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_20cba5db6_StructIns>>()) {
			_case_begin_1c9187750:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_20cba5db6_StructIns>();;
			}
		}
		else {
			_case_begin_1c9187dc1:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9187d6b:;
	};
}



inline jule::Ptr<_20d81a3ed_Trait> _20d8e71cd_Trait(_20d8e3680_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_20d81a3ed_Trait>>()) {
			_case_begin_1c9188443:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_20d81a3ed_Trait>();;
			}
		}
		else {
			_case_begin_1c9188ab4:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9188a5e:;
	};
}



inline jule::Ptr<_20d8edb74_Map> _20d8e7442_Map(_20d8e3680_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_20d8edb74_Map>>()) {
			_case_begin_1c9189136:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_20d8edb74_Map>();;
			}
		}
		else {
			_case_begin_1c91897a7:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9189752:;
	};
}



inline jule::Ptr<_20d8ed14b_Tuple> _20d8e76a6_Tup(_20d8e3680_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_20d8ed14b_Tuple>>()) {
			_case_begin_1c9189d29:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_20d8ed14b_Tuple>();;
			}
		}
		else {
			_case_begin_1c918a49a:;
			{
				return nullptr;;
			}
		}
		_match_end_1c918a445:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d8e3680_TypeKind _Src) {
	_Stream << _20d8e3a7b_Str(&_Src);
	return _Stream;
}



inline jule::Bool _20d8e7e15_checked(_20d8e7a5d_TypeSymbol* _self_) {
	return ((*_self_)._field_Kind != nullptr);;
}



inline void _20d8e80e1_removeKind(_20d8e7a5d_TypeSymbol* _self_) {
	(*_self_)._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8e7a5d_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20d8e8740_Str(_20d8e83cc_Prim* _self_) {
	return (*_self_)._field_Kind;;
}



inline jule::Bool _20d8e8a4d_Equals(jule::Ptr<_20d8e83cc_Prim> _self_, jule::Ptr<_20d8e3680_TypeKind> _37122_other) {
	jule::Ptr<_20d8e83cc_Prim> _37213_prim = _20d8e5a17_Prim(_37122_other.ptr());;
	if ((_37213_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _37213_prim.get()._field_Kind);;
}



inline jule::Bool _20d8e8ec1_IsConstraint(_20d8e83cc_Prim* _self_) {
	return ((((!(_20d8eb611_IsStr(&(*_self_)))) && (!(_20d8eb875_IsAny(&(*_self_))))) && (!(_20d8eb39c_IsBool(&(*_self_))))) && (!(_20d80a047_IsNum((*_self_)._field_Kind))));;
}



inline jule::Bool _20d8e9235_IsI8(_20d8e83cc_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i8", 2));;
}



inline jule::Bool _20d8e9499_IsI16(_20d8e83cc_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i16", 3));;
}



inline jule::Bool _20d8e970d_IsI32(_20d8e83cc_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i32", 3));;
}



inline jule::Bool _20d8e9972_IsI64(_20d8e83cc_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i64", 3));;
}



inline jule::Bool _20d8e9bd6_IsU8(_20d8e83cc_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u8", 2));;
}



inline jule::Bool _20d8e9e4a_IsU16(_20d8e83cc_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u16", 3));;
}



inline jule::Bool _20d8ea1ae_IsU32(_20d8e83cc_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u32", 3));;
}



inline jule::Bool _20d8ea423_IsU64(_20d8e83cc_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u64", 3));;
}



inline jule::Bool _20d8ea687_IsF32(_20d8e83cc_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f32", 3));;
}



inline jule::Bool _20d8ea8eb_IsF64(_20d8e83cc_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f64", 3));;
}



inline jule::Bool _20d8eab60_IsInt(_20d8e83cc_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("int", 3));;
}



inline jule::Bool _20d8eadc4_IsUint(_20d8e83cc_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uint", 4));;
}



inline jule::Bool _20d8eb138_IsUintptr(_20d8e83cc_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uintptr", 7));;
}



inline jule::Bool _20d8eb39c_IsBool(_20d8e83cc_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("bool", 4));;
}



inline jule::Bool _20d8eb611_IsStr(_20d8e83cc_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("str", 3));;
}



inline jule::Bool _20d8eb875_IsAny(_20d8e83cc_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("any", 3));;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8e83cc_Prim _Src) {
	_Stream << _20d8e8740_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d8ebec4_Str(_20d8ebb61_Sptr* _self_) {
	return (jule::Str("&", 1) + _20d8e3a7b_Str((*_self_)._field_Elem.ptr()));;
}



inline jule::Bool _20d8ec2d2_Equals(jule::Ptr<_20d8ebb61_Sptr> _self_, jule::Ptr<_20d8e3680_TypeKind> _44822_other) {
	jule::Ptr<_20d8ebb61_Sptr> _44913_sptr = _20d8e5c7b_Sptr(_44822_other.ptr());;
	if ((_44913_sptr == nullptr)) {
		return false;;
	};
	return _20d8e3d89_Equals(_self_.get()._field_Elem, _44913_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8ebb61_Sptr _Src) {
	_Stream << _20d8ebec4_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d8ecac9_Str(_20d8ec5bd_Slc* _self_) {
	return (jule::Str("[]", 2) + _20d8e3a7b_Str((*_self_)._field_Elem.ptr()));;
}



inline jule::Bool _20d8ecdd7_Equals(jule::Ptr<_20d8ec5bd_Slc> _self_, jule::Ptr<_20d8e3680_TypeKind> _46722_other) {
	jule::Ptr<_20d8ec5bd_Slc> _46813_slc = _20d8e6991_Slc(_46722_other.ptr());;
	if ((_46813_slc == nullptr)) {
		return false;;
	};
	return _20d8e3d89_Equals(_self_.get()._field_Elem, _46813_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8ec5bd_Slc _Src) {
	_Stream << _20d8ecac9_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d8ed4ae_Str(_20d8ed14b_Tuple* _self_) {
	jule::Str _48417_s = jule::Str("(", 1);;
	_48417_s+=_20d8e3a7b_Str((*_self_)._field_Types[0LL].ptr());
	{
		auto expr = (*_self_)._field_Types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1c9199be6:;
		if (it != expr.end()) {
			jule::Ptr<_20d8e3680_TypeKind> &_48616_t = *it;
			{
				_48417_s+=jule::Str(",", 1);
				_48417_s+=_20d8e3a7b_Str(_48616_t.ptr());
			}
			_iter_next_1c9199be6:;
			++it;
			goto _iter_begin_1c9199be6;
		}
		_iter_end_1c9199be6:;
	};
	_48417_s+=jule::Str(")", 1);
	return _48417_s;;
}



inline jule::Bool _20d8ed7bc_Equals(jule::Ptr<_20d8ed14b_Tuple> _self_, jule::Ptr<_20d8e3680_TypeKind> _49522_other) {
	jule::Ptr<_20d8ed14b_Tuple> _49613_tup = _20d8e76a6_Tup(_49522_other.ptr());;
	if ((_49613_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _49613_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I64 _50317_i = 0LL;;
	for (; (_50317_i < _self_.get()._field_Types.len()); (_50317_i)++) {
		{
			if ((!(_20d8e3d89_Equals(_self_.get()._field_Types[_50317_i], _49613_tup.get()._field_Types[_50317_i])))) {
				return false;;
			};
		}
	_iter_next_1c919c688:;
	}
	_iter_end_1c919c688:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8ed14b_Tuple _Src) {
	_Stream << _20d8ed4ae_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d8eded7_Str(_20d8edb74_Map* _self_) {
	jule::Str _52317_s = jule::Str("[", 1);;
	_52317_s+=_20d8e3a7b_Str((*_self_)._field_Key.ptr());
	_52317_s+=jule::Str(":", 1);
	_52317_s+=_20d8e3a7b_Str((*_self_)._field_Val.ptr());
	_52317_s+=jule::Str("]", 1);
	return _52317_s;;
}



inline jule::Bool _20d8ee2e5_Equals(jule::Ptr<_20d8edb74_Map> _self_, jule::Ptr<_20d8e3680_TypeKind> _53222_other) {
	jule::Ptr<_20d8edb74_Map> _53313_m = _20d8e7442_Map(_53222_other.ptr());;
	if ((_53313_m == nullptr)) {
		return false;;
	};
	return (_20d8e3d89_Equals(_self_.get()._field_Key, _53313_m.get()._field_Key) && _20d8e3d89_Equals(_self_.get()._field_Val, _53313_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8edb74_Map _Src) {
	_Stream << _20d8eded7_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d8eeacb_Str(_20d8ee768_Arr* _self_) {
	jule::Str _55117_s = jule::Str("[", 1);;
	_55117_s+=_20d80720e_Itoa((*_self_)._field_N);
	_55117_s+=jule::Str("]", 1);
	_55117_s+=_20d8e3a7b_Str((*_self_)._field_Elem.ptr());
	return _55117_s;;
}



inline jule::Bool _20d8eedd9_Equals(jule::Ptr<_20d8ee768_Arr> _self_, jule::Ptr<_20d8e3680_TypeKind> _55922_other) {
	jule::Ptr<_20d8ee768_Arr> _56013_arr = _20d8e672c_Arr(_55922_other.ptr());;
	if ((_56013_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _56013_arr.get()._field_N) && _20d8e3d89_Equals(_self_.get()._field_Elem, _56013_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _20d8ee768_Arr _Src) {
	_Stream << _20d8eeacb_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d900538_Str(_20d9001c5_Ptr* _self_) {
	if (_20d900b98_IsUnsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _20d8e3a7b_Str((*_self_)._field_Elem.ptr()));;
}



inline jule::Bool _20d900846_Equals(jule::Ptr<_20d9001c5_Ptr> _self_, jule::Ptr<_20d8e3680_TypeKind> _58322_other) {
	jule::Ptr<_20d9001c5_Ptr> _58413_ptr = _20d8e5ee0_Ptr(_58322_other.ptr());;
	if ((_58413_ptr == nullptr)) {
		return false;;
	};
	return _20d8e3d89_Equals(_self_.get()._field_Elem, _58413_ptr.get()._field_Elem);;
}



inline jule::Bool _20d900b98_IsUnsafe(_20d9001c5_Ptr* _self_) {
	return ((*_self_)._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d9001c5_Ptr _Src) {
	_Stream << _20d900538_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d90111b_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _20d902639_pushErr(_20d901e30_typeChecker* _self_, jule::Ptr<_20b4e5581_Token> _66626_token, jule::Str _66641_fmt, jule::Slice<jule::Any> _66654_args) {
	_20d84ed5b_pushErr((*_self_)._field_s.ptr(), _66626_token,_66641_fmt,_66654_args);
}



inline void _20d902815_allowBuiltin(_20d901e30_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _20d9029e1_disallowBuiltin(_20d901e30_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Ptr<_20d8e83cc_Prim> _20d902cee_buildPrim(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb898b1_IdentTypeDecl>& _67829_decl) {
	if ((!(_20d90bde6_isPrim(_67829_decl.get()._field_Ident)))) {
		_20d902639_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_67829_decl.get()._field_Generics.len() > 0LL)) {
		_20d902639_pushErr(&(*_self_), _67829_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_67829_decl.get()._field_Ident)}));
		return nullptr;;
	};
	return _20d90b8a7_buildPrimType(_67829_decl.get()._field_Ident);;
}



inline void _1c91abab5_pushReference(_20d901e30_typeChecker* _self_, jule::Ptr<_20cba5db6_StructIns>& _69240_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1c8e3b3d3_Exist((*_self_)._field_refers.ptr(), _69240_t)) {
		return;;
	};
	_20d815c78_Push((*_self_)._field_refers.ptr(), jule::Any(_69240_t));
}

inline void _1c91ae9a8_pushReference(_20d901e30_typeChecker* _self_, jule::Ptr<_20d81a3ed_Trait>& _69240_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1c91b1669_Exist((*_self_)._field_refers.ptr(), _69240_t)) {
		return;;
	};
	_20d815c78_Push((*_self_)._field_refers.ptr(), jule::Any(_69240_t));
}



inline void _20d9032e9_pushReferenceByKind(_20d901e30_typeChecker* _self_, jule::Ptr<_20d8e3680_TypeKind>& _70243_k) {
	{
		
		if ((_20d8e6e69_Struct(_70243_k.ptr()) != nullptr)) {
			_case_begin_1c91aa762:;
			{
				jule::Ptr<_20cba5db6_StructIns> _70521_t = _20d8e6e69_Struct(_70243_k.ptr());;
				_1c91abab5_pushReference(&(*_self_), _70521_t);
			}
		}
		else if ((_20d8e71cd_Trait(_70243_k.ptr()) != nullptr)) {
			_case_begin_1c91aa7d9:;
			{
				jule::Ptr<_20d81a3ed_Trait> _70821_t = _20d8e71cd_Trait(_70243_k.ptr());;
				_1c91ae9a8_pushReference(&(*_self_), _70821_t);
			}
		}
		_match_end_1c91aa652:;
	};
}



inline void _20d9036b2_pushCycleError(_20d901e30_typeChecker* _self_, jule::Any _71329_def1, jule::Any _71340_def2, jule::Str& _71356_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _71513_getIdent = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _71528_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _71528_def };
			
			if (_match_expr.type_is_ptr<_20d8e298c_TypeAlias>()) {
				_case_begin_1c91b4bde:;
				{
					return _71528_def.operator jule::Ptr<_20d8e298c_TypeAlias>().get()._field_Ident;;
				}
			}
			else if (_match_expr.type_is_ptr<_20cba59dc_Struct>()) {
				_case_begin_1c91b4c55:;
				{
					return _71528_def.operator jule::Ptr<_20cba59dc_Struct>().get()._field_Ident;;
				}
			}
			else {
				_case_begin_1c91b45a1:;
				{
					return jule::Str();;
				}
			}
			_match_end_1c91b44c4:;
		};
	});;
	jule::Str _72513_def1Ident = _71513_getIdent(_71329_def1);;
	jule::Str _72613_def2Ident = _71513_getIdent(_71340_def2);;
	jule::Str _72713_refersTo = _20b1bc456_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_72513_def1Ident),jule::Any(_72613_def2Ident)}));;
	(_71356_message).buffer.insert(0, (((_20b11c7b3_Repeat(jule::Str(" ", 1),4LL) + _72713_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _20d903a69_checkCrossCycle(_20d901e30_typeChecker* _self_, jule::Any _73130_decl, jule::Str& _73146_message) {
	{
		auto &_match_expr{ _73130_decl };
		
		if (_match_expr.type_is_ptr<_20d8e298c_TypeAlias>()) {
			_case_begin_1c91b6d78:;
			{
				jule::Ptr<_20d8e298c_TypeAlias> _73417_ta = _73130_decl.operator jule::Ptr<_20d8e298c_TypeAlias>();;
				{
					auto &expr = _73417_ta.get()._field_Refers;
					auto it = expr.begin();
					_iter_begin_1c91b783a:;
					if (it != expr.end()) {
						jule::Any &_73520_d = *it;
						{
							{
								
								if ((_73520_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1c91b853e:;
									{
										_20d9036b2_pushCycleError(&(*_self_), jule::Any(_73417_ta),_73520_d,_73146_message);
										return false;;
									}
								}
								else if ((!(_20d903a69_checkCrossCycle(&(*_self_), _73520_d,_73146_message)))) {
									_case_begin_1c91b85b6:;
									{
										_20d9036b2_pushCycleError(&(*_self_), jule::Any(_73417_ta),_73520_d,_73146_message);
										return false;;
									}
								}
								_match_end_1c91b842e:;
							};
						}
						_iter_next_1c91b783a:;
						++it;
						goto _iter_begin_1c91b783a;
					}
					_iter_end_1c91b783a:;
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20cba59dc_Struct>()) {
			_case_begin_1c91b6dde:;
			{
				jule::Ptr<_20cba59dc_Struct> _74617_s = _73130_decl.operator jule::Ptr<_20cba59dc_Struct>();;
				{
					auto &expr = _74617_s.get()._field_Depends;
					auto it = expr.begin();
					_iter_begin_1c91b8ece:;
					if (it != expr.end()) {
						jule::Ptr<_20cba59dc_Struct> &_74720_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _74720_d)) {
									_case_begin_1c91ba882:;
									{
										_20d9036b2_pushCycleError(&(*_self_), jule::Any(_74617_s),jule::Any(_74720_d),_73146_message);
										return false;;
									}
								}
								else if ((!(_20d903a69_checkCrossCycle(&(*_self_), jule::Any(_74720_d),_73146_message)))) {
									_case_begin_1c91ba909:;
									{
										_20d9036b2_pushCycleError(&(*_self_), jule::Any(_74617_s),jule::Any(_74720_d),_73146_message);
										return false;;
									}
								}
								_match_end_1c91ba772:;
							};
						}
						_iter_next_1c91b8ece:;
						++it;
						goto _iter_begin_1c91b8ece;
					}
					_iter_end_1c91b8ece:;
				};
			}
		}
		_match_end_1c91b6c8a:;
	};
	return true;;
}



inline jule::Bool _20d903e21_checkIllegalCycles(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb898b1_IdentTypeDecl>& _76538_ident, jule::Any _76565_decl) {
	jule::Bool __jule_func_result = false;
	if (((*_self_)._field_referencer == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _76565_decl };
		
		if (_match_expr.type_is_ptr<_20cba59dc_Struct>()) {
			_case_begin_1c91bc80c:;
			{
				if (((*_self_)._field_notPlain || _76565_decl.operator jule::Ptr<_20cba59dc_Struct>().get()._field_CppLinked)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20d8e298c_TypeAlias>()) {
			_case_begin_1c91bc873:;
			{
				if (_76565_decl.operator jule::Ptr<_20d8e298c_TypeAlias>().get()._field_CppLinked) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1c91ba431:;
	};
	if ((_76565_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_20d902639_pushErr(&(*_self_), _76538_ident.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _78817_message = jule::Str();;
	if ((!(_20d903a69_checkCrossCycle(&(*_self_), _76565_decl,_78817_message)))) {
		jule::Str _79121_errMsg = _78817_message;;
		_78817_message=jule::Str();
		_20d9036b2_pushCycleError(&(*_self_), (*_self_)._field_referencer.get()._field_owner,_76565_decl,_78817_message);
		_79121_errMsg+=_78817_message;
		_20d902639_pushErr(&(*_self_), _76538_ident.get()._field_Token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_79121_errMsg)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is_ptr<_20d8e298c_TypeAlias>()) {
			_case_begin_1c91bee91:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({_76565_decl}));
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20cba59dc_Struct>()) {
			_case_begin_1c91c1822:;
			{
				{
					auto &_match_expr{ _76565_decl };
					
					if (_match_expr.type_is_ptr<_20cba59dc_Struct>()) {
						_case_begin_1c91c201a:;
						{
							jule::Ptr<_20cba59dc_Struct> _80725_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_20cba59dc_Struct>();;
							_80725_s.get()._field_Depends = jule::alloc_for_append(_80725_s.get()._field_Depends,1);_80725_s.get()._field_Depends.__push(_76565_decl.operator jule::Ptr<_20cba59dc_Struct>());;
						}
					}
					_match_end_1c91c1e2c:;
				};
			}
		}
		_match_end_1c91bee08:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_20d8e3251_Kind> _20d9042c8_fromTypeAlias(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb898b1_IdentTypeDecl>& _81533_decl, jule::Ptr<_20d8e298c_TypeAlias>& _81560_ta) {
	if ((!(_20d850532_isAccessibleDefine((*_self_)._field_s.ptr(), _81560_ta.get()._field_Public,_81560_ta.get()._field_Token)))) {
		_20d902639_pushErr(&(*_self_), _81533_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_81533_decl.get()._field_Ident)}));
		return nullptr;;
	};
	_81560_ta.get()._field_Used=true;
	if ((_81533_decl.get()._field_Generics.len() > 0LL)) {
		_20d902639_pushErr(&(*_self_), _81533_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_81533_decl.get()._field_Ident)}));
		return nullptr;;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_bannedGenerics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1c91c65d5:;
			if (it != expr.end()) {
				jule::Ptr<_20d8e298c_TypeAlias> _83220_bg = *it;
				{
					if (((_83220_bg == _81560_ta) || ((_81560_ta.get()._field_Kind.get()._field_Kind != nullptr) && _20d8e3d89_Equals(_81560_ta.get()._field_Kind.get()._field_Kind, _83220_bg.get()._field_Kind.get()._field_Kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1c91c65d5;
					};
				}
				_iter_next_1c91c65d5:;
				++it;
				goto _iter_begin_1c91c65d5;
			}
			_iter_end_1c91c65d5:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1c91c8494:;
			if (it != expr.end()) {
				jule::Ptr<_20d8e298c_TypeAlias> _84320_bg = *it;
				{
					if ((_84320_bg == _81560_ta)) {
						_20d902639_pushErr(&(*_self_), _81533_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_81533_decl.get()._field_Ident)}));
						return nullptr;;
					};
					{
						auto &expr = _81560_ta.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1c91c90dd:;
						if (it != expr.end()) {
							jule::Ptr<_20d8e298c_TypeAlias> _84824_dg = *it;
							{
								if ((_84320_bg == _84824_dg)) {
									_20d902639_pushErr(&(*_self_), _81533_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_81533_decl.get()._field_Ident)}));
									return nullptr;;
								};
							}
							_iter_next_1c91c90dd:;
							++it;
							goto _iter_begin_1c91c90dd;
						}
						_iter_end_1c91c90dd:;
					};
				}
				_iter_next_1c91c8494:;
				++it;
				goto _iter_begin_1c91c8494;
			}
			_iter_end_1c91c8494:;
		};
	};
	jule::Bool _85717_ok = _20d903e21_checkIllegalCycles(&(*_self_), _81533_decl,jule::Any(_81560_ta));;
	if ((!(_85717_ok))) {
		return nullptr;;
	};
	_85717_ok=_20d859d44_checkTypeAliasDeclKind((*_self_)._field_s, _81560_ta,(*_self_)._field_lookup);
	if ((!(_85717_ok))) {
		return nullptr;;
	};
	if ((_81560_ta.get()._field_Generic && ((*_self_)._field_ownerAlias != nullptr))) {
		(*_self_)._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*_self_)._field_ownerAlias.get()._field_Generics,1);(*_self_)._field_ownerAlias.get()._field_Generics.__push(_81560_ta);;
	};
	jule::Ptr<_20d8e3680_TypeKind> _87417_tk = jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Generic=_81560_ta.get()._field_Generic, ._field_Kind=_81560_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_20d9032e9_pushReferenceByKind(&(*_self_), _87417_tk);
	if (_81560_ta.get()._field_CppLinked) {
		_87417_tk.get()._field_CppIdent=_81560_ta.get()._field_Ident;
	} else {
		_87417_tk.get()._field_CppIdent=_81560_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_20d8e3251_Kind>(_87417_tk, 5);;
}



inline jule::Ptr<_20d81b0ad_Enum> _20d904680_fromEnum(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb898b1_IdentTypeDecl>& _88728_decl, jule::Ptr<_20d81b0ad_Enum>& _88755_e) {
	if ((!(_20d850532_isAccessibleDefine((*_self_)._field_s.ptr(), _88755_e.get()._field_Public,_88755_e.get()._field_Token)))) {
		_20d902639_pushErr(&(*_self_), _88728_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_88728_decl.get()._field_Ident)}));
		return nullptr;;
	};
	if ((_88728_decl.get()._field_Generics.len() > 0LL)) {
		_20d902639_pushErr(&(*_self_), _88728_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_88728_decl.get()._field_Ident)}));
		return nullptr;;
	};
	return _88755_e;;
}



inline jule::Ptr<_20d81b82d_TypeEnum> _20d904a37_fromTypeEnum(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb898b1_IdentTypeDecl>& _89932_decl, jule::Ptr<_20d81b82d_TypeEnum>& _89959_e) {
	if ((!(_20d850532_isAccessibleDefine((*_self_)._field_s.ptr(), _89959_e.get()._field_Public,_89959_e.get()._field_Token)))) {
		_20d902639_pushErr(&(*_self_), _89932_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_89932_decl.get()._field_Ident)}));
		return nullptr;;
	};
	if ((_89932_decl.get()._field_Generics.len() > 0LL)) {
		_20d902639_pushErr(&(*_self_), _89932_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_89932_decl.get()._field_Ident)}));
		return nullptr;;
	};
	return _89959_e;;
}



inline jule::Ptr<_20d81a3ed_Trait> _20d904dde_fromTrait(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb898b1_IdentTypeDecl>& _91129_decl, jule::Ptr<_20d81a3ed_Trait>& _91156_t) {
	if ((!(_20d850532_isAccessibleDefine((*_self_)._field_s.ptr(), _91156_t.get()._field_Public,_91156_t.get()._field_Token)))) {
		_20d902639_pushErr(&(*_self_), _91129_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_91129_decl.get()._field_Ident)}));
		return nullptr;;
	};
	if ((_91129_decl.get()._field_Generics.len() > 0LL)) {
		_20d902639_pushErr(&(*_self_), _91129_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_91129_decl.get()._field_Ident)}));
		return nullptr;;
	};
	_1c91ae9a8_pushReference(&(*_self_), _91156_t);
	return _91156_t;;
}



inline jule::Bool _20d905296_checkStructIns(_20d901e30_typeChecker* _self_, jule::Ptr<_20cba5db6_StructIns>& _92438_ins, jule::Ptr<_20b4e5581_Token>& _92460_errorToken) {
	jule::Bool __jule_func_result = false;
	if (_92438_ins.get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_92438_ins.get()._field_Checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _92438_ins.get()._field_Decl))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_20d863ec4_precheckStructIns((*_self_)._field_s, _92438_ins,_92460_errorToken)))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((_92438_ins.get()._field_Generics.len() > 0LL)) {
		_20d864942_checkStructInsOperators((*_self_)._field_s, _92438_ins);
		_20d864249_checkStructIns((*_self_)._field_s, _92438_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _20d90553d_appendUsedStructReference(_20d901e30_typeChecker* _self_, jule::Ptr<_20cba59dc_Struct>& _94549_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is_ptr<_20cba59dc_Struct>()) {
			_case_begin_1c91d9b37:;
			{
				jule::Ptr<_20cba59dc_Struct> _95121_refS = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_20cba59dc_Struct>();;
				if ((!(_20cb69bb0_IsUses(_95121_refS.ptr(), _94549_s)))) {
					_95121_refS.get()._field_Uses = jule::alloc_for_append(_95121_refS.get()._field_Uses,1);_95121_refS.get()._field_Uses.__push(_94549_s);;
				};
			}
		}
		_match_end_1c91d9ad2:;
	};
}



inline jule::Ptr<_20cba5db6_StructIns> _20d905906_buildStructInstance(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb898b1_IdentTypeDecl>& _95843_decl, jule::Ptr<_20cba59dc_Struct>& _95870_s) {
	jule::Ptr<_20d90111b_referencer> _96017_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>> _96217_bannedGenerics = (*_self_)._field_bannedGenerics;;
	if (((*_self_)._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_20d82c3aa_scopeChecker>>()) {
				_case_begin_1c91dc7d8:;
				{
					jule::Ptr<_20d82c3aa_scopeChecker> _96925_sc = (*_self_)._field_lookup.operator jule::Ptr<_20d82c3aa_scopeChecker>();;
					jule::Ptr<_20d82c3aa_scopeChecker> _97025_hard = _20d830765_getHardRoot(_96925_sc);;
					if (((_97025_hard.get()._field_owner.get()._field_Owner == nullptr) || (_97025_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != _95870_s))) {
						goto _match_end_1c91dc783;
					};
					jule::I64 _97421_n = (_97025_hard.get()._field_owner.get()._field_Generics.len() + _97025_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*_self_)._field_bannedGenerics=_97025_hard.get()._field_table.get()._field_TypeAliases.slice(0LL,_97421_n);
				}
			}
			_match_end_1c91dc783:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Trait<_20d90e536_Lookup> _98417_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=(*_self_)._field_rootLookup;
	jule::Ptr<_20cba5db6_StructIns> _98817_ins = _20cb5c433_instance(_95870_s);;
	_98817_ins.get()._field_Generics=jule::Slice<jule::Ptr<_20d8e1e53_InsGeneric>>::alloc(0LL, _95843_decl.get()._field_Generics.len());
	{
		auto &expr = _95843_decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c91e1bd8:;
		if (it != expr.end()) {
			jule::Ptr<_20cb892ea_TypeDecl> _99021_g = *it;
			{
				jule::Ptr<_20d8e3680_TypeKind> _99121_kind = _20d908d8d_build(&(*_self_), _99021_g.get()._field_Kind);;
				if ((_99121_kind == nullptr)) {
					return nullptr;;
				};
				_98817_ins.get()._field_Generics = jule::alloc_for_append(_98817_ins.get()._field_Generics,1);_98817_ins.get()._field_Generics.__push(jule::new_ptr<_20d8e1e53_InsGeneric>(_20d8e1e53_InsGeneric{._field_Kind=_99121_kind, }));;
			}
			_iter_next_1c91e1bd8:;
			++it;
			goto _iter_begin_1c91e1bd8;
		}
		_iter_end_1c91e1bd8:;
	};
	(*_self_)._field_lookup=_98417_lookup;
	(*_self_)._field_bannedGenerics=_96217_bannedGenerics;
	(*_self_)._field_referencer=_96017_referencer;
	return _98817_ins;;
}



inline jule::Ptr<_20cba5db6_StructIns> _20d905cad_fromStruct(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb898b1_IdentTypeDecl>& _100634_decl, jule::Ptr<_20cba59dc_Struct>& _100661_s) {
	if ((!(_20d850532_isAccessibleDefine((*_self_)._field_s.ptr(), _100661_s.get()._field_Public,_100661_s.get()._field_Token)))) {
		_20d902639_pushErr(&(*_self_), _100634_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_100634_decl.get()._field_Ident)}));
		return nullptr;;
	};
	if ((*_self_)._field_selection) {
		if ((_100634_decl.get()._field_Generics.len() > 0LL)) {
			_20d902639_pushErr(&(*_self_), _100634_decl.get()._field_Token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_20cba5db6_StructIns>(_20cba5db6_StructIns{._field_Decl=_100661_s, });;
	};
	jule::Bool _102417_ok = ((*_self_)._field_notPlain || _20d903e21_checkIllegalCycles(&(*_self_), _100634_decl,jule::Any(_100661_s)));;
	if ((!(_102417_ok))) {
		return nullptr;;
	};
	_20d90553d_appendUsedStructReference(&(*_self_), _100661_s);
	jule::Ptr<_20cba5db6_StructIns> _103017_ins = _20d905906_buildStructInstance(&(*_self_), _100634_decl,_100661_s);;
	if ((_103017_ins == nullptr)) {
		return nullptr;;
	};
	_102417_ok=_20d851203_checkGenericQuantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_103017_ins.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_103017_ins.get()._field_Generics.len()),_100634_decl.get()._field_Token);
	if ((!(_102417_ok))) {
		return nullptr;;
	};
	jule::Ptr<_20cba5db6_StructIns> _104017_existInstance = _20cb61206_appendInstance(_100661_s.ptr(), _103017_ins);;
	if ((_104017_existInstance != nullptr)) {
		if ((!(_20d8584e6_checkConstraintsStruct((*_self_)._field_s, _103017_ins,_100634_decl.get()._field_Token,_104017_existInstance)))) {
			return nullptr;;
		};
		_1c91abab5_pushReference(&(*_self_), _104017_existInstance);
		return _104017_existInstance;;
	};
	if ((!(_20d905296_checkStructIns(&(*_self_), _103017_ins,_100634_decl.get()._field_Token)))) {
		return nullptr;;
	};
	_1c91abab5_pushReference(&(*_self_), _103017_ins);
	return _103017_ins;;
}



inline jule::Trait<_20d8e3251_Kind> _20d9060bb_getDef(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb898b1_IdentTypeDecl>& _106430_decl) {
	{
		auto &expr = (*_self_)._field_ignoreGenerics;
		auto it = expr.begin();
		_iter_begin_1c91eb330:;
		if (it != expr.end()) {
			jule::Ptr<_20cb965e3_GenericDecl> _106516_g = *it;
			{
				if ((_106516_g.get()._field_Ident == _106430_decl.get()._field_Ident)) {
					return jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(_106516_g.get()._field_Ident), 6);;
				};
			}
			_iter_next_1c91eb330:;
			++it;
			goto _iter_begin_1c91eb330;
		}
		_iter_end_1c91eb330:;
	};
	{
		auto &expr = (*_self_)._field_useGenerics;
		auto it = expr.begin();
		_iter_begin_1c91eb4b7:;
		if (it != expr.end()) {
			jule::Ptr<_20d8e298c_TypeAlias> _107121_g = *it;
			{
				if ((_107121_g.get()._field_Ident == _106430_decl.get()._field_Ident)) {
					if ((_106430_decl.get()._field_Generics.len() > 0LL)) {
						_20d902639_pushErr(&(*_self_), _106430_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_106430_decl.get()._field_Ident)}));
						return nullptr;;
					};
					jule::Ptr<_20cba5db6_StructIns> _107725_st = _20d8e6e69_Struct(_107121_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_107725_st != nullptr)) {
						jule::Bool _107925_ok = _20d903e21_checkIllegalCycles(&(*_self_), _106430_decl,jule::Any(_107725_st.get()._field_Decl));;
						if ((!(_107925_ok))) {
							return nullptr;;
						};
					};
					return _107121_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_1c91eb4b7:;
			++it;
			goto _iter_begin_1c91eb4b7;
		}
		_iter_end_1c91eb4b7:;
	};
	if ((!(_106430_decl.get()._field_CppLinked))) {
		jule::Ptr<_20d81b0ad_Enum> _108921_e = _20d90e536_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._20d90e0d5_FindEnum((*_self_)._field_lookup, _106430_decl.get()._field_Ident);;
		if ((_108921_e != nullptr)) {
			return jule::Trait<_20d8e3251_Kind>(_20d904680_fromEnum(&(*_self_), _106430_decl,_108921_e), 3);;
		};
		jule::Ptr<_20d81b82d_TypeEnum> _109421_te = _20d90e536_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._20d90e3e3_FindTypeEnum((*_self_)._field_lookup, _106430_decl.get()._field_Ident);;
		if ((_109421_te != nullptr)) {
			return jule::Trait<_20d8e3251_Kind>(_20d904a37_fromTypeEnum(&(*_self_), _106430_decl,_109421_te), 4);;
		};
		jule::Ptr<_20d81a3ed_Trait> _109921_t = _20d90e536_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._20d90dcc7_FindTrait((*_self_)._field_lookup, _106430_decl.get()._field_Ident);;
		if ((_109921_t != nullptr)) {
			return jule::Trait<_20d8e3251_Kind>(_20d904dde_fromTrait(&(*_self_), _106430_decl,_109921_t), 2);;
		};
	} else if ((*_self_)._field_selection) {
		_20d902639_pushErr(&(*_self_), _106430_decl.get()._field_Token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20cba59dc_Struct> _110817_s = _20d90e536_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._20d90d612_FindStruct((*_self_)._field_lookup, _106430_decl.get()._field_Ident,_106430_decl.get()._field_CppLinked);;
	if ((_110817_s != nullptr)) {
		return jule::Trait<_20d8e3251_Kind>(_20d905cad_fromStruct(&(*_self_), _106430_decl,_110817_s), 0);;
	};
	jule::Ptr<_20d8e298c_TypeAlias> _111317_ta = _20d90e536_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._20d90d25a_FindTypeAlias((*_self_)._field_lookup, _106430_decl.get()._field_Ident,_106430_decl.get()._field_CppLinked);;
	if (((_111317_ta == nullptr) && (!((*_self_)._field_disBuiltin)))) {
		_111317_ta=_20d91d732_findBuiltinTypeAlias(_106430_decl.get()._field_Ident);
	};
	if ((_111317_ta != nullptr)) {
		return _20d9042c8_fromTypeAlias(&(*_self_), _106430_decl,_111317_ta);;
	};
	_20d902639_pushErr(&(*_self_), _106430_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_106430_decl.get()._field_Ident)}));
	return nullptr;;
}



inline jule::Trait<_20d8e3251_Kind> _20d9063c9_buildIdent(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb898b1_IdentTypeDecl> _112533_decl) {
	{
		
		if (_20d90bde6_isPrim(_112533_decl.get()._field_Ident)) {
			_case_begin_1c920734c:;
			{
				return jule::Trait<_20d8e3251_Kind>(_20d902cee_buildPrim(&(*_self_), _112533_decl), 6);;
			}
		}
		else {
			_case_begin_1c9206b54:;
			{
				return _20d9060bb_getDef(&(*_self_), _112533_decl);;
			}
		}
		_match_end_1c9206a88:;
	};
}



inline jule::Trait<_20d8e3251_Kind> _20d9066d7_buildSubIdent(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb8a010_SubIdentTypeDecl> _113436_decl) {
	jule::Trait<_20d8e3251_Kind> _113517_ident = _20d9063c9_buildIdent(&(*_self_), _113436_decl.get()._field_Idents[0LL]);;
	if ((_113517_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _113517_ident };
		
		if (_match_expr.type_is<jule::Ptr<_20d81b82d_TypeEnum>>()) {
			_case_begin_1c9208b78:;
			{
				goto _match_end_1c9208a8a;
			}
		}
		else {
			_case_begin_1c9208958:;
			{
				_20d902639_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c9208a8a:;
	};
	jule::Ptr<_20d81b82d_TypeEnum> _114617_t = _113517_ident.operator jule::Ptr<_20d81b82d_TypeEnum>();;
	jule::Slice<jule::Ptr<_20cb898b1_IdentTypeDecl>> _114717_idents = _113436_decl.get()._field_Idents.slice(1LL);;
	{
		auto &expr = _114717_idents;
		auto it = expr.begin();
		_iter_begin_1c920a053:;
		if (it != expr.end()) {
			jule::I64 _114813_i = it - expr.begin();
			jule::Ptr<_20cb898b1_IdentTypeDecl> _114816_id = *it;
			{
				jule::Ptr<_20d81b641_TypeEnumItem> _114921_item = _20d81bdb1_FindItem(_114617_t.ptr(), _114816_id.get()._field_Ident);;
				if ((_114921_item == nullptr)) {
					_20d902639_pushErr(&(*_self_), _114816_id.get()._field_Token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_114617_t.get()._field_Ident),jule::Any(_114816_id.get()._field_Ident)}));
					return nullptr;;
				};
				if (((_114717_idents.len() - _114813_i) == 1LL)) {
					_20d9032e9_pushReferenceByKind(&(*_self_), _114921_item.get()._field_Kind.get()._field_Kind);
					return jule::Trait<_20d8e3251_Kind>(_114921_item.get()._field_Kind.get()._field_Kind, 5);;
				};
				_114617_t=_20d8e64b8_TypeEnum(_114921_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_114617_t == nullptr)) {
					_20d902639_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1c920a053:;
			++it;
			_114813_i++;
			goto _iter_begin_1c920a053;
		}
		_iter_end_1c920a053:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d8ebb61_Sptr> _20d9069e5_buildSptrFromType(_20d901e30_typeChecker* _self_, jule::Ptr<_20d8e3680_TypeKind>& _116841_elem) {
	{
		
		if ((_116841_elem == nullptr)) {
			_case_begin_1c920de14:;
			{
				return nullptr;;
			}
		}
		else if ((_20d8e6e69_Struct(_116841_elem.ptr()) != nullptr)) {
			_case_begin_1c920de8b:;
			{
				jule::Ptr<_20cba5db6_StructIns> _117417_s = _20d8e6e69_Struct(_116841_elem.ptr());;
				if (((_117417_s.get()._field_Decl != nullptr) && _117417_s.get()._field_Decl.get()._field_CppLinked)) {
					_20d902639_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_20d8e672c_Arr(_116841_elem.ptr()) != nullptr) && _20d8e672c_Arr(_116841_elem.ptr()).get()._field_Auto)) {
			_case_begin_1c920e013:;
			{
				_20d902639_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c920d562:;
	};
	return jule::new_ptr<_20d8ebb61_Sptr>(_20d8ebb61_Sptr{._field_Elem=_116841_elem});;
}



inline jule::Ptr<_20d8ebb61_Sptr> _20d906d03_buildSptr(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb8a6a3_SptrTypeDecl> _118832_decl) {
	jule::Bool _118913_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_118913_notPlain;
	});;
	jule::Ptr<_20d8e3680_TypeKind> _119317_elem = _20d90919b_checkDecl(&(*_self_), _118832_decl.get()._field_Elem);;
	return _20d9069e5_buildSptrFromType(&(*_self_), _119317_elem);;
}



inline jule::Ptr<_20d9001c5_Ptr> _20d907111_buildPtrFromType(_20d901e30_typeChecker* _self_, jule::Ptr<_20d8e3680_TypeKind>& _119740_elem) {
	{
		
		if ((_119740_elem == nullptr)) {
			_case_begin_1c9213d1a:;
			{
				return nullptr;;
			}
		}
		else if (((_20d8e672c_Arr(_119740_elem.ptr()) != nullptr) && _20d8e672c_Arr(_119740_elem.ptr()).get()._field_Auto)) {
			_case_begin_1c9213d92:;
			{
				_20d902639_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_20d9001c5_Ptr>();;
			}
		}
		_match_end_1c9213c0a:;
	};
	return jule::new_ptr<_20d9001c5_Ptr>(_20d9001c5_Ptr{._field_Elem=_119740_elem});;
}



inline jule::Ptr<_20d9001c5_Ptr> _20d90741e_buildPtr(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb8b176_PtrTypeDecl> _121231_decl) {
	jule::Bool _121313_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_121313_notPlain;
	});;
	jule::Ptr<_20d8e3680_TypeKind> _121717_elem = nullptr;;
	if ((!(_20cb8b4c8_IsUnsafe(_121231_decl.ptr())))) {
		_121717_elem=_20d90919b_checkDecl(&(*_self_), _121231_decl.get()._field_Elem);
		return _20d907111_buildPtrFromType(&(*_self_), _121717_elem);;
	};
	return jule::new_ptr<_20d9001c5_Ptr>(_20d9001c5_Ptr{._field_Elem=_121717_elem});;
}



inline jule::Ptr<_20d8ec5bd_Slc> _20d90772c_buildSlc(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb8aa9e_SlcTypeDecl> _122931_decl) {
	jule::Bool _123013_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_123013_notPlain;
	});;
	jule::Ptr<_20d8e3680_TypeKind> _123417_elem = _20d90919b_checkDecl(&(*_self_), _122931_decl.get()._field_Elem);;
	{
		
		if ((_123417_elem == nullptr)) {
			_case_begin_1c9218ddb:;
			{
				return nullptr;;
			}
		}
		else if (((_20d8e672c_Arr(_123417_elem.ptr()) != nullptr) && _20d8e672c_Arr(_123417_elem.ptr()).get()._field_Auto)) {
			_case_begin_1c9218e63:;
			{
				_20d902639_pushErr(&(*_self_), _122931_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c9218d31:;
	};
	return jule::new_ptr<_20d8ec5bd_Slc>(_20d8ec5bd_Slc{._field_Elem=_123417_elem});;
}



inline jule::Ptr<_20d8ee768_Arr> _20d907a3a_buildArr(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb8b808_ArrTypeDecl> _125031_decl) {
	jule::Bool _125113_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_125113_notPlain;
	});;
	jule::I64 _125517_n = 0LL;;
	if ((!(_20cb8bbd2_AutoSized(_125031_decl.ptr())))) {
		jule::Ptr<_20d8b2891_Data> _125821_size = _20d8ced31_evalExpr(_20d856747_eval((*_self_)._field_s, (*_self_)._field_lookup), _125031_decl.get()._field_Size);;
		if ((_125821_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_20d8b3254_IsConst(_125821_size.ptr())))) {
			_20d902639_pushErr(&(*_self_), _125031_decl.get()._field_Size.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_20d8e5a17_Prim(_125821_size.get()._field_Kind.ptr()) == nullptr) || (!(_20d809cd3_IsInt(_20d8e5a17_Prim(_125821_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_20d902639_pushErr(&(*_self_), _125031_decl.get()._field_Size.get()._field_Token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_125517_n=static_cast<jule::I64>(static_cast<jule::I64>(_20d80acb2_AsI64(_125821_size.get()._field_Constant.ptr())));
		if ((_125517_n < 0LL)) {
			_20d902639_pushErr(&(*_self_), _125031_decl.get()._field_Elem.get()._field_Token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_20ccc2114_BitSize != 64LL) && (static_cast<jule::F64>(_125517_n) > _20d807819_Max(jule::Str("int", 3))))) {
			_20d902639_pushErr(&(*_self_), _125031_decl.get()._field_Size.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_20d8e3680_TypeKind> _128117_elem = _20d90919b_checkDecl(&(*_self_), _125031_decl.get()._field_Elem);;
	{
		
		if ((_128117_elem == nullptr)) {
			_case_begin_1c92225ed:;
			{
				return nullptr;;
			}
		}
		else if (((_20d8e672c_Arr(_128117_elem.ptr()) != nullptr) && _20d8e672c_Arr(_128117_elem.ptr()).get()._field_Auto)) {
			_case_begin_1c9222664:;
			{
				_20d902639_pushErr(&(*_self_), _125031_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c9222400:;
	};
	return jule::new_ptr<_20d8ee768_Arr>(_20d8ee768_Arr{._field_Auto=_20cb8bbd2_AutoSized(_125031_decl.ptr()), ._field_N=_125517_n, ._field_Elem=_128117_elem});;
}



inline jule::Ptr<_20d8edb74_Map> _20d907d48_buildMap(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb8c056_MapTypeDecl> _129931_decl) {
	jule::Bool _130013_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_130013_notPlain;
	});;
	jule::Ptr<_20d8e3680_TypeKind> _130417_key = _20d90919b_checkDecl(&(*_self_), _129931_decl.get()._field_Key);;
	if ((_130417_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20d8e3680_TypeKind> _130917_val = _20d90919b_checkDecl(&(*_self_), _129931_decl.get()._field_Val);;
	if ((_130917_val == nullptr)) {
		return nullptr;;
	};
	if ((_20d8e6254_Enum(_130917_val.ptr()) != nullptr)) {
		_20d902639_pushErr(&(*_self_), _129931_decl.get()._field_Val.get()._field_Token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_20d8edb74_Map>(_20d8edb74_Map{._field_Key=_130417_key, ._field_Val=_130917_val});;
}



inline jule::Ptr<_20d8ed14b_Tuple> _20d908156_buildTuple(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb8ad8a_TupleTypeDecl> _132333_decl) {
	jule::Slice<jule::Ptr<_20d8e3680_TypeKind>> _132417_types = jule::Slice<jule::Ptr<_20d8e3680_TypeKind>>::alloc(0LL, _132333_decl.get()._field_Types.len());;
	{
		auto &expr = _132333_decl.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1c9227cc9:;
		if (it != expr.end()) {
			jule::Ptr<_20cb892ea_TypeDecl> _132521_t = *it;
			{
				jule::Ptr<_20d8e3680_TypeKind> _132621_kind = _20d90919b_checkDecl(&(*_self_), _132521_t);;
				if ((_132621_kind == nullptr)) {
					return nullptr;;
				};
				_132417_types = jule::alloc_for_append(_132417_types,1);_132417_types.__push(_132621_kind);;
			}
			_iter_next_1c9227cc9:;
			++it;
			goto _iter_begin_1c9227cc9;
		}
		_iter_end_1c9227cc9:;
	};
	return jule::new_ptr<_20d8ed14b_Tuple>(_20d8ed14b_Tuple{._field_Types=_132417_types});;
}



inline jule::Bool _20d908464_checkFnTypes(_20d901e30_typeChecker* _self_, jule::Ptr<_20d814749_FnIns>& _133636_f) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _133636_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c92298be:;
		if (it != expr.end()) {
			jule::Ptr<_20d81455c_ParamIns> _133721_p = *it;
			{
				_133721_p.get()._field_Kind=_20d908d8d_build(&(*_self_), _133721_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind);
				__jule_func_result=(_133721_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_20d858b23_checkFnParamKind((*_self_)._field_s, _133721_p);
			}
			_iter_next_1c92298be:;
			++it;
			goto _iter_begin_1c92298be;
		}
		_iter_end_1c92298be:;
	};
	if ((!(_20cbeec56_IsVoid(_133636_f.get()._field_Decl.ptr())))) {
		_133636_f.get()._field_Result=_20d908d8d_build(&(*_self_), _133636_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind);
		__jule_func_result = (_133636_f.get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_20d814749_FnIns> _20d908772_buildFn(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb9ac79_FnDecl> _135430_decl) {
	if ((_135430_decl.get()._field_Generics.len() > 0LL)) {
		_20d902639_pushErr(&(*_self_), _135430_decl.get()._field_Token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d814370_Fn> _136017_f = _20d816cac_buildFn(_135430_decl);;
	jule::I64 _136213_n = (*_self_)._field_s.get()._field_errors.len();;
	_20d860a3c_checkFnDecl((*_self_)._field_s, _136017_f);
	if ((_136213_n != (*_self_)._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_20d814749_FnIns> _136817_ins = _20cbe58ea_instanceForce(_136017_f);;
	_136817_ins.get()._field_Anon=true;
	jule::Bool _137113_ok = _20d908464_checkFnTypes(&(*_self_), _136817_ins);;
	if ((!(_137113_ok))) {
		return nullptr;;
	};
	return _136817_ins;;
}



inline jule::Trait<_20d8e3251_Kind> _20d908a80_buildByNamespace(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb8a3b7_NamespaceTypeDecl> _137939_decl) {
	jule::Str _138013_path = _20d90b500_buildLinkPathByTokens(_137939_decl.get()._field_Idents);;
	jule::Ptr<_20d84404d_ImportInfo> _138117_imp = _20d90e536_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._20d90c9eb_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_20d84404d_ImportInfo>)>([=](jule::Ptr<_20d84404d_ImportInfo> _138152_imp) mutable -> jule::Bool {
		if (((_137939_decl.get()._field_Idents.len() == 1LL) && (_138152_imp.get()._field_Alias == _138013_path))) {
			return true;;
		};
		return ((_138152_imp.get()._field_LinkPath == _138013_path) && _20d846baa_isAccessibleViaSelection(_138152_imp.ptr()));;
	}));;
	if (((_138117_imp == nullptr) || (!(_20d846616_isLookupable(_138117_imp.ptr(), jule::Str("self", 4)))))) {
		_20d902639_pushErr(&(*_self_), _137939_decl.get()._field_Idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_138013_path)}));
		return nullptr;;
	};
	_20d9029e1_disallowBuiltin(&(*_self_));
	jule::Trait<_20d90e536_Lookup> _139417_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_20d90e536_Lookup>(_138117_imp, 1);
	jule::Ptr<_20d8e3680_TypeKind> _139617_kind = _20d90919b_checkDecl(&(*_self_), _137939_decl.get()._field_Kind);;
	(*_self_)._field_lookup=_139417_lookup;
	_20d902815_allowBuiltin(&(*_self_));
	return jule::Trait<_20d8e3251_Kind>(_139617_kind, 5);;
}



inline jule::Ptr<_20d8e3680_TypeKind> _20d908d8d_build(_20d901e30_typeChecker* _self_, jule::Any& _140229_declKind) {
	jule::Trait<_20d8e3251_Kind> _140317_kind = nullptr;;
	{
		auto &_match_expr{ _140229_declKind };
		
		if (_match_expr.type_is_ptr<_20cb898b1_IdentTypeDecl>()) {
			_case_begin_1c923690e:;
			{
				jule::Trait<_20d8e3251_Kind> _140621_t = _20d9063c9_buildIdent(&(*_self_), _140229_declKind.operator jule::Ptr<_20cb898b1_IdentTypeDecl>());;
				if ((_140621_t != nullptr)) {
					_140317_kind=_140621_t;
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8a010_SubIdentTypeDecl>()) {
			_case_begin_1c9237712:;
			{
				jule::Trait<_20d8e3251_Kind> _141121_t = _20d9066d7_buildSubIdent(&(*_self_), _140229_declKind.operator jule::Ptr<_20cb8a010_SubIdentTypeDecl>());;
				if ((_141121_t != nullptr)) {
					_140317_kind=_141121_t;
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8a6a3_SptrTypeDecl>()) {
			_case_begin_1c9237778:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_20d8ebb61_Sptr> _141721_t = _20d906d03_buildSptr(&(*_self_), _140229_declKind.operator jule::Ptr<_20cb8a6a3_SptrTypeDecl>());;
				if ((_141721_t != nullptr)) {
					_140317_kind=jule::Trait<_20d8e3251_Kind>(_141721_t, 7);
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8b176_PtrTypeDecl>()) {
			_case_begin_1c9236dd7:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_20d9001c5_Ptr> _142321_t = _20d90741e_buildPtr(&(*_self_), _140229_declKind.operator jule::Ptr<_20cb8b176_PtrTypeDecl>());;
				if ((_142321_t != nullptr)) {
					_140317_kind=jule::Trait<_20d8e3251_Kind>(_142321_t, 12);
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8aa9e_SlcTypeDecl>()) {
			_case_begin_1c9236e4d:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_20d8ec5bd_Slc> _142921_t = _20d90772c_buildSlc(&(*_self_), _140229_declKind.operator jule::Ptr<_20cb8aa9e_SlcTypeDecl>());;
				if ((_142921_t != nullptr)) {
					_140317_kind=jule::Trait<_20d8e3251_Kind>(_142921_t, 8);
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8b808_ArrTypeDecl>()) {
			_case_begin_1c9236eb4:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_20d8ee768_Arr> _143521_t = _20d907a3a_buildArr(&(*_self_), _140229_declKind.operator jule::Ptr<_20cb8b808_ArrTypeDecl>());;
				if ((_143521_t != nullptr)) {
					_140317_kind=jule::Trait<_20d8e3251_Kind>(_143521_t, 11);
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8c056_MapTypeDecl>()) {
			_case_begin_1c923702a:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_20d8edb74_Map> _144121_t = _20d907d48_buildMap(&(*_self_), _140229_declKind.operator jule::Ptr<_20cb8c056_MapTypeDecl>());;
				if ((_144121_t != nullptr)) {
					_140317_kind=jule::Trait<_20d8e3251_Kind>(_144121_t, 10);
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8ad8a_TupleTypeDecl>()) {
			_case_begin_1c9237932:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_20d8ed14b_Tuple> _144721_t = _20d908156_buildTuple(&(*_self_), _140229_declKind.operator jule::Ptr<_20cb8ad8a_TupleTypeDecl>());;
				if ((_144721_t != nullptr)) {
					_140317_kind=jule::Trait<_20d8e3251_Kind>(_144721_t, 9);
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20cb9ac79_FnDecl>()) {
			_case_begin_1c9237998:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_20d814749_FnIns> _145321_t = _20d908772_buildFn(&(*_self_), _140229_declKind.operator jule::Ptr<_20cb9ac79_FnDecl>());;
				if ((_145321_t != nullptr)) {
					_140317_kind=jule::Trait<_20d8e3251_Kind>(_145321_t, 1);
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8a3b7_NamespaceTypeDecl>()) {
			_case_begin_1c9237a0e:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_20d8e3251_Kind> _145921_t = _20d908a80_buildByNamespace(&(*_self_), _140229_declKind.operator jule::Ptr<_20cb8a3b7_NamespaceTypeDecl>());;
				if ((_145921_t != nullptr)) {
					_140317_kind=_145921_t;
				};
			}
		}
		else {
			_case_begin_1c9236c83:;
			{
				_20d902639_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c9236b95:;
	};
	if ((_140317_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _140317_kind };
		
		if (_match_expr.type_is<jule::Ptr<_20d8e3680_TypeKind>>()) {
			_case_begin_1c92439b5:;
			{
				return _140317_kind.operator jule::Ptr<_20d8e3680_TypeKind>();;
			}
		}
		else {
			_case_begin_1c9243a5e:;
			{
				return jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=_140317_kind});;
			}
		}
		_match_end_1c9243685:;
	};
}



inline jule::Ptr<_20d8e3680_TypeKind> _20d90919b_checkDecl(_20d901e30_typeChecker* _self_, jule::Ptr<_20cb892ea_TypeDecl>& _148033_decl) {
	jule::Ptr<_20b4e5581_Token> _148217_errorToken = (*_self_)._field_errorToken;;
	(*_self_)._field_errorToken=_148033_decl.get()._field_Token;
	jule::Ptr<_20d8e3680_TypeKind> _148517_kind = _20d908d8d_build(&(*_self_), _148033_decl.get()._field_Kind);;
	(*_self_)._field_errorToken=_148217_errorToken;
	return _148517_kind;;
}



inline void _20d909421_check(_20d901e30_typeChecker* _self_, jule::Ptr<_20d8e7a5d_TypeSymbol>& _149129_t) {
	if ((_149129_t.get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_20d8e3680_TypeKind> _149517_kind = _20d90919b_checkDecl(&(*_self_), _149129_t.get()._field_Decl);;
	if ((_149517_kind == nullptr)) {
		_20d8e80e1_removeKind(_149129_t.ptr());
		return;;
	};
	_149129_t.get()._field_Kind=_149517_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _20d901e30_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__20d909a81_identTypeDecl(jule::Str& _150730_ident, jule::Ptr<_20cb898b1_IdentTypeDecl> _150742_t) {
	if ((_150742_t.get()._field_Ident == _150730_ident)) {
		return true;;
	};
	{
		auto &expr = _150742_t.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c9247788:;
		if (it != expr.end()) {
			jule::Ptr<_20cb892ea_TypeDecl> &_151116_g = *it;
			{
				if (static__20d909dc2_exist(_150730_ident,_151116_g.get()._field_Kind)) {
					return true;;
				};
			}
			_iter_next_1c9247788:;
			++it;
			goto _iter_begin_1c9247788;
		}
		_iter_end_1c9247788:;
	};
	return false;;
}



inline jule::Bool static__20d909dc2_exist(jule::Str& _151922_ident, jule::Any& _151935_k) {
	{
		auto &_match_expr{ _151935_k };
		
		if (_match_expr.type_is_ptr<_20cb898b1_IdentTypeDecl>()) {
			_case_begin_1c9247db5:;
			{
				return static__20d909a81_identTypeDecl(_151922_ident,_151935_k.operator jule::Ptr<_20cb898b1_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8a010_SubIdentTypeDecl>()) {
			_case_begin_1c9248ca6:;
			{
				jule::Ptr<_20cb8a010_SubIdentTypeDecl> _152417_sit = _151935_k.operator jule::Ptr<_20cb8a010_SubIdentTypeDecl>();;
				{
					auto &expr = _152417_sit.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1c924a071:;
					if (it != expr.end()) {
						jule::Ptr<_20cb898b1_IdentTypeDecl> &_152520_id = *it;
						{
							if (static__20d909a81_identTypeDecl(_151922_ident,_152520_id)) {
								return true;;
							};
						}
						_iter_next_1c924a071:;
						++it;
						goto _iter_begin_1c924a071;
					}
					_iter_end_1c924a071:;
				};
				return false;;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8a6a3_SptrTypeDecl>()) {
			_case_begin_1c9248d1c:;
			{
				jule::Ptr<_20cb8a6a3_SptrTypeDecl> _153217_sptr = _151935_k.operator jule::Ptr<_20cb8a6a3_SptrTypeDecl>();;
				return static__20d909dc2_exist(_151922_ident,_153217_sptr.get()._field_Elem.get()._field_Kind);;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8b176_PtrTypeDecl>()) {
			_case_begin_1c9248d83:;
			{
				jule::Ptr<_20cb8b176_PtrTypeDecl> _153517_ptr = _151935_k.operator jule::Ptr<_20cb8b176_PtrTypeDecl>();;
				return static__20d909dc2_exist(_151922_ident,_153517_ptr.get()._field_Elem.get()._field_Kind);;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8aa9e_SlcTypeDecl>()) {
			_case_begin_1c92489ed:;
			{
				jule::Ptr<_20cb8aa9e_SlcTypeDecl> _153817_slc = _151935_k.operator jule::Ptr<_20cb8aa9e_SlcTypeDecl>();;
				return static__20d909dc2_exist(_151922_ident,_153817_slc.get()._field_Elem.get()._field_Kind);;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8b808_ArrTypeDecl>()) {
			_case_begin_1c9248a64:;
			{
				jule::Ptr<_20cb8b808_ArrTypeDecl> _154117_arr = _151935_k.operator jule::Ptr<_20cb8b808_ArrTypeDecl>();;
				return static__20d909dc2_exist(_151922_ident,_154117_arr.get()._field_Elem.get()._field_Kind);;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8c056_MapTypeDecl>()) {
			_case_begin_1c9248aca:;
			{
				jule::Ptr<_20cb8c056_MapTypeDecl> _154417_m = _151935_k.operator jule::Ptr<_20cb8c056_MapTypeDecl>();;
				return (static__20d909dc2_exist(_151922_ident,_154417_m.get()._field_Key.get()._field_Kind) || static__20d909dc2_exist(_151922_ident,_154417_m.get()._field_Val.get()._field_Kind));;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb9ac79_FnDecl>()) {
			_case_begin_1c9248b41:;
			{
				jule::Ptr<_20cb9ac79_FnDecl> _154817_f = _151935_k.operator jule::Ptr<_20cb9ac79_FnDecl>();;
				{
					auto &expr = _154817_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1c9250010:;
					if (it != expr.end()) {
						jule::Ptr<_20cb99959_ParamDecl> &_154920_p = *it;
						{
							if (_20cb99cbc_IsSelf(_154920_p.ptr())) {
								goto _iter_next_1c9250010;
							};
							if (static__20d909dc2_exist(_151922_ident,_154920_p.get()._field_Kind.get()._field_Kind)) {
								return true;;
							};
						}
						_iter_next_1c9250010:;
						++it;
						goto _iter_begin_1c9250010;
					}
					_iter_end_1c9250010:;
				};
				if ((_154817_f.get()._field_Result != nullptr)) {
					return static__20d909dc2_exist(_151922_ident,_154817_f.get()._field_Result.get()._field_Kind.get()._field_Kind);;
				};
				return false;;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8ad8a_TupleTypeDecl>()) {
			_case_begin_1c92490b4:;
			{
				jule::Ptr<_20cb8ad8a_TupleTypeDecl> _156217_tup = _151935_k.operator jule::Ptr<_20cb8ad8a_TupleTypeDecl>();;
				{
					auto &expr = _156217_tup.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1c9252221:;
					if (it != expr.end()) {
						jule::Ptr<_20cb892ea_TypeDecl> &_156320_t = *it;
						{
							if (static__20d909dc2_exist(_151922_ident,_156320_t.get()._field_Kind)) {
								return true;;
							};
						}
						_iter_next_1c9252221:;
						++it;
						goto _iter_begin_1c9252221;
					}
					_iter_end_1c9252221:;
				};
				return false;;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8a3b7_NamespaceTypeDecl>()) {
			_case_begin_1c924912a:;
			{
				jule::Ptr<_20cb8a3b7_NamespaceTypeDecl> _157017_ns = _151935_k.operator jule::Ptr<_20cb8a3b7_NamespaceTypeDecl>();;
				return static__20d909dc2_exist(_151922_ident,_157017_ns.get()._field_Kind.get()._field_Kind);;
			}
		}
		else {
			_case_begin_1c9248888:;
			{
				return false;;
			}
		}
		_match_end_1c9247e5e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d909641_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e11c41ae_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e121ccc9_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1e121dc86_stop(_1e121d604_scopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1e121deea_stopped(_1e121d604_scopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);;
}



inline jule::Bool _1e121e25e_finished(_1e121d604_scopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());;
}



inline jule::Bool _1e121e4c3_isLastSt(_1e121d604_scopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());;
}



inline void _1e121e7e2_pushErr(_1e121d604_scopeParser* _self_, jule::Ptr<_20b4e5581_Token> _19126_token, jule::Str _19141_fmt) {
	_1e123a6a9_pushErr((*_self_)._field_p.ptr(), _19126_token,_19141_fmt,jule::Slice<jule::Any>());
}



inline void _1e121eb11_pushSuggestion(_1e121d604_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_1e123a9c8_pushSuggestion((*_self_)._field_p.ptr(), _19633_fmt,_19646_args);
}



inline void _1e121ed86_insertAsNext(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _20036_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1e121ccc9_stmt>(_1e121ccc9_stmt{._field_tokens=_20036_tokens, });
}



inline jule::Ptr<_1e121ccc9_stmt> _1e12200ea_next(_1e121d604_scopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];;
}



inline jule::Ptr<_20cb99283_ScopeTree> _1e12204a2_buildScope(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _21034_tokens, jule::Ptr<_20b4e5581_Token> _21056_end) {
	jule::Ptr<_20cb99283_ScopeTree> _21117_s = _1e121bc0c_newScope();;
	_21117_s.get()._field_Parent=(*_self_)._field_s;
	_21117_s.get()._field_End=_21056_end;
	_1e121d604_scopeParser _21417_ssp = _1e121d604_scopeParser{._field_p=(*_self_)._field_p, };;
	_1e122918c_build(&_21417_ssp, _21034_tokens,_21117_s);
	return _21117_s;;
}



inline jule::Ptr<_20cb9bc58_VarDecl> _1e12207b0_buildVarSt(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _22134_tokens) {
	jule::Ptr<_20cb9bc58_VarDecl> _22217_v = _1e123d1e5_buildVar((*_self_)._field_p, _22134_tokens);;
	_22217_v.get()._field_Scope=(*_self_)._field_s;
	return _22217_v;;
}



inline jule::Ptr<_20cb9c110_RetSt> _1e1220abd_buildRetSt(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _22733_tokens) {
	jule::Ptr<_20cb9c110_RetSt> _22817_st = jule::new_ptr<_20cb9c110_RetSt>(_20cb9c110_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_1e123acd6_buildExpr((*_self_)._field_p, _22733_tokens);
	};
	return _22817_st;;
}



inline jule::Ptr<_20cb9c770_Iter> _1e1220dcb_buildWhileNextIter(_1e121d604_scopeParser* _self_, jule::Ptr<_1e121ccc9_stmt>& _23842_s) {
	jule::Ptr<_20cb9c770_Iter> _23917_it = jule::new_ptr<_20cb9c770_Iter>(_20cb9c770_Iter{._field_Token=_23842_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _24217_tokens = _23842_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_20cb9d045_WhileKind> _24317_kind = jule::new_ptr<_20cb9d045_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_1e123acd6_buildExpr((*_self_)._field_p, _24217_tokens);
	};
	if (_1e121e4c3_isLastSt(&(*_self_))) {
		_1e121e7e2_pushErr(&(*_self_), _23917_it.get()._field_Token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24217_tokens=_1e12200ea_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _25517_stTokens = _1e1234de0_getBlockExpr(_24217_tokens);;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_1e121ccc9_stmt> _25721_stmt = jule::new_ptr<_1e121ccc9_stmt>(_1e121ccc9_stmt{._field_tokens=_25517_stTokens, ._field_terminated=_23842_s.get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_1e1228d6d_buildSt(&(*_self_), _25721_stmt);
	};
	jule::I64 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _26617_blockTokens = _1e1237eae_range(_26517_i,jule::Str("{", 1),jule::Str("}", 1),_24217_tokens);;
	if ((_26617_blockTokens == nullptr)) {
		_1e121dc86_stop(&(*_self_));
		_1e121e7e2_pushErr(&(*_self_), _23917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1e121eb11_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_1e121e7e2_pushErr(&(*_self_), _24217_tokens[_26517_i],jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_1e12204a2_buildScope(&(*_self_), _26617_blockTokens,_24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=static_cast<jule::Any>(_24317_kind);
	return _23917_it;;
}



inline jule::Ptr<_20cb9d045_WhileKind> _1e12211d9_buildWhileIterKind(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _28342_tokens) {
	return jule::new_ptr<_20cb9d045_WhileKind>(_20cb9d045_WhileKind{._field_Expr=_1e123acd6_buildExpr((*_self_)._field_p, _28342_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _1e12214e7_getRangeKindKeysTokens(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _29018_vars;;
	jule::Slice<_20b1bc016_Log> _29024_errs;;
	({
		_ssx_20b4e5581_Token_s_20b1bc016_Log __jule_assign_result = _1e1238a2b_parts(_28946_toks,static_cast<jule::U64>(8LLU),true);
		_29018_vars = __jule_assign_result.__jule_result_arg0;
		_29024_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29024_errs);
	return _29018_vars;;
}



inline jule::Ptr<_20cb9bc58_VarDecl> _1e1221805_buildRangeKindKey(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _29541_tokens) {
	if ((_29541_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_20cb9bc58_VarDecl> _29917_key = jule::new_ptr<_20cb9bc58_VarDecl>(_20cb9bc58_VarDecl{._field_Token=_29541_tokens[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_29917_key.get()._field_Mutable=true;
		if ((_29541_tokens.len() == 1LL)) {
			_1e121e7e2_pushErr(&(*_self_), _29917_key.get()._field_Token,jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=_29541_tokens[1LL];
	} else if ((_29541_tokens.len() > 1LL)) {
		_1e121e7e2_pushErr(&(*_self_), _29541_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e121e7e2_pushErr(&(*_self_), _29917_key.get()._field_Token,jule::Str("invalid syntax", 14));
		_1e121eb11_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;;
}



inline jule::Slice<jule::Ptr<_20cb9bc58_VarDecl>> _1e1221b13_buildRangeKindKeys(_1e121d604_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>>& _32042_parts) {
	jule::Slice<jule::Ptr<_20cb9bc58_VarDecl>> _32117_keys = nullptr;;
	{
		auto &expr = _32042_parts;
		auto it = expr.begin();
		_iter_begin_209c9a024:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20b4e5581_Token>> _32221_tokens = *it;
			{
				_32117_keys = jule::alloc_for_append(_32117_keys,1);_32117_keys.__push(_1e1221805_buildRangeKindKey(&(*_self_), _32221_tokens));;
			}
			_iter_next_209c9a024:;
			++it;
			goto _iter_begin_209c9a024;
		}
		_iter_end_209c9a024:;
	};
	return _32117_keys;;
}



inline void _1e1221e54_setupRangeKindKeysPlain(_1e121d604_scopeParser* _self_, jule::Ptr<_20cb9d8d6_RangeKind>& _32847_rng, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _32917_keyTokens = _1e12214e7_getRangeKindKeysTokens(&(*_self_), _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_1e121e7e2_pushErr(&(*_self_), _32847_rng.get()._field_InToken,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_20cb9bc58_VarDecl>> _33617_keys = _1e1221b13_buildRangeKindKeys(&(*_self_), _32917_keyTokens);;
	_32847_rng.get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		_32847_rng.get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _1e12222a6_setupRangeKindKeysExplicit(_1e121d604_scopeParser* _self_, jule::Ptr<_20cb9d8d6_RangeKind>& _34350_rng, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _34372_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _34517_rang = _1e1237eae_range(_34417_i,jule::Str("(", 1),jule::Str(")", 1),_34372_tokens);;
	if ((_34417_i < _34372_tokens.len())) {
		_1e121e7e2_pushErr(&(*_self_), _34350_rng.get()._field_InToken,jule::Str("invalid syntax", 14));
	};
	_1e1221e54_setupRangeKindKeysPlain(&(*_self_), _34350_rng,_34517_rang);
}



inline void _1e12225d6_setupRangeKindKeys(_1e121d604_scopeParser* _self_, jule::Ptr<_20cb9d8d6_RangeKind>& _35242_rng, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _35264_tokens) {
	if ((_35264_tokens[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if ((_35264_tokens[0LL].get()._field_Kind != jule::Str("(", 1))) {
			_1e121e7e2_pushErr(&(*_self_), _35264_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1e12222a6_setupRangeKindKeysExplicit(&(*_self_), _35242_rng,_35264_tokens);
		return;;
	};
	_1e1221e54_setupRangeKindKeysPlain(&(*_self_), _35242_rng,_35264_tokens);
}



inline jule::Ptr<_20cb9d8d6_RangeKind> _1e1222a37_buildRangeIterKind(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _36442_var_tokens, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _36514_exprTokens, jule::Ptr<_20b4e5581_Token>& _36541_inToken) {
	jule::Ptr<_20cb9d8d6_RangeKind> _36617_rng = jule::new_ptr<_20cb9d8d6_RangeKind>(_20cb9d8d6_RangeKind{._field_InToken=_36541_inToken, });;
	if ((_36514_exprTokens.len() == 0LL)) {
		_1e121e7e2_pushErr(&(*_self_), _36617_rng.get()._field_InToken,jule::Str("expression missing", 18));
		return _36617_rng;;
	};
	_36617_rng.get()._field_Expr=_1e123acd6_buildExpr((*_self_)._field_p, _36514_exprTokens);
	if ((_36442_var_tokens.len() > 0LL)) {
		_1e12225d6_setupRangeKindKeys(&(*_self_), _36617_rng,_36442_var_tokens);
	};
	return _36617_rng;;
}



inline jule::Any _1e1222dde_buildCommonIterKind(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _38043_tokens, jule::Ptr<_20b4e5581_Token>& _38062_err_tok) {
	jule::I64 _38117_braceN = 0LL;;
	{
		auto &expr = _38043_tokens;
		auto it = expr.begin();
		_iter_begin_209ca5859:;
		if (it != expr.end()) {
			jule::I64 _38214_i = it - expr.begin();
			jule::Ptr<_20b4e5581_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_209ca6e54:;
							{
								(_38117_braceN)++;
								goto _iter_next_209ca5859;
							}
						}
						else {
							_case_begin_209ca6a47:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_209ca6838:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_209ca5859;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_209ca6eed:;
						{
							jule::Slice<jule::Ptr<_20b4e5581_Token>> _39925_declTokens = _38043_tokens.slice(0LL,_38214_i);;
							jule::Slice<jule::Ptr<_20b4e5581_Token>> _40025_exprTokens = _38043_tokens.slice((_38214_i + 1LL));;
							return static_cast<jule::Any>(_1e1222a37_buildRangeIterKind(&(*_self_), _39925_declTokens,_40025_exprTokens,_38221_tok));;
						}
					}
					_match_end_209ca77b2:;
				};
			}
			_iter_next_209ca5859:;
			++it;
			_38214_i++;
			goto _iter_begin_209ca5859;
		}
		_iter_end_209ca5859:;
	};
	return static_cast<jule::Any>(_1e12211d9_buildWhileIterKind(&(*_self_), _38043_tokens));;
}



inline jule::Ptr<_20cb9c770_Iter> _1e12231ec_buildCommonIter(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _40738_tokens) {
	jule::Ptr<_20cb9c770_Iter> _40817_it = jule::new_ptr<_20cb9c770_Iter>(_20cb9c770_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_1e121dc86_stop(&(*_self_));
		_1e121e7e2_pushErr(&(*_self_), _40817_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1e121eb11_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _41817_exprTokens = _1e1234de0_getBlockExpr(_40738_tokens);;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_1e1222dde_buildCommonIterKind(&(*_self_), _41817_exprTokens,_40817_it.get()._field_Token);
	};
	jule::I64 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _42317_scopeTokens = _1e1237eae_range(_42217_i,jule::Str("{", 1),jule::Str("}", 1),_40738_tokens);;
	if ((_42317_scopeTokens == nullptr)) {
		_1e121dc86_stop(&(*_self_));
		_1e121e7e2_pushErr(&(*_self_), _40817_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1e121eb11_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_1e121e7e2_pushErr(&(*_self_), _40738_tokens[_42217_i],jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_1e12204a2_buildScope(&(*_self_), _42317_scopeTokens,_40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;;
}



inline jule::Ptr<_20cb9c770_Iter> _1e122350a_buildIterSt(_1e121d604_scopeParser* _self_, jule::Ptr<_1e121ccc9_stmt>& _43735_st) {
	if (_43735_st.get()._field_terminated) {
		return _1e1220dcb_buildWhileNextIter(&(*_self_), _43735_st);;
	};
	return _1e12231ec_buildCommonIter(&(*_self_), _43735_st.get()._field_tokens);;
}



inline jule::Ptr<_20cb9dc8d_BreakSt> _1e1223818_buildBreakSt(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _44436_tokens) {
	jule::Ptr<_20cb9dc8d_BreakSt> _44517_brk = jule::new_ptr<_20cb9dc8d_BreakSt>(_20cb9dc8d_BreakSt{._field_Token=_44436_tokens[0LL], });;
	if ((_44436_tokens.len() > 1LL)) {
		if ((_44436_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1e121e7e2_pushErr(&(*_self_), _44436_tokens[1LL],jule::Str("invalid syntax", 14));
			_1e121eb11_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=_44436_tokens[1LL];
			if ((_44436_tokens.len() > 2LL)) {
				_1e121e7e2_pushErr(&(*_self_), _44436_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;;
}



inline jule::Ptr<_20cb9e145_ContSt> _1e1223b26_buildContSt(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _46235_tokens) {
	jule::Ptr<_20cb9e145_ContSt> _46317_cont = jule::new_ptr<_20cb9e145_ContSt>(_20cb9e145_ContSt{._field_Token=_46235_tokens[0LL], });;
	if ((_46235_tokens.len() > 1LL)) {
		if ((_46235_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1e121e7e2_pushErr(&(*_self_), _46235_tokens[1LL],jule::Str("invalid syntax", 14));
			_1e121eb11_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=_46235_tokens[1LL];
			if ((_46235_tokens.len() > 2LL)) {
				_1e121e7e2_pushErr(&(*_self_), _46235_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;;
}



inline jule::Ptr<_20cb9e5b8_If> _1e1223e34_buildIf(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _48031_tokens) {
	jule::Ptr<_20cb9e5b8_If> _48117_model = jule::new_ptr<_20cb9e5b8_If>(_20cb9e5b8_If{._field_Token=_48031_tokens[0LL], });;
	_48031_tokens=_48031_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _48517_exprTokens = _1e1234de0_getBlockExpr(_48031_tokens);;
	jule::I64 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_1e121e7e2_pushErr(&(*_self_), _48117_model.get()._field_Token,jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I64>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _49217_scopeTokens = _1e1237eae_range(_48617_i,jule::Str("{", 1),jule::Str("}", 1),_48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_1e121dc86_stop(&(*_self_));
		_1e121e7e2_pushErr(&(*_self_), _48117_model.get()._field_Token,jule::Str("body is not exist", 17));
		_1e121eb11_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20b4e5581_Token> _49917_end = _48031_tokens[(_48617_i - 1LL)];;
	if ((_48617_i < _48031_tokens.len())) {
		if ((_48031_tokens[_48617_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			_48031_tokens=_48031_tokens.slice(_48617_i);
		} else {
			_1e121e7e2_pushErr(&(*_self_), _48031_tokens[_48617_i],jule::Str("invalid syntax", 14));
			_48031_tokens=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_1e123acd6_buildExpr((*_self_)._field_p, _48517_exprTokens);
	_48117_model.get()._field_Scope=_1e12204a2_buildScope(&(*_self_), _49217_scopeTokens,_49917_end);
	return _48117_model;;
}



inline jule::Ptr<_20cb9e970_Else> _1e1224242_buildElse(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _51333_tokens) {
	jule::Ptr<_20cb9e970_Else> _51417_els = jule::new_ptr<_20cb9e970_Else>(_20cb9e970_Else{._field_Token=_51333_tokens[0LL], });;
	_51333_tokens=_51333_tokens.slice(1LL);
	jule::I64 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _51917_scopeTokens = _1e1237eae_range(_51817_i,jule::Str("{", 1),jule::Str("}", 1),_51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < _51333_tokens.len())) {
			_1e121e7e2_pushErr(&(*_self_), _51417_els.get()._field_Token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1e121dc86_stop(&(*_self_));
			_1e121e7e2_pushErr(&(*_self_), _51417_els.get()._field_Token,jule::Str("body is not exist", 17));
			_1e121eb11_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51817_i < _51333_tokens.len())) {
		_1e121e7e2_pushErr(&(*_self_), _51333_tokens[_51817_i],jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_1e12204a2_buildScope(&(*_self_), _51917_scopeTokens,_51333_tokens[(_51817_i - 1LL)]);
	return _51417_els;;
}



inline jule::Ptr<_20cb9ede3_Conditional> _1e1224550_buildIfElseChain(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _53739_tokens) {
	jule::Ptr<_20cb9ede3_Conditional> _53817_chain = jule::new_ptr<_20cb9ede3_Conditional>(_20cb9ede3_Conditional{._field_Head=_1e1223e34_buildIf(&(*_self_), _53739_tokens), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_209cc2821;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_20cb9e5b8_If> _55025_elif = _1e1223e34_buildIf(&(*_self_), _53739_tokens);;
				_53817_chain.get()._field_Tail = jule::alloc_for_append(_53817_chain.get()._field_Tail,1);_53817_chain.get()._field_Tail.__push(_55025_elif);;
				goto _iter_next_209cc2821;
			};
			_53817_chain.get()._field_Default=_1e1224242_buildElse(&(*_self_), _53739_tokens);
			goto _iter_end_209cc2821;
		}
	_iter_next_209cc2821:;
	}
	_iter_end_209cc2821:;;
	return _53817_chain;;
}



inline jule::Ptr<_20cb8d81b_Expr> _1e122485d_buildCoCallSt(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _56036_tokens) {
	jule::Ptr<_20b4e5581_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_20cb8d81b_Expr> _56317_e = _1e123acd6_buildExpr((*_self_)._field_p, _56036_tokens);;
	if ((_56317_e == nullptr)) {
		return _56317_e;;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type_is_ptr<_20cb927ed_FnCallExpr>()) {
			_case_begin_209cc6abc:;
			{
				_56317_e.get()._field_Kind.operator jule::Ptr<_20cb927ed_FnCallExpr>().get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_209cc6d42:;
			{
				_1e121e7e2_pushErr(&(*_self_), _56113_token,jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_209cc6cdc:;
	};
	return _56317_e;;
}



inline jule::Ptr<_20cb96d52_GotoSt> _1e1224b6b_buildGotoSt(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _57635_tokens) {
	jule::Ptr<_20cb96d52_GotoSt> _57717_gt = jule::new_ptr<_20cb96d52_GotoSt>(_20cb96d52_GotoSt{._field_Token=_57635_tokens[0LL], });;
	if ((_57635_tokens.len() == 1LL)) {
		_1e121e7e2_pushErr(&(*_self_), _57717_gt.get()._field_Token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if ((_57635_tokens.len() > 2LL)) {
		_1e121e7e2_pushErr(&(*_self_), _57635_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_20b4e5581_Token> _58617_identToken = _57635_tokens[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e121e7e2_pushErr(&(*_self_), _58617_identToken,jule::Str("invalid syntax", 14));
		_1e121eb11_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57717_gt;;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;;
}



inline jule::Ptr<_20cb9713d_FallSt> _1e1224e79_buildFallSt(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _59635_tokens) {
	jule::Ptr<_20cb9713d_FallSt> _59717_fll = jule::new_ptr<_20cb9713d_FallSt>(_20cb9713d_FallSt{._field_Token=_59635_tokens[0LL]});;
	if ((_59635_tokens.len() > 1LL)) {
		_1e121e7e2_pushErr(&(*_self_), _59635_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59717_fll;;
}



inline jule::Ptr<_20cba05b9_TypeAliasDecl> _1e1225287_buildTypeAliasSt(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _60640_tokens) {
	jule::Ptr<_20cba05b9_TypeAliasDecl> _60717_tad = _1e123c3d1_buildTypeAliasDecl((*_self_)._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*_self_)._field_s;
	return _60717_tad;;
}



inline void _1e12256e9_pushCaseExpr(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _61235_tokens, jule::Ptr<_20b4e5581_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_20cb8d81b_Expr>>& _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I64 _61921_i = 0LL;;
		jule::Ptr<_20cb892ea_TypeDecl> _62022_t;;
		jule::Bool _62025_ok = false;;
		({
			_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType((*_self_)._field_p, _61235_tokens,(&(_61921_i)),true);
			_62022_t = __jule_assign_result.__jule_result_arg0;
			_62025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62025_ok) {
			_61331_exprs = jule::alloc_for_append(_61331_exprs,1);_61331_exprs.__push(jule::new_ptr<_20cb8d81b_Expr>(_20cb8d81b_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_62022_t)}));;
			if ((_61921_i < _61235_tokens.len())) {
				_1e121e7e2_pushErr(&(*_self_), _61235_tokens[_61921_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_61331_exprs = jule::alloc_for_append(_61331_exprs,1);_61331_exprs.__push(_1e123acd6_buildExpr((*_self_)._field_p, _61235_tokens));;
}



inline jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _1e1225b4a_buildCaseExprs(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _63638_tokens, jule::Ptr<_20b4e5581_Token>& _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_20cb8d81b_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63917_braceN = 0LL;;
	jule::I64 _64017_j = 0LL;;
	{
		auto &expr = _63638_tokens;
		auto it = expr.begin();
		_iter_begin_209cd306d:;
		if (it != expr.end()) {
			jule::I64 _64114_i = it - expr.begin();
			jule::Ptr<_20b4e5581_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_209cd549e:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_209cd5092:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_209cd4d83:;
					};
					goto _iter_next_209cd306d;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_209cd306d;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64121_tok.get()._field_Kind == jule::Str("|", 1)))) {
						_case_begin_209cd5c96:;
						{
							jule::Slice<jule::Ptr<_20b4e5581_Token>> _65721_exprTokens = _63638_tokens.slice(_64017_j,_64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_1e121e7e2_pushErr(&(*_self_), _64121_tok,jule::Str("expression missing", 18));
							} else {
								_1e12256e9_pushCaseExpr(&(*_self_), _63638_tokens.slice(_64017_j,_64114_i),_64121_tok,_63676_typeMatch,_63717_exprs);
							};
							_64017_j=static_cast<jule::I64>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_209cd5d0c:;
						{
							_63661_colon=_64121_tok;
							_1e12256e9_pushCaseExpr(&(*_self_), _63638_tokens.slice(_64017_j,_64114_i),_64121_tok,_63676_typeMatch,_63717_exprs);
							_63638_tokens=_63638_tokens.slice((_64114_i + 1LL));
							return _63717_exprs;;
						}
					}
					_match_end_209cd579b:;
				};
			}
			_iter_next_209cd306d:;
			++it;
			_64114_i++;
			goto _iter_begin_209cd306d;
		}
		_iter_end_209cd306d:;
	};
	_1e121e7e2_pushErr(&(*_self_), _63638_tokens[0LL],jule::Str("invalid syntax", 14));
	_63638_tokens=nullptr;
	return nullptr;;
}



inline jule::Ptr<_20cb99283_ScopeTree> _1e1225e58_buildCaseScope(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _67638_tokens) {
	jule::I64 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_20b4e5581_Token>> _68022_next;;
			({
				_sx_20b4e5581_Token_bool __jule_assign_result = _1e121c9cc_skipSt(_67921_i,_67638_tokens.slice(_67717_n));
				_68022_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_209cd9717;
			};
			jule::Ptr<_20b4e5581_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_68417_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_209cd9717;
			};
			jule::Slice<jule::Ptr<_20b4e5581_Token>> _68921_scopeTokens = _67638_tokens.slice(0LL,_67717_n);;
			jule::Ptr<_20cb99283_ScopeTree> _69021_scope = _1e12204a2_buildScope(&(*_self_), _68921_scopeTokens,_67638_tokens[_67717_n]);;
			_67638_tokens=_67638_tokens.slice(_67717_n);
			return _69021_scope;;
		}
	_iter_next_209cd9717:;
	}
	_iter_end_209cd9717:;;
	jule::Ptr<_20b4e5581_Token> _69417_end;;
	if ((_67638_tokens.len() > 0LL)) {
		_69417_end=_67638_tokens[(_67638_tokens.len() - 1LL)];
	};
	jule::Ptr<_20cb99283_ScopeTree> _69817_scope = _1e12204a2_buildScope(&(*_self_), _67638_tokens,_69417_end);;
	_67638_tokens=nullptr;
	return _69817_scope;;
}



inline _x_20cba0a3c_Case_bool _1e1226310_buildCase(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _70333_tokens, jule::Bool _70351_typeMatch) {
	_x_20cba0a3c_Case_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_20cba0a3c_Case> _70417_c = jule::new_ptr<_20cba0a3c_Case>(_20cba0a3c_Case{._field_Token=_70333_tokens[0LL], });;
	_70333_tokens=_70333_tokens.slice(1LL);
	jule::Ptr<_20b4e5581_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_1e1225b4a_buildCaseExprs(&(*_self_), _70333_tokens,_70817_colon,_70351_typeMatch);
	_70417_c.get()._field_Scope=_1e1225e58_buildCaseScope(&(*_self_), _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70417_c;
	__jule_func_result.__jule_result_arg1 = _71413_isDefault;
	return __jule_func_result;;
}



inline _sx_20cba0a3c_Case_x_20cb9e970_Else _1e12266b7_buildCases(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	_sx_20cba0a3c_Case_x_20cb9e970_Else __jule_func_result;
	jule::Slice<jule::Ptr<_20cba0a3c_Case>> _71917_cases = nullptr;;
	jule::Ptr<_20cb9e970_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_20b4e5581_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_72321_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_1e121e7e2_pushErr(&(*_self_), _72321_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_209ce305b;
			};
			jule::Ptr<_20cba0a3c_Case> _72822_c;;
			jule::Bool _72825_isDefault = false;;
			({
				_x_20cba0a3c_Case_bool __jule_assign_result = _1e1226310_buildCase(&(*_self_), _71833_tokens,_71851_typeMatch);
				_72822_c = __jule_assign_result.__jule_result_arg0;
				_72825_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_20cb9e970_Else>(_20cb9e970_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_1e121e7e2_pushErr(&(*_self_), _72321_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				_71917_cases = jule::alloc_for_append(_71917_cases,1);_71917_cases.__push(_72822_c);;
			};
		}
	_iter_next_209ce305b:;
	}
	_iter_end_209ce305b:;;
	if (_72117_defNotLast) {
		_1e121e7e2_pushErr(&(*_self_), _72017_def.get()._field_Token,jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71917_cases;
	__jule_func_result.__jule_result_arg1 = _72017_def;
	return __jule_func_result;;
}



inline jule::Ptr<_20cba1213_MatchCase> _1e12269c5_buildMatchCase(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _75237_tokens) {
	jule::Ptr<_20cba1213_MatchCase> _75317_m = jule::new_ptr<_20cba1213_MatchCase>(_20cba1213_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _76317_exprTokens = _1e1234de0_getBlockExpr(_75237_tokens);;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_1e123acd6_buildExpr((*_self_)._field_p, _76317_exprTokens);
	} else if (_75317_m.get()._field_TypeMatch) {
		_1e121e7e2_pushErr(&(*_self_), _75317_m.get()._field_Token,jule::Str("expression missing", 18));
	};
	jule::I64 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _77117_blockToks = _1e1237eae_range(_77017_i,jule::Str("{", 1),jule::Str("}", 1),_75237_tokens);;
	if ((_77117_blockToks == nullptr)) {
		_1e121dc86_stop(&(*_self_));
		_1e121e7e2_pushErr(&(*_self_), _75317_m.get()._field_Token,jule::Str("body is not exist", 17));
		_1e121eb11_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_77017_i < _75237_tokens.len())) {
		_1e121e7e2_pushErr(&(*_self_), _75237_tokens[_77017_i],jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	({
		_sx_20cba0a3c_Case_x_20cb9e970_Else __jule_assign_result = _1e12266b7_buildCases(&(*_self_), _77117_blockToks,_75317_m.get()._field_TypeMatch);
		_75317_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75317_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75317_m;;
}



inline jule::Ptr<_20cb99283_ScopeTree> _1e1226cd3_buildScopeSt(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_20b4e5581_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1e121e7e2_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_1e121e7e2_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1e121e7e2_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _81517_scopeTokens = _1e1237eae_range(_81417_i,jule::Str("{", 1),jule::Str("}", 1),_78535_tokens);;
	if ((_81517_scopeTokens == nullptr)) {
		_1e121e7e2_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81417_i < _78535_tokens.len())) {
		_1e121e7e2_pushErr(&(*_self_), _78535_tokens[_81417_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_20cb99283_ScopeTree> _82217_scope = _1e12204a2_buildScope(&(*_self_), _81517_scopeTokens,_78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;;
}



inline jule::Ptr<_20cb9699a_LabelSt> _1e12270e1_buildLabelSt(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _82836_tokens) {
	jule::Ptr<_20cb9699a_LabelSt> _82917_lbl = jule::new_ptr<_20cb9699a_LabelSt>(_20cb9699a_LabelSt{._field_Token=_82836_tokens[0LL], ._field_Ident=_82836_tokens[0LL].get()._field_Kind});;
	if ((_82836_tokens.len() > 2LL)) {
		_82836_tokens=_82836_tokens.slice(2LL);
		_1e121ed86_insertAsNext(&(*_self_), _82836_tokens);
	};
	return _82917_lbl;;
}



inline __20cb98947_StmtData_bool _1e12273ee_buildIdSt(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _84333_tokens) {
	__20cb98947_StmtData_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((_84333_tokens.len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_20b4e5581_Token> _84817_token = _84333_tokens[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_209d092a3:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::Any>(_1e12270e1_buildLabelSt(&(*_self_), _84333_tokens));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_209d0924d:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1e123641e_assignInfo> _1e122770c_buildAssignInfo(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _85739_tokens) {
	jule::Ptr<_1e123641e_assignInfo> _85817_info = jule::new_ptr<_1e123641e_assignInfo>(_1e123641e_assignInfo{._field_ok=true});;
	jule::I64 _86117_braceN = 0LL;;
	{
		auto &expr = _85739_tokens;
		auto it = expr.begin();
		_iter_begin_209d0aa46:;
		if (it != expr.end()) {
			jule::I64 _86214_i = it - expr.begin();
			jule::Ptr<_20b4e5581_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_209d0c163:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_209d0bc56:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_209d0ba47:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_209d0c493:;
						{
							goto _iter_next_209d0aa46;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_209d0c509:;
						{
							goto _iter_next_209d0aa46;
						}
					}
					else if ((!(_20b4ea168_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_209d0c570:;
						{
							goto _iter_next_209d0aa46;
						}
					}
					_match_end_209d0c20c:;
				};
				_85817_info.get()._field_l=_85739_tokens.slice(0LL,_86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= _85739_tokens.len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_20b4e9dc1_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_209d0aa46;
				};
				_85817_info.get()._field_r=_85739_tokens.slice((_86214_i + 1LL));
				if (_20b4e9dc1_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_1e121e7e2_pushErr(&(*_self_), _85817_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_209d0aa46;
			}
			_iter_next_209d0aa46:;
			++it;
			_86214_i++;
			goto _iter_begin_209d0aa46;
		}
		_iter_end_209d0aa46:;
	};
	return _85817_info;;
}



inline jule::Ptr<_20cb97748_AssignLeft> _1e1227a1a_buildAssignL(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _90536_tokens) {
	jule::Ptr<_20cb97748_AssignLeft> _90617_l = jule::new_ptr<_20cb97748_AssignLeft>(_20cb97748_AssignLeft{._field_Token=_90536_tokens[0LL], });;
	if ((_90536_tokens[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_1e123acd6_buildExpr((*_self_)._field_p, _90536_tokens);
	return _90617_l;;
}



inline jule::Slice<jule::Ptr<_20cb97748_AssignLeft>> _1e1227d28_buildAssignLs(_1e121d604_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>>& _91637_parts) {
	jule::Slice<jule::Ptr<_20cb97748_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto &expr = _91637_parts;
		auto it = expr.begin();
		_iter_begin_209d14236:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20b4e5581_Token>> _91821_part = *it;
			{
				jule::Ptr<_20cb97748_AssignLeft> _91921_l = _1e1227a1a_buildAssignL(&(*_self_), _91821_part);;
				_91717_lefts = jule::alloc_for_append(_91717_lefts,1);_91717_lefts.__push(_91921_l);;
			}
			_iter_next_209d14236:;
			++it;
			goto _iter_begin_209d14236;
		}
		_iter_end_209d14236:;
	};
	return _91717_lefts;;
}



inline _x_20cb97c87_AssignSt_bool _1e1228136_buildPlainAssign(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _92640_tokens) {
	_x_20cb97c87_AssignSt_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1e123641e_assignInfo> _92717_info = _1e122770c_buildAssignInfo(&(*_self_), _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20cb97c87_AssignSt> _93217_assign = jule::new_ptr<_20cb97c87_AssignSt>(_20cb97c87_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _93618_parts;;
	jule::Slice<_20b1bc016_Log> _93625_errs;;
	({
		_ssx_20b4e5581_Token_s_20b1bc016_Log __jule_assign_result = _1e1238a2b_parts(_92717_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
		_93618_parts = __jule_assign_result.__jule_result_arg0;
		_93625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93625_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_93625_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_93217_assign.get()._field_Left=_1e1227d28_buildAssignLs(&(*_self_), _93618_parts);
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_1e123acd6_buildExpr((*_self_)._field_p, _92717_info.get()._field_r);
	};
	__jule_func_result.__jule_result_arg0 = _93217_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline _x_20cb97c87_AssignSt_bool _1e1228444_buildDeclAssign(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _95038_tokens) {
	_x_20cb97c87_AssignSt_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_95038_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_20b4e5581_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_95617_token.get()._field_Kind != jule::Str("(", 1)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20cb97c87_AssignSt> _96117_assign = jule::new_ptr<_20cb97c87_AssignSt>(_20cb97c87_AssignSt{._field_Declarative=true, });;
	jule::I64 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _96617_rang = _1e1237eae_range(_96517_i,jule::Str("(", 1),jule::Str(")", 1),_95038_tokens);;
	if ((_96617_rang == nullptr)) {
		_1e121e7e2_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_20b4e5581_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_1e123acd6_buildExpr((*_self_)._field_p, _97321_exprTokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _97818_parts;;
	jule::Slice<_20b1bc016_Log> _97825_errs;;
	({
		_ssx_20b4e5581_Token_s_20b1bc016_Log __jule_assign_result = _1e1238a2b_parts(_96617_rang,static_cast<jule::U64>(8LLU),true);
		_97818_parts = __jule_assign_result.__jule_result_arg0;
		_97825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97825_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_97825_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &expr = _97818_parts;
		auto it = expr.begin();
		_iter_begin_209d1eae3:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20b4e5581_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1e121e7e2_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
						goto _iter_next_209d1eae3;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_98421_part[0LL].get()._field_Kind == jule::Str("&", 1)))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1e121e7e2_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
						goto _iter_next_209d1eae3;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (_98421_part[0LL].get()._field_Kind != jule::Str("(", 1)))) {
					_1e121e7e2_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
					goto _iter_next_209d1eae3;
				};
				jule::Ptr<_20cb97748_AssignLeft> _101421_l = _1e1227a1a_buildAssignL(&(*_self_), _98421_part);;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				_96117_assign.get()._field_Left = jule::alloc_for_append(_96117_assign.get()._field_Left,1);_96117_assign.get()._field_Left.__push(_101421_l);;
			}
			_iter_next_209d1eae3:;
			++it;
			goto _iter_begin_209d1eae3;
		}
		_iter_end_209d1eae3:;
	};
	__jule_func_result.__jule_result_arg0 = _96117_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline _x_20cb97c87_AssignSt_bool _1e1228752_buildAssignSt(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _102337_tokens) {
	_x_20cb97c87_AssignSt_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1e12367b5_checkAssignTokens(_102337_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _102337_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_209d28844:;
			{
				({
					_x_20cb97c87_AssignSt_bool __jule_assign_result = _1e1228444_buildDeclAssign(&(*_self_), _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_209d28437:;
			{
				({
					_x_20cb97c87_AssignSt_bool __jule_assign_result = _1e1228136_buildPlainAssign(&(*_self_), _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_209d283d2:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_20cb8e1ac_UseExpr> _1e1228a60_buildUseExpr(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _103836_tokens) {
	if ((_103836_tokens.len() == 1LL)) {
		_1e121e7e2_pushErr(&(*_self_), _103836_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_20cb8e1ac_UseExpr> _104317_ue = jule::new_ptr<_20cb8e1ac_UseExpr>(_20cb8e1ac_UseExpr{._field_Token=_103836_tokens[0LL], });;
	_103836_tokens=_103836_tokens.slice(1LL);
	_104317_ue.get()._field_Expr=_1e123acd6_buildExpr((*_self_)._field_p, _103836_tokens);
	return _104317_ue;;
}



inline jule::Any _1e1228d6d_buildSt(_1e121d604_scopeParser* _self_, jule::Ptr<_1e121ccc9_stmt>& _105131_st) {
	jule::Ptr<_20b4e5581_Token> _105217_token = _105131_st.get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _105422_s = jule::Any(nullptr);;
		jule::Bool _105425_ok = false;;
		({
			__20cb98947_StmtData_bool __jule_assign_result = _1e12273ee_buildIdSt(&(*_self_), _105131_st.get()._field_tokens);
			_105422_s = __jule_assign_result.__jule_result_arg0;
			_105425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_105425_ok) {
			return _105422_s;;
		};
	};
	jule::Ptr<_20cb97c87_AssignSt> _106018_s;;
	jule::Bool _106021_ok = false;;
	({
		_x_20cb97c87_AssignSt_bool __jule_assign_result = _1e1228752_buildAssignSt(&(*_self_), _105131_st.get()._field_tokens);
		_106018_s = __jule_assign_result.__jule_result_arg0;
		_106021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106021_ok) {
		return static_cast<jule::Any>(_106018_s);;
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_209d2d8d2:;
			{
				return static_cast<jule::Any>(_1e1228a60_buildUseExpr(&(*_self_), _105131_st.get()._field_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_209d2da47:;
			{
				return static_cast<jule::Any>(_1e12207b0_buildVarSt(&(*_self_), _105131_st.get()._field_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_209d2daad:;
			{
				return static_cast<jule::Any>(_1e1220abd_buildRetSt(&(*_self_), _105131_st.get()._field_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_209d2db68:;
			{
				return static_cast<jule::Any>(_1e122350a_buildIterSt(&(*_self_), _105131_st));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_209d2dbce:;
			{
				return static_cast<jule::Any>(_1e1223818_buildBreakSt(&(*_self_), _105131_st.get()._field_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_209d2dc45:;
			{
				return static_cast<jule::Any>(_1e1223b26_buildContSt(&(*_self_), _105131_st.get()._field_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_209d2dcab:;
			{
				return static_cast<jule::Any>(_1e1224550_buildIfElseChain(&(*_self_), _105131_st.get()._field_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_209d2dd22:;
			{
				return static_cast<jule::Any>(_1e122485d_buildCoCallSt(&(*_self_), _105131_st.get()._field_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_209d2dd88:;
			{
				return static_cast<jule::Any>(_1e1224b6b_buildGotoSt(&(*_self_), _105131_st.get()._field_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_209d2ddee:;
			{
				return static_cast<jule::Any>(_1e1224e79_buildFallSt(&(*_self_), _105131_st.get()._field_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_209d2de65:;
			{
				return static_cast<jule::Any>(_1e1225287_buildTypeAliasSt(&(*_self_), _105131_st.get()._field_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_209d2decb:;
			{
				return static_cast<jule::Any>(_1e12269c5_buildMatchCase(&(*_self_), _105131_st.get()._field_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_209d2e053:;
			{
				return static_cast<jule::Any>(_1e1226cd3_buildScopeSt(&(*_self_), _105131_st.get()._field_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_209d2e0ca:;
			{
				if ((_105217_token.get()._field_Kind == jule::Str("{", 1))) {
					return static_cast<jule::Any>(_1e1226cd3_buildScopeSt(&(*_self_), _105131_st.get()._field_tokens));;
				};
			}
		}
		_match_end_209d2d78e:;
	};
	jule::Ptr<_20cb8d81b_Expr> _110117_expr = _1e123acd6_buildExpr((*_self_)._field_p, _105131_st.get()._field_tokens);;
	if ((_110117_expr != nullptr)) {
		return static_cast<jule::Any>(_110117_expr);;
	};
	_1e121e7e2_pushErr(&(*_self_), _105217_token,jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1e122918c_build(_1e121d604_scopeParser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _110929_tokens, jule::Ptr<_20cb99283_ScopeTree>& _110952_s) {
	if ((_110952_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1e121d170_splitStmts(_110929_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_110952_s;
	while (((!(_1e121e4c3_isLastSt(&(*_self_)))) && (!(_1e121e25e_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1e121ccc9_stmt> _111721_st = _1e12200ea_next(&(*_self_));;
			jule::Any _111821_data = _1e1228d6d_buildSt(&(*_self_), _111721_st);;
			if ((_111821_data != nullptr)) {
				(*_self_)._field_s.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_Stmts,1);(*_self_)._field_s.get()._field_Stmts.__push(_20cb98b78_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data});;
			};
			if (_1e121deea_stopped(&(*_self_))) {
				goto _iter_end_209d37336;
			};
		}
	_iter_next_209d37336:;
	}
	_iter_end_209d37336:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e121d604_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1e122a3ad_pushErr(_1e1229b1b_exprBuilder* _self_, jule::Ptr<_20b4e5581_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_1e123a6a9_pushErr((*_self_)._field_p.ptr(), _4426_token,_4441_fmt,_4454_args);
}



inline void _1e122a6cc_pushSuggestion(_1e1229b1b_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_1e123a9c8_pushSuggestion((*_self_)._field_p.ptr(), _4933_fmt,_4946_args);
}



inline jule::Ptr<_20cb8e498_TupleExpr> _1e122a9da_buildTuple(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>>& _5334_parts) {
	jule::Ptr<_20cb8e498_TupleExpr> _5417_tuple = jule::new_ptr<_20cb8e498_TupleExpr>(_20cb8e498_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_20cb8d81b_Expr>>::alloc(0LL, _5334_parts.len())});;
	{
		auto &expr = _5334_parts;
		auto it = expr.begin();
		_iter_begin_209d57345:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20b4e5581_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_1e123450a_buildFromTokens(&(*_self_), _5721_part));;
			}
			_iter_next_209d57345:;
			++it;
			goto _iter_begin_209d57345;
		}
		_iter_end_209d57345:;
	};
	return _5417_tuple;;
}



inline jule::Ptr<_20cb8e850_LitExpr> _1e122ace8_buildLit(_1e1229b1b_exprBuilder* _self_, jule::Ptr<_20b4e5581_Token> _6327_token) {
	return jule::new_ptr<_20cb8e850_LitExpr>(_20cb8e850_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});;
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e122b106_buildPrimitiveType(_1e1229b1b_exprBuilder* _self_, jule::Ptr<_20b4e5581_Token>& _7038_token) {
	return _1e124a4cc_buildPrimType(_7038_token);;
}



inline jule::Any _1e122b414_buildSingle(_1e1229b1b_exprBuilder* _self_, jule::Ptr<_20b4e5581_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_209d58d4c:;
			{
				return static_cast<jule::Any>(_1e122ace8_buildLit(&(*_self_), _7434_token));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_209d58dc4:;
			{
				if ((_7434_token.get()._field_Kind == jule::Str("...", 3))) {
					return static_cast<jule::Any>(jule::new_ptr<_20cb9108d_VariadicExpr>(_20cb9108d_VariadicExpr{._field_Token=_7434_token, }));;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(27LLU) || _match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_209d58e4b:;
			{
				return static_cast<jule::Any>(_1e12357b4_buildIdentExpr(_7434_token));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_209d58ec3:;
			{
				return static_cast<jule::Any>(_1e122b106_buildPrimitiveType(&(*_self_), _7434_token));;
			}
		}
		_match_end_209d57d4b:;
	};
	_1e122a3ad_pushErr(&(*_self_), _7434_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_20cb904cc_IdentExpr> _1e122b722_buildCppLinkedIdent(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _9543_tokens) {
	if ((_9543_tokens[0LL].get()._field_Id != static_cast<jule::U64>(30LLU))) {
		return nullptr;;
	} else if ((_9543_tokens[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_1e122a3ad_pushErr(&(*_self_), _9543_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e122a6cc_pushSuggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20b4e5581_Token> _10317_token = _9543_tokens[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e122a3ad_pushErr(&(*_self_), _9543_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e122a6cc_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20cb904cc_IdentExpr> _10917_expr = _1e12357b4_buildIdentExpr(_10317_token);;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;;
}



inline jule::Ptr<_20cb90bd6_UnaryExpr> _1e122ba30_buildUnary(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _11433_tokens) {
	jule::Ptr<_20b4e5581_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_1e122a3ad_pushErr(&(*_self_), _11517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_20b4e5c8a_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_1e122a3ad_pushErr(&(*_self_), _11517_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind)}));
		return nullptr;;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_20cb90bd6_UnaryExpr>(_20cb90bd6_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_1e123450a_buildFromTokens(&(*_self_), _11433_tokens)});;
}



inline jule::Ptr<_20cb91c70_SubIdentExpr> _1e122bd3d_buildObjSubIdent(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _13539_tokens) {
	jule::I64 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_20b4e5581_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL,_13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_1e122a3ad_pushErr(&(*_self_), _13717_identToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_20cb91c70_SubIdentExpr>(_20cb91c70_SubIdentExpr{._field_Expr=_1e123450a_buildFromTokens(&(*_self_), _13539_tokens), ._field_Ident=_13717_identToken});;
}



inline jule::Ptr<_20cb917ec_NsSelectionExpr> _1e122c14b_buildNsSubIdent(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _15039_tokens) {
	jule::Ptr<_20cb917ec_NsSelectionExpr> _15117_ns = jule::new_ptr<_20cb917ec_NsSelectionExpr>();;
	{
		auto &expr = _15039_tokens;
		auto it = expr.begin();
		_iter_begin_209d6497e:;
		if (it != expr.end()) {
			jule::I64 _15214_i = it - expr.begin();
			jule::Ptr<_20b4e5581_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_1e122a3ad_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1e122a6cc_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1e122a3ad_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1e122a6cc_pushSuggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_209d6497e:;
			++it;
			_15214_i++;
			goto _iter_begin_209d6497e;
		}
		_iter_end_209d6497e:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL,(_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;;
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e122c459_buildType(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _16933_tokens) {
	jule::I64 _17017_i = 0LL;;
	jule::Ptr<_20cb892ea_TypeDecl> _17118_t;;
	jule::Bool _17121_ok = false;;
	({
		_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType((*_self_)._field_p, _16933_tokens,(&(_17017_i)),false);
		_17118_t = __jule_assign_result.__jule_result_arg0;
		_17121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17121_ok))) {
		_1e122a3ad_pushErr(&(*_self_), _16933_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17017_i < _16933_tokens.len())) {
		_1e122a3ad_pushErr(&(*_self_), _16933_tokens[_17017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _17118_t;;
}



inline jule::Any _1e122c767_buildSubIdent(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _18337_tokens) {
	jule::I64 _18413_i = (_18337_tokens.len() - 2LL);;
	jule::Ptr<_20b4e5581_Token> _18513_token = _18337_tokens[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_209d6c349:;
			{
				return static_cast<jule::Any>(_1e122bd3d_buildObjSubIdent(&(*_self_), _18337_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_209d6c844:;
			{
				return static_cast<jule::Any>(_1e122c14b_buildNsSubIdent(&(*_self_), _18337_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_209d6c8aa:;
			{
				if ((_18513_token.get()._field_Kind == jule::Str("]", 1))) {
					return static_cast<jule::Any>(_1e122c459_buildType(&(*_self_), _18337_tokens));;
				};
			}
		}
		_match_end_209d6c6e0:;
	};
	_1e122a3ad_pushErr(&(*_self_), _18513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_20cb9108d_VariadicExpr> _1e122ca75_buildVariadic(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _20136_tokens) {
	jule::Ptr<_20b4e5581_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL,(_20136_tokens.len() - 1LL));
	return jule::new_ptr<_20cb9108d_VariadicExpr>(_20cb9108d_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_1e123450a_buildFromTokens(&(*_self_), _20136_tokens)});;
}



inline jule::Any _1e122cd83_buildOpRight(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _21036_tokens) {
	jule::Ptr<_20b4e5581_Token> _21117_token = _21036_tokens[(_21036_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_209d71815:;
			{
				_21036_tokens=_21036_tokens.slice(0LL,(_21036_tokens.len() - 1LL));
				jule::Any _21521_d = _1e1233dde_build(&(*_self_), _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type_is_ptr<_20cb927ed_FnCallExpr>()) {
						_case_begin_209d72ddd:;
						{
							_21521_d.operator jule::Ptr<_20cb927ed_FnCallExpr>().get()._field_Exception=jule::new_ptr<_20cb99283_ScopeTree>(_20cb99283_ScopeTree{._field_Deferred=true, });
							return _21521_d;;
						}
					}
					_match_end_209d73020:;
				};
			}
		}
		_match_end_209d7164a:;
	};
	_1e122a3ad_pushErr(&(*_self_), _21117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_20cb8db07_RangeExpr> _1e122d1b3_buildBetweenParentheses(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_1e122a3ad_pushErr(&(*_self_), _23146_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1e122a6cc_pushSuggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_23146_tokens=_23146_tokens.slice(1LL,(_23146_tokens.len() - 1LL));
	return jule::new_ptr<_20cb8db07_RangeExpr>(_20cb8db07_RangeExpr{._field_Expr=_1e123450a_buildFromTokens(&(*_self_), _23146_tokens)});;
}



inline jule::Ptr<_20cb91445_CastExpr> _1e122d4d2_tryBuildCast(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _24336_tokens) {
	jule::I64 _24417_rangeN = 0LL;;
	{
		auto &expr = _24336_tokens;
		auto it = expr.begin();
		_iter_begin_209d762a9:;
		if (it != expr.end()) {
			jule::I64 _24513_i = it - expr.begin();
			jule::Ptr<_20b4e5581_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_209d77882:;
							{
								(_24417_rangeN)++;
								goto _iter_next_209d762a9;
							}
						}
						else {
							_case_begin_209d77475:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_209d77266:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_209d762a9;
				} else if (((_24513_i + 1LL) == _24336_tokens.len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_20b4e5581_Token>> _26421_typeTokens = _24336_tokens.slice(0LL,(_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_20b4e5581_Token>> _26521_exprTokens = _24336_tokens.slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_20b4e5581_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_27217_tok.get()._field_Kind != jule::Str("(", 1)))) {
					return nullptr;;
				};
				jule::Ptr<_20cb91445_CastExpr> _27721_cast = jule::new_ptr<_20cb91445_CastExpr>(_20cb91445_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_1e122a3ad_pushErr(&(*_self_), _26521_exprTokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1e122a6cc_pushSuggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_1e122a3ad_pushErr(&(*_self_), _26421_typeTokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1e122a6cc_pushSuggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL,(_26421_typeTokens.len() - 1LL));
					jule::I64 _29125_typeIndex = 0LL;;
					jule::Ptr<_20cb892ea_TypeDecl> _29226_t;;
					jule::Bool _29229_ok = false;;
					({
						_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType((*_self_)._field_p, _26421_typeTokens,(&(_29125_typeIndex)),true);
						_29226_t = __jule_assign_result.__jule_result_arg0;
						_29229_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_1e122a3ad_pushErr(&(*_self_), _26421_typeTokens[_29125_typeIndex],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I64 _30229_j = 0LL;;
						_1e1237eae_range(_30229_j,jule::Str("(", 1),jule::Str(")", 1),_26521_exprTokens);
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL,_30229_j);
						_27721_cast.get()._field_Expr=_1e123450a_buildFromTokens(&(*_self_), _26521_exprTokens);
					};
				};
				return _27721_cast;;
			}
			_iter_next_209d762a9:;
			++it;
			_24513_i++;
			goto _iter_begin_209d762a9;
		}
		_iter_end_209d762a9:;
	};
	return nullptr;;
}



inline void _1e122d89a_pushArg(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20cb8d81b_Expr>>& _31731_args, jule::Slice<jule::Ptr<_20b4e5581_Token>> _31750_tokens, jule::Ptr<_20b4e5581_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_1e122a3ad_pushErr(&(*_self_), _31768_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e122a6cc_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_31731_args = jule::alloc_for_append(_31731_args,1);_31731_args.__push(_1e123450a_buildFromTokens(&(*_self_), _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _1e122dba8_buildArgs(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _33217_args = nullptr;;
	jule::I64 _33317_last = 0LL;;
	jule::I64 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL,(_32632_tokens.len() - 1LL));
	{
		auto &expr = _32632_tokens;
		auto it = expr.begin();
		_iter_begin_209d84e99:;
		if (it != expr.end()) {
			jule::I64 _33613_i = it - expr.begin();
			jule::Ptr<_20b4e5581_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_209d8673c:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_209d86330:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_209d86121:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_209d84e99;
				};
				_1e122d89a_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last,_33613_i),_33616_token);
				_33317_last=static_cast<jule::I64>((_33613_i + 1LL));
			}
			_iter_next_209d84e99:;
			++it;
			_33613_i++;
			goto _iter_begin_209d84e99;
		}
		_iter_end_209d84e99:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_1e122d89a_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[_33317_last]);
			};
		} else {
			_1e122d89a_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;;
}



inline jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>> _1e122deb6_buildCallGenerics(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;;
	};
	_36840_tokens=_36840_tokens.slice(1LL,(_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _37418_parts;;
	jule::Slice<_20b1bc016_Log> _37425_errs;;
	({
		_ssx_20b4e5581_Token_s_20b1bc016_Log __jule_assign_result = _1e1238a2b_parts(_36840_tokens,static_cast<jule::U64>(8LLU),true);
		_37418_parts = __jule_assign_result.__jule_result_arg0;
		_37425_errs = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>>::alloc(0LL, _37418_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_37425_errs);
	{
		auto &expr = _37418_parts;
		auto it = expr.begin();
		_iter_begin_209d8b016:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20b4e5581_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_209d8b016;
				};
				jule::I64 _38121_j = 0LL;;
				jule::Ptr<_20cb892ea_TypeDecl> _38222_generic;;
				({
					_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType((*_self_)._field_p, _37721_part,(&(_38121_j)),true);
					_38222_generic = __jule_assign_result.__jule_result_arg0;
				});
				if ((_38121_j < _37721_part.len())) {
					_1e122a3ad_pushErr(&(*_self_), _37721_part[_38121_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_209d8b016:;
			++it;
			goto _iter_begin_209d8b016;
		}
		_iter_end_209d8b016:;
	};
	return _37517_generics;;
}



inline jule::Ptr<_20cb927ed_FnCallExpr> _1e122e417_buildFnCall(_1e1229b1b_exprBuilder* _self_, jule::Ptr<_20b4e5581_Token>& _39235_token, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _39255_expr, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _39276_args) {
	return jule::new_ptr<_20cb927ed_FnCallExpr>(_20cb927ed_FnCallExpr{._field_Token=_39235_token, ._field_Expr=_1e123450a_buildFromTokens(&(*_self_), _39255_expr), ._field_Args=_1e122dba8_buildArgs(&(*_self_), _39276_args), });;
}



inline jule::Any _1e122e725_buildParenthesesRange(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _40045_tokens) {
	jule::Ptr<_20b4e5581_Token> _40117_token = _40045_tokens[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_209d905e2:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_209d90e61:;
						{
							jule::Ptr<_20cb91445_CastExpr> _40625_expr = _1e122d4d2_tryBuildCast(&(*_self_), _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return static_cast<jule::Any>(_40625_expr);;
							};
						}
					}
					_match_end_209d90c96:;
				};
			}
		}
		_match_end_209d90427:;
	};
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _41234_args_tokens;;
	({
		_sx_20b4e5581_Token_sx_20b4e5581_Token __jule_assign_result = _1e1238256_rangeLast(_40045_tokens);
		_41218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_41234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41218_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1e122d1b3_buildBetweenParentheses(&(*_self_), _41234_args_tokens));;
	};
	return static_cast<jule::Any>(_1e122e417_buildFnCall(&(*_self_), _40117_token,_41218_exprTokens,_41234_args_tokens));;
}



inline jule::Ptr<_20cb90059_UnsafeExpr> _1e122ea33_buildUnsafeExpr(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _42138_tokens) {
	jule::Ptr<_20b4e5581_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I64 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _42517_rangeTokens = _1e1237eae_range(_42417_i,jule::Str("{", 1),jule::Str("}", 1),_42138_tokens);;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_1e122a3ad_pushErr(&(*_self_), _42138_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_20cb90059_UnsafeExpr>(_20cb90059_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_1e123450a_buildFromTokens(&(*_self_), _42517_rangeTokens)});;
}



inline jule::Ptr<_20cb9ac79_FnDecl> _1e122ed41_buildAnonFn(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _43635_tokens) {
	jule::Ptr<_20cb9ac79_FnDecl> _43717_f = _1e124121a_buildFn((*_self_)._field_p, _43635_tokens,false,false);;
	if ((!(_20cb9b0cb_IsAnon(_43717_f.ptr())))) {
		_1e122a3ad_pushErr(&(*_self_), _43717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e122a6cc_pushSuggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _43717_f;;
}



inline jule::Any _1e123014e_buildUnsafe(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _44535_tokens) {
	{
		auto &_match_expr{ _44535_tokens[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_209d97099:;
			{
				return static_cast<jule::Any>(_1e122ed41_buildAnonFn(&(*_self_), _44535_tokens));;
			}
		}
		else {
			_case_begin_209d9750b:;
			{
				return static_cast<jule::Any>(_1e122ea33_buildUnsafeExpr(&(*_self_), _44535_tokens));;
			}
		}
		_match_end_209d97484:;
	};
}



inline void _1e1230517_pushRangeLitPart(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _45539_part, jule::Ptr<_20b4e5581_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>>& _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_1e122a3ad_pushErr(&(*_self_), _4569_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e122a6cc_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_45634_parts = jule::alloc_for_append(_45634_parts,1);_45634_parts.__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _1e1230847_getBraceRangeLitExprParts(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _47217_parts = nullptr;;
	jule::I64 _47417_last = 0LL;;
	jule::I64 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL,(_46648_tokens.len() - 1LL));
	{
		auto &expr = _46648_tokens;
		auto it = expr.begin();
		_iter_begin_209d9b697:;
		if (it != expr.end()) {
			jule::I64 _47713_i = it - expr.begin();
			jule::Ptr<_20b4e5581_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_209d9ce3a:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_209d9ca2d:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_209d9c81e:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_209d9b697;
				};
				_1e1230517_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last,_47713_i),_47716_token,_47217_parts);
				_47417_last=static_cast<jule::I64>((_47713_i + 1LL));
			}
			_iter_next_209d9b697:;
			++it;
			_47713_i++;
			goto _iter_begin_209d9b697;
		}
		_iter_end_209d9b697:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_1e1230517_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[_47417_last],_47217_parts);
			};
		} else {
			_1e1230517_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[(_47417_last - 1LL)],_47217_parts);
		};
	};
	return _47217_parts;;
}



inline jule::Ptr<_20cb9327c_FieldExprPair> _1e1230b66_buildFieldExprPair(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_1e122a3ad_pushErr(&(*_self_), _50841_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20cb9327c_FieldExprPair> _51317_pair = jule::new_ptr<_20cb9327c_FieldExprPair>(_20cb9327c_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_1e123450a_buildFromTokens(&(*_self_), _50841_tokens);
	return _51317_pair;;
}



inline jule::Ptr<_20cb8d81b_Expr> _1e1230e74_buildStructLitExpr(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _52142_tokens) {
	jule::Ptr<_20b4e5581_Token> _52217_token = _52142_tokens[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (_52142_tokens.len() > 1LL))) {
		_52217_token=_52142_tokens[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_20cb8d81b_Expr>(_20cb8d81b_Expr{._field_Token=_52217_token, ._field_End=_52142_tokens[(_52142_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_1e1230b66_buildFieldExprPair(&(*_self_), _52142_tokens))});;
		};
	};
	return _1e123450a_buildFromTokens(&(*_self_), _52142_tokens);;
}



inline jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _1e1231282_buildStructLitExprs(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _53717_parts = _1e1230847_getBraceRangeLitExprParts(&(*_self_), _53643_tokens);;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20cb8d81b_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_20cb8d81b_Expr>>::alloc(0LL, _53717_parts.len());;
	{
		auto &expr = _53717_parts;
		auto it = expr.begin();
		_iter_begin_1c93c3ea8:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20b4e5581_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_1e1230e74_buildStructLitExpr(&(*_self_), _54321_part));;
			}
			_iter_next_1c93c3ea8:;
			++it;
			goto _iter_begin_1c93c3ea8;
		}
		_iter_end_1c93c3ea8:;
	};
	return _54217_pairs;;
}



inline jule::Ptr<_20cb939ca_StructLit> _1e12315b2_buildTypedStructLiteral(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _54946_tokens) {
	jule::I64 _55017_i = 0LL;;
	jule::Ptr<_20cb892ea_TypeDecl> _55118_t;;
	jule::Bool _55121_ok = false;;
	({
		_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType((*_self_)._field_p, _54946_tokens,(&(_55017_i)),true);
		_55118_t = __jule_assign_result.__jule_result_arg0;
		_55121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_55121_ok))) {
		return nullptr;;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_1e122a3ad_pushErr(&(*_self_), _54946_tokens[_55017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_20b4e5581_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_56013_token.get()._field_Kind != jule::Str("{", 1)))) {
		_1e122a3ad_pushErr(&(*_self_), _56013_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_20cb939ca_StructLit>(_20cb939ca_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_1e1231282_buildStructLitExprs(&(*_self_), _54946_tokens)});;
}



inline jule::Ptr<_20cb8d81b_Expr> _1e12318d1_buildBraceLitPart(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _57341_tokens) {
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _57425_r;;
	({
		_sx_20b4e5581_Token_sx_20b4e5581_Token __jule_assign_result = _1e1235275_splitDelim(_57341_tokens,static_cast<jule::U64>(11LLU));
		_57418_l = __jule_assign_result.__jule_result_arg0;
		_57425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_20cb8d81b_Expr>(_20cb8d81b_Expr{._field_Token=_57341_tokens[0LL], ._field_End=_57341_tokens[(_57341_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_20cb94723_KeyValPair>(_20cb94723_KeyValPair{._field_Key=_1e123450a_buildFromTokens(&(*_self_), _57418_l), ._field_Val=_1e123450a_buildFromTokens(&(*_self_), _57425_r), ._field_Colon=_57341_tokens[_57418_l.len()]}))});;
	};
	return _1e123450a_buildFromTokens(&(*_self_), _57341_tokens);;
}



inline jule::Ptr<_20cb93e4d_BraceLit> _1e1231bde_buildBraceLit(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _59037_tokens) {
	jule::Ptr<_20cb93e4d_BraceLit> _59117_lit = jule::new_ptr<_20cb93e4d_BraceLit>(_20cb93e4d_BraceLit{._field_Token=_59037_tokens[0LL], ._field_End=_59037_tokens[(_59037_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _59617_parts = _1e1230847_getBraceRangeLitExprParts(&(*_self_), _59037_tokens);;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_20cb8d81b_Expr>>::alloc(0LL, _59617_parts.len());
	{
		auto &expr = _59617_parts;
		auto it = expr.begin();
		_iter_begin_1c93cd5cd:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20b4e5581_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_1e12318d1_buildBraceLitPart(&(*_self_), _60221_part));;
			}
			_iter_next_1c93cd5cd:;
			++it;
			goto _iter_begin_1c93cd5cd;
		}
		_iter_end_1c93cd5cd:;
	};
	return _59117_lit;;
}



inline jule::Any _1e1231eec_buildBraceRange(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _60939_tokens) {
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _61018_exprTokens;;
	jule::I64 _61030_rangeN = 0;;
	({
		_sx_20b4e5581_Token_int __jule_assign_result = _1e1235a5b_getRangeExprTokens(_60939_tokens);
		_61018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_61030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_1c93d03b0:;
			{
				return static_cast<jule::Any>(_1e1231bde_buildBraceLit(&(*_self_), _60939_tokens));;
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_1c93d0426:;
			{
				_1e122a3ad_pushErr(&(*_self_), _60939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c93ce502:;
	};
	jule::Ptr<_20b4e5581_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL,(_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _1e1233dde_build(&(*_self_), _61018_exprTokens);;
		if ((_62421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type_is_ptr<_20cb927ed_FnCallExpr>()) {
				_case_begin_1c93d36c1:;
				{
					_60939_tokens=_60939_tokens.slice((_61018_exprTokens.len() + 1LL));
					jule::I64 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_20b4e5581_Token>> _63225_rangeTokens = _1e1237eae_range(_63125_i,jule::Str("{", 1),jule::Str("}", 1),_60939_tokens);;
					jule::Ptr<_20cb927ed_FnCallExpr> _63325_model = _62421_d.operator jule::Ptr<_20cb927ed_FnCallExpr>();;
					if (_20cb92dc5_Ignored(_63325_model.ptr())) {
						_1e122a3ad_pushErr(&(*_self_), _62113_elseToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1e122a6cc_pushSuggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_1e123b721_buildScope((*_self_)._field_p, _63225_rangeTokens,_60939_tokens[(_63125_i - 1LL)]);
					return _62421_d;;
				}
			}
			else {
				_case_begin_1c93d32a3:;
				{
					_1e122a3ad_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1c93d314e:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1c93d8154:;
			{
				return _1e123014e_buildUnsafe(&(*_self_), _60939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1c93d81ba:;
			{
				return static_cast<jule::Any>(_1e122ed41_buildAnonFn(&(*_self_), _60939_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c93d7eab:;
			{
				return static_cast<jule::Any>(_1e12315b2_buildTypedStructLiteral(&(*_self_), _60939_tokens));;
			}
		}
		else {
			_case_begin_1c93d597b:;
			{
				_1e122a3ad_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c93d7340:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _1e123230a_getEnumerableParts(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL,(_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _66318_parts;;
	jule::Slice<_20b1bc016_Log> _66325_errors;;
	({
		_ssx_20b4e5581_Token_s_20b1bc016_Log __jule_assign_result = _1e1238a2b_parts(_66141_tokens,static_cast<jule::U64>(8LLU),true);
		_66318_parts = __jule_assign_result.__jule_result_arg0;
		_66325_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;;
}



inline jule::Ptr<_20cb94e0a_SliceExpr> _1e1232618_buildSlice(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _66833_tokens) {
	jule::Ptr<_20cb94e0a_SliceExpr> _66917_slc = jule::new_ptr<_20cb94e0a_SliceExpr>(_20cb94e0a_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _67417_parts = _1e123230a_getEnumerableParts(&(*_self_), _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_20cb8d81b_Expr>>::alloc(0LL, _67417_parts.len());
	{
		auto &expr = _67417_parts;
		auto it = expr.begin();
		_iter_begin_1c93dcc2a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20b4e5581_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_1c93dcc2a;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_1e123450a_buildFromTokens(&(*_self_), _68021_p));;
			}
			_iter_next_1c93dcc2a:;
			++it;
			goto _iter_begin_1c93dcc2a;
		}
		_iter_end_1c93dcc2a:;
	};
	return _66917_slc;;
}



inline jule::Ptr<_20cb95779_IndexingExpr> _1e1232a69_buildIndexing(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_20b4e5581_Token>> _69113_tokens, jule::Ptr<_20b4e5581_Token> _69135_errorToken) {
	jule::Ptr<_20b4e5581_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL,(_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_1e122a3ad_pushErr(&(*_self_), _69135_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20cb8d81b_Expr> _69817_expr = _1e123450a_buildFromTokens(&(*_self_), _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20cb8d81b_Expr> _70217_index = _1e123450a_buildFromTokens(&(*_self_), _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_20cb95779_IndexingExpr>(_20cb95779_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});;
}



inline jule::Ptr<_20cb95d84_SlicingExpr> _1e123310d_buildSlicing(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _71436_exprTokens, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _71463_start, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _71514_to, jule::Ptr<_20b4e5581_Token>& _71533_errorToken, jule::Ptr<_20b4e5581_Token> _71557_end) {
	jule::Ptr<_20cb95d84_SlicingExpr> _71617_slc = jule::new_ptr<_20cb95d84_SlicingExpr>(_20cb95d84_SlicingExpr{._field_Token=_71533_errorToken, ._field_End=_71557_end, ._field_Expr=_1e123450a_buildFromTokens(&(*_self_), _71436_exprTokens), });;
	if ((_71463_start.len() > 0LL)) {
		_71617_slc.get()._field_Start=_1e123450a_buildFromTokens(&(*_self_), _71463_start);
	};
	if ((_71514_to.len() > 0LL)) {
		_71617_slc.get()._field_To=_1e123450a_buildFromTokens(&(*_self_), _71514_to);
	};
	return _71617_slc;;
}



inline jule::Any _1e123341b_buildBracketRange(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _73040_tokens) {
	jule::Ptr<_20b4e5581_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _73218_exprTokens;;
	jule::I64 _73230_rangeN = 0;;
	({
		_sx_20b4e5581_Token_int __jule_assign_result = _1e1235a5b_getRangeExprTokens(_73040_tokens);
		_73218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_73230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_73218_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1e1232618_buildSlice(&(*_self_), _73040_tokens));;
	} else if ((_73230_rangeN > 0LL)) {
		_1e122a3ad_pushErr(&(*_self_), _73117_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _74717_splitTokens = _73040_tokens.slice(1LL,(_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _74829_to;;
	({
		_sx_20b4e5581_Token_sx_20b4e5581_Token __jule_assign_result = _1e1235275_splitDelim(_74717_splitTokens,static_cast<jule::U64>(11LLU));
		_74818_start = __jule_assign_result.__jule_result_arg0;
		_74829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return static_cast<jule::Any>(_1e123310d_buildSlicing(&(*_self_), _73218_exprTokens,_74818_start,_74829_to,_73117_errorToken,_73040_tokens[(_73040_tokens.len() - 1LL)]));;
	};
	return static_cast<jule::Any>(_1e1232a69_buildIndexing(&(*_self_), _73218_exprTokens,_73040_tokens,_73117_errorToken));;
}



inline jule::Any _1e1233729_buildData(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _75533_tokens) {
	{
		auto _match_expr{ _75533_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1c93e963d:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1c93e9709:;
			{
				return _1e122b414_buildSingle(&(*_self_), _75533_tokens[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1c93e9770:;
			{
				if ((_75533_tokens[0LL].get()._field_Id == static_cast<jule::U64>(30LLU))) {
					return static_cast<jule::Any>(_1e122b722_buildCppLinkedIdent(&(*_self_), _75533_tokens));;
				};
			}
		}
		_match_end_1c93e8e12:;
	};
	jule::Ptr<_20b4e5581_Token> _76717_token = _75533_tokens[(_75533_tokens.len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_76717_token.get()._field_Kind == jule::Str("...", 3)))) {
		return static_cast<jule::Any>(_1e122ca75_buildVariadic(&(*_self_), _75533_tokens));;
	};
	_76717_token=_75533_tokens[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c93ec872:;
			{
				if (((_75533_tokens.len() > 1LL) && (_76717_token.get()._field_Kind == jule::Str("*", 1)))) {
					_76717_token=_75533_tokens[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U64>(34LLU)))) {
						return static_cast<jule::Any>(_1e122c459_buildType(&(*_self_), _75533_tokens));;
					};
				};
				return static_cast<jule::Any>(_1e122ba30_buildUnary(&(*_self_), _75533_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c93ec9c6:;
			{
				if ((_75533_tokens.len() < 3LL)) {
					goto _match_end_1c93ec960;
				};
				if ((_75533_tokens.len() > 3LL)) {
					jule::Ptr<_20b4e5581_Token> _78921_t = _75533_tokens[(_75533_tokens.len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_78921_t.get()._field_Kind == jule::Str(")", 1)))) {
						goto _match_end_1c93ec960;
					};
				};
				jule::Ptr<_20b4e5581_Token> _79517_next = _75533_tokens[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_79517_next.get()._field_Kind != jule::Str("]", 1)))) {
					goto _match_end_1c93ec960;
				};
				return static_cast<jule::Any>(_1e122c459_buildType(&(*_self_), _75533_tokens));;
			}
		}
		_match_end_1c93ec960:;
	};
	_76717_token=_75533_tokens[(_75533_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1c93ed015:;
			{
				return _1e122c767_buildSubIdent(&(*_self_), _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1c9403537:;
			{
				return static_cast<jule::Any>(_1e122c459_buildType(&(*_self_), _75533_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c940359d:;
			{
				return _1e122cd83_buildOpRight(&(*_self_), _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c9403614:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1c9404d85:;
						{
							return _1e122e725_buildParenthesesRange(&(*_self_), _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1c9404e0c:;
						{
							return _1e1231eec_buildBraceRange(&(*_self_), _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1c9404e84:;
						{
							return _1e123341b_buildBracketRange(&(*_self_), _75533_tokens);;
						}
					}
					_match_end_1c940488a:;
				};
			}
		}
		_match_end_1c93eceb0:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		return static_cast<jule::Any>(_1e122c459_buildType(&(*_self_), _75533_tokens));;
	};
	_1e122a3ad_pushErr(&(*_self_), _76717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1e1233ad1_buildBinop(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _83134_tokens, jule::I64 _83152_i) {
	jule::Ptr<_20b4e5581_Token> _83217_op = _83134_tokens[_83152_i];;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _83317_leftTokens = _83134_tokens.slice(0LL,_83152_i);;
	if ((_1e123485c_isTypeOp(_83217_op.get()._field_Kind) && _1e1234b48_isTypeRange(_83317_leftTokens))) {
		return static_cast<jule::Any>(_1e122c459_buildType(&(*_self_), _83134_tokens));;
	};
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _83817_rightTokens = _83134_tokens.slice((_83152_i + 1LL));;
	if ((_83317_leftTokens.len() == 0LL)) {
		_1e122a3ad_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e122a6cc_pushSuggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83817_rightTokens.len() == 0LL)) {
		_1e122a3ad_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e122a6cc_pushSuggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return static_cast<jule::Any>(jule::new_ptr<_20cb921e3_BinopExpr>(_20cb921e3_BinopExpr{._field_Left=_1e123450a_buildFromTokens(&(*_self_), _83317_leftTokens), ._field_Right=_1e123450a_buildFromTokens(&(*_self_), _83817_rightTokens), ._field_Op=_83217_op}));;
}



inline jule::Any _1e1233dde_build(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _85629_tokens) {
	jule::I64 _85713_i = _1e123551c_findLowestPrecOp(_85629_tokens);;
	if ((_85713_i == -1LL)) {
		return _1e1233729_buildData(&(*_self_), _85629_tokens);;
	};
	return _1e1233ad1_buildBinop(&(*_self_), _85629_tokens,_85713_i);;
}



inline jule::Any _1e12341ec_buildKind(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _86433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _86518_parts;;
	jule::Slice<_20b1bc016_Log> _86525_errors;;
	({
		_ssx_20b4e5581_Token_s_20b1bc016_Log __jule_assign_result = _1e1238a2b_parts(_86433_tokens,static_cast<jule::U64>(8LLU),true);
		_86518_parts = __jule_assign_result.__jule_result_arg0;
		_86525_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86525_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_86525_errors);
		return nullptr;;
	} else if ((_86518_parts.len() > 1LL)) {
		return static_cast<jule::Any>(_1e122a9da_buildTuple(&(*_self_), _86518_parts));;
	};
	return _1e1233dde_build(&(*_self_), _86433_tokens);;
}



inline jule::Ptr<_20cb8d81b_Expr> _1e123450a_buildFromTokens(_1e1229b1b_exprBuilder* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _87538_tokens) {
	if ((_87538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	return jule::new_ptr<_20cb8d81b_Expr>(_20cb8d81b_Expr{._field_Token=_87538_tokens[0LL], ._field_End=_87538_tokens[(_87538_tokens.len() - 1LL)], ._field_Kind=_1e12341ec_buildKind(&(*_self_), _87538_tokens)});;
}







std::ostream &operator<<(std::ostream &_Stream, _1e1229b1b_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e123641e_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1e123a07c_stop(_1e1239c4c_parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1e123a2e1_stopped(_1e1239c4c_parser* _self_) {
	return ((*_self_)._field_ast == nullptr);;
}



inline void _1e123a6a9_pushErr(_1e1239c4c_parser* _self_, jule::Ptr<_20b4e5581_Token> _28126_token, jule::Str _28141_fmt, jule::Slice<jule::Any> _28154_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e12391ad_compilerErr(_28126_token,_28141_fmt,_28154_args));;
}



inline void _1e123a9c8_pushSuggestion(_1e1239c4c_parser* _self_, jule::Str _28633_fmt, jule::Slice<jule::Any> _28646_args) {
	{
		_1e12395dc_pushSuggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_28633_fmt,_28646_args);
	};
}



inline jule::Ptr<_20cb8d81b_Expr> _1e123acd6_buildExpr(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _29034_tokens) {
	jule::Ptr<_1e1229b1b_exprBuilder> _29117_ep = jule::new_ptr<_1e1229b1b_exprBuilder>(_1e1229b1b_exprBuilder{._field_p=_self_});;
	jule::Ptr<_20cb8d81b_Expr> _29417_expr = _1e123450a_buildFromTokens(_29117_ep.ptr(), _29034_tokens);;
	return _29417_expr;;
}



inline jule::Ptr<_20cb511e6_Directive> _1e123b0e4_buildDirective(_1e1239c4c_parser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _29837_tokens) {
	if ((_29837_tokens.len() == 1LL)) {
		_1e123a6a9_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_29837_tokens[1LL].get()._field_Column != (_29837_tokens[0LL].get()._field_Column + 1LL))) {
		_1e123a6a9_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_20cb511e6_Directive>(_20cb511e6_Directive{._field_Tag=_29837_tokens[1LL], ._field_Args=_29837_tokens.slice(2LL)});;
}



inline void _1e123b369_pushDirective(_1e1239c4c_parser* _self_, jule::Ptr<_20cb511e6_Directive> _31336_d) {
	if ((_31336_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1c9438319:;
		if (it != expr.end()) {
			jule::Ptr<_20cb511e6_Directive> _31816_pd = *it;
			{
				if ((_31336_d.get()._field_Tag.get()._field_Kind == _31816_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1c9438319:;
			++it;
			goto _iter_begin_1c9438319;
		}
		_iter_end_1c9438319:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_31336_d);;
}



inline jule::Ptr<_20cb99283_ScopeTree> _1e123b721_buildScope(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _32635_tokens, jule::Ptr<_20b4e5581_Token> _32657_end) {
	jule::Ptr<_20cb99283_ScopeTree> _32717_s = _1e121bc0c_newScope();;
	_32717_s.get()._field_End=_32657_end;
	_1e121d604_scopeParser _32917_sp = _1e121d604_scopeParser{._field_p=_self_, };;
	_1e122918c_build(&_32917_sp, _32635_tokens,_32717_s);
	return _32717_s;;
}



inline _x_20cb892ea_TypeDecl_bool _1e123bb72__buildType(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _33642_tokens, jule::I64* _33713_i, jule::Bool _33722_err) {
	_x_20cb892ea_TypeDecl_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1e124a961_typeBuilder _33817_tb = _1e124a961_typeBuilder{._field_p=_self_, ._field_tokens=_33642_tokens, ._field_i=_33713_i, ._field_err=_33722_err};;
	jule::Ptr<_20cb892ea_TypeDecl> _34418_decl;;
	jule::Bool _34424_ok = false;;
	({
		_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e124dc0b_build(&_33817_tb);
		_34418_decl = __jule_assign_result.__jule_result_arg0;
		_34424_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _34418_decl;
	__jule_func_result.__jule_result_arg1 = _34424_ok;
	return __jule_func_result;;
}



inline _x_20cb892ea_TypeDecl_bool _1e123c0c3_buildType(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _34941_tokens, jule::I64* _35013_i, jule::Bool _35022_err) {
	_x_20cb892ea_TypeDecl_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_20b4e5581_Token> _35113_token = _34941_tokens[(*(_35013_i))];;
	jule::Ptr<_20cb892ea_TypeDecl> _35218_t;;
	jule::Bool _35221_ok = false;;
	({
		_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123bb72__buildType(_self_, _34941_tokens,_35013_i,_35022_err);
		_35218_t = __jule_assign_result.__jule_result_arg0;
		_35221_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_35022_err && (!(_35221_ok)))) {
		_1e123a6a9_pushErr(_self_.ptr(), _35113_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _35218_t;
	__jule_func_result.__jule_result_arg1 = _35221_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_20cba05b9_TypeAliasDecl> _1e123c3d1_buildTypeAliasDecl(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _35943_tokens) {
	jule::I64 _36017_i = 1LL;;
	if ((_36017_i >= _35943_tokens.len())) {
		_1e123a6a9_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20cba05b9_TypeAliasDecl> _36517_tad = jule::new_ptr<_20cba05b9_TypeAliasDecl>(_20cba05b9_TypeAliasDecl{._field_Token=_35943_tokens[1LL], ._field_Ident=_35943_tokens[1LL].get()._field_Kind, });;
	jule::Ptr<_20b4e5581_Token> _36917_token = _35943_tokens[_36017_i];;
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e123a6a9_pushErr(_self_.ptr(), _36917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_1e123a6a9_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	_36917_token=_35943_tokens[_36017_i];
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1e123a6a9_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_1e123a6a9_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	jule::Ptr<_20cb892ea_TypeDecl> _39018_t;;
	jule::Bool _39021_ok = false;;
	({
		_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType(_self_, _35943_tokens,(&(_36017_i)),true);
		_39018_t = __jule_assign_result.__jule_result_arg0;
		_39021_ok = __jule_assign_result.__jule_result_arg1;
	});
	_36517_tad.get()._field_Kind=_39018_t;
	if ((_39021_ok && (_36017_i < _35943_tokens.len()))) {
		_1e123a6a9_pushErr(_self_.ptr(), _35943_tokens[_36017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_36517_tad.get()._field_Public=_1e12498e9_isPub(_36517_tad.get()._field_Ident);
	return _36517_tad;;
}



inline void _1e123c700_buildVarTypeAndExpr(jule::Ptr<_1e1239c4c_parser> _self_, jule::Ptr<_20cb9bc58_VarDecl>& _39944_v, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _39962_tokens) {
	jule::I64 _40017_i = 0LL;;
	jule::Ptr<_20b4e5581_Token> _40117_tok = _39962_tokens[_40017_i];;
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40017_i)++;
		if (((_40017_i >= _39962_tokens.len()) || ((_39962_tokens[_40017_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_39962_tokens[_40017_i].get()._field_Kind == jule::Str("=", 1))))) {
			_1e123a6a9_pushErr(_self_.ptr(), _40117_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_20cb892ea_TypeDecl> _40922_t;;
		jule::Bool _40925_ok = false;;
		({
			_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType(_self_, _39962_tokens,(&(_40017_i)),true);
			_40922_t = __jule_assign_result.__jule_result_arg0;
			_40925_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_40925_ok) {
			_39944_v.get()._field_Kind=_40922_t;
			if ((_40017_i >= _39962_tokens.len())) {
				return;;
			};
			_40117_tok=_39962_tokens[_40017_i];
		};
	};
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((_40117_tok.get()._field_Kind != jule::Str("=", 1))) {
			_1e123a6a9_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_20b4e5581_Token>> _42421_exprTokens = _39962_tokens.slice((_40017_i + 1LL));;
		if ((_42421_exprTokens.len() == 0LL)) {
			_1e123a6a9_pushErr(_self_.ptr(), _40117_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_39944_v.get()._field_Expr=_1e123acd6_buildExpr(_self_, _42421_exprTokens);
	} else {
		_1e123a6a9_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e123ca1e_buildVarCommon(jule::Ptr<_1e1239c4c_parser> _self_, jule::Ptr<_20cb9bc58_VarDecl>& _43539_v, jule::Slice<jule::Ptr<_20b4e5581_Token>> _43556_tokens) {
	_43539_v.get()._field_Token=_43556_tokens[0LL];
	if ((_43539_v.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e123a6a9_pushErr(_self_.ptr(), _43539_v.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_43539_v.get()._field_Ident=_43539_v.get()._field_Token.get()._field_Kind;
	_43539_v.get()._field_Public=_1e12498e9_isPub(_43539_v.get()._field_Ident);
	_43539_v.get()._field_Kind=nullptr;
	if ((_43556_tokens.len() > 1LL)) {
		_43556_tokens=_43556_tokens.slice(1LL);
		_1e123c700_buildVarTypeAndExpr(_self_, _43539_v,_43556_tokens);
	};
}



inline void _1e123cdd7_buildVarBegin(_1e1239c4c_parser* _self_, jule::Ptr<_20cb9bc58_VarDecl>& _45137_v, jule::I64& _45155_i, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _45164_tokens) {
	jule::Ptr<_20b4e5581_Token> _45213_tok = _45164_tokens[_45155_i];;
	{
		auto &_match_expr{ _45213_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1c9452d8e:;
			{
				_45137_v.get()._field_Statically=true;
				goto _case_begin_1c9452597;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1c9452597:;
			{
				(_45155_i)++;
				if ((_45155_i >= _45164_tokens.len())) {
					_1e123a6a9_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45164_tokens[_45155_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_45137_v.get()._field_Mutable=true;
					(_45155_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1c945260d:;
			{
				(_45155_i)++;
				_45137_v.get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1c94524ed:;
			{
				_1e123a6a9_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c9452366:;
	};
	if ((_45155_i >= _45164_tokens.len())) {
		_1e123a6a9_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_20cb9bc58_VarDecl> _1e123d1e5_buildVar(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _48132_tokens) {
	jule::I64 _48217_i = 0LL;;
	jule::Ptr<_20cb9bc58_VarDecl> _48317_v = jule::new_ptr<_20cb9bc58_VarDecl>(_20cb9bc58_VarDecl{._field_Token=_48132_tokens[0LL], });;
	_1e123cdd7_buildVarBegin(_self_.ptr(), _48317_v,_48217_i,_48132_tokens);
	if ((_48217_i >= _48132_tokens.len())) {
		return nullptr;;
	};
	_48132_tokens=_48132_tokens.slice(_48217_i);
	if (((_48132_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_48132_tokens[0LL].get()._field_Kind == jule::Str("&", 1)))) {
		_48317_v.get()._field_Reference=true;
		if ((_48132_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_48132_tokens=_48132_tokens.slice(1LL);
	};
	_1e123ca1e_buildVarCommon(_self_, _48317_v,_48132_tokens);
	return _48317_v;;
}



inline jule::Ptr<_20cb965e3_GenericDecl> _1e123d503_buildGeneric(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _50337_tokens) {
	jule::Ptr<_20cb965e3_GenericDecl> _50417_g = jule::new_ptr<_20cb965e3_GenericDecl>(_20cb965e3_GenericDecl{._field_Token=_50337_tokens[0LL], });;
	if ((_50417_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e123a6a9_pushErr(_self_.ptr(), _50417_g.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_50417_g.get()._field_Ident=_50417_g.get()._field_Token.get()._field_Kind;
	if ((_50337_tokens.len() > 1LL)) {
		if ((_50337_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_1e123a6a9_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		if ((_50337_tokens.len() == 2LL)) {
			_1e123a6a9_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_20b4e5581_Token>> _52121_constraintTokens = _50337_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _52222_parts;;
		jule::Slice<_20b1bc016_Log> _52229_errors;;
		({
			_ssx_20b4e5581_Token_s_20b1bc016_Log __jule_assign_result = _1e1238641_partsKind(_52121_constraintTokens,jule::Str("|", 1),true);
			_52222_parts = __jule_assign_result.__jule_result_arg0;
			_52229_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_52229_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52229_errors);
			return nullptr;;
		};
		_50417_g.get()._field_Constraint=jule::new_ptr<_20cb96170_Constraint>(_20cb96170_Constraint{._field_Mask=jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>>::alloc(0LL, _52222_parts.len())});
		{
			auto &expr = _52222_parts;
			auto it = expr.begin();
			_iter_begin_1c945e87e:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_20b4e5581_Token>> _52825_part = *it;
				{
					jule::I64 _52925_i = 0LL;;
					jule::Ptr<_20cb892ea_TypeDecl> _53026_kind;;
					({
						_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType(_self_, _52825_part,(&(_52925_i)),true);
						_53026_kind = __jule_assign_result.__jule_result_arg0;
					});
					_50417_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50417_g.get()._field_Constraint.get()._field_Mask,1);_50417_g.get()._field_Constraint.get()._field_Mask.__push(_53026_kind);;
					if ((_52925_i < _52825_part.len())) {
						_1e123a6a9_pushErr(_self_.ptr(), _52825_part[_52925_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_1c945e87e:;
				++it;
				goto _iter_begin_1c945e87e;
			}
			_iter_end_1c945e87e:;
		};
	};
	return _50417_g;;
}



inline jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>> _1e123d8aa_buildGenerics(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _54038_tokens, jule::Ptr<_20b4e5581_Token>& _54057_errorToken) {
	if ((_54038_tokens.len() == 0LL)) {
		_1e123a6a9_pushErr(_self_.ptr(), _54057_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _54618_parts;;
	jule::Slice<_20b1bc016_Log> _54625_errors;;
	({
		_ssx_20b4e5581_Token_s_20b1bc016_Log __jule_assign_result = _1e1238a2b_parts(_54038_tokens,static_cast<jule::U64>(8LLU),true);
		_54618_parts = __jule_assign_result.__jule_result_arg0;
		_54625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54625_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54625_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>> _55217_generics = jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>>::alloc(0LL, _54618_parts.len());;
	{
		auto &expr = _54618_parts;
		auto it = expr.begin();
		_iter_begin_1c9464037:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20b4e5581_Token>> _55321_part = *it;
			{
				_55217_generics = jule::alloc_for_append(_55217_generics,1);_55217_generics.__push(_1e123d503_buildGeneric(_self_, _55321_part));;
			}
			_iter_next_1c9464037:;
			++it;
			goto _iter_begin_1c9464037;
		}
		_iter_end_1c9464037:;
	};
	return _55217_generics;;
}



inline jule::Ptr<_20cb99959_ParamDecl> _1e123dbb8_buildSelfParam(_1e1239c4c_parser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _56037_tokens) {
	if ((_56037_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_20cb99959_ParamDecl> _56517_param = jule::new_ptr<_20cb99959_ParamDecl>();;
	jule::I64 _56817_i = 0LL;;
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_56517_param.get()._field_Mutable=true;
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1e123a6a9_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Kind == jule::Str("&", 1))) {
		_56517_param.get()._field_Ident=jule::Str("&", 1);
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1e123a6a9_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(27LLU))) {
		_56517_param.get()._field_Ident+=jule::Str("self", 4);
		_56517_param.get()._field_Token=_56037_tokens[_56817_i];
		(_56817_i)++;
		if ((_56817_i < _56037_tokens.len())) {
			_1e123a6a9_pushErr(&(*_self_), _56037_tokens[_56817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _56517_param;;
}



inline void _1e123e081_paramTypeBegin(_1e1239c4c_parser* _self_, jule::Ptr<_20cb99959_ParamDecl>& _59938_param, jule::I64& _59962_i, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _59971_tokens) {
	for (; (_59962_i < _59971_tokens.len()); (_59962_i)++) {
		{
			jule::Ptr<_20b4e5581_Token> _60117_token = _59971_tokens[_59962_i];;
			if ((_60117_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60117_token.get()._field_Kind != jule::Str("...", 3))) {
				return;;
			};
			if (_59938_param.get()._field_Variadic) {
				_1e123a6a9_pushErr(&(*_self_), _60117_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1c946ae1d;
			};
			_59938_param.get()._field_Variadic=true;
		}
	_iter_next_1c946ae1d:;
	}
	_iter_end_1c946ae1d:;;
}



inline void _1e123e3a0_buildParamType(jule::Ptr<_1e1239c4c_parser> _self_, jule::Ptr<_20cb99959_ParamDecl>& _61639_param, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _61663_tokens) {
	jule::I64 _61717_i = 0LL;;
	_1e123e081_paramTypeBegin(_self_.ptr(), _61639_param,_61717_i,_61663_tokens);
	if ((_61717_i >= _61663_tokens.len())) {
		return;;
	};
	({
		_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType(_self_, _61663_tokens,(&(_61717_i)),true);
		_61639_param.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_61717_i < _61663_tokens.len())) {
		_1e123a6a9_pushErr(_self_.ptr(), _61663_tokens[_61717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e123e6be_buildParamBody(jule::Ptr<_1e1239c4c_parser> _self_, jule::Ptr<_20cb99959_ParamDecl>& _62939_param, jule::Slice<jule::Ptr<_20b4e5581_Token>> _62962_tokens) {
	jule::Ptr<_20b4e5581_Token> _63017_tok = _62962_tokens[0LL];;
	_62939_param.get()._field_Ident=_63017_tok.get()._field_Kind;
	if ((_62962_tokens.len() == 1LL)) {
		return;;
	} else if ((_62962_tokens.len() < 3LL)) {
		_1e123a6a9_pushErr(_self_.ptr(), _63017_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_62962_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1e123e3a0_buildParamType(_self_, _62939_param,_62962_tokens);
		return;;
	};
	_62962_tokens=_62962_tokens.slice(2LL);
	_1e123e3a0_buildParamType(_self_, _62939_param,_62962_tokens);
}



inline jule::Ptr<_20cb99959_ParamDecl> _1e123e9cc_buildParam(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _64734_tokens) {
	jule::Ptr<_20cb99959_ParamDecl> _64817_param = jule::new_ptr<_20cb99959_ParamDecl>(_20cb99959_ParamDecl{._field_Token=_64734_tokens[0LL], });;
	if ((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_64817_param.get()._field_Mutable=true;
		if ((_64734_tokens.len() == 1LL)) {
			_1e123a6a9_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_64734_tokens=_64734_tokens.slice(1LL);
		_64817_param.get()._field_Token=_64734_tokens[0LL];
	};
	if ((_64734_tokens.len() >= 3LL)) {
		if (((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64817_param.get()._field_Token.get()._field_Kind == jule::Str("&", 1)))) {
			if ((_64734_tokens.len() == 1LL)) {
				_1e123a6a9_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_64734_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_64734_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_64817_param.get()._field_Reference=true;
				_64734_tokens=_64734_tokens.slice(1LL);
				_64817_param.get()._field_Token=_64734_tokens[0LL];
			};
		};
	};
	if ((_64817_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_64817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1e123e3a0_buildParamType(_self_, _64817_param,_64734_tokens);
	} else {
		_1e123e6be_buildParamBody(_self_, _64817_param,_64734_tokens);
	};
	return _64817_param;;
}



inline void _1e123ec52_checkParams(_1e1239c4c_parser* _self_, jule::Slice<jule::Ptr<_20cb99959_ParamDecl>>& _69035_params) {
	{
		auto &expr = _69035_params;
		auto it = expr.begin();
		_iter_begin_1c947a27e:;
		if (it != expr.end()) {
			jule::Ptr<_20cb99959_ParamDecl> _69121_param = *it;
			{
				if ((_20cb99cbc_IsSelf(_69121_param.ptr()) || (_69121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1c947a27e;
				};
				if ((_69121_param.get()._field_Token == nullptr)) {
					_1e123a6a9_pushErr(&(*_self_), _69121_param.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69121_param.get()._field_Kind=jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_20cb898b1_IdentTypeDecl>(_20cb898b1_IdentTypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Ident=_69121_param.get()._field_Token.get()._field_Kind, }))});
					_69121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1c947a27e:;
			++it;
			goto _iter_begin_1c947a27e;
		}
		_iter_end_1c947a27e:;
	};
}



inline jule::Slice<jule::Ptr<_20cb99959_ParamDecl>> _1e1240109_buildParams(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _71036_tokens, jule::Bool _71054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _71118_parts;;
	jule::Slice<_20b1bc016_Log> _71125_errs;;
	({
		_ssx_20b4e5581_Token_s_20b1bc016_Log __jule_assign_result = _1e1238a2b_parts(_71036_tokens,static_cast<jule::U64>(8LLU),true);
		_71118_parts = __jule_assign_result.__jule_result_arg0;
		_71125_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71125_errs);
	if ((_71118_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20cb99959_ParamDecl>> _71717_params = nullptr;;
	if ((_71054_method && (_71118_parts.len() > 0LL))) {
		jule::Ptr<_20cb99959_ParamDecl> _71921_param = _1e123dbb8_buildSelfParam(_self_.ptr(), _71118_parts[0LL]);;
		if (((_71921_param != nullptr) && _20cb99cbc_IsSelf(_71921_param.ptr()))) {
			_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_71921_param);;
			_71118_parts=_71118_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71118_parts;
		auto it = expr.begin();
		_iter_begin_1c947e96a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20b4e5581_Token>> _72621_part = *it;
			{
				jule::Ptr<_20cb99959_ParamDecl> _72721_param = _1e123e9cc_buildParam(_self_, _72621_part);;
				if ((_72721_param != nullptr)) {
					_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_72721_param);;
				};
			}
			_iter_next_1c947e96a:;
			++it;
			goto _iter_begin_1c947e96a;
		}
		_iter_end_1c947e96a:;
	};
	_1e123ec52_checkParams(_self_.ptr(), _71717_params);
	return _71717_params;;
}



inline _x_20cb8c40d_RetTypeDecl_bool _1e12404b1_buildMultiRetType(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _73742_tokens, jule::I64& _73765_i) {
	_x_20cb8c40d_RetTypeDecl_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_20cb8c40d_RetTypeDecl>();
	(_73765_i)++;
	if ((_73765_i >= _73742_tokens.len())) {
		(_73765_i)--;
		({
			_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType(_self_, _73742_tokens,(&(_73765_i)),false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	(_73765_i)--;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _74717_rangeTokens = _1e1237eae_range(_73765_i,jule::Str("(", 1),jule::Str(")", 1),_73742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _74918_parts;;
	jule::Slice<_20b1bc016_Log> _74925_errs;;
	({
		_ssx_20b4e5581_Token_s_20b1bc016_Log __jule_assign_result = _1e1238a2b_parts(_74717_rangeTokens,static_cast<jule::U64>(8LLU),true);
		_74918_parts = __jule_assign_result.__jule_result_arg0;
		_74925_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_74925_errs);
	if ((_74918_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>> _75517_types = jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>>::alloc(0LL, _74918_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_20b4e5581_Token>>::alloc(0LL, _74918_parts.len());
	{
		auto &expr = _74918_parts;
		auto it = expr.begin();
		_iter_begin_1c9485c90:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20b4e5581_Token>> _75721_part = *it;
			{
				jule::Ptr<_20b4e5581_Token> _75821_token = _75721_part[0LL];;
				jule::I64 _75921_offset = 0LL;;
				if ((_75721_part.len() > 1LL)) {
					_75821_token=_75721_part[1LL];
					if ((_75821_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_75921_offset=2LL;
						if ((_75721_part.len() < 3LL)) {
							_1e123a6a9_pushErr(_self_.ptr(), _75821_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1c9485c90;
						};
					};
				};
				_75821_token=_75721_part[0LL];
				if ((_75921_offset != 2LL)) {
					jule::Ptr<_20b4e5581_Token> _77525_newToken = jule::new_ptr<_20b4e5581_Token>((*(_75821_token)));;
					_77525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_77525_newToken);;
				} else {
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_75821_token);;
				};
				jule::Ptr<_20cb892ea_TypeDecl> _78222_tk;;
				({
					_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType(_self_, _75721_part,(&(_75921_offset)),true);
					_78222_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_75921_offset < _75721_part.len())) {
					_1e123a6a9_pushErr(_self_.ptr(), _75721_part[_75921_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_75517_types = jule::alloc_for_append(_75517_types,1);_75517_types.__push(_78222_tk);;
			}
			_iter_next_1c9485c90:;
			++it;
			goto _iter_begin_1c9485c90;
		}
		_iter_end_1c9485c90:;
	};
	if ((_75517_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Token=_73742_tokens[0LL], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_20cb8ad8a_TupleTypeDecl>(_20cb8ad8a_TupleTypeDecl{._field_Types=_75517_types}))});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_75517_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline _x_20cb8c40d_RetTypeDecl_bool _1e1240868_buildRetType(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _80537_tokens, jule::I64& _80560_i) {
	_x_20cb8c40d_RetTypeDecl_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_20cb8c40d_RetTypeDecl>();
	if ((_80560_i >= _80537_tokens.len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_20b4e5581_Token> _81117_token = _80537_tokens[_80560_i];;
	{
		auto &_match_expr{ _81117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c948e44c:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("{", 1))) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c948e4b3:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("=", 1))) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1c948e529:;
			{
				if (((_80560_i + 1LL) >= _80537_tokens.len())) {
					_1e123a6a9_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				(_80560_i)++;
				_81117_token=_80537_tokens[_80560_i];
				if ((_81117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81117_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1c9491d9a:;
							{
								({
									_x_20cb8c40d_RetTypeDecl_bool __jule_assign_result = _1e12404b1_buildMultiRetType(_self_, _80537_tokens,_80560_i);
									__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
									__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
								});
								return __jule_func_result;;
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1c9491e22:;
							{
								_1e123a6a9_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return __jule_func_result;;
							}
						}
						_match_end_1c9491d01:;
					};
				};
				({
					_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType(_self_, _80537_tokens,(&(_80560_i)),true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1c948e35e:;
	};
	(_80560_i)++;
	_1e123a6a9_pushErr(_self_.ptr(), _81117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_20cb9ac79_FnDecl> _1e1240cb9_buildFnPrototype(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _85041_tokens, jule::I64& _85064_i, jule::Bool _85072_method) {
	jule::Ptr<_20cb9ac79_FnDecl> _85117_f = jule::new_ptr<_20cb9ac79_FnDecl>(_20cb9ac79_FnDecl{._field_Token=_85041_tokens[_85064_i], });;
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_85117_f.get()._field_Statically=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_1e123a6a9_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_85117_f.get()._field_Unsafety=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_1e123a6a9_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	(_85064_i)++;
	if ((_85064_i >= _85041_tokens.len())) {
		_1e123a6a9_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20b4e5581_Token> _88413_tok = _85041_tokens[_85064_i];;
	if ((_88413_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_1e123a6a9_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Ident=_88413_tok.get()._field_Kind;
	} else {
		_85117_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_20b4e5581_Token> _89613_errorToken = _85041_tokens[_85064_i];;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _89717_genericsTokens = _1e1237eae_range(_85064_i,jule::Str("[", 1),jule::Str("]", 1),_85041_tokens);;
	if ((_89717_genericsTokens != nullptr)) {
		_85117_f.get()._field_Generics=_1e123d8aa_buildGenerics(_self_, _89717_genericsTokens,_89613_errorToken);
	};
	if ((_85041_tokens[_85064_i].get()._field_Kind != jule::Str("(", 1))) {
		_1e123a6a9_pushErr(_self_.ptr(), _85041_tokens[_85064_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _90717_paramsToks = _1e1237eae_range(_85064_i,jule::Str("(", 1),jule::Str(")", 1),_85041_tokens);;
	if ((_90717_paramsToks.len() > 0LL)) {
		_85117_f.get()._field_Params=_1e1240109_buildParams(_self_, _90717_paramsToks,_85072_method);
	};
	if ((_85064_i < _85041_tokens.len())) {
		jule::Ptr<_20b4e5581_Token> _91317_token = _85041_tokens[_85064_i];;
		if (((_91317_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_91317_token.get()._field_Kind == jule::Str("!", 1)))) {
			_85117_f.get()._field_Exceptional=true;
			(_85064_i)++;
		};
	};
	_85117_f.get()._field_Public=_1e12498e9_isPub(_85117_f.get()._field_Ident);
	({
		_x_20cb8c40d_RetTypeDecl_bool __jule_assign_result = _1e1240868_buildRetType(_self_, _85041_tokens,_85064_i);
		_85117_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _85117_f;;
}



inline jule::Ptr<_20cb9ac79_FnDecl> _1e124121a_buildFn(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _92732_tokens, jule::Bool _92750_method, jule::Bool _92764_prototype) {
	jule::I64 _92817_i = 0LL;;
	jule::Ptr<_20cb9ac79_FnDecl> _92917_f = _1e1240cb9_buildFnPrototype(_self_, _92732_tokens,_92817_i,_92750_method);;
	if (_92764_prototype) {
		if ((_92817_i < _92732_tokens.len())) {
			_1e123a6a9_pushErr(_self_.ptr(), _92732_tokens[(_92817_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _92917_f;;
	} else if ((_92917_f == nullptr)) {
		return _92917_f;;
	};
	if ((_92817_i >= _92732_tokens.len())) {
		_1e123a07c_stop(_self_.ptr());
		_1e123a6a9_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _94517_blockTokens = _1e1237eae_range(_92817_i,jule::Str("{", 1),jule::Str("}", 1),_92732_tokens);;
	if ((_94517_blockTokens != nullptr)) {
		_92917_f.get()._field_Scope=_1e123b721_buildScope(_self_, _94517_blockTokens,_92732_tokens[(_92817_i - 1LL)]);
		_92917_f.get()._field_Scope.get()._field_Unsafety=_92917_f.get()._field_Unsafety;
		if ((_92817_i < _92732_tokens.len())) {
			_1e123a6a9_pushErr(_self_.ptr(), _92732_tokens[_92817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1e123a07c_stop(_self_.ptr());
		_1e123a6a9_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _92917_f;;
}



inline jule::Slice<jule::Ptr<_20b4e5581_Token>> _1e1241528_getUseDeclSelectors(_1e1239c4c_parser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _96142_tokens) {
	jule::I64 _96217_i = 0LL;;
	_96142_tokens=_1e1237eae_range(_96217_i,jule::Str("{", 1),jule::Str("}", 1),_96142_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _96418_parts;;
	jule::Slice<_20b1bc016_Log> _96425_errs;;
	({
		_ssx_20b4e5581_Token_s_20b1bc016_Log __jule_assign_result = _1e1238a2b_parts(_96142_tokens,static_cast<jule::U64>(8LLU),true);
		_96418_parts = __jule_assign_result.__jule_result_arg0;
		_96425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96425_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_96425_errs);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _97017_selectors = jule::Slice<jule::Ptr<_20b4e5581_Token>>::alloc(0LL, _96418_parts.len());;
	{
		auto &expr = _96418_parts;
		auto it = expr.begin();
		_iter_begin_1c94a81be:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20b4e5581_Token>> _97121_part = *it;
			{
				if ((_97121_part.len() > 1LL)) {
					_1e123a6a9_pushErr(&(*_self_), _97121_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_20b4e5581_Token> _97521_tok = _97121_part[0LL];;
				if (((_97521_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97521_tok.get()._field_Id != static_cast<jule::U64>(27LLU)))) {
					_1e123a6a9_pushErr(&(*_self_), _97521_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1e123a9c8_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1c94a81be;
				};
				_97017_selectors = jule::alloc_for_append(_97017_selectors,1);_97017_selectors.__push(_97521_tok);;
			}
			_iter_next_1c94a81be:;
			++it;
			goto _iter_begin_1c94a81be;
		}
		_iter_end_1c94a81be:;
	};
	return _97017_selectors;;
}



inline void _1e1241847_buildCppUseDecl(_1e1239c4c_parser* _self_, jule::Ptr<_20cba19a5_UseDecl>& _98639_decl, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _98656_tokens) {
	if ((_98656_tokens.len() > 1LL)) {
		_1e123a6a9_pushErr(&(*_self_), _98656_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20b4e5581_Token> _99013_token = _98656_tokens[0LL];;
	if (((_99013_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99013_token.get()._field_Kind[0LL] != '`') && (_99013_token.get()._field_Kind[0LL] != '\"')))) {
		_1e123a6a9_pushErr(&(*_self_), _99013_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_98639_decl.get()._field_CppLinked=true;
	_98639_decl.get()._field_LinkPath=_99013_token.get()._field_Kind.slice(1LL,(_99013_token.get()._field_Kind.len() - 1LL));
}



inline void _1e1241b66_buildStdUseDecl(_1e1239c4c_parser* _self_, jule::Ptr<_20cba19a5_UseDecl>& _99939_decl, jule::Slice<jule::Ptr<_20b4e5581_Token>> _99959_tokens) {
	_99939_decl.get()._field_Std=true;
	jule::Ptr<_20b4e5581_Token> _100217_token = _99959_tokens[0LL];;
	if ((_99959_tokens.len() < 3LL)) {
		_1e123a6a9_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_99959_tokens=_99959_tokens.slice(2LL);
	_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1c94b1947:;
			{
				_1e123a6a9_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c94b19be:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("}", 1))) {
					_1e123a6a9_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_20b4e5581_Token>> _101921_selectors = nullptr;;
				({
					_sx_20b4e5581_Token_sx_20b4e5581_Token __jule_assign_result = _1e1238256_rangeLast(_99959_tokens);
					_99959_tokens = __jule_assign_result.__jule_result_arg0;
					_101921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				_99939_decl.get()._field_Selected=_1e1241528_getUseDeclSelectors(&(*_self_), _101921_selectors);
				if ((_99959_tokens.len() == 0LL)) {
					_1e123a6a9_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1e123a6a9_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1e123a6a9_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c94b1a46:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("*", 1))) {
					_1e123a6a9_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1e123a6a9_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1e123a6a9_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1e123a6a9_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99939_decl.get()._field_Full=true;
			}
		}
		_match_end_1c94b18c0:;
	};
	_99939_decl.get()._field_LinkPath=(jule::Str("std::", 5) + _1e1239884_tokstoa(_99959_tokens));
}



inline void _1e1241e85_buildIdentUseDecl(_1e1239c4c_parser* _self_, jule::Ptr<_20cba19a5_UseDecl>& _106141_decl, jule::Slice<jule::Ptr<_20b4e5581_Token>> _106161_tokens) {
	_106141_decl.get()._field_Std=false;
	jule::Ptr<_20b4e5581_Token> _106417_token = _106161_tokens[(_106161_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1c94bb17c:;
			{
				_1e123a6a9_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c94bb765:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("}", 1))) {
					_1e123a6a9_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_20b4e5581_Token>> _107521_selectors = nullptr;;
				({
					_sx_20b4e5581_Token_sx_20b4e5581_Token __jule_assign_result = _1e1238256_rangeLast(_106161_tokens);
					_106161_tokens = __jule_assign_result.__jule_result_arg0;
					_107521_selectors = __jule_assign_result.__jule_result_arg1;
				});
				_106141_decl.get()._field_Selected=_1e1241528_getUseDeclSelectors(&(*_self_), _107521_selectors);
				if ((_106161_tokens.len() == 0LL)) {
					_1e123a6a9_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1e123a6a9_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1e123a6a9_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c94bb8ec:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("*", 1))) {
					_1e123a6a9_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1e123a6a9_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1e123a6a9_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1e123a6a9_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106141_decl.get()._field_Full=true;
			}
		}
		_match_end_1c94bb710:;
	};
	_106141_decl.get()._field_LinkPath=_1e1239884_tokstoa(_106161_tokens);
}



inline void _1e12422a4_parseUseDecl(_1e1239c4c_parser* _self_, jule::Ptr<_20cba19a5_UseDecl>& _112436_decl, jule::Slice<jule::Ptr<_20b4e5581_Token>> _112456_tokens) {
	if (_112436_decl.get()._field_CppLinked) {
		_1e1241847_buildCppUseDecl(&(*_self_), _112436_decl,_112456_tokens);
		return;;
	};
	jule::Ptr<_20b4e5581_Token> _113017_token = _112456_tokens[0LL];;
	if ((_113017_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e123a6a9_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_112456_tokens.len() > 2LL) && (_112456_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		_112436_decl.get()._field_Alias=_113017_token.get()._field_Kind;
		if ((_112456_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1e123a6a9_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1e123a9c8_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_112456_tokens=_112456_tokens.slice(2LL);
		_113017_token=_112456_tokens[0LL];
	};
	;
	{
		
		if ((_113017_token.get()._field_Kind == jule::Str("std", 3))) {
			_case_begin_1c94c7c16:;
			{
				_1e1241b66_buildStdUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		else {
			_case_begin_1c94c9cd4:;
			{
				_1e1241e85_buildIdentUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		_match_end_1c94c9c6d:;
	};
}



inline jule::Ptr<_20cba19a5_UseDecl> _1e124265b_buildUseDecl(_1e1239c4c_parser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _115835_tokens, jule::Bool _115853_cpp_linked) {
	jule::Ptr<_20cba19a5_UseDecl> _115917_decl = jule::new_ptr<_20cba19a5_UseDecl>(_20cba19a5_UseDecl{._field_Token=_115835_tokens[0LL], ._field_CppLinked=_115853_cpp_linked, });;
	if ((_115835_tokens.len() < 2LL)) {
		_1e123a6a9_pushErr(&(*_self_), _115917_decl.get()._field_Token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_115835_tokens=_115835_tokens.slice(1LL);
	_1e12422a4_parseUseDecl(&(*_self_), _115917_decl,_115835_tokens);
	return _115917_decl;;
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e1242a13_buildTypeEnumItemKind(jule::Ptr<_1e1239c4c_parser> _self_, jule::I64& _117246_i, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _117259_tokens) {
	jule::I64 _117317_braceN = 0LL;;
	jule::I64 _117413_exprStart = _117246_i;;
	for (; (_117246_i < _117259_tokens.len()); (_117246_i)++) {
		{
			jule::Ptr<_20b4e5581_Token> _117617_t = _117259_tokens[_117246_i];;
			if ((_117617_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _117617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1c94cee3d:;
						{
							(_117317_braceN)++;
							goto _iter_next_1c94cd997;
						}
					}
					else {
						_case_begin_1c94cea31:;
						{
							(_117317_braceN)--;
						}
					}
					_match_end_1c94ce822:;
				};
			};
			if ((_117317_braceN > 0LL)) {
				goto _iter_next_1c94cd997;
			};
			if (((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_117246_i + 1LL) >= _117259_tokens.len()))) {
				jule::Slice<jule::Ptr<_20b4e5581_Token>> _119225_kindTokens = nullptr;;
				if ((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart,_117246_i);
				} else {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart);
				};
				jule::I64 _119825_j = 0LL;;
				jule::Ptr<_20cb892ea_TypeDecl> _119926_kind;;
				({
					_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType(_self_, _119225_kindTokens,(&(_119825_j)),true);
					_119926_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_119825_j < _119225_kindTokens.len())) {
					_1e123a6a9_pushErr(_self_.ptr(), _119225_kindTokens[_119825_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _119926_kind;;
			};
		}
	_iter_next_1c94cd997:;
	}
	_iter_end_1c94cd997:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_20cba3457_TypeEnumItemDecl>> _1e1242d21_buildTypeEnumItems(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _120943_tokens) {
	jule::Slice<jule::Ptr<_20cba3457_TypeEnumItemDecl>> _121017_items = jule::Slice<jule::Ptr<_20cba3457_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121117_i = 0LL;;
	for (; (_121117_i < _120943_tokens.len()); (_121117_i)++) {
		{
			jule::Ptr<_20b4e5581_Token> _121321_t = _120943_tokens[_121117_i];;
			jule::Ptr<_20cba3457_TypeEnumItemDecl> _121421_item = jule::new_ptr<_20cba3457_TypeEnumItemDecl>();;
			_121421_item.get()._field_Token=_121321_t;
			if (((_121421_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((_120943_tokens.len() - _121117_i) > 2LL))) {
				_121421_item.get()._field_Ident=_121421_item.get()._field_Token.get()._field_Kind;
				_121321_t=_120943_tokens[(_121117_i + 1LL)];
				if ((_121321_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121117_i+=2LL;
					if (((_121117_i >= _120943_tokens.len()) || (_120943_tokens[_121117_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_1e123a6a9_pushErr(_self_.ptr(), _121321_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_1c94d476c;
					};
				};
			};
			_121421_item.get()._field_Kind=_1e1242a13_buildTypeEnumItemKind(_self_, _121117_i,_120943_tokens);
			_121017_items = jule::alloc_for_append(_121017_items,1);_121017_items.__push(_121421_item);;
		}
	_iter_next_1c94d476c:;
	}
	_iter_end_1c94d476c:;;
	return _121017_items;;
}



inline jule::Ptr<_20cba3a62_TypeEnumDecl> _1e124312e_buildTypeEnumDecl(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _123342_tokens) {
	jule::I64 _123417_i = 1LL;;
	jule::Ptr<_20cba3a62_TypeEnumDecl> _123517_e = jule::new_ptr<_20cba3a62_TypeEnumDecl>(_20cba3a62_TypeEnumDecl{._field_Token=_123342_tokens[_123417_i], });;
	if ((_123517_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e123a6a9_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Ident=_123517_e.get()._field_Token.get()._field_Kind;
	_123417_i+=3LL;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _124517_itemTokens = _1e1237eae_range(_123417_i,jule::Str("{", 1),jule::Str("}", 1),_123342_tokens);;
	if ((_124517_itemTokens == nullptr)) {
		_1e123a07c_stop(_self_.ptr());
		_1e123a6a9_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _123517_e;;
	} else if ((_123417_i < _123342_tokens.len())) {
		_1e123a6a9_pushErr(_self_.ptr(), _123342_tokens[_123417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Public=_1e12498e9_isPub(_123517_e.get()._field_Ident);
	_123517_e.get()._field_End=_123342_tokens[(_123417_i - 1LL)];
	_123517_e.get()._field_Items=_1e1242d21_buildTypeEnumItems(_self_, _124517_itemTokens);
	return _123517_e;;
}



inline jule::Ptr<_20cb8d81b_Expr> _1e12434d6_buildEnumItemExpr(jule::Ptr<_1e1239c4c_parser> _self_, jule::I64& _126042_i, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _126055_tokens) {
	jule::I64 _126117_braceN = 0LL;;
	jule::I64 _126213_exprStart = _126042_i;;
	for (; (_126042_i < _126055_tokens.len()); (_126042_i)++) {
		{
			jule::Ptr<_20b4e5581_Token> _126417_t = _126055_tokens[_126042_i];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1c94e0e93:;
						{
							(_126117_braceN)++;
							goto _iter_next_1c94de9ec;
						}
					}
					else {
						_case_begin_1c94e0a86:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_1c94e0877:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_1c94de9ec;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_126042_i + 1LL) >= _126055_tokens.len()))) {
				jule::Slice<jule::Ptr<_20b4e5581_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart,_126042_i);
				} else {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart);
				};
				return _1e123acd6_buildExpr(_self_, _128025_exprTokens);;
			};
		}
	_iter_next_1c94de9ec:;
	}
	_iter_end_1c94de9ec:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_20cba1e28_EnumItemDecl>> _1e12437e4_buildEnumItems(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _129239_tokens) {
	jule::Slice<jule::Ptr<_20cba1e28_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_20cba1e28_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _129417_i = 0LL;;
	for (; (_129417_i < _129239_tokens.len()); (_129417_i)++) {
		{
			jule::Ptr<_20b4e5581_Token> _129621_t = _129239_tokens[_129417_i];;
			jule::Ptr<_20cba1e28_EnumItemDecl> _129721_item = jule::new_ptr<_20cba1e28_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_1e123a6a9_pushErr(_self_.ptr(), _129721_item.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= _129239_tokens.len()) || (_129239_tokens[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_129417_i + 1LL) < _129239_tokens.len())) {
					(_129417_i)++;
				};
				_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
				goto _iter_next_1c94e443b;
			};
			(_129417_i)++;
			_129621_t=_129239_tokens[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_1e123a6a9_pushErr(_self_.ptr(), _129621_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_1c94e443b;
			};
			if (((_129417_i >= _129239_tokens.len()) || (_129239_tokens[_129417_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_1e123a6a9_pushErr(_self_.ptr(), _129621_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1c94e443b;
			};
			_129721_item.get()._field_Expr=_1e12434d6_buildEnumItemExpr(_self_, _129417_i,_129239_tokens);
			_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
		}
	_iter_next_1c94e443b:;
	}
	_iter_end_1c94e443b:;;
	return _129317_items;;
}



inline jule::Ptr<_20cba2951_EnumDecl> _1e1243b02_buildEnumDecl(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _132938_tokens) {
	if ((_132938_tokens.len() < 3LL)) {
		_1e123a6a9_pushErr(_self_.ptr(), _132938_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20cba2951_EnumDecl> _133417_e = jule::new_ptr<_20cba2951_EnumDecl>(_20cba2951_EnumDecl{._field_Token=_132938_tokens[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e123a6a9_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134217_i = 2LL;;
	if ((_132938_tokens[_134217_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134217_i)++;
		if ((_134217_i >= _132938_tokens.len())) {
			_1e123a6a9_pushErr(_self_.ptr(), _132938_tokens[(_134217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _133417_e;;
		};
		({
			_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType(_self_, _132938_tokens,(&(_134217_i)),true);
			_133417_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_134217_i >= _132938_tokens.len())) {
			_1e123a07c_stop(_self_.ptr());
			_1e123a6a9_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _133417_e;;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _135917_itemTokens = _1e1237eae_range(_134217_i,jule::Str("{", 1),jule::Str("}", 1),_132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_1e123a07c_stop(_self_.ptr());
		_1e123a6a9_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133417_e;;
	} else if ((_134217_i < _132938_tokens.len())) {
		_1e123a6a9_pushErr(_self_.ptr(), _132938_tokens[_134217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Public=_1e12498e9_isPub(_133417_e.get()._field_Ident);
	_133417_e.get()._field_End=_132938_tokens[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_1e12437e4_buildEnumItems(_self_, _135917_itemTokens);
	return _133417_e;;
}



inline jule::Any _1e1243e10_buildNodeEnumDecl(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _137442_tokens) {
	if (((_137442_tokens.len() > 3LL) && (_137442_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if ((_137442_tokens[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return static_cast<jule::Any>(_1e124312e_buildTypeEnumDecl(_self_, _137442_tokens));;
		};
	};
	return static_cast<jule::Any>(_1e1243b02_buildEnumDecl(_self_, _137442_tokens));;
}



inline jule::Ptr<_20cba3c60_FieldDecl> _1e124421d_buildField(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _138334_tokens) {
	jule::Ptr<_20cba3c60_FieldDecl> _138417_f = jule::new_ptr<_20cba3c60_FieldDecl>();;
	_138417_f.get()._field_Mutable=(_138334_tokens[0LL].get()._field_Id == static_cast<jule::U64>(35LLU));
	if (_138417_f.get()._field_Mutable) {
		if ((_138334_tokens.len() == 1LL)) {
			_1e123a6a9_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(1LL);
	};
	_138417_f.get()._field_Token=_138334_tokens[0LL];
	if ((_138417_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e123a6a9_pushErr(_self_.ptr(), _138417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138417_f.get()._field_Ident=_138417_f.get()._field_Token.get()._field_Kind;
	if ((_138334_tokens.len() == 1LL)) {
		_1e123a6a9_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_138334_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1e123a6a9_pushErr(_self_.ptr(), _138334_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138334_tokens=_138334_tokens.slice(2LL);
	jule::I64 _141217_i = 0LL;;
	({
		_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType(_self_, _138334_tokens,(&(_141217_i)),true);
		_138417_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_141217_i < _138334_tokens.len())) {
		jule::Ptr<_20b4e5581_Token> _141517_token = _138334_tokens[_141217_i];;
		if (((_141517_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_141517_token.get()._field_Kind != jule::Str("=", 1)))) {
			_1e123a6a9_pushErr(_self_.ptr(), _138334_tokens[_141217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_141217_i)++;
		if ((_141217_i >= _138334_tokens.len())) {
			_1e123a6a9_pushErr(_self_.ptr(), _141517_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(_141217_i);
		_138417_f.get()._field_Default=_1e123acd6_buildExpr(_self_, _138334_tokens);
	};
	_138417_f.get()._field_Public=_1e12498e9_isPub(_138417_f.get()._field_Ident);
	return _138417_f;;
}



inline jule::Slice<jule::Ptr<_20cba3c60_FieldDecl>> _1e124452b_buildStructDeclFields(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _143245_tokens) {
	jule::Slice<jule::Ptr<_20cba3c60_FieldDecl>> _143317_fields = nullptr;;
	jule::Slice<jule::Ptr<_1e121ccc9_stmt>> _143417_stmts = _1e121d170_splitStmts(_143245_tokens);;
	{
		auto &expr = _143417_stmts;
		auto it = expr.begin();
		_iter_begin_1c9510e5d:;
		if (it != expr.end()) {
			jule::Ptr<_1e121ccc9_stmt> _143521_stmt = *it;
			{
				_143245_tokens=_143521_stmt.get()._field_tokens;
				jule::Ptr<_20cba3c60_FieldDecl> _143721_f = _1e124421d_buildField(_self_, _143245_tokens);;
				_143317_fields = jule::alloc_for_append(_143317_fields,1);_143317_fields.__push(_143721_f);;
			}
			_iter_next_1c9510e5d:;
			++it;
			goto _iter_begin_1c9510e5d;
		}
		_iter_end_1c9510e5d:;
	};
	return _143317_fields;;
}



inline jule::Ptr<_20cba4513_StructDecl> _1e1244839_buildStructDecl(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _144340_tokens) {
	if ((_144340_tokens.len() < 3LL)) {
		_1e123a6a9_pushErr(_self_.ptr(), _144340_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _144917_i = 1LL;;
	jule::Ptr<_20cba4513_StructDecl> _145017_s = jule::new_ptr<_20cba4513_StructDecl>(_20cba4513_StructDecl{._field_Token=_144340_tokens[_144917_i], });;
	if ((_145017_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e123a6a9_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_144917_i)++;
	if ((_144917_i >= _144340_tokens.len())) {
		_1e123a6a9_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _145017_s;;
	};
	_145017_s.get()._field_Ident=_145017_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_20b4e5581_Token> _146413_errorToken = _144340_tokens[_144917_i];;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _146517_genericsTokens = _1e1237eae_range(_144917_i,jule::Str("[", 1),jule::Str("]", 1),_144340_tokens);;
	if ((_146517_genericsTokens != nullptr)) {
		_145017_s.get()._field_Generics=_1e123d8aa_buildGenerics(_self_, _146517_genericsTokens,_146413_errorToken);
	};
	if ((_144917_i >= _144340_tokens.len())) {
		_1e123a6a9_pushErr(_self_.ptr(), _144340_tokens[(_144917_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;;
	};
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _147517_bodyTokens = _1e1237eae_range(_144917_i,jule::Str("{", 1),jule::Str("}", 1),_144340_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_1e123a07c_stop(_self_.ptr());
		_1e123a6a9_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;;
	};
	if ((_144917_i < _144340_tokens.len())) {
		_1e123a6a9_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_145017_s.get()._field_Public=_1e12498e9_isPub(_145017_s.get()._field_Ident);
	_145017_s.get()._field_Fields=_1e124452b_buildStructDeclFields(_self_, _147517_bodyTokens);
	_145017_s.get()._field_End=_144340_tokens[(_144917_i - 1LL)];
	return _145017_s;;
}



inline void _1e1244aae_checkMethodReceiver(_1e1239c4c_parser* _self_, jule::Ptr<_20cb9ac79_FnDecl>& _149139_f) {
	if (_149139_f.get()._field_Statically) {
		if (((_149139_f.get()._field_Params.len() > 0LL) && _20cb99cbc_IsSelf(_149139_f.get()._field_Params[0LL].ptr()))) {
			_1e123a6a9_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_149139_f.get()._field_Params.len() == 0LL)) {
		_1e123a6a9_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20cb99959_ParamDecl> _150313_param = _149139_f.get()._field_Params[0LL];;
	if ((!(_20cb99cbc_IsSelf(_150313_param.ptr())))) {
		_1e123a6a9_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_20cb9ac79_FnDecl>> _1e1244dbc_buildTraitMethods(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _151041_tokens) {
	jule::Slice<jule::Ptr<_20cb9ac79_FnDecl>> _151117_methods = nullptr;;
	jule::Slice<jule::Ptr<_1e121ccc9_stmt>> _151217_stmts = _1e121d170_splitStmts(_151041_tokens);;
	{
		auto &expr = _151217_stmts;
		auto it = expr.begin();
		_iter_begin_1c952009e:;
		if (it != expr.end()) {
			jule::Ptr<_1e121ccc9_stmt> _151321_stmt = *it;
			{
				_151041_tokens=_151321_stmt.get()._field_tokens;
				if ((_151041_tokens.len() == 0LL)) {
					goto _iter_next_1c952009e;
				};
				jule::Ptr<_20cb9ac79_FnDecl> _151821_f = _1e124121a_buildFn(_self_, _151041_tokens,true,true);;
				if ((_151821_f != nullptr)) {
					if (_20cb9b0cb_IsAnon(_151821_f.ptr())) {
						_1e123a6a9_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1e1244aae_checkMethodReceiver(_self_.ptr(), _151821_f);
					if ((_151821_f.get()._field_Generics.len() > 0LL)) {
						_1e123a6a9_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_151117_methods = jule::alloc_for_append(_151117_methods,1);_151117_methods.__push(_151821_f);;
				};
			}
			_iter_next_1c952009e:;
			++it;
			goto _iter_begin_1c952009e;
		}
		_iter_end_1c952009e:;
	};
	return _151117_methods;;
}



inline jule::Ptr<_20cba4b1d_TraitDecl> _1e12451ca_buildTraitDecl(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _153339_tokens) {
	if ((_153339_tokens.len() < 3LL)) {
		_1e123a6a9_pushErr(_self_.ptr(), _153339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20cba4b1d_TraitDecl> _153817_t = jule::new_ptr<_20cba4b1d_TraitDecl>(_20cba4b1d_TraitDecl{._field_Token=_153339_tokens[1LL], });;
	if ((_153817_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e123a6a9_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Ident=_153817_t.get()._field_Token.get()._field_Kind;
	jule::I64 _154617_i = 2LL;;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _154717_bodyTokens = _1e1237eae_range(_154617_i,jule::Str("{", 1),jule::Str("}", 1),_153339_tokens);;
	if ((_154717_bodyTokens == nullptr)) {
		_1e123a07c_stop(_self_.ptr());
		_1e123a6a9_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_154617_i < _153339_tokens.len())) {
		_1e123a6a9_pushErr(_self_.ptr(), _153339_tokens[_154617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Public=_1e12498e9_isPub(_153817_t.get()._field_Ident);
	_153817_t.get()._field_Methods=_1e1244dbc_buildTraitMethods(_self_, _154717_bodyTokens);
	_153817_t.get()._field_End=_153339_tokens[(_154617_i - 1LL)];
	return _153817_t;;
}



inline jule::Ptr<_20cb9ac79_FnDecl> _1e12454d8_buildCppLinkFn(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _156338_tokens) {
	_156338_tokens=_156338_tokens.slice(1LL);
	jule::Ptr<_20cb9ac79_FnDecl> _156517_f = _1e124121a_buildFn(_self_, _156338_tokens,false,true);;
	if ((_156517_f != nullptr)) {
		if (_20cb9b0cb_IsAnon(_156517_f.ptr())) {
			_1e123a6a9_pushErr(_self_.ptr(), _156517_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_156517_f.get()._field_Public=false;
		_156517_f.get()._field_CppLinked=true;
	};
	return _156517_f;;
}



inline jule::Ptr<_20cb9bc58_VarDecl> _1e12457e6_buildCppLinkVar(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _157639_tokens) {
	_157639_tokens=_157639_tokens.slice(1LL);
	jule::Ptr<_20cb9bc58_VarDecl> _157817_v = _1e123d1e5_buildVar(_self_, _157639_tokens);;
	if ((_157817_v != nullptr)) {
		_157817_v.get()._field_Public=false;
		_157817_v.get()._field_CppLinked=true;
		if ((_157817_v.get()._field_Expr != nullptr)) {
			_1e123a6a9_pushErr(_self_.ptr(), _157817_v.get()._field_Token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _157817_v;;
}



inline jule::Ptr<_20cba4513_StructDecl> _1e1245b04_buildCppLinkStruct(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _158942_tokens) {
	_158942_tokens=_158942_tokens.slice(1LL);
	jule::Ptr<_20cba4513_StructDecl> _159117_s = _1e1244839_buildStructDecl(_self_, _158942_tokens);;
	if ((_159117_s != nullptr)) {
		_159117_s.get()._field_Public=false;
		{
			auto &expr = _159117_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1c9534712:;
			if (it != expr.end()) {
				jule::Ptr<_20cba3c60_FieldDecl> _159425_f = *it;
				{
					_159425_f.get()._field_Public=true;
				}
				_iter_next_1c9534712:;
				++it;
				goto _iter_begin_1c9534712;
			}
			_iter_end_1c9534712:;
		};
		_159117_s.get()._field_CppLinked=true;
	};
	return _159117_s;;
}



inline jule::Ptr<_20cba05b9_TypeAliasDecl> _1e1245e12_buildCppLinkTypeAlias(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _160345_tokens) {
	_160345_tokens=_160345_tokens.slice(1LL);
	jule::Ptr<_20cba05b9_TypeAliasDecl> _160517_t = _1e123c3d1_buildTypeAliasDecl(_self_, _160345_tokens);;
	if ((_160517_t != nullptr)) {
		_160517_t.get()._field_Public=false;
		_160517_t.get()._field_CppLinked=true;
	};
	return _160517_t;;
}



inline jule::Ptr<_20cba19a5_UseDecl> _1e1246220_buildCppLinkUse(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _161339_tokens) {
	if ((_161339_tokens.len() == 1LL)) {
		_1e123a6a9_pushErr(_self_.ptr(), _161339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_161339_tokens=_161339_tokens.slice(1LL);
	;
	return _1e124265b_buildUseDecl(_self_.ptr(), _161339_tokens,true);;
}



inline jule::Any _1e124652d_buildCppLink(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _162437_tokens) {
	jule::Ptr<_20b4e5581_Token> _162517_token = _162437_tokens[0LL];;
	if ((_162437_tokens.len() == 1LL)) {
		_1e123a6a9_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_162517_token=_162437_tokens[1LL];
	{
		auto &_match_expr{ _162517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1c9539382:;
			{
				return static_cast<jule::Any>(_1e12454d8_buildCppLinkFn(_self_, _162437_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1c953a053:;
			{
				return static_cast<jule::Any>(_1e12457e6_buildCppLinkVar(_self_, _162437_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1c953a0b9:;
			{
				return static_cast<jule::Any>(_1e1245b04_buildCppLinkStruct(_self_, _162437_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1c953a130:;
			{
				return static_cast<jule::Any>(_1e1245e12_buildCppLinkTypeAlias(_self_, _162437_tokens));;
			}
		}
		else {
			_case_begin_1c9539ddd:;
			{
				_1e123a6a9_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c9539edc:;
	};
	return nullptr;;
}



inline jule::Ptr<_20cb9ac79_FnDecl> _1e124683b_getMethod(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _164834_tokens) {
	jule::I64 _164917_i = 0LL;;
	jule::Ptr<_20b4e5581_Token> _165017_token = _164834_tokens[_164917_i];;
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_1e123a6a9_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_1e123a6a9_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id != static_cast<jule::U64>(32LLU))) {
		_1e123a6a9_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20cb9ac79_FnDecl> _167417_f = _1e124121a_buildFn(_self_, _164834_tokens,true,false);;
	if (((_167417_f != nullptr) && _20cb9b0cb_IsAnon(_167417_f.ptr()))) {
		_1e123a6a9_pushErr(_self_.ptr(), _167417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _167417_f;;
}



inline void _1e1246b5a_parseImplBody(jule::Ptr<_1e1239c4c_parser> _self_, jule::Ptr<_20cba5228_Impl>& _168138_ipl, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _168155_tokens) {
	jule::Slice<jule::Ptr<_1e121ccc9_stmt>> _168217_stmts = _1e121d170_splitStmts(_168155_tokens);;
	{
		auto &expr = _168217_stmts;
		auto it = expr.begin();
		_iter_begin_1c9543028:;
		if (it != expr.end()) {
			jule::Ptr<_1e121ccc9_stmt> _168321_stmt = *it;
			{
				_168155_tokens=_168321_stmt.get()._field_tokens;
				jule::Ptr<_20b4e5581_Token> _168521_token = _168155_tokens[0LL];;
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(38LLU)) {
						_case_begin_1c954417d:;
						{
							_1e123b369_pushDirective(_self_.ptr(), _1e123b0e4_buildDirective(_self_.ptr(), _168155_tokens));
							goto _iter_next_1c9543028;
						}
					}
					_match_end_1c9544128:;
				};
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1c95442c1:;
						{
							jule::Ptr<_20cb9bc58_VarDecl> _169425_v = _1e123d1e5_buildVar(_self_, _168155_tokens);;
							if ((_169425_v != nullptr)) {
								_168138_ipl.get()._field_Statics = jule::alloc_for_append(_168138_ipl.get()._field_Statics,1);_168138_ipl.get()._field_Statics.__push(_169425_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1c9544e3c:;
						{
							jule::Ptr<_20cb9ac79_FnDecl> _170125_f = _1e124683b_getMethod(_self_, _168155_tokens);;
							if ((_170125_f != nullptr)) {
								_1e1244aae_checkMethodReceiver(_self_.ptr(), _170125_f);
								_1e12474eb_applyFnMeta(_self_.ptr(), _170125_f);
								_168138_ipl.get()._field_Methods = jule::alloc_for_append(_168138_ipl.get()._field_Methods,1);_168138_ipl.get()._field_Methods.__push(_170125_f);;
							};
						}
					}
					else {
						_case_begin_1c9544700:;
						{
							_1e123a6a9_pushErr(_self_.ptr(), _168521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1c9543028;
						}
					}
					_match_end_1c954469a:;
				};
			}
			_iter_next_1c9543028:;
			++it;
			goto _iter_begin_1c9543028;
		}
		_iter_end_1c9543028:;
	};
}



inline jule::Ptr<_20cba5228_Impl> _1e1246e68_buildImpl(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _171433_tokens) {
	jule::Ptr<_20b4e5581_Token> _171517_token = _171433_tokens[0LL];;
	if ((_171433_tokens.len() < 2LL)) {
		_1e123a6a9_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _172117_i = 1LL;;
	jule::Ptr<_20cb892ea_TypeDecl> _172318_base;;
	jule::Bool _172328_ok = false;;
	({
		_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
		_172318_base = __jule_assign_result.__jule_result_arg0;
		_172328_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172328_ok))) {
		return nullptr;;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_1e123a6a9_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20cba5228_Impl> _173217_ipl = jule::new_ptr<_20cba5228_Impl>(_20cba5228_Impl{._field_Base=_172318_base, });;
	_171517_token=_171433_tokens[_172117_i];
	if ((_171517_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_171517_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_171517_token.get()._field_Kind == jule::Str("{", 1)))) {
			({
				jule::Ptr<_20cb892ea_TypeDecl> ___jule_assign_arg = _173217_ipl.get()._field_Dest;
				jule::Ptr<_20cb892ea_TypeDecl> _1___jule_assign_arg = _173217_ipl.get()._field_Base;
				_173217_ipl.get()._field_Base = ___jule_assign_arg;
				_173217_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_1e123a07c_stop(_self_.ptr());
		_1e123a6a9_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_172117_i)++;
	if ((_172117_i >= _171433_tokens.len())) {
		_1e123a07c_stop(_self_.ptr());
		_1e123a6a9_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
		_173217_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_172328_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172328_ok))) {
		return nullptr;;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_1e123a07c_stop(_self_.ptr());
		_1e123a6a9_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _177017_bodyTokens = _1e1237eae_range(_172117_i,jule::Str("{", 1),jule::Str("}", 1),_171433_tokens);;
	if ((_177017_bodyTokens == nullptr)) {
		_1e123a07c_stop(_self_.ptr());
		_1e123a6a9_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_172117_i < _171433_tokens.len())) {
		_1e123a6a9_pushErr(_self_.ptr(), _171433_tokens[_172117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_173217_ipl.get()._field_End=_171433_tokens[(_172117_i - 1LL)];
	_1e1246b5a_parseImplBody(_self_, _173217_ipl,_177017_bodyTokens);
	return _173217_ipl;;
}



inline jule::Any _1e1247276_buildNodeData(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _178538_tokens) {
	jule::Ptr<_20b4e5581_Token> _178617_token = _178538_tokens[0LL];;
	{
		auto &_match_expr{ _178617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1c9554985:;
			{
				jule::Ptr<_20cb9ac79_FnDecl> _179021_f = _1e124121a_buildFn(_self_, _178538_tokens,false,false);;
				if ((_179021_f != nullptr)) {
					_179021_f.get()._field_Global=true;
					if (_20cb9b0cb_IsAnon(_179021_f.ptr())) {
						_1e123a6a9_pushErr(_self_.ptr(), _179021_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return static_cast<jule::Any>(_179021_f);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1c95558ed:;
			{
				return static_cast<jule::Any>(_1e123d1e5_buildVar(_self_, _178538_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1c9555964:;
			{
				return static_cast<jule::Any>(_1e123c3d1_buildTypeAliasDecl(_self_, _178538_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1c95559ca:;
			{
				return _1e1243e10_buildNodeEnumDecl(_self_, _178538_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1c95550e5:;
			{
				return static_cast<jule::Any>(_1e1244839_buildStructDecl(_self_, _178538_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1c955515b:;
			{
				return static_cast<jule::Any>(_1e12451ca_buildTraitDecl(_self_, _178538_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c95551c2:;
			{
				return static_cast<jule::Any>(_1e1246e68_buildImpl(_self_, _178538_tokens));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c9555238:;
			{
				return _1e124652d_buildCppLink(_self_, _178538_tokens);;
			}
		}
		else {
			_case_begin_1c955507e:;
			{
				_1e123a6a9_pushErr(_self_.ptr(), _178617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c9554dc5:;
	};
}



inline void _1e12474eb_applyFnMeta(_1e1239c4c_parser* _self_, jule::Ptr<_20cb9ac79_FnDecl>& _182135_f) {
	_182135_f.get()._field_Directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1e1247771_applyMeta(_1e1239c4c_parser* _self_, _20cb50cea_Node& _182633_node) {
	{
		auto &_match_expr{ _182633_node._field_Data };
		
		if (_match_expr.type_is_ptr<_20cb9bc58_VarDecl>()) {
			_case_begin_1c955b54c:;
			{
				jule::Ptr<_20cb9bc58_VarDecl> _182921_v = _182633_node._field_Data.operator jule::Ptr<_20cb9bc58_VarDecl>();;
				if ((_182921_v == nullptr)) {
					return;;
				};
				_182921_v.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb9ac79_FnDecl>()) {
			_case_begin_1c955b5b3:;
			{
				jule::Ptr<_20cb9ac79_FnDecl> _183621_f = _182633_node._field_Data.operator jule::Ptr<_20cb9ac79_FnDecl>();;
				if ((_183621_f == nullptr)) {
					return;;
				};
				_1e12474eb_applyFnMeta(&(*_self_), _183621_f);
			}
		}
		else if (_match_expr.type_is_ptr<_20cba4513_StructDecl>()) {
			_case_begin_1c955b629:;
			{
				jule::Ptr<_20cba4513_StructDecl> _184221_sd = _182633_node._field_Data.operator jule::Ptr<_20cba4513_StructDecl>();;
				if ((_184221_sd == nullptr)) {
					return;;
				};
				_184221_sd.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1c955b33d:;
	};
}



inline void _1e12479e6_pushUseDecl(jule::Ptr<_1e1239c4c_parser> _self_, jule::Ptr<_20cba19a5_UseDecl>& _185136_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push(_185136_decl);;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1e123a6a9_pushErr(_self_.ptr(), _185136_decl.get()._field_Token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1e123a9c8_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e1247d04_pushMetaNodes(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _185938_tokens) {
	{
		auto &_match_expr{ _185938_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1c9562168:;
			{
				;
				jule::Ptr<_20cba19a5_UseDecl> _186321_decl = _1e124265b_buildUseDecl(_self_.ptr(), _185938_tokens,false);;
				_1e12479e6_pushUseDecl(_self_, _186321_decl);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c95621e0:;
			{
				if (((_185938_tokens.len() > 1LL) && (_185938_tokens[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_20cba19a5_UseDecl> _186825_decl = _1e1246220_buildCppLinkUse(_self_, _185938_tokens);;
					_1e12479e6_pushUseDecl(_self_, _186825_decl);
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1c9562267:;
			{
				_1e123b369_pushDirective(_self_.ptr(), _1e123b0e4_buildDirective(_self_.ptr(), _185938_tokens));
				return true;;
			}
		}
		_match_end_1c956208b:;
	};
	return false;;
}



inline _20cb50cea_Node _1e1248112_parseNode(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _187934_st) {
	_20cb50cea_Node _188017_node = _20cb50cea_Node{._field_Token=_187934_st[0LL], };;
	if (_1e1247d04_pushMetaNodes(_self_, _187934_st)) {
		return _188017_node;;
	};
	jule::Any _188817_data = _1e1247276_buildNodeData(_self_, _187934_st);;
	if ((_188817_data == nullptr)) {
		return _188017_node;;
	};
	_188017_node._field_Data=_188817_data;
	_1e1247771_applyMeta(_self_.ptr(), _188017_node);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1e123a6a9_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188017_node;;
}



inline void _1e1248387_appendNode(jule::Ptr<_1e1239c4c_parser> _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _190335_st) {
	if ((_190335_st.len() == 0LL)) {
		return;;
	};
	_20cb50cea_Node _190717_node = _1e1248112_parseNode(_self_, _190335_st);;
	if (((_190717_node._field_Data == nullptr) || _1e123a2e1_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_190717_node);;
}



inline void _1e12487e9_removeRange(_1e1239c4c_parser* _self_, jule::I64 _191430_i, jule::Str _191438_kind, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _191450_tokens, jule::Slice<jule::I64>& _191473_ranges) {
	jule::Str _191513_close = _1e1238cc3_getCloseKindOfBrace(_191438_kind);;
	for (; (_191430_i >= 0LL); (_191430_i)--) {
		{
			jule::Ptr<_20b4e5581_Token> _191717_tok = _191450_tokens[_191473_ranges[_191430_i]];;
			if ((_191717_tok.get()._field_Kind != _191513_close)) {
				goto _iter_next_1c956b837;
			};
			_191473_ranges=jule::append(_191473_ranges.slice(0LL,_191430_i),_191473_ranges.slice((_191430_i + 1LL)));
			goto _iter_end_1c956b837;
		}
	_iter_next_1c956b837:;
	}
	_iter_end_1c956b837:;;
}



inline void _1e1248bb2_pushWrongOrderCloseErr(_1e1239c4c_parser* _self_, jule::Ptr<_20b4e5581_Token>& _192642_t, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _192654_tokens, jule::Slice<jule::I64>& _192673_ranges) {
	{
		auto &_match_expr{ _192654_tokens[_192673_ranges[(_192673_ranges.len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1c956d8e4:;
			{
				_1e123a6a9_pushErr(&(*_self_), _192642_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1c956d96b:;
			{
				_1e123a6a9_pushErr(&(*_self_), _192642_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1c956d9e3:;
			{
				_1e123a6a9_pushErr(&(*_self_), _192642_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c956d7c3:;
	};
}



inline void _1e1249124_pushRangeClose(_1e1239c4c_parser* _self_, jule::Ptr<_20b4e5581_Token> _193733_t, jule::Str _193744_left, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _193756_tokens, jule::Slice<jule::I64>& _193779_ranges) {
	jule::I64 _193813_n = _193779_ranges.len();;
	if ((_193813_n == 0LL)) {
		{
			auto &_match_expr{ _193733_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1c957151d:;
				{
					_1e123a6a9_pushErr(&(*_self_), _193733_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1c9571595:;
				{
					_1e123a6a9_pushErr(&(*_self_), _193733_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1c957161c:;
				{
					_1e123a6a9_pushErr(&(*_self_), _193733_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1c95712cb:;
		};
		return;;
	} else if ((_193756_tokens[_193779_ranges[(_193813_n - 1LL)]].get()._field_Kind != _193744_left)) {
		_1e1248bb2_pushWrongOrderCloseErr(&(*_self_), _193733_t,_193756_tokens,_193779_ranges);
	};
	_1e12487e9_removeRange(&(*_self_), static_cast<jule::I64>((_193813_n - 1LL)),_193733_t.get()._field_Kind,_193756_tokens,_193779_ranges);
}



inline void _1e1249399_checkRanges(_1e1239c4c_parser* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _195531_tokens) {
	jule::Slice<jule::I64> _195617_ranges = nullptr;;
	{
		auto &expr = _195531_tokens;
		auto it = expr.begin();
		_iter_begin_1c9574697:;
		if (it != expr.end()) {
			jule::I64 _195813_i = it - expr.begin();
			jule::Ptr<_20b4e5581_Token> &_195816_token = *it;
			{
				if ((_195816_token.get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1c9574697;
				};
				{
					auto &_match_expr{ _195816_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1c9575951:;
						{
							_195617_ranges = jule::alloc_for_append(_195617_ranges,1);_195617_ranges.__push(_195813_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1c95759b7:;
						{
							_1e1249124_pushRangeClose(&(*_self_), _195816_token,jule::Str("(", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1c9575a2d:;
						{
							_1e1249124_pushRangeClose(&(*_self_), _195816_token,jule::Str("{", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1c9575aa5:;
						{
							_1e1249124_pushRangeClose(&(*_self_), _195816_token,jule::Str("[", 1),_195531_tokens,_195617_ranges);
						}
					}
					_match_end_1c9575896:;
				};
			}
			_iter_next_1c9574697:;
			++it;
			_195813_i++;
			goto _iter_begin_1c9574697;
		}
		_iter_end_1c9574697:;
	};
	{
		auto &expr = _195617_ranges;
		auto it = expr.begin();
		_iter_begin_1c9577018:;
		if (it != expr.end()) {
			jule::I64 _197616_i = *it;
			{
				jule::Ptr<_20b4e5581_Token> _197717_token = _195531_tokens[_197616_i];;
				{
					auto &_match_expr{ _197717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1c957816d:;
						{
							_1e123a6a9_pushErr(&(*_self_), _197717_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1c95781d4:;
						{
							_1e123a6a9_pushErr(&(*_self_), _197717_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1c957824a:;
						{
							_1e123a6a9_pushErr(&(*_self_), _197717_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1c9577e3c:;
				};
			}
			_iter_next_1c9577018:;
			++it;
			goto _iter_begin_1c9577018;
		}
		_iter_end_1c9577018:;
	};
}



inline void _1e124961e_parse(jule::Ptr<_1e1239c4c_parser> _self_, jule::Ptr<_20b4ea91b_File>& _198930_f) {
	_self_.get()._field_ast=jule::new_ptr<_20cb5014b_Ast>(_20cb5014b_Ast{._field_File=_198930_f, });
	_1e1249399_checkRanges(_self_.ptr(), _198930_f.get()._field_Tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e121ccc9_stmt>> _199917_stmts = _1e121d170_splitStmts(_198930_f.get()._field_Tokens);;
	jule::I64 _200217_i = 0LL;;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_1e121ccc9_stmt> _200421_stmt = _199917_stmts[_200217_i];;
			if ((_200421_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200421_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(38LLU))) {
				goto _iter_end_1c957b1d7;
			};
			if ((!(_20b1bdde7_IsTopDirective(_200421_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1c957b1d7;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_1e123b0e4_buildDirective(_self_.ptr(), _200421_stmt.get()._field_tokens));;
		}
	_iter_next_1c957b1d7:;
	}
	_iter_end_1c957b1d7:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_1e121ccc9_stmt> _202121_stmt = _199917_stmts[_200217_i];;
			_1e1248387_appendNode(_self_, _202121_stmt.get()._field_tokens);
			if (_1e123a2e1_stopped(_self_.ptr())) {
				goto _iter_end_1c957cb78;
			};
		}
	_iter_next_1c957cb78:;
	}
	_iter_end_1c957cb78:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1e123a6a9_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e1239c4c_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1e124b038_pushErr(_1e124a961_typeBuilder* _self_, jule::Ptr<_20b4e5581_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*_self_)._field_err) {
		_1e123a6a9_pushErr((*_self_)._field_p.ptr(), _4126_token,_4141_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1e124b357_pushSuggestion(_1e124a961_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*_self_)._field_err) {
		_1e123a9c8_pushSuggestion((*_self_)._field_p.ptr(), _4833_fmt,_4846_args);
	};
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e124b5bb_buildPrim(_1e124a961_typeBuilder* _self_) {
	jule::Ptr<_20cb892ea_TypeDecl> _5517_t = _1e124a4cc_buildPrimType((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _5517_t;;
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e124b830_buildNamespace(_1e124a961_typeBuilder* _self_) {
	jule::Ptr<_20cb892ea_TypeDecl> _6117_t = jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_20cb8a3b7_NamespaceTypeDecl> _6517_nst = jule::new_ptr<_20cb8a3b7_NamespaceTypeDecl>();;
	jule::I64 _6617_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_20b4e5581_Token> _6821_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_6617_n & 1LL) == 0LL)) {
				if ((_6821_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_1e124b038_pushErr(&(*_self_), _6821_token,jule::Str("invalid syntax", 14));
					_1e124b357_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_6517_nst.get()._field_Idents = jule::alloc_for_append(_6517_nst.get()._field_Idents,1);_6517_nst.get()._field_Idents.__push(_6821_token);;
			} else if ((_6821_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
				goto _iter_end_1c9584d5b;
			};
			(_6617_n)++;
		}
	_iter_next_1c9584d5b:;
	}
	_iter_end_1c9584d5b:;;
	_6517_nst.get()._field_Idents=_6517_nst.get()._field_Idents.slice(0LL,(_6517_nst.get()._field_Idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_6517_nst.get()._field_Kind=_1e124c06c_buildIdent(&(*_self_));
	_6117_t.get()._field_Kind=static_cast<jule::Any>(_6517_nst);
	return _6117_t;;
}



inline jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>> _1e124ba94_buildGenerics(_1e124a961_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_20b4e5581_Token> _9413_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_9413_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_9413_token.get()._field_Kind != jule::Str("[", 1)))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _9917_parts = _1e124bd08_identGenerics(&(*_self_));;
	if ((_9917_parts.len() == 0LL)) {
		_1e124b038_pushErr(&(*_self_), _9413_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>> _10517_types = jule::Slice<jule::Ptr<_20cb892ea_TypeDecl>>::alloc(0LL, _9917_parts.len());;
	{
		auto &expr = _9917_parts;
		auto it = expr.begin();
		_iter_begin_1c958c715:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20b4e5581_Token>> _10621_part = *it;
			{
				jule::I64 _10721_j = 0LL;;
				jule::Ptr<_20cb892ea_TypeDecl> _10822_t;;
				({
					_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType((*_self_)._field_p, _10621_part,(&(_10721_j)),true);
					_10822_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10721_j < _10621_part.len())) {
					_1e124b038_pushErr(&(*_self_), _10621_part[_10721_j],jule::Str("invalid syntax", 14));
				};
				_10517_types = jule::alloc_for_append(_10517_types,1);_10517_types.__push(_10822_t);;
			}
			_iter_next_1c958c715:;
			++it;
			goto _iter_begin_1c958c715;
		}
		_iter_end_1c958c715:;
	};
	return _10517_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _1e124bd08_identGenerics(_1e124a961_typeBuilder* _self_) {
	jule::I64 _11813_first = (*((*_self_)._field_i));;
	jule::I64 _11917_rangeN = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_20b4e5581_Token> _12117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_12117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _12117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1c9591241:;
						{
							(_11917_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1c95912b8:;
						{
							(_11917_rangeN)--;
						}
					}
					_match_end_1c9591010:;
				};
			};
			if ((_11917_rangeN == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1c958ee21;
			};
		}
	_iter_next_1c958ee21:;
	}
	_iter_end_1c958ee21:;;
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _13517_tokens = (*_self_)._field_tokens.slice((_11813_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _13618_parts;;
	jule::Slice<_20b1bc016_Log> _13625_errors;;
	({
		_ssx_20b4e5581_Token_s_20b1bc016_Log __jule_assign_result = _1e1238a2b_parts(_13517_tokens,static_cast<jule::U64>(8LLU),true);
		_13618_parts = __jule_assign_result.__jule_result_arg0;
		_13625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_13625_errors);
	};
	return _13618_parts;;
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e124c06c_buildIdent(_1e124a961_typeBuilder* _self_) {
	jule::Bool _14417_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_14417_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return _1e124b830_buildNamespace(&(*_self_));;
	};
	jule::Ptr<_20b4e5581_Token> _14817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_20cb898b1_IdentTypeDecl> _14917_it = jule::new_ptr<_20cb898b1_IdentTypeDecl>(_20cb898b1_IdentTypeDecl{._field_Token=_14817_token, ._field_Ident=_14817_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_20cb892ea_TypeDecl> _15517_itd = jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Token=_14817_token, ._field_Kind=static_cast<jule::Any>(_14917_it)});;
	if (((!(_14417_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_14917_it.get()._field_Generics=_1e124ba94_buildGenerics(&(*_self_));
		return _15517_itd;;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_1e124b038_pushErr(&(*_self_), _14817_token,jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e124b038_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	jule::Ptr<_20cb8a010_SubIdentTypeDecl> _17217_sit = jule::new_ptr<_20cb8a010_SubIdentTypeDecl>();;
	_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_14917_it);;
	jule::Ptr<_20cb892ea_TypeDecl> _17417_ident = _1e124c06c_buildIdent(&(*_self_));;
	{
		auto &_match_expr{ _17417_ident.get()._field_Kind };
		
		if (_match_expr.type_is_ptr<_20cb898b1_IdentTypeDecl>()) {
			_case_begin_1c959b24b:;
			{
				_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_17417_ident.get()._field_Kind.operator jule::Ptr<_20cb898b1_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8a010_SubIdentTypeDecl>()) {
			_case_begin_1c959b2e5:;
			{
				_17217_sit.get()._field_Idents=jule::append(_17217_sit.get()._field_Idents,_17417_ident.get()._field_Kind.operator jule::Ptr<_20cb8a010_SubIdentTypeDecl>().get()._field_Idents);
			}
		}
		_match_end_1c959b1e6:;
	};
	return jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Token=_14817_token, ._field_Kind=static_cast<jule::Any>(_17217_sit)});;
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e124c2d1_buildCppLink(_1e124a961_typeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_1e124b038_pushErr(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_20cb892ea_TypeDecl> _19317_t = _1e124c06c_buildIdent(&(*_self_));;
	_19317_t.get()._field_Kind.operator jule::Ptr<_20cb898b1_IdentTypeDecl>().get()._field_CppLinked=true;
	return _19317_t;;
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e124c545_buildFn(_1e124a961_typeBuilder* _self_) {
	jule::Ptr<_20b4e5581_Token> _19917_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_20cb9ac79_FnDecl> _20017_f = _1e1240cb9_buildFnPrototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_20017_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_20cb9b0cb_IsAnon(_20017_f.ptr())))) {
		_1e124b038_pushErr(&(*_self_), _20017_f.get()._field_Token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Token=_19917_token, ._field_Kind=static_cast<jule::Any>(_20017_f)});;
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e124c7a9_buildPtr(_1e124a961_typeBuilder* _self_) {
	jule::Ptr<_20b4e5581_Token> _21417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1e124b038_pushErr(&(*_self_), _21417_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Token=_21417_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_20cb8b176_PtrTypeDecl>(_20cb8b176_PtrTypeDecl{._field_Elem=nullptr}))});;
	};
	jule::Ptr<_20cb892ea_TypeDecl> _23117_elem = _1e124d997_step(&(*_self_));;
	if ((_23117_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Token=_21417_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_20cb8b176_PtrTypeDecl>(_20cb8b176_PtrTypeDecl{._field_Elem=_23117_elem}))});;
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e124ca1d_buildSptr(_1e124a961_typeBuilder* _self_) {
	jule::Ptr<_20b4e5581_Token> _24517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1e124b038_pushErr(&(*_self_), _24517_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_20cb892ea_TypeDecl> _25217_elem = _1e124d997_step(&(*_self_));;
	if ((_25217_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Token=_24517_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_20cb8a6a3_SptrTypeDecl>(_20cb8a6a3_SptrTypeDecl{._field_Elem=_25217_elem}))});;
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e124cc82_buildOp(_1e124a961_typeBuilder* _self_) {
	jule::Ptr<_20b4e5581_Token> _26617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _26617_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c95a8423:;
			{
				return _1e124c7a9_buildPtr(&(*_self_));;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c95a9da3:;
			{
				return _1e124ca1d_buildSptr(&(*_self_));;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1c95a9e19:;
			{
				return jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_20cb8a6a3_SptrTypeDecl>(_20cb8a6a3_SptrTypeDecl{._field_Elem=_1e124ca1d_buildSptr(&(*_self_))}))});;
			}
		}
		else {
			_case_begin_1c95a9446:;
			{
				_1e124b038_pushErr(&(*_self_), _26617_token,jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1c95a92ae:;
	};
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e124cee6_buildSlc(_1e124a961_typeBuilder* _self_) {
	jule::Ptr<_20b4e5581_Token> _28517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_20cb892ea_TypeDecl> _28717_elem = _1e124d997_step(&(*_self_));;
	if ((_28717_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Token=_28517_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_20cb8aa9e_SlcTypeDecl>(_20cb8aa9e_SlcTypeDecl{._field_Elem=_28717_elem}))});;
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e124d25a_buildArr(_1e124a961_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _30017_exprTokens = _1e1237eae_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1e124b038_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_20cb892ea_TypeDecl> _30617_elem = _1e124d997_step(&(*_self_));;
	if ((_30617_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20cb8b808_ArrTypeDecl> _31117_arrt = jule::new_ptr<_20cb8b808_ArrTypeDecl>(_20cb8b808_ArrTypeDecl{._field_Elem=_30617_elem, });;
	jule::Ptr<_20b4e5581_Token> _31517_token = _30017_exprTokens[0LL];;
	if ((((_30017_exprTokens.len() == 1LL) && (_31517_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && (_31517_token.get()._field_Kind == jule::Str("...", 3)))) {
	} else {
		_31117_arrt.get()._field_Size=_1e123acd6_buildExpr((*_self_)._field_p, _30017_exprTokens);
	};
	return jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Token=_31517_token, ._field_Kind=static_cast<jule::Any>(_31117_arrt)});;
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e124d4be_buildMap(_1e124a961_typeBuilder* _self_) {
	jule::Ptr<_20b4e5581_Token> _32917_mapToken = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1e124b038_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _33717_keyTokens = _1e1237eae_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1e124b038_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_33717_keyTokens.len() == 0LL)) {
		_1e124b038_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_20cb8c056_MapTypeDecl> _34617_mapt = jule::new_ptr<_20cb8c056_MapTypeDecl>();;
	jule::I64 _34717_j = 0LL;;
	jule::Ptr<_20cb892ea_TypeDecl> _34818_keyt;;
	jule::Bool _34828_ok = false;;
	({
		_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType((*_self_)._field_p, _33717_keyTokens,(&(_34717_j)),(*_self_)._field_err);
		_34818_keyt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	} else if ((_34717_j < _33717_keyTokens.len())) {
		_1e124b038_pushErr(&(*_self_), _33717_keyTokens[_34717_j],jule::Str("invalid syntax", 14));
	};
	_34617_mapt.get()._field_Key=_34818_keyt;
	jule::Ptr<_20cb892ea_TypeDecl> _35618_valt;;
	({
		_x_20cb892ea_TypeDecl_bool __jule_assign_result = _1e123c0c3_buildType((*_self_)._field_p, (*_self_)._field_tokens,(*_self_)._field_i,(*_self_)._field_err);
		_35618_valt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	};
	_34617_mapt.get()._field_Val=_35618_valt;
	return jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Token=_32917_mapToken, ._field_Kind=static_cast<jule::Any>(_34617_mapt)});;
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e124d733_buildEnumerable(_1e124a961_typeBuilder* _self_) {
	jule::Ptr<_20b4e5581_Token> _36817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_36817_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (_36817_token.get()._field_Kind != jule::Str("[", 1)))) {
		_1e124b038_pushErr(&(*_self_), _36817_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*_self_)._field_i)))++;
	_36817_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_36817_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_36817_token.get()._field_Kind == jule::Str("]", 1)))) {
		return _1e124cee6_buildSlc(&(*_self_));;
	};
	((*((*_self_)._field_i)))--;
	return _1e124d25a_buildArr(&(*_self_));;
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e124d997_step(_1e124a961_typeBuilder* _self_) {
	jule::Ptr<_20b4e5581_Token> _38513_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _38513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1c95bd79b:;
			{
				return _1e124b5bb_buildPrim(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1c95bd081:;
			{
				return _1e124c06c_buildIdent(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c95bd0e7:;
			{
				return _1e124c2d1_buildCppLink(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1c95bd15d:;
			{
				return _1e124c545_buildFn(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c95bd1d5:;
			{
				return _1e124cc82_buildOp(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c95bdaed:;
			{
				return _1e124d733_buildEnumerable(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1c95bdb64:;
			{
				return _1e124d4be_buildMap(&(*_self_));;
			}
		}
		else {
			_case_begin_1c95bd01a:;
			{
				((*((*_self_)._field_i)))++;
				_1e124b038_pushErr(&(*_self_), _38513_token,jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1c95bcd83:;
	};
}



inline _x_20cb892ea_TypeDecl_bool _1e124dc0b_build(_1e124a961_typeBuilder* _self_) {
	_x_20cb892ea_TypeDecl_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_20cb892ea_TypeDecl> _41117_root = _1e124d997_step(&(*_self_));;
	if ((_41117_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1e124a2bd_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _41117_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e124a961_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20db32b77_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _20db3452a_pushErr(_20db33eca_directiveEval* _self_, jule::Ptr<_20b4e5581_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_20b1bc016_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_20b1bc456_Logf(_2137_fmt,_2150_args), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _20db348d2_splitOperans(_20db33eca_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3351_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_20b4e5581_Token> _4017_b = _3351_tokens[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1c95e3c00:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1c95e1a11;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1c95e3c66:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1c95e39e1:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1c95e1a11;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1c95e1a11:;
	}
	_iter_end_1c95e1a11:;;
	if ((_3817_last < _3351_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last));;
	} else {
		_20db3452a_pushErr(&(*_self_), _3351_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _20db34be0_evalDirectiveIdent(_20db33eca_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1c95e6cad:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7333_ident)) {
					return true;;
				};
			}
			_iter_next_1c95e6cad:;
			++it;
			goto _iter_begin_1c95e6cad;
		}
		_iter_end_1c95e6cad:;
	};
	return false;;
}



inline jule::Bool _20db34eed_evalDirectivePart(_20db33eca_directiveEval* _self_, jule::Slice<jule::Ptr<_20b4e5581_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_8740_part[0LL].get()._field_Kind == jule::Str("!", 1)));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_20db3452a_pushErr(&(*_self_), _8740_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _9817_result = _20db34be0_evalDirectiveIdent(&(*_self_), _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;;
}



inline jule::Bool _20db35262_eval(_20db33eca_directiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_Args.len() == 0LL)) {
		_20db3452a_pushErr(&(*_self_), (*_self_)._field_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _11317_logicalOrParts = _20db348d2_splitOperans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_Args);;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto &expr = _11317_logicalOrParts;
		auto it = expr.begin();
		_iter_begin_1c95ed127:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20b4e5581_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _12021_logicalAndParts = _20db348d2_splitOperans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto &expr = _12021_logicalAndParts;
					auto it = expr.begin();
					_iter_begin_1c95ee8dc:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_20b4e5581_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_20b4e5581_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_Kind == jule::Str("(", 1)))) {
								jule::Ptr<_20b4e5581_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_Kind != jule::Str(")", 1)))) {
									_20db3452a_pushErr(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;;
								};
								_12525_andPart=_12525_andPart.slice(1LL,(_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _20db34eed_evalDirectivePart(&(*_self_), _12525_andPart));
						}
						_iter_next_1c95ee8dc:;
						++it;
						goto _iter_begin_1c95ee8dc;
					}
					_iter_end_1c95ee8dc:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1c95ed127:;
			++it;
			goto _iter_begin_1c95ed127;
		}
		_iter_end_1c95ed127:;
	};
	return _11117_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _20db33eca_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e1146c7a_JuleImporter> static__1e1023591_New(_20db32b77_CompileInfo _5819_info) {
	jule::Ptr<_1e1146c7a_JuleImporter> _5917_imp = jule::new_ptr<_1e1146c7a_JuleImporter>(_1e1146c7a_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_20b20556b_PathStdlib}), });;
	_20db33491_initVars(_5917_imp.get()._field_vars,_5819_info);
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_20d84404d_ImportInfo>> _1e108779d_AllPackages(_1e1146c7a_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;;
}



inline void _1e10a3214_SetModPath(_1e1146c7a_JuleImporter* _self_, jule::Str _7529_path) {
	(*_self_)._field_mod=_7529_path;
}



inline jule::Str _1e10c5896_GetModPath(_1e1146c7a_JuleImporter* _self_) {
	return (*_self_)._field_mod;;
}



inline jule::Str _1e10d5411_ModById(_1e1146c7a_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*_self_)._field_mods[_8322_id];;
}



inline jule::Ptr<_20d84404d_ImportInfo> _1e1128487_GetImport(_1e1146c7a_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1c9606608:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1c9606608:;
			++it;
			goto _iter_begin_1c9606608;
		}
		_iter_end_1c9606608:;
	};
	return nullptr;;
}



inline _sx_20cb5014b_Ast_s_20b1bc016_Log _1e113c314_ImportPackage(_1e1146c7a_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	_sx_20cb5014b_Ast_s_20b1bc016_Log __jule_func_result;
	jule::Slice<jule::Ptr<_216327de2_DirEntry>> _9717_dirents = ({
		auto except = static__20b13e021_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_20b1bc016_Log>::make({_1e101eb20_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_216327de2_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _20db4410b_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_newMod;
			jule::Slice<_20b1bc016_Log> _10525_errs = _20db443a3_CheckModuleFile((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_20cb5014b_Ast>> _11217_asts = jule::Slice<jule::Ptr<_20cb5014b_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1c9607b26:;
		if (it != expr.end()) {
			jule::Ptr<_216327de2_DirEntry> _11316_dirent = *it;
			{
				if ((_2163285da_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_20b136018_HasSuffix(_11316_dirent.get()._field_Name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1c9607b26;
				};
				jule::Str _11917__path = _223218d81_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_20b4ea91b_File> _12021_file = _20b4ebe4a_NewFileSet(_11917__path);;
				_20b4eb09d_Fill(_12021_file.ptr(), _1e10178a4_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_20b1bc016_Log> _12221_errors = _20b5077e6_Lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1e11c41ae_FileInfo> _12721_finfo = _1e121ac1c_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_20db18377_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1c9607b26;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_20b1bc016_Log> _13725_logs;;
				({
					_bool_s_20b1bc016_Log __jule_assign_result = _1e116d411_isPassBuildDirectives(&(*_self_), _12721_finfo.get()._field_Ast);
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_1c9607b26;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_1c9607b26:;
			++it;
			goto _iter_begin_1c9607b26;
		}
		_iter_end_1c9607b26:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1e116654c_Imported(_1e1146c7a_JuleImporter* _self_, jule::Ptr<_20d84404d_ImportInfo> _15331_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1c9610c61:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1c9610c61:;
			++it;
			goto _iter_begin_1c9610c61;
		}
		_iter_end_1c9610c61:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1c9612548:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1c9612548:;
				++it;
				_16217_i++;
				goto _iter_begin_1c9612548;
			}
			_iter_end_1c9612548:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15331_imp);;
}



inline _bool_s_20b1bc016_Log _1e116d411_isPassBuildDirectives(_1e1146c7a_JuleImporter* _self_, jule::Ptr<_20cb5014b_Ast>& _17945_file) {
	_bool_s_20b1bc016_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto &expr = _17945_file.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1c961579e:;
		if (it != expr.end()) {
			jule::Ptr<_20cb511e6_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_Tag.get()._field_Kind != jule::Str("build", 5))) {
					goto _iter_next_1c961579e;
				};
				_20db33eca_directiveEval _18421_de = _20db33eca_directiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _20db35262_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1c961579e:;
			++it;
			goto _iter_begin_1c961579e;
		}
		_iter_end_1c961579e:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e1146c7a_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e1209348_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c9637826_isCommonOrdered(jule::Slice<jule::Ptr<_20cba59dc_Struct>>& _1835_s, jule::Ptr<_20cba59dc_Struct> _1844_t) {
	jule::Ptr<_20cba59dc_Struct>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_20cba59dc_Struct>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_1c9639729:;
		if (it != expr.end()) {
			jule::Ptr<_20cba59dc_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_1c9639729;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;;
						};
					};
				};
			}
			_iter_next_1c9639729:;
			++it;
			goto _iter_begin_1c9639729;
		}
		_iter_end_1c9639729:;
	};
	return false;;
}

inline jule::Bool _1c9640796_isCommonOrdered(jule::Slice<jule::Ptr<_20d869eb9_Var>>& _1835_s, jule::Ptr<_20d869eb9_Var> _1844_t) {
	jule::Ptr<_20d869eb9_Var>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_20d869eb9_Var>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_1c9642655:;
		if (it != expr.end()) {
			jule::Ptr<_20d869eb9_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_1c9642655;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;;
						};
					};
				};
			}
			_iter_next_1c9642655:;
			++it;
			goto _iter_begin_1c9642655;
		}
		_iter_end_1c9642655:;
	};
	return false;;
}



inline void _1c9632e4d_orderCommon(jule::Slice<jule::Ptr<_20cba59dc_Struct>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_1c9634218:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_20cba59dc_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1c9634218:;
			++it;
			_4114_j++;
			goto _iter_begin_1c9634218;
		}
		_iter_end_1c9634218:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1c9637826_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1c96365e4:;
			}
			_iter_end_1c96365e4:;;
		}
	_iter_next_1c96341a2:;
	}
	_iter_end_1c96341a2:;;
}

inline void _1c96330b3_orderCommon(jule::Slice<jule::Ptr<_20d869eb9_Var>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_1c963c188:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_20d869eb9_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1c963c188:;
			++it;
			_4114_j++;
			goto _iter_begin_1c963c188;
		}
		_iter_end_1c963c188:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1c9640796_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1c963e564:;
			}
			_iter_end_1c963e564:;;
		}
	_iter_next_1c963c122:;
	}
	_iter_end_1c963c122:;;
}



inline void static__1e1007c6d_orderStructures(jule::Slice<jule::Ptr<_20cba59dc_Struct>>& _6136_structs) {
	_1c9632e4d_orderCommon(_6136_structs);
}



inline void static__1e103add3_orderVars(jule::Slice<jule::Ptr<_20d869eb9_Var>>& _6730_vars) {
	_1c96330b3_orderCommon(_6730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1e0ee3a17_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e1335809_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1e136b93e_optimizeChild(jule::Ptr<_1e136b466_scopeDeadCode> _self_, jule::Ptr<_20d825848_Scope>& _3938_s) {
	jule::Ptr<_1e136b466_scopeDeadCode> _4017_sdc = jule::new_ptr<_1e136b466_scopeDeadCode>(_1e136b466_scopeDeadCode{._field_parent=_self_, ._field_s=_3938_s, ._field_stmts=(&(_3938_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1e136e07e_optimizeStmts(_4017_sdc);
	};
}



inline void _1e136bbd6_optimizeBodyChildExceptional(jule::Ptr<_1e136b466_scopeDeadCode> _self_, jule::Ptr<_20d825848_Scope>& _5053_s) {
	jule::Ptr<_1e136b466_scopeDeadCode> _5117_sdc = jule::new_ptr<_1e136b466_scopeDeadCode>(_1e136b466_scopeDeadCode{._field_s=_5053_s, ._field_stmts=(&(_5053_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1e136e07e_optimizeStmts(_5117_sdc);
	};
}



inline void _1e136be6c_optimizeBodyChild(jule::Ptr<_1e136b466_scopeDeadCode> _self_, jule::Ptr<_20d825848_Scope>& _6142_s) {
	jule::Ptr<_1e136b466_scopeDeadCode> _6217_sdc = jule::new_ptr<_1e136b466_scopeDeadCode>(_1e136b466_scopeDeadCode{._field_s=_6142_s, ._field_stmts=(&(_6142_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1e136e07e_optimizeStmts(_6217_sdc);
	};
}



inline void _1e136c1e2_optimizeExprModel(jule::Ptr<_1e136b466_scopeDeadCode> _self_, jule::Any& _7142_model) {
	_1e13703c1_exprDeadCode _7213_edc = static__1e13709ed_new(_self_);;
	_1e1376718_optimize(&_7213_edc, _7142_model);
}



inline void _1e136c3bd_eliminateFollowed(_1e136b466_scopeDeadCode* _self_) {
	if (((*((*_self_)._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_1e136b466_scopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1c96b49a2:;
	}
	_iter_end_1c96b49a2:;;
}



inline void _1e136c643_pushGoto(jule::Ptr<_1e136b466_scopeDeadCode> _self_, jule::Ptr<_20d828373_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1c96b7bc5:;
	}
	_iter_end_1c96b7bc5:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_20d828373_GotoSt>>::make({_9232_gt}));
}



inline void _1e136c8b8_pushLabel(jule::Ptr<_1e136b466_scopeDeadCode> _self_, jule::Ptr<_20d828087_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1c96b949b;
			};
			(_10317_i)++;
		}
	_iter_next_1c96b949b:;
	}
	_iter_end_1c96b949b:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_20d828087_Label>>::make({_10233_l}));
}



inline void _1e136cb3d_optimizeRangeIter(jule::Ptr<_1e136b466_scopeDeadCode> _self_, jule::Ptr<_20d8274e8_RangeIter> _11541_it) {
	_1e136c1e2_optimizeExprModel(_self_, _11541_it.get()._field_Expr.get()._field_Model);
	_1e136be6c_optimizeBodyChild(_self_, _11541_it.get()._field_Scope);
}



inline void _1e136cdb3_optimizeWhileIter(jule::Ptr<_1e136b466_scopeDeadCode> _self_, jule::Ptr<_20d826b13_WhileIter> _12041_it) {
	_1e136c1e2_optimizeExprModel(_self_, _12041_it.get()._field_Expr);
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1e136dda3_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1e136be6c_optimizeBodyChild(_self_, _12041_it.get()._field_Scope);
}



inline void _1e136d138_optimizeInfIter(jule::Ptr<_1e136b466_scopeDeadCode> _self_, jule::Ptr<_20d826690_InfIter> _12839_it) {
	_1e136be6c_optimizeBodyChild(_self_, _12839_it.get()._field_Scope);
}



inline void _1e136d3ad_optimizeConditional(jule::Ptr<_1e136b466_scopeDeadCode> _self_, jule::Ptr<_20d8263a4_Conditional> _13243_c) {
	{
		auto &expr = _13243_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1c96c06c2:;
		if (it != expr.end()) {
			jule::Ptr<_20d825c44_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1e136c1e2_optimizeExprModel(_self_, _13321_case.get()._field_Expr);
					_1e136be6c_optimizeBodyChild(_self_, _13321_case.get()._field_Scope);
				};
			}
			_iter_next_1c96c06c2:;
			++it;
			goto _iter_begin_1c96c06c2;
		}
		_iter_end_1c96c06c2:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1e136b93e_optimizeChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		} else {
			_1e136be6c_optimizeBodyChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1e136d633_optimizeMatch(jule::Ptr<_1e136b466_scopeDeadCode> _self_, jule::Ptr<_20d829594_Match> _15037_m) {
	{
		auto &expr = _15037_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c96c331d:;
		if (it != expr.end()) {
			jule::Ptr<_20d82a0de_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1c96c3b6a:;
					if (it != expr.end()) {
						jule::Ptr<_20d8b2891_Data> _15225_expr = *it;
						{
							_1e136c1e2_optimizeExprModel(_self_, _15225_expr.get()._field_Model);
						}
						_iter_next_1c96c3b6a:;
						++it;
						goto _iter_begin_1c96c3b6a;
					}
					_iter_end_1c96c3b6a:;
				};
				_1e136be6c_optimizeBodyChild(_self_, _15121_case.get()._field_Scope);
			}
			_iter_next_1c96c331d:;
			++it;
			goto _iter_begin_1c96c331d;
		}
		_iter_end_1c96c331d:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1e136b93e_optimizeChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		} else {
			_1e136be6c_optimizeBodyChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1e136d8a8_optimizeAssign(jule::Ptr<_1e136b466_scopeDeadCode> _self_, jule::Ptr<_20d828b9d_Assign> _16838_assign) {
	_1e136c1e2_optimizeExprModel(_self_, _16838_assign.get()._field_L.get()._field_Model);
	_1e136c1e2_optimizeExprModel(_self_, _16838_assign.get()._field_R.get()._field_Model);
}



inline void _1e136db2d_optimizeMultiAssign(jule::Ptr<_1e136b466_scopeDeadCode> _self_, jule::Ptr<_20d829055_MultiAssign> _17343_assign) {
	{
		auto &expr = _17343_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1c96c7157:;
		if (it != expr.end()) {
			jule::Ptr<_20d8b2891_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1e136c1e2_optimizeExprModel(_self_, _17421_l.get()._field_Model);
				};
			}
			_iter_next_1c96c7157:;
			++it;
			goto _iter_begin_1c96c7157;
		}
		_iter_end_1c96c7157:;
	};
	_1e136c1e2_optimizeExprModel(_self_, _17343_assign.get()._field_R);
}



inline void _1e136dda3_optimizeStmt(jule::Ptr<_1e136b466_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type_is_ptr<_20d825848_Scope>()) {
			_case_begin_1c96c882e:;
			{
				jule::Ptr<_20d825848_Scope> _18521_scope = _18236_st.operator jule::Ptr<_20d825848_Scope>();;
				if (_18521_scope.get()._field_Deferred) {
					_1e136e36a_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1e136b93e_optimizeChild(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20d8274e8_RangeIter>()) {
			_case_begin_1c96c89a5:;
			{
				_1e136cb3d_optimizeRangeIter(_self_, _18236_st.operator jule::Ptr<_20d8274e8_RangeIter>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d826b13_WhileIter>()) {
			_case_begin_1c96c8a1b:;
			{
				_1e136cdb3_optimizeWhileIter(_self_, _18236_st.operator jule::Ptr<_20d826b13_WhileIter>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d826690_InfIter>()) {
			_case_begin_1c96c8a82:;
			{
				_1e136d138_optimizeInfIter(_self_, _18236_st.operator jule::Ptr<_20d826690_InfIter>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8263a4_Conditional>()) {
			_case_begin_1c96c8b09:;
			{
				_1e136d3ad_optimizeConditional(_self_, _18236_st.operator jule::Ptr<_20d8263a4_Conditional>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d829594_Match>()) {
			_case_begin_1c96c8b81:;
			{
				_1e136d633_optimizeMatch(_self_, _18236_st.operator jule::Ptr<_20d829594_Match>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d828b9d_Assign>()) {
			_case_begin_1c96c8c08:;
			{
				_1e136d8a8_optimizeAssign(_self_, _18236_st.operator jule::Ptr<_20d828b9d_Assign>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d829055_MultiAssign>()) {
			_case_begin_1c96c8c80:;
			{
				_1e136db2d_optimizeMultiAssign(_self_, _18236_st.operator jule::Ptr<_20d829055_MultiAssign>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8b2891_Data>()) {
			_case_begin_1c96c8d07:;
			{
				jule::Ptr<_20d8b2891_Data> _20621_d = _18236_st.operator jule::Ptr<_20d8b2891_Data>();;
				if (_self_.get()._field_except) {
					goto _match_end_1c96c893e;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type_is_ptr<_20d812e51_BuiltinErrorCallExprModel>() || _match_expr.type_is_ptr<_20d811b64_BuiltinPanicCallExprModel>()) {
						_case_begin_1c96cdc52:;
						{
							_1e136c3bd_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1c96ce291:;
						{
							_1e136c1e2_optimizeExprModel(_self_, _20621_d.get()._field_Model);
						}
					}
					_match_end_1c96ce23b:;
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20d82aa18_RetSt>()) {
			_case_begin_1c96c8d7e:;
			{
				_1e136c3bd_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is_ptr<_20d828373_GotoSt>()) {
			_case_begin_1c96c8e06:;
			{
				_1e136c643_pushGoto(_self_, _18236_st.operator jule::Ptr<_20d828373_GotoSt>());
				_1e136c3bd_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is_ptr<_20d828087_Label>()) {
			_case_begin_1c96c8e7d:;
			{
				_1e136c8b8_pushLabel(_self_, _18236_st.operator jule::Ptr<_20d828087_Label>());
			}
		}
		_match_end_1c96c893e:;
	};
}



inline void _1e136e07e_optimizeStmts(jule::Ptr<_1e136b466_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1e136dda3_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1c96d175a:;
	}
	_iter_end_1c96d175a:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e136b466_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1e13703c1_exprDeadCode static__1e13709ed_new(jule::Ptr<_1e136b466_scopeDeadCode>& _5024_s) {
	return _1e13703c1_exprDeadCode{._field_s=_5024_s};;
}



inline void _1e1370c73_binary(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20cc2c05d_BinopExprModel> _5625_m) {
	_1e1376718_optimize(&(*_self_), _5625_m.get()._field_Left.get()._field_Model);
	_1e1376718_optimize(&(*_self_), _5625_m.get()._field_Right.get()._field_Model);
}



inline void _1e1370ee8_unary(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d80da0c_UnaryExprModel> _6124_m) {
	_1e1376718_optimize(&(*_self_), _6124_m.get()._field_Expr.get()._field_Model);
}



inline void _1e137126d_structureLit(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d80ddd6_StructLitExprModel> _6531_m) {
	{
		auto &expr = _6531_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1c96d498e:;
		if (it != expr.end()) {
			jule::Ptr<_20d80dbe9_StructArgExprModel> _6621_arg = *it;
			{
				_1e1376718_optimize(&(*_self_), _6621_arg.get()._field_Expr);
			}
			_iter_next_1c96d498e:;
			++it;
			goto _iter_begin_1c96d498e;
		}
		_iter_end_1c96d498e:;
	};
}



inline void _1e13714e3_allocStructure(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d80e0c3_AllocStructLitExprModel> _7133_m) {
	_1e137126d_structureLit(&(*_self_), _7133_m.get()._field_Lit);
}



inline void _1e1371768_casting(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d80e2b0_CastingExprModel> _7526_m) {
	_1e1376718_optimize(&(*_self_), _7526_m.get()._field_Expr);
}



inline void _1e13719dd_args(_1e13703c1_exprDeadCode* _self_, jule::Slice<jule::Any>& _7924_args) {
	{
		auto &expr = _7924_args;
		auto it = expr.begin();
		_iter_begin_1c96d6be4:;
		if (it != expr.end()) {
			jule::Any _8021_arg = *it;
			{
				_1e1376718_optimize(&(*_self_), _8021_arg);
			}
			_iter_next_1c96d6be4:;
			++it;
			goto _iter_begin_1c96d6be4;
		}
		_iter_end_1c96d6be4:;
	};
}



inline void _1e1371c63_funcCall(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d80e49c_FnCallExprModel> _8527_m) {
	_1e1376718_optimize(&(*_self_), _8527_m.get()._field_Expr);
	_1e13719dd_args(&(*_self_), _8527_m.get()._field_Args);
	if ((_8527_m.get()._field_Except != nullptr)) {
		_1e136bbd6_optimizeBodyChildExceptional((*_self_)._field_s, _8527_m.get()._field_Except);
	};
}



inline void _1e1371ed8_slice(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d80e689_SliceExprModel> _9324_m) {
	_1e13719dd_args(&(*_self_), _9324_m.get()._field_Elems);
}



inline void _1e137225d_array(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d810b0d_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_1e1376718_optimize(&(*_self_), _9724_m.get()._field_Elems[0LL]);
	};
	_1e13719dd_args(&(*_self_), _9724_m.get()._field_Elems);
}



inline void _1e13724d3_indexing(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d80e876_IndexingExprModel> _10427_m) {
	_1e1376718_optimize(&(*_self_), _10427_m.get()._field_Expr.get()._field_Model);
	_1e1376718_optimize(&(*_self_), _10427_m.get()._field_Index.get()._field_Model);
}



inline void _1e1372758_anonFunc(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d80ea63_AnonFnExprModel> _10927_m) {
	_1e136e36a_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _1e13729cd_mapExpr(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d80ee3c_MapExprModel> _11326_m) {
	{
		auto &expr = _11326_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1c96dcbb7:;
		if (it != expr.end()) {
			jule::Ptr<_20d80ec50_KeyValPairExprModel> _11421_pair = *it;
			{
				_1e1376718_optimize(&(*_self_), _11421_pair.get()._field_Key);
				_1e1376718_optimize(&(*_self_), _11421_pair.get()._field_Val);
			}
			_iter_next_1c96dcbb7:;
			++it;
			goto _iter_begin_1c96dcbb7;
		}
		_iter_end_1c96dcbb7:;
	};
}



inline void _1e1372c53_slicing(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d810129_SlicingExprModel> _12026_m) {
	_1e1376718_optimize(&(*_self_), _12026_m.get()._field_Expr);
	_1e1376718_optimize(&(*_self_), _12026_m.get()._field_Left);
	if ((_12026_m.get()._field_Right != nullptr)) {
		_1e1376718_optimize(&(*_self_), _12026_m.get()._field_Right);
	};
}



inline void _1e1372ec8_traitSub(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d810316_TraitSubIdentExprModel> _12827_m) {
	_1e1376718_optimize(&(*_self_), _12827_m.get()._field_Expr);
}



inline void _1e137324d_structureSub(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d810734_StructSubIdentExprModel> _13231_m) {
	_1e1376718_optimize(&(*_self_), _13231_m.get()._field_Expr.get()._field_Model);
}



inline void _1e13734c3_commonSub(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d810ed7_CommonSubIdentExprModel> _13628_m) {
	_1e1376718_optimize(&(*_self_), _13628_m.get()._field_Expr);
}



inline void _1e1373748_tuple(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d8111c4_TupleExprModel> _14024_m) {
	{
		auto &expr = _14024_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1c96e21b6:;
		if (it != expr.end()) {
			jule::Ptr<_20d8b2891_Data> _14121_d = *it;
			{
				_1e1376718_optimize(&(*_self_), _14121_d.get()._field_Model);
			}
			_iter_next_1c96e21b6:;
			++it;
			goto _iter_begin_1c96e21b6;
		}
		_iter_end_1c96e21b6:;
	};
}



inline void _1e13739bd_newCall(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d811977_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_1e1376718_optimize(&(*_self_), _14626_m.get()._field_Init);
	};
}



inline void _1e1373c43_outCall(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d8113b1_BuiltinOutCallExprModel> _15226_m) {
	_1e1376718_optimize(&(*_self_), _15226_m.get()._field_Expr);
}



inline void _1e1373eb8_outlnCall(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d81159d_BuiltinOutlnCallExprModel> _15628_m) {
	_1e1376718_optimize(&(*_self_), _15628_m.get()._field_Expr);
}



inline void _1e137423d_panicCall(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d811b64_BuiltinPanicCallExprModel> _16028_m) {
	_1e1376718_optimize(&(*_self_), _16028_m.get()._field_Expr);
}



inline void _1e13744b3_assertCall(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d811d51_BuiltinAssertCallExprModel> _16429_m) {
	_1e1376718_optimize(&(*_self_), _16429_m.get()._field_Expr);
}



inline void _1e1374738_errorCall(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d812e51_BuiltinErrorCallExprModel> _16828_m) {
	_1e1376718_optimize(&(*_self_), _16828_m.get()._field_Err);
}



inline void _1e13749ad_makeCall(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d81203d_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_1e1376718_optimize(&(*_self_), _17227_m.get()._field_Len);
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_1e1376718_optimize(&(*_self_), _17227_m.get()._field_Cap);
	};
}



inline void _1e1374c33_appendCall(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d81222a_BuiltinAppendCallExprModel> _18129_m) {
	_1e1376718_optimize(&(*_self_), _18129_m.get()._field_Dest);
	_1e1376718_optimize(&(*_self_), _18129_m.get()._field_Elements);
}



inline void _1e1374ea8_lenCall(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d812417_BuiltinLenCallExprModel> _18626_m) {
	_1e1376718_optimize(&(*_self_), _18626_m.get()._field_Expr.get()._field_Model);
}



inline void _1e137522d_capCall(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d812604_BuiltinCapCallExprModel> _19026_m) {
	_1e1376718_optimize(&(*_self_), _19026_m.get()._field_Expr.get()._field_Model);
}



inline void _1e13754a3_cloneCall(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d81178a_BuiltinCloneCallExprModel> _19428_m) {
	_1e1376718_optimize(&(*_self_), _19428_m.get()._field_Expr);
}



inline void _1e1375728_deleteCall(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d810503_BuiltinDeleteCallExprModel> _19829_m) {
	_1e1376718_optimize(&(*_self_), _19829_m.get()._field_Dest.get()._field_Model);
	if ((_19829_m.get()._field_Key != nullptr)) {
		_1e1376718_optimize(&(*_self_), _19829_m.get()._field_Key.get()._field_Model);
	};
}



inline void _1e137599d_sizeof(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d81313d_SizeofExprModel> _20525_m) {
	_1e1376718_optimize(&(*_self_), _20525_m.get()._field_Expr);
}



inline void _1e1375c23_alignof(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d81332a_AlignofExprModel> _20926_m) {
	_1e1376718_optimize(&(*_self_), _20926_m.get()._field_Expr);
}



inline void _1e1375e98_integratedToStr(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d813704_IntegratedToStrExprModel> _21334_m) {
	_1e1376718_optimize(&(*_self_), _21334_m.get()._field_Expr);
}



inline void _1e137621d_free(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d813acd_FreeExprModel> _21723_m) {
	_1e1376718_optimize(&(*_self_), _21723_m.get()._field_Expr);
}



inline void _1e1376493_backendEmit(_1e13703c1_exprDeadCode* _self_, jule::Ptr<_20d8138e1_BackendEmitExprModel> _22130_m) {
	_1e13719dd_args(&(*_self_), _22130_m.get()._field_Exprs);
}



inline void _1e1376718_optimize(_1e13703c1_exprDeadCode* _self_, jule::Any& _22528_model) {
	{
		auto &_match_expr{ _22528_model };
		
		if (_match_expr.type_is_ptr<_20cc2c05d_BinopExprModel>()) {
			_case_begin_1c96eebb8:;
			{
				_1e1370c73_binary(&(*_self_), _22528_model.operator jule::Ptr<_20cc2c05d_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80da0c_UnaryExprModel>()) {
			_case_begin_1c96eec40:;
			{
				_1e1370ee8_unary(&(*_self_), _22528_model.operator jule::Ptr<_20d80da0c_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80ddd6_StructLitExprModel>()) {
			_case_begin_1c96eecb7:;
			{
				_1e137126d_structureLit(&(*_self_), _22528_model.operator jule::Ptr<_20d80ddd6_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80e0c3_AllocStructLitExprModel>()) {
			_case_begin_1c9700191:;
			{
				_1e13714e3_allocStructure(&(*_self_), _22528_model.operator jule::Ptr<_20d80e0c3_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80e2b0_CastingExprModel>()) {
			_case_begin_1c9700207:;
			{
				_1e1371768_casting(&(*_self_), _22528_model.operator jule::Ptr<_20d80e2b0_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80e49c_FnCallExprModel>()) {
			_case_begin_1c970027e:;
			{
				_1e1371c63_funcCall(&(*_self_), _22528_model.operator jule::Ptr<_20d80e49c_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80e689_SliceExprModel>()) {
			_case_begin_1c9700306:;
			{
				_1e1371ed8_slice(&(*_self_), _22528_model.operator jule::Ptr<_20d80e689_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810b0d_ArrayExprModel>()) {
			_case_begin_1c970037d:;
			{
				_1e137225d_array(&(*_self_), _22528_model.operator jule::Ptr<_20d810b0d_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80e876_IndexingExprModel>()) {
			_case_begin_1c9700405:;
			{
				_1e13724d3_indexing(&(*_self_), _22528_model.operator jule::Ptr<_20d80e876_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80ea63_AnonFnExprModel>()) {
			_case_begin_1c970047c:;
			{
				_1e1372758_anonFunc(&(*_self_), _22528_model.operator jule::Ptr<_20d80ea63_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80ee3c_MapExprModel>()) {
			_case_begin_1c9700504:;
			{
				_1e13729cd_mapExpr(&(*_self_), _22528_model.operator jule::Ptr<_20d80ee3c_MapExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810129_SlicingExprModel>()) {
			_case_begin_1c970057b:;
			{
				_1e1372c53_slicing(&(*_self_), _22528_model.operator jule::Ptr<_20d810129_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810316_TraitSubIdentExprModel>()) {
			_case_begin_1c9700603:;
			{
				_1e1372ec8_traitSub(&(*_self_), _22528_model.operator jule::Ptr<_20d810316_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810734_StructSubIdentExprModel>()) {
			_case_begin_1c970067a:;
			{
				_1e137324d_structureSub(&(*_self_), _22528_model.operator jule::Ptr<_20d810734_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810ed7_CommonSubIdentExprModel>()) {
			_case_begin_1c9700702:;
			{
				_1e13734c3_commonSub(&(*_self_), _22528_model.operator jule::Ptr<_20d810ed7_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8111c4_TupleExprModel>()) {
			_case_begin_1c9700779:;
			{
				_1e1373748_tuple(&(*_self_), _22528_model.operator jule::Ptr<_20d8111c4_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8113b1_BuiltinOutCallExprModel>()) {
			_case_begin_1c9700801:;
			{
				_1e1373c43_outCall(&(*_self_), _22528_model.operator jule::Ptr<_20d8113b1_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81159d_BuiltinOutlnCallExprModel>()) {
			_case_begin_1c9700878:;
			{
				_1e1373eb8_outlnCall(&(*_self_), _22528_model.operator jule::Ptr<_20d81159d_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d811977_BuiltinNewCallExprModel>()) {
			_case_begin_1c9700900:;
			{
				_1e13739bd_newCall(&(*_self_), _22528_model.operator jule::Ptr<_20d811977_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d811b64_BuiltinPanicCallExprModel>()) {
			_case_begin_1c9700977:;
			{
				_1e137423d_panicCall(&(*_self_), _22528_model.operator jule::Ptr<_20d811b64_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d811d51_BuiltinAssertCallExprModel>()) {
			_case_begin_1c97009ee:;
			{
				_1e13744b3_assertCall(&(*_self_), _22528_model.operator jule::Ptr<_20d811d51_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d812e51_BuiltinErrorCallExprModel>()) {
			_case_begin_1c9700a76:;
			{
				_1e1374738_errorCall(&(*_self_), _22528_model.operator jule::Ptr<_20d812e51_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81203d_BuiltinMakeCallExprModel>()) {
			_case_begin_1c9700aed:;
			{
				_1e13749ad_makeCall(&(*_self_), _22528_model.operator jule::Ptr<_20d81203d_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81222a_BuiltinAppendCallExprModel>()) {
			_case_begin_1c9700b75:;
			{
				_1e1374c33_appendCall(&(*_self_), _22528_model.operator jule::Ptr<_20d81222a_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d812417_BuiltinLenCallExprModel>()) {
			_case_begin_1c9700bec:;
			{
				_1e1374ea8_lenCall(&(*_self_), _22528_model.operator jule::Ptr<_20d812417_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d812604_BuiltinCapCallExprModel>()) {
			_case_begin_1c9700c74:;
			{
				_1e137522d_capCall(&(*_self_), _22528_model.operator jule::Ptr<_20d812604_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81178a_BuiltinCloneCallExprModel>()) {
			_case_begin_1c9700ceb:;
			{
				_1e13754a3_cloneCall(&(*_self_), _22528_model.operator jule::Ptr<_20d81178a_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810503_BuiltinDeleteCallExprModel>()) {
			_case_begin_1c9700d73:;
			{
				_1e1375728_deleteCall(&(*_self_), _22528_model.operator jule::Ptr<_20d810503_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81313d_SizeofExprModel>()) {
			_case_begin_1c9700dea:;
			{
				_1e137599d_sizeof(&(*_self_), _22528_model.operator jule::Ptr<_20d81313d_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81332a_AlignofExprModel>()) {
			_case_begin_1c9700e72:;
			{
				_1e1375c23_alignof(&(*_self_), _22528_model.operator jule::Ptr<_20d81332a_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d813704_IntegratedToStrExprModel>()) {
			_case_begin_1c9700ee9:;
			{
				_1e1375e98_integratedToStr(&(*_self_), _22528_model.operator jule::Ptr<_20d813704_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d813acd_FreeExprModel>()) {
			_case_begin_1c9701071:;
			{
				_1e137621d_free(&(*_self_), _22528_model.operator jule::Ptr<_20d813acd_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8138e1_BackendEmitExprModel>()) {
			_case_begin_1c97010e8:;
			{
				_1e1376493_backendEmit(&(*_self_), _22528_model.operator jule::Ptr<_20d8138e1_BackendEmitExprModel>());
			}
		}
		_match_end_1c96eedb6:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e13703c1_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20da4b5eb_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20da4b91a_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20da4bcd3_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20da4c399_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20da4c740_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20da4d8ea_scopeOptimizer> static__20da4de17_new(jule::Ptr<_20d825848_Scope> _4523_scope) {
	return jule::new_ptr<_20da4d8ea_scopeOptimizer>(_20da4d8ea_scopeOptimizer{._field_scope=_4523_scope});;
}



inline void _20da4e18c_setCurrentStmt(_20da4d8ea_scopeOptimizer* _self_, jule::Any _5137_stmt) {
	(*_self_)._field_scope.get()._field_Stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5137_stmt))))));
}



inline void _20da4e412_optimizeData(_20da4d8ea_scopeOptimizer* _self_, jule::Ptr<_20d8b2891_Data> _5535_d) {
	{
		auto &_match_expr{ _5535_d.get()._field_Model };
		
		if (_match_expr.type_is_ptr<_20d80e49c_FnCallExprModel>()) {
			_case_begin_1c973ad14:;
			{
				jule::Ptr<_20d80e49c_FnCallExprModel> _5821_m = _5535_d.get()._field_Model.operator jule::Ptr<_20d80e49c_FnCallExprModel>();;
				if (_22eb61536_Production) {
					if (((!(_20d814e0e_IsBuiltin(_5821_m.get()._field_Func.ptr()))) && _20da5226c_isStdPackage(_5821_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("debug", 5)))) {
						_20da4e18c_setCurrentStmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1c973ab05:;
	};
	static__20da544c2_optimize(_5535_d.get()._field_Model);
}



inline void _20da4e687_optimizeVar(_20da4d8ea_scopeOptimizer* _self_, jule::Ptr<_20d869eb9_Var> _7034_v) {
	if ((_7034_v.get()._field_Value != nullptr)) {
		static__20da544c2_optimize(_7034_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _20da4e90c_optimizeConditional(_20da4d8ea_scopeOptimizer* _self_, jule::Ptr<_20d8263a4_Conditional> _7642_c) {
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1c973de16:;
		if (it != expr.end()) {
			jule::Ptr<_20d825c44_If> _7721_elif = *it;
			{
				static__20da544c2_optimize(_7721_elif.get()._field_Expr);
				_20da51b95_optimizeChild(&(*_self_), _7721_elif.get()._field_Scope);
			}
			_iter_next_1c973de16:;
			++it;
			goto _iter_begin_1c973de16;
		}
		_iter_end_1c973de16:;
	};
	if ((_7642_c.get()._field_Default != nullptr)) {
		_20da51b95_optimizeChild(&(*_self_), _7642_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_20da5c92b_Cond))) {
		return;;
	};
	jule::Bool _8917_constCase = false;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1c9740c92:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_20d825c44_If> _9221_elif = *it;
			{
				if ((!(_20da5257a_isConstantValidConditionalCase(_9221_elif)))) {
					goto _iter_next_1c9740c92;
				};
				_8917_constCase=true;
				_7642_c.get()._field_Elifs=_7642_c.get()._field_Elifs.slice(0LL,_9214_i);
				_7642_c.get()._field_Default=jule::new_ptr<_20d826030_Else>(_20d826030_Else{._field_Scope=_9221_elif.get()._field_Scope});
				goto _iter_end_1c9740c92;
			}
			_iter_next_1c9740c92:;
			++it;
			_9214_i++;
			goto _iter_begin_1c9740c92;
		}
		_iter_end_1c9740c92:;
	};
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_20d825c44_If>* _10917_i = (&(_7642_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_20d825c44_If>* _11013_end = (&(_7642_c.get()._field_Elifs[(_7642_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_20da52e1b_isUnreachableConditionalCase((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1c9743ec6:;
	}
	_iter_end_1c9743ec6:;;
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_constCase))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1c9745637:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_20d825c44_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1c9745637:;
			++it;
			_12913_j++;
			goto _iter_begin_1c9745637;
		}
		_iter_end_1c9745637:;
	};
	if ((_12817_only != -1LL)) {
		_20da4e18c_setCurrentStmt(&(*_self_), jule::Any(_7642_c.get()._field_Elifs[_12817_only].get()._field_Scope));
	};
}



inline void _20da4ece7_buildDefaultConstatTrueCase(_20da4d8ea_scopeOptimizer* _self_, jule::Ptr<_20d82a0de_Case> _14550_case, jule::I64& _14568_i, jule::Ptr<_20d829594_Match>& _14581_m) {
	_14550_case.get()._field_Exprs=nullptr;
	jule::I64 _14713_start = _14568_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14550_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1c974810c;
			};
			jule::Any &_15322_stmt = _14550_case.get()._field_Scope.get()._field_Stmts[(_14550_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is_ptr<_20d82a694_FallSt>()) {
					_case_begin_1c974876c:;
					{
						(_14568_i)++;
						if ((_14568_i >= _14581_m.get()._field_Cases.len())) {
							_15322_stmt=static_cast<jule::Any>(_14581_m.get()._field_Default.get()._field_Scope);
							goto _iter_end_1c974810c;
						};
						_14550_case=_14581_m.get()._field_Cases[_14568_i];
						_15322_stmt=static_cast<jule::Any>(_14550_case.get()._field_Scope);
					}
				}
				else {
					_case_begin_1c9749bad:;
					{
						goto _iter_end_1c974810c;
					}
				}
				_match_end_1c9749ac0:;
			};
		}
	_iter_next_1c974810c:;
	}
	_iter_end_1c974810c:;;
	_14581_m.get()._field_Default=_14581_m.get()._field_Cases[_14713_start];
	_14581_m.get()._field_Cases=_14581_m.get()._field_Cases.slice(0LL,_14713_start);
}



inline void _20da50006_optimizeMatch(_20da4d8ea_scopeOptimizer* _self_, jule::Ptr<_20d829594_Match> _17136_m) {
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c974bcae:;
		if (it != expr.end()) {
			jule::Ptr<_20d82a0de_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1c974c60b:;
					if (it != expr.end()) {
						jule::Ptr<_20d8b2891_Data> _17325_expr = *it;
						{
							static__20da544c2_optimize(_17325_expr.get()._field_Model);
						}
						_iter_next_1c974c60b:;
						++it;
						goto _iter_begin_1c974c60b;
					}
					_iter_end_1c974c60b:;
				};
				_20da51b95_optimizeChild(&(*_self_), _17221_case.get()._field_Scope);
			}
			_iter_next_1c974bcae:;
			++it;
			goto _iter_begin_1c974bcae;
		}
		_iter_end_1c974bcae:;
	};
	if ((_17136_m.get()._field_Default != nullptr)) {
		_20da51b95_optimizeChild(&(*_self_), _17136_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_20da5c92b_Cond))) {
		return;;
	};
	jule::Bool _18617_constCase = false;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c974e29a:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_20d82a0de_Case> _18925_case = *it;
			{
				if ((!(_20da52b74_isConstantValidMatchCase(_18925_case)))) {
					goto _iter_next_1c974e29a;
				};
				_18617_constCase=true;
				_20da4ece7_buildDefaultConstatTrueCase(&(*_self_), _18925_case,_18918_i,_17136_m);
				goto _iter_end_1c974e29a;
			}
			_iter_next_1c974e29a:;
			++it;
			_18918_i++;
			goto _iter_begin_1c974e29a;
		}
		_iter_end_1c974e29a:;
	};
	if ((_17136_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_20d82a0de_Case>* _20317_i = (&(_17136_m.get()._field_Cases[0LL]));;
	jule::Ptr<_20d82a0de_Case>* _20413_end = (&(_17136_m.get()._field_Cases[(_17136_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_20da531c4_isUnreachableMatchCase((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1c9751eb2:;
	}
	_iter_end_1c9751eb2:;;
	if ((!(_18617_constCase))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c975306d:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_20d82a0de_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1c975306d:;
			++it;
			_21913_j++;
			goto _iter_begin_1c975306d;
		}
		_iter_end_1c975306d:;
	};
	if ((_21817_only != -1LL)) {
		_20da4e18c_setCurrentStmt(&(*_self_), jule::Any(_17136_m.get()._field_Cases[_21817_only].get()._field_Scope));
	};
}



inline void _20da5027b_optimizeRangeIter(_20da4d8ea_scopeOptimizer* _self_, jule::Ptr<_20d8274e8_RangeIter> _23540_it) {
	static__20da544c2_optimize(_23540_it.get()._field_Expr.get()._field_Model);
	_20da51b95_optimizeChild(&(*_self_), _23540_it.get()._field_Scope);
}



inline void _20da50501_optimizeWhileIter(_20da4d8ea_scopeOptimizer* _self_, jule::Ptr<_20d826b13_WhileIter> _24040_it) {
	static__20da544c2_optimize(_24040_it.get()._field_Expr);
	_20da51920_optimizeStmt(&(*_self_), _24040_it.get()._field_Next);
	_20da51b95_optimizeChild(&(*_self_), _24040_it.get()._field_Scope);
}



inline jule::Bool _20da5080e_substr(_20da4d8ea_scopeOptimizer* _self_, jule::Ptr<_20d828b9d_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is_ptr<_20d810129_SlicingExprModel>()) {
			_case_begin_1c97571d7:;
			{
				jule::Ptr<_20d810129_SlicingExprModel> _24921_sem = _24629_a.get()._field_R.get()._field_Model.operator jule::Ptr<_20d810129_SlicingExprModel>();;
				if ((_24921_sem.get()._field_Expr == _24629_a.get()._field_L.get()._field_Model)) {
					_20da4e18c_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_20da4c399_MutSlicingExprModel>(_20da4c399_MutSlicingExprModel{._field_Token=_24921_sem.get()._field_Token, ._field_Expr=_24921_sem.get()._field_Expr, ._field_Left=_24921_sem.get()._field_Left, ._field_Right=_24921_sem.get()._field_Right})));
					return true;;
				};
			}
		}
		_match_end_1c9757182:;
	};
	return false;;
}



inline jule::Bool _20da50b1c_strInsert(_20da4d8ea_scopeOptimizer* _self_, jule::Ptr<_20d828b9d_Assign> _26332_a) {
	{
		auto &_match_expr{ _26332_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is_ptr<_20cc2c05d_BinopExprModel>()) {
			_case_begin_1c9759607:;
			{
				jule::Ptr<_20cc2c05d_BinopExprModel> _26621_m = _26332_a.get()._field_R.get()._field_Model.operator jule::Ptr<_20cc2c05d_BinopExprModel>();;
				if ((_26621_m.get()._field_Right.get()._field_Model == _26332_a.get()._field_L.get()._field_Model)) {
					_20da4e18c_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_20da4c740_StrInsertBeginExprModel>(_20da4c740_StrInsertBeginExprModel{._field_Dest=_26332_a.get()._field_L.get()._field_Model, ._field_Expr=_26621_m.get()._field_Left.get()._field_Model})));
					return true;;
				};
			}
		}
		_match_end_1c975934e:;
	};
	return false;;
}



inline jule::Bool _20da50e2a_strAssign(_20da4d8ea_scopeOptimizer* _self_, jule::Ptr<_20d828b9d_Assign> _27832_a) {
	if ((_27832_a.get()._field_Op.get()._field_Kind != jule::Str("=", 1))) {
		return false;;
	};
	jule::Ptr<_20d8e83cc_Prim> _28213_lp = _20d8e5a17_Prim(_27832_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_20d8eb611_IsStr(_28213_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_20da5080e_substr(&(*_self_), _27832_a) || _20da50b1c_strInsert(&(*_self_), _27832_a)) {
			_case_begin_1c975cece:;
			{
				return true;;
			}
		}
		_match_end_1c975ce46:;
	};
	return false;;
}



inline void _20da511a0_optimizeAssign(_20da4d8ea_scopeOptimizer* _self_, jule::Ptr<_20d828b9d_Assign> _29437_assign) {
	if ((_20da5b320_Copy && _20da50e2a_strAssign(&(*_self_), _29437_assign))) {
		return;;
	};
	static__20da544c2_optimize(_29437_assign.get()._field_L.get()._field_Model);
	static__20da544c2_optimize(_29437_assign.get()._field_R.get()._field_Model);
	{
		auto &_match_expr{ _29437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1c975edd2:;
			{
				if ((_20da5bc05_Math && (_20d8e6e69_Struct(_29437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_29437_assign.get()._field_Op.get()._field_Kind=_29437_assign.get()._field_Op.get()._field_Kind.slice(0LL,(_29437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _30725_model = static_cast<jule::Any>(jule::new_ptr<_20cc2c05d_BinopExprModel>(_20cc2c05d_BinopExprModel{._field_Left=_29437_assign.get()._field_L, ._field_Right=_29437_assign.get()._field_R, ._field_Op=_29437_assign.get()._field_Op}));;
					static__20da544c2_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is_ptr<_20cc2c05d_BinopExprModel>()) {
							_case_begin_1c9762357:;
							{
								_29437_assign.get()._field_R=jule::new_ptr<_20cbed66c_OperandExprModel>((*(_29437_assign.get()._field_R)));
								_29437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_29437_assign.get()._field_R.get()._field_Model=_30725_model;
								return;;
							}
						}
						_match_end_1c9762104:;
					};
					_29437_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1c975ec7d:;
	};
	if (_20da5b8e7_Append) {
		{
			auto &_match_expr{ _29437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type_is_ptr<_20d81222a_BuiltinAppendCallExprModel>()) {
				_case_begin_1c9763ed5:;
				{
					jule::Ptr<_20d81222a_BuiltinAppendCallExprModel> _32825_m = _29437_assign.get()._field_R.get()._field_Model.operator jule::Ptr<_20d81222a_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_Elements };
						
						if (_match_expr.type_is_ptr<_20d80e689_SliceExprModel>()) {
							_case_begin_1c976506e:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_Dest };
									
									if (_match_expr.type_is_ptr<_20d869eb9_Var>() || _match_expr.type_is_ptr<_20d810734_StructSubIdentExprModel>()) {
										_case_begin_1c9765822:;
										{
											_20da4e18c_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_20da4bcd3_PushToSliceExprModel>(_20da4bcd3_PushToSliceExprModel{._field_Dest=_32825_m.get()._field_Dest, ._field_Elems=_32825_m.get()._field_Elements.operator jule::Ptr<_20d80e689_SliceExprModel>()})));
										}
									}
									_match_end_1c97657bc:;
								};
							}
						}
						_match_end_1c9764d60:;
					};
				}
			}
			_match_end_1c97609c6:;
		};
	};
}



inline void _20da51425_optimizeMultiAssign(_20da4d8ea_scopeOptimizer* _self_, jule::Ptr<_20d829055_MultiAssign> _34442_assign) {
	{
		auto &expr = _34442_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1c97643e2:;
		if (it != expr.end()) {
			jule::Ptr<_20d8b2891_Data> _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__20da544c2_optimize(_34521_l.get()._field_Model);
				};
			}
			_iter_next_1c97643e2:;
			++it;
			goto _iter_begin_1c97643e2;
		}
		_iter_end_1c97643e2:;
	};
	static__20da544c2_optimize(_34442_assign.get()._field_R);
}



inline void _20da5169a_optimizeRet(_20da4d8ea_scopeOptimizer* _self_, jule::Ptr<_20d82aa18_RetSt> _35334_r) {
	static__20da544c2_optimize(_35334_r.get()._field_Expr);
}



inline void _20da51920_optimizeStmt(_20da4d8ea_scopeOptimizer* _self_, jule::Any _35735_stmt) {
	{
		auto &_match_expr{ _35735_stmt };
		
		if (_match_expr.type_is_ptr<_20d825848_Scope>()) {
			_case_begin_1c9767cec:;
			{
				_20da51b95_optimizeChild(&(*_self_), _35735_stmt.operator jule::Ptr<_20d825848_Scope>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8b2891_Data>()) {
			_case_begin_1c9767d74:;
			{
				_20da4e412_optimizeData(&(*_self_), _35735_stmt.operator jule::Ptr<_20d8b2891_Data>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d869eb9_Var>()) {
			_case_begin_1c9767dda:;
			{
				_20da4e687_optimizeVar(&(*_self_), _35735_stmt.operator jule::Ptr<_20d869eb9_Var>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8263a4_Conditional>()) {
			_case_begin_1c9767e51:;
			{
				_20da4e90c_optimizeConditional(&(*_self_), _35735_stmt.operator jule::Ptr<_20d8263a4_Conditional>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8274e8_RangeIter>()) {
			_case_begin_1c9767eb7:;
			{
				_20da5027b_optimizeRangeIter(&(*_self_), _35735_stmt.operator jule::Ptr<_20d8274e8_RangeIter>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d826b13_WhileIter>()) {
			_case_begin_1c976803e:;
			{
				_20da50501_optimizeWhileIter(&(*_self_), _35735_stmt.operator jule::Ptr<_20d826b13_WhileIter>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d826690_InfIter>()) {
			_case_begin_1c97680b6:;
			{
				_20da51b95_optimizeChild(&(*_self_), _35735_stmt.operator jule::Ptr<_20d826690_InfIter>().get()._field_Scope);
			}
		}
		else if (_match_expr.type_is_ptr<_20d828b9d_Assign>()) {
			_case_begin_1c976813d:;
			{
				_20da511a0_optimizeAssign(&(*_self_), _35735_stmt.operator jule::Ptr<_20d828b9d_Assign>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d829055_MultiAssign>()) {
			_case_begin_1c97681b5:;
			{
				_20da51425_optimizeMultiAssign(&(*_self_), _35735_stmt.operator jule::Ptr<_20d829055_MultiAssign>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d829594_Match>()) {
			_case_begin_1c976823c:;
			{
				_20da50006_optimizeMatch(&(*_self_), _35735_stmt.operator jule::Ptr<_20d829594_Match>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d82aa18_RetSt>()) {
			_case_begin_1c97682b4:;
			{
				_20da5169a_optimizeRet(&(*_self_), _35735_stmt.operator jule::Ptr<_20d82aa18_RetSt>());
			}
		}
		_match_end_1c9767b32:;
	};
}



inline void _20da51b95_optimizeChild(_20da4d8ea_scopeOptimizer* _self_, jule::Ptr<_20d825848_Scope> _38436_child) {
	jule::Ptr<_20da4d8ea_scopeOptimizer> _38517_so = static__20da4de17_new(_38436_child);;
	_20da51d71_optimize(_38517_so.ptr());
}



inline void _20da51d71_optimize(_20da4d8ea_scopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1c976e463:;
		if (it != expr.end()) {
			jule::I64 _39114_i = it - expr.begin();
			jule::Any _39121_stmt = *it;
			{
				(*_self_)._field_i=_39114_i;
				_20da51920_optimizeStmt(&(*_self_), _39121_stmt);
			}
			_iter_next_1c976e463:;
			++it;
			_39114_i++;
			goto _iter_begin_1c976e463;
		}
		_iter_end_1c976e463:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20da4d8ea_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__20da544c2_optimize(jule::Any& _5829_model) {
	if (_1e1273ca8_exprEnabled) {
		jule::Ptr<_20da53eb6_exprOptimizer> _6121_exop = jule::new_ptr<_20da53eb6_exprOptimizer>(_20da53eb6_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5829_model))))});;
		_20da5a6c6_do(_6121_exop.ptr());
	};
}



inline jule::Bool _20da547d0_strCond(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20cc2c05d_BinopExprModel> _6826_m) {
	jule::Ptr<_20d8e83cc_Prim> _6913_lp = _20d8e5a17_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_20d8eb611_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((_6826_m.get()._field_Op.get()._field_Kind != jule::Str("==", 2)) && (_6826_m.get()._field_Op.get()._field_Kind != jule::Str("!=", 2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type_is_ptr<_20cc572ec_Const>()) {
			_case_begin_1c9777ed8:;
			{
				({
					jule::Ptr<_20cbed66c_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_20cbed66c_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_1c9777e83:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is_ptr<_20cc572ec_Const>()) {
			_case_begin_1c9777713:;
			{
				goto _match_end_1c9778c75;
			}
		}
		else {
			_case_begin_1c977910a:;
			{
				return true;;
			}
		}
		_match_end_1c9778c75:;
	};
	_julec_label_opt:;
	jule::Ptr<_20cc572ec_Const> _8813_c = _6826_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_20cc572ec_Const>();;
	if ((!(_20d80aa4d_ReadStr(_8813_c.ptr()).empty()))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1c977a7e3:;
			{
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_20d810ed7_CommonSubIdentExprModel>(_20d810ed7_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1c977a859:;
			{
				jule::Ptr<_20b4e5581_Token> _10021_op = _6826_m.get()._field_Op;;
				_10021_op.get()._field_Kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_20d80da0c_UnaryExprModel>(_20d80da0c_UnaryExprModel{._field_Expr=jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d810ed7_CommonSubIdentExprModel>(_20d810ed7_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)})), }), ._field_Op=_10021_op}));
			}
		}
		_match_end_1c977a084:;
	};
	return true;;
}



inline void _20da54a55_binary(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20cc2c05d_BinopExprModel> _11625_m) {
	static__20da544c2_optimize(_11625_m.get()._field_Left.get()._field_Model);
	static__20da544c2_optimize(_11625_m.get()._field_Right.get()._field_Model);
	{
		auto &_match_expr{ _11625_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is_ptr<_20cc572ec_Const>()) {
			_case_begin_1c977bdbb:;
			{
				goto _match_end_1c977e31e;
			}
		}
		else {
			_case_begin_1c977e473:;
			{
				return;;
			}
		}
		_match_end_1c977e31e:;
	};
	if ((_20da5c92b_Cond && _20da547d0_strCond(&(*_self_), _11625_m))) {
		return;;
	};
	if ((!(_20da5bc05_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _11625_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c97804b8:;
			{
				jule::Bool _13618_ok = false;;
				jule::U64 _13622_x = 0;;
				({
					_bool_u64 __jule_assign_result = _20da5aac2_checkForBitShiftOpt(_11625_m.get()._field_Left,_11625_m.get()._field_Right);
					_13618_ok = __jule_assign_result.__jule_result_arg0;
					_13622_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_13618_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_20cc572ec_Const> _13925_c = _11625_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_20cc572ec_Const>();;
					_20d80b28a_SetU64(_13925_c.ptr(), _13622_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1c978052e:;
			{
				jule::Bool _14418_ok = false;;
				jule::U64 _14422_x = 0;;
				({
					_bool_u64 __jule_assign_result = _20da5aac2_checkForBitShiftOpt(_11625_m.get()._field_Left,_11625_m.get()._field_Right);
					_14418_ok = __jule_assign_result.__jule_result_arg0;
					_14422_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_14418_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_20cc572ec_Const> _14725_c = _11625_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_20cc572ec_Const>();;
					_20d80b28a_SetU64(_14725_c.ptr(), _14422_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c9780595:;
			{
				jule::Ptr<_20cc572ec_Const> _15221_c = _11625_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_20cc572ec_Const>();;
				jule::F64 _15317_d = _20d80b026_AsF64(_15221_c.ptr());;
				if ((_15317_d == 2LL)) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_20d80b158_SetI64(_15221_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1c97802cb:;
	};
	jule::Any _15917_model = jule::Any(jule::new_ptr<_20da4b5eb_UnsafeBinopExprModel>(_20da4b5eb_UnsafeBinopExprModel{._field_Node=_11625_m}));;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15917_model))))));
}



inline void _20da54cca_unary(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d80da0c_UnaryExprModel> _16324_m) {
	static__20da544c2_optimize(_16324_m.get()._field_Expr.get()._field_Model);
	if ((_20da5c552_Ptr && (_16324_m.get()._field_Op.get()._field_Kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16324_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type_is_ptr<_20d80da0c_UnaryExprModel>()) {
				_case_begin_1c9787503:;
				{
					jule::Ptr<_20d80da0c_UnaryExprModel> _16825_um = _16324_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_20d80da0c_UnaryExprModel>();;
					if ((_16825_um.get()._field_Op.get()._field_Kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16825_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1c978749d:;
		};
	};
}



inline void _20da55050_structureLit(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d80ddd6_StructLitExprModel> _17631_m) {
	{
		auto &expr = _17631_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1c97890c6:;
		if (it != expr.end()) {
			jule::Ptr<_20d80dbe9_StructArgExprModel> _17721_arg = *it;
			{
				static__20da544c2_optimize(_17721_arg.get()._field_Expr);
			}
			_iter_next_1c97890c6:;
			++it;
			goto _iter_begin_1c97890c6;
		}
		_iter_end_1c97890c6:;
	};
}



inline void _20da552c5_allocStructure(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d80e0c3_AllocStructLitExprModel> _18233_m) {
	_20da55050_structureLit(&(*_self_), _18233_m.get()._field_Lit);
}



inline void _20da5554a_casting(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d80e2b0_CastingExprModel> _18626_m) {
	static__20da544c2_optimize(_18626_m.get()._field_Expr);
}



inline void _20da557c0_args(_20da53eb6_exprOptimizer* _self_, jule::Slice<jule::Any>& _19024_args) {
	{
		auto &expr = _19024_args;
		auto it = expr.begin();
		_iter_begin_1c978aabc:;
		if (it != expr.end()) {
			jule::I64 _19114_i = it - expr.begin();
			jule::Any _19121_arg = *it;
			{
				static__20da544c2_optimize(_19121_arg);
				_19024_args[_19114_i]=_19121_arg;
			}
			_iter_next_1c978aabc:;
			++it;
			_19114_i++;
			goto _iter_begin_1c978aabc;
		}
		_iter_end_1c978aabc:;
	};
}



inline void _20da55a45_scope(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d825848_Scope>& _19725_s) {
	jule::Ptr<_20da4d8ea_scopeOptimizer> _19817_scopt = static__20da4de17_new(_19725_s);;
	_20da51d71_optimize(_19817_scopt.ptr());
}



inline void _20da55cba_funcCall(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d80e49c_FnCallExprModel> _20227_m) {
	static__20da544c2_optimize(_20227_m.get()._field_Expr);
	_20da557c0_args(&(*_self_), _20227_m.get()._field_Args);
	if ((_20227_m.get()._field_Except != nullptr)) {
		_20da55a45_scope(&(*_self_), _20227_m.get()._field_Except);
	};
}



inline void _20da56040_slice(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d80e689_SliceExprModel> _21024_m) {
	_20da557c0_args(&(*_self_), _21024_m.get()._field_Elems);
}



inline void _20da562b5_array(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d810b0d_ArrayExprModel> _21424_m) {
	if (((_21424_m.get()._field_Elems.len() == 2LL) && (_21424_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _21621_elem = _21424_m.get()._field_Elems[0LL];;
		static__20da544c2_optimize(_21621_elem);
		_21424_m.get()._field_Elems[0LL]=_21621_elem;
	};
	_20da557c0_args(&(*_self_), _21424_m.get()._field_Elems);
}



inline void _20da5653a_indexing(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d80e876_IndexingExprModel> _22327_m) {
	static__20da544c2_optimize(_22327_m.get()._field_Expr.get()._field_Model);
	static__20da544c2_optimize(_22327_m.get()._field_Index.get()._field_Model);
	if ((!(_20da5bebe_Access))) {
		return;;
	};
	jule::Bool _22913_array = (_20d8e672c_Arr(_22327_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_22913_array && _20d8b3254_IsConst(_22327_m.get()._field_Index.ptr()))) {
		jule::Any _23221_model = jule::Any(jule::new_ptr<_20da4b91a_UnsafeIndexingExprModel>(_20da4b91a_UnsafeIndexingExprModel{._field_Node=_22327_m}));;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_23221_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22327_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type_is_ptr<_20d869eb9_Var>()) {
			_case_begin_1c97944dd:;
			{
				jule::Ptr<_20d869eb9_Var> _23817_i = _22327_m.get()._field_Index.get()._field_Model.operator jule::Ptr<_20d869eb9_Var>();;
				if ((_23817_i.get()._field_Mutable || (_23817_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1c9794488;
				};
				{
					auto &_match_expr{ _22327_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type_is_ptr<_20d869eb9_Var>()) {
						_case_begin_1c9795cb4:;
						{
							jule::Ptr<_20d869eb9_Var> _24421_r = _22327_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_20d869eb9_Var>();;
							if ((_23817_i.get()._field_IterRelation.get()._field_Range == _24421_r)) {
								jule::Any _24729_model = jule::Any(jule::new_ptr<_20da4b91a_UnsafeIndexingExprModel>(_20da4b91a_UnsafeIndexingExprModel{._field_Node=_22327_m}));;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24729_model))))));
							};
						}
					}
					_match_end_1c9795c5e:;
				};
			}
		}
		_match_end_1c9794488:;
	};
}



inline void _20da567b0_anonFunc(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d80ea63_AnonFnExprModel> _25427_m) {
	_20da55a45_scope(&(*_self_), _25427_m.get()._field_Func.get()._field_Scope);
}



inline void _20da56a35_mapExpr(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d80ee3c_MapExprModel> _25826_m) {
	{
		auto &expr = _25826_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1c97983d2:;
		if (it != expr.end()) {
			jule::Ptr<_20d80ec50_KeyValPairExprModel> _25921_pair = *it;
			{
				static__20da544c2_optimize(_25921_pair.get()._field_Key);
				static__20da544c2_optimize(_25921_pair.get()._field_Val);
			}
			_iter_next_1c97983d2:;
			++it;
			goto _iter_begin_1c97983d2;
		}
		_iter_end_1c97983d2:;
	};
}



inline void _20da56caa_slicing(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d810129_SlicingExprModel> _26526_m) {
	static__20da544c2_optimize(_26526_m.get()._field_Expr);
	static__20da544c2_optimize(_26526_m.get()._field_Left);
	if ((_26526_m.get()._field_Right != nullptr)) {
		static__20da544c2_optimize(_26526_m.get()._field_Right);
	};
}



inline void _20da57030_traitSub(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d810316_TraitSubIdentExprModel> _27327_m) {
	static__20da544c2_optimize(_27327_m.get()._field_Expr);
}



inline void _20da572a5_structureSub(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d810734_StructSubIdentExprModel> _27731_m) {
	static__20da544c2_optimize(_27731_m.get()._field_Expr.get()._field_Model);
}



inline void _20da5752a_commonSub(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d810ed7_CommonSubIdentExprModel> _28128_m) {
	static__20da544c2_optimize(_28128_m.get()._field_Expr);
}



inline void _20da577a0_tuple(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d8111c4_TupleExprModel> _28524_m) {
	{
		auto &expr = _28524_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1c979b78c:;
		if (it != expr.end()) {
			jule::Ptr<_20d8b2891_Data> _28621_d = *it;
			{
				static__20da544c2_optimize(_28621_d.get()._field_Model);
			}
			_iter_next_1c979b78c:;
			++it;
			goto _iter_begin_1c979b78c;
		}
		_iter_end_1c979b78c:;
	};
}



inline void _20da57a25_newCall(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d811977_BuiltinNewCallExprModel> _29126_m) {
	if ((_29126_m.get()._field_Init != nullptr)) {
		static__20da544c2_optimize(_29126_m.get()._field_Init);
	};
}



inline void _20da57c9a_outCall(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d8113b1_BuiltinOutCallExprModel> _29726_m) {
	static__20da544c2_optimize(_29726_m.get()._field_Expr);
}



inline void _20da58020_outlnCall(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d81159d_BuiltinOutlnCallExprModel> _30128_m) {
	static__20da544c2_optimize(_30128_m.get()._field_Expr);
}



inline void _20da58295_panicCall(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d811b64_BuiltinPanicCallExprModel> _30528_m) {
	static__20da544c2_optimize(_30528_m.get()._field_Expr);
}



inline void _20da5851a_assertCall(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d811d51_BuiltinAssertCallExprModel> _30929_m) {
	static__20da544c2_optimize(_30929_m.get()._field_Expr);
}



inline void _20da58790_errorCall(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d812e51_BuiltinErrorCallExprModel> _31328_m) {
	static__20da544c2_optimize(_31328_m.get()._field_Err);
}



inline void _20da58a15_makeCall(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d81203d_BuiltinMakeCallExprModel> _31727_m) {
	if ((_31727_m.get()._field_Len != nullptr)) {
		static__20da544c2_optimize(_31727_m.get()._field_Len);
	};
	if ((_31727_m.get()._field_Cap != nullptr)) {
		static__20da544c2_optimize(_31727_m.get()._field_Cap);
	};
}



inline void _20da58c8a_appendCall(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d81222a_BuiltinAppendCallExprModel> _32629_m) {
	static__20da544c2_optimize(_32629_m.get()._field_Dest);
	static__20da544c2_optimize(_32629_m.get()._field_Elements);
}



inline void _20da59010_lenCall(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d812417_BuiltinLenCallExprModel> _33126_m) {
	static__20da544c2_optimize(_33126_m.get()._field_Expr.get()._field_Model);
}



inline void _20da59285_capCall(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d812604_BuiltinCapCallExprModel> _33526_m) {
	static__20da544c2_optimize(_33526_m.get()._field_Expr.get()._field_Model);
}



inline void _20da5950a_cloneCall(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d81178a_BuiltinCloneCallExprModel> _33928_m) {
	static__20da544c2_optimize(_33928_m.get()._field_Expr);
}



inline void _20da59780_deleteCall(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d810503_BuiltinDeleteCallExprModel> _34329_m) {
	static__20da544c2_optimize(_34329_m.get()._field_Dest.get()._field_Model);
	if ((_34329_m.get()._field_Key != nullptr)) {
		static__20da544c2_optimize(_34329_m.get()._field_Key.get()._field_Model);
	};
}



inline void _20da59a05_sizeof(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d81313d_SizeofExprModel> _35025_m) {
	static__20da544c2_optimize(_35025_m.get()._field_Expr);
}



inline void _20da59c7a_alignof(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d81332a_AlignofExprModel> _35426_m) {
	static__20da544c2_optimize(_35426_m.get()._field_Expr);
}



inline void _20da5a000_integratedToStr(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d813704_IntegratedToStrExprModel> _35834_m) {
	static__20da544c2_optimize(_35834_m.get()._field_Expr);
}



inline void _20da5a275_free(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d813acd_FreeExprModel> _36223_m) {
	static__20da544c2_optimize(_36223_m.get()._field_Expr);
}



inline void _20da5a4ea_backendEmit(_20da53eb6_exprOptimizer* _self_, jule::Ptr<_20d8138e1_BackendEmitExprModel> _36630_m) {
	_20da557c0_args(&(*_self_), _36630_m.get()._field_Exprs);
}



inline void _20da5a6c6_do(_20da53eb6_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is_ptr<_20cc2c05d_BinopExprModel>()) {
			_case_begin_1c97a5c3b:;
			{
				_20da54a55_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20cc2c05d_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80da0c_UnaryExprModel>()) {
			_case_begin_1c97a6027:;
			{
				_20da54cca_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d80da0c_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80ddd6_StructLitExprModel>()) {
			_case_begin_1c97a608d:;
			{
				_20da55050_structureLit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d80ddd6_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80e0c3_AllocStructLitExprModel>()) {
			_case_begin_1c97a6104:;
			{
				_20da552c5_allocStructure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d80e0c3_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80e2b0_CastingExprModel>()) {
			_case_begin_1c97a617b:;
			{
				_20da5554a_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d80e2b0_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80e49c_FnCallExprModel>()) {
			_case_begin_1c97a6203:;
			{
				_20da55cba_funcCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d80e49c_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80e689_SliceExprModel>()) {
			_case_begin_1c97a627a:;
			{
				_20da56040_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d80e689_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810b0d_ArrayExprModel>()) {
			_case_begin_1c97a6302:;
			{
				_20da562b5_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d810b0d_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80e876_IndexingExprModel>()) {
			_case_begin_1c97a6379:;
			{
				_20da5653a_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d80e876_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80ea63_AnonFnExprModel>()) {
			_case_begin_1c97a6401:;
			{
				_20da567b0_anonFunc(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d80ea63_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80ee3c_MapExprModel>()) {
			_case_begin_1c97a6478:;
			{
				_20da56a35_mapExpr(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d80ee3c_MapExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810129_SlicingExprModel>()) {
			_case_begin_1c97a6500:;
			{
				_20da56caa_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d810129_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810316_TraitSubIdentExprModel>()) {
			_case_begin_1c97a6577:;
			{
				_20da57030_traitSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d810316_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810734_StructSubIdentExprModel>()) {
			_case_begin_1c97a65ee:;
			{
				_20da572a5_structureSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d810734_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810ed7_CommonSubIdentExprModel>()) {
			_case_begin_1c97a6676:;
			{
				_20da5752a_commonSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d810ed7_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8111c4_TupleExprModel>()) {
			_case_begin_1c97a66ed:;
			{
				_20da577a0_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d8111c4_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8113b1_BuiltinOutCallExprModel>()) {
			_case_begin_1c97a6775:;
			{
				_20da57c9a_outCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d8113b1_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81159d_BuiltinOutlnCallExprModel>()) {
			_case_begin_1c97a67ec:;
			{
				_20da58020_outlnCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d81159d_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d811977_BuiltinNewCallExprModel>()) {
			_case_begin_1c97a6874:;
			{
				_20da57a25_newCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d811977_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d811b64_BuiltinPanicCallExprModel>()) {
			_case_begin_1c97a68eb:;
			{
				_20da58295_panicCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d811b64_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d811d51_BuiltinAssertCallExprModel>()) {
			_case_begin_1c97a6973:;
			{
				_20da5851a_assertCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d811d51_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d812e51_BuiltinErrorCallExprModel>()) {
			_case_begin_1c97a69ea:;
			{
				_20da58790_errorCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d812e51_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81203d_BuiltinMakeCallExprModel>()) {
			_case_begin_1c97a6a72:;
			{
				_20da58a15_makeCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d81203d_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81222a_BuiltinAppendCallExprModel>()) {
			_case_begin_1c97a6ae9:;
			{
				_20da58c8a_appendCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d81222a_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d812417_BuiltinLenCallExprModel>()) {
			_case_begin_1c97a6b71:;
			{
				_20da59010_lenCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d812417_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d812604_BuiltinCapCallExprModel>()) {
			_case_begin_1c97a6be8:;
			{
				_20da59285_capCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d812604_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81178a_BuiltinCloneCallExprModel>()) {
			_case_begin_1c97a6c70:;
			{
				_20da5950a_cloneCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d81178a_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810503_BuiltinDeleteCallExprModel>()) {
			_case_begin_1c97a6ce7:;
			{
				_20da59780_deleteCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d810503_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81313d_SizeofExprModel>()) {
			_case_begin_1c97a6d6e:;
			{
				_20da59a05_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d81313d_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81332a_AlignofExprModel>()) {
			_case_begin_1c97a6de6:;
			{
				_20da59c7a_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d81332a_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d813704_IntegratedToStrExprModel>()) {
			_case_begin_1c97a6e6d:;
			{
				_20da5a000_integratedToStr(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d813704_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d813acd_FreeExprModel>()) {
			_case_begin_1c97a6ee5:;
			{
				_20da5a275_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d813acd_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8138e1_BackendEmitExprModel>()) {
			_case_begin_1c97a706c:;
			{
				_20da5a4ea_backendEmit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_20d8138e1_BackendEmitExprModel>());
			}
		}
		_match_end_1c97a5bd6:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20da53eb6_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e12723e4_Optimizer> static__1e1291aea_New(jule::Ptr<_1e1012d55_IR>& _2524_ir) {
	return jule::new_ptr<_1e12723e4_Optimizer>(_1e12723e4_Optimizer{._field_ir=_2524_ir});;
}



inline void _1e12a006a_optimizeGlobal(_1e12723e4_Optimizer* _self_, jule::Ptr<_20d869eb9_Var>& _3138_v) {
	if ((!(_3138_v.get()._field_CppLinked))) {
		static__20da544c2_optimize(_3138_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1e12ce132_optimizeFunction(_1e12723e4_Optimizer* _self_, jule::Ptr<_20d814370_Fn>& _3740_func) {
	if (_3740_func.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _3740_func.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c97be2e8:;
		if (it != expr.end()) {
			jule::Ptr<_20d814749_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_20da4d8ea_scopeOptimizer> _4221_so = static__20da4de17_new(_4121_ins.get()._field_Scope);;
				_20da51d71_optimize(_4221_so.ptr());
			}
			_iter_next_1c97be2e8:;
			++it;
			goto _iter_begin_1c97be2e8;
		}
		_iter_end_1c97be2e8:;
	};
}



inline void _1e12dd916_optimizeStruct(_1e12723e4_Optimizer* _self_, jule::Ptr<_20cba59dc_Struct>& _4738_s) {
	if (_4738_s.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _4738_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c97c07a0:;
		if (it != expr.end()) {
			jule::Ptr<_20cba5db6_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1c97c10ca:;
					if (it != expr.end()) {
						jule::Ptr<_20cba5bc9_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__20da544c2_optimize(_5225_f.get()._field_Default.get()._field_Model);
							};
						}
						_iter_next_1c97c10ca:;
						++it;
						goto _iter_begin_1c97c10ca;
					}
					_iter_end_1c97c10ca:;
				};
				{
					auto &expr = _5121_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1c97c231d:;
					if (it != expr.end()) {
						jule::Ptr<_20d814370_Fn> _5725_m = *it;
						{
							_1e12ce132_optimizeFunction(&(*_self_), _5725_m);
						}
						_iter_next_1c97c231d:;
						++it;
						goto _iter_begin_1c97c231d;
					}
					_iter_end_1c97c231d:;
				};
			}
			_iter_next_1c97c07a0:;
			++it;
			goto _iter_begin_1c97c07a0;
		}
		_iter_end_1c97c07a0:;
	};
}



inline void _1e12e6b1c_optimizeGlobals(_1e12723e4_Optimizer* _self_, jule::Ptr<_20d846ea7_Package>& _6339_p) {
	{
		auto &expr = _6339_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c97c251b:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1c97c3253:;
					if (it != expr.end()) {
						jule::Ptr<_20d869eb9_Var> _6525_v = *it;
						{
							_1e12a006a_optimizeGlobal(&(*_self_), _6525_v);
						}
						_iter_next_1c97c3253:;
						++it;
						goto _iter_begin_1c97c3253;
					}
					_iter_end_1c97c3253:;
				};
			}
			_iter_next_1c97c251b:;
			++it;
			goto _iter_begin_1c97c251b;
		}
		_iter_end_1c97c251b:;
	};
}



inline void _1e1306863_optimizeFunctions(_1e12723e4_Optimizer* _self_, jule::Ptr<_20d846ea7_Package>& _7141_p) {
	{
		auto &expr = _7141_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c97c37b4:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1c97c4551:;
					if (it != expr.end()) {
						jule::Ptr<_20d814370_Fn> _7325_func = *it;
						{
							_1e12ce132_optimizeFunction(&(*_self_), _7325_func);
						}
						_iter_next_1c97c4551:;
						++it;
						goto _iter_begin_1c97c4551;
					}
					_iter_end_1c97c4551:;
				};
			}
			_iter_next_1c97c37b4:;
			++it;
			goto _iter_begin_1c97c37b4;
		}
		_iter_end_1c97c37b4:;
	};
}



inline void _1e13080a1_optimizeStructs(_1e12723e4_Optimizer* _self_, jule::Ptr<_20d846ea7_Package>& _7939_p) {
	{
		auto &expr = _7939_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c97c4ab2:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1c97c584e:;
					if (it != expr.end()) {
						jule::Ptr<_20cba59dc_Struct> _8125_s = *it;
						{
							_1e12dd916_optimizeStruct(&(*_self_), _8125_s);
						}
						_iter_next_1c97c584e:;
						++it;
						goto _iter_begin_1c97c584e;
					}
					_iter_end_1c97c584e:;
				};
			}
			_iter_next_1c97c4ab2:;
			++it;
			goto _iter_begin_1c97c4ab2;
		}
		_iter_end_1c97c4ab2:;
	};
}



inline void _1e12a3612_optimizePackage(_1e12723e4_Optimizer* _self_, jule::Ptr<_20d846ea7_Package>& _8739_p) {
	_1e12e6b1c_optimizeGlobals(&(*_self_), _8739_p);
	_1e1306863_optimizeFunctions(&(*_self_), _8739_p);
	_1e13080a1_optimizeStructs(&(*_self_), _8739_p);
}



inline void _1e12d1e6a_Optimize(_1e12723e4_Optimizer* _self_) {
	_1e1302177_detectEnabled();
	if (_20da5b62d_Deadcode) {
		_1e136a047_EliminateDefines((*_self_)._field_ir);
	};
	if ((_1e1274924_scopeEnabled || _1e1273ca8_exprEnabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_Used;
			auto it = expr.begin();
			_iter_begin_1c97c7664:;
			if (it != expr.end()) {
				jule::Ptr<_20d84404d_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_1e12a3612_optimizePackage(&(*_self_), _10325_u.get()._field_Package);
					};
				}
				_iter_next_1c97c7664:;
				++it;
				goto _iter_begin_1c97c7664;
			}
			_iter_end_1c97c7664:;
		};
		_1e12a3612_optimizePackage(&(*_self_), (*_self_)._field_ir.get()._field_Main);
	};
	if (_20da5b62d_Deadcode) {
		_1e136ece9_EliminateScopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e12723e4_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1e1378eac_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1e137a101_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1e1378eac_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1e1379e14_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1e137b685_LogFlat(_20b1bc016_Log& _1424_l) {
	jule::outln(_1424_l._field_Text);
}



inline void static__1e137b894_LogError(_20b1bc016_Log& _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1925_l._field_Text);
	static__1e1378eac_Reset();
	if ((_1925_l._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1925_l._field_Path);
	};
	if (((_1925_l._field_Row != 0LL) && (_1925_l._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_20d80720e_Itoa(_1925_l._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_20d80720e_Itoa(_1925_l._field_Column));
	};
	if ((_1925_l._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _20b13c849_TrimLeft(_1925_l._field_Line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1925_l._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_20b13c849_TrimLeft(_3621_line,jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _20d80720e_Itoa(_1925_l._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_20b11c7b3_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_20b11c7b3_Repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1925_l._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1925_l._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_20b11c7b3_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1e137a101_Print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1925_l._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1e137baa3_Log(_20b1bc016_Log& _6520_l) {
	{
		auto &_match_expr{ _6520_l._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1c97d7861:;
			{
				static__1e137b685_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1c97d78c7:;
			{
				static__1e137b894_LogError(_6520_l);
			}
		}
		_match_end_1c97d771d:;
	};
}



inline void static__1e137bcb2_PrintLogs(jule::Slice<_20b1bc016_Log>& _7526_logs) {
	{
		auto &expr = _7526_logs;
		auto it = expr.begin();
		_iter_begin_1c97d8840:;
		if (it != expr.end()) {
			_20b1bc016_Log &_7616_l = *it;
			{
				static__1e137baa3_Log(_7616_l);
			}
			_iter_next_1c97d8840:;
			++it;
			goto _iter_begin_1c97d8840;
		}
		_iter_end_1c97d8840:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_20d80720e_Itoa(static_cast<jule::I64>(_7526_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1e137b432_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1e1aa57b5_Unix(_1e1aa540d_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1e1aa7d4a_unixYearToSeconds(_5717_y,_5617_leap);;
	_6817_t+=_1e1aa81d0_unixMonthToSeconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_Hour);
	_6817_t+=(60LLU * (*_self_)._field_Minute);
	_6817_t+=(*_self_)._field_Second;
	return _6817_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e1aa540d_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1e1aa5aa1_Time static__1e1aa5e47_Unix(jule::U64 _9120_sec) {
	return _1e1aa5aa1_Time{._field_sec=_9120_sec};;
}



inline _1e1aa5aa1_Time static__1e1aa6145_Now(void) {
	return static__1e1aa5e47_Unix(static_cast<jule::U64>(_1e1aa7a3c_unix()));;
}



inline jule::U64 _1e1aa6596_Unix(_1e1aa5aa1_Time* _self_) {
	return (*_self_)._field_sec;;
}



inline jule::U64 _1e1aa680a_Day(_1e1aa5aa1_Time* _self_) {
	return _1e1aa7784_Abs(&(*_self_))._field_Day;;
}



inline jule::U64 _1e1aa6a6e_Month(_1e1aa5aa1_Time* _self_) {
	return _1e1aa7784_Abs(&(*_self_))._field_Month;;
}



inline jule::U64 _1e1aa6cd3_Year(_1e1aa5aa1_Time* _self_) {
	return _1e1aa7784_Abs(&(*_self_))._field_Year;;
}



inline jule::U64 _1e1aa7047_Second(_1e1aa5aa1_Time* _self_) {
	return _1e1aa7784_Abs(&(*_self_))._field_Second;;
}



inline jule::U64 _1e1aa72ab_Minute(_1e1aa5aa1_Time* _self_) {
	return _1e1aa7784_Abs(&(*_self_))._field_Minute;;
}



inline jule::U64 _1e1aa7520_Hour(_1e1aa5aa1_Time* _self_) {
	return _1e1aa7784_Abs(&(*_self_))._field_Hour;;
}



inline _1e1aa540d_AbsTime _1e1aa7784_Abs(_1e1aa5aa1_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1e1aa4990_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1e1aa4990_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1c981d2e2:;
	}
	_iter_end_1c981d2e2:;;
	_1e1aa540d_AbsTime _17417_t = _1e1aa540d_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e1aa5aa1_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e1a018ba_scopeCoder> static__1e1a01ed6_new(jule::Ptr<_1ba6a5e14_ObjectCoder>& _6124_oc) {
	return jule::new_ptr<_1e1a018ba_scopeCoder>(_1e1a018ba_scopeCoder{._field_oc=_6124_oc});;
}



inline void _1e1a0225b_rangeIndexIter(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d8274e8_RangeIter>& _6739_it) {
	jule::Str _6813_begin = static__1e1a1de37_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6739_it)));;
	jule::Str _6913_next = static__1e1a1e476_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6739_it)));;
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e1a85e8d_addIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_20da5b320_Copy && _1e1a06e20_isCopyOptimizable(_6739_it.get()._field_Expr))) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1e1a1537e_model(_self_.get()._field_oc.get()._field_ec, _6739_it.get()._field_Expr.get()._field_Model);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, _6813_begin);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1e1a85e8d_addIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	if ((_6739_it.get()._field_KeyA != nullptr)) {
		_1ba6a7de4_varInitExpr(_self_.get()._field_oc, _6739_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e1a44358_indent(_self_.get()._field_oc);
	};
	if ((_6739_it.get()._field_KeyB != nullptr)) {
		if (_20da5b320_Copy) {
			_6739_it.get()._field_KeyB.get()._field_Reference=_1e1a072a5_isIterCopyOptimizable(_6739_it.get()._field_Expr,_6739_it.get()._field_KeyB);
		};
		_1ba6a7de4_varInitExpr(_self_.get()._field_oc, _6739_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e1a44358_indent(_self_.get()._field_oc);
	};
	_1e1a06848_scope(_self_, _6739_it.get()._field_Scope);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, _6913_next);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1e1a44358_indent(_self_.get()._field_oc);
	if ((_6739_it.get()._field_KeyA != nullptr)) {
		_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1db90_var(_6739_it.get()._field_KeyA));
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1e1a44358_indent(_self_.get()._field_oc);
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e1a533ab_write(_self_.get()._field_oc, _6813_begin);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e1a23e70_doneIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1e1ce_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6739_it))));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e1a23e70_doneIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e1a024d1_rangeHashmapIter(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d8274e8_RangeIter>& _13541_it) {
	jule::Str _13613_begin = static__1e1a1de37_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_13541_it)));;
	jule::Str _13713_next = static__1e1a1e476_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_13541_it)));;
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e1a85e8d_addIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_20da5b320_Copy && _1e1a06e20_isCopyOptimizable(_13541_it.get()._field_Expr))) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1e1a1537e_model(_self_.get()._field_oc.get()._field_ec, _13541_it.get()._field_Expr.get()._field_Model);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, _13613_begin);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1e1a85e8d_addIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	if ((_13541_it.get()._field_KeyA != nullptr)) {
		if (_20da5b320_Copy) {
			_13541_it.get()._field_KeyA.get()._field_Reference=_1e1a072a5_isIterCopyOptimizable(_13541_it.get()._field_Expr,_13541_it.get()._field_KeyA);
		};
		_1ba6a7de4_varInitExpr(_self_.get()._field_oc, _13541_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e1a44358_indent(_self_.get()._field_oc);
	};
	if ((_13541_it.get()._field_KeyB != nullptr)) {
		if (_20da5b320_Copy) {
			_13541_it.get()._field_KeyB.get()._field_Reference=_1e1a072a5_isIterCopyOptimizable(_13541_it.get()._field_Expr,_13541_it.get()._field_KeyB);
		};
		_1ba6a7de4_varInitExpr(_self_.get()._field_oc, _13541_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e1a44358_indent(_self_.get()._field_oc);
	};
	_1e1a06848_scope(_self_, _13541_it.get()._field_Scope);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, _13713_next);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e1a533ab_write(_self_.get()._field_oc, _13613_begin);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e1a23e70_doneIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1e1ce_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_13541_it))));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e1a23e70_doneIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e1a02756_ifCase(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d825c44_If> _20130_i) {
	if ((_20130_i.get()._field_Expr != nullptr)) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _20130_i.get()._field_Expr);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1e1a06848_scope(_self_, _20130_i.get()._field_Scope);
}



inline void _1e1a029cb_conditional(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d8263a4_Conditional> _21035_c) {
	jule::Bool _21117_writed = false;;
	{
		auto &expr = _21035_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1c98ca24a:;
		if (it != expr.end()) {
			jule::Ptr<_20d825c44_If> _21221_elif = *it;
			{
				if ((_21221_elif == nullptr)) {
					goto _iter_next_1c98ca24a;
				};
				if (_21117_writed) {
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_21117_writed=true;
				_1e1a02756_ifCase(_self_, _21221_elif);
			}
			_iter_next_1c98ca24a:;
			++it;
			goto _iter_begin_1c98ca24a;
		}
		_iter_end_1c98ca24a:;
	};
	if ((_21035_c.get()._field_Default != nullptr)) {
		if (_21117_writed) {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1e1a06848_scope(_self_, _21035_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1e1a02c51_infIter(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d826690_InfIter> _23031_it) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1e1a85e8d_addIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a06848_scope(_self_, _23031_it.get()._field_Scope);
	_1e1a23e70_doneIndent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1e476_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23031_it))));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1e1ce_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23031_it))));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1e1a02ec6_whileIter(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d826b13_WhileIter> _24733_it) {
	if (((_24733_it.get()._field_Expr != nullptr) && (_24733_it.get()._field_Next == nullptr))) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _24733_it.get()._field_Expr);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24733_it.get()._field_Expr != nullptr)) {
			_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _24733_it.get()._field_Expr);
		};
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24733_it.get()._field_Next != nullptr)) {
			_1e1a0634d_st(_self_, _24733_it.get()._field_Next);
		};
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1e1a85e8d_addIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a06848_scope(_self_, _24733_it.get()._field_Scope);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e1a23e70_doneIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1e476_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24733_it))));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1e1ce_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24733_it))));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1e1a0324b_rangeIter(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d8274e8_RangeIter> _28033_it) {
	{
		
		if ((_20d8e6991_Slc(_28033_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c98dac83:;
			{
				_1e1a0225b_rangeIndexIter(_self_, _28033_it);
			}
		}
		else if ((_20d8e672c_Arr(_28033_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c98da821:;
			{
				_1e1a0225b_rangeIndexIter(_self_, _28033_it);
			}
		}
		else if ((_20d8e7442_Map(_28033_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c98da4e1:;
			{
				_1e1a024d1_rangeHashmapIter(_self_, _28033_it);
			}
		}
		else {
			_case_begin_1c98da47a:;
			{
				_1e1a0225b_rangeIndexIter(_self_, _28033_it);
			}
		}
		_match_end_1c98da3ae:;
	};
}



inline void _1e1a034c1_cont(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d8278e4_ContSt> _29324_c) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1e476_iterNext(_29324_c.get()._field_It));
}



inline void _1e1a03746_label(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d828087_Label> _29825_l) {
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1e71d_label(_29825_l.get()._field_Ident));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1e1a039bb_gotoSt(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d828373_GotoSt> _30326_gt) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1e71d_label(_30326_gt.get()._field_Ident));
}



inline void _1e1a03c41_postfix(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d82872a_Postfix> _30831_p) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _30831_p.get()._field_Expr);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1e1a533ab_write(_self_.get()._field_oc, _30831_p.get()._field_Op);
}



inline void _1e1a03eb6_assign(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d828b9d_Assign> _31530_a) {
	_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _31530_a.get()._field_L.get()._field_Model);
	_1e1a533ab_write(_self_.get()._field_oc, _31530_a.get()._field_Op.get()._field_Kind);
	_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _31530_a.get()._field_R.get()._field_Model);
}



inline void _1e1a0423b_mapLookupAssign(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d829055_MultiAssign>& _32140_a) {
	jule::Ptr<_20d80e876_IndexingExprModel> _32217_iem = _32140_a.get()._field_R.operator jule::Ptr<_20d80e876_IndexingExprModel>();;
	_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _32217_iem.get()._field_Expr.get()._field_Model);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _32217_iem.get()._field_Index.get()._field_Model);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if ((_32140_a.get()._field_L[0LL] != nullptr)) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _32140_a.get()._field_L[0LL].get()._field_Model);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if ((_32140_a.get()._field_L[1LL] != nullptr)) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _32140_a.get()._field_L[1LL].get()._field_Model);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a044b1_multiAssignTup(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d829055_MultiAssign>& _34439_a) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1e1a85e8d_addIndent(_self_.get()._field_oc);
	jule::Ptr<_20d8111c4_TupleExprModel> _34817_tup = _34439_a.get()._field_R.operator jule::Ptr<_20d8111c4_TupleExprModel>();;
	{
		auto &expr = _34817_tup.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1c98eb3c0:;
		if (it != expr.end()) {
			jule::I64 _35014_i = it - expr.begin();
			jule::Ptr<_20d8b2891_Data> _35021_r = *it;
			{
				_1e1a44358_indent(_self_.get()._field_oc);
				jule::Ptr<_20d8b2891_Data> _35221_l = _34439_a.get()._field_L[_35014_i];;
				if ((_35221_l != nullptr)) {
					_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_35221_l.get()._field_Kind));
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1c199_toOut(_1e1a01348_assignArgName,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_35014_i))));
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _35021_r.get()._field_Model);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1c98eb3c0:;
			++it;
			_35014_i++;
			goto _iter_begin_1c98eb3c0;
		}
		_iter_end_1c98eb3c0:;
	};
	{
		auto &expr = _34439_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1c9900aab:;
		if (it != expr.end()) {
			jule::I64 _36314_i = it - expr.begin();
			jule::Ptr<_20d8b2891_Data> _36321_l = *it;
			{
				if ((_36321_l != nullptr)) {
					_1e1a44358_indent(_self_.get()._field_oc);
					_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _36321_l.get()._field_Model);
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1c199_toOut(_1e1a01348_assignArgName,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_36314_i))));
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1c9900aab:;
			++it;
			_36314_i++;
			goto _iter_begin_1c9900aab;
		}
		_iter_end_1c9900aab:;
	};
	_1e1a23e70_doneIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1e1a04736_multiAssignFn(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d829055_MultiAssign>& _37838_a) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1e1a85e8d_addIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	jule::Ptr<_20d80e49c_FnCallExprModel> _38317_f = _37838_a.get()._field_R.operator jule::Ptr<_20d80e49c_FnCallExprModel>();;
	static__1ba6b42c9_codeMut1(_self_.get()._field_oc.get()._field_Obj,_38317_f.get()._field_Func.get()._field_Result);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _37838_a.get()._field_R);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto &expr = _37838_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1c9906ead:;
		if (it != expr.end()) {
			jule::I64 _38914_i = it - expr.begin();
			jule::Ptr<_20d8b2891_Data> _38921_l = *it;
			{
				if ((_38921_l != nullptr)) {
					_1e1a44358_indent(_self_.get()._field_oc);
					_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _38921_l.get()._field_Model);
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_1e1a533ab_write(_self_.get()._field_oc, _20d80720e_Itoa(_38914_i));
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1c9906ead:;
			++it;
			_38914_i++;
			goto _iter_begin_1c9906ead;
		}
		_iter_end_1c9906ead:;
	};
	_1e1a23e70_doneIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1e1a049ab_multiAssign(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d829055_MultiAssign> _40435_a) {
	{
		auto &_match_expr{ _40435_a.get()._field_R };
		
		if (_match_expr.type_is_ptr<_20d80e876_IndexingExprModel>()) {
			_case_begin_1c990a885:;
			{
				_1e1a0423b_mapLookupAssign(_self_, _40435_a);
				return;;
			}
		}
		_match_end_1c990a676:;
	};
	{
		auto &_match_expr{ _40435_a.get()._field_R };
		
		if (_match_expr.type_is_ptr<_20d8111c4_TupleExprModel>()) {
			_case_begin_1c990a5aa:;
			{
				_1e1a044b1_multiAssignTup(_self_, _40435_a);
			}
		}
		else if (_match_expr.type_is_ptr<_20d80e49c_FnCallExprModel>()) {
			_case_begin_1c990b732:;
			{
				_1e1a04736_multiAssignFn(_self_, _40435_a);
			}
		}
		else {
			_case_begin_1c990b39c:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:418:13"));;
			}
		}
		_match_end_1c990b347:;
	};
}



inline jule::Fn<void(void)> _1e1a04cb9_matchExpr(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d829594_Match> _42233_m) {
	if ((!(_20d8b3254_IsConst(_42233_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_20d80bb09_IsBool(_42233_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_20d80a91b_ReadBool(_42233_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1e1a1537e_model(_self_.get()._field_oc.get()._field_ec, _42233_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1e1a050d8_case(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d829594_Match> _43228_m, jule::Ptr<_20d82a0de_Case> _43243_c) {
	if (((_43243_c.get()._field_Exprs.len() != 0LL) && (!(_20d829aa0_IsGenericTypeMatch(_43228_m.ptr()))))) {
		if (((_43228_m.get()._field_Cases.len() > 0LL) && (_43228_m.get()._field_Cases[0LL] == _43243_c))) {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _43243_c.get()._field_Exprs;
			auto it = expr.begin();
			_iter_begin_1c9911d20:;
			if (it != expr.end()) {
				jule::I64 _43918_i = it - expr.begin();
				jule::Ptr<_20d8b2891_Data> _43925_expr = *it;
				{
					{
						
						if ((!(_43228_m.get()._field_TypeMatch))) {
							_case_begin_1c991444e:;
							{
								jule::Fn<void(void)> _44225_caseExpr = _1e1a04cb9_matchExpr(_self_, _43228_m);;
								if (_20d8b3562_GoodOperand(_43228_m.get()._field_Expr.ptr(), _43925_expr)) {
									if ((_44225_caseExpr != nullptr)) {
										_44225_caseExpr();
										_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _43925_expr.get()._field_Model);
								} else {
									_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _43925_expr.get()._field_Model);
									if ((_44225_caseExpr != nullptr)) {
										_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_44225_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1c9913085:;
							{
								_1e1a533ab_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_20d8e3680_TypeKind> _46029_tk = _43925_expr.get()._field_Model.operator jule::Ptr<_20d8e3680_TypeKind>();;
								if (((_20d8e71cd_Trait(_43228_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr) && (_20d8e5c7b_Sptr(_43925_expr.get()._field_Kind.ptr()) != nullptr))) {
									_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".type_is_ptr<", 13));
									_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_20d8e5c7b_Sptr(_46029_tk.ptr()).get()._field_Elem));
								} else {
									_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
									_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_46029_tk));
								};
								_1e1a533ab_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_1c9912eb9:;
					};
					if (((_43243_c.get()._field_Exprs.len() - _43918_i) > 1LL)) {
						_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1c9911d20:;
				++it;
				_43918_i++;
				goto _iter_begin_1c9911d20;
			}
			_iter_end_1c9911d20:;
		};
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_43228_m.get()._field_Default == _43243_c) && (_43228_m.get()._field_Cases.len() != 0LL))) {
		_1e1a44358_indent(_self_.get()._field_oc);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1e1a85e8d_addIndent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1ec5c_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43243_c))));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_43243_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1e1a44358_indent(_self_.get()._field_oc);
		_1e1a06848_scope(_self_, _43243_c.get()._field_Scope);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1e1a23e70_doneIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e1a0535d_matchSt(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d829594_Match> _49931_m) {
	if (((_49931_m.get()._field_Cases.len() == 0LL) && (_49931_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _50413_genericTypeMatch = _20d829aa0_IsGenericTypeMatch(_49931_m.ptr());;
	if ((_50413_genericTypeMatch && ((_49931_m.get()._field_Default == nullptr) || (_49931_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e1a85e8d_addIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	if (((!(_50413_genericTypeMatch)) && (!(_20d8b3254_IsConst(_49931_m.get()._field_Expr.ptr()))))) {
		if ((_20da5b320_Copy && _1e1a06e20_isCopyOptimizable(_49931_m.get()._field_Expr))) {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _49931_m.get()._field_Expr.get()._field_Model);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1e1a44358_indent(_self_.get()._field_oc);
	};
	if ((_49931_m.get()._field_Cases.len() > 0LL)) {
		{
			auto &expr = _49931_m.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1c99261b9:;
			if (it != expr.end()) {
				jule::Ptr<_20d82a0de_Case> _52825_c = *it;
				{
					if ((_52825_c == nullptr)) {
						goto _iter_next_1c99261b9;
					};
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1e1a44358_indent(_self_.get()._field_oc);
					_1e1a050d8_case(_self_, _49931_m,_52825_c);
				}
				_iter_next_1c99261b9:;
				++it;
				goto _iter_begin_1c99261b9;
			}
			_iter_end_1c99261b9:;
		};
	};
	if ((_49931_m.get()._field_Default != nullptr)) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e1a050d8_case(_self_, _49931_m,_49931_m.get()._field_Default);
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1e9b5_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_49931_m))));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e1a23e70_doneIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e1a055d3_fallSt(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d82a694_FallSt> _55526_f) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1ec5c_caseBegin(_55526_f.get()._field_DestCase));
}



inline void _1e1a05858_breakSt(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d827c9b_BreakSt> _56027_b) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_56027_b.get()._field_It != 0LLU)) {
		_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1e1ce_iterEnd(_56027_b.get()._field_It));
	} else {
		_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1e9b5_matchEnd(_56027_b.get()._field_Mtch));
	};
}



inline void _1e1a05acd_setResult(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d82aa18_RetSt> _56933_r) {
	if ((_56933_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _56933_r.get()._field_Expr);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_1e1a44358_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_20d8b2891_Data>> _57717_datas = _56933_r.get()._field_Expr.operator jule::Ptr<_20d8111c4_TupleExprModel>().get()._field_Datas;;
	{
		auto &expr = _57717_datas;
		auto it = expr.begin();
		_iter_begin_1c992d699:;
		if (it != expr.end()) {
			jule::I64 _57813_i = it - expr.begin();
			jule::Ptr<_20d8b2891_Data> _57816_data = *it;
			{
				jule::Any _57921_model = _57816_data.get()._field_Model;;
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_1e1a533ab_write(_self_.get()._field_oc, _20d80720e_Itoa(_57813_i));
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _57921_model);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1e1a44358_indent(_self_.get()._field_oc);
			}
			_iter_next_1c992d699:;
			++it;
			_57813_i++;
			goto _iter_begin_1c992d699;
		}
		_iter_end_1c992d699:;
	};
}



inline void _1e1a05d53_retSt(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d82aa18_RetSt> _58929_r) {
	if (_20cbeec56_IsVoid(_58929_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_58929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_58929_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_58929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_58929_r.get()._field_Func.get()._field_Result));
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _58929_r.get()._field_Expr);
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _58929_r.get()._field_Expr);
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_58929_r.get()._field_Expr != nullptr)) {
		_1e1a05acd_setResult(_self_, _58929_r);
	};
	if (_58929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		static__1ba6b42c9_codeMut1(_self_.get()._field_oc.get()._field_Obj,_58929_r.get()._field_Func.get()._field_Result);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _1e1a060c8_var(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d869eb9_Var> _62527_v) {
	if ((!(_62527_v.get()._field_Constant))) {
		_1ba6a8026_var(_self_.get()._field_oc, _62527_v);
	};
}



inline void _1e1a0634d_st(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Any _63226_st) {
	if ((_63226_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _63226_st };
		
		if (_match_expr.type_is_ptr<_20d825848_Scope>()) {
			_case_begin_1c993d247:;
			{
				_1e1a06848_scope(_self_, _63226_st.operator jule::Ptr<_20d825848_Scope>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d869eb9_Var>()) {
			_case_begin_1c993cde5:;
			{
				_1e1a060c8_var(_self_, _63226_st.operator jule::Ptr<_20d869eb9_Var>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8b2891_Data>()) {
			_case_begin_1c993d841:;
			{
				_1e1a15604_expr(_self_.get()._field_oc.get()._field_ec, _63226_st.operator jule::Ptr<_20d8b2891_Data>().get()._field_Model);
			}
		}
		else if (_match_expr.type_is_ptr<_20d8263a4_Conditional>()) {
			_case_begin_1c993d8a7:;
			{
				_1e1a029cb_conditional(_self_, _63226_st.operator jule::Ptr<_20d8263a4_Conditional>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d826690_InfIter>()) {
			_case_begin_1c993d91d:;
			{
				_1e1a02c51_infIter(_self_, _63226_st.operator jule::Ptr<_20d826690_InfIter>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d826b13_WhileIter>()) {
			_case_begin_1c993d984:;
			{
				_1e1a02ec6_whileIter(_self_, _63226_st.operator jule::Ptr<_20d826b13_WhileIter>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8274e8_RangeIter>()) {
			_case_begin_1c993d9ea:;
			{
				_1e1a0324b_rangeIter(_self_, _63226_st.operator jule::Ptr<_20d8274e8_RangeIter>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8278e4_ContSt>()) {
			_case_begin_1c993da61:;
			{
				_1e1a034c1_cont(_self_, _63226_st.operator jule::Ptr<_20d8278e4_ContSt>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d828087_Label>()) {
			_case_begin_1c993dac7:;
			{
				_1e1a03746_label(_self_, _63226_st.operator jule::Ptr<_20d828087_Label>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d828373_GotoSt>()) {
			_case_begin_1c993db3d:;
			{
				_1e1a039bb_gotoSt(_self_, _63226_st.operator jule::Ptr<_20d828373_GotoSt>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d82872a_Postfix>()) {
			_case_begin_1c993dbb5:;
			{
				_1e1a03c41_postfix(_self_, _63226_st.operator jule::Ptr<_20d82872a_Postfix>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d828b9d_Assign>()) {
			_case_begin_1c993dc3c:;
			{
				_1e1a03eb6_assign(_self_, _63226_st.operator jule::Ptr<_20d828b9d_Assign>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d829055_MultiAssign>()) {
			_case_begin_1c993dcb4:;
			{
				_1e1a049ab_multiAssign(_self_, _63226_st.operator jule::Ptr<_20d829055_MultiAssign>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d829594_Match>()) {
			_case_begin_1c993dd3b:;
			{
				_1e1a0535d_matchSt(_self_, _63226_st.operator jule::Ptr<_20d829594_Match>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d82a694_FallSt>()) {
			_case_begin_1c993ddb3:;
			{
				_1e1a055d3_fallSt(_self_, _63226_st.operator jule::Ptr<_20d82a694_FallSt>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d827c9b_BreakSt>()) {
			_case_begin_1c993de3a:;
			{
				_1e1a05858_breakSt(_self_, _63226_st.operator jule::Ptr<_20d827c9b_BreakSt>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d82aa18_RetSt>()) {
			_case_begin_1c993deb2:;
			{
				_1e1a05d53_retSt(_self_, _63226_st.operator jule::Ptr<_20d82aa18_RetSt>());
			}
		}
		else if (_match_expr.type_is_ptr<_20da4bcd3_PushToSliceExprModel>()) {
			_case_begin_1c993e039:;
			{
				_1e1a13316_pushToSlice(_self_.get()._field_oc.get()._field_ec, _63226_st.operator jule::Ptr<_20da4bcd3_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20da4c399_MutSlicingExprModel>()) {
			_case_begin_1c993e0b1:;
			{
				_1e1a14d84_mutSlicing(_self_.get()._field_oc.get()._field_ec, _63226_st.operator jule::Ptr<_20da4c399_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20da4c740_StrInsertBeginExprModel>()) {
			_case_begin_1c993e138:;
			{
				_1e1a15109_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _63226_st.operator jule::Ptr<_20da4c740_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1c993cbc5:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1c993cb70:;
	};
}



inline void _1e1a065c3_scopeStmts(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d825848_Scope>& _68235_s) {
	{
		auto &expr = _68235_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1c9948dbd:;
		if (it != expr.end()) {
			jule::Any _68321_st = *it;
			{
				_1e1a44358_indent(_self_.get()._field_oc);
				_1e1a0634d_st(_self_, _68321_st);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1c9948dbd:;
			++it;
			goto _iter_begin_1c9948dbd;
		}
		_iter_end_1c9948dbd:;
	};
}



inline void _1e1a06848_scope(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d825848_Scope> _69129_s) {
	_1e1a85e8d_addIndent(_self_.get()._field_oc);
	if (_69129_s.get()._field_Deferred) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e1a065c3_scopeStmts(_self_, _69129_s);
	_1e1a23e70_doneIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_69129_s.get()._field_Deferred) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1e1a06abd_funcScope(jule::Ptr<_1e1a018ba_scopeCoder> _self_, jule::Ptr<_20d814749_FnIns> _70733_f) {
	if ((_70733_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e1a85e8d_addIndent(_self_.get()._field_oc);
	if ((!(_20cbeec56_IsVoid(_70733_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_20d8ed14b_Tuple> _71421_tup = _20d8e76a6_Tup(_70733_f.get()._field_Result.ptr());;
		if ((_71421_tup != nullptr)) {
			_1e1a44358_indent(_self_.get()._field_oc);
			static__1ba6b3c68_tup(_self_.get()._field_oc.get()._field_Obj,_71421_tup);
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto &expr = _71421_tup.get()._field_Types;
				auto it = expr.begin();
				_iter_begin_1c9955c65:;
				if (it != expr.end()) {
					jule::I64 _71922_i = it - expr.begin();
					jule::Ptr<_20d8e3680_TypeKind> _71929_t = *it;
					{
						if (_1ba6b6584_shouldInitialized(_71929_t)) {
							_1e1a44358_indent(_self_.get()._field_oc);
							_1e1a533ab_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_1e1a533ab_write(_self_.get()._field_oc, _20d80720e_Itoa(_71922_i));
							_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_1e1a15aee_initExpr(_self_.get()._field_oc.get()._field_ec, _71929_t);
							_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_1c9955c65:;
					++it;
					_71922_i++;
					goto _iter_begin_1c9955c65;
				}
				_iter_end_1c9955c65:;
			};
		} else if ((_70733_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_1e1a44358_indent(_self_.get()._field_oc);
			_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_70733_f.get()._field_Result));
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_1ba6b6584_shouldInitialized(_70733_f.get()._field_Result)) {
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1e1a15aee_initExpr(_self_.get()._field_oc.get()._field_ec, _70733_f.get()._field_Result);
			};
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_1e1a065c3_scopeStmts(_self_, _70733_f.get()._field_Scope);
	if ((_70733_f.get()._field_Decl.get()._field_Exceptional && _20cbeec56_IsVoid(_70733_f.get()._field_Decl.ptr()))) {
		_1e1a44358_indent(_self_.get()._field_oc);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_1e1a23e70_doneIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1e1a018ba_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e1a09560_exprCoder> static__1e1a0995b_new(jule::Ptr<_1ba6a5e14_ObjectCoder>& _10324_oc) {
	return jule::new_ptr<_1e1a09560_exprCoder>(_1e1a09560_exprCoder{._field_oc=_10324_oc});;
}



inline void _1e1a09bd1_string(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20cc572ec_Const>& _10927_c) {
	jule::Str _11013_content = _20d80aa4d_ReadStr(_10927_c.ptr());;
	if ((_11013_content.len() == 0LL)) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _11513_bytes = static_cast<jule::Slice<jule::U8>>(_11013_content);;
	jule::Str _11613_len = _20d8070cc_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_11513_bytes.len())),10LL);;
	jule::Str _11713_lit = _1e1a16803_cstrLit(_11513_bytes);;
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e1a533ab_write(_self_.get()._field_oc, _11713_lit);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1e1a533ab_write(_self_.get()._field_oc, _11613_len);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a09e56_boolean(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20cc572ec_Const>& _12628_c) {
	if (_20d80a91b_ReadBool(_12628_c.ptr())) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1e1a0a132_nilLit(jule::Ptr<_1e1a09560_exprCoder> _self_) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1e1a0a440_ftoaSpecialCases(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::F64& _13837_x) {
	{
		
		if (_20d7c4e02_IsNaN(_13837_x)) {
			_case_begin_1c9977924:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_20d7c5166_IsInf(_13837_x,1LL)) {
			_case_begin_1c997724d:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_20d7c5166_IsInf(_13837_x,-1LL)) {
			_case_begin_1c99772b4:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1c99771d7:;
			{
				return false;;
			}
		}
		_match_end_1c997711b:;
	};
	return true;;
}



inline void _1e1a0a6b5_float32(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20cc572ec_Const>& _15228_c) {
	jule::F64 _15313_x = _20d80b026_AsF64(_15228_c.ptr());;
	if (_1e1a0a440_ftoaSpecialCases(_self_, _15313_x)) {
		return;;
	};
	{
		
		if ((_15313_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1c997a2a6:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15313_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1c9979edc:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1c9979daa:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, _1e1a16b11_ftoa(_15313_x,32LL));
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1c9979d55:;
	};
}



inline void _1e1a0a93a_float64(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20cc572ec_Const>& _17128_c) {
	jule::F64 _17213_x = _20d80b026_AsF64(_17128_c.ptr());;
	if (_1e1a0a440_ftoaSpecialCases(_self_, _17213_x)) {
		return;;
	};
	{
		
		if ((_17213_x == jule::MAX_F64)) {
			_case_begin_1c997d265:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17213_x == jule::MIN_F64)) {
			_case_begin_1c997d96e:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1c997cd69:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, _1e1a16b11_ftoa(_17213_x,64LL));
			}
		}
		_match_end_1c997cd14:;
	};
}



inline void _1e1a0abb0_constant(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20cc572ec_Const> _18932_c) {
	{
		
		if (_20d80bc3b_IsStr(_18932_c.ptr())) {
			_case_begin_1c9980014:;
			{
				_1e1a09bd1_string(_self_, _18932_c);
			}
		}
		else if (_20d80bb09_IsBool(_18932_c.ptr())) {
			_case_begin_1c998007a:;
			{
				_1e1a09e56_boolean(_self_, _18932_c);
			}
		}
		else if (_20d80bd6d_IsF64(_18932_c.ptr())) {
			_case_begin_1c99800e1:;
			{
				{
					
					if ((_18932_c.get()._field_Kind == jule::Str("f32", 3))) {
						_case_begin_1c9982731:;
						{
							_1e1a0a6b5_float32(_self_, _18932_c);
						}
					}
					else {
						_case_begin_1c9981e28:;
						{
							_1e1a0a93a_float64(_self_, _18932_c);
						}
					}
					_match_end_1c9981d5c:;
				};
			}
		}
		else if (_20d80b895_IsI64(_18932_c.ptr())) {
			_case_begin_1c9980157:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, _1e1a16da8_itoa(static_cast<jule::I64>(_20d80a6a7_ReadI64(_18932_c.ptr()))));
			}
		}
		else if (_20d80b9c7_IsU64(_18932_c.ptr())) {
			_case_begin_1c99809a4:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, _1e1a17150_utoa(static_cast<jule::U64>(_20d80a7d9_ReadU64(_18932_c.ptr()))));
			}
		}
		else if (_20d80bea0_IsNil(_18932_c.ptr())) {
			_case_begin_1c9980a1a:;
			{
				_1e1a0a132_nilLit(_self_);
			}
		}
		else {
			_case_begin_1c997ee9d:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1c997edd2:;
	};
}



inline void _1e1a0b078_divByZeroBinary(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20b4e5581_Token>& _21336_op, jule::Ptr<_20cbed66c_OperandExprModel>& _21353_l, jule::Ptr<_20cbed66c_OperandExprModel>& _21380_r) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _21336_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1c9985635:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1c998569b:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1c9985569:;
	};
	if ((!(_22eb61536_Production))) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1e1a8709e_locInfo(_self_.get()._field_oc, _21336_op);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1e1a15604_expr(_self_, _21353_l.get()._field_Model);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1e1a15604_expr(_self_, _21380_r.get()._field_Model);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a0b2ed_unsafeBinary(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20cc2c05d_BinopExprModel> _23536_m) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e1a1537e_model(_self_, _23536_m.get()._field_Left.get()._field_Model);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1e1a533ab_write(_self_.get()._field_oc, _23536_m.get()._field_Op.get()._field_Kind);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1e1a1537e_model(_self_, _23536_m.get()._field_Right.get()._field_Model);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a0b573_binary(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20cc2c05d_BinopExprModel> _24530_m) {
	{
		auto &_match_expr{ _24530_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1c998bcce:;
			{
				if ((_20d8e6e69_Struct(_24530_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1e1a0b078_divByZeroBinary(_self_, _24530_m.get()._field_Op,_24530_m.get()._field_Left,_24530_m.get()._field_Right);
					return;;
				};
			}
		}
		_match_end_1c998bc46:;
	};
	_1e1a0b2ed_unsafeBinary(_self_, _24530_m);
}



inline void _1e1a0b7e8_var(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d869eb9_Var> _25727_m) {
	if (_25727_m.get()._field_CppLinked) {
		jule::Ptr<_20cb511e6_Directive> _25917_d = _1ba6b5e57_findDirective(_25727_m.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_25917_d != nullptr)) {
			_1e1a533ab_write(_self_.get()._field_oc, _1ba6a9951_concatAllParts(_25917_d.get()._field_Args));
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1db90_var(_25727_m));
}



inline void _1e1a0ba6d_structureIns(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20cba5db6_StructIns> _26836_m) {
	_1e1a533ab_write(_self_.get()._field_oc, static__1ba6adbca_structureIns(_26836_m));
}



inline void _1e1a0bce3_unary(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d80da0c_UnaryExprModel> _27229_m) {
	{
		auto &_match_expr{ _27229_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1c999182d:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1e1a15604_expr(_self_, _27229_m.get()._field_Expr.get()._field_Model);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c99918a5:;
			{
				if ((_22eb61536_Production || (_20d8e5c7b_Sptr(_27229_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1c9991784;
				};
				_1e1a15604_expr(_self_, _27229_m.get()._field_Expr.get()._field_Model);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1e1a8709e_locInfo(_self_.get()._field_oc, _27229_m.get()._field_Op);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1c9991784:;
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e1a533ab_write(_self_.get()._field_oc, _27229_m.get()._field_Op.get()._field_Kind);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e1a15604_expr(_self_, _27229_m.get()._field_Expr.get()._field_Model);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1e1a0c068_structureLit(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d80ddd6_StructLitExprModel> _29636_m) {
	if (_29636_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1d651_structureIns(_29636_m.get()._field_Strct));
	if (_29636_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_29636_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _29636_m.get()._field_Strct.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1c9998d52:;
			if (it != expr.end()) {
				jule::I64 _30917_i = it - expr.begin();
				jule::Ptr<_20cba5bc9_FieldIns> _30920_f = *it;
				{
					{
						auto &expr = _29636_m.get()._field_Args;
						auto it = expr.begin();
						_iter_begin_1c9999a78:;
						if (it != expr.end()) {
							jule::Ptr<_20d80dbe9_StructArgExprModel> _31029_arg = *it;
							{
								if ((_31029_arg.get()._field_Field == _30920_f)) {
									_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1d8e8_field(_31029_arg.get()._field_Field.get()._field_Decl));
									_1e1a533ab_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1e1a15604_expr(_self_, _31029_arg.get()._field_Expr);
									if (((_29636_m.get()._field_Strct.get()._field_Fields.len() - _30917_i) > 1LL)) {
										_1e1a533ab_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1c9998d52;
								};
							}
							_iter_next_1c9999a78:;
							++it;
							goto _iter_begin_1c9999a78;
						}
						_iter_end_1c9999a78:;
					};
				}
				_iter_next_1c9998d52:;
				++it;
				_30917_i++;
				goto _iter_begin_1c9998d52;
			}
			_iter_end_1c9998d52:;
		};
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e1a0c2dd_allocStructure(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d80e0c3_AllocStructLitExprModel> _32738_m) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1d651_structureIns(_32738_m.get()._field_Lit.get()._field_Strct));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1e1a0c068_structureLit(_self_, _32738_m.get()._field_Lit);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a0c563_casting(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d80e2b0_CastingExprModel> _33531_m) {
	{
		
		if (((_20d8e5a17_Prim(_33531_m.get()._field_Kind.ptr()) != nullptr) && _20d8eb875_IsAny(_20d8e5a17_Prim(_33531_m.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c99a09a2:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_33531_m.get()._field_Kind));
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1e1a1537e_model(_self_, _33531_m.get()._field_Expr);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_20d8e5ee0_Ptr(_33531_m.get()._field_ExprKind.ptr()) != nullptr) || (_20d8e5ee0_Ptr(_33531_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c99a0672:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_33531_m.get()._field_Kind));
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1e1a15604_expr(_self_, _33531_m.get()._field_Expr);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_20d8e71cd_Trait(_33531_m.get()._field_ExprKind.ptr()) != nullptr) || ((_20d8e5a17_Prim(_33531_m.get()._field_ExprKind.ptr()) != nullptr) && _20d8eb875_IsAny(_20d8e5a17_Prim(_33531_m.get()._field_ExprKind.ptr()).ptr())) || (_20d8e64b8_TypeEnum(_33531_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1c99a06d8:;
			{
				_1e1a1537e_model(_self_, _33531_m.get()._field_Expr);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_22eb61536_Production) {
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_33531_m.get()._field_Kind));
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_20d8e5c7b_Sptr(_33531_m.get()._field_Kind.ptr()) != nullptr)) {
						_1e1a533ab_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_20d8e5c7b_Sptr(_33531_m.get()._field_Kind.ptr()).get()._field_Elem));
					} else {
						_1e1a533ab_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_33531_m.get()._field_Kind));
					};
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1e1a8709e_locInfo(_self_.get()._field_oc, _33531_m.get()._field_Token);
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_20d8e71cd_Trait(_33531_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c99a074e:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_33531_m.get()._field_Kind));
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1e1a15604_expr(_self_, _33531_m.get()._field_Expr);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1e1a533ab_write(_self_.get()._field_oc, _20d80720e_Itoa(static_cast<jule::I64>(_1e1a83a4b_findTypeOffset(_self_.get()._field_oc.ptr(), _20d8e71cd_Trait(_33531_m.get()._field_Kind.ptr()),_33531_m.get()._field_ExprKind))));
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1c99a060b:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_33531_m.get()._field_Kind));
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1e1a15604_expr(_self_, _33531_m.get()._field_Expr);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1c99a0540:;
	};
}



inline void _1e1a0c7d8_args(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Slice<jule::Any> _38628_args) {
	if ((_38628_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _38628_args;
		auto it = expr.begin();
		_iter_begin_1c99b1177:;
		if (it != expr.end()) {
			jule::I64 _39014_i = it - expr.begin();
			jule::Any _39021_a = *it;
			{
				_1e1a15604_expr(_self_, _39021_a);
				if (((_38628_args.len() - _39014_i) > 1LL)) {
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1c99b1177:;
			++it;
			_39014_i++;
			goto _iter_begin_1c99b1177;
		}
		_iter_end_1c99b1177:;
	};
}



inline void _1e1a0ca5d_modelForCall(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Any _39836_expr) {
	{
		auto &_match_expr{ _39836_expr };
		
		if (_match_expr.type_is_ptr<_20d814749_FnIns>()) {
			_case_begin_1c99b2ee2:;
			{
				_1e1a10ab6_funcIns(_self_, _39836_expr.operator jule::Ptr<_20d814749_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is_ptr<_20d810734_StructSubIdentExprModel>()) {
			_case_begin_1c99b3069:;
			{
				jule::Ptr<_20d810734_StructSubIdentExprModel> _40421_ssie = _39836_expr.operator jule::Ptr<_20d810734_StructSubIdentExprModel>();;
				if ((_40421_ssie.get()._field_Method != nullptr)) {
					_1e1a10ab6_funcIns(_self_, _40421_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1c99b2e48:;
	};
	_1e1a1537e_model(_self_, _39836_expr);
}



inline void _1e1a0ccd3_pushCallInf(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d80e49c_FnCallExprModel>& _41332_m) {
	if ((_22eb61536_Production || ((!(_41332_m.get()._field_Func.get()._field_Anon)) && (!(_1e1a177c1_isBuiltinCallHasDebuginf(_41332_m)))))) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_41332_m.get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ _41332_m.get()._field_Expr };
			
			if (_match_expr.type_is_ptr<_20d810734_StructSubIdentExprModel>()) {
				_case_begin_1c99b62ae:;
				{
					if (_41332_m.get()._field_Expr.operator jule::Ptr<_20d810734_StructSubIdentExprModel>().get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1c99b649b;
				}
			}
			else {
				_case_begin_1c99b649b:;
				{
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1c99b6358:;
		};
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1e1a8709e_locInfo(_self_.get()._field_oc, _41332_m.get()._field_Token);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_41332_m.get()._field_Args.len() != 0LL)) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1e1a0d0e1_isWrapped(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d80e49c_FnCallExprModel>& _43834_m) {
	if ((((!(_20d814e0e_IsBuiltin(_43834_m.get()._field_Func.ptr()))) && (_43834_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _20cbece41_IsSelf(_43834_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _43834_m.get()._field_Expr };
			
			if (_match_expr.type_is_ptr<_20d810734_StructSubIdentExprModel>()) {
				_case_begin_1c99ba071:;
				{
					jule::Ptr<_20d810734_StructSubIdentExprModel> _44225_ssie = _43834_m.get()._field_Expr.operator jule::Ptr<_20d810734_StructSubIdentExprModel>();;
					{
						
						if (_20cbedd43_IsRef(_43834_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_20d8e5c7b_Sptr(_44225_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1c99ba868:;
							{
								goto _match_end_1c99bae0c;
							}
						}
						else {
							_case_begin_1c99bae73:;
							{
								if ((_20d8e6e69_Struct(_44225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_44225_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1e1a533ab_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1e1a1537e_model(_self_, _44225_ssie.get()._field_Expr.get()._field_Model);
										_1e1a533ab_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1c99bae0c:;
					};
				}
			}
			_match_end_1c99b9d62:;
		};
	};
	return false;;
}



inline void _1e1a0d366_pureFuncCall(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d80e49c_FnCallExprModel>& _46237_m) {
	jule::Bool _46313_wrapped = _1e1a0d0e1_isWrapped(_self_, _46237_m);;
	_1e1a0ca5d_modelForCall(_self_, _46237_m.get()._field_Expr);
	if ((!(_20d814e0e_IsBuiltin(_46237_m.get()._field_Func.ptr())))) {
		if ((_46237_m.get()._field_Func.get()._field_Decl.get()._field_CppLinked && (_46237_m.get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1ba6b62dc_hasDirective(_46237_m.get()._field_Func.get()._field_Decl.get()._field_Directives,jule::Str("cdef", 4))))) {
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _46237_m.get()._field_Func.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1c99c19c3:;
					if (it != expr.end()) {
						jule::I64 _46926_i = it - expr.begin();
						jule::Ptr<_20d8e1e53_InsGeneric> _46933_g = *it;
						{
							_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_46933_g.get()._field_Kind));
							if (((_46237_m.get()._field_Func.get()._field_Generics.len() - _46926_i) > 1LL)) {
								_1e1a533ab_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1c99c19c3:;
						++it;
						_46926_i++;
						goto _iter_begin_1c99c19c3;
					}
					_iter_end_1c99c19c3:;
				};
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1e1a0ccd3_pushCallInf(_self_, _46237_m);
	jule::Bool _48017_locinfo = false;;
	if ((((!(_20d814e0e_IsBuiltin(_46237_m.get()._field_Func.ptr()))) && (_46237_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _20cbece41_IsSelf(_46237_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _46237_m.get()._field_Expr };
			
			if (_match_expr.type_is_ptr<_20d810734_StructSubIdentExprModel>()) {
				_case_begin_1c99c5389:;
				{
					jule::Ptr<_20d810734_StructSubIdentExprModel> _48425_ssie = _46237_m.get()._field_Expr.operator jule::Ptr<_20d810734_StructSubIdentExprModel>();;
					{
						
						if (_20cbedd43_IsRef(_46237_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1c99c7314:;
							{
								_1e1a1537e_model(_self_, _48425_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_20d8e5c7b_Sptr(_48425_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1c99c7c1b:;
							{
								_1e1a1537e_model(_self_, _48425_ssie.get()._field_Expr.get()._field_Model);
								_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_22eb61536_Production))) {
									_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1e1a8709e_locInfo(_self_.get()._field_oc, _46237_m.get()._field_Token);
									_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1c99c6324:;
							{
								if ((_20d8e6e69_Struct(_48425_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1e1a533ab_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_46313_wrapped) {
									_1e1a533ab_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1e1a1537e_model(_self_, _48425_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1c99c62ad:;
					};
					if ((_46237_m.get()._field_Args.len() > 0LL)) {
						_1e1a533ab_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is_ptr<_20d810316_TraitSubIdentExprModel>()) {
				_case_begin_1c99c5400:;
				{
					_1e1a1537e_model(_self_, _46237_m.get()._field_Expr.operator jule::Ptr<_20d810316_TraitSubIdentExprModel>().get()._field_Expr);
					if ((!(_22eb61536_Production))) {
						_48017_locinfo=true;
					};
					if ((_46237_m.get()._field_Args.len() > 0LL)) {
						_1e1a533ab_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1c99c517a:;
		};
	};
	_1e1a0c7d8_args(_self_, _46237_m.get()._field_Args);
	if (_48017_locinfo) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1e1a8709e_locInfo(_self_.get()._field_oc, _46237_m.get()._field_Token);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_46313_wrapped) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _1e1a0d5db_coFuncCall(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d80e49c_FnCallExprModel>& _53435_m) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e1a85e8d_addIndent(_self_.get()._field_oc);
	jule::Str _53717_head = jule::Str("std::thread([", 13);;
	if ((_53435_m.get()._field_Func.get()._field_Owner != nullptr)) {
		_53717_head+=jule::Str("_self_", 6);
		if ((_53435_m.get()._field_Args.len() > 0LL)) {
			_53717_head+=jule::Str(", ", 2);
		};
	};
	{
		auto &expr = _53435_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1c99d2ae4:;
		if (it != expr.end()) {
			jule::I64 _54413_i = it - expr.begin();
			jule::Any _54416_arg = *it;
			{
				if ((_54413_i > 0LL)) {
					_53717_head+=jule::Str(", ", 2);
				};
				{
					auto &_match_expr{ _54416_arg };
					
					if (_match_expr.type_is_ptr<_20d869eb9_Var>()) {
						_case_begin_1c99d4a08:;
						{
							jule::Ptr<_20d869eb9_Var> _55025_v = _54416_arg.operator jule::Ptr<_20d869eb9_Var>();;
							_53717_head+=static__1e1a1db90_var(_55025_v);
							goto _iter_next_1c99d2ae4;
						}
					}
					_match_end_1c99d42aa:;
				};
				jule::Str _55417_name = (jule::Str("_co_arg_", 8) + _20d80720e_Itoa(_54413_i));;
				_53717_head+=_55417_name;
				_1e1a44358_indent(_self_.get()._field_oc);
				_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_53435_m.get()._field_Func.get()._field_Params[_54413_i].get()._field_Kind));
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if (_53435_m.get()._field_Func.get()._field_Params[_54413_i].get()._field_Decl.get()._field_Reference) {
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_1e1a533ab_write(_self_.get()._field_oc, _55417_name);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1e1a15604_expr(_self_, _54416_arg);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _56617_argS = jule::Any(_55417_name);;
				_53435_m.get()._field_Args[_54413_i]=(*(((jule::Any*)((&(_56617_argS))))));
			}
			_iter_next_1c99d2ae4:;
			++it;
			_54413_i++;
			goto _iter_begin_1c99d2ae4;
		}
		_iter_end_1c99d2ae4:;
	};
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, _53717_head);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1e1a85e8d_addIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a0d366_pureFuncCall(_self_, _53435_m);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e1a23e70_doneIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_1e1a23e70_doneIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e1a0d861_funcCall(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d80e49c_FnCallExprModel> _58432_m) {
	if (_58432_m.get()._field_IsCo) {
		_1e1a0d5db_coFuncCall(_self_, _58432_m);
		return;;
	};
	if (((_20d814e0e_IsBuiltin(_58432_m.get()._field_Func.ptr()) || (!(_58432_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_58432_m.get()._field_Except != nullptr) && (_58432_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1e1a0d366_pureFuncCall(_self_, _58432_m);
		return;;
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1e1a85e8d_addIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1e1a0d366_pureFuncCall(_self_, _58432_m);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e1a44358_indent(_self_.get()._field_oc);
	if ((_58432_m.get()._field_Except != nullptr)) {
		if (((_58432_m.get()._field_Func.get()._field_Result == nullptr) || (!(_58432_m.get()._field_Assigned)))) {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1e1a06848_scope(_self_.get()._field_oc.get()._field_sc, _58432_m.get()._field_Except);
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _61021_forwarded = _1e1a17507_isForwarded(_58432_m.get()._field_Except);;
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_61021_forwarded) {
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_1e1a06848_scope(_self_.get()._field_oc.get()._field_sc, _58432_m.get()._field_Except);
			if (_61021_forwarded) {
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1e1a15aee_initExpr(_self_, _58432_m.get()._field_Func.get()._field_Result);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1e1a23e70_doneIndent(_self_.get()._field_oc);
	} else {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1e1a8709e_locInfo(_self_.get()._field_oc, _58432_m.get()._field_Token);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_20cbeec56_IsVoid(_58432_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1e1a44358_indent(_self_.get()._field_oc);
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1e1a23e70_doneIndent(_self_.get()._field_oc);
	};
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1e1a0dad6_slice(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d80e689_SliceExprModel> _63929_m) {
	if ((_63929_m.get()._field_Elems.len() == 0LL)) {
		_1e1a533ab_write(_self_.get()._field_oc, static__1ba6acb0d_asSlice(_63929_m.get()._field_ElemKind));
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1e1a533ab_write(_self_.get()._field_oc, static__1ba6acb0d_asSlice(_63929_m.get()._field_ElemKind));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1e1a0c7d8_args(_self_, _63929_m.get()._field_Elems);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1e1a0dd5b_indexing(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d80e876_IndexingExprModel> _65132_m) {
	_1e1a1537e_model(_self_, _65132_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_22eb61536_Production || (_20d8e5ee0_Ptr(_65132_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_20d8e7442_Map(_65132_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1e1a17a02_isExprComesFromBind(_65132_m.get()._field_Expr)) {
			_case_begin_1c99ec988:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1e1a15604_expr(_self_, _65132_m.get()._field_Index.get()._field_Model);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1c99ed23b:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1e1a8709e_locInfo(_self_.get()._field_oc, _65132_m.get()._field_Token);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1e1a15604_expr(_self_, _65132_m.get()._field_Index.get()._field_Model);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1c99ed1c5:;
	};
}



inline void _1e1a0e0d1_unsafeIndexing(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20da4b91a_UnsafeIndexingExprModel> _67138_m) {
	_1e1a1537e_model(_self_, _67138_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_22eb61536_Production || (_20d8e5ee0_Ptr(_67138_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_20d8e7442_Map(_67138_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c9a0221d:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1e1a15604_expr(_self_, _67138_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1c9a02a6a:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1e1a15604_expr(_self_, _67138_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1c9a02a04:;
	};
}



inline void _1e1a0e356_anonFunc(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d80ea63_AnonFnExprModel> _68832_m) {
	_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b0050_func(_68832_m.get()._field_Func));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1ba6a7cb2_paramsIns(_self_.get()._field_oc, _68832_m.get()._field_Func.get()._field_Params);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	static__1ba6aea11_funcInsResult(_self_.get()._field_oc.get()._field_Obj,_68832_m.get()._field_Func);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1e1a06abd_funcScope(_self_.get()._field_oc.get()._field_sc, _68832_m.get()._field_Func);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a0e5cb_mapExpr(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d80ee3c_MapExprModel> _69931_m) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_69931_m.get()._field_KeyKind));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_69931_m.get()._field_ValKind));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_69931_m.get()._field_Entries.len() > 0LL)) {
		{
			auto &expr = _69931_m.get()._field_Entries;
			auto it = expr.begin();
			_iter_begin_1c9a0b502:;
			if (it != expr.end()) {
				jule::I64 _70618_i = it - expr.begin();
				jule::Ptr<_20d80ec50_KeyValPairExprModel> _70625_pair = *it;
				{
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1e1a15604_expr(_self_, _70625_pair.get()._field_Key);
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1e1a15604_expr(_self_, _70625_pair.get()._field_Val);
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_69931_m.get()._field_Entries.len() - _70618_i) > 1LL)) {
						_1e1a533ab_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1c9a0b502:;
				++it;
				_70618_i++;
				goto _iter_begin_1c9a0b502;
			}
			_iter_end_1c9a0b502:;
		};
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1e1a0e851_slicing(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d810129_SlicingExprModel> _72031_m) {
	_1e1a1537e_model(_self_, _72031_m.get()._field_Expr);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_22eb61536_Production))) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1e1a8709e_locInfo(_self_.get()._field_oc, _72031_m.get()._field_Token);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1e1a15604_expr(_self_, _72031_m.get()._field_Left);
	if ((_72031_m.get()._field_Right != nullptr)) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1e1a15604_expr(_self_, _72031_m.get()._field_Right);
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a0eac6_traitSub(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d810316_TraitSubIdentExprModel> _73632_m) {
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1cd6a_traitDecl(_73632_m.get()._field_Trt));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1e1a1537e_model(_self_, _73632_m.get()._field_Expr);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1c82b_func(_73632_m.get()._field_Method));
}



inline void _1e1a0ed4b_structureSub(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d810734_StructSubIdentExprModel> _74536_m) {
	_1e1a1537e_model(_self_, _74536_m.get()._field_Expr.get()._field_Model);
	if ((_74536_m.get()._field_Field != nullptr)) {
		if ((_20d8e5ee0_Ptr(_74536_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_20d8e5c7b_Sptr(_74536_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_22eb61536_Production))) {
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1e1a8709e_locInfo(_self_.get()._field_oc, _74536_m.get()._field_Token);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1d8e8_field(_74536_m.get()._field_Field.get()._field_Decl));
	};
}



inline void _1e1a100c1_commonIdent(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d810cea_CommonIdentExprModel> _76531_m) {
	_1e1a533ab_write(_self_.get()._field_oc, _76531_m.get()._field_Ident);
}



inline void _1e1a10346_commonSub(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d810ed7_CommonSubIdentExprModel> _76933_m) {
	_1e1a1537e_model(_self_, _76933_m.get()._field_Expr);
	{
		
		if ((_20d8e5ee0_Ptr(_76933_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1c9a1a940:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_20d8e5c7b_Sptr(_76933_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1c9a1b16b:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_22eb61536_Production))) {
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1e1a8709e_locInfo(_self_.get()._field_oc, _76933_m.get()._field_Token);
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1c9a1b105:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1c9a1b08e:;
	};
	_1e1a533ab_write(_self_.get()._field_oc, _76933_m.get()._field_Ident);
}



inline void _1e1a105bb_array(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d810b0d_ArrayExprModel> _78829_m) {
	_1e1a533ab_write(_self_.get()._field_oc, static__1ba6ade72_array(_78829_m.get()._field_Kind));
	if ((_78829_m.get()._field_Elems.len() == 0LL)) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_78829_m.get()._field_Elems.len() == 2LL) && (_78829_m.get()._field_Elems[1LL] == nullptr))) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1e1a15604_expr(_self_, _78829_m.get()._field_Elems[0LL]);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1e1a0c7d8_args(_self_, _78829_m.get()._field_Elems);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1e1a10841_funcInsCommon(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d814749_FnIns> _81137_m) {
	_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b0050_func(_81137_m));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e1a10ab6_funcIns(_self_, _81137_m);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a10ab6_funcIns(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d814749_FnIns> _81831_m) {
	if (((_81831_m.get()._field_Decl != nullptr) && _81831_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_20cb511e6_Directive> _82017_d = _1ba6b5e57_findDirective(_81831_m.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_82017_d != nullptr)) {
			_1e1a533ab_write(_self_.get()._field_oc, _1ba6a9951_concatAllParts(_82017_d.get()._field_Args));
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1cac3_funcIns(_81831_m));
}



inline void _1e1a10d3b_tuple(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d8111c4_TupleExprModel> _82929_m) {
	{
		auto &expr = _82929_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1c9a28453:;
		if (it != expr.end()) {
			jule::I64 _83014_i = it - expr.begin();
			jule::Ptr<_20d8b2891_Data> _83021_d = *it;
			{
				_1e1a15604_expr(_self_, _83021_d.get()._field_Model);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_82929_m.get()._field_Datas.len() - _83014_i) > 1LL)) {
					_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1e1a44358_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_1c9a28453:;
			++it;
			_83014_i++;
			goto _iter_begin_1c9a28453;
		}
		_iter_end_1c9a28453:;
	};
}



inline void _1e1a110b1_newCall(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d811977_BuiltinNewCallExprModel> _84031_m) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_84031_m.get()._field_Kind));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_84031_m.get()._field_Init != nullptr)) {
		_1e1a15604_expr(_self_, _84031_m.get()._field_Init);
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a11336_outCall(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d8113b1_BuiltinOutCallExprModel> _85031_m) {
	if ((_85031_m.get()._field_Debug && _22eb61536_Production)) {
		return;;
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1e1a15604_expr(_self_, _85031_m.get()._field_Expr);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a115ab_outlnCall(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d81159d_BuiltinOutlnCallExprModel> _85933_m) {
	if ((_85933_m.get()._field_Debug && _22eb61536_Production)) {
		return;;
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1e1a15604_expr(_self_, _85933_m.get()._field_Expr);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a11831_panicCall(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d811b64_BuiltinPanicCallExprModel> _86833_m) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1e1a15604_expr(_self_, _86833_m.get()._field_Expr);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1e1a8709e_locInfo(_self_.get()._field_oc, _86833_m.get()._field_Token);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1e1a11aa6_assertCall(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d811d51_BuiltinAssertCallExprModel> _87634_m) {
	if (_22eb61536_Production) {
		return;;
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1e1a15604_expr(_self_, _87634_m.get()._field_Expr);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1e1a533ab_write(_self_.get()._field_oc, _1e1a16803_cstrLit(static_cast<jule::Slice<jule::U8>>(_87634_m.get()._field_Log)));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1e1a8709e_locInfo(_self_.get()._field_oc, _87634_m.get()._field_Token);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1e1a11d2b_errorCall(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d812e51_BuiltinErrorCallExprModel> _88933_m) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_20cbeec56_IsVoid(_88933_m.get()._field_Func.get()._field_Decl.ptr())) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_88933_m.get()._field_Func.get()._field_Result));
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_1e1a15604_expr(_self_, _88933_m.get()._field_Err);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a120a1_copyCall(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d812c64_BuiltinCopyCallExprModel> _90232_m) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1e1a1537e_model(_self_, _90232_m.get()._field_Dest.get()._field_Model);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_20d8e5a17_Prim(_90232_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1e1a1537e_model(_self_, _90232_m.get()._field_Src.get()._field_Model);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_20d8e5a17_Prim(_90232_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a12326_lenCall(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d812417_BuiltinLenCallExprModel> _91831_m) {
	_1e1a1537e_model(_self_, _91831_m.get()._field_Expr.get()._field_Model);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1e1a1259b_capCall(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d812604_BuiltinCapCallExprModel> _92331_m) {
	_1e1a1537e_model(_self_, _92331_m.get()._field_Expr.get()._field_Model);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1e1a12821_deleteCall(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d810503_BuiltinDeleteCallExprModel> _92834_m) {
	_1e1a1537e_model(_self_, _92834_m.get()._field_Dest.get()._field_Model);
	if ((_92834_m.get()._field_Key != nullptr)) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_1e1a1537e_model(_self_, _92834_m.get()._field_Key.get()._field_Model);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1e1a12a96_makeCallSlice(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d81203d_BuiltinMakeCallExprModel>& _93938_m) {
	jule::Ptr<_20d8ec5bd_Slc> _94017_slice = _20d8e6991_Slc(_93938_m.get()._field_Kind.ptr());;
	_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_93938_m.get()._field_Kind));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1e1a15604_expr(_self_, _93938_m.get()._field_Len);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if ((_93938_m.get()._field_Cap != nullptr)) {
		_1e1a15604_expr(_self_, _93938_m.get()._field_Cap);
	} else {
		_1e1a15604_expr(_self_, _93938_m.get()._field_Len);
	};
	if (_1ba6b6584_shouldInitialized(_94017_slice.get()._field_Elem)) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1e1a15aee_initExpr(_self_, _94017_slice.get()._field_Elem);
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a12d1b_makeCallStr(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d81203d_BuiltinMakeCallExprModel>& _95736_m) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1e1a15604_expr(_self_, _95736_m.get()._field_Len);
	if ((_95736_m.get()._field_Cap != nullptr)) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1e1a15604_expr(_self_, _95736_m.get()._field_Cap);
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a13091_makeCall(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d81203d_BuiltinMakeCallExprModel> _96832_m) {
	if ((_20d8e6991_Slc(_96832_m.get()._field_Kind.ptr()) != nullptr)) {
		_1e1a12a96_makeCallSlice(_self_, _96832_m);
		return;;
	};
	_1e1a12d1b_makeCallStr(_self_, _96832_m);
}



inline void _1e1a13316_pushToSlice(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20da4bcd3_PushToSliceExprModel> _97635_m) {
	jule::I64 _97713_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1e1a1537e_model(_self_, _97635_m.get()._field_Dest);
	jule::Str _97913_dest = _self_.get()._field_oc.get()._field_Obj.slice(_97713_n);;
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1e1a533ab_write(_self_.get()._field_oc, _97913_dest);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1e1a533ab_write(_self_.get()._field_oc, _20d80720e_Itoa(static_cast<jule::I64>(_97635_m.get()._field_Elems.get()._field_Elems.len())));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _97635_m.get()._field_Elems.get()._field_Elems;
		auto it = expr.begin();
		_iter_begin_1c9a4c257:;
		if (it != expr.end()) {
			jule::Any _98621_e = *it;
			{
				_1e1a533ab_write(_self_.get()._field_oc, _97913_dest);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1e1a1537e_model(_self_, _98621_e);
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1c9a4c257:;
			++it;
			goto _iter_begin_1c9a4c257;
		}
		_iter_end_1c9a4c257:;
	};
}



inline void _1e1a1358b_appendCall(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d81222a_BuiltinAppendCallExprModel> _99534_m) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1e1a1537e_model(_self_, _99534_m.get()._field_Dest);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1e1a1537e_model(_self_, _99534_m.get()._field_Elements);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a13811_cloneCall(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d81178a_BuiltinCloneCallExprModel> _100333_m) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1e1a1537e_model(_self_, _100333_m.get()._field_Expr);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a13a86_sizeof(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d81313d_SizeofExprModel> _100930_m) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1e1a1537e_model(_self_, _100930_m.get()._field_Expr);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a13d0b_alignof(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d81332a_AlignofExprModel> _101531_m) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1e1a1537e_model(_self_, _101531_m.get()._field_Expr);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1e1a14119_runeLit(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d813517_RuneExprModel> _102127_m) {
	if ((_102127_m.get()._field_Code <= 127LL)) {
		jule::Str _102321_b = _1e1a1623c_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_102127_m.get()._field_Code)));;
		if ((_102321_b == jule::Str("'", 1))) {
			_102321_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _102321_b) + jule::Str("'", 1));;
	};
	return _1e1a16da8_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_102127_m.get()._field_Code)));;
}



inline void _1e1a1438e_structureStatic(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d810921_StructStaticIdentExprModel> _103239_m) {
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1cac3_funcIns(_103239_m.get()._field_Method));
}



inline void _1e1a14614_integratedToStr(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d813704_IntegratedToStrExprModel> _103639_m) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1e1a1537e_model(_self_, _103639_m.get()._field_Expr);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e1a14889_backendEmit(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d8138e1_BackendEmitExprModel> _104235_m) {
	if ((_104235_m.get()._field_Exprs.len() == 0LL)) {
		_1e1a533ab_write(_self_.get()._field_oc, _104235_m.get()._field_Code);
		return;;
	};
	jule::I64 _104713_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _104817_args = jule::Slice<jule::Any>::alloc(_104235_m.get()._field_Exprs.len(), _104235_m.get()._field_Exprs.len());;
	{
		auto &expr = _104235_m.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c9a580a9:;
		if (it != expr.end()) {
			jule::I64 _104914_i = it - expr.begin();
			jule::Any _104921_expr = *it;
			{
				_1e1a15604_expr(_self_, _104921_expr);
				_104817_args[_104914_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_104713_n));
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL,_104713_n);
			}
			_iter_next_1c9a580a9:;
			++it;
			_104914_i++;
			goto _iter_begin_1c9a580a9;
		}
		_iter_end_1c9a580a9:;
	};
	_1e1a533ab_write(_self_.get()._field_oc, _20d99e52c_Format(_104235_m.get()._field_Code,_104817_args));
}



inline void _1e1a14b0e_free(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d813acd_FreeExprModel> _105728_m) {
	_1e1a15604_expr(_self_, _105728_m.get()._field_Expr);
	if (_22eb60d93_RC) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1e1a14d84_mutSlicing(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20da4c399_MutSlicingExprModel> _106634_m) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e1a1537e_model(_self_, _106634_m.get()._field_Expr);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_22eb61536_Production))) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1e1a8709e_locInfo(_self_.get()._field_oc, _106634_m.get()._field_Token);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1e1a15604_expr(_self_, _106634_m.get()._field_Left);
	if ((_106634_m.get()._field_Right != nullptr)) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1e1a15604_expr(_self_, _106634_m.get()._field_Right);
	};
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1e1a15109_strInsertBegin(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20da4c740_StrInsertBeginExprModel> _108338_m) {
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e1a1537e_model(_self_, _108338_m.get()._field_Dest);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1e1a1537e_model(_self_, _108338_m.get()._field_Expr);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1e1a1537e_model(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Any _109129_m) {
	{
		auto &_match_expr{ _109129_m };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1c9a63a98:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, _109129_m.operator jule::Str());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8e3680_TypeKind>()) {
			_case_begin_1c9a63d73:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_109129_m.operator jule::Ptr<_20d8e3680_TypeKind>()));
			}
		}
		else if (_match_expr.type_is_ptr<_20cc572ec_Const>()) {
			_case_begin_1c9a63dd9:;
			{
				_1e1a0abb0_constant(_self_, _109129_m.operator jule::Ptr<_20cc572ec_Const>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d869eb9_Var>()) {
			_case_begin_1c9a63e50:;
			{
				_1e1a0b7e8_var(_self_, _109129_m.operator jule::Ptr<_20d869eb9_Var>());
			}
		}
		else if (_match_expr.type_is_ptr<_20cba5db6_StructIns>()) {
			_case_begin_1c9a63eb6:;
			{
				_1e1a0ba6d_structureIns(_self_, _109129_m.operator jule::Ptr<_20cba5db6_StructIns>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d814749_FnIns>()) {
			_case_begin_1c9a649de:;
			{
				_1e1a10841_funcInsCommon(_self_, _109129_m.operator jule::Ptr<_20d814749_FnIns>());
			}
		}
		else if (_match_expr.type_is_ptr<_20da4b5eb_UnsafeBinopExprModel>()) {
			_case_begin_1c9a64a55:;
			{
				_1e1a0b2ed_unsafeBinary(_self_, _109129_m.operator jule::Ptr<_20da4b5eb_UnsafeBinopExprModel>().get()._field_Node);
			}
		}
		else if (_match_expr.type_is_ptr<_20cc2c05d_BinopExprModel>()) {
			_case_begin_1c9a64abb:;
			{
				_1e1a0b573_binary(_self_, _109129_m.operator jule::Ptr<_20cc2c05d_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80da0c_UnaryExprModel>()) {
			_case_begin_1c9a64b32:;
			{
				_1e1a0bce3_unary(_self_, _109129_m.operator jule::Ptr<_20d80da0c_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80ddd6_StructLitExprModel>()) {
			_case_begin_1c9a64b98:;
			{
				_1e1a0c068_structureLit(_self_, _109129_m.operator jule::Ptr<_20d80ddd6_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80e0c3_AllocStructLitExprModel>()) {
			_case_begin_1c9a64c0e:;
			{
				_1e1a0c2dd_allocStructure(_self_, _109129_m.operator jule::Ptr<_20d80e0c3_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80e2b0_CastingExprModel>()) {
			_case_begin_1c9a64c75:;
			{
				_1e1a0c563_casting(_self_, _109129_m.operator jule::Ptr<_20d80e2b0_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80e49c_FnCallExprModel>()) {
			_case_begin_1c9a64cdb:;
			{
				_1e1a0d861_funcCall(_self_, _109129_m.operator jule::Ptr<_20d80e49c_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80e689_SliceExprModel>()) {
			_case_begin_1c9a64d52:;
			{
				_1e1a0dad6_slice(_self_, _109129_m.operator jule::Ptr<_20d80e689_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810b0d_ArrayExprModel>()) {
			_case_begin_1c9a64db8:;
			{
				_1e1a105bb_array(_self_, _109129_m.operator jule::Ptr<_20d810b0d_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20da4b91a_UnsafeIndexingExprModel>()) {
			_case_begin_1c9a64e2e:;
			{
				_1e1a0e0d1_unsafeIndexing(_self_, _109129_m.operator jule::Ptr<_20da4b91a_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80e876_IndexingExprModel>()) {
			_case_begin_1c9a64e95:;
			{
				_1e1a0dd5b_indexing(_self_, _109129_m.operator jule::Ptr<_20d80e876_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80ea63_AnonFnExprModel>()) {
			_case_begin_1c9a6501c:;
			{
				_1e1a0e356_anonFunc(_self_, _109129_m.operator jule::Ptr<_20d80ea63_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d80ee3c_MapExprModel>()) {
			_case_begin_1c9a65094:;
			{
				_1e1a0e5cb_mapExpr(_self_, _109129_m.operator jule::Ptr<_20d80ee3c_MapExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810129_SlicingExprModel>()) {
			_case_begin_1c9a6511b:;
			{
				_1e1a0e851_slicing(_self_, _109129_m.operator jule::Ptr<_20d810129_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810316_TraitSubIdentExprModel>()) {
			_case_begin_1c9a65193:;
			{
				_1e1a0eac6_traitSub(_self_, _109129_m.operator jule::Ptr<_20d810316_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810734_StructSubIdentExprModel>()) {
			_case_begin_1c9a6521a:;
			{
				_1e1a0ed4b_structureSub(_self_, _109129_m.operator jule::Ptr<_20d810734_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810cea_CommonIdentExprModel>()) {
			_case_begin_1c9a65292:;
			{
				_1e1a100c1_commonIdent(_self_, _109129_m.operator jule::Ptr<_20d810cea_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810ed7_CommonSubIdentExprModel>()) {
			_case_begin_1c9a65319:;
			{
				_1e1a10346_commonSub(_self_, _109129_m.operator jule::Ptr<_20d810ed7_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8111c4_TupleExprModel>()) {
			_case_begin_1c9a65391:;
			{
				_1e1a10d3b_tuple(_self_, _109129_m.operator jule::Ptr<_20d8111c4_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8113b1_BuiltinOutCallExprModel>()) {
			_case_begin_1c9a65418:;
			{
				_1e1a11336_outCall(_self_, _109129_m.operator jule::Ptr<_20d8113b1_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81159d_BuiltinOutlnCallExprModel>()) {
			_case_begin_1c9a65490:;
			{
				_1e1a115ab_outlnCall(_self_, _109129_m.operator jule::Ptr<_20d81159d_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d811977_BuiltinNewCallExprModel>()) {
			_case_begin_1c9a65517:;
			{
				_1e1a110b1_newCall(_self_, _109129_m.operator jule::Ptr<_20d811977_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d811b64_BuiltinPanicCallExprModel>()) {
			_case_begin_1c9a6558e:;
			{
				_1e1a11831_panicCall(_self_, _109129_m.operator jule::Ptr<_20d811b64_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d811d51_BuiltinAssertCallExprModel>()) {
			_case_begin_1c9a65616:;
			{
				_1e1a11aa6_assertCall(_self_, _109129_m.operator jule::Ptr<_20d811d51_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d812e51_BuiltinErrorCallExprModel>()) {
			_case_begin_1c9a6568d:;
			{
				_1e1a11d2b_errorCall(_self_, _109129_m.operator jule::Ptr<_20d812e51_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81203d_BuiltinMakeCallExprModel>()) {
			_case_begin_1c9a65715:;
			{
				_1e1a13091_makeCall(_self_, _109129_m.operator jule::Ptr<_20d81203d_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81222a_BuiltinAppendCallExprModel>()) {
			_case_begin_1c9a6578c:;
			{
				_1e1a1358b_appendCall(_self_, _109129_m.operator jule::Ptr<_20d81222a_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81178a_BuiltinCloneCallExprModel>()) {
			_case_begin_1c9a65814:;
			{
				_1e1a13811_cloneCall(_self_, _109129_m.operator jule::Ptr<_20d81178a_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d812c64_BuiltinCopyCallExprModel>()) {
			_case_begin_1c9a6588b:;
			{
				_1e1a120a1_copyCall(_self_, _109129_m.operator jule::Ptr<_20d812c64_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d812417_BuiltinLenCallExprModel>()) {
			_case_begin_1c9a65913:;
			{
				_1e1a12326_lenCall(_self_, _109129_m.operator jule::Ptr<_20d812417_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d812604_BuiltinCapCallExprModel>()) {
			_case_begin_1c9a6598a:;
			{
				_1e1a1259b_capCall(_self_, _109129_m.operator jule::Ptr<_20d812604_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d810503_BuiltinDeleteCallExprModel>()) {
			_case_begin_1c9a65a12:;
			{
				_1e1a12821_deleteCall(_self_, _109129_m.operator jule::Ptr<_20d810503_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81313d_SizeofExprModel>()) {
			_case_begin_1c9a65a89:;
			{
				_1e1a13a86_sizeof(_self_, _109129_m.operator jule::Ptr<_20d81313d_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d81332a_AlignofExprModel>()) {
			_case_begin_1c9a65b11:;
			{
				_1e1a13d0b_alignof(_self_, _109129_m.operator jule::Ptr<_20d81332a_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d813517_RuneExprModel>()) {
			_case_begin_1c9a65b88:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, _1e1a14119_runeLit(_self_, _109129_m.operator jule::Ptr<_20d813517_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is_ptr<_20d810921_StructStaticIdentExprModel>()) {
			_case_begin_1c9a65c10:;
			{
				_1e1a1438e_structureStatic(_self_, _109129_m.operator jule::Ptr<_20d810921_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d813704_IntegratedToStrExprModel>()) {
			_case_begin_1c9a65c87:;
			{
				_1e1a14614_integratedToStr(_self_, _109129_m.operator jule::Ptr<_20d813704_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d8138e1_BackendEmitExprModel>()) {
			_case_begin_1c9a65d0e:;
			{
				_1e1a14889_backendEmit(_self_, _109129_m.operator jule::Ptr<_20d8138e1_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20d813acd_FreeExprModel>()) {
			_case_begin_1c9a65d86:;
			{
				_1e1a14b0e_free(_self_, _109129_m.operator jule::Ptr<_20d813acd_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20da4c399_MutSlicingExprModel>()) {
			_case_begin_1c9a65e0d:;
			{
				_1e1a14d84_mutSlicing(_self_, _109129_m.operator jule::Ptr<_20da4c399_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is_ptr<_20da4c740_StrInsertBeginExprModel>()) {
			_case_begin_1c9a65e85:;
			{
				_1e1a15109_strInsertBegin(_self_, _109129_m.operator jule::Ptr<_20da4c740_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1c9a63c1e:;
			{
				_1e1a533ab_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1c9a63b42:;
	};
}



inline void _1e1a15604_expr(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Any _119228_e) {
	_1e1a1537e_model(_self_, _119228_e);
}



inline void _1e1a15879_val(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d8b3919_Value> _119627_v) {
	if (_20d8b3254_IsConst(_119627_v.get()._field_Data.ptr())) {
		_1e1a0abb0_constant(_self_, _119627_v.get()._field_Data.get()._field_Constant);
		return;;
	};
	_1e1a15604_expr(_self_, _119627_v.get()._field_Data.get()._field_Model);
}



inline void _1e1a15aee_initExpr(jule::Ptr<_1e1a09560_exprCoder> _self_, jule::Ptr<_20d8e3680_TypeKind> _120432_t) {
	if (_20d8e5066_NilCompatible(_120432_t.ptr())) {
		if ((_20d8e5ee0_Ptr(_120432_t.ptr()) != nullptr)) {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_120432_t));
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_20d81b0ad_Enum> _121417_enm = _20d8e6254_Enum(_120432_t.ptr());;
	if ((_121417_enm != nullptr)) {
		_1e1a15879_val(_self_, _121417_enm.get()._field_Items[0LL].get()._field_Value);
		return;;
	};
	jule::Ptr<_20d8e83cc_Prim> _121913_prim = _20d8e5a17_Prim(_120432_t.ptr());;
	if ((_121913_prim != nullptr)) {
		if (_20d80a047_IsNum(_121913_prim.get()._field_Kind)) {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_20d8eb39c_IsBool(_121913_prim.ptr())) {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_20d8eb611_IsStr(_121913_prim.ptr())) {
			_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_20d8e672c_Arr(_120432_t.ptr()) != nullptr)) {
		jule::Ptr<_20d8ee768_Arr> _123121_arr = _20d8e672c_Arr(_120432_t.ptr());;
		_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_120432_t));
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1e1a15aee_initExpr(_self_, _123121_arr.get()._field_Elem);
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_20cba5db6_StructIns> _123817_s = _20d8e6e69_Struct(_120432_t.ptr());;
	if ((((_123817_s != nullptr) && _123817_s.get()._field_Decl.get()._field_CppLinked) && (_1ba6b5e57_findDirective(_123817_s.get()._field_Decl.get()._field_Directives,jule::Str("typedef", 7)) == nullptr))) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_120432_t));
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1e1a533ab_write(_self_.get()._field_oc, static__1ba6b02e7_kind(_120432_t));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1e1a09560_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1e1a18409_cloneFuncDecl(jule::Ptr<_20cba59dc_Struct>& _1030_s) {
	jule::Str _1117_obj = static__1ba6ad933_structure(_1030_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;;
}



inline jule::Str static__1e1a186a1_cloneFuncDef(jule::Ptr<_20cba59dc_Struct>& _1629_s) {
	jule::Str _1717_obj = static__1ba6ad933_structure(_1629_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e1a1810c_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e1a19581_TestCoder> static__1e1a19a04_New(jule::Ptr<_1ba6a5e14_ObjectCoder>& _2824_oc) {
	return jule::new_ptr<_1e1a19581_TestCoder>(_1e1a19581_TestCoder{._field_oc=_2824_oc});;
}



inline jule::Ptr<_20d84404d_ImportInfo> _1e1a19c68_findTestingPackage(jule::Ptr<_1e1a19581_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1c9a8b2a7:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_LinkPath == jule::Str("std::testing", 12))) {
					return _3521_imp;;
				};
			}
			_iter_next_1c9a8b2a7:;
			++it;
			goto _iter_begin_1c9a8b2a7;
		}
		_iter_end_1c9a8b2a7:;
	};
	return nullptr;;
}



inline void _1e1a19edd_appendTest(jule::Ptr<_1e1a19581_TestCoder> _self_, jule::Ptr<_20d814749_FnIns> _4334_f) {
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a1a6a3_callTmReset(_self_);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1e1a533ab_write(_self_.get()._field_oc, _1e1a16803_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1cac3_funcIns(_4334_f));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1e1a1a263_appendPackageTests(jule::Ptr<_1e1a19581_TestCoder> _self_, jule::Ptr<_20d846ea7_Package>& _6043_p) {
	{
		auto &expr = _6043_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c9a91ac6:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1c9a92423:;
					if (it != expr.end()) {
						jule::Ptr<_20d814370_Fn> _6225_f = *it;
						{
							if (_1ba6b62dc_hasDirective(_6225_f.get()._field_Directives,jule::Str("test", 4))) {
								_1e1a19edd_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1c9a92423:;
						++it;
						goto _iter_begin_1c9a92423;
					}
					_iter_end_1c9a92423:;
				};
			}
			_iter_next_1c9a91ac6:;
			++it;
			goto _iter_begin_1c9a91ac6;
		}
		_iter_end_1c9a91ac6:;
	};
}



inline jule::Bool _1e1a1a4c7_readyTestingPackage(jule::Ptr<_1e1a19581_TestCoder> _self_) {
	jule::Ptr<_20d84404d_ImportInfo> _7117_p = _1e1a19c68_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_20d84548e_FindStruct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_20cb7ebc5_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tmFailed=_20cb7ebc5_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6),false);
	_self_.get()._field_tmSkipped=_20cb7ebc5_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7),false);
	return true;;
}



inline void _1e1a1a6a3_callTmReset(jule::Ptr<_1e1a19581_TestCoder> _self_) {
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1c82b_func(_self_.get()._field_tmReset));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1e1a1a87e_callTmFailed(jule::Ptr<_1e1a19581_TestCoder> _self_) {
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1c82b_func(_self_.get()._field_tmFailed));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1e1a1aa5a_callTmSkipped(jule::Ptr<_1e1a19581_TestCoder> _self_) {
	_1e1a533ab_write(_self_.get()._field_oc, static__1e1a1c82b_func(_self_.get()._field_tmSkipped));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1e1a1ac36_Serialize(jule::Ptr<_1e1a19581_TestCoder> _self_) {
	_1ba6a9478_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1ba6a9346_end(_self_.get()._field_oc);
	});;
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1e1a85e8d_addIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	if ((!(_1e1a1a4c7_readyTestingPackage(_self_)))) {
		_1e1a533ab_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1e1a23e70_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1e1a533ab_write(_self_.get()._field_oc, static__1ba6aba41_asSptr(static__1ba6adbca_structureIns(_self_.get()._field_t)));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1e1a533ab_write(_self_.get()._field_oc, static__1ba6adbca_structureIns(_self_.get()._field_t));
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1e1a85e8d_addIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1e1a1a87e_callTmFailed(_self_);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1e1a1aa5a_callTmSkipped(_self_);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1e1a23e70_doneIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1e1a1a263_appendPackageTests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_Main);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1e1a23e70_doneIndent(_self_.get()._field_oc);
	_1e1a44358_indent(_self_.get()._field_oc);
	_1e1a533ab_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1e1a19581_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1e1a1c199_toOut(jule::Str& _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_20d806e9a_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3322_ident;
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, (_3322_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3322_ident;
	return _4217_obj;;
}



inline jule::Str static__1e1a1c584_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str& _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_20d80720e_Itoa(_5423_row);
	_5517_obj+=_20d80720e_Itoa(_5433_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5444_ident;
	return _5517_obj;;
}



inline jule::Str static__1e1a1c82b_func(jule::Ptr<_20d814370_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_CppLinked) {
			_case_begin_1c9aaea5b:;
			{
				return _6521_f.get()._field_Ident;;
			}
		}
		else if ((_6521_f.get()._field_Ident == jule::Str("main", 4))) {
			_case_begin_1c9aaeac2:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_20cc3121b_IsMethod(_6521_f.ptr())) {
			_case_begin_1c9aade56:;
			{
				jule::Str _7221_obj = static__1e1a1c199_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_1c9aadde0:;
			{
				return static__1e1a1c199_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
			}
		}
		_match_end_1c9aadd46:;
	};
}



inline jule::Str static__1e1a1cac3_funcIns(jule::Ptr<_20d814749_FnIns>& _8424_f) {
	if (_20d814e0e_IsBuiltin(_8424_f.ptr())) {
		return (jule::Str("jule::", 6) + _8424_f.get()._field_Decl.get()._field_Ident);;
	};
	if ((_8424_f.get()._field_Decl.get()._field_CppLinked || (_8424_f.get()._field_Generics.len() == 0LL))) {
		return static__1e1a1c82b_func(_8424_f.get()._field_Decl);;
	};
	return static__1e1a1c199_toOut(_8424_f.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8424_f)));;
}



inline jule::Str static__1e1a1cd6a_traitDecl(jule::Ptr<_20d81a3ed_Trait> _9525_t) {
	if (_20d81a84e_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__1e1a1c199_toOut(_9525_t.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__1e1a1d112_param(jule::Ptr<_20d814183_Param>& _10322_p) {
	if ((_20b4e80bc_IsAnonIdent(_10322_p.get()._field_Ident) || _20b4e7d25_IsIgnoreIdent(_10322_p.get()._field_Ident))) {
		return jule::Str();;
	};
	if (_20cbece41_IsSelf(_10322_p.ptr())) {
		return jule::Str("_self_", 6);;
	};
	if ((_10322_p.get()._field_Token == nullptr)) {
		return static__1e1a1c584_toLocal(0LL,0LL,_10322_p.get()._field_Ident);;
	};
	return static__1e1a1c584_toLocal(_10322_p.get()._field_Token.get()._field_Row,_10322_p.get()._field_Token.get()._field_Column,_10322_p.get()._field_Ident);;
}



inline jule::Str static__1e1a1d3a9_structure(jule::Ptr<_20cba59dc_Struct>& _11726_s) {
	if (_11726_s.get()._field_CppLinked) {
		if (_1ba6b62dc_hasDirective(_11726_s.get()._field_Directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_Ident);;
	};
	return static__1e1a1c199_toOut(_11726_s.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));;
}



inline jule::Str static__1e1a1d651_structureIns(jule::Ptr<_20cba5db6_StructIns>& _12829_s) {
	if ((_12829_s.get()._field_Decl.get()._field_CppLinked || (_12829_s.get()._field_Generics.len() == 0LL))) {
		return static__1e1a1d3a9_structure(_12829_s.get()._field_Decl);;
	};
	return static__1e1a1c199_toOut(_12829_s.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12829_s)));;
}



inline jule::Str static__1e1a1d8e8_field(jule::Ptr<_20cb79a49_Field>& _13622_f) {
	if (_13622_f.get()._field_Owner.get()._field_CppLinked) {
		return _13622_f.get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_Ident);;
}



inline jule::Str static__1e1a1db90_var(jule::Ptr<_20d869eb9_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_1c9ab9978:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("error", 5))) {
			_case_begin_1c9ab8ceb:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("self", 4))) {
			_case_begin_1c9ab8d62:;
			{
				if ((_20d8e5c7b_Sptr(_14423_v.get()._field_Kind.get()._field_Kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);;
				};
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_1c9ab8dc8:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_1c9ab8e3e:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _20d80720e_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1c9ab91c5:;
			{
				return static__1e1a1c584_toLocal(_14423_v.get()._field_Token.get()._field_Row,_14423_v.get()._field_Token.get()._field_Column,_14423_v.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1c9ab8c85:;
			{
				return static__1e1a1c199_toOut(_14423_v.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_1c9ab84e3:;
	};
}



inline jule::Str static__1e1a1de37_iterBegin(jule::Uintptr _16725_it) {
	jule::Str _16817_obj = jule::Str::alloc(0LL, 30LL);;
	_16817_obj+=jule::Str("_iter_begin_", 12);
	_16817_obj+=_20d806e9a_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16725_it)),15LL);
	return _16817_obj;;
}



inline jule::Str static__1e1a1e1ce_iterEnd(jule::Uintptr _17523_it) {
	jule::Str _17617_obj = jule::Str::alloc(0LL, 30LL);;
	_17617_obj+=jule::Str("_iter_end_", 10);
	_17617_obj+=_20d806e9a_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17523_it)),15LL);
	return _17617_obj;;
}



inline jule::Str static__1e1a1e476_iterNext(jule::Uintptr _18324_it) {
	jule::Str _18417_obj = jule::Str::alloc(0LL, 30LL);;
	_18417_obj+=jule::Str("_iter_next_", 11);
	_18417_obj+=_20d806e9a_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18324_it)),15LL);
	return _18417_obj;;
}



inline jule::Str static__1e1a1e71d_label(jule::Str& _19122_ident) {
	jule::Str _19217_obj = jule::Str::alloc(0LL, 30LL);;
	_19217_obj+=jule::Str("_julec_label_", 13);
	_19217_obj+=_19122_ident;
	return _19217_obj;;
}



inline jule::Str static__1e1a1e9b5_matchEnd(jule::Uintptr _19924_m) {
	jule::Str _20017_obj = jule::Str::alloc(0LL, 30LL);;
	_20017_obj+=jule::Str("_match_end_", 11);
	_20017_obj+=_20d806e9a_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19924_m)),15LL);
	return _20017_obj;;
}



inline jule::Str static__1e1a1ec5c_caseBegin(jule::Uintptr _20725_c) {
	jule::Str _20817_obj = jule::Str::alloc(0LL, 30LL);;
	_20817_obj+=jule::Str("_case_begin_", 12);
	_20817_obj+=_20d806e9a_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20725_c)),15LL);
	return _20817_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e1a1bbd2_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e1a4e473_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e1a24987_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ba6aa6ee_Str(_1ba6aa446_customType* _self_) {
	return (*_self_)._field_kind;;
}



inline jule::Bool _1ba6aaa0c_Equals(jule::Ptr<_1ba6aa446_customType> _self_, jule::Ptr<_20d8e3680_TypeKind> _3922_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ba6aa446_customType _Src) {
	_Stream << _1ba6aa6ee_Str(&_Src);
	return _Stream;
}



inline jule::Str static__1ba6ab25a_toType(jule::Str _6026_id) {
	if ((_6026_id != jule::Str("uintptr", 7))) {
		_6026_id=_20cd5a6a8_RealKindOf(_6026_id);
	};
	if (((97LL <= _6026_id[0LL]) && (_6026_id[0LL] <= 122LLU))) {
		_6026_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6026_id);;
}



inline jule::Str static__1ba6ab502_prim(jule::Ptr<_20d8e83cc_Prim> _7120_p) {
	return static__1ba6ab25a_toType(_20d8e8740_Str(_7120_p.ptr()));;
}



inline jule::Str static__1ba6ab799_tuple(jule::Ptr<_20d8ed14b_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1c9ba2a94:;
		if (it != expr.end()) {
			jule::Ptr<_20d8e3680_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__1ba6b02e7_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_1c9ba2a94:;
			++it;
			goto _iter_begin_1c9ba2a94;
		}
		_iter_end_1c9ba2a94:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;;
}



inline jule::Str static__1ba6aba41_asSptr(jule::Str _8822_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8822_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;;
}



inline jule::Str static__1ba6abcd8_asPtr(jule::Str _9621_elem) {
	return (_9621_elem + jule::Str("*", 1));;
}



inline jule::Str static__1ba6ac080_sptr(jule::Ptr<_20d8ebb61_Sptr> _10124_sptr) {
	return static__1ba6aba41_asSptr(static__1ba6b02e7_kind(_10124_sptr.get()._field_Elem));;
}



inline jule::Str static__1ba6ac327_ptr(jule::Ptr<_20d9001c5_Ptr> _10623_p) {
	;
	if (_20d900b98_IsUnsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _11117_elem = static__1ba6b02e7_kind(_10623_p.get()._field_Elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;;
}



inline jule::Str static__1ba6ac5be_enumDecl(jule::Ptr<_20d81b0ad_Enum> _11728_e) {
	return static__1ba6b02e7_kind(_11728_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str static__1ba6ac866_typeEnumDecl(jule::Ptr<_20d81b82d_TypeEnum> _12232_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str static__1ba6acb0d_asSlice(jule::Ptr<_20d8e3680_TypeKind> _12627_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__1ba6b02e7_kind(_12627_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;;
}



inline jule::Str static__1ba6acda5_slice(jule::Ptr<_20d8ec5bd_Slc> _13425_s) {
	return static__1ba6acb0d_asSlice(_13425_s.get()._field_Elem);;
}



inline jule::Str static__1ba6ad14c_mapType(jule::Ptr<_20d8edb74_Map> _13927_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__1ba6b02e7_kind(_13927_m.get()._field_Key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__1ba6b02e7_kind(_13927_m.get()._field_Val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;;
}



inline jule::Str static__1ba6ad3e4_traitIdent(jule::Str _14826_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14826_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;;
}



inline jule::Str static__1ba6ad68b_traitDecl(jule::Ptr<_20d81a3ed_Trait> _15625_t) {
	return static__1ba6ad3e4_traitIdent(static__1e1a1cd6a_traitDecl(_15625_t));;
}



inline jule::Str static__1ba6ad933_structure(jule::Ptr<_20cba59dc_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_CppLinked && (!(_1ba6b62dc_hasDirective(_16125_s.get()._field_Directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__1e1a1d3a9_structure(_16125_s);
	return _16217_rep;;
}



inline jule::Str static__1ba6adbca_structureIns(jule::Ptr<_20cba5db6_StructIns> _17132_s) {
	if (_17132_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _17321_ident = static__1e1a1d651_structureIns(_17132_s);;
		if ((_17132_s.get()._field_Generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17132_s.get()._field_Generics;
				auto it = expr.begin();
				_iter_begin_1c9bac76e:;
				if (it != expr.end()) {
					jule::Ptr<_20d8e1e53_InsGeneric> _17629_g = *it;
					{
						_17321_ident+=static__1ba6b02e7_kind(_17629_g.get()._field_Kind);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_1c9bac76e:;
					++it;
					goto _iter_begin_1c9bac76e;
				}
				_iter_end_1c9bac76e:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_20cb511e6_Directive> _18317_d = _1ba6b5e57_findDirective(_17132_s.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_1ba6a9951_concatAllParts(_18317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _17321_ident;;
	};
	return static__1e1a1d651_structureIns(_17132_s);;
}



inline jule::Str static__1ba6ade72_array(jule::Ptr<_20d8ee768_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__1ba6b02e7_kind(_19325_a.get()._field_Elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_20d80720e_Itoa(_19325_a.get()._field_N);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;;
}



inline jule::Str static__1ba6ae4b1_paramIns(jule::Ptr<_20d81455c_ParamIns>& _21929_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21929_p.get()._field_Decl.get()._field_Variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__1ba6b02e7_kind(_21929_p.get()._field_Kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__1ba6b02e7_kind(_21929_p.get()._field_Kind);
	};
	if (_21929_p.get()._field_Decl.get()._field_Reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;;
}



inline void static__1ba6aea11_funcInsResult(jule::Str& _24934_s, jule::Ptr<_20d814749_FnIns>& _24947_f) {
	if (_20cbeec56_IsVoid(_24947_f.get()._field_Decl.ptr())) {
		if (_24947_f.get()._field_Decl.get()._field_Exceptional) {
			_24934_s+=jule::Str("jule::VoidExceptional", 21);
		} else {
			_24934_s+=jule::Str("void", 4);
		};
		return;;
	};
	if (_24947_f.get()._field_Decl.get()._field_Exceptional) {
		_24934_s+=jule::Str("jule::Exceptional<", 18);
		static__1ba6b42c9_codeMut1(_24934_s,_24947_f.get()._field_Result);
		_24934_s+=jule::Str(">", 1);
		return;;
	};
	static__1ba6b42c9_codeMut1(_24934_s,_24947_f.get()._field_Result);
}



inline jule::Str static__1ba6aeca8_anonFunc(jule::Ptr<_20d814749_FnIns> _26728_f) {
	jule::Str _26817_decl = jule::Str();;
	static__1ba6aea11_funcInsResult(_26817_decl,_26728_f);
	_26817_decl+=jule::Str("(", 1);
	if ((_26728_f.get()._field_Params.len() > 0LL)) {
		{
			auto &expr = _26728_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1c9bb9649:;
			if (it != expr.end()) {
				jule::Ptr<_20d81455c_ParamIns> _27225_param = *it;
				{
					if (_20cbece41_IsSelf(_27225_param.get()._field_Decl.ptr())) {
						goto _iter_next_1c9bb9649;
					};
					_26817_decl+=static__1ba6ae4b1_paramIns(_27225_param);
					_26817_decl+=jule::Str(",", 1);
				}
				_iter_next_1c9bb9649:;
				++it;
				goto _iter_begin_1c9bb9649;
			}
			_iter_end_1c9bb9649:;
		};
		(_26817_decl).mut_slice(0LL,(_26817_decl.len() - 1LL));;
	} else {
		_26817_decl+=jule::Str("void", 4);
	};
	_26817_decl+=jule::Str(")", 1);
	return _26817_decl;;
}



inline jule::Str static__1ba6b0050_func(jule::Ptr<_20d814749_FnIns> _28824_f) {
	jule::Str _28917_obj = jule::Str("jule::Fn<", 9);;
	_28917_obj+=static__1ba6aeca8_anonFunc(_28824_f);
	_28917_obj+=jule::Str(">", 1);
	return _28917_obj;;
}



inline jule::Str static__1ba6b02e7_kind(jule::Ptr<_20d8e3680_TypeKind> _29624_k) {
	{
		
		if (_20d8e4351_CppLinked(_29624_k.ptr())) {
			_case_begin_1c9bbc1da:;
			{
				return _29624_k.get()._field_CppIdent;;
			}
		}
		else if ((_20d8e5a17_Prim(_29624_k.ptr()) != nullptr)) {
			_case_begin_1c9bbc251:;
			{
				return static__1ba6ab502_prim(_20d8e5a17_Prim(_29624_k.ptr()));;
			}
		}
		else if ((_20d8e76a6_Tup(_29624_k.ptr()) != nullptr)) {
			_case_begin_1c9bbc2b7:;
			{
				return static__1ba6ab799_tuple(_20d8e76a6_Tup(_29624_k.ptr()));;
			}
		}
		else if ((_20d8e5c7b_Sptr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1c9bbc32d:;
			{
				return static__1ba6ac080_sptr(_20d8e5c7b_Sptr(_29624_k.ptr()));;
			}
		}
		else if ((_20d8e5ee0_Ptr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1c9bbc394:;
			{
				return static__1ba6ac327_ptr(_20d8e5ee0_Ptr(_29624_k.ptr()));;
			}
		}
		else if ((_20d8e6254_Enum(_29624_k.ptr()) != nullptr)) {
			_case_begin_1c9bbc41b:;
			{
				return static__1ba6ac5be_enumDecl(_20d8e6254_Enum(_29624_k.ptr()));;
			}
		}
		else if ((_20d8e64b8_TypeEnum(_29624_k.ptr()) != nullptr)) {
			_case_begin_1c9bbc493:;
			{
				return static__1ba6ac866_typeEnumDecl(_20d8e64b8_TypeEnum(_29624_k.ptr()));;
			}
		}
		else if ((_20d8e6991_Slc(_29624_k.ptr()) != nullptr)) {
			_case_begin_1c9bbc51a:;
			{
				return static__1ba6acda5_slice(_20d8e6991_Slc(_29624_k.ptr()));;
			}
		}
		else if ((_20d8e7442_Map(_29624_k.ptr()) != nullptr)) {
			_case_begin_1c9bbc592:;
			{
				return static__1ba6ad14c_mapType(_20d8e7442_Map(_29624_k.ptr()));;
			}
		}
		else if ((_20d8e71cd_Trait(_29624_k.ptr()) != nullptr)) {
			_case_begin_1c9bbc619:;
			{
				return static__1ba6ad68b_traitDecl(_20d8e71cd_Trait(_29624_k.ptr()));;
			}
		}
		else if ((_20d8e6e69_Struct(_29624_k.ptr()) != nullptr)) {
			_case_begin_1c9bbc691:;
			{
				return static__1ba6adbca_structureIns(_20d8e6e69_Struct(_29624_k.ptr()));;
			}
		}
		else if ((_20d8e672c_Arr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1c9bbc718:;
			{
				return static__1ba6ade72_array(_20d8e672c_Arr(_29624_k.ptr()));;
			}
		}
		else if ((_20d8e6c05_Fn(_29624_k.ptr()) != nullptr)) {
			_case_begin_1c9bbc790:;
			{
				return static__1ba6b0050_func(_20d8e6c05_Fn(_29624_k.ptr()));;
			}
		}
		_match_end_1c9bbbeba:;
	};
	{
		auto &_match_expr{ _29624_k.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ba6aa446_customType>>()) {
			_case_begin_1c9bbc86c:;
			{
				return _29624_k.get()._field_Kind.operator jule::Ptr<_1ba6aa446_customType>().get()._field_kind;;
			}
		}
		else {
			_case_begin_1c9bc3741:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1c9bc36db:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ba6aac2c_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "}";
	return _Stream;
}



inline void static__1ba6b2b35_ptr(jule::Str& _34524_s, jule::Ptr<_20d9001c5_Ptr> _34536_p) {
	_34524_s+=jule::Str("p", 1);
	static__1ba6b4021_codeMut(_34524_s,_34536_p.get()._field_Elem);
}



inline void static__1ba6b2ddd_sptr(jule::Str& _35025_s, jule::Ptr<_20d8ebb61_Sptr> _35037_p) {
	_35025_s+=jule::Str("x", 1);
	static__1ba6b4021_codeMut(_35025_s,_35037_p.get()._field_Elem);
}



inline void static__1ba6b3196_mapType(jule::Str& _35528_s, jule::Ptr<_20d8edb74_Map> _35540_p) {
	_35528_s+=jule::Str("m", 1);
	static__1ba6b4021_codeMut(_35528_s,_35540_p.get()._field_Key);
	static__1ba6b4021_codeMut(_35528_s,_35540_p.get()._field_Val);
}



inline void static__1ba6b344e_slice(jule::Str& _36126_s, jule::Ptr<_20d8ec5bd_Slc> _36138_slc) {
	_36126_s+=jule::Str("s", 1);
	static__1ba6b4021_codeMut(_36126_s,_36138_slc.get()._field_Elem);
}



inline void static__1ba6b3707_arr(jule::Str& _36624_s, jule::Ptr<_20d8ee768_Arr> _36636_arr) {
	_36624_s+=jule::Str("a", 1);
	_36624_s+=_20d8070cc_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_36636_arr.get()._field_N)),16LL);
	static__1ba6b4021_codeMut(_36624_s,_36636_arr.get()._field_Elem);
}



inline void static__1ba6b39b0_func(jule::Str& _37225_s, jule::Ptr<_20d814749_FnIns> _37237_f) {
	_37225_s+=jule::Str("f", 1);
	{
		auto &expr = _37237_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c9bc911a:;
		if (it != expr.end()) {
			jule::Ptr<_20d81455c_ParamIns> _37421_p = *it;
			{
				if (_37421_p.get()._field_Decl.get()._field_Reference) {
					_37225_s+=jule::Str("r", 1);
				};
				static__1ba6b4021_codeMut(_37225_s,_37421_p.get()._field_Kind);
			}
			_iter_next_1c9bc911a:;
			++it;
			goto _iter_begin_1c9bc911a;
		}
		_iter_end_1c9bc911a:;
	};
	if ((_37237_f.get()._field_Result != nullptr)) {
		static__1ba6b4021_codeMut(_37225_s,_37237_f.get()._field_Result);
	};
}



inline void static__1ba6b3c68_tup(jule::Str& _38524_s, jule::Ptr<_20d8ed14b_Tuple> _38536_tup) {
	{
		auto &expr = _38536_tup.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1c9bca99b:;
		if (it != expr.end()) {
			jule::Ptr<_20d8e3680_TypeKind> _38621_t = *it;
			{
				_38524_s+=jule::Str("_", 1);
				static__1ba6b4021_codeMut(_38524_s,_38621_t);
			}
			_iter_next_1c9bca99b:;
			++it;
			goto _iter_begin_1c9bca99b;
		}
		_iter_end_1c9bca99b:;
	};
}



inline void static__1ba6b4021_codeMut(jule::Str& _39228_s, jule::Ptr<_20d8e3680_TypeKind>& _39241_t) {
	{
		auto &_match_expr{ _39241_t.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_20d9001c5_Ptr>>()) {
			_case_begin_1c9bcb0ea:;
			{
				static__1ba6b2b35_ptr(_39228_s,_39241_t.get()._field_Kind.operator jule::Ptr<_20d9001c5_Ptr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20d8ebb61_Sptr>>()) {
			_case_begin_1c9bcba79:;
			{
				static__1ba6b2ddd_sptr(_39228_s,_39241_t.get()._field_Kind.operator jule::Ptr<_20d8ebb61_Sptr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20d8edb74_Map>>()) {
			_case_begin_1c9bcbae0:;
			{
				static__1ba6b3196_mapType(_39228_s,_39241_t.get()._field_Kind.operator jule::Ptr<_20d8edb74_Map>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20d8ec5bd_Slc>>()) {
			_case_begin_1c9bcbb56:;
			{
				static__1ba6b344e_slice(_39228_s,_39241_t.get()._field_Kind.operator jule::Ptr<_20d8ec5bd_Slc>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20d8ee768_Arr>>()) {
			_case_begin_1c9bcbbbc:;
			{
				static__1ba6b3707_arr(_39228_s,_39241_t.get()._field_Kind.operator jule::Ptr<_20d8ee768_Arr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20d814749_FnIns>>()) {
			_case_begin_1c9bcc2a5:;
			{
				static__1ba6b39b0_func(_39228_s,_39241_t.get()._field_Kind.operator jule::Ptr<_20d814749_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20d81b0ad_Enum>>()) {
			_case_begin_1c9bcc31b:;
			{
				jule::Ptr<_20d81b0ad_Enum> _40717_te = _39241_t.get()._field_Kind.operator jule::Ptr<_20d81b0ad_Enum>();;
				_39228_s+=static__1e1a1c199_toOut(_40717_te.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40717_te)));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20d81b82d_TypeEnum>>()) {
			_case_begin_1c9bcc382:;
			{
				jule::Ptr<_20d81b82d_TypeEnum> _41017_te = _39241_t.get()._field_Kind.operator jule::Ptr<_20d81b82d_TypeEnum>();;
				_39228_s+=static__1e1a1c199_toOut(_41017_te.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_41017_te)));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20cba5db6_StructIns>>()) {
			_case_begin_1c9bcc3e8:;
			{
				jule::Ptr<_20cba5db6_StructIns> _41321_si = _39241_t.get()._field_Kind.operator jule::Ptr<_20cba5db6_StructIns>();;
				_39228_s+=static__1e1a1d651_structureIns(_41321_si);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20d81a3ed_Trait>>()) {
			_case_begin_1c9bcc45e:;
			{
				jule::Ptr<_20d81a3ed_Trait> _41621_trt = _39241_t.get()._field_Kind.operator jule::Ptr<_20d81a3ed_Trait>();;
				_39228_s+=static__1e1a1cd6a_traitDecl(_41621_trt);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20d8e83cc_Prim>>()) {
			_case_begin_1c9bcc4c5:;
			{
				_39228_s+=_39241_t.get()._field_Kind.operator jule::Ptr<_20d8e83cc_Prim>().get()._field_Kind;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20d8ed14b_Tuple>>()) {
			_case_begin_1c9bcc53b:;
			{
				static__1ba6b3c68_tup(_39228_s,_39241_t.get()._field_Kind.operator jule::Ptr<_20d8ed14b_Tuple>());
			}
		}
		else {
			_case_begin_1c9bcb194:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:423:13"));;
			}
		}
		_match_end_1c9bcba24:;
	};
}



inline void static__1ba6b42c9_codeMut1(jule::Str& _42729_s, jule::Ptr<_20d8e3680_TypeKind>& _42742_t) {
	jule::Ptr<_20d8ed14b_Tuple> _42817_tup = _20d8e76a6_Tup(_42742_t.ptr());;
	if ((_42817_tup != nullptr)) {
		static__1ba6b3c68_tup(_42729_s,_42817_tup);
	} else {
		_42729_s+=static__1ba6b02e7_kind(_42742_t);
	};
}



inline jule::Str static__1ba6b4571_code(jule::Ptr<_20d8e3680_TypeKind>& _43625_t) {
	jule::Str _43717_s = jule::Str::alloc(0LL, 20LL);;
	static__1ba6b4021_codeMut(_43717_s,_43625_t);
	return _43717_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ba6b265c_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c9bd6743_Name(_1c9bd637a_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1c9bd6886_What(_1c9bd637a_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1c9bd69c9_Reset(_1c9bd637a_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1c9bd6b1c_Short(_1c9bd637a_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9bd637a_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c9bd88bb_Name(_1c9bda12b_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1c9bd9ba8_What(_1c9bda12b_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1c9bda417_Reset(_1c9bda12b_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1c9bda549_Short(_1c9bda12b_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9bda12b_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c9bdc1d8_Name(_1c9bdd948_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1c9bdd4c5_What(_1c9bdd948_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1c9bddc34_Reset(_1c9bdd948_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1c9bddd66_Short(_1c9bdd948_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9bdd948_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c9be0a49_Name(_1c9be22a9_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1c9be1d36_What(_1c9be22a9_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1c9be2595_Reset(_1c9be22a9_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1c9be26c7_Short(_1c9be22a9_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9be22a9_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c9be4366_Name(_1c9be5ac6_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1c9be5653_What(_1c9be5ac6_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1c9be5db2_Reset(_1c9be5ac6_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1c9be5ee4_Short(_1c9be5ac6_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c9be5ac6_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ba7150a5_FlagSet> static__1ba715391_New(void) {
	return jule::new_ptr<_1ba7150a5_FlagSet>(_1ba7150a5_FlagSet{._field_flags=jule::Slice<jule::Trait<_1ba713636_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1ba713636_CommonFlag> _1ba715825_FindFlag(_1ba7150a5_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1c9c00e33:;
		if (it != expr.end()) {
			jule::Trait<_1ba713636_CommonFlag> _7221_flag = *it;
			{
				if ((_1ba713636_CommonFlag_mptr_data[(_7221_flag).type_offset]._1ba6d3958_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1c9c00e33:;
			++it;
			goto _iter_begin_1c9c00e33;
		}
		_iter_end_1c9c00e33:;
	};
	return nullptr;;
}



inline jule::Trait<_1ba713636_CommonFlag> _1ba715b33_FindFlagShort(_1ba7150a5_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1c9c01560:;
		if (it != expr.end()) {
			jule::Trait<_1ba713636_CommonFlag> _8221_flag = *it;
			{
				if ((_1ba713636_CommonFlag_mptr_data[(_8221_flag).type_offset]._1ba6d3a8a_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1c9c01560:;
			++it;
			goto _iter_begin_1c9c01560;
		}
		_iter_end_1c9c01560:;
	};
	return nullptr;;
}



inline jule::Slice<jule::Trait<_1ba713636_CommonFlag>> _1ba715d97_Flags(_1ba7150a5_FlagSet* _self_) {
	return (*_self_)._field_flags;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1ba7161a5_Parse(_1ba7150a5_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1ba71777d_argParser _11617_ap = _1ba71777d_argParser{._field_set=(*_self_), ._field_args=_11524_args, };;
	({
		auto except = _1ba718b69_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline void _1ba716381_Reset(_1ba7150a5_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1c9c03320:;
		if (it != expr.end()) {
			jule::Trait<_1ba713636_CommonFlag> _12616_f = *it;
			{
				_1ba713636_CommonFlag_mptr_data[(_12616_f).type_offset]._1ba6d3d43_Reset(_12616_f);
			}
			_iter_next_1c9c03320:;
			++it;
			goto _iter_begin_1c9c03320;
		}
		_iter_end_1c9c03320:;
	};
}



inline jule::Ptr<_1c9be5ac6_Flag> _1c9c6c3ab_addFlagCommon(_1ba7150a5_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1c9c6da0b:;
			{
				goto _match_end_1c9c6d9a6;
			}
		}
		_match_end_1c9c6d9a6:;
	};
	if ((_1ba715825_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1ba715b33_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1c9be5ac6_Flag> _14817_flag = jule::new_ptr<_1c9be5ac6_Flag>(_1c9be5ac6_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_1ba713636_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;;
}

inline jule::Ptr<_1c9be22a9_Flag> _1c9c75caa_addFlagCommon(_1ba7150a5_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1c9c773a5:;
			{
				goto _match_end_1c9c7730b;
			}
		}
		_match_end_1c9c7730b:;
	};
	if ((_1ba715825_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1ba715b33_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1c9be22a9_Flag> _14817_flag = jule::new_ptr<_1c9be22a9_Flag>(_1c9be22a9_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_1ba713636_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;;
}



inline void _1c9c6a332_AddVar(_1ba7150a5_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1c9be5ac6_Flag> _17617_flag = _1c9c6c3ab_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1c9c73c64_AddVar(_1ba7150a5_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1c9be22a9_Flag> _17617_flag = _1c9c75caa_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1ba7150a5_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20cb70842_Str(_20cba5db6_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*_self_)._field_Decl.get()._field_Ident;
	if (((*_self_)._field_Generics.len() > 0LL)) {
		_25017_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_Generics;
			auto it = expr.begin();
			_iter_begin_1c8760db2:;
			if (it != expr.end()) {
				jule::Ptr<_20d8e1e53_InsGeneric> &_25420_g = *it;
				{
					_25017_kind+=_20d8e3a7b_Str(_25420_g.get()._field_Kind.ptr());
					_25017_kind+=jule::Str(",", 1);
				}
				_iter_next_1c8760db2:;
				++it;
				goto _iter_begin_1c8760db2;
			}
			_iter_end_1c8760db2:;
		};
		(_25017_kind).mut_slice(0LL,(_25017_kind.len() - 1LL));;
		_25017_kind+=jule::Str("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _20cb7b71b_Equals(jule::Ptr<_20cba5db6_StructIns> _self_, jule::Ptr<_20d8e3680_TypeKind> _26522_other) {
	jule::Ptr<_20cba5db6_StructIns> _26613_s = _20d8e6e69_Struct(_26522_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I64 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_20d8e3d89_Equals(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1c8764514:;
	}
	_iter_end_1c8764514:;;
	return true;;
}



inline jule::Bool _20cb7c871_Same(_20cba5db6_StructIns* _self_, jule::Ptr<_20cba5db6_StructIns> _29319_s) {
	if ((((*_self_)._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c8766956:;
		if (it != expr.end()) {
			jule::I64 _29713_i = it - expr.begin();
			jule::Ptr<_20d8e1e53_InsGeneric> &_29716_g = *it;
			{
				if ((!(_20d8e3d89_Equals(_29716_g.get()._field_Kind, _29319_s.get()._field_Generics[_29713_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1c8766956:;
			++it;
			_29713_i++;
			goto _iter_begin_1c8766956;
		}
		_iter_end_1c8766956:;
	};
	return true;;
}



inline jule::Ptr<_20d814370_Fn> _20cb7ebc5_FindMethod(_20cba5db6_StructIns* _self_, jule::Str _30729_ident, jule::Bool _30741_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c8768381:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> _30821_f = *it;
			{
				if (((_30821_f.get()._field_Statically == _30741_statically) && (_30821_f.get()._field_Ident == _30729_ident))) {
					return _30821_f;;
				};
			}
			_iter_next_1c8768381:;
			++it;
			goto _iter_begin_1c8768381;
		}
		_iter_end_1c8768381:;
	};
	return nullptr;;
}



inline jule::Ptr<_20cba5bc9_FieldIns> _20cb80ee5_FindField(_20cba5db6_StructIns* _self_, jule::Str _31828_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c87695b3:;
		if (it != expr.end()) {
			jule::Ptr<_20cba5bc9_FieldIns> _31921_f = *it;
			{
				if ((_31921_f.get()._field_Decl.get()._field_Ident == _31828_ident)) {
					return _31921_f;;
				};
			}
			_iter_next_1c87695b3:;
			++it;
			goto _iter_begin_1c87695b3;
		}
		_iter_end_1c87695b3:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d869eb9_Var> _20cb23163_FindStatic(_20cba5db6_StructIns* _self_, jule::Str _32929_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_1c8769c78:;
		if (it != expr.end()) {
			jule::Ptr<_20d869eb9_Var> _33021_v = *it;
			{
				if ((_33021_v.get()._field_Ident == _32929_ident)) {
					return _33021_v;;
				};
			}
			_iter_next_1c8769c78:;
			++it;
			goto _iter_begin_1c8769c78;
		}
		_iter_end_1c8769c78:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _20cba5db6_StructIns _Src) {
	_Stream << _20cb70842_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1e1335b06_ObjectDeadCode> static__1e13360ce_new(jule::Ptr<_1e1012d55_IR>& _3424_ir) {
	return jule::new_ptr<_1e1335b06_ObjectDeadCode>(_1e1335b06_ObjectDeadCode{._field_ir=_3424_ir});;
}



inline jule::Bool _1c9669616_isLive(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_, jule::Ptr<_20d81a3ed_Trait>& _4030_t) {
	jule::Slice<jule::Ptr<_20d81a3ed_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1c966b3a4:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1c966b0b8:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1c966ba8b:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_1c966ba8b:;
			++it;
			_5213_i++;
			goto _iter_begin_1c966ba8b;
		}
		_iter_end_1c966ba8b:;
	};
	return false;;
}

inline jule::Bool _1c966e64e_isLive(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_, jule::Ptr<_20d814749_FnIns>& _4030_t) {
	jule::Slice<jule::Ptr<_20d814749_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1c96716b7:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1c967160c:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1c9671d5a:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_1c9671d5a:;
			++it;
			_5213_i++;
			goto _iter_begin_1c9671d5a;
		}
		_iter_end_1c9671d5a:;
	};
	return false;;
}

inline jule::Bool _1c9677091_isLive(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_, jule::Ptr<_20cba5db6_StructIns>& _4030_t) {
	jule::Slice<jule::Ptr<_20cba5db6_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1c967a1d7:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1c9679e62:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1c967b051:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_1c967b051:;
			++it;
			_5213_i++;
			goto _iter_begin_1c967b051;
		}
		_iter_end_1c967b051:;
	};
	return false;;
}

inline jule::Bool _1c967cbbd_isLive(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_, jule::Ptr<_20d869eb9_Var>& _4030_t) {
	jule::Slice<jule::Ptr<_20d869eb9_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1c967e74c:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1c967e62b:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1c967e681:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_1c967e681:;
			++it;
			_5213_i++;
			goto _iter_begin_1c967e681;
		}
		_iter_end_1c967e681:;
	};
	return false;;
}



inline void _1c9669979_pushLive(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_, jule::Ptr<_20d81a3ed_Trait> _6035_t) {
	{
		
{
			_case_begin_1c966d4b6:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_1c966d164:;
	};
}

inline void _1c9670012_pushLive(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_, jule::Ptr<_20d814749_FnIns> _6035_t) {
	{
		
{
			_case_begin_1c9674049:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_1c9673cc4:;
	};
}

inline void _1c967636a_pushLive(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_, jule::Ptr<_20cba5db6_StructIns> _6035_t) {
	{
		
{
			_case_begin_1c9677a75:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_1c9677789:;
	};
}

inline void _1c967d031_pushLive(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_, jule::Ptr<_20d869eb9_Var> _6035_t) {
	{
		
{
			_case_begin_1c9681ba0:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_1c9681ac3:;
	};
}



inline void _1e1368210_setReferencesAsLive(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_, jule::Ptr<_20d8156e5_ReferenceStack>& _7344_rs) {
	if ((_7344_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _20d815a14_Len(_7344_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _20d815b46_At(_7344_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type_is_ptr<_20d81a3ed_Trait>()) {
					_case_begin_1c96683b2:;
					{
						jule::Ptr<_20d81a3ed_Trait> _8225_t = _7921_ref.operator jule::Ptr<_20d81a3ed_Trait>();;
						if (_1c9669616_isLive(_self_, _8225_t)) {
							goto _iter_next_1c9667735;
						};
						_1c9669979_pushLive(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1c9669429:;
							if (it != expr.end()) {
								jule::Ptr<_20d814370_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1c966e9b2:;
										if (it != expr.end()) {
											jule::Ptr<_20d814749_FnIns> _8833_mins = *it;
											{
												if (_1c966e64e_isLive(_self_, _8833_mins)) {
													goto _iter_next_1c966e9b2;
												};
												_1c9670012_pushLive(_self_, _8833_mins);
												_1e1368210_setReferencesAsLive(_self_, _8833_mins.get()._field_Refers);
											}
											_iter_next_1c966e9b2:;
											++it;
											goto _iter_begin_1c966e9b2;
										}
										_iter_end_1c966e9b2:;
									};
								}
								_iter_next_1c9669429:;
								++it;
								goto _iter_begin_1c9669429;
							}
							_iter_end_1c9669429:;
						};
					}
				}
				else if (_match_expr.type_is_ptr<_20d814749_FnIns>()) {
					_case_begin_1c9668428:;
					{
						jule::Ptr<_20d814749_FnIns> _9725_f = _7921_ref.operator jule::Ptr<_20d814749_FnIns>();;
						if (_1c966e64e_isLive(_self_, _9725_f)) {
							goto _match_end_1c966824c;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1c9677091_isLive(_self_, _9725_f.get()._field_Owner)))) {
								_1c967636a_pushLive(_self_, _9725_f.get()._field_Owner);
								_1e1368210_setReferencesAsLive(_self_, _9725_f.get()._field_Owner.get()._field_Refers);
							};
						};
						_1c9670012_pushLive(_self_, _9725_f);
						_1e1368210_setReferencesAsLive(_self_, _9725_f.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is_ptr<_20d869eb9_Var>()) {
					_case_begin_1c9668505:;
					{
						jule::Ptr<_20d869eb9_Var> _11025_v = _7921_ref.operator jule::Ptr<_20d869eb9_Var>();;
						if (_1c967cbbd_isLive(_self_, _11025_v)) {
							goto _match_end_1c966824c;
						};
						_1c967d031_pushLive(_self_, _11025_v);
						_1e1368210_setReferencesAsLive(_self_, _11025_v.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is_ptr<_20cba5db6_StructIns>()) {
					_case_begin_1c966856b:;
					{
						jule::Ptr<_20cba5db6_StructIns> _11725_s = _7921_ref.operator jule::Ptr<_20cba5db6_StructIns>();;
						if (_1c9677091_isLive(_self_, _11725_s)) {
							goto _match_end_1c966824c;
						};
						_1c967636a_pushLive(_self_, _11725_s);
						_1e1368210_setReferencesAsLive(_self_, _11725_s.get()._field_Refers);
						{
							auto &expr = _11725_s.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1c9689bec:;
							if (it != expr.end()) {
								jule::Ptr<_20d814370_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1c968a428:;
										if (it != expr.end()) {
											jule::Ptr<_20d814749_FnIns> _12433_mins = *it;
											{
												if (_1c966e64e_isLive(_self_, _12433_mins)) {
													goto _iter_next_1c968a428;
												};
												_1c9670012_pushLive(_self_, _12433_mins);
												_1e1368210_setReferencesAsLive(_self_, _12433_mins.get()._field_Refers);
											}
											_iter_next_1c968a428:;
											++it;
											goto _iter_begin_1c968a428;
										}
										_iter_end_1c968a428:;
									};
								}
								_iter_next_1c9689bec:;
								++it;
								goto _iter_begin_1c9689bec;
							}
							_iter_end_1c9689bec:;
						};
					}
				}
				_match_end_1c966824c:;
			};
		}
	_iter_next_1c9667735:;
	}
	_iter_end_1c9667735:;;
}



inline void _1e1368485_inits(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_, jule::Ptr<_20d846ea7_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c966d43e:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1c968aaee:;
					if (it != expr.end()) {
						jule::Ptr<_20d814370_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_Ident == jule::Str("init", 4))) {
								jule::Ptr<_20d814749_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1e1368210_setReferencesAsLive(_self_, _14029_ins.get()._field_Refers);
							};
						}
						_iter_next_1c968aaee:;
						++it;
						goto _iter_begin_1c968aaee;
					}
					_iter_end_1c968aaee:;
				};
			}
			_iter_next_1c966d43e:;
			++it;
			goto _iter_begin_1c966d43e;
		}
		_iter_end_1c966d43e:;
	};
}



inline void _1e136870a_collectLivePackage(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_, jule::Ptr<_20d846ea7_Package>& _14843_pkg) {
	_1e1368485_inits(_self_, _14843_pkg);
	if (_22eb60ac9_Test) {
		{
			auto &expr = _14843_pkg.get()._field_Files;
			auto it = expr.begin();
			_iter_begin_1c968ee99:;
			if (it != expr.end()) {
				jule::Ptr<_20d8aca67_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_Funcs;
						auto it = expr.begin();
						_iter_begin_1c96907b3:;
						if (it != expr.end()) {
							jule::Ptr<_20d814370_Fn> _15529_f = *it;
							{
								if (_1e136a71d_hasDirective(_15529_f.get()._field_Directives,jule::Str("test", 4))) {
									jule::Ptr<_20d814749_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1e1368210_setReferencesAsLive(_self_, _15733_ins.get()._field_Refers);
								};
							}
							_iter_next_1c96907b3:;
							++it;
							goto _iter_begin_1c96907b3;
						}
						_iter_end_1c96907b3:;
					};
				}
				_iter_next_1c968ee99:;
				++it;
				goto _iter_begin_1c968ee99;
			}
			_iter_end_1c968ee99:;
		};
	};
}



inline void _1e13688d6_collectLive(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1c968d0da:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_1e136870a_collectLivePackage(_self_, _16721_used.get()._field_Package);
				};
			}
			_iter_next_1c968d0da:;
			++it;
			goto _iter_begin_1c968d0da;
		}
		_iter_end_1c968d0da:;
	};
	_1e136870a_collectLivePackage(_self_, _self_.get()._field_ir.get()._field_Main);
	jule::Ptr<_20d814370_Fn> _17517_main = _20d84875b_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_20d814749_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1e1368210_setReferencesAsLive(_self_, _17617_ins.get()._field_Refers);
}



inline void _1e1368b5b_removeDeadGlobals(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_20d869eb9_Var>>& _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18142_vars.len())) {
		{
			jule::Ptr<_20d869eb9_Var> _18417_v = _18142_vars[_18217_i];;
			if (_1c967cbbd_isLive(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_1c9695510;
			};
			_18142_vars=jule::append(_18142_vars.slice(0LL,_18217_i),_18142_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_1c9695510:;
	}
	_iter_end_1c9695510:;;
}



inline void _1e1368dd1_removeDeadFns(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_20d814370_Fn>>& _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19338_funcs.len())) {
		{
			jule::Ptr<_20d814370_Fn> _19621_f = _19338_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_20d814749_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1c966e64e_isLive(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_1c9698942;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL,_19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1c9698942:;
			}
			_iter_end_1c9698942:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				_19338_funcs=jule::append(_19338_funcs.slice(0LL,_19417_i),_19338_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_1c96959a5;
			};
			(_19417_i)++;
		}
	_iter_next_1c96959a5:;
	}
	_iter_end_1c96959a5:;;
}



inline void _1e1369156_removeDeadStructs(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_20cba59dc_Struct>>& _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21442_structs.len())) {
		{
			jule::Ptr<_20cba59dc_Struct> _21721_s = _21442_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_20cba5db6_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1e1368dd1_removeDeadFns(_self_, _22025_ins.get()._field_Methods);
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1c9677091_isLive(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_1c969c9bd;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL,_21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1c969c9bd:;
			}
			_iter_end_1c969c9bd:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				_21442_structs=jule::append(_21442_structs.slice(0LL,_21517_i),_21442_structs.slice((_21517_i + 1LL)));
				goto _iter_next_1c969a735;
			};
			(_21517_i)++;
		}
	_iter_next_1c969a735:;
	}
	_iter_end_1c969a735:;;
}



inline void _1e13693cb_removeDeadTraits(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_20d81a3ed_Trait>>& _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23641_traits.len())) {
		{
			jule::Ptr<_20d81a3ed_Trait> _23921_t = _23641_traits[_23717_i];;
			if ((!(_1c9669616_isLive(_self_, _23921_t)))) {
				_23641_traits=jule::append(_23641_traits.slice(0LL,_23717_i),_23641_traits.slice((_23717_i + 1LL)));
				goto _iter_next_1c96a0262;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_20cba59dc_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1c96a1eab;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL,_24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1c96a1eab:;
			}
			_iter_end_1c96a1eab:;;
			(_23717_i)++;
		}
	_iter_next_1c96a0262:;
	}
	_iter_end_1c96a0262:;;
}



inline void _1e1369651_removeDeadsFile(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_, jule::Ptr<_20d8aca67_SymbolTable>& _25740_file) {
	_1e1368dd1_removeDeadFns(_self_, _25740_file.get()._field_Funcs);
	_1e1369156_removeDeadStructs(_self_, _25740_file.get()._field_Structs);
	_1e13693cb_removeDeadTraits(_self_, _25740_file.get()._field_Traits);
	_1e1368b5b_removeDeadGlobals(_self_, _25740_file.get()._field_Vars);
}



inline void _1e13698c6_removeDeadsPackage(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_, jule::Ptr<_20d846ea7_Package>& _26443_pkg) {
	{
		auto &expr = _26443_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c96a691c:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _26521_file = *it;
			{
				_1e1369651_removeDeadsFile(_self_, _26521_file);
			}
			_iter_next_1c96a691c:;
			++it;
			goto _iter_begin_1c96a691c;
		}
		_iter_end_1c96a691c:;
	};
}



inline void _1e1369aa2_removeDeads(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1c96a718c:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_1e13698c6_removeDeadsPackage(_self_, _27121_used.get()._field_Package);
				};
			}
			_iter_next_1c96a718c:;
			++it;
			goto _iter_begin_1c96a718c;
		}
		_iter_end_1c96a718c:;
	};
	_1e13698c6_removeDeadsPackage(_self_, _self_.get()._field_ir.get()._field_Main);
}



inline void _1e1369c7d_elimanate(jule::Ptr<_1e1335b06_ObjectDeadCode> _self_) {
	_1e13688d6_collectLive(_self_);
	_1e1369aa2_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1e1335b06_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ba6a5e14_ObjectCoder> static__1e1a4d65e_New(jule::Ptr<_1e1012d55_IR>& _7424_ir, _1e1a4e473_SerializationInfo _7433_info) {
	jule::Ptr<_1ba6a5e14_ObjectCoder> _7517_oc = jule::new_ptr<_1ba6a5e14_ObjectCoder>(_1ba6a5e14_ObjectCoder{._field_ir=_7424_ir, ._field_info=_7433_info, });;
	_7517_oc.get()._field_ec=static__1e1a0995b_new(_7517_oc);
	_7517_oc.get()._field_sc=static__1e1a01ed6_new(_7517_oc);
	return _7517_oc;;
}



inline void _1e1a533ab_write(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Str _8425_s) {
	_self_.get()._field_Obj+=_8425_s;
}



inline void _1e1a85e8d_addIndent(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	;
	_self_.get()._field_indentBuffer+=jule::Str("\t", 1);
}



inline void _1e1a23e70_doneIndent(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL,(_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1e1a44358_indent(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline void _1e1a8352e_pushResult(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20d814370_Fn>& _10435_f) {
	if ((_20cbeec56_IsVoid(_10435_f.ptr()) || (_10435_f.get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _10917_n = _10435_f.get()._field_Instances.len();;
	if ((_10435_f.get()._field_Generics.len() == 0LL)) {
		_10917_n=1LL;
	};
	{
		auto expr = _10435_f.get()._field_Instances.slice(0LL,_10917_n);
		auto it = expr.begin();
		_iter_begin_1c9ace828:;
		if (it != expr.end()) {
			jule::Ptr<_20d814749_FnIns> _11321_ins = *it;
			{
				jule::Str _11417_s = static__1ba6b4571_code(_11321_ins.get()._field_Result);;
				jule::Bool _11521_ok = false;;
				_self_.get()._field_resultMap.lookup(_11417_s, nullptr, &(_11521_ok));
				if (_11521_ok) {
					goto _iter_next_1c9ace828;
				};
				_self_.get()._field_resultMap[_11417_s]=false;
				_1e1a533ab_write(_self_, jule::Str("struct ", 7));
				_1e1a533ab_write(_self_, _11417_s);
				_1e1a533ab_write(_self_, jule::Str(" {\n", 3));
				_1e1a85e8d_addIndent(_self_);
				{
					auto &expr = _20d8e76a6_Tup(_11321_ins.get()._field_Result.ptr()).get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1c9ad250c:;
					if (it != expr.end()) {
						jule::I64 _12418_i = it - expr.begin();
						jule::Ptr<_20d8e3680_TypeKind> _12425_t = *it;
						{
							_1e1a44358_indent(_self_);
							_1e1a533ab_write(_self_, static__1ba6b02e7_kind(_12425_t));
							_1e1a533ab_write(_self_, jule::Str(" ", 1));
							_1e1a533ab_write(_self_, jule::Str("__jule_result_arg", 17));
							_1e1a533ab_write(_self_, _20d80720e_Itoa(_12418_i));
							_1e1a533ab_write(_self_, jule::Str(";\n", 2));
						}
						_iter_next_1c9ad250c:;
						++it;
						_12418_i++;
						goto _iter_begin_1c9ad250c;
					}
					_iter_end_1c9ad250c:;
				};
				_1e1a23e70_doneIndent(_self_);
				_1e1a44358_indent(_self_);
				_1e1a533ab_write(_self_, jule::Str("};\n", 3));
				_1e1a44358_indent(_self_);
			}
			_iter_next_1c9ace828:;
			++it;
			goto _iter_begin_1c9ace828;
		}
		_iter_end_1c9ace828:;
	};
}



inline jule::I64 _1e1a83a4b_findTypeOffset(_1ba6a5e14_ObjectCoder* _self_, jule::Ptr<_20d81a3ed_Trait> _13929_t, jule::Ptr<_20d8e3680_TypeKind> _13944_k) {
	if ((_13929_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_20cba5db6_StructIns> _14317_s = nullptr;;
	if ((_20d8e5c7b_Sptr(_13944_k.ptr()) != nullptr)) {
		_13944_k=_20d8e5c7b_Sptr(_13944_k.ptr()).get()._field_Elem;
	};
	if ((_20d8e6e69_Struct(_13944_k.ptr()) == nullptr)) {
		return -1LL;;
	};
	_14317_s=_20d8e6e69_Struct(_13944_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1c9ad7369:;
		if (it != expr.end()) {
			jule::Ptr<_1e1a24987_traitHash> &_15116_hash = *it;
			{
				if (((_15116_hash.get()._field_t == _13929_t) && (_15116_hash.get()._field_s == _14317_s))) {
					return _15116_hash.get()._field_i;;
				};
			}
			_iter_next_1c9ad7369:;
			++it;
			goto _iter_begin_1c9ad7369;
		}
		_iter_end_1c9ad7369:;
	};
	return -1LL;;
}



inline void _1e1a8709e_locInfo(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20b4e5581_Token>& _16028_t) {
	jule::Str &_16114_loc = _16028_t.get()._field_File.get()._field_Path;;
	if (_22eb61536_Production) {
		{
			
			if (_20b135bc7_HasPrefix(_16114_loc,_20b20556b_PathStdlib)) {
				_case_begin_1c9ad96e0:;
				{
					_1e1a533ab_write(_self_, _1e1a164d4_cstrBytes(static_cast<jule::Slice<jule::U8>>(_16114_loc.slice((_22321c8e0_Dir(_20b20556b_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_20b135bc7_HasPrefix(_16114_loc,_self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1c9ad9db6:;
				{
					_1e1a533ab_write(_self_, _1e1a164d4_cstrBytes(static_cast<jule::Slice<jule::U8>>(_16114_loc.slice((_22321c8e0_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1c9ad9349:;
				{
					_1e1a533ab_write(_self_, _1e1a164d4_cstrBytes(static_cast<jule::Slice<jule::U8>>(_16114_loc)));
				}
			}
			_match_end_1c9ad927d:;
		};
	} else {
		_1e1a533ab_write(_self_, _1e1a164d4_cstrBytes(static_cast<jule::Slice<jule::U8>>(_16114_loc)));
	};
	_1e1a533ab_write(_self_, jule::Str(":", 1));
	_1e1a533ab_write(_self_, _20d80720e_Itoa(_16028_t.get()._field_Row));
	_1e1a533ab_write(_self_, jule::Str(":", 1));
	_1e1a533ab_write(_self_, _20d80720e_Itoa(_16028_t.get()._field_Column));
}



inline void _1e1a8d083_head(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	_1e1aa5aa1_Time _18713_time = static__1e1aa6145_Now();;
	_1e1aa540d_AbsTime _18813_abs = _1e1aa7784_Abs(&_18713_time);;
	_1e1a533ab_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1e1a533ab_write(_self_, jule::Str("// JuleC version: ", 18));
	_1e1a533ab_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_1e1a533ab_write(_self_, jule::Str("\n", 1));
	_1e1a533ab_write(_self_, jule::Str("// Date: ", 9));
	_1e1a533ab_write(_self_, _20d806e9a_FmtUint(_18813_abs._field_Day,10LL));
	_1e1a533ab_write(_self_, jule::Str("/", 1));
	_1e1a533ab_write(_self_, _20d806e9a_FmtUint(_18813_abs._field_Month,10LL));
	_1e1a533ab_write(_self_, jule::Str("/", 1));
	_1e1a533ab_write(_self_, _20d806e9a_FmtUint(_18813_abs._field_Year,10LL));
	_1e1a533ab_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1e1a533ab_write(_self_, _self_.get()._field_info._field_Compiler);
	_1e1a533ab_write(_self_, jule::Str(" ", 1));
	_1e1a533ab_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1e1a533ab_write(_self_, jule::Str("\n\n", 2));
	if (_22eb61536_Production) {
		_1e1a533ab_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_22eb60d93_RC))) {
		_1e1a533ab_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_22eb6126c_Safety))) {
		_1e1a533ab_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1e1a48956_links(_self_);
	_1e1a533ab_write(_self_, jule::Str("\n\n#include \"", 12));
	_1e1a533ab_write(_self_, _20b215988_PathApi);
	_1e1a533ab_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1e1a48956_links(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1c9ae5553:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _22516_used = *it;
			{
				{
					
					if ((!(_22516_used.get()._field_CppLinked))) {
						_case_begin_1c9ae6400:;
						{
							goto _iter_next_1c9ae5553;
						}
					}
					else if (_20b1aee3d_IsStdHeaderPath(_22516_used.get()._field_Path)) {
						_case_begin_1c9ae60c0:;
						{
							_1e1a533ab_write(_self_, jule::Str("#include ", 9));
							_1e1a533ab_write(_self_, _22516_used.get()._field_Path);
							_1e1a533ab_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_1c9ae6059:;
						{
							_1e1a533ab_write(_self_, jule::Str("#include \"", 10));
							_1e1a533ab_write(_self_, _22516_used.get()._field_Path);
							_1e1a533ab_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1c9ae5e8d:;
				};
			}
			_iter_next_1c9ae5553:;
			++it;
			goto _iter_begin_1c9ae5553;
		}
		_iter_end_1c9ae5553:;
	};
}



inline void _1e1a47b86_prepareStructures(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c9ae76a9:;
		if (it != expr.end()) {
			jule::Ptr<_20cba59dc_Struct> _24221_s = *it;
			{
				if ((_24221_s.get()._field_Token != nullptr)) {
					_1ba6a981e_prepareStructure(_24221_s);
				};
			}
			_iter_next_1c9ae76a9:;
			++it;
			goto _iter_begin_1c9ae76a9;
		}
		_iter_end_1c9ae76a9:;
	};
}



inline void _1e1a859e8_iterPackages(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_20d846ea7_Package>&)> _24932_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1c9ae9689:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _25021_used = *it;
			{
				if ((!(_25021_used.get()._field_CppLinked))) {
					_24932_f(_25021_used.get()._field_Package);
				};
			}
			_iter_next_1c9ae9689:;
			++it;
			goto _iter_begin_1c9ae9689;
		}
		_iter_end_1c9ae9689:;
	};
	_24932_f(_self_.get()._field_ir.get()._field_Main);
}



inline void _1e1a246e0_buildTraitMap(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	_1e1a859e8_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20d846ea7_Package>&)>([=](jule::Ptr<_20d846ea7_Package>& _25935_pkg) mutable -> void {
		_1ba6a96dc_iterFiles(_25935_pkg,jule::Fn<void(jule::Ptr<_20d8aca67_SymbolTable>&)>([=](jule::Ptr<_20d8aca67_SymbolTable>& _26036_file) mutable -> void {
			{
				auto &expr = _26036_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1c9aec901:;
				if (it != expr.end()) {
					jule::Ptr<_20d81a3ed_Trait> _26129_t = *it;
					{
						if ((_26129_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_26129_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1e1a24987_traitHash>(_1e1a24987_traitHash{._field_t=_26129_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1c9aec901;
						};
						jule::I64 _27329_i = 0LL;;
						{
							auto &expr = _26129_t.get()._field_Implemented;
							auto it = expr.begin();
							_iter_begin_1c9aed193:;
							if (it != expr.end()) {
								jule::Ptr<_20cba59dc_Struct> _27433_s = *it;
								{
									{
										auto &expr = _27433_s.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1c9aee859:;
										if (it != expr.end()) {
											jule::Ptr<_20cba5db6_StructIns> _27537_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1e1a24987_traitHash>(_1e1a24987_traitHash{._field_t=_26129_t, ._field_s=_27537_ins, ._field_i=_27329_i}));;
												(_27329_i)++;
											}
											_iter_next_1c9aee859:;
											++it;
											goto _iter_begin_1c9aee859;
										}
										_iter_end_1c9aee859:;
									};
								}
								_iter_next_1c9aed193:;
								++it;
								goto _iter_begin_1c9aed193;
							}
							_iter_end_1c9aed193:;
						};
					}
					_iter_next_1c9aec901:;
					++it;
					goto _iter_begin_1c9aec901;
				}
				_iter_end_1c9aec901:;
			};
		}));
	}));
}



inline void _1ba6a64b9_traitDecls(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	_1e1a859e8_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20d846ea7_Package>&)>([=](jule::Ptr<_20d846ea7_Package>& _29035_pkg) mutable -> void {
		_1ba6a96dc_iterFiles(_29035_pkg,jule::Fn<void(jule::Ptr<_20d8aca67_SymbolTable>&)>([=](jule::Ptr<_20d8aca67_SymbolTable>& _29136_file) mutable -> void {
			{
				auto &expr = _29136_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1c9b022a7:;
				if (it != expr.end()) {
					jule::Ptr<_20d81a3ed_Trait> _29229_t = *it;
					{
						if ((_29229_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1e1a44358_indent(_self_);
						_1e1a533ab_write(_self_, jule::Str("struct ", 7));
						_1e1a533ab_write(_self_, static__1e1a1cd6a_traitDecl(_29229_t));
						_1e1a533ab_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1c9b022a7:;
					++it;
					goto _iter_begin_1c9b022a7;
				}
				_iter_end_1c9b022a7:;
			};
		}));
	}));
}



inline void _1ba6a65eb_structurePlainDecl(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20cba59dc_Struct>& _30543_s) {
	{
		auto &expr = _30543_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c9b01d45:;
		if (it != expr.end()) {
			jule::Ptr<_20cba5db6_StructIns> _30621_ins = *it;
			{
				_1e1a533ab_write(_self_, jule::Str("struct ", 7));
				_1e1a533ab_write(_self_, static__1e1a1d651_structureIns(_30621_ins));
				_1e1a533ab_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1c9b01d45:;
			++it;
			goto _iter_begin_1c9b01d45;
		}
		_iter_end_1c9b01d45:;
	};
}



inline void _1ba6a672d_structurePlainDecls(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c9b05255:;
		if (it != expr.end()) {
			jule::Ptr<_20cba59dc_Struct> _31421_s = *it;
			{
				if ((_31421_s.get()._field_Token != nullptr)) {
					_1ba6a65eb_structurePlainDecl(_self_, _31421_s);
				};
			}
			_iter_next_1c9b05255:;
			++it;
			goto _iter_begin_1c9b05255;
		}
		_iter_end_1c9b05255:;
	};
}



inline void _1ba6a6860_fieldDecl(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20cba5bc9_FieldIns>& _32134_f) {
	_1e1a533ab_write(_self_, static__1ba6b02e7_kind(_32134_f.get()._field_Kind));
	_1e1a533ab_write(_self_, jule::Str(" ", 1));
	_1e1a533ab_write(_self_, static__1e1a1d8e8_field(_32134_f.get()._field_Decl));
	if ((_32134_f.get()._field_Default == nullptr)) {
		if (_1ba6b6584_shouldInitialized(_32134_f.get()._field_Kind)) {
			_1e1a533ab_write(_self_, jule::Str(" = ", 3));
			_1e1a15aee_initExpr(_self_.get()._field_ec, _32134_f.get()._field_Kind);
		};
	} else {
		_1e1a533ab_write(_self_, jule::Str(" = ", 3));
		_1e1a15604_expr(_self_.get()._field_ec, _32134_f.get()._field_Default.get()._field_Model);
	};
	_1e1a533ab_write(_self_, jule::Str(";", 1));
}



inline void _1ba6a6992_structureDestructor(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20cba5db6_StructIns>& _33944_s) {
	;
	jule::Ptr<_20d814370_Fn> _34213_disposeMethod = _20cb7ebc5_FindMethod(_33944_s.ptr(), jule::Str("Dispose", 7),false);;
	jule::Bool _34317_disposed = static__20d86b3d8_Dispose(_34213_disposeMethod);;
	if ((!(_34317_disposed))) {
		return;;
	};
	_1e1a533ab_write(_self_, jule::Str("~", 1));
	_1e1a533ab_write(_self_, static__1e1a1d651_structureIns(_33944_s));
	_1e1a533ab_write(_self_, jule::Str("(void) { ", 9));
	_1e1a533ab_write(_self_, static__1e1a1c82b_func(_34213_disposeMethod));
	_1e1a533ab_write(_self_, jule::Str("(this); }", 9));
}



inline void _1ba6a6ac4_structureDeriveDefsDecls(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20cba5db6_StructIns>& _35545_s) {
	if (_20cb65bde_IsDerives(_35545_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1e1a44358_indent(_self_);
		_1e1a533ab_write(_self_, static__1e1a18409_cloneFuncDecl(_35545_s.get()._field_Decl));
		_1e1a533ab_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1ba6a6c06_structureOperatorEq(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Str& _36340_ident, jule::Ptr<_20cba5db6_StructIns>& _36357_s) {
	if ((!(_36357_s.get()._field_Comparable))) {
		return;;
	};
	if ((_36357_s.get()._field_Operators._field_Eq != nullptr)) {
		_1ba6a6e6a_structureOperator(_self_, _36340_ident,_36357_s.get()._field_Operators._field_Eq,jule::Str("==", 2));
		return;;
	};
	_1e1a44358_indent(_self_);
	if (_20da5c288_Inline) {
		_1e1a533ab_write(_self_, jule::Str("inline ", 7));
	};
	_1e1a533ab_write(_self_, jule::Str("bool operator==(", 16));
	_1e1a533ab_write(_self_, _36340_ident);
	_1e1a533ab_write(_self_, jule::Str(" _other) {", 10));
	if ((_36357_s.get()._field_Fields.len() > 0LL)) {
		_1e1a85e8d_addIndent(_self_);
		_1e1a533ab_write(_self_, jule::Str("\n", 1));
		_1e1a44358_indent(_self_);
		_1e1a533ab_write(_self_, jule::Str("return ", 7));
		_1e1a85e8d_addIndent(_self_);
		jule::Bool _38621_writed = false;;
		{
			auto &expr = _36357_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1c9b13010:;
			if (it != expr.end()) {
				jule::Ptr<_20cba5bc9_FieldIns> _38725_f = *it;
				{
					jule::Ptr<_20cba5db6_StructIns> _38921_strct = _20d8e6e69_Struct(_38725_f.get()._field_Kind.ptr());;
					if ((((_38921_strct != nullptr) && (_38921_strct.get()._field_Decl != nullptr)) && _38921_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_1c9b13010;
					};
					if (_38621_writed) {
						_1e1a533ab_write(_self_, jule::Str(" &&", 3));
					};
					_38621_writed=true;
					_1e1a533ab_write(_self_, jule::Str("\n", 1));
					_1e1a44358_indent(_self_);
					_1e1a533ab_write(_self_, jule::Str("this->", 6));
					jule::Str _40021_fIdent = static__1e1a1d8e8_field(_38725_f.get()._field_Decl);;
					_1e1a533ab_write(_self_, _40021_fIdent);
					_1e1a533ab_write(_self_, jule::Str(" == _other.", 11));
					_1e1a533ab_write(_self_, _40021_fIdent);
				}
				_iter_next_1c9b13010:;
				++it;
				goto _iter_begin_1c9b13010;
			}
			_iter_end_1c9b13010:;
		};
		_1e1a23e70_doneIndent(_self_);
		if ((!(_38621_writed))) {
			_1e1a533ab_write(_self_, jule::Str("true", 4));
		};
		_1e1a533ab_write(_self_, jule::Str(";\n", 2));
		_1e1a23e70_doneIndent(_self_);
		_1e1a44358_indent(_self_);
		_1e1a533ab_write(_self_, jule::Str("}", 1));
	} else {
		_1e1a533ab_write(_self_, jule::Str(" return true; }", 15));
	};
	_1e1a533ab_write(_self_, jule::Str("\n\n", 2));
}



inline void _1ba6a6d38_structureOperatorNotEq(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Str& _41943_ident, jule::Ptr<_20cba5db6_StructIns>& _41960_s) {
	if ((!(_41960_s.get()._field_Comparable))) {
		return;;
	};
	_1e1a44358_indent(_self_);
	if (_20da5c288_Inline) {
		_1e1a533ab_write(_self_, jule::Str("inline ", 7));
	};
	_1e1a533ab_write(_self_, jule::Str("bool operator!=(", 16));
	_1e1a533ab_write(_self_, _41943_ident);
	_1e1a533ab_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1ba6a6e6a_structureOperator(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Str& _43338_ident, jule::Ptr<_20d814749_FnIns>& _43355_f, jule::Str _43366_op) {
	if ((_43355_f == nullptr)) {
		return;;
	};
	jule::Bool _43813_unary = (_43355_f.get()._field_Params.len() == 1LL);;
	jule::Bool _43913_assignment = _20cbeec56_IsVoid(_43355_f.get()._field_Decl.ptr());;
	_1e1a44358_indent(_self_);
	if (_20da5c288_Inline) {
		_1e1a533ab_write(_self_, jule::Str("inline ", 7));
	};
	if (_43913_assignment) {
		_1e1a533ab_write(_self_, _43338_ident);
		_1e1a533ab_write(_self_, jule::Str("&", 1));
	} else {
		if ((_20d8e5a17_Prim(_43355_f.get()._field_Result.ptr()) == nullptr)) {
			_1e1a533ab_write(_self_, _43338_ident);
		} else {
			_1e1a533ab_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1e1a533ab_write(_self_, jule::Str(" operator", 9));
	_1e1a533ab_write(_self_, _43366_op);
	_1e1a533ab_write(_self_, jule::Str("(", 1));
	if ((!(_43813_unary))) {
		jule::Ptr<_20d81455c_ParamIns> _46121_p = _43355_f.get()._field_Params[1LL];;
		_1e1a533ab_write(_self_, static__1ba6ae4b1_paramIns(_46121_p));
		_1e1a533ab_write(_self_, jule::Str(" _other", 7));
	};
	_1e1a533ab_write(_self_, jule::Str(") { ", 4));
	if ((!(_43913_assignment))) {
		_1e1a533ab_write(_self_, jule::Str("return ", 7));
	};
	_1e1a533ab_write(_self_, static__1e1a1cac3_funcIns(_43355_f));
	if ((!(_43813_unary))) {
		_1e1a533ab_write(_self_, jule::Str("(this, _other); ", 16));
		if (_43913_assignment) {
			_1e1a533ab_write(_self_, jule::Str("return *this; ", 14));
		};
		_1e1a533ab_write(_self_, jule::Str("}", 1));
	} else {
		_1e1a533ab_write(_self_, jule::Str("(this); }", 9));
	};
	_1e1a533ab_write(_self_, jule::Str("\n\n", 2));
}



inline void _1ba6a709c_structureOperators(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20cba5db6_StructIns>& _48243_s) {
	jule::Str _48313_ident = static__1e1a1d651_structureIns(_48243_s);;
	_1ba6a6c06_structureOperatorEq(_self_, _48313_ident,_48243_s);
	_1ba6a6d38_structureOperatorNotEq(_self_, _48313_ident,_48243_s);
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_Gt,jule::Str(">", 1));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_GtEq,jule::Str(">=", 2));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_Lt,jule::Str("<", 1));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_LtEq,jule::Str("<=", 2));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_Shl,jule::Str("<<", 2));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_Shr,jule::Str(">>", 2));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_Add,jule::Str("+", 1));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_Sub,jule::Str("-", 1));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_Div,jule::Str("/", 1));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_Mul,jule::Str("*", 1));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_Mod,jule::Str("%", 1));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_BitAnd,jule::Str("&", 1));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_BitOr,jule::Str("|", 1));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_BitXor,jule::Str("^", 1));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_Neg,jule::Str("-", 1));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_Pos,jule::Str("+", 1));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_BitNot,jule::Str("~", 1));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_AddAssign,jule::Str("+=", 2));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_SubAssign,jule::Str("-=", 2));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_DivAssign,jule::Str("/=", 2));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_MulAssign,jule::Str("*=", 2));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_ModAssign,jule::Str("%=", 2));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_ShlAssign,jule::Str("<<=", 3));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_ShrAssign,jule::Str(">>=", 3));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_BitOrAssign,jule::Str("|=", 2));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_BitAndAssign,jule::Str("&=", 2));
	_1ba6a6e6a_structureOperator(_self_, _48313_ident,_48243_s.get()._field_Operators._field_BitXorAssign,jule::Str("^=", 2));
}



inline void _1ba6a71ce_structureInsDecl(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20cba5db6_StructIns>& _52141_s) {
	if ((_52141_s.get()._field_Methods.len() > 0LL)) {
		{
			auto &expr = _52141_s.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1c9b30d63:;
			if (it != expr.end()) {
				jule::Ptr<_20d814370_Fn> _52325_m = *it;
				{
					_1e1a8352e_pushResult(_self_, _52325_m);
					_1ba6a77d9_funcDecl(_self_, _52325_m,false);
				}
				_iter_next_1c9b30d63:;
				++it;
				goto _iter_begin_1c9b30d63;
			}
			_iter_end_1c9b30d63:;
		};
	};
	_1e1a533ab_write(_self_, jule::Str("struct ", 7));
	jule::Str _53013_outIdent = static__1e1a1d651_structureIns(_52141_s);;
	_1e1a533ab_write(_self_, _53013_outIdent);
	_1e1a533ab_write(_self_, jule::Str(" {\n", 3));
	_1e1a85e8d_addIndent(_self_);
	{
		auto &expr = _52141_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c9b32d32:;
		if (it != expr.end()) {
			jule::Ptr<_20cba5bc9_FieldIns> _53621_f = *it;
			{
				_1e1a44358_indent(_self_);
				_1ba6a6860_fieldDecl(_self_, _53621_f);
				_1e1a533ab_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1c9b32d32:;
			++it;
			goto _iter_begin_1c9b32d32;
		}
		_iter_end_1c9b32d32:;
	};
	_1e1a44358_indent(_self_);
	_1ba6a6992_structureDestructor(_self_, _52141_s);
	_1e1a533ab_write(_self_, jule::Str("\n\n", 2));
	_1e1a44358_indent(_self_);
	_1e1a533ab_write(_self_, _53013_outIdent);
	_1e1a533ab_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1ba6a6ac4_structureDeriveDefsDecls(_self_, _52141_s);
	_1ba6a709c_structureOperators(_self_, _52141_s);
	_1e1a533ab_write(_self_, jule::Str("\n", 1));
	_1e1a23e70_doneIndent(_self_);
	_1e1a44358_indent(_self_);
	_1e1a533ab_write(_self_, jule::Str("};", 2));
}



inline void _1ba6a7311_structureDecl(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20cba59dc_Struct>& _56138_s) {
	{
		auto &expr = _56138_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c9b36e35:;
		if (it != expr.end()) {
			jule::Ptr<_20cba5db6_StructIns> _56221_ins = *it;
			{
				_1ba6a71ce_structureInsDecl(_self_, _56221_ins);
			}
			_iter_next_1c9b36e35:;
			++it;
			goto _iter_begin_1c9b36e35;
		}
		_iter_end_1c9b36e35:;
	};
}



inline void _1ba6a7443_structureDecls(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c9b37ce3:;
		if (it != expr.end()) {
			jule::Ptr<_20cba59dc_Struct> _56821_s = *it;
			{
				if ((_56821_s.get()._field_Token != nullptr)) {
					_1ba6a7311_structureDecl(_self_, _56821_s);
					_1e1a533ab_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1c9b37ce3:;
			++it;
			goto _iter_begin_1c9b37ce3;
		}
		_iter_end_1c9b37ce3:;
	};
}



inline void _1ba6a7575_paramsDecls(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Slice<jule::Ptr<_20d81455c_ParamIns>>& _57636_params) {
	if ((_57636_params.len() == 0LL)) {
		_1e1a533ab_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1e1a533ab_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _57636_params;
		auto it = expr.begin();
		_iter_begin_1c9b39d8e:;
		if (it != expr.end()) {
			jule::I64 _58314_i = it - expr.begin();
			jule::Ptr<_20d81455c_ParamIns> _58321_p = *it;
			{
				_1e1a533ab_write(_self_, static__1ba6ae4b1_paramIns(_58321_p));
				if (((_57636_params.len() - _58314_i) > 1LL)) {
					_1e1a533ab_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1c9b39d8e:;
			++it;
			_58314_i++;
			goto _iter_begin_1c9b39d8e;
		}
		_iter_end_1c9b39d8e:;
	};
	_1e1a533ab_write(_self_, jule::Str(")", 1));
}



inline void _1ba6a76a7_funcHead(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20d814749_FnIns>& _59333_f, jule::Bool _59344_ptr) {
	if ((((!(_59344_ptr)) && _20da5c288_Inline) && (!(_20cc3a258_IsEntryPoint(_59333_f.get()._field_Decl.ptr()))))) {
		_1e1a533ab_write(_self_, jule::Str("inline ", 7));
	};
	static__1ba6aea11_funcInsResult(_self_.get()._field_Obj,_59333_f);
	if (_59344_ptr) {
		_1e1a533ab_write(_self_, jule::Str("(*", 2));
		_1e1a533ab_write(_self_, static__1e1a1cac3_funcIns(_59333_f));
		_1e1a533ab_write(_self_, jule::Str(")", 1));
	} else {
		_1e1a533ab_write(_self_, jule::Str(" ", 1));
		_1e1a533ab_write(_self_, static__1e1a1cac3_funcIns(_59333_f));
	};
}



inline void _1ba6a77d9_funcDecl(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20d814370_Fn>& _60833_f, jule::Bool _60841_ptr) {
	{
		auto &expr = _60833_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c9b4004d:;
		if (it != expr.end()) {
			jule::Ptr<_20d814749_FnIns> _60921_c = *it;
			{
				_1e1a44358_indent(_self_);
				_1ba6a76a7_funcHead(_self_, _60921_c,_60841_ptr);
				_1ba6a7575_paramsDecls(_self_, _60921_c.get()._field_Params);
				_1e1a533ab_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1c9b4004d:;
			++it;
			goto _iter_begin_1c9b4004d;
		}
		_iter_end_1c9b4004d:;
	};
}



inline void _1ba6a791b_funcDecls(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	_1e1a859e8_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20d846ea7_Package>&)>([=](jule::Ptr<_20d846ea7_Package>& _61835_pkg) mutable -> void {
		_1ba6a96dc_iterFiles(_61835_pkg,jule::Fn<void(jule::Ptr<_20d8aca67_SymbolTable>&)>([=](jule::Ptr<_20d8aca67_SymbolTable>& _61936_file) mutable -> void {
			{
				auto &expr = _61936_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1c9b43518:;
				if (it != expr.end()) {
					jule::Ptr<_20d814370_Fn> _62029_f = *it;
					{
						if (((!(_62029_f.get()._field_CppLinked)) && (_62029_f.get()._field_Token != nullptr))) {
							_1e1a8352e_pushResult(_self_, _62029_f);
							_1ba6a77d9_funcDecl(_self_, _62029_f,false);
						};
					}
					_iter_next_1c9b43518:;
					++it;
					goto _iter_begin_1c9b43518;
				}
				_iter_end_1c9b43518:;
			};
		}));
	}));
}



inline void _1ba6a7a4d_traitDataTypes(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	_1e1a859e8_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20d846ea7_Package>&)>([=](jule::Ptr<_20d846ea7_Package>& _63135_pkg) mutable -> void {
		_1ba6a96dc_iterFiles(_63135_pkg,jule::Fn<void(jule::Ptr<_20d8aca67_SymbolTable>&)>([=](jule::Ptr<_20d8aca67_SymbolTable>& _63236_file) mutable -> void {
			{
				auto &expr = _63236_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1c9b464d8:;
				if (it != expr.end()) {
					jule::Ptr<_20d81a3ed_Trait> _63329_t = *it;
					{
						if ((_63329_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1e1a533ab_write(_self_, jule::Str("struct ", 7));
						_1e1a533ab_write(_self_, static__1e1a1cd6a_traitDecl(_63329_t));
						_1e1a533ab_write(_self_, jule::Str("MptrData", 8));
						_1e1a533ab_write(_self_, jule::Str(" {\n", 3));
						_1e1a85e8d_addIndent(_self_);
						{
							auto &expr = _63329_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1c9b48441:;
							if (it != expr.end()) {
								jule::Ptr<_20d814370_Fn> _64233_m = *it;
								{
									jule::Ptr<_20d814749_FnIns> _64333_ins = _64233_m.get()._field_Instances[0LL];;
									jule::Ptr<_20d81455c_ParamIns> _64433_p = _64333_ins.get()._field_Params[0LL];;
									_64433_p.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_63329_t, 2)});
									{
										auto expr = _64333_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1c9b493dc:;
										if (it != expr.end()) {
											jule::I64 _64830_i = it - expr.begin();
											jule::Ptr<_20d81455c_ParamIns> _64837_ip = *it;
											{
												if (_20b4e80bc_IsAnonIdent(_64837_ip.get()._field_Decl.get()._field_Ident)) {
													_64837_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _20d80720e_Itoa(_64830_i));
												};
											}
											_iter_next_1c9b493dc:;
											++it;
											_64830_i++;
											goto _iter_begin_1c9b493dc;
										}
										_iter_end_1c9b493dc:;
									};
									if ((!(_22eb61536_Production))) {
										_64333_ins.get()._field_Params = jule::alloc_for_append(_64333_ins.get()._field_Params,1);_64333_ins.get()._field_Params.__push(jule::new_ptr<_20d81455c_ParamIns>(_20d81455c_ParamIns{._field_Decl=jule::new_ptr<_20d814183_Param>(_20d814183_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(jule::new_ptr<_1ba6aa446_customType>(_1ba6aa446_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1ba6a77d9_funcDecl(_self_, _64233_m,true);
								}
								_iter_next_1c9b48441:;
								++it;
								goto _iter_begin_1c9b48441;
							}
							_iter_end_1c9b48441:;
						};
						_1e1a23e70_doneIndent(_self_);
						_1e1a44358_indent(_self_);
						_1e1a533ab_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1c9b464d8:;
					++it;
					goto _iter_begin_1c9b464d8;
				}
				_iter_end_1c9b464d8:;
			};
		}));
	}));
}



inline void _1ba6a7b80_paramIns(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20d81455c_ParamIns>& _67533_p) {
	_1e1a533ab_write(_self_, static__1ba6ae4b1_paramIns(_67533_p));
	_1e1a533ab_write(_self_, jule::Str(" ", 1));
	_1e1a533ab_write(_self_, static__1e1a1d112_param(_67533_p.get()._field_Decl));
}



inline void _1ba6a7cb2_paramsIns(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Slice<jule::Ptr<_20d81455c_ParamIns>>& _68134_params) {
	if ((_68134_params.len() == 0LL)) {
		_1e1a533ab_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1e1a533ab_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _68134_params;
		auto it = expr.begin();
		_iter_begin_1c9b4ea96:;
		if (it != expr.end()) {
			jule::I64 _68714_i = it - expr.begin();
			jule::Ptr<_20d81455c_ParamIns> _68721_p = *it;
			{
				_1ba6a7b80_paramIns(_self_, _68721_p);
				if (((_68134_params.len() - _68714_i) > 1LL)) {
					_1e1a533ab_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1c9b4ea96:;
			++it;
			_68714_i++;
			goto _iter_begin_1c9b4ea96;
		}
		_iter_end_1c9b4ea96:;
	};
	_1e1a533ab_write(_self_, jule::Str(")", 1));
}



inline void _1ba6a7de4_varInitExpr(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20d869eb9_Var>& _69636_v, jule::Fn<void(void)> _69645_init) {
	if (_69636_v.get()._field_Statically) {
		_1e1a533ab_write(_self_, jule::Str("static ", 7));
	};
	_1e1a533ab_write(_self_, static__1ba6b02e7_kind(_69636_v.get()._field_Kind.get()._field_Kind));
	_1e1a533ab_write(_self_, jule::Str(" ", 1));
	if (_69636_v.get()._field_Reference) {
		_1e1a533ab_write(_self_, jule::Str("&", 1));
	};
	_1e1a533ab_write(_self_, static__1e1a1db90_var(_69636_v));
	if ((_69645_init != nullptr)) {
		_1e1a533ab_write(_self_, jule::Str(" = ", 3));
		_69645_init();
	};
	_1e1a533ab_write(_self_, jule::Str(";", 1));
}



inline void _1ba6a8026_var(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20d869eb9_Var> _71427_v) {
	if (_20b4e7d25_IsIgnoreIdent(_71427_v.get()._field_Ident)) {
		return;;
	};
	if (((_71427_v.get()._field_Value != nullptr) && (_71427_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_71427_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			_1ba6a7de4_varInitExpr(_self_, _71427_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1e1a15879_val(_self_.get()._field_ec, _71427_v.get()._field_Value);
			}));
			return;;
		};
		_1ba6a7de4_varInitExpr(_self_, _71427_v,nullptr);
		return;;
	};
	if (_1ba6b6584_shouldInitialized(_71427_v.get()._field_Kind.get()._field_Kind)) {
		_1ba6a7de4_varInitExpr(_self_, _71427_v,jule::Fn<void(void)>([=](void) mutable -> void {
			_1e1a15aee_initExpr(_self_.get()._field_ec, _71427_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_1ba6a7de4_varInitExpr(_self_, _71427_v,nullptr);
}



inline void _1ba6a8158_func(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20d814370_Fn>& _73329_f) {
	{
		auto &expr = _73329_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c9b59078:;
		if (it != expr.end()) {
			jule::Ptr<_20d814749_FnIns> _73421_ins = *it;
			{
				_1ba6a76a7_funcHead(_self_, _73421_ins,false);
				_1ba6a7cb2_paramsIns(_self_, _73421_ins.get()._field_Params);
				_1e1a533ab_write(_self_, jule::Str(" ", 1));
				_1e1a06abd_funcScope(_self_.get()._field_sc, _73421_ins);
				if ((_73421_ins.get()._field_Scope != nullptr)) {
					_1e1a533ab_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1c9b59078:;
			++it;
			goto _iter_begin_1c9b59078;
		}
		_iter_end_1c9b59078:;
	};
}



inline void _1ba6a828a_traitWrappers(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1c9b5b421:;
		if (it != expr.end()) {
			jule::Ptr<_1e1a24987_traitHash> _74621_hash = *it;
			{
				{
					auto &expr = _74621_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1c9b5ba5e:;
					if (it != expr.end()) {
						jule::Ptr<_20d814370_Fn> _74725_m = *it;
						{
							jule::Str _74821_ident = _74725_m.get()._field_Ident;;
							_74725_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_74725_m.get()._field_Ident=((_74821_ident + jule::Str("_", 1)) + _20d80720e_Itoa(_74621_hash.get()._field_i));
							_1ba6a8158_func(_self_, _74725_m);
							_74725_m.get()._field_Ident=_74821_ident;
							if ((_74621_hash.get()._field_s == nullptr)) {
								if (_22eb61536_Production) {
									_1e1a533ab_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1e1a533ab_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1c9b5ba5e;
							};
							jule::Bool _76421_ptr = (!(_20cbedd43_IsRef(_74725_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_20d814370_Fn> _76625_sm = _20cb7ebc5_FindMethod(_74621_hash.get()._field_s.ptr(), _74725_m.get()._field_Ident,false);;
							if (((_76625_sm == nullptr) || (_76625_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_1c9b5ba5e;
							};
							_1e1a85e8d_addIndent(_self_);
							_1e1a533ab_write(_self_, jule::Str("{\n", 2));
							_1e1a44358_indent(_self_);
							if ((_76625_sm.get()._field_Exceptional || (!(_20cbeec56_IsVoid(_76625_sm.ptr()))))) {
								_1e1a533ab_write(_self_, jule::Str("return ", 7));
							};
							_1e1a533ab_write(_self_, static__1e1a1c82b_func(_76625_sm));
							_1e1a533ab_write(_self_, jule::Str("(", 1));
							if (_76421_ptr) {
								_1e1a533ab_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1e1a533ab_write(_self_, static__1ba6adbca_structureIns(_74621_hash.get()._field_s));
								_1e1a533ab_write(_self_, jule::Str(">(", 2));
								if ((!(_22eb61536_Production))) {
									_1e1a533ab_write(_self_, jule::Str("_00___file", 10));
								};
								_1e1a533ab_write(_self_, jule::Str(")", 1));
							} else {
								_1e1a533ab_write(_self_, jule::Str("_self_.data.as<", 15));
								_1e1a533ab_write(_self_, static__1ba6ad933_structure(_76625_sm.get()._field_Owner));
								_1e1a533ab_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _74725_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1c9b64847:;
								if (it != expr.end()) {
									jule::Ptr<_20d814183_Param> _79224_mp = *it;
									{
										_1e1a533ab_write(_self_, jule::Str(", ", 2));
										_1e1a533ab_write(_self_, static__1e1a1d112_param(_79224_mp));
									}
									_iter_next_1c9b64847:;
									++it;
									goto _iter_begin_1c9b64847;
								}
								_iter_end_1c9b64847:;
							};
							_1e1a533ab_write(_self_, jule::Str(");\n}\n", 5));
							_1e1a23e70_doneIndent(_self_);
						}
						_iter_next_1c9b5ba5e:;
						++it;
						goto _iter_begin_1c9b5ba5e;
					}
					_iter_end_1c9b5ba5e:;
				};
			}
			_iter_next_1c9b5b421:;
			++it;
			goto _iter_begin_1c9b5b421;
		}
		_iter_end_1c9b5b421:;
	};
}



inline void _1ba6a83bc_traitDatas(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	jule::Ptr<_20d81a3ed_Trait> _80317_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1c9b5b6da:;
		if (it != expr.end()) {
			jule::Ptr<_1e1a24987_traitHash> _80421_hash = *it;
			{
				jule::Str _80517_ident = static__1e1a1cd6a_traitDecl(_80421_hash.get()._field_t);;
				if ((_80421_hash.get()._field_t != _80317_old)) {
					if ((_80317_old != nullptr)) {
						_1e1a23e70_doneIndent(_self_);
						_1e1a44358_indent(_self_);
						_1e1a533ab_write(_self_, jule::Str("};\n", 3));
					};
					_1e1a533ab_write(_self_, jule::Str("static ", 7));
					_1e1a533ab_write(_self_, _80517_ident);
					_1e1a533ab_write(_self_, jule::Str("MptrData ", 9));
					_1e1a533ab_write(_self_, _80517_ident);
					_1e1a533ab_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_80317_old=_80421_hash.get()._field_t;
					_1e1a85e8d_addIndent(_self_);
				};
				_1e1a44358_indent(_self_);
				_1e1a533ab_write(_self_, jule::Str("{\n", 2));
				_1e1a85e8d_addIndent(_self_);
				{
					auto &expr = _80421_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1c9b6b684:;
					if (it != expr.end()) {
						jule::Ptr<_20d814370_Fn> _82325_m = *it;
						{
							jule::Str _82421_mIdent = static__1e1a1c82b_func(_82325_m);;
							_1e1a44358_indent(_self_);
							_1e1a533ab_write(_self_, jule::Str(".", 1));
							_1e1a533ab_write(_self_, _82421_mIdent);
							_1e1a533ab_write(_self_, jule::Str("=", 1));
							_1e1a533ab_write(_self_, _82421_mIdent);
							_1e1a533ab_write(_self_, jule::Str("_", 1));
							_1e1a533ab_write(_self_, _20d80720e_Itoa(_80421_hash.get()._field_i));
							_1e1a533ab_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1c9b6b684:;
						++it;
						goto _iter_begin_1c9b6b684;
					}
					_iter_end_1c9b6b684:;
				};
				_1e1a23e70_doneIndent(_self_);
				_1e1a44358_indent(_self_);
				_1e1a533ab_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1c9b5b6da:;
			++it;
			goto _iter_begin_1c9b5b6da;
		}
		_iter_end_1c9b5b6da:;
	};
	if ((_80317_old != nullptr)) {
		_1e1a23e70_doneIndent(_self_);
		_1e1a44358_indent(_self_);
		_1e1a533ab_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1ba6a84ee_globals(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Globals;
		auto it = expr.begin();
		_iter_begin_1c9b707ed:;
		if (it != expr.end()) {
			jule::Ptr<_20d869eb9_Var> _84621_v = *it;
			{
				_1e1a533ab_write(_self_, static__1ba6b02e7_kind(_84621_v.get()._field_Kind.get()._field_Kind));
				_1e1a533ab_write(_self_, jule::Str(" ", 1));
				if (_84621_v.get()._field_Reference) {
					_1e1a533ab_write(_self_, jule::Str("&", 1));
				};
				_1e1a533ab_write(_self_, static__1e1a1db90_var(_84621_v));
				_1e1a533ab_write(_self_, jule::Str(" = ", 3));
				_1e1a15879_val(_self_.get()._field_ec, _84621_v.get()._field_Value);
				_1e1a533ab_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1c9b707ed:;
			++it;
			goto _iter_begin_1c9b707ed;
		}
		_iter_end_1c9b707ed:;
	};
}



inline void _1ba6a8631_decls(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	_1ba6a64b9_traitDecls(_self_);
	_1ba6a672d_structurePlainDecls(_self_);
	_1ba6a7443_structureDecls(_self_);
	_1ba6a791b_funcDecls(_self_);
	_1e1a533ab_write(_self_, jule::Str("\n\n", 2));
	_1ba6a7a4d_traitDataTypes(_self_);
	_1e1a533ab_write(_self_, jule::Str("\n\n", 2));
	_1ba6a828a_traitWrappers(_self_);
	_1e1a533ab_write(_self_, jule::Str("\n\n", 2));
	_1ba6a83bc_traitDatas(_self_);
	_1e1a533ab_write(_self_, jule::Str("\n\n", 2));
	_1ba6a84ee_globals(_self_);
}



inline void _1ba6a8763_structureMethods(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20cba5db6_StructIns>& _87441_s) {
	{
		auto &expr = _87441_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c9b7623d:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> _87521_f = *it;
			{
				_1ba6a8158_func(_self_, _87521_f);
				_1e1a533ab_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1c9b7623d:;
			++it;
			goto _iter_begin_1c9b7623d;
		}
		_iter_end_1c9b7623d:;
	};
}



inline void _1ba6a8895_structureDeriveDefs(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20cba5db6_StructIns>& _88144_s) {
	if (_20cb65bde_IsDerives(_88144_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1e1a533ab_write(_self_, static__1e1a186a1_cloneFuncDef(_88144_s.get()._field_Decl));
		_1e1a533ab_write(_self_, jule::Str("{\n", 2));
		_1e1a85e8d_addIndent(_self_);
		_1e1a44358_indent(_self_);
		_1e1a533ab_write(_self_, static__1ba6adbca_structureIns(_88144_s));
		_1e1a533ab_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _88144_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1c9b791b9:;
			if (it != expr.end()) {
				jule::Ptr<_20cba5bc9_FieldIns> _88920_f = *it;
				{
					jule::Str _89021_ident = static__1e1a1d8e8_field(_88920_f.get()._field_Decl);;
					_1e1a44358_indent(_self_);
					_1e1a533ab_write(_self_, jule::Str("clone.", 6));
					_1e1a533ab_write(_self_, _89021_ident);
					_1e1a533ab_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1e1a533ab_write(_self_, _89021_ident);
					_1e1a533ab_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1c9b791b9:;
				++it;
				goto _iter_begin_1c9b791b9;
			}
			_iter_end_1c9b791b9:;
		};
		_1e1a44358_indent(_self_);
		_1e1a533ab_write(_self_, jule::Str("return clone;\n", 14));
		_1e1a23e70_doneIndent(_self_);
		_1e1a533ab_write(_self_, jule::Str("}", 1));
	};
}



inline void _1ba6a89c7_structureOstream(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20cba5db6_StructIns>& _90541_s) {
	_1e1a44358_indent(_self_);
	_1e1a533ab_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1e1a533ab_write(_self_, static__1e1a1d651_structureIns(_90541_s));
	_1e1a533ab_write(_self_, jule::Str(" _Src) {\n", 9));
	_1e1a85e8d_addIndent(_self_);
	_1e1a44358_indent(_self_);
	jule::Ptr<_20d814370_Fn> _91317_fts = _20cb7ebc5_FindMethod(_90541_s.ptr(), jule::Str("Str", 3),false);;
	if (static__20d86b680_Str(_91317_fts)) {
		_1e1a533ab_write(_self_, jule::Str("_Stream << ", 11));
		_1e1a533ab_write(_self_, static__1e1a1c82b_func(_91317_fts));
		_1e1a533ab_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1e1a533ab_write(_self_, jule::Str("_Stream << \"", 12));
		_1e1a533ab_write(_self_, _90541_s.get()._field_Decl.get()._field_Ident);
		_1e1a533ab_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _90541_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1c9b81479:;
			if (it != expr.end()) {
				jule::I64 _92318_i = it - expr.begin();
				jule::Ptr<_20cba5bc9_FieldIns> _92325_f = *it;
				{
					_1e1a44358_indent(_self_);
					_1e1a533ab_write(_self_, jule::Str("_Stream << \"", 12));
					_1e1a533ab_write(_self_, _92325_f.get()._field_Decl.get()._field_Ident);
					_1e1a533ab_write(_self_, jule::Str(":", 1));
					jule::Ptr<_20cba5db6_StructIns> _93021_strct = _20d8e6e69_Struct(_92325_f.get()._field_Kind.ptr());;
					if ((((_93021_strct != nullptr) && (_93021_strct.get()._field_Decl != nullptr)) && _93021_strct.get()._field_Decl.get()._field_CppLinked)) {
						_1e1a533ab_write(_self_, jule::Str(" cpp.", 5));
						_1e1a533ab_write(_self_, static__1e1a1d8e8_field(_92325_f.get()._field_Decl));
						_1e1a533ab_write(_self_, jule::Str("\"", 1));
					} else {
						_1e1a533ab_write(_self_, jule::Str("\" << _Src.", 10));
						_1e1a533ab_write(_self_, static__1e1a1d8e8_field(_92325_f.get()._field_Decl));
					};
					if (((_92318_i + 1LL) < _90541_s.get()._field_Fields.len())) {
						_1e1a533ab_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1e1a533ab_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1c9b81479:;
				++it;
				_92318_i++;
				goto _iter_begin_1c9b81479;
			}
			_iter_end_1c9b81479:;
		};
		_1e1a44358_indent(_self_);
		_1e1a533ab_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1e1a44358_indent(_self_);
	_1e1a533ab_write(_self_, jule::Str("return _Stream;\n", 16));
	_1e1a23e70_doneIndent(_self_);
	_1e1a533ab_write(_self_, jule::Str("}", 1));
}



inline void _1ba6a8b09_structureIns(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20cba5db6_StructIns>& _95637_s) {
	_1ba6a8763_structureMethods(_self_, _95637_s);
	_1e1a533ab_write(_self_, jule::Str("\n\n", 2));
	_1ba6a8895_structureDeriveDefs(_self_, _95637_s);
	_1e1a533ab_write(_self_, jule::Str("\n\n", 2));
	_1ba6a89c7_structureOstream(_self_, _95637_s);
}



inline void _1ba6a8c3b_structure(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20cba59dc_Struct>& _96434_s) {
	{
		auto &expr = _96434_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c9b892c8:;
		if (it != expr.end()) {
			jule::Ptr<_20cba5db6_StructIns> _96521_ins = *it;
			{
				_1ba6a8b09_structureIns(_self_, _96521_ins);
				_1e1a533ab_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1c9b892c8:;
			++it;
			goto _iter_begin_1c9b892c8;
		}
		_iter_end_1c9b892c8:;
	};
}



inline void _1ba6a8d6d_structures(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c9b8a50a:;
		if (it != expr.end()) {
			jule::Ptr<_20cba59dc_Struct> _97221_s = *it;
			{
				if ((_97221_s.get()._field_Token != nullptr)) {
					_1ba6a8c3b_structure(_self_, _97221_s);
					_1e1a533ab_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1c9b8a50a:;
			++it;
			goto _iter_begin_1c9b8a50a;
		}
		_iter_end_1c9b8a50a:;
	};
}



inline void _1ba6a8ea0_funcs(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	_1e1a859e8_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20d846ea7_Package>&)>([=](jule::Ptr<_20d846ea7_Package>& _98135_pkg) mutable -> void {
		_1ba6a96dc_iterFiles(_98135_pkg,jule::Fn<void(jule::Ptr<_20d8aca67_SymbolTable>&)>([=](jule::Ptr<_20d8aca67_SymbolTable>& _98236_file) mutable -> void {
			{
				auto &expr = _98236_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1c9b8d6d9:;
				if (it != expr.end()) {
					jule::Ptr<_20d814370_Fn> _98329_f = *it;
					{
						if (((!(_22eb60ac9_Test)) && _1ba6b62dc_hasDirective(_98329_f.get()._field_Directives,jule::Str("test", 4)))) {
							goto _iter_next_1c9b8d6d9;
						};
						if (((!(_98329_f.get()._field_CppLinked)) && (_98329_f.get()._field_Token != nullptr))) {
							_1ba6a8158_func(_self_, _98329_f);
							_1e1a533ab_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1c9b8d6d9:;
					++it;
					goto _iter_begin_1c9b8d6d9;
				}
				_iter_end_1c9b8d6d9:;
			};
		}));
	}));
}



inline void _1ba6a90d2_pushInit(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_, jule::Ptr<_20d846ea7_Package>& _99633_pkg) {
	_1ba6a96dc_iterFiles(_99633_pkg,jule::Fn<void(jule::Ptr<_20d8aca67_SymbolTable>&)>([=](jule::Ptr<_20d8aca67_SymbolTable>& _99732_file) mutable -> void {
		{
			auto &expr = _99732_file.get()._field_Funcs;
			auto it = expr.begin();
			_iter_begin_1c9b90ea0:;
			if (it != expr.end()) {
				jule::Ptr<_20d814370_Fn> _99820_f = *it;
				{
					if ((_99820_f.get()._field_Ident == jule::Str("init", 4))) {
						_1e1a44358_indent(_self_);
						_1e1a533ab_write(_self_, static__1e1a1c82b_func(_99820_f));
						_1e1a533ab_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1c9b90ea0:;
				++it;
				goto _iter_begin_1c9b90ea0;
			}
			_iter_end_1c9b90ea0:;
		};
	}));
}



inline void _1ba6a9214_initCaller(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	_1e1a533ab_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1e1a85e8d_addIndent(_self_);
	_1e1a859e8_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20d846ea7_Package>&)>([=](jule::Ptr<_20d846ea7_Package>& _101135_pkg) mutable -> void {
		_1ba6a90d2_pushInit(_self_, _101135_pkg);
	}));
	_1e1a23e70_doneIndent(_self_);
	_1e1a533ab_write(_self_, jule::Str("\n}", 2));
}



inline void _1ba6a9346_end(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	_1e1a533ab_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_22eb60ac9_Test) {
		_1e1a533ab_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1e1a533ab_write(_self_, jule::Str("entry_point();", 14));
	};
	_1e1a533ab_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1ba6a9478_serializeHead(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	_1e1a47b86_prepareStructures(_self_);
	_1e1a246e0_buildTraitMap(_self_);
	_1e1a8d083_head(_self_);
	_1e1a533ab_write(_self_, jule::Str("\n", 1));
	_1ba6a8631_decls(_self_);
	_1e1a533ab_write(_self_, jule::Str("\n", 1));
	_1ba6a8d6d_structures(_self_);
	_1ba6a8ea0_funcs(_self_);
	_1ba6a9214_initCaller(_self_);
	_1e1a533ab_write(_self_, jule::Str("\n\n", 2));
}



inline void _1ba6a95aa_Serialize(jule::Ptr<_1ba6a5e14_ObjectCoder> _self_) {
	_1ba6a9478_serializeHead(_self_);
	_1ba6a9346_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1ba6a5e14_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline _x_1e1012d55_IR_s_20b1bc016_Log static__1e11752a3_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	_x_1e1012d55_IR_s_20b1bc016_Log __jule_func_result;
	jule::Ptr<_1e1146c7a_JuleImporter> _2817_importer = static__1e1023591_New(_1e106228e_buildCompileInfo());;
	jule::Slice<jule::Ptr<_20cb5014b_Ast>> _2918_files;;
	jule::Slice<_20b1bc016_Log> _2929_logs;;
	({
		_sx_20cb5014b_Ast_s_20b1bc016_Log __jule_assign_result = _1e113c314_ImportPackage(_2817_importer.ptr(), _2721_path,true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_20d846ea7_Package> _3918_pkg;;
	({
		_x_20d846ea7_Package_s_20b1bc016_Log __jule_assign_result = _20d910a32_AnalyzePackage(_2918_files,jule::Trait<_20d8413d0_Importer>(_2817_importer, 0),_2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1e1012d55_IR> _4417_ir = jule::new_ptr<_1e1012d55_IR>(_1e1012d55_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1e108779d_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1e1040547_getAllUniquePasses(_4417_ir.get()._field_Main,_4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1e11dd063_appendStructs(_1e1012d55_IR* _self_, jule::Ptr<_20d846ea7_Package>& _5633_p, jule::Slice<jule::Ptr<_20cba59dc_Struct>>& _5657_buffer) {
	{
		auto &expr = _5633_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c962a451:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _5721_f = *it;
			{
				{
					auto &expr = _5721_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1c962ac9d:;
					if (it != expr.end()) {
						jule::Ptr<_20cba59dc_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								_5657_buffer = jule::alloc_for_append(_5657_buffer,1);_5657_buffer.__push(_5825_s);;
							};
						}
						_iter_next_1c962ac9d:;
						++it;
						goto _iter_begin_1c962ac9d;
					}
					_iter_end_1c962ac9d:;
				};
			}
			_iter_next_1c962a451:;
			++it;
			goto _iter_begin_1c962a451;
		}
		_iter_end_1c962a451:;
	};
}



inline jule::Slice<jule::Ptr<_20cba59dc_Struct>> _1e11e5d5c_GetAllStructures(_1e1012d55_IR* _self_) {
	jule::Slice<jule::Ptr<_20cba59dc_Struct>> _6917_buffer = nullptr;;
	_1e11dd063_appendStructs(&(*_self_), (*_self_)._field_Main,_6917_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1c962a94b:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_1e11dd063_appendStructs(&(*_self_), _7121_u.get()._field_Package,_6917_buffer);
				};
			}
			_iter_next_1c962a94b:;
			++it;
			goto _iter_begin_1c962a94b;
		}
		_iter_end_1c962a94b:;
	};
	return _6917_buffer;;
}



inline void _1e1200141_appendGlobals(_1e1012d55_IR* _self_, jule::Ptr<_20d846ea7_Package>& _7933_p, jule::Slice<jule::Ptr<_20d869eb9_Var>>& _7957_buffer) {
	{
		auto &expr = _7933_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c962d443:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1c962dc6d:;
					if (it != expr.end()) {
						jule::Ptr<_20d869eb9_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								_7957_buffer = jule::alloc_for_append(_7957_buffer,1);_7957_buffer.__push(_8125_v);;
							};
						}
						_iter_next_1c962dc6d:;
						++it;
						goto _iter_begin_1c962dc6d;
					}
					_iter_end_1c962dc6d:;
				};
			}
			_iter_next_1c962d443:;
			++it;
			goto _iter_begin_1c962d443;
		}
		_iter_end_1c962d443:;
	};
}



inline jule::Slice<jule::Ptr<_20d869eb9_Var>> _1e1019db2_GetAllGlobals(_1e1012d55_IR* _self_) {
	jule::Slice<jule::Ptr<_20d869eb9_Var>> _9217_buffer = nullptr;;
	_1e1200141_appendGlobals(&(*_self_), (*_self_)._field_Main,_9217_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1c963070e:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_1e1200141_appendGlobals(&(*_self_), _9421_u.get()._field_Package,_9217_buffer);
				};
			}
			_iter_next_1c963070e:;
			++it;
			goto _iter_begin_1c963070e;
		}
		_iter_end_1c963070e:;
	};
	return _9217_buffer;;
}



inline void _1e1127057_Order(_1e1012d55_IR* _self_) {
	(*_self_)._field_Ordered._field_Structs=_1e11e5d5c_GetAllStructures(&(*_self_));
	(*_self_)._field_Ordered._field_Globals=_1e1019db2_GetAllGlobals(&(*_self_));
	static__1e1007c6d_orderStructures((*_self_)._field_Ordered._field_Structs);
	static__1e103add3_orderVars((*_self_)._field_Ordered._field_Globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1e1012d55_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline _i64_bool _1c9c08ea2_parseInteger(_1ba71777d_argParser* _self_, jule::Str& _19031_s, jule::Fn<_i64_bool(jule::Str,jule::I64)> _19039_parser) {
	_i64_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (_19031_s.empty()) {
			_case_begin_1c9c0bb42:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_20b135bc7_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1c9c0c0a4:;
			{
				({
					_i64_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_20b135bc7_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1c9c0c24c:;
			{
				({
					_i64_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_20b135bc7_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1c9c0be94:;
			{
				({
					_i64_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1c9c0b812:;
			{
				({
					_i64_bool __jule_assign_result = _19039_parser(_19031_s.slice(1LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c9c0b79b:;
			{
				({
					_i64_bool __jule_assign_result = _19039_parser(_19031_s,10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c9c0b6d0:;
	};
	return __jule_func_result;;
}

inline _u64_bool _1c9c16da0_parseInteger(_1ba71777d_argParser* _self_, jule::Str& _19031_s, jule::Fn<_u64_bool(jule::Str,jule::I64)> _19039_parser) {
	_u64_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (_19031_s.empty()) {
			_case_begin_1c9c199eb:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_20b135bc7_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1c9c19e5d:;
			{
				({
					_u64_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_20b135bc7_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1c9c1a106:;
			{
				({
					_u64_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_20b135bc7_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1c9c19d4d:;
			{
				({
					_u64_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1c9c196bb:;
			{
				({
					_u64_bool __jule_assign_result = _19039_parser(_19031_s.slice(1LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c9c19655:;
			{
				({
					_u64_bool __jule_assign_result = _19039_parser(_19031_s,10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c9c19589:;
	};
	return __jule_func_result;;
}



inline jule::Str _1ba718075_getData(_1ba71777d_argParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();;
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];;
}



inline jule::VoidExceptional _1ba7182b7_processFlag(_1ba71777d_argParser* _self_, jule::Trait<_1ba713636_CommonFlag>& _21735_flag) {
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1c9be22a9_Flag>>()) {
			_case_begin_1c9c06257:;
			{
				jule::Ptr<_1c9be22a9_Flag> _22021_bf = _21735_flag.operator jule::Ptr<_1c9be22a9_Flag>();;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1c9c061e1:;
	};
	jule::Str _22513_data = _1ba718075_getData(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1ba713636_CommonFlag_mptr_data[(_21735_flag).type_offset]._1ba6d3958_Name(_21735_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1c9bd637a_Flag>>()) {
			_case_begin_1c9c07863:;
			{
				jule::Ptr<_1c9bd637a_Flag> _23221_intf = _21735_flag.operator jule::Ptr<_1c9bd637a_Flag>();;
				jule::Bool _23332_ok = false;;
				({
					_i64_bool __jule_assign_result = _1c9c08ea2_parseInteger(&(*_self_), _22513_data,jule::Fn<_i64_bool(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> _i64_bool {
						_i64_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _20d240a38_ParseInt(_23370_s,_23378_base,64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1ba713636_CommonFlag_mptr_data[(_21735_flag).type_offset]._1ba6d3958_Name(_21735_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c9bda12b_Flag>>()) {
			_case_begin_1c9c08248:;
			{
				jule::Ptr<_1c9bda12b_Flag> _24021_uintf = _21735_flag.operator jule::Ptr<_1c9bda12b_Flag>();;
				jule::Bool _24133_ok = false;;
				({
					_u64_bool __jule_assign_result = _1c9c16da0_parseInteger(&(*_self_), _22513_data,jule::Fn<_u64_bool(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> _u64_bool {
						_u64_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _20d3d4eeb_ParseUint(_24171_s,_24179_base,64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1ba713636_CommonFlag_mptr_data[(_21735_flag).type_offset]._1ba6d3958_Name(_21735_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c9bdd948_Flag>>()) {
			_case_begin_1c9c082ae:;
			{
				jule::Ptr<_1c9bdd948_Flag> _24821_ff = _21735_flag.operator jule::Ptr<_1c9bdd948_Flag>();;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _20d803370_ParseFloat(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1ba713636_CommonFlag_mptr_data[(_21735_flag).type_offset]._1ba6d3958_Name(_21735_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c9be5ac6_Flag>>()) {
			_case_begin_1c9c08325:;
			{
				(*(_21735_flag.operator jule::Ptr<_1c9be5ac6_Flag>().get()._field_data))=_22513_data;
			}
		}
		_match_end_1c9c077a8:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ba71853c_singleDash(_1ba71777d_argParser* _self_, jule::Str& _25730_arg) {
	if ((_25730_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25730_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25730_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1c9c220a8:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1ba713636_CommonFlag> _26321_flag = _1ba715b33_FindFlagShort(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25730_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _1ba7182b7_processFlag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1c9c220a8:;
			++it;
			goto _iter_begin_1c9c220a8;
		}
		_iter_end_1c9c220a8:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ba7187b2_doubleDash(_1ba71777d_argParser* _self_, jule::Str& _27230_arg) {
	if ((_27230_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_1ba713636_CommonFlag> _27617_flag = _1ba715825_FindFlag(&(*_self_)._field_set, _27230_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _1ba7182b7_processFlag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ba71898d_tryArg(_1ba71777d_argParser* _self_) {
	jule::Str _28413_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1ba7187b2_doubleDash(&(*_self_), _28413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1ba71853c_singleDash(&(*_self_), _28413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28413_arg);;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ba718b69_parse(_1ba71777d_argParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1ba71898d_tryArg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1c9c2790a:;
	}
	_iter_end_1c9c2790a:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1ba71777d_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _2163a7625_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _2163bbd54_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	{
		return static_cast<jule::Str>(_6924_s);;
	};
}



inline jule::I64 _22ebdc31a_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _2163da119_Stat(jule::U8* _4816_path, struct stat* _4833_stat) {
	return static_cast<jule::I64>(stat(((char*)(_4816_path)), _4833_stat));;
}



inline jule::I64 _2163da504_Open(jule::U8* _5316_path, jule::I64 _5329_flag, jule::I64 _5340_mode) {
	return static_cast<jule::I64>(open(((char*)(_5316_path)),_5329_flag,_5340_mode));;
}



inline jule::U8* _2163da845_Getcwd(jule::U8* _5918_buff, jule::U64 _5931_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5918_buff)),_5931_bufflen)));;
}



inline DIR* _2163dad1d_Opendir(jule::U8* _6419_path) {
	return opendir(((char*)(_6419_path)));;
}



inline struct dirent* _2163db0b5_Readdir(DIR* _6723_dir) {
	return readdir(_6723_dir);;
}



inline jule::I64 _2163db35c_Closedir(DIR* _7024_dir) {
	return static_cast<jule::I64>(closedir(_7024_dir));;
}



inline jule::I64 _2163dbbdc_Mkdir(jule::U8* _7917_path, jule::I64 _7930_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7917_path)),_7930_mode));;
}



inline jule::I64 _2163dbe84_Rmdir(jule::U8* _8417_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_8417_path))));;
}



inline jule::I64 _2163dc22b_Unlink(jule::U8* _8718_path) {
	return static_cast<jule::I64>(unlink(((char*)(_8718_path))));;
}



inline jule::I64 _21640792d_Seek(jule::I64 _269_handle, jule::I64 _2622_offset, jule::I64 _2635_origin) {
	return static_cast<jule::I64>(lseek(_269_handle,_2622_offset,_2635_origin));;
}



inline jule::I64 _216407d18_Read(jule::I64 _3116_handle, void* _3133_buff, jule::U64 _3148_n) {
	return static_cast<jule::I64>(read(_3116_handle,_3133_buff,_3148_n));;
}



inline jule::I64 _21640818c_Close(jule::I64 _3610_handle) {
	return static_cast<jule::I64>(close(_3610_handle));;
}



inline jule::I64 _216408577_Write(jule::I64 _3917_handle, void* _3930_buff, jule::U64 _3945_n) {
	return static_cast<jule::I64>(write(_3917_handle,_3930_buff,_3945_n));;
}



inline void _216408786_Exit(jule::I64 _449_code) {
	exit(_449_code);
}



inline jule::I64 _21649b719_getLastOsError(void) {
	jule::I64 _309_err = _22ebdc31a_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ba795e38:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ba79583e:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1ba7958b6:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1ba79593d:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ba795b6e:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ba795bd5:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1ba795c4b:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1ba795685:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1ba795630:;
	};
}



inline jule::Slice<jule::Str> _21649c1ed_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _21649c671_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _21649d573_getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _21649d573_getwd(void) {
	jule::U8* _1113_buff = _2163da845_Getcwd(nullptr,0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(_21649b719_getLastOsError());
	};
	jule::Str _159_pwd = _2163bbd54_BytePtrToStr(_1113_buff);;
	{
		_2163a7625_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _159_pwd);;
}



inline jule::Bool _20a3cb8ec_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_20b04c281__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _20b0555b9_isExcludingLatin(_20a3d5ad2_Letter,_7613_r);;
}



inline jule::Bool _20b0549d6_is16(jule::Slice<_20b052e24_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1c7b26784:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_20b052e24_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1c7b26784:;
				++it;
				_19313_i++;
				goto _iter_begin_1c7b26784;
			}
			_iter_end_1c7b26784:;
		};
		return false;;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_20b052e24_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1c7b26256:;
	}
	_iter_end_1c7b26256:;;
	return false;;
}



inline jule::Bool _20b054d27_is32(jule::Slice<_20b053397_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1c7b2cbdb:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_20b053397_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1c7b2cbdb:;
				++it;
				_23013_i++;
				goto _iter_begin_1c7b2cbdb;
			}
			_iter_end_1c7b2cbdb:;
		};
		return false;;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_20b053397_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1c7b299a7:;
	}
	_iter_end_1c7b299a7:;;
	return false;;
}



inline jule::Bool _20b0555b9_isExcludingLatin(jule::Ptr<_20b05381a_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_20b052e24_Range16> &_28014_R16 = _27821_rangeTab.get()._field_R16;;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if (((_28014_R16.len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>(_28014_R16[(_28014_R16.len() - 1LL)]._field_Hi)))) {
			return _20b0549d6_is16(_28014_R16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_20b053397_Range32> &_28710_R32 = _27821_rangeTab.get()._field_R32;;
	if (((_28710_R32.len() > 0LL) && (_27844_r >= static_cast<jule::I32>(_28710_R32[0LL]._field_Lo)))) {
		return _20b054d27_is32(_28710_R32,static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _20b055861_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_20b04c281__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _20b0555b9_isExcludingLatin(_20a3dc138_Upper,_29512_r);;
}



inline _i32_int _20b115624_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	_i32_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _20b114502_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_20b114a85_acceptRange _1969_accept = _20b114d93_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline _i32_int _20b115943_DecodeRuneStr(jule::Str _22918_s) {
	_i32_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _20b114502_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_20b114a85_acceptRange _2439_accept = _20b114d93_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline _i32_int _20b115bda_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	_i32_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_20b1175b0_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1c7b73b99;
			};
		}
	_iter_next_1c7b73b99:;
	}
	_iter_end_1c7b73b99:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		_i32_int __jule_assign_result = _20b115624_DecodeRune(_27619_p.slice(_28113_start,_2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _20b116988_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _20b116cc9_appendRuneNonASCII(_40519_p,_40530_r);;
}



inline jule::Slice<jule::U8> _20b116cc9_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1c7b890bb:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1c7b87707:;
			{
				_41242_r=128LL;
				goto _case_begin_1c7b8776d;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1c7b8776d:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1c7b86c67:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1c7b86c12:;
	};
}



inline jule::I64 _20b117318_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1c7b92635;
			};
			jule::U8 _48213_x = _20b114502_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1c7b92635;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1c7b92635;
			};
			_20b114a85_acceptRange _49213_accept = _20b114d93_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1c7b92635:;
	}
	_iter_end_1c7b92635:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _20b1175b0_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::Slice<jule::U8> _20b12b64b_Stobs(jule::Str& _911_s) {
	return _911_s.fake_slice();;
}



inline void _20b135468_PushToStrBuffer(jule::Str& _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		(_2825_s).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline jule::I64 _20b135831_FindLastByte(jule::Slice<jule::U8> _2617_s, jule::U8 _2628_b) {
	jule::U8* _279_first = (&(_2617_s[0LL]));;
	jule::U8* _2813_it = (&(_2617_s[(_2617_s.len() - 1LL)]));;
	for (; (_2813_it >= _279_first); (_2813_it)--) {
		{
			{
				if (((*(_2813_it)) == _2628_b)) {
					return static_cast<jule::I64>(((jule::I64)((_2813_it - _279_first))));;
				};
			};
		}
	_iter_next_2164b9c32:;
	}
	_iter_end_2164b9c32:;;
	return -1LL;;
}



inline jule::I64 _20b135a95_FindLastByteStr(jule::Str& _4521_s, jule::U8 _4529_b) {
	return static_cast<jule::I64>(_20b135831_FindLastByte(_20b12b64b_Stobs(_4521_s),_4529_b));;
}



inline jule::Str _20b11c7b3_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_2164cda6a:;
	}
	_iter_end_2164cda6a:;;
	return _2013_ss;;
}



inline jule::Bool _20b118c98_hasPrefix(jule::Str& _2715_s, jule::Str& _2724_sub, jule::I64 _2738_start) {
	if (((_2724_sub.len() == 0LL) || ((_2715_s.len() - _2738_start) < _2724_sub.len()))) {
		return false;;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < _2724_sub.len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_3213_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if ((_2715_s[_2738_start] != _2724_sub[_3213_i])) {
				return false;;
			};
		}
	_iter_next_2164d1ac3:;
	}
	_iter_end_2164d1ac3:;;
	return true;;
}



inline jule::Bool _20b135bc7_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _20b118c98_hasPrefix(_4214_s,_4222_sub,0LL);;
}



inline jule::Bool _20b135d09_hasSuffix(jule::Str& _4615_s, jule::Str& _4624_sub, jule::I64 _4638_start) {
	if (((_4624_sub.len() == 0LL) || ((_4615_s.len() - _4638_start) < _4624_sub.len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>((_4615_s.len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < _4624_sub.len()); (_5213_i)++) {
		{
			if ((_4615_s[((_4638_start - _5213_i) - 1LL)] != _4624_sub[((_4624_sub.len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_2164d3ae7:;
	}
	_iter_end_2164d3ae7:;;
	return true;;
}



inline jule::Bool _20b136018_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _20b135d09_hasSuffix(_6214_s,_6222_sub,0LL);;
}



inline jule::I64 _20b136403_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_20b118c98_hasPrefix(_7011_s,_7019_sub,_7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_2164d7bc8:;
	}
	_iter_end_2164d7bc8:;;
	return -1LL;;
}



inline jule::I64 _20b136c3e_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10017_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1c7babab1;
					};
				}
			_iter_next_1c7bad321:;
			}
			_iter_end_1c7bad321:;;
			return _9413_j;;
		}
	_iter_next_1c7babab1:;
	}
	_iter_end_1c7babab1:;;
	return -1LL;;
}



inline jule::I64 _20b137080_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_20b136c3e_FindLastAt(_11513_s,_11521_sub,static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _20b138328_findRune(jule::Slice<jule::U8>& _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < _17114_s.len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I64 _17418_n = 0;;
			({
				_i32_int __jule_assign_result = _20b115624_DecodeRune(_17114_s.slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1c7bb5c1e:;
	}
	_iter_end_1c7bb5c1e:;;
	return -1LL;;
}



inline jule::I64 _20b138b64_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_20b135a95_FindLastByteStr(_19317_s,_19325_b));;
}



inline jule::I64 _20b139978_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _20b12b64b_Stobs(_22812_s);;
	jule::Slice<jule::U8> _23013_rb = _20b12b64b_Stobs(_22820_runes);;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I64 _23317_n = 0;;
			({
				_i32_int __jule_assign_result = _20b115624_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_20b138328_findRune(_23013_rb,_23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1c7bbb4a5:;
	}
	_iter_end_1c7bbb4a5:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _20b13a1a4_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _20b136403_FindAt(_26210_s,_26218_sub,_27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1c7bc28a7;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i,_27613_j));;
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1c7bc28a7:;
	}
	_iter_end_1c7bc28a7:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;;
}



inline jule::Bool _20b13a4e5_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_20b136403_FindAt(_29013_s,_29021_sub,0LL) != -1LL);;
}



inline jule::Bool _20b13aeb8_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_20b139978_FindAny(_30616_s,_30624_runes) != -1LL);;
}



inline jule::I64 _20b13b309_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _20b136403_FindAt(_31210_s,_31218_sub,_31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1c7bc7e62;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1c7bc7e62:;
	}
	_iter_end_1c7bc7e62:;;
	return _31613_n;;
}



inline jule::Str _20b13b78d_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I64 _3379_m = _20b13b309_Count(_33212_s,_33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _20b136403_FindAt(_33212_s,_33220_sub,_34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1c7bcbc8a;
			};
			_34513_ss+=_33212_s.slice(_34613_i,_34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1c7bcbc8a:;
	}
	_iter_end_1c7bcbc8a:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _20b138801_trimLeft(jule::Slice<jule::U8>& _38818_s, jule::Slice<jule::U8>& _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < _38818_s.len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I64 _39117_n = 0;;
			({
				_i32_int __jule_assign_result = _20b115624_DecodeRune(_38818_s.slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_20b138328_findRune(_38830_cutset,_39114_r) == -1LL)) {
				_38818_s=_38818_s.slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1c7bce8a3:;
	}
	_iter_end_1c7bce8a3:;;
	_38818_s=nullptr;
}



inline jule::Str _20b13c849_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _20b12b64b_Stobs(_40313_s);;
	jule::Slice<jule::U8> _4059_bcutset = _20b12b64b_Stobs(_40321_cutset);;
	_20b138801_trimLeft(_40413_bytes,_4059_bcutset);
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _20b13cb02_trimRight(jule::Slice<jule::U8>& _41019_s, jule::Slice<jule::U8>& _41031_cutset) {
	jule::I64 _41113_i = _41019_s.len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I64 _41317_n = 0;;
			({
				_i32_int __jule_assign_result = _20b115bda_DecodeLastRune(_41019_s.slice(0LL,_41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_20b138328_findRune(_41031_cutset,_41314_r) == -1LL)) {
				_41019_s=_41019_s.slice(0LL,_41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1c7bd4017:;
	}
	_iter_end_1c7bd4017:;;
	_41019_s=nullptr;
}



inline jule::Str _20b13d284_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _20b12b64b_Stobs(_4349_s);;
	jule::Slice<jule::U8> _4369_bcutset = _20b12b64b_Stobs(_43417_cutset);;
	_20b138801_trimLeft(_43513_bytes,_4369_bcutset);
	_20b13cb02_trimRight(_43513_bytes,_4369_bcutset);
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Str _20b13d5c5_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1c7bd8912:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1c7bd8978:;
			{
				return _4449_parts[0LL];;
			}
		}
		_match_end_1c7bd859e:;
	};
	jule::Str _45113_s = _4449_parts[0LL];;
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1c7bd99ce:;
		if (it != expr.end()) {
			jule::Str &_45212_part = *it;
			{
				_45113_s+=_44423_sep;
				_45113_s+=_45212_part;
			}
			_iter_next_1c7bd99ce:;
			++it;
			goto _iter_begin_1c7bd99ce;
		}
		_iter_end_1c7bd99ce:;
	};
	return _45113_s;;
}



inline jule::Str _2231e6ea2_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _20b13db7a_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _20b13d916_IsPathSep(_1099_originalPath[0LL])) && _20b13d916_IsPathSep(_1099_originalPath[1LL]))) {
			return _2232167da_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _20b13d916_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_2231c7933_lazyBuff _12713_out = _2231c7933_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0;;
	jule::I64 _13221_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_2231d1871_append(&_12713_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_20b13d916_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1c7be85e2:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _20b13d916_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1c7beb2b5:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _20b13d916_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1c7beb32b:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1c7bee20d:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_20b13d916_IsPathSep(static_cast<jule::U8>(_2231ce044_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1c7beeb7b:;
									}
									_iter_end_1c7beeb7b:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1c7bee274:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_2231d1871_append(&_12713_out, 47LLU);
									};
									_2231d1871_append(&_12713_out, '.');
									_2231d1871_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1c7bedd78:;
						};
					}
				}
				else {
					_case_begin_1c7be6a74:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_2231d1871_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_20b13d916_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_2231d1871_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1c7be80a3:;
						}
						_iter_end_1c7be80a3:;;
					}
				}
				_match_end_1c7be6843:;
			};
		}
	_iter_next_1c7be69ca:;
	}
	_iter_end_1c7be69ca:;;
	if ((_12713_out._field_w == 0LL)) {
		_2231d1871_append(&_12713_out, '.');
	};
	return _2232167da_FromSlash(_2231d319c_string(&_12713_out));;
}



inline jule::Str _2232167da_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;;
	};
}



inline jule::Str _223218d81_Join(jule::Slice<jule::Str> _2259_elem) {
	return _20b13ddde_join(_2259_elem);;
}



inline jule::Str _22321a349_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_20b13d916_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_1c7c03883:;
	}
	_iter_end_1c7c03883:;;
	return jule::Str();;
}



inline _str_bool _2231d35a9_Abs(jule::Str _2458_path) {
	_str_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		_str_bool __jule_assign_result = _20b13dcac_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _2231ee64c_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _20b13d916_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL,(_25413_path.len() - 1LL));;
		}
	_iter_next_1c7c05da2:;
	}
	_iter_end_1c7c05da2:;;
	(_25413_path).mut_slice(_2231c7b20_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_20b13d916_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1c7c076bc:;
	}
	_iter_end_1c7c076bc:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(47LL);;
	};
	return _25413_path;;
}



inline jule::Str _22321c8e0_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _2231c7b20_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_20b13d916_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1c7c099dd:;
	}
	_iter_end_1c7c099dd:;;
	jule::Str _2919_dir = _2231e6ea2_Clean(_2858_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _2231c7b20_VolumeName(jule::Str _30315_path) {
	return _2232167da_FromSlash(_30315_path.slice(0LL,_20b13db7a_volumeNameLen(_30315_path)));;
}



inline jule::Bool _20b13d916_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _20b13da48_IsAbs(jule::Str _5310_path) {
	return _20b135bc7_HasPrefix(_5310_path,jule::Str("/", 1));;
}



inline jule::I64 _20b13db7a_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline _str_bool _20b13dcac_abs(jule::Str _638_path) {
	_str_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_20b13da48_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _2231e6ea2_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _679_wd = ({
		auto except = _21649c671_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _20b13ddde_join(jule::Slice<jule::Str>::make({_679_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _20b13ddde_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto &expr = _739_elem;
		auto it = expr.begin();
		_iter_begin_1c7c136a6:;
		if (it != expr.end()) {
			jule::I64 _749_i = it - expr.begin();
			jule::Str &_7412_e = *it;
			{
				if ((!(_7412_e.empty()))) {
					return _2231e6ea2_Clean(_20b13d5c5_Join(_739_elem.slice(_749_i),static_cast<jule::Str>(47LL)));;
				};
			}
			_iter_next_1c7c136a6:;
			++it;
			_749_i++;
			goto _iter_begin_1c7c136a6;
		}
		_iter_end_1c7c136a6:;
	};
	return jule::Str();;
}



inline jule::I64 _21623454b_getLastFsError(void) {
	jule::I64 _729_err = _22ebdc31a_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c7c2173b:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c7c20bbe:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1c7c21131:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1c7c21197:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c7c2120d:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c7c21274:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_1c7c2185c:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1c7c218c3:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1c7c21939:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1c7c219a0:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1c7c21a27:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1c7c21a9e:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c7c21b26:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1c7c21b9d:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1c7c21c25:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_1c7c21c9c:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1c7c21d24:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1c7c21d9b:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1c7c21e23:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_1c7c21e9a:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1c7c22022:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1c7c22099:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1c7c22121:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1c7c22198:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1c7c22220:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_1c7c22297:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_1c7c2231e:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_1c7c22396:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1c7c20e88:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1c7c20e33:;
	};
}



inline jule::I64 _20b216923_getLastProcessError(void) {
	jule::I64 _429_err = _22ebdc31a_GetLastErrno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c7c479c6:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1c7c46e6a:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1c7c473bb:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c7c47443:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c7c474ba:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c7c47542:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1c7c4771d:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1c7c47795:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1c7c4781c:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 97LL) {
			_case_begin_1c7c47894:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1c7c47ae7:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else {
			_case_begin_1c7c47223:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_1c7c471bd:;
	};
}



inline jule::Slice<char*> _20b219ae1_strSliceToCstrSlice(jule::Slice<jule::Str> _2024_s) {
	jule::Slice<char*> _2113_cs = jule::Slice<char*>::alloc(0LL, (_2024_s.len() + 1LL), nullptr);;
	{
		auto &expr = _2024_s;
		auto it = expr.begin();
		_iter_begin_1c7c539d2:;
		if (it != expr.end()) {
			jule::I64 _229_i = it - expr.begin();
			{
				_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(((char*)((&(_2024_s[_229_i][0LL])))));;
			}
			_iter_next_1c7c539d2:;
			++it;
			_229_i++;
			goto _iter_begin_1c7c539d2;
		}
		_iter_end_1c7c539d2:;
	};
	_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(nullptr);;
	return _2113_cs;;
}



inline jule::I64 _20b21a042_execvp(jule::Str _2911_file, jule::Slice<jule::Str> _2922_argv) {
	jule::Slice<char*> _309_cargv = _20b219ae1_strSliceToCstrSlice(_2922_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_2911_file[0LL])))), (char*const*)(&(_309_cargv[0LL]))));;
	};
}



inline jule::I64 _20b21a42c_execve(jule::Str _3611_file, jule::Slice<jule::Str> _3622_argv, jule::Slice<jule::Str> _3635_env) {
	jule::Slice<char*> _379_cargv = _20b219ae1_strSliceToCstrSlice(_3622_argv);;
	jule::Slice<char*> _389_cenv = _20b219ae1_strSliceToCstrSlice(_3635_env);;
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3611_file[0LL])))), (char*const*)(&(_379_cargv[0LL])), (char*const*)((&(_389_cenv[0LL])))));;
	};
}



inline void _20b21b043_Exit(jule::I64 _129_code) {
	_216408786_Exit(_129_code);
}



inline jule::Str _20b21b241_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _20b1aee3d_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _20b1b015d_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto &expr = _20b13e3b7_CppHeaderExts;
		auto it = expr.begin();
		_iter_begin_1c7c89ac3:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3121_ext == _3212_valid_ext)) {
					return true;;
				};
			}
			_iter_next_1c7c89ac3:;
			++it;
			goto _iter_begin_1c7c89ac3;
		}
		_iter_end_1c7c89ac3:;
	};
	return false;;
}



inline jule::Bool _20b1b0405_IsValidCppExt(jule::Str _4218_ext) {
	if ((_4218_ext == jule::Str(".c", 2))) {
		return true;;
	};
	{
		auto &expr = _20b1ad1e4_CppExts;
		auto it = expr.begin();
		_iter_begin_1c7c8a431:;
		if (it != expr.end()) {
			jule::Str &_4612_e = *it;
			{
				if ((_4218_ext == _4612_e)) {
					return true;;
				};
			}
			_iter_next_1c7c8a431:;
			++it;
			goto _iter_begin_1c7c8a431;
		}
		_iter_end_1c7c8a431:;
	};
	{
		auto &expr = _20b1aed3e_ObjectiveCppExts;
		auto it = expr.begin();
		_iter_begin_1c7c8b740:;
		if (it != expr.end()) {
			jule::Str &_5112_e = *it;
			{
				if ((_4218_ext == _5112_e)) {
					return true;;
				};
			}
			_iter_next_1c7c8b740:;
			++it;
			goto _iter_begin_1c7c8b740;
		}
		_iter_end_1c7c8b740:;
	};
	return false;;
}



inline jule::Str _20b1bc456_Logf(jule::Str _3009_fmt, jule::Slice<jule::Any> _30022_args) {
	return _20b1bcd6e_applyFmt(_3009_fmt,_30022_args);;
}



inline jule::Str _20b1bc742_argToStr(jule::Any _30413_arg) {
	{
		auto &_match_expr{ _30413_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1c7c8cb92:;
			{
				return _30413_arg.operator jule::Str();;
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1c7c8cc08:;
			{
				return static_cast<jule::Str>(_30413_arg.operator jule::U8());;
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1c7c8c983:;
			{
				return static_cast<jule::Str>(_30413_arg.operator jule::I32());;
			}
		}
		else {
			_case_begin_1c7c8c554:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1c7c8c367:;
	};
}



inline jule::I64 _20b1bc9d9_findNextFmt(jule::Str _31716_fmt) {
	{
		auto &expr = _31716_fmt;
		auto it = expr.begin();
		_iter_begin_1c7c8d214:;
		if (it != expr.end()) {
			jule::I64 _3189_i = it - expr.begin();
			jule::U8 &_31812_b = *it;
			{
				if ((_31812_b == '@')) {
					return _3189_i;;
				};
			}
			_iter_next_1c7c8d214:;
			++it;
			_3189_i++;
			goto _iter_begin_1c7c8d214;
		}
		_iter_end_1c7c8d214:;
	};
	return -1LL;;
}



inline jule::Str _20b1bcd6e_applyFmt(jule::Str _32617_fmt, jule::Slice<jule::Any> _32627_args) {
	jule::Str _32713_s = jule::Str();;
	{
		auto &expr = _32627_args;
		auto it = expr.begin();
		_iter_begin_1c7c900c3:;
		if (it != expr.end()) {
			jule::Any &_32812_arg = *it;
			{
				jule::I64 _32913_i = _20b1bc9d9_findNextFmt(_32617_fmt);;
				if ((_32913_i == -1LL)) {
					goto _iter_end_1c7c900c3;
				};
				_32713_s+=_32617_fmt.slice(0LL,_32913_i);
				_32713_s+=_20b1bc742_argToStr(_32812_arg);
				(_32617_fmt).mut_slice((_32913_i + 1LL));;
			}
			_iter_next_1c7c900c3:;
			++it;
			goto _iter_begin_1c7c900c3;
		}
		_iter_end_1c7c900c3:;
	};
	_32713_s+=_32617_fmt;
	return _32713_s;;
}



inline jule::Bool _20b1bdde7_IsTopDirective(jule::Str _2819_directive) {
	return ((_2819_directive == jule::Str("pass", 4)) || (_2819_directive == jule::Str("build", 5)));;
}



inline jule::Bool _20b1c0327_IsWindows(jule::Str _3714_os) {
	return (_3714_os == jule::Str("windows", 7));;
}



inline jule::Bool _20b1c05d0_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == jule::Str("darwin", 6));;
}



inline jule::Bool _20b1c0877_IsLinux(jule::Str _4312_os) {
	return (_4312_os == jule::Str("linux", 5));;
}



inline jule::Bool _20b1c0b96_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == jule::Str("i386", 4));;
}



inline jule::Bool _20b1c0e3d_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == jule::Str("amd64", 5));;
}



inline jule::Bool _20b1c11d5_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == jule::Str("arm64", 5));;
}



inline jule::Bool _20b1c147c_IsUnix(jule::Str _5511_os) {
	return (_20b1c05d0_IsDarwin(_5511_os) || _20b1c0877_IsLinux(_5511_os));;
}



inline jule::Bool _20b1c1801_Is32Bit(jule::Str _5812_arch) {
	return _20b1c0b96_IsI386(_5812_arch);;
}



inline jule::Bool _20b1c1a98_Is64Bit(jule::Str _6112_arch) {
	return (_20b1c0e3d_IsAmd64(_6112_arch) || _20b1c11d5_IsArm64(_6112_arch));;
}



inline void _20b206638_init(void) {
	jule::Str _2513_path = _20b21b241_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_20b20711c_PathWd=({
			auto except = _21649c671_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_20b205deb_PathExec=_22321c8e0_Dir(_2513_path);
		_20b20556b_PathStdlib=_223218d81_Join(jule::Slice<jule::Str>::make({_20b205deb_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_20b215988_PathApi=_223218d81_Join(jule::Slice<jule::Str>::make({_20b205deb_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _20b4e5c8a_IsUnaryOp(jule::Str _31214_kind) {
	{
		auto &expr = _20b444c3e_UnaryOps;
		auto it = expr.begin();
		_iter_begin_1c7cd9040:;
		if (it != expr.end()) {
			jule::Str &_31312_op = *it;
			{
				if ((_31214_kind == _31312_op)) {
					return true;;
				};
			}
			_iter_next_1c7cd9040:;
			++it;
			goto _iter_begin_1c7cd9040;
		}
		_iter_end_1c7cd9040:;
	};
	return false;;
}



inline jule::Bool _20b4e6076_IsBinOp(jule::Str _32212_kind) {
	{
		auto &expr = _20b444e92_BinOps;
		auto it = expr.begin();
		_iter_begin_1c7cd94d5:;
		if (it != expr.end()) {
			jule::Str &_32312_op = *it;
			{
				if ((_32212_kind == _32312_op)) {
					return true;;
				};
			}
			_iter_next_1c7cd94d5:;
			++it;
			goto _iter_begin_1c7cd94d5;
		}
		_iter_end_1c7cd94d5:;
	};
	return false;;
}



inline jule::Bool _20b4e663c_IsStr(jule::Str _34210_k) {
	return ((!(_34210_k.empty())) && ((_34210_k[0LL] == '\"') || _20b4e68d4_IsRawStr(_34210_k)));;
}



inline jule::Bool _20b4e68d4_IsRawStr(jule::Str _34513_k) {
	return ((!(_34513_k.empty())) && (_34513_k[0LL] == '`'));;
}



inline jule::Bool _20b4e6b7b_IsRune(jule::Str _34911_k) {
	return ((!(_34911_k.empty())) && (_34911_k[0LL] == '\''));;
}



inline jule::Bool _20b4e7297_IsBool(jule::Str _35511_k) {
	return ((_35511_k == jule::Str("true", 4)) || (_35511_k == jule::Str("false", 5)));;
}



inline jule::Bool _20b4e753e_IsFloat(jule::Str _35812_k) {
	if (_20b135bc7_HasPrefix(_35812_k,jule::Str("0x", 2))) {
		return _20b13aeb8_ContainsAny(_35812_k,jule::Str(".pP", 3));;
	};
	return _20b13aeb8_ContainsAny(_35812_k,jule::Str(".eE", 3));;
}



inline jule::Bool _20b4e77d6_IsNum(jule::Str _36610_k) {
	if (_36610_k.empty()) {
		return false;;
	};
	jule::U8 _3719_b = _36610_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));;
}



inline jule::Bool _20b4e7d25_IsIgnoreIdent(jule::Str _38118_ident) {
	return (_38118_ident == jule::Str("_", 1));;
}



inline jule::Bool _20b4e80bc_IsAnonIdent(jule::Str _38416_ident) {
	return (_38416_ident == jule::Str("<anonymous>", 11));;
}



inline jule::Bool _20b4e860b_IsSpace(jule::I32 _39712_r) {
	{
		auto &expr = _20b444a1e_Spaces;
		auto it = expr.begin();
		_iter_begin_1c7ce2e39:;
		if (it != expr.end()) {
			jule::I32 &_39812_cr = *it;
			{
				if ((_39712_r == _39812_cr)) {
					return true;;
				};
			}
			_iter_next_1c7ce2e39:;
			++it;
			goto _iter_begin_1c7ce2e39;
		}
		_iter_end_1c7ce2e39:;
	};
	return false;;
}



inline jule::Bool _20b4e8a5c_IsLetter(jule::I32 _40713_r) {
	return _20a3cb8ec_IsLetter(_40713_r);;
}



inline jule::Bool _20b4e909b_IsDecimal(jule::U8 _42714_b) {
	return (('0' <= _42714_b) && (_42714_b <= '9'));;
}



inline jule::Bool _20b4e9343_IsBinary(jule::U8 _43013_b) {
	return ((_43013_b == '0') || (_43013_b == '1'));;
}



inline jule::Bool _20b4e95da_IsOctal(jule::U8 _43312_b) {
	return (('0' <= _43312_b) && (_43312_b <= '7'));;
}



inline jule::Bool _20b4e9882_IsHex(jule::U8 _43610_b) {
	{
		
		if ((('0' <= _43610_b) && (_43610_b <= '9'))) {
			_case_begin_1c7ce7bec:;
			{
				return true;;
			}
		}
		else if ((('a' <= _43610_b) && (_43610_b <= 'f'))) {
			_case_begin_1c7ce7526:;
			{
				return true;;
			}
		}
		else if ((('A' <= _43610_b) && (_43610_b <= 'F'))) {
			_case_begin_1c7ce758c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c7ce74b0:;
			{
				return false;;
			}
		}
		_match_end_1c7ce73e4:;
	};
}



inline jule::Bool _20b4e9b29_IsAssign(jule::U64 _45113_id) {
	return (((((((_45113_id == static_cast<jule::U64>(2LLU)) || (_45113_id == static_cast<jule::U64>(30LLU))) || (_45113_id == static_cast<jule::U64>(33LLU))) || (_45113_id == static_cast<jule::U64>(20LLU))) || (_45113_id == static_cast<jule::U64>(27LLU))) || (_45113_id == static_cast<jule::U64>(3LLU))) || (_45113_id == static_cast<jule::U64>(7LLU)));;
}



inline jule::Bool _20b4e9dc1_IsPostfixOp(jule::Str _46216_kind) {
	{
		auto &expr = _20b4dea86_PostfixOps;
		auto it = expr.begin();
		_iter_begin_1c7ceb052:;
		if (it != expr.end()) {
			jule::Str &_46312_op = *it;
			{
				if ((_46216_kind == _46312_op)) {
					return true;;
				};
			}
			_iter_next_1c7ceb052:;
			++it;
			goto _iter_begin_1c7ceb052;
		}
		_iter_end_1c7ceb052:;
	};
	return false;;
}



inline jule::Bool _20b4ea168_IsAssignOp(jule::Str _47215_kind) {
	if (_20b4e9dc1_IsPostfixOp(_47215_kind)) {
		return true;;
	};
	{
		auto &expr = _20b4ded83_AssignOps;
		auto it = expr.begin();
		_iter_begin_1c7cec251:;
		if (it != expr.end()) {
			jule::Str &_47612_op = *it;
			{
				if ((_47215_kind == _47612_op)) {
					return true;;
				};
			}
			_iter_next_1c7cec251:;
			++it;
			goto _iter_begin_1c7cec251;
		}
		_iter_end_1c7cec251:;
	};
	return false;;
}



inline jule::Ptr<_20b4ea91b_File> _20b4ebe4a_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_20b4ea91b_File>(_20b4ea91b_File{._field_Path=_6315_path, });;
}



inline _20b1bc016_Log _20b4ed6dd_makeErr(jule::I64 _11112_row, jule::I64 _11122_col, jule::Ptr<_20b4ea91b_File>& _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _20b1bc016_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=_11133_f.get()._field_Path, ._field_Text=_20b1bc456_Logf(_11143_fmt,_11156_args), };;
}



inline jule::Bool _20b4eda73_bytesHasPrefix(jule::Slice<jule::U8>& _12120_bytes, jule::Str _12135_prefix) {
	if ((_12120_bytes.len() < _12135_prefix.len())) {
		return false;;
	};
	{
		auto &expr = _12135_prefix;
		auto it = expr.begin();
		_iter_begin_1c7d07118:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12120_bytes[_1259_i] != _12135_prefix[_1259_i])) {
					return false;;
				};
			}
			_iter_next_1c7d07118:;
			++it;
			_1259_i++;
			goto _iter_begin_1c7d07118;
		}
		_iter_end_1c7d07118:;
	};
	return true;;
}



inline jule::Str _20b4eddb4_floatFmtE(jule::Slice<jule::U8>& _13315_txt, jule::I64 _13332_i) {
	jule::Str __jule_func_result;
	(_13332_i)++;
	if ((_13332_i >= _13315_txt.len())) {
		return __jule_func_result;;
	};
	jule::U8 _13913_b = _13315_txt[_13332_i];;
	if ((_13913_b == '_')) {
		return __jule_func_result;;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= _13315_txt.len())) {
			return __jule_func_result;;
		};
		if ((_13315_txt[_13332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1539_first = _13332_i;;
	for (; (_13332_i < _13315_txt.len()); (_13332_i)++) {
		{
			_13913_b=_13315_txt[_13332_i];
			if (((_13913_b != '_') && (!(_20b4e909b_IsDecimal(_13913_b))))) {
				goto _iter_end_1c7d0a5b1;
			};
		}
	_iter_next_1c7d0a5b1:;
	}
	_iter_end_1c7d0a5b1:;;
	if ((_13332_i == _1539_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_13315_txt.slice(0LL,_13332_i));
	return __jule_func_result;;
}



inline jule::Str _20b4ee249_floatFmtP(jule::Slice<jule::U8>& _16715_txt, jule::I64 _16728_i) {
	return _20b4eddb4_floatFmtE(_16715_txt,_16728_i);;
}



inline jule::Str _20b4ee58a_floatFmtDotnp(jule::Slice<jule::U8>& _17119_txt, jule::I64 _17136_i) {
	if ((_17119_txt[_17136_i] != '.')) {
		return jule::Str();;
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < _17119_txt.len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = _17119_txt[_17136_i];;
			{
				
				if ((_17913_b == '_') || _20b4e909b_IsDecimal(_17913_b)) {
					_case_begin_1c7d0d41b:;
					{
						goto _iter_next_1c7d0c7b1;
					}
				}
				else if (_20b500d3e_isFloatFmtP(_17913_b,_17136_i)) {
					_case_begin_1c7d0d482:;
					{
						return _20b4ee249_floatFmtP(_17119_txt,_17136_i);;
					}
				}
				else {
					_case_begin_1c7d0d3a5:;
					{
						goto _iter_end_1c7d0c7b1;
					}
				}
				_match_end_1c7d0d33e:;
			};
		}
	_iter_next_1c7d0c7b1:;
	}
	_iter_end_1c7d0c7b1:;;
	return jule::Str();;
}



inline jule::Str _20b4ee8cb_floatFmtDotfp(jule::Slice<jule::U8>& _19219_txt, jule::I64 _19236_i) {
	_19236_i+=2LL;
	return _20b4eddb4_floatFmtE(_19219_txt,_19236_i);;
}



inline jule::Str _20b4eec1c_floatFmtDotp(jule::Slice<jule::U8>& _19718_txt, jule::I64 _19735_i) {
	(_19735_i)++;
	return _20b4eddb4_floatFmtE(_19718_txt,_19735_i);;
}



inline jule::Str _20b50016d_floatNum(jule::Slice<jule::U8>& _20214_txt, jule::I64 _20231_i) {
	jule::Str __jule_func_result;
	(_20231_i)++;
	if ((_20231_i >= _20214_txt.len())) {
		__jule_func_result = static_cast<jule::Str>(_20214_txt);
		return __jule_func_result;;
	};
	if ((_20214_txt[_20231_i] == '_')) {
		(_20231_i)--;
		__jule_func_result = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
		return __jule_func_result;;
	};
	for (; (_20231_i < _20214_txt.len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = _20214_txt[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				__jule_func_result = _20b4eddb4_floatFmtE(_20214_txt,_20231_i);
				return __jule_func_result;;
			};
			if (((_21213_b != '_') && (!(_20b4e909b_IsDecimal(_21213_b))))) {
				goto _iter_end_1c7d1659a;
			};
		}
	_iter_next_1c7d1659a:;
	}
	_iter_end_1c7d1659a:;;
	if ((_20231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
	return __jule_func_result;;
}



inline jule::Str _20b500415_commonNum(jule::Slice<jule::U8>& _22715_txt) {
	jule::Str __jule_func_result;
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22715_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22715_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1c7d19a76:;
					{
						__jule_func_result = _20b50016d_floatNum(_22715_txt,_22813_i);
						return __jule_func_result;;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1c7d19aed:;
					{
						goto _iter_next_1c7d18a64;
					}
				}
				else if (_20b5009ed_isFloatFmtE(_23113_b,_22813_i)) {
					_case_begin_1c7d19b75:;
					{
						__jule_func_result = _20b4eddb4_floatFmtE(_22715_txt,_22813_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_20b4e909b_IsDecimal(_23113_b)))) {
					_case_begin_1c7d19bec:;
					{
						goto _iter_end_1c7d18a64;
					}
				}
				_match_end_1c7d19999:;
			};
		}
	_iter_next_1c7d18a64:;
	}
	_iter_end_1c7d18a64:;;
	if ((_22813_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_22715_txt.slice(0LL,_22813_i));
	return __jule_func_result;;
}



inline jule::Str _20b5006ac_binaryNum(jule::Slice<jule::U8>& _25015_txt) {
	jule::Str __jule_func_result;
	if ((!(_20b4eda73_bytesHasPrefix(_25015_txt,jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if ((_25015_txt.len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25015_txt.len()); (_25913_i)++) {
		{
			if (((_25015_txt[_25913_i] != '_') && (!(_20b4e9343_IsBinary(_25015_txt[_25913_i]))))) {
				goto _iter_end_1c7d1b47e;
			};
		}
	_iter_next_1c7d1b47e:;
	}
	_iter_end_1c7d1b47e:;;
	if ((_25913_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_25015_txt.slice(0LL,_25913_i));
	return __jule_func_result;;
}



inline jule::Bool _20b5009ed_isFloatFmtE(jule::U8 _27216_b, jule::I64 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));;
}



inline jule::Bool _20b500d3e_isFloatFmtP(jule::U8 _27616_b, jule::I64 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));;
}



inline jule::Bool _20b501180_isFloatFmtDotnp(jule::Slice<jule::U8>& _28021_txt, jule::I64 _28038_i) {
	if ((_28021_txt[_28038_i] != '.')) {
		return false;;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < _28021_txt.len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = _28021_txt[_28038_i];;
			{
				
				if ((_28713_b == '_') || _20b4e909b_IsDecimal(_28713_b)) {
					_case_begin_1c7d223a8:;
					{
						goto _iter_next_1c7d211ba;
					}
				}
				else if (_20b500d3e_isFloatFmtP(_28713_b,_28038_i)) {
					_case_begin_1c7d2241e:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1c7d22342:;
					{
						goto _iter_end_1c7d211ba;
					}
				}
				_match_end_1c7d222cb:;
			};
		}
	_iter_next_1c7d211ba:;
	}
	_iter_end_1c7d211ba:;;
	return false;;
}



inline jule::Bool _20b5014c1_isFloatFmtDotp(jule::Slice<jule::U8>& _30120_txt, jule::I64 _30133_i) {
	{
		
		if ((_30120_txt.len() < 3LL)) {
			_case_begin_1c7d2409c:;
			{
				goto _case_begin_1c7d238c6;
			}
		}
		else if ((_30120_txt[_30133_i] != '.')) {
			_case_begin_1c7d238c6:;
			{
				goto _case_begin_1c7d2393c;
			}
		}
		else if (((_30120_txt[(_30133_i + 1LL)] != 'p') && (_30120_txt[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_1c7d2393c:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c7d23860:;
			{
				return true;;
			}
		}
		_match_end_1c7d23794:;
	};
}



inline jule::Bool _20b501812_isFloatFmtDotfp(jule::Slice<jule::U8>& _31421_txt, jule::I64 _31434_i) {
	{
		
		if ((_31421_txt.len() < 4LL)) {
			_case_begin_1c7d2639b:;
			{
				goto _case_begin_1c7d25bd6;
			}
		}
		else if ((_31421_txt[_31434_i] != '.')) {
			_case_begin_1c7d25bd6:;
			{
				goto _case_begin_1c7d25c4c;
			}
		}
		else if (((_31421_txt[(_31434_i + 1LL)] != 'f') && (_31421_txt[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_1c7d25c4c:;
			{
				goto _case_begin_1c7d25cb3;
			}
		}
		else if (((_31421_txt[(_31434_i + 2LL)] != 'p') && (_31421_txt[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_1c7d25cb3:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c7d25774:;
			{
				return true;;
			}
		}
		_match_end_1c7d256a8:;
	};
}



inline jule::Str _20b501c63_octalNum(jule::Slice<jule::U8>& _32914_txt) {
	jule::Str __jule_func_result;
	if ((_32914_txt[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if ((_32914_txt.len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32914_txt[1LL] == 'o')) {
		if ((_32914_txt.len() < 3LL)) {
			return __jule_func_result;;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octalStart;;
	for (; (_34813_i < _32914_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32914_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _20b50016d_floatNum(_32914_txt,_34813_i);
				return __jule_func_result;;
			};
			if (_20b5009ed_isFloatFmtE(_35013_b,_34813_i)) {
				__jule_func_result = _20b4eddb4_floatFmtE(_32914_txt,_34813_i);
				return __jule_func_result;;
			};
			if (((_35013_b != '_') && (!(_20b4e95da_IsOctal(_35013_b))))) {
				goto _iter_end_1c7d2a3e4;
			};
		}
	_iter_next_1c7d2a3e4:;
	}
	_iter_end_1c7d2a3e4:;;
	if ((_34813_i == _33713_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_32914_txt.slice(0LL,_34813_i));
	return __jule_func_result;;
}



inline jule::Str _20b50200a_hexNum(jule::Slice<jule::U8>& _37112_txt) {
	jule::Str __jule_func_result;
	if ((_37112_txt.len() < 3LL)) {
		return __jule_func_result;;
	};
	if (((_37112_txt[0LL] != '0') || ((_37112_txt[1LL] != 'x') && (_37112_txt[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37112_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37112_txt[_38013_i];;
			{
				
				if (_20b5014c1_isFloatFmtDotp(_37112_txt,_38013_i)) {
					_case_begin_1c7d3140b:;
					{
						__jule_func_result = _20b4eec1c_floatFmtDotp(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (_20b501812_isFloatFmtDotfp(_37112_txt,_38013_i)) {
					_case_begin_1c7d31483:;
					{
						__jule_func_result = _20b4ee8cb_floatFmtDotfp(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (_20b500d3e_isFloatFmtP(_38313_b,_38013_i)) {
					_case_begin_1c7d3150a:;
					{
						__jule_func_result = _20b4ee249_floatFmtP(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (_20b501180_isFloatFmtDotnp(_37112_txt,_38013_i)) {
					_case_begin_1c7d31582:;
					{
						__jule_func_result = _20b4ee58a_floatFmtDotnp(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (((_38313_b != '_') && (!(_20b4e9882_IsHex(_38313_b))))) {
					_case_begin_1c7d31609:;
					{
						goto _iter_end_1c7d3064c;
					}
				}
				_match_end_1c7d3131d:;
			};
		}
	_iter_next_1c7d3064c:;
	}
	_iter_end_1c7d3064c:;;
	if ((_38013_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_37112_txt.slice(0LL,_38013_i));
	return __jule_func_result;;
}



inline jule::Str _20b50234b_hexEscape(jule::Slice<jule::U8>& _40415_txt, jule::I64 _40428_n) {
	jule::Str __jule_func_result;
	if ((_40415_txt.len() < _40428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_20b4e9882_IsHex(_40415_txt[_41013_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1c7d33cd2:;
	}
	_iter_end_1c7d33cd2:;;
	__jule_func_result=static_cast<jule::Str>(_40415_txt.slice(0LL,_40428_n));
	return __jule_func_result;;
}



inline jule::Str _20b5025e3_bigUnicodePointEscape(jule::Slice<jule::U8>& _42227_txt) {
	return _20b50234b_hexEscape(_42227_txt,10LL);;
}



inline jule::Str _20b5028ac_littleUnicodePointEscape(jule::Slice<jule::U8>& _42730_txt) {
	return _20b50234b_hexEscape(_42730_txt,6LL);;
}



inline jule::Str _20b502a66_hexByteEscape(jule::Slice<jule::U8>& _43219_txt) {
	return _20b50234b_hexEscape(_43219_txt,4LL);;
}



inline jule::Str _20b502cec_byteEscape(jule::Slice<jule::U8>& _43716_txt) {
	jule::Str __jule_func_result;
	if ((_43716_txt.len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_20b4e95da_IsOctal(_43716_txt[1LL]))) || (!(_20b4e95da_IsOctal(_43716_txt[2LL])))) || (!(_20b4e95da_IsOctal(_43716_txt[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_43716_txt.slice(0LL,4LL));
	return __jule_func_result;;
}



inline jule::Slice<_20b1bc016_Log> _20b5077e6_Lex(jule::Ptr<_20b4ea91b_File> _82612_f, jule::I64 _82622_mode) {
	if ((_82612_f == nullptr)) {
		return nullptr;;
	};
	_20b5034d4_lex _83113_lex = _20b5034d4_lex{._field_mode=_82622_mode, ._field_file=_82612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_20b506075_newLine(&_83113_lex);
	_20b504073_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;;
	};
	_82612_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;;
}



inline jule::I64 _20d7b6751_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _20d7bdbcb_Len64(_6119_x)));;
}



inline jule::I64 _20d7b7686_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_20d7b8324_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _20d7b807c_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_20d7b6d5b__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _20d7b8324_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_20d7b7422__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _20d7bd934_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _20d7bdbcb_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline _u64_u64 _20d7be88b_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	_u64_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline _u64_u64 _20d7c101e_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	_u64_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _20d6dd788_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _20d6dda74_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _20d6ddd1b_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _20d6de13a_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline _f64_int _20d6e1626_Frexp(jule::F64 _4714_f) {
	_f64_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1c7eade5c:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_20d7c5166_IsInf(_4714_f,0LL) || _20d7c4e02_IsNaN(_4714_f)) {
			_case_begin_1c7eaded4:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1c7eadd4c:;
	};
	({
		_f64_int __jule_assign_result = _20d7c5298_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _20d6ddd1b_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_20d6de13a_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _20d7c4cc0_NaN(void) {
	return static_cast<jule::F64>(_20d6de13a_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _20d7c4e02_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _20d7c5034_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_20d6de13a_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_20d6de13a_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _20d7c5166_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline _f64_int _20d7c5298_normalize(jule::F64 _8214_x) {
	_f64_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_20d7c6783_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _20d7c6167_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_20d7c4e02_IsNaN(_1118_x) || _20d7c5166_IsInf(_1118_x,1LL)) {
			_case_begin_1c80000ad:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1c8000135:;
			{
				return static_cast<jule::F64>(_20d7c4cc0_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1c80001ac:;
			{
				return static_cast<jule::F64>(_20d7c5034_Inf(-1LL));;
			}
		}
		_match_end_1c7eeeee2:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I64 _13322_ki = 0;;
	({
		_f64_int __jule_assign_result = _20d6e1626_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _20d7c6783_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_20d6de13a_F64FromBits(static_cast<jule::U64>((_20d6ddd1b_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline _f64_f64 _20d7ca534_Modf(jule::F64 _449_f) {
	_f64_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _20d7c6783_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1c806a623:;
		}
		_iter_end_1c806a623:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _20d7ca974_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I64 _4516_exp = 0;;
	({
		_f64_int __jule_assign_result = _20d6e1626_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_20d7c6167_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _20d25c03d_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_20d2546a6_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _20d61d740_max(static_cast<jule::I64>((_7832_prec + 4LL)),24LL), 0),_7813_f,_7821_fmt,_7832_prec,_7843_bit_size));;
}



inline jule::Slice<jule::U8> _20d2546a6_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_20d3d1206_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1c827b6e1:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_20d6dd788_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_20d3d1206_floatInfo>)((&(_20d23e11e_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c827b8bc:;
			{
				_8313_bits=static_cast<jule::U64>(_20d6ddd1b_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_20d3d1206_floatInfo>)((&(_20d23e581_f64info))));
			}
		}
		else {
			_case_begin_1c827b0c5:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1c8279cc7:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1c828000d:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1c8282450:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1c82825e8:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1c82814e8:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1c828142c:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1c8280a7a:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1c827b933:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1c827eea8:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _20d484d59_fmtB(_8220_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _20d51603e_fmtX(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));;
	};
	;
	_20d65823b_decimalSlice _13213_digs = _20d65823b_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_20d803c55_ryuFtoaShortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c8286113:;
				{
					_8258_prec=static_cast<jule::I64>(_20d61d740_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c82861e0:;
				{
					_8258_prec=static_cast<jule::I64>(_20d61d740_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c8286256:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1c82854ca:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c8287d4b:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c82883ce:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1c82882d0:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1c828819d:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_20d80378d_ryuFtoaFixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_20d8038c0_ryuFtoaFixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _20d280eb8_bigFtoa(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));;
	};
	return _20d2e4b53_fmtDigits(_8220_dst,_1359_shortest,_969_neg,_13213_digs,_8258_prec,_8243_fmt);;
}



inline jule::Slice<jule::U8> _20d280eb8_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _20d3d1206_floatInfo& _18327_flt) {
	_20d8052a6_decimal _18413_d = _20d8052a6_decimal{};;
	_20d805493_assign(&_18413_d, _1835_mant);
	_20d8055c5_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_20d65823b_decimalSlice _18713_digs = _20d65823b_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_20d3ada85_roundShortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_20d65823b_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c828d390:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c8290a46:;
				{
					_18233_prec=static_cast<jule::I64>(_20d61d740_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c8290b01:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1c829077c:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c8292471:;
				{
					_20d80596b_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c82924e8:;
				{
					_20d80596b_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c8292570:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_20d80596b_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1c8292350:;
		};
		_18713_digs=_20d65823b_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _20d2e4b53_fmtDigits(_18216_dst,_1889_shortest,_18255_neg,_18713_digs,_18233_prec,_18244_fmt);;
}



inline jule::Slice<jule::U8> _20d2e4b53_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _20d65823b_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1c8295bb1:;
			{
				return _20d3d2229_fmtE(_21918_dst,_21947_neg,_2205_digs,_22029_prec,_22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c8295c27:;
			{
				return _20d4629a2_fmtF(_21918_dst,_21947_neg,_2205_digs,_22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1c8295c8d:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _20d3d2229_fmtE(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _20d4629a2_fmtF(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>(_20d61d740_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));;
			}
		}
		_match_end_1c8295a6d:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _20d3ada85_roundShortest(_20d8052a6_decimal& _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _20d3d1206_floatInfo& _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		_25723_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25757_flt._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * (_25723_d._field_dp - _25723_d._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)))))) {
		return;;
	};
	_20d8052a6_decimal _28713_upper = _20d8052a6_decimal{};;
	_20d805493_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_20d8055c5_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << _25757_flt._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_20d8052a6_decimal _30613_lower = _20d8052a6_decimal{};;
	_20d805493_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_20d8055c5_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25723_d._field_dp);;
			if ((_33513_mi >= _25723_d._field_nd)) {
				goto _iter_end_1c82a387d;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25723_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1c82a89e8:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1c82a8a70:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1c82a8ae7:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1c82a892c:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1c82abcd7:;
					{
						_20d80596b_round(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1c82abd5e:;
					{
						_20d805707_roundDown(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1c82abdd6:;
					{
						_20d805839_roundUp(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1c82abc1b:;
			};
		}
	_iter_next_1c82a387d:;
	}
	_iter_end_1c82a387d:;;
}



inline jule::Slice<jule::U8> _20d3d2229_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _20d65823b_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _20d5d045a_min(_39637_d._field_nd,static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1c82add94:;
		}
		_iter_end_1c82add94:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1c82b38b0:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1c82b3e65:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1c82b3b13:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1c82b3d11:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _20d4629a2_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _20d65823b_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _20d5d045a_min(_45137_d._field_nd,_45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1c82b8244:;
		}
		_iter_end_1c82b8244:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1c82b991b:;
		}
		_iter_end_1c82b991b:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _20d484d59_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _20d3d1206_floatInfo& _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	({
		_su8_str __jule_assign_result = _20d8075a5_fmtBits(_48413_dst,_48437_mant,10LL,false,true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>(_48463_flt._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	({
		_su8_str __jule_assign_result = _20d8075a5_fmtBits(_48413_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)),10LL,(_48452_exp < 0LL),true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _20d51603e_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _20d3d1206_floatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1c82bca62:;
	}
	_iter_end_1c82bca62:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1c82c54d7:;
		}
		_iter_end_1c82c54d7:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1c82c6d68:;
		}
		_iter_end_1c82c6d68:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _20d61da70_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1c82c4195:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1c82c4085:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1c82c9750:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1c82c993c:;
	};
	return _50613_dst;;
}



inline jule::I64 _20d5d045a_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I64 _20d61d740_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _20d61da70_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline _u64__20d20e188_ConvError _20d6717b5_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	_u64__20d20e188_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (_5118_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1c82d15e2:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1c82d14c1:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_20d61da70_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1c82d33e6:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_20d61da70_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1c82d3209:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_20d61da70_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1c82d3270:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1c82d2d63:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1c82d2c97:;
					};
				};
			}
		}
		else {
			_case_begin_1c82d07cd:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1c82d0767:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1c82d80cc:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1c82d76e7:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1c82d79c2:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1c82d784b:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1c82d7ab0:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c82d9221:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1c82d7d02:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5118_s;
		auto it = expr.begin();
		_iter_begin_1c82da332:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1c82dad7c:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _20d61da70_lower(_10912_c)) && (_20d61da70_lower(_10912_c) <= 'z'))) {
						_case_begin_1c82db674:;
						{
							_11017_d=static_cast<jule::U8>(((_20d61da70_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1c82db29a:;
						{
							goto _iter_next_1c82da332;
						}
					}
					else {
						_case_begin_1c82db234:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1c82db1bd:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1c82da332:;
			++it;
			goto _iter_begin_1c82da332;
		}
		_iter_end_1c82da332:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _20d3d4eeb_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I64 _14714_err = 0LL;;
	({
		_u64__20d20e188_ConvError __jule_assign_result = _20d6717b5_parseUint(_14618_s,_14630_base,_14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _20d240a38_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I64 _18718_err = 0LL;;
	({
		_u64__20d20e188_ConvError __jule_assign_result = _20d6717b5_parseUint(_17217_s,_17225_base,_17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline _f64_bool _20d299311_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	_f64_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_20d6de13a_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _579_clz = _20d7b6751_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		_u64_u64 __jule_assign_result = _20d7c101e_Mul64(_4122_man,_20d3d336d_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			_u64_u64 __jule_assign_result = _20d7c101e_Mul64(_4122_man,_20d3d336d_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_20d6de13a_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline _f32_bool _20d4c7011_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	_f32_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_20d6dda74_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1329_clz = _20d7b6751_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		_u64_u64 __jule_assign_result = _20d7c101e_Mul64(_11022_man,_20d3d336d_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			_u64_u64 __jule_assign_result = _20d7c101e_Mul64(_11022_man,_20d3d336d_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_20d6dda74_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _20d4c60ed_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;;
			};
		}
	_iter_next_1c8312c50:;
	}
	_iter_end_1c8312c50:;;
	return _4613_n;;
}



inline _f64_int_bool _20d4c6230_special(jule::Str _6816_s) {
	_f64_int_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if (_6816_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1c831710b:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1c8317183;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1c8317183:;
			{
				jule::I64 _8317_caseN = _20d4c60ed_commonPrefixLenIgnoreCase(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_20d7c5034_Inf(_7213_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_7313_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1c831720a:;
			{
				if ((_20d4c60ed_commonPrefixLenIgnoreCase(_6816_s,jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_20d7c4cc0_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1c8317040:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline _u64_int_bool_bool_bool_int_bool _20d22cdcc_readFloat(jule::Str _10314_s) {
	_u64_int_bool_bool_bool_int_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1c831cc7c:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1c831cd04:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1c831cb39:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < _10314_s.len()) && (_10314_s[__jule_func_result.__jule_result_arg5] == '0')) && (_20d61da70_lower(_10314_s[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_11913_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < _10314_s.len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13313_c = _10314_s[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1c8323e70:;
					{
						goto _iter_next_1c83233c0;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1c8323ee7:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1c83233c0;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1c832406e:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1c83233c0;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_11713_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1c83233c0;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _20d61da70_lower(_13313_c))) && (_20d61da70_lower(_13313_c) <= 'f'))) {
					_case_begin_1c83240e6:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_20d61da70_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1c83233c0;
					}
				}
				_match_end_1c8323d93:;
			};
			goto _iter_end_1c83233c0;
		}
	_iter_next_1c83233c0:;
	}
	_iter_end_1c83233c0:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && (_20d61da70_lower(_10314_s[__jule_func_result.__jule_result_arg5]) == _11913_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_19617_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= _10314_s.len()) || (_10314_s[__jule_func_result.__jule_result_arg5] < '0')) || (_10314_s[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && ((('0' <= _10314_s[__jule_func_result.__jule_result_arg5]) && (_10314_s[__jule_func_result.__jule_result_arg5] <= '9')) || (_10314_s[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if ((_10314_s[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1c832d4c9;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1c832d4c9:;
		}
		_iter_end_1c832d4c9:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline _f64_bool _20d802a23_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	_f64_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48116_mantissa >> _20d23e581_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1c833843a:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1c83384b2:;
			{
				if ((_48135_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_20d536dd9_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _20d536dd9_f64pow10[_48135_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1c8338539:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_20d536dd9_f64pow10[(-(_48135_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c833836e:;
	};
	return __jule_func_result;;
}



inline _f32_bool _20d802b55_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	_f32_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_51516_mantissa >> _20d23e11e_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1c833d121:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1c833d198:;
			{
				if ((_51535_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_20d554cb4_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _20d554cb4_f32pow10[_51535_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1c833d220:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_20d554cb4_f32pow10[(-(_51535_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c833d055:;
	};
	return __jule_func_result;;
}



inline _f64__20d20e188_ConvError _20d802c87_atofHex(jule::Str _55112_s, _20d3d1206_floatInfo& _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	_f64__20d20e188_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << _55121_flt._field_expbits)) + _55121_flt._field_bias) - 2LL);;
	jule::I64 _5539_minExp = (_55121_flt._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>(_55121_flt._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> (_55121_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1c8343027:;
	}
	_iter_end_1c8343027:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + _55121_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1c8344dc5:;
	}
	_iter_end_1c8344dc5:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1c8345898:;
	}
	_iter_end_1c8345898:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + _55121_flt._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> _55121_flt._field_mantbits) == 0LLU)) {
		_55160_exp=_55121_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55121_flt._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << _55121_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - _55121_flt._field_bias) & static_cast<jule::I64>(((1LL << _55121_flt._field_expbits) - 1LL)))) << _55121_flt._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << _55121_flt._field_mantbits) << _55121_flt._field_expbits);
	};
	if ((_55121_flt == _20d23e11e_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_20d6dda74_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits)))));
		__jule_func_result.__jule_result_arg1 = _59813_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_20d6de13a_F64FromBits(_60513_bits));
	__jule_func_result.__jule_result_arg1 = _59813_err;
	return __jule_func_result;;
}



inline _f32_int__20d20e188_ConvError _20d802ec9_atof32(jule::Str _61611_s) {
	_f32_int__20d20e188_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _61814_val = 0;;
		jule::I64 _61819__n = 0;;
		jule::Bool _61823_ok = false;;
		({
			_f64_int_bool __jule_assign_result = _20d4c6230_special(_61611_s);
			_61814_val = __jule_assign_result.__jule_result_arg0;
			_61819__n = __jule_assign_result.__jule_result_arg1;
			_61823_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_61823_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			__jule_func_result.__jule_result_arg1 = _61819__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62410_mantissa = 0;;
	jule::I64 _62420_exp = 0;;
	jule::Bool _62425_neg = false;;
	jule::Bool _62430_trunc = false;;
	jule::Bool _62437_hex = false;;
	jule::I64 _62442__n = 0;;
	jule::Bool _62450_ok = false;;
	({
		_u64_int_bool_bool_bool_int_bool __jule_assign_result = _20d22cdcc_readFloat(_61611_s);
		_62410_mantissa = __jule_assign_result.__jule_result_arg0;
		_62420_exp = __jule_assign_result.__jule_result_arg1;
		_62425_neg = __jule_assign_result.__jule_result_arg2;
		_62430_trunc = __jule_assign_result.__jule_result_arg3;
		_62437_hex = __jule_assign_result.__jule_result_arg4;
		_62442__n = __jule_assign_result.__jule_result_arg5;
		_62450_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62442__n;
	if ((!(_62450_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		({
			_f64__20d20e188_ConvError __jule_assign_result = _20d802c87_atofHex(_61611_s.slice(0LL,__jule_func_result.__jule_result_arg1),_20d23e11e_f32info,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
			_63117_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62430_trunc))) {
			({
				_f32_bool __jule_assign_result = _20d802b55_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62450_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			_f32_bool __jule_assign_result = _20d4c7011_eiselLemire32(_62410_mantissa,_62420_exp,_62425_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62450_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65321_fUp = 0.0f;;
			({
				_f32_bool __jule_assign_result = _20d4c7011_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
				_65321_fUp = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62450_ok && (__jule_func_result.__jule_result_arg0 == _65321_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_20d8052a6_decimal _66213_d = _20d8052a6_decimal{};;
	if ((!(_20d22d130_set(&_66213_d, _61611_s.slice(0LL,__jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _66610_b = 0;;
	jule::Bool _66613_ovf = false;;
	({
		_u64_bool __jule_assign_result = _20d80256c_floatBits(&_66213_d, _20d23e11e_f32info);
		_66610_b = __jule_assign_result.__jule_result_arg0;
		_66613_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_20d6dda74_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline _f64_int__20d20e188_ConvError _20d80310b_atof64(jule::Str _67411_s) {
	_f64_int__20d20e188_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _67614_val = 0;;
		jule::I64 _67619__n = 0;;
		jule::Bool _67623_ok = false;;
		({
			_f64_int_bool __jule_assign_result = _20d4c6230_special(_67411_s);
			_67614_val = __jule_assign_result.__jule_result_arg0;
			_67619__n = __jule_assign_result.__jule_result_arg1;
			_67623_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_67623_ok) {
			__jule_func_result.__jule_result_arg0 = _67614_val;
			__jule_func_result.__jule_result_arg1 = _67619__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68210_mantissa = 0;;
	jule::I64 _68220_exp = 0;;
	jule::Bool _68225_neg = false;;
	jule::Bool _68230_trunc = false;;
	jule::Bool _68237_hex = false;;
	jule::I64 _68242__n = 0;;
	jule::Bool _68250_ok = false;;
	({
		_u64_int_bool_bool_bool_int_bool __jule_assign_result = _20d22cdcc_readFloat(_67411_s);
		_68210_mantissa = __jule_assign_result.__jule_result_arg0;
		_68220_exp = __jule_assign_result.__jule_result_arg1;
		_68225_neg = __jule_assign_result.__jule_result_arg2;
		_68230_trunc = __jule_assign_result.__jule_result_arg3;
		_68237_hex = __jule_assign_result.__jule_result_arg4;
		_68242__n = __jule_assign_result.__jule_result_arg5;
		_68250_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68242__n;
	if ((!(_68250_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68237_hex) {
		({
			_f64__20d20e188_ConvError __jule_assign_result = _20d802c87_atofHex(_67411_s.slice(0LL,__jule_func_result.__jule_result_arg1),_20d23e581_f64info,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68230_trunc))) {
			({
				_f64_bool __jule_assign_result = _20d802a23_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68250_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			_f64_bool __jule_assign_result = _20d299311_eiselLemire64(_68210_mantissa,_68220_exp,_68225_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68250_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71021_fUp = 0LL;;
			({
				_f64_bool __jule_assign_result = _20d299311_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
				_71021_fUp = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68250_ok && (__jule_func_result.__jule_result_arg0 == _71021_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_20d8052a6_decimal _71913_d = _20d8052a6_decimal{};;
	if ((!(_20d22d130_set(&_71913_d, _67411_s.slice(0LL,__jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72310_b = 0;;
	jule::Bool _72313_ovf = false;;
	({
		_u64_bool __jule_assign_result = _20d80256c_floatBits(&_71913_d, _20d23e581_f64info);
		_72310_b = __jule_assign_result.__jule_result_arg0;
		_72313_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_20d6de13a_F64FromBits(_72310_b));
	if (_72313_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline _f64_int__20d20e188_ConvError _20d80323d_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	_f64_int__20d20e188_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f = 0;;
		jule::I64 _73317_n = 0;;
		jule::I64 _73320_err = 0LL;;
		({
			_f32_int__20d20e188_ConvError __jule_assign_result = _20d802ec9_atof32(_73121_s);
			_73314_f = __jule_assign_result.__jule_result_arg0;
			_73317_n = __jule_assign_result.__jule_result_arg1;
			_73320_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73314_f));
		__jule_func_result.__jule_result_arg1 = _73317_n;
		__jule_func_result.__jule_result_arg2 = _73320_err;
		return __jule_func_result;;
	};
	jule::F64 _73710_f = 0;;
	jule::I64 _73713_n = 0;;
	jule::I64 _73716_err = 0LL;;
	({
		_f64_int__20d20e188_ConvError __jule_assign_result = _20d80310b_atof64(_73121_s);
		_73710_f = __jule_assign_result.__jule_result_arg0;
		_73713_n = __jule_assign_result.__jule_result_arg1;
		_73716_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _73710_f;
	__jule_func_result.__jule_result_arg1 = _73713_n;
	__jule_func_result.__jule_result_arg2 = _73716_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _20d803370_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f = 0;;
	jule::I64 _76613_n = 0;;
	jule::I64 _76616_err = 0LL;;
	({
		_f64_int__20d20e188_ConvError __jule_assign_result = _20d80323d_parseFloatPrefix(_76515_s,_76523_bit_size);
		_76610_f = __jule_assign_result.__jule_result_arg0;
		_76613_n = __jule_assign_result.__jule_result_arg1;
		_76616_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _76610_f);;
}



inline void _20d80378d_ryuFtoaFixed32(_20d65823b_decimalSlice& _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			_4924_d._field_nd = ___jule_assign_arg;
			_4924_d._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _20d7bd934_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_20d803d87_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I64 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		_u32_int_bool __jule_assign_result = _20d8045a2_mult64bitPow10(_4945_mant,_6213_e2,_749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _20d804816_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_20d803b23_formatDecimal(_4924_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_roundUp,_4966_prec);
	_4924_d._field_dp-=_749_q;
}



inline void _20d8038c0_ryuFtoaFixed64(_20d65823b_decimalSlice& _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			_12124_d._field_nd = ___jule_assign_arg;
			_12124_d._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _20d7bdbcb_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_20d803d87_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I64 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		_u64_int_bool __jule_assign_result = _20d8046d4_mult128bitPow10(_12145_mant,_13113_e2,_1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _20d804816_divisibleByPow5(_12145_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_20d803b23_formatDecimal(_12124_d,_15314_di,(!(_15329_d0)),_17113_roundUp,_12166_prec);
	_12124_d._field_dp-=_1469_q;
}



inline void _20d803b23_formatDecimal(_20d65823b_decimalSlice& _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _20d5d2902_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1c837b802:;
	}
	_iter_end_1c837b802:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	_20023_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1c83802a6:;
	}
	_iter_end_1c83802a6:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20023_d._field_d[(_20023_d._field_nd - 1LL)] == '0')) {
		{
			(_20023_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1c83860d1:;
	}
	_iter_end_1c83860d1:;;
	_20023_d._field_dp=static_cast<jule::I64>((_20023_d._field_nd + _20213_trimmed));
}



inline void _20d803c55_ryuFtoaShortest(_20d65823b_decimalSlice& _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _20d3d1206_floatInfo& _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			_26125_d._field_nd = ___jule_assign_arg;
			_26125_d._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_20d7b8324_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_20d80433d_ryuDigits(_26125_d,_26146_mant,_26146_mant,_26146_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I64 _27326_e2 = 0;;
	({
		_u64_u64_u64_int __jule_assign_result = _20d8040eb_computeBounds(_26146_mant,_26157_exp,_26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_20d80433d_ryuDigits(_26125_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_20d803d87_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26168_flt == _20d23e11e_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			_u32_int_bool __jule_assign_result = _20d8045a2_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			_u32_int_bool __jule_assign_result = _20d8045a2_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			_u32_int_bool __jule_assign_result = _20d8045a2_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			_u64_int_bool __jule_assign_result = _20d8046d4_mult128bitPow10(_27310_ml,_27326_e2,_2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			_u64_int_bool __jule_assign_result = _20d8046d4_mult128bitPow10(_27314_mc,_27326_e2,_2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			_u64_int_bool __jule_assign_result = _20d8046d4_mult128bitPow10(_27318_mu,_27326_e2,_2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_20d804816_divisibleByPow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_20d804816_divisibleByPow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_20d804816_divisibleByPow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_20d80433d_ryuDigits(_26125_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26125_d._field_dp-=_2799_q;
}



inline jule::I64 _20d803d87_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _20d803eb9_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline _u64_u64_u64_int _20d8040eb_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _20d3d1206_floatInfo& _3966_flt) {
	_u64_u64_u64_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << _3966_flt._field_mantbits)) || (_39529_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _20d80433d_ryuDigits(_20d65823b_decimalSlice& _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		_u32_u32 __jule_assign_result = _20d804948_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		_u32_u32 __jule_assign_result = _20d804948_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		_u32_u32 __jule_assign_result = _20d804948_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_20d804470_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_20d804470_ryuDigits32(_40919_d,_41014_lhi,_41110_chi,_41210_uhi,_40978_c0,_40992_cup,8LL);
		_40919_d._field_dp+=9LL;
	} else {
		_40919_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40919_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1c83aada3:;
		}
		_iter_end_1c83aada3:;;
		_40919_d._field_d=_40919_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40919_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_20d804470_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,static_cast<jule::I64>((_40919_d._field_nd + 8LL)));
	};
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[(_40919_d._field_nd - 1LL)] == '0'))) {
		{
			(_40919_d._field_nd)--;
		}
	_iter_next_1c83ab436:;
	}
	_iter_end_1c83ab436:;;
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[0LL] == '0'))) {
		{
			(_40919_d._field_nd)--;
			(_40919_d._field_dp)--;
			_40919_d._field_d=_40919_d._field_d.slice(1LL);
		}
	_iter_next_1c83aaaa6:;
	}
	_iter_end_1c83aaaa6:;;
}



inline void _20d804470_ryuDigits32(_20d65823b_decimalSlice& _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45421_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1c83b1a68;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1c83b1a68:;
	}
	_iter_end_1c83b1a68:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45421_d._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			_45421_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45421_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1c83b8542:;
	}
	_iter_end_1c83b8542:;;
	if ((_51013_n == _45421_d._field_nd)) {
		_45421_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45421_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45421_d._field_dp=static_cast<jule::I64>((_45421_d._field_nd + _46013_trimmed));
}



inline _u32_int_bool _20d8045a2_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	_u32_int_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _20d3d336d_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		_u64_u64 __jule_assign_result = _20d7c101e_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)),_54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_20d803eb9_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline _u64_int_bool _20d8046d4_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	_u64_int_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _20d3d336d_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_20d803eb9_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		_u64_u64 __jule_assign_result = _20d7c101e_Mul64(_56220_m,_57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		_u64_u64 __jule_assign_result = _20d7c101e_Mul64(_56220_m,_57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		_u64_u64 __jule_assign_result = _20d7be88b_Add64(_57910_l1,_58018_h0,0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _20d804816_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1c83c7683:;
	}
	_iter_end_1c83c7683:;;
	return true;;
}



inline _u32_u32 _20d804948_divmod1e9(jule::U64 _60214_x) {
	_u32_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _20d805d12_trim(_20d8052a6_decimal& _45314_a) {
	while (((_45314_a._field_nd > 0LL) && (_45314_a._field_d[(_45314_a._field_nd - 1LL)] == '0'))) {
		{
			(_45314_a._field_nd)--;
		}
	_iter_next_1c83cac4c:;
	}
	_iter_end_1c83cac4c:;;
	if ((_45314_a._field_nd == 0LL)) {
		_45314_a._field_dp=0LL;
	};
}



inline void _20d805e44_rightShift(_20d8052a6_decimal& _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= _46320_a._field_nd)) {
				if ((_46813_n == 0LLU)) {
					_46320_a._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1c83ce57a:;
				}
				_iter_end_1c83ce57a:;;
				goto _iter_end_1c83cd1c2;
			};
			jule::U64 _48213_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1c83cd1c2:;
	}
	_iter_end_1c83cd1c2:;;
	_46320_a._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < _46320_a._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1c83d1d74:;
	}
	_iter_end_1c83d1d74:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				_46320_a._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_1c83d3848:;
	}
	_iter_end_1c83d3848:;;
	_46320_a._field_nd=_46513_w;
	_20d805d12_trim(_46320_a);
}



inline jule::Bool _20d806076_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);;
			};
		}
	_iter_next_1c83d66d6:;
	}
	_iter_end_1c83d66d6:;;
	return false;;
}



inline void _20d8061a8_leftShift(_20d8052a6_decimal& _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _20d6c1d32_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_20d806076_prefixIsLessThan(_53119_a._field_d,_53119_a._field_nd,_20d6c1d32_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = _53119_a._field_nd;;
	jule::I64 _53813_w = (_53119_a._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>(_53119_a._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1c83d9c8e:;
	}
	_iter_end_1c83d9c8e:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1c83dc830:;
	}
	_iter_end_1c83dc830:;;
	_53119_a._field_nd+=_53213_delta;
	if ((_53119_a._field_nd >= 800LL)) {
		_53119_a._field_nd=800LL;
	};
	_53119_a._field_dp+=_53213_delta;
	_20d805d12_trim(_53119_a);
}



inline jule::Bool _20d8062da_shouldRoundUp(_20d8052a6_decimal& _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= _57819_a._field_nd))) {
		return false;;
	};
	if (((_57819_a._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == _57819_a._field_nd))) {
		if (_57819_a._field_trunc) {
			return true;;
		};
		return ((_57831_nd > 0LL) && (((_57819_a._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return (_57819_a._field_d[_57831_nd] >= '5');;
}



inline jule::Str _20d806e9a_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _20d807341_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		_su8_str __jule_assign_result = _20d8075a5_fmtBits(nullptr,_6012_i,_6020_base,false,false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _20d8070cc_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _20d807341_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		_su8_str __jule_assign_result = _20d8075a5_fmtBits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)),_7119_base,(_7111_i < 0LL),false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _20d80720e_Itoa(jule::I64 _809_i) {
	return _20d8070cc_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)),10LL);;
}



inline jule::Str _20d807341_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _20d807473_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline _su8_str _20d8075a5_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	_su8_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1c842ab7b:;
		}
		_iter_end_1c842ab7b:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_20d807473_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_20d7b7686_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1c8434459:;
		}
		_iter_end_1c8434459:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1c8437072:;
		}
		_iter_end_1c8437072:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _20cd5a6a8_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c84513dd:;
			{
				return _20ccc3984_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1c8451454:;
			{
				return _20cd24d26_SysUint;;
			}
		}
		else {
			_case_begin_1c84517d9:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1c8451c90:;
	};
}



inline jule::I64 _20cd6962e_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1c8452ca2:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1c8452d18:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1c8452840:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1c84528a6:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1c845291c:;
			{
				return _20ccc2114_BitSize;;
			}
		}
		else {
			_case_begin_1c8452367:;
			{
				return -1LL;;
			}
		}
		_match_end_1c8452796:;
	};
}



inline jule::Str _20cd80c1c_IntFromBits(jule::I64 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1c8454c3d:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1c8454ca4:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1c8454a51:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c8454ab7:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1c8452ee4:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c8454787:;
	};
}



inline jule::Str _20cd7178a_UintFromBits(jule::I64 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1c84561b2:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1c8456228:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1c8455eb4:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c845602a:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1c8455a30:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c84558ed:;
	};
}



inline jule::Str _20cdb22e2_FloatFromBits(jule::I64 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1c8457636:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c845769c:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1c8456ea4:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c8456d72:;
	};
}



inline jule::Bool _20d0b4a77_CheckBitFloat(jule::Str _15018_val, jule::I64 _15028_bit) {
	({
		auto except = _20d803370_ParseFloat(_15018_val,_15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _20d0be389_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1c845c680:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c845b7d3:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c845b739:;
	};
}



inline jule::I64 _20d1345b9_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_1c845d560:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_1c845d5c6:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_1c845d63c:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c845cc8a:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c845cbbe:;
	};
}



inline jule::I64 _20d1bb211_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_1c8460474:;
			{
				return 8LLU;;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_1c84604da:;
			{
				return 16LLU;;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_1c8460551:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c845e8b3:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c845e4c8:;
	};
}



inline void _20d1c466a_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _20b1cd07c_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1c84615da:;
				{
					_20ccc2114_BitSize=64LLU;
					_20ccc3984_SysInt=jule::Str("i64", 3);
					_20cd24d26_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1c8461662:;
				{
					_20ccc2114_BitSize=32LLU;
					_20ccc3984_SysInt=jule::Str("i32", 3);
					_20cd24d26_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1c8461530:;
		};
	};
}



inline void _20d1cec6e_init(void) {
	_20d1c466a_UpdateTarget();
}



inline jule::F64 _20d8076d7_Min(jule::Str _6112_k) {
	_6112_k=_20cd5a6a8_RealKindOf(_6112_k);
	{
		auto &_match_expr{ _6112_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c8463e7d:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c8463ee4:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c8463994:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c8463a1b:;
			{
				return jule::MIN_I64;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c8463a93:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c8463b1a:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1c8461893:;
			{
				return 0LL;;
			}
		}
		_match_end_1c8461a5d:;
	};
}



inline jule::F64 _20d807819_Max(jule::Str _8312_k) {
	_8312_k=_20cd5a6a8_RealKindOf(_8312_k);
	{
		auto &_match_expr{ _8312_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c8464445:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c8465545:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c84655ab:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c8465622:;
			{
				return jule::MAX_I64;;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1c8465699:;
			{
				return 255LL;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c846590d:;
			{
				return 65535LL;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c8465974:;
			{
				return 4294967295LL;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c84659eb:;
			{
				return jule::MAX_U64;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c8465a73:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c8465c82:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1c846516b:;
			{
				return 0LL;;
			}
		}
		_match_end_1c8465116:;
	};
}



inline jule::Bool _20d1bb640_IsI8Compatible(jule::Str _623_k) {
	return (_623_k == jule::Str("i8", 2));;
}



inline jule::Bool _20d807b27_IsI16Compatible(jule::Str _1124_k) {
	return ((_1124_k == jule::Str("i8", 2)) || (_1124_k == jule::Str("i16", 3)));;
}



inline jule::Bool _20d807c59_IsI32Compatible(jule::Str _1724_k) {
	return ((((_1724_k == jule::Str("i8", 2)) || (_1724_k == jule::Str("i16", 3))) || (_1724_k == jule::Str("i32", 3))) || (_1724_k == jule::Str("u8", 2)));;
}



inline jule::Bool _20d807d8b_IsI64Compatible(jule::Str _2524_k) {
	return ((((_2524_k == jule::Str("i8", 2)) || (_2524_k == jule::Str("i16", 3))) || (_2524_k == jule::Str("i32", 3))) || (_2524_k == jule::Str("i64", 3)));;
}



inline jule::Bool _20d807ebd_IsU8Compatible(jule::Str _3323_k) {
	return (_3323_k == jule::Str("u8", 2));;
}



inline jule::Bool _20d808100_IsU16Compatible(jule::Str _3824_k) {
	return ((_3824_k == jule::Str("u8", 2)) || (_3824_k == jule::Str("u16", 3)));;
}



inline jule::Bool _20d808232_IsU32Compatible(jule::Str _4324_k) {
	return (((_4324_k == jule::Str("u8", 2)) || (_4324_k == jule::Str("u16", 3))) || (_4324_k == jule::Str("u32", 3)));;
}



inline jule::Bool _20d808474_IsU64Compatible(jule::Str _5024_k) {
	return ((((_5024_k == jule::Str("u8", 2)) || (_5024_k == jule::Str("u16", 3))) || (_5024_k == jule::Str("u32", 3))) || (_5024_k == jule::Str("u64", 3)));;
}



inline jule::Bool _20d8085a6_IsF32Compatible(jule::Str _5824_k) {
	return (_5824_k == jule::Str("f32", 3));;
}



inline jule::Bool _20d8086d8_IsF64Compatible(jule::Str _6324_k) {
	return (_6324_k == jule::Str("f64", 3));;
}



inline jule::Bool _20d80881a_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1c846d9c1:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c846e2a7:;
			{
				return (_7036_k2 == jule::Str("int", 3));;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1c846e31d:;
			{
				return (_7036_k2 == jule::Str("uintptr", 7));;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1c846dc9b:;
			{
				return (_7036_k2 == jule::Str("uint", 4));;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c846dd12:;
			{
				return _20d1bb640_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c846dd78:;
			{
				return _20d807b27_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c846ddde:;
			{
				return _20d807c59_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c846e3b7:;
			{
				return _20d807d8b_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1c846e42d:;
			{
				return _20d807ebd_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c846e494:;
			{
				return _20d808100_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c846e50a:;
			{
				return _20d808232_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c846e571:;
			{
				return _20d808474_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c846e5d7:;
			{
				return _20d8085a6_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c846e65e:;
			{
				return _20d8086d8_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1c846e6d6:;
			{
				return (_7036_k2 == jule::Str("bool", 4));;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1c846e75d:;
			{
				return (_7036_k2 == jule::Str("str", 3));;
			}
		}
		else {
			_case_begin_1c846db8b:;
			{
				return false;;
			}
		}
		_match_end_1c846da59:;
	};
}



inline jule::Bool _20d80894c_IsI16Greater(jule::Str _11021_k) {
	return (_11021_k == jule::Str("i8", 2));;
}



inline jule::Bool _20d808a7e_IsI32Greater(jule::Str _11521_k) {
	return ((_11521_k == jule::Str("i8", 2)) || (_11521_k == jule::Str("i16", 3)));;
}



inline jule::Bool _20d808bb1_IsI64Greater(jule::Str _12021_k) {
	return (((_12021_k == jule::Str("i8", 2)) || (_12021_k == jule::Str("i16", 3))) || (_12021_k == jule::Str("i32", 3)));;
}



inline jule::Bool _20d808ce3_IsU16Greater(jule::Str _12721_k) {
	return (_12721_k == jule::Str("u8", 2));;
}



inline jule::Bool _20d809156_IsU32Greater(jule::Str _13221_k) {
	return ((_13221_k == jule::Str("u8", 2)) || (_13221_k == jule::Str("u16", 3)));;
}



inline jule::Bool _20d809288_IsU64Greater(jule::Str _13821_k) {
	return (((_13821_k == jule::Str("u8", 2)) || (_13821_k == jule::Str("u16", 3))) || (_13821_k == jule::Str("u32", 3)));;
}



inline jule::Bool _20d8093ba_IsF32Greater(jule::Str _14517_k) {
	return (_14517_k != jule::Str("f64", 3));;
}



inline jule::Bool _20d8094ec_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _20d80962e_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c846ed24:;
			{
				return _20d809a6e_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1c847737b:;
			{
				return _20d809ba1_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1c84773e2:;
			{
				return _20d809ba1_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c8477458:;
			{
				return _20d80894c_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c84770a1:;
			{
				return _20d808a7e_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c8477117:;
			{
				return _20d808bb1_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c847717d:;
			{
				return _20d808ce3_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c84771e4:;
			{
				return _20d809156_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c8477689:;
			{
				return _20d809288_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c8477700:;
			{
				return _20d8093ba_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c8477766:;
			{
				return _20d8094ec_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1c84777dd:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c8476e3b:;
			{
				return false;;
			}
		}
		_match_end_1c8476d92:;
	};
}



inline jule::Bool _20d809a6e_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == jule::Str("i8", 2)) || (_2717_k == jule::Str("i16", 3))) || (_2717_k == jule::Str("i32", 3))) || (_2717_k == jule::Str("i64", 3))) || (_2717_k == jule::Str("int", 3)));;
}



inline jule::Bool _20d809ba1_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == jule::Str("u8", 2)) || (_3619_k == jule::Str("u16", 3))) || (_3619_k == jule::Str("u32", 3))) || (_3619_k == jule::Str("u64", 3))) || (_3619_k == jule::Str("uint", 4))) || (_3619_k == jule::Str("uintptr", 7)));;
}



inline jule::Bool _20d809cd3_IsInt(jule::Str _4610_k) {
	return (_20d809a6e_IsSigInt(_4610_k) || _20d809ba1_IsUnsigInt(_4610_k));;
}



inline jule::Bool _20d809e15_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == jule::Str("f32", 3)) || (_5112_k == jule::Str("f64", 3)));;
}



inline jule::Bool _20d80a047_IsNum(jule::Str _5610_k) {
	return (_20d809cd3_IsInt(_5610_k) || _20d809e15_IsFloat(_5610_k));;
}



inline jule::Bool _20d80a179_IsSigNum(jule::Str _6113_k) {
	return (_20d809a6e_IsSigInt(_6113_k) || _20d809e15_IsFloat(_6113_k));;
}



inline void _20d80d798_lshiftUnsig(_20cc572ec_Const& _59021_c, _20cc572ec_Const& _59032_x) {
	jule::U64 _5919_l = _20d80ade4_AsU64(&_59021_c);;
	jule::U64 _5929_r = _20d80ade4_AsU64(&_59032_x);;
	_20d80b28a_SetU64(&_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _20d80d8ca_rshiftUnsig(_20cc572ec_Const& _59621_c, _20cc572ec_Const& _59632_x) {
	jule::U64 _5979_l = _20d80ade4_AsU64(&_59621_c);;
	jule::U64 _5989_r = _20d80ade4_AsU64(&_59632_x);;
	_20d80b28a_SetU64(&_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _20d883510_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _20d883686_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_20d89b072_runeFromEsqSeq(_1811_bytes,_2517_i));
	} else {
		({
			_i32_int __jule_assign_result = _20b115624_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _20d89a6c0_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _20d89a9bc_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_20d89b3b3_strEsqSeq(_4210_bytes,_4813_i));
			} else {
				jule::I32 _5418_r = 0;;
				jule::I64 _5421_size = 0;;
				({
					_i32_int __jule_assign_result = _20b115624_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_20b116988_AppendRune(_4713_s,_5418_r);
			};
		}
	_iter_next_1c84e3e42:;
	}
	_iter_end_1c84e3e42:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline _u8_bool _20d89ac64_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	_u8_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1c84e840d:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c84e8474:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c84e84da:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1c84e8551:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1c84e85c8:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c84e8650:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1c84e86c7:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1c84e874e:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1c84e87c6:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1c84e884d:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1c84e82dc:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _20d89b072_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64& _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		_u8_bool __jule_assign_result = _20d89ac64_tryBtoaCommonEsq(_9219_bytes.slice(_9239_i));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	(_9239_i)++;
	if (_9313_ok) {
		(_9239_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[_9239_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1c850432b:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _20d3d4eeb_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				_9239_i+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c8503bbb:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _20d3d4eeb_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				_9239_i+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c8503c32:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice((_9239_i + 1LL),(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _20d3d4eeb_ParseUint(static_cast<jule::Str>(_11313_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1c85024c2:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice(_9239_i,(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _20d3d4eeb_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1c85028ac:;
	};
}



inline jule::Slice<jule::U8> _20d89b3b3_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64& _12434_i) {
	jule::I32 _1259_r = _20d89b072_runeFromEsqSeq(_12414_bytes,_12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));;
}



inline jule::I64 _20d99727d_findFormatPrefix(jule::Slice<jule::U8>& _1022_bytes, jule::I64& _1038_start) {
	jule::I64 _1113_i = _1038_start;;
	while ((_1113_i < _1022_bytes.len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I64 _1317_size = 0;;
			({
				_i32_int __jule_assign_result = _20b115624_DecodeRune(_1022_bytes.slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_1c8538470:;
	}
	_iter_end_1c8538470:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _20d99cd77_getFormatRange(jule::I64& _2724_i, jule::Slice<jule::U8>& _2737_bytes) {
	jule::I64 _289_start = _2724_i;;
	jule::I64 _2913_braces = 0LL;;
	while ((_2724_i < _2737_bytes.len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I64 _3117_size = 0;;
			({
				_i32_int __jule_assign_result = _20b115624_DecodeRune(_2737_bytes.slice(_2724_i));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			_2724_i+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_1c853b022:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1c853b088:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return _2737_bytes.slice(_289_start,_2724_i);;
						};
					}
				}
				_match_end_1c853ac14:;
			};
		}
	_iter_next_1c853a2da:;
	}
	_iter_end_1c853a2da:;;
	return nullptr;;
}



inline void _20d99d130_FmtByDefault(jule::Str& _4722_buf, jule::Any& _4733_arg) {
	if ((_4733_arg == nullptr)) {
		_4722_buf+=jule::Str("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ _4733_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1c853c012:;
			{
				_4722_buf+=_20d25c03d_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>(_4733_arg.operator jule::F32())),'g',-1LL,32LL);
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1c853cc9e:;
			{
				_4722_buf+=_20d25c03d_FmtFloat(static_cast<jule::F64>(_4733_arg.operator jule::F64()),'g',-1LL,64LL);
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1c853ce58:;
			{
				_4722_buf+=_20d8070cc_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I8()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1c853c09a:;
			{
				_4722_buf+=_20d8070cc_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I16()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1c853c8c5:;
			{
				_4722_buf+=_20d8070cc_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I32()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1c853c93b:;
			{
				_4722_buf+=_20d8070cc_FmtInt(static_cast<jule::I64>(_4733_arg.operator jule::I64()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1c853ced0:;
			{
				_4722_buf+=_20d806e9a_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U8()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1c853d046:;
			{
				_4722_buf+=_20d806e9a_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U16()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1c853d0ac:;
			{
				_4722_buf+=_20d806e9a_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U32()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1c853d123:;
			{
				_4722_buf+=_20d806e9a_FmtUint(static_cast<jule::U64>(_4733_arg.operator jule::U64()),10LL);
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1c853d189:;
			{
				_4722_buf+=_4733_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1c853d200:;
			{
				if (_4733_arg.operator jule::Bool()) {
					_4722_buf+=jule::Str("true", 4);
				} else {
					_4722_buf+=jule::Str("false", 5);
				};
			}
		}
		else {
			_case_begin_1c853c771:;
			{
				_4722_buf+=jule::to_str(_4733_arg);
			}
		}
		_match_end_1c853b50b:;
	};
}



inline void _20d99d509_applyFmtByDefault(jule::Str& _8627_buf, jule::I64& _8642_j, jule::Slice<jule::Any>& _8651_args) {
	jule::Any _879_arg = _8651_args[_8642_j];;
	(_8642_j)++;
	_20d99d130_FmtByDefault(_8627_buf,_879_arg);
}



inline void _20d99d905_applyFmt(jule::Slice<jule::U8>& _9418_fmt, jule::Str& _9436_buf, jule::I64& _9451_j, jule::Slice<jule::Any>& _9460_args) {
	if ((_9418_fmt.len() == 2LL)) {
		_20d99d509_applyFmtByDefault(_9436_buf,_9451_j,_9460_args);
		return;;
	};
	if ((((((_9418_fmt.len() == 4LL) && (_9418_fmt[0LL] == '{')) && (_9418_fmt[1LL] == '{')) && (_9418_fmt[2LL] == '}')) && (_9418_fmt[3LL] == '}'))) {
		_9436_buf+=jule::Str("{}", 2);
		return;;
	};
	_20b135468_PushToStrBuffer(_9436_buf,_9418_fmt);
}



inline jule::Str _20d99dc13_Format(jule::Str& _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return _11312_fmt;;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _20b12b64b_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, _11312_fmt.len());;
	jule::I64 _11913_j = 0LL;;
	jule::I64 _12013_last = 0LL;;
	jule::I64 _12113_i = _20d99727d_findFormatPrefix(_11713_fmtBytes,_12013_last);;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I64>(_20d99727d_findFormatPrefix(_11713_fmtBytes,_12113_i))) {
		{
			_20b135468_PushToStrBuffer(_11813_buf,_11713_fmtBytes.slice(_12013_last,_12113_i));
			jule::Slice<jule::U8> _12417_format = _20d99cd77_getFormatRange(_12113_i,_11713_fmtBytes);;
			if ((_12417_format == nullptr)) {
				goto _iter_next_1c8549849;
			};
			_20d99d905_applyFmt(_12417_format,_11813_buf,_11913_j,_11322_args);
			if ((_11913_j >= _11322_args.len())) {
				_20b135468_PushToStrBuffer(_11813_buf,_11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I64>(_11713_fmtBytes.len());
				goto _iter_end_1c8549849;
			};
			_12013_last=_12113_i;
		}
	_iter_next_1c8549849:;
	}
	_iter_end_1c8549849:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_20b135468_PushToStrBuffer(_11813_buf,_11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _20d99e52c_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _20d99dc13_Format(_3011_fmt,_3021_args);;
}



inline jule::Bool _20d8153d7_parameterUsesGenerics(jule::Ptr<_20d814183_Param>& _37427_p, jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>>& _37439_generics) {
	if (_20cbece41_IsSelf(_37427_p.ptr())) {
		return false;;
	};
	return _20d90a2bd_kindUsesGenerics(_37427_p.get()._field_Kind.get()._field_Decl.get()._field_Kind,_37439_generics);;
}



inline jule::Ptr<_20d8e7a5d_TypeSymbol> _20d8161c9_buildType(jule::Ptr<_20cb892ea_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_20d8e7a5d_TypeSymbol>(_20d8e7a5d_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_20d8b3919_Value> _20d81630b_buildExpr(jule::Ptr<_20cb8d81b_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_20d8b3919_Value>(_20d8b3919_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_20d8e298c_TypeAlias> _20d81643d_buildTypeAlias(jule::Ptr<_20cba05b9_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_20d8e298c_TypeAlias>(_20d8e298c_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_20d8161c9_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_20cb79a49_Field> _20d816570_buildField(jule::Ptr<_20cba3c60_FieldDecl> _12319_decl) {
	return jule::new_ptr<_20cb79a49_Field>(_20cb79a49_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_20d8161c9_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_20cb79a49_Field>> _20d8166a2_buildFields(jule::Slice<jule::Ptr<_20cba3c60_FieldDecl>>& _13421_decls) {
	jule::Slice<jule::Ptr<_20cb79a49_Field>> _13513_fields = jule::Slice<jule::Ptr<_20cb79a49_Field>>::alloc(0LL, _13421_decls.len());;
	{
		auto &expr = _13421_decls;
		auto it = expr.begin();
		_iter_begin_1c879606d:;
		if (it != expr.end()) {
			jule::Ptr<_20cba3c60_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_20d816570_buildField(_13617_decl));;
			}
			_iter_next_1c879606d:;
			++it;
			goto _iter_begin_1c879606d;
		}
		_iter_end_1c879606d:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_20cba59dc_Struct> _20d8167d4_buildStruct(jule::Ptr<_20cba4513_StructDecl> _14220_decl) {
	return jule::new_ptr<_20cba59dc_Struct>(_20cba59dc_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_20d8166a2_buildFields(_14220_decl.get()._field_Fields), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_20d814183_Param> _20d816916_buildParam(jule::Ptr<_20cb99959_ParamDecl> _15419_decl) {
	return jule::new_ptr<_20d814183_Param>(_20d814183_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_20d8161c9_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_20d814183_Param>> _20d816a48_buildParams(jule::Slice<jule::Ptr<_20cb99959_ParamDecl>>& _16521_decls) {
	jule::Slice<jule::Ptr<_20d814183_Param>> _16613_params = jule::Slice<jule::Ptr<_20d814183_Param>>::alloc(0LL, _16521_decls.len());;
	{
		auto &expr = _16521_decls;
		auto it = expr.begin();
		_iter_begin_1c8798c63:;
		if (it != expr.end()) {
			jule::Ptr<_20cb99959_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_20d816916_buildParam(_16717_decl));;
			}
			_iter_next_1c8798c63:;
			++it;
			goto _iter_begin_1c8798c63;
		}
		_iter_end_1c8798c63:;
	};
	return _16613_params;;
}



inline jule::Ptr<_20d813e96_RetType> _20d816b7a_buildRetType(jule::Ptr<_20cb8c40d_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_20d813e96_RetType>(_20d813e96_RetType{._field_Kind=_20d8161c9_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_20d814370_Fn> _20d816cac_buildFn(jule::Ptr<_20cb9ac79_FnDecl> _18316_decl) {
	return jule::new_ptr<_20d814370_Fn>(_20d814370_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_20d816b7a_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_20d816a48_buildParams(_18316_decl.get()._field_Params), });;
}



inline jule::Slice<jule::Ptr<_20d814370_Fn>> _20d816dde_buildMethods(jule::Slice<jule::Ptr<_20cb9ac79_FnDecl>>& _20122_decls) {
	jule::Slice<jule::Ptr<_20d814370_Fn>> _20213_methods = jule::Slice<jule::Ptr<_20d814370_Fn>>::alloc(0LL, _20122_decls.len());;
	{
		auto &expr = _20122_decls;
		auto it = expr.begin();
		_iter_begin_1c879c65c:;
		if (it != expr.end()) {
			jule::Ptr<_20cb9ac79_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_20d816cac_buildFn(_20317_decl));;
			}
			_iter_next_1c879c65c:;
			++it;
			goto _iter_begin_1c879c65c;
		}
		_iter_end_1c879c65c:;
	};
	return _20213_methods;;
}



inline jule::Ptr<_20d81a3ed_Trait> _20d817021_buildTrait(jule::Ptr<_20cba4b1d_TraitDecl> _20919_decl) {
	return jule::new_ptr<_20d81a3ed_Trait>(_20d81a3ed_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_20d816dde_buildMethods(_20919_decl.get()._field_Methods), });;
}



inline jule::Ptr<_20d81ac8e_EnumItem> _20d817153_buildEnumItem(jule::Ptr<_20cba1e28_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_20d81ac8e_EnumItem>(_20d81ac8e_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_20d81630b_buildExpr(_21822_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_20d81ac8e_EnumItem>> _20d817285_buildEnumItems(jule::Slice<jule::Ptr<_20cba1e28_EnumItemDecl>>& _22624_decls) {
	jule::Slice<jule::Ptr<_20d81ac8e_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_20d81ac8e_EnumItem>>::alloc(0LL, _22624_decls.len());;
	{
		auto &expr = _22624_decls;
		auto it = expr.begin();
		_iter_begin_1c879ea7c:;
		if (it != expr.end()) {
			jule::Ptr<_20cba1e28_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_20d817153_buildEnumItem(_22817_decl));;
			}
			_iter_next_1c879ea7c:;
			++it;
			goto _iter_begin_1c879ea7c;
		}
		_iter_end_1c879ea7c:;
	};
	return _22713_items;;
}



inline jule::Ptr<_20d81b0ad_Enum> _20d8173b7_buildEnum(jule::Ptr<_20cba2951_EnumDecl> _23418_decl) {
	return jule::new_ptr<_20d81b0ad_Enum>(_20d81b0ad_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_20d8161c9_buildType(_23418_decl.get()._field_Kind), ._field_Items=_20d817285_buildEnumItems(_23418_decl.get()._field_Items)});;
}



inline jule::Ptr<_20d81b641_TypeEnumItem> _20d81772a_buildTypeEnumItem(jule::Ptr<_20cba3457_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_20d81b641_TypeEnumItem>(_20d81b641_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_20d8161c9_buildType(_24426_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_20d81b641_TypeEnumItem>> _20d81785c_buildTypeEnumItems(jule::Slice<jule::Ptr<_20cba3457_TypeEnumItemDecl>>& _25228_decls) {
	jule::Slice<jule::Ptr<_20d81b641_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_20d81b641_TypeEnumItem>>::alloc(0LL, _25228_decls.len());;
	{
		auto &expr = _25228_decls;
		auto it = expr.begin();
		_iter_begin_1c87a2233:;
		if (it != expr.end()) {
			jule::Ptr<_20cba3457_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_20d81772a_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_1c87a2233:;
			++it;
			goto _iter_begin_1c87a2233;
		}
		_iter_end_1c87a2233:;
	};
	return _25313_items;;
}



inline jule::Ptr<_20d81b82d_TypeEnum> _20d81798e_buildTypeEnum(jule::Ptr<_20cba3a62_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_20d81b82d_TypeEnum>(_20d81b82d_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_20d81785c_buildTypeEnumItems(_26022_decl.get()._field_Items)});;
}



inline jule::Ptr<_20d869eb9_Var> _20d817ac1_buildVar(jule::Ptr<_20cb9bc58_VarDecl> _26917_decl) {
	return jule::new_ptr<_20d869eb9_Var>(_20d869eb9_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_20d8161c9_buildType(_26917_decl.get()._field_Kind), ._field_Value=_20d81630b_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__20d8158d2_new(), ._field_Directives=_26917_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_20d869eb9_Var>> _20d817c03_buildVars(jule::Slice<jule::Ptr<_20cb9bc58_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_20d869eb9_Var>> _28713_vars = jule::Slice<jule::Ptr<_20d869eb9_Var>>::alloc(0LL, _28618_decls.len());;
	{
		auto &expr = _28618_decls;
		auto it = expr.begin();
		_iter_begin_1c87a51ae:;
		if (it != expr.end()) {
			jule::Ptr<_20cb9bc58_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_20d817ac1_buildVar(_28817_decl));;
			}
			_iter_next_1c87a51ae:;
			++it;
			goto _iter_begin_1c87a51ae;
		}
		_iter_end_1c87a51ae:;
	};
	return _28713_vars;;
}



inline jule::Ptr<_20d8207dd_Impl> _20d817d35_buildImpl(jule::Ptr<_20cba5228_Impl> _29418_decl) {
	return jule::new_ptr<_20d8207dd_Impl>(_20d8207dd_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_20d816dde_buildMethods(_29418_decl.get()._field_Methods), ._field_Statics=_20d817c03_buildVars(_29418_decl.get()._field_Statics)});;
}



inline jule::Bool _20d81eb83_matchConstraint(jule::Str& _14221_c, jule::Ptr<_20d8e3680_TypeKind>& _14234_g) {
	{
		auto &_match_expr{ _14221_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1c8813030:;
			{
				jule::Ptr<_20d8e83cc_Prim> _14513_prim = _20d8e5a17_Prim(_14234_g.ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _20d80a179_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1c88129be:;
			{
				jule::Ptr<_20d8e83cc_Prim> _15113_prim = _20d8e5a17_Prim(_14234_g.ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _20d809ba1_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1c8812c88:;
			{
				jule::Ptr<_20d8e83cc_Prim> _15713_prim = _20d8e5a17_Prim(_14234_g.ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _20d809e15_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1c8812d10:;
			{
				jule::Ptr<_20d8e83cc_Prim> _16313_prim = _20d8e5a17_Prim(_14234_g.ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _20d80a047_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1c8812d87:;
			{
				return _20d8e4d02_Mutable(_14234_g.ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1c8812a57:;
			{
				return (!(_20d8e4d02_Mutable(_14234_g.ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1c8812abd:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1c8812b45:;
			{
				jule::Ptr<_20d8e83cc_Prim> _17513_prim = _20d8e5a17_Prim(_14234_g.ptr());;
				if ((_17513_prim != nullptr)) {
					return (_20d80a047_IsNum(_17513_prim.get()._field_Kind) || _20d8eb611_IsStr(_17513_prim.ptr()));;
				};
				if ((_20d8e5ee0_Ptr(_14234_g.ptr()) != nullptr)) {
					return true;;
				};
				jule::Ptr<_20cba5db6_StructIns> _18213_s = _20d8e6e69_Struct(_14234_g.ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));;
				};
				jule::Ptr<_20d81b0ad_Enum> _18913_enm = _20d8e6254_Enum(_14234_g.ptr());;
				if ((_18913_enm != nullptr)) {
					return _20d80a047_IsNum(_20d8e3a7b_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));;
				};
				return false;;
			}
		}
		else {
			_case_begin_1c8811ddb:;
			{
				return false;;
			}
		}
		_match_end_1c8811d42:;
	};
}



inline jule::Bool _20d81ee6e_isBuiltinConstraint(jule::Str& _19925_ident) {
	{
		auto &expr = _20d81d0e3_builtinConstraints;
		auto it = expr.begin();
		_iter_begin_1c881993d:;
		if (it != expr.end()) {
			jule::Str &_20012_bc = *it;
			{
				if ((_19925_ident == _20012_bc)) {
					return true;;
				};
			}
			_iter_next_1c881993d:;
			++it;
			goto _iter_begin_1c881993d;
		}
		_iter_end_1c881993d:;
	};
	return false;;
}



inline jule::Ptr<_20d82c3aa_scopeChecker> _20d822878_newScopeCheckerBase(jule::Ptr<_20d84c199_Sema>& _5829_s, jule::Ptr<_20d814749_FnIns> _5843_owner) {
	return jule::new_ptr<_20d82c3aa_scopeChecker>(_20d82c3aa_scopeChecker{._field_s=_5829_s, ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_20d8aca67_SymbolTable>(), });;
}



inline jule::Ptr<_20d82c3aa_scopeChecker> _20d822c0d_newScopeChecker(jule::Ptr<_20d84c199_Sema>& _6625_s, jule::Ptr<_20d814749_FnIns> _6639_owner) {
	jule::Ptr<_20d82c3aa_scopeChecker> _6713_base = _20d822878_newScopeCheckerBase(_6625_s,_6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_20d82b123_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_20d82b596_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_20d82b123_scopeLabel> _20d82304e_findLabelParent(jule::Str _7620_ident, jule::Ptr<_20d82c3aa_scopeChecker> _7636_scope) {
	jule::Ptr<_20d82b123_scopeLabel> _7713_label = _20d830d81_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_20d830d81_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_1c8831856:;
	}
	_iter_end_1c8831856:;;
	return _7713_label;;
}



inline jule::Bool _20d8233d4_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_20d825848_Scope>& _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type_is_ptr<_20d80e49c_FnCallExprModel>()) {
			_case_begin_1c883343a:;
			{
				jule::Ptr<_20d80e49c_FnCallExprModel> _9313_fcem = _9021_Model.operator jule::Ptr<_20d80e49c_FnCallExprModel>();;
				if ((_9313_fcem.get()._field_Except == _9034_sc)) {
					return true;;
				};
			}
		}
		else if (_match_expr.type_is_ptr<_20d8b2891_Data>()) {
			_case_begin_1c88334a1:;
			{
				jule::Ptr<_20d8b2891_Data> _9813_d = _9021_Model.operator jule::Ptr<_20d8b2891_Data>();;
				return _20d8233d4_modelIsGotoScope(jule::Any(_9813_d.get()._field_Model),_9034_sc);;
			}
		}
		_match_end_1c883325e:;
	};
	return false;;
}



inline jule::Bool _20d823725_stmtIsGotoScope(jule::Any& _10421_stmt, jule::Ptr<_20d825848_Scope>& _10434_sc) {
	{
		auto &_match_expr{ _10421_stmt };
		
		if (_match_expr.type_is_ptr<_20d825848_Scope>()) {
			_case_begin_1c883589e:;
			{
				return (_10421_stmt.operator jule::Ptr<_20d825848_Scope>() == _10434_sc);;
			}
		}
		else if (_match_expr.type_is_ptr<_20d826690_InfIter>()) {
			_case_begin_1c883563a:;
			{
				return (_10421_stmt.operator jule::Ptr<_20d826690_InfIter>().get()._field_Scope == _10434_sc);;
			}
		}
		else if (_match_expr.type_is_ptr<_20d8274e8_RangeIter>()) {
			_case_begin_1c88356a1:;
			{
				jule::Ptr<_20d8274e8_RangeIter> _11113_it = _10421_stmt.operator jule::Ptr<_20d8274e8_RangeIter>();;
				return ((_11113_it.get()._field_Scope == _10434_sc) || _20d8233d4_modelIsGotoScope(jule::Any(_11113_it.get()._field_Expr.get()._field_Model),_10434_sc));;
			}
		}
		else if (_match_expr.type_is_ptr<_20d826b13_WhileIter>()) {
			_case_begin_1c8835717:;
			{
				jule::Ptr<_20d826b13_WhileIter> _11413_it = _10421_stmt.operator jule::Ptr<_20d826b13_WhileIter>();;
				return (((_11413_it.get()._field_Scope == _10434_sc) || _20d8233d4_modelIsGotoScope(jule::Any(_11413_it.get()._field_Expr),_10434_sc)) || _20d8233d4_modelIsGotoScope(jule::Any(_11413_it.get()._field_Next),_10434_sc));;
			}
		}
		else if (_match_expr.type_is_ptr<_20d829594_Match>()) {
			_case_begin_1c8835382:;
			{
				jule::Ptr<_20d829594_Match> _11913_m = _10421_stmt.operator jule::Ptr<_20d829594_Match>();;
				{
					auto &expr = _11913_m.get()._field_Cases;
					auto it = expr.begin();
					_iter_begin_1c8838cd1:;
					if (it != expr.end()) {
						jule::Ptr<_20d82a0de_Case> &_12016_c = *it;
						{
							if ((_12016_c.get()._field_Scope == _10434_sc)) {
								return true;;
							};
							{
								auto &expr = _12016_c.get()._field_Exprs;
								auto it = expr.begin();
								_iter_begin_1c8839c16:;
								if (it != expr.end()) {
									jule::Ptr<_20d8b2891_Data> &_12420_expr = *it;
									{
										if (_20d8233d4_modelIsGotoScope(jule::Any(_12420_expr.get()._field_Model),_10434_sc)) {
											return true;;
										};
									}
									_iter_next_1c8839c16:;
									++it;
									goto _iter_begin_1c8839c16;
								}
								_iter_end_1c8839c16:;
							};
						}
						_iter_next_1c8838cd1:;
						++it;
						goto _iter_begin_1c8838cd1;
					}
					_iter_end_1c8838cd1:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == _10434_sc));;
			}
		}
		else if (_match_expr.type_is_ptr<_20d8263a4_Conditional>()) {
			_case_begin_1c88353e8:;
			{
				jule::Ptr<_20d8263a4_Conditional> _13213_c = _10421_stmt.operator jule::Ptr<_20d8263a4_Conditional>();;
				{
					auto &expr = _13213_c.get()._field_Elifs;
					auto it = expr.begin();
					_iter_begin_1c883b234:;
					if (it != expr.end()) {
						jule::Ptr<_20d825c44_If> &_13316_elif = *it;
						{
							if (((_13316_elif.get()._field_Scope == _10434_sc) || _20d8233d4_modelIsGotoScope(jule::Any(_13316_elif.get()._field_Expr),_10434_sc))) {
								return true;;
							};
						}
						_iter_next_1c883b234:;
						++it;
						goto _iter_begin_1c883b234;
					}
					_iter_end_1c883b234:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == _10434_sc));;
			}
		}
		else if (_match_expr.type_is_ptr<_20d8b2891_Data>()) {
			_case_begin_1c8835470:;
			{
				jule::Ptr<_20d8b2891_Data> _14013_d = _10421_stmt.operator jule::Ptr<_20d8b2891_Data>();;
				return _20d8233d4_modelIsGotoScope(jule::Any(_14013_d.get()._field_Model),_10434_sc);;
			}
		}
		else {
			_case_begin_1c8833825:;
			{
				return false;;
			}
		}
		_match_end_1c88337ae:;
	};
}



inline jule::I64 _20d823a66_countMatchType(jule::Ptr<_20d829594_Match>& _14720_m, jule::Ptr<_20d8e3680_TypeKind>& _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _20d8e3a7b_Str(_14732_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14720_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c883e215:;
		if (it != expr.end()) {
			jule::Ptr<_20d82a0de_Case> &_15112_c = *it;
			{
				if ((_15112_c == nullptr)) {
					goto _iter_next_1c883e215;
				};
				{
					auto &expr = _15112_c.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1c883eb50:;
					if (it != expr.end()) {
						jule::Ptr<_20d8b2891_Data> &_15616_expr = *it;
						{
							if ((_15616_expr == nullptr)) {
								goto _iter_end_1c883e215;
							};
							if ((_1499_kind == _20d8e3a7b_Str(_15616_expr.get()._field_Model.operator jule::Ptr<_20d8e3680_TypeKind>().ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1c883eb50:;
						++it;
						goto _iter_begin_1c883eb50;
					}
					_iter_end_1c883eb50:;
				};
			}
			_iter_next_1c883e215:;
			++it;
			goto _iter_begin_1c883e215;
		}
		_iter_end_1c883e215:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_20d8b2891_Data>> _20d823d0d_getDatasFromTupleData(jule::Ptr<_20d8b2891_Data>& _17131_d) {
	if ((_20d8e76a6_Tup(_17131_d.get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17131_d.get()._field_Model };
			
			if (_match_expr.type_is_ptr<_20d8111c4_TupleExprModel>()) {
				_case_begin_1c8843bba:;
				{
					return _17131_d.get()._field_Model.operator jule::Ptr<_20d8111c4_TupleExprModel>().get()._field_Datas;;
				}
			}
			else {
				_case_begin_1c88417ab:;
				{
					jule::Ptr<_20d8ed14b_Tuple> _17721_t = _20d8e76a6_Tup(_17131_d.get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_20d8b2891_Data>> _17821_r = jule::Slice<jule::Ptr<_20d8b2891_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto &expr = _17721_t.get()._field_Types;
						auto it = expr.begin();
						_iter_begin_1c8842b0e:;
						if (it != expr.end()) {
							jule::Ptr<_20d8e3680_TypeKind> _17925_kind = *it;
							{
								_17821_r = jule::alloc_for_append(_17821_r,1);_17821_r.__push(jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=_17925_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1c8842b0e:;
							++it;
							goto _iter_begin_1c8842b0e;
						}
						_iter_end_1c8842b0e:;
					};
					return _17821_r;;
				}
			}
			_match_end_1c8841723:;
		};
	} else {
		return jule::Slice<jule::Ptr<_20d8b2891_Data>>::make({_17131_d});;
	};
}



inline jule::Bool _20d824649_checkMut(jule::Ptr<_20d84c199_Sema>& _20618_s, jule::Ptr<_20d8b2891_Data>& _20629_left, jule::Ptr<_20d8b2891_Data> _20646_right, jule::Ptr<_20b4e5581_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!(_20629_left.get()._field_Mutable))) {
			_case_begin_1c8846d88:;
			{
				_20d84ed5b_pushErr(_20618_s.ptr(), _20660_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _20d8e4d02_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1c88466e5:;
			{
				if (((_20660_op.get()._field_Kind != jule::Str("=", 1)) && (_20d8e6e69_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_20d84ed5b_pushErr(_20618_s.ptr(), _20660_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_20646_right.get()._field_Kind.ptr()))}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c884667e:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c88465d5:;
	};
}



inline jule::Bool _20d824acd_checkAssign(jule::Ptr<_20d84c199_Sema>& _22521_s, jule::Ptr<_20d8b2891_Data>& _22536_left, jule::Ptr<_20d8b2891_Data> _22553_right, jule::Ptr<_20b4e5581_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d814749_FnIns> _2269_f = _20d8e6c05_Fn(_22536_left.get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_20d84ed5b_pushErr(_22521_s.ptr(), _22567_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_20d8b3254_IsConst(_22536_left.ptr())) {
			_case_begin_1c884b9c5:;
			{
				_20d84ed5b_pushErr(_22521_s.ptr(), _22567_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_20d85017a_pushSugggestion(_22521_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_22536_left.get()._field_Lvalue))) {
			_case_begin_1c884b343:;
			{
				_20d84ed5b_pushErr(_22521_s.ptr(), _22567_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_20d824649_checkMut(_22521_s,_22536_left,_22553_right,_22567_op)))) {
			_case_begin_1c884b3a9:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c884b2cc:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c884b1ab:;
	};
}



inline jule::Bool _20d824d75_isValidAstStForNextSt(jule::Any& _24731_n) {
	{
		auto &_match_expr{ _24731_n };
		
		if (_match_expr.type_is_ptr<_20cb97c87_AssignSt>()) {
			_case_begin_1c884b453:;
			{
				return (!(_24731_n.operator jule::Ptr<_20cb97c87_AssignSt>().get()._field_Declarative));;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb8d81b_Expr>()) {
			_case_begin_1c884d741:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c884d5cb:;
			{
				return false;;
			}
		}
		_match_end_1c884d565:;
	};
}



inline jule::Bool _20d82511c_isValidStForNextSt(jule::Any& _25824_st) {
	{
		auto &_match_expr{ _25824_st };
		
		if (_match_expr.type_is_ptr<_20d82872a_Postfix>() || _match_expr.type_is_ptr<_20d828b9d_Assign>() || _match_expr.type_is_ptr<_20d829055_MultiAssign>()) {
			_case_begin_1c884e742:;
			{
				return true;;
			}
		}
		else if (_match_expr.type_is_ptr<_20d8b2891_Data>()) {
			_case_begin_1c884e7a8:;
			{
				{
					auto &_match_expr{ _25824_st.operator jule::Ptr<_20d8b2891_Data>().get()._field_Model };
					
					if (_match_expr.type_is_ptr<_20d80e49c_FnCallExprModel>()) {
						_case_begin_1c885008e:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1c8850446:;
						{
							return false;;
						}
					}
					_match_end_1c885019e:;
				};
			}
		}
		else {
			_case_begin_1c884e1e2:;
			{
				return false;;
			}
		}
		_match_end_1c884e18c:;
	};
}



inline jule::Bool _20d8253b4_stmtIsDef(jule::Any& _27615_st) {
	{
		auto &_match_expr{ _27615_st };
		
		if (_match_expr.type_is_ptr<_20d869eb9_Var>()) {
			_case_begin_1c8850a95:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c8850655:;
			{
				return false;;
			}
		}
		_match_end_1c8850567:;
	};
}



inline jule::Ptr<_20d869eb9_Var> _20d841765_findVarInPackage(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>& _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto &expr = _4626_files;
		auto it = expr.begin();
		_iter_begin_1c899d85d:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_20d869eb9_Var> _4817_v = _20d8ad749_FindVar(_4717_f.ptr(), _4649_ident,_4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1c899d85d:;
			++it;
			goto _iter_begin_1c899d85d;
		}
		_iter_end_1c899d85d:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d8e298c_TypeAlias> _20d841b94_findTypeAliasInPackage(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>& _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto &expr = _5832_files;
		auto it = expr.begin();
		_iter_begin_1c899ed26:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_20d8e298c_TypeAlias> _6017_ta = _20d8adb01_FindTypeAlias(_5917_f.ptr(), _5855_ident,_5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1c899ed26:;
			++it;
			goto _iter_begin_1c899ed26;
		}
		_iter_end_1c899ed26:;
	};
	return nullptr;;
}



inline jule::Ptr<_20cba59dc_Struct> _20d84207e_findStructInPackage(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>& _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto &expr = _7029_files;
		auto it = expr.begin();
		_iter_begin_1c89a12cd:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_20cba59dc_Struct> _7217_s = _20d8adea8_FindStruct(_7117_f.ptr(), _7052_ident,_7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1c89a12cd:;
			++it;
			goto _iter_begin_1c89a12cd;
		}
		_iter_end_1c89a12cd:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d814370_Fn> _20d8424e1_findFnInPackage(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>& _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto &expr = _8225_files;
		auto it = expr.begin();
		_iter_begin_1c89a2785:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_20d814370_Fn> _8417_f = _20d8ae360_FindFn(_8317_file.ptr(), _8248_ident,_8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1c89a2785:;
			++it;
			goto _iter_begin_1c89a2785;
		}
		_iter_end_1c89a2785:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d81a3ed_Trait> _20d8427ee_findTraitInPackage(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>& _9428_files, jule::Str _9451_ident) {
	{
		auto &expr = _9428_files;
		auto it = expr.begin();
		_iter_begin_1c89a2d18:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_20d81a3ed_Trait> _9617_t = _20d8ae66d_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1c89a2d18:;
			++it;
			goto _iter_begin_1c89a2d18;
		}
		_iter_end_1c89a2d18:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d81b0ad_Enum> _20d842b40_findEnumInPackage(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>& _10627_files, jule::Str _10650_ident) {
	{
		auto &expr = _10627_files;
		auto it = expr.begin();
		_iter_begin_1c89a4d2b:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_20d81b0ad_Enum> _10817_e = _20d8ae97b_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1c89a4d2b:;
			++it;
			goto _iter_begin_1c89a4d2b;
		}
		_iter_end_1c89a4d2b:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d81b82d_TypeEnum> _20d842e81_findTypeEnumInPackage(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>& _11831_files, jule::Str _11854_ident) {
	{
		auto &expr = _11831_files;
		auto it = expr.begin();
		_iter_begin_1c89a60e6:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_20d81b82d_TypeEnum> _12017_e = _20d8aec89_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1c89a60e6:;
			++it;
			goto _iter_begin_1c89a60e6;
		}
		_iter_end_1c89a60e6:;
	};
	return nullptr;;
}



inline jule::Any _20d84347b_defByIdentPackage(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>& _12927_files, jule::Str& _12951_ident, jule::Bool _12963_cppLinked) {
	{
		auto &expr = _12927_files;
		auto it = expr.begin();
		_iter_begin_1c89a75c0:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _20d8b0b14_defByIdent(_13017_file.ptr(), _12951_ident,_12963_cppLinked);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1c89a75c0:;
			++it;
			goto _iter_begin_1c89a75c0;
		}
		_iter_end_1c89a75c0:;
	};
	return nullptr;;
}



inline jule::Bool _20d849581_isStdPackage(jule::Str _36117_f, jule::Str _36125_p) {
	return _20b135bc7_HasPrefix(_36117_f,_223218d81_Join(jule::Slice<jule::Str>::make({_20b20556b_PathStdlib,_36125_p})));;
}



inline jule::Bool _20d84a362_isValidModelForRef(jule::Any& _1228_m) {
	{
		auto &_match_expr{ _1228_m };
		
		if (_match_expr.type_is_ptr<_20d869eb9_Var>()) {
			_case_begin_1c89b858c:;
			{
				return true;;
			}
		}
		else if (_match_expr.type_is_ptr<_20d810734_StructSubIdentExprModel>()) {
			_case_begin_1c89b8603:;
			{
				jule::Ptr<_20d810734_StructSubIdentExprModel> _1717_model = _1228_m.operator jule::Ptr<_20d810734_StructSubIdentExprModel>();;
				return _20d84a362_isValidModelForRef(_1717_model.get()._field_Expr.get()._field_Model);;
			}
		}
		else if (_match_expr.type_is_ptr<_20d810316_TraitSubIdentExprModel>()) {
			_case_begin_1c89b838e:;
			{
				jule::Ptr<_20d810316_TraitSubIdentExprModel> _2017_model = _1228_m.operator jule::Ptr<_20d810316_TraitSubIdentExprModel>();;
				return _20d84a362_isValidModelForRef(_2017_model.get()._field_Expr);;
			}
		}
		else if (_match_expr.type_is_ptr<_20d80da0c_UnaryExprModel>()) {
			_case_begin_1c89b8405:;
			{
				jule::Ptr<_20d80da0c_UnaryExprModel> _2317_unary = _1228_m.operator jule::Ptr<_20d80da0c_UnaryExprModel>();;
				if ((_2317_unary.get()._field_Op.get()._field_Kind != jule::Str("*", 1))) {
					return false;;
				};
				if ((_20d8e5ee0_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_20d8e5c7b_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _20d84a362_isValidModelForRef(_2317_unary.get()._field_Expr.get()._field_Model);;
			}
		}
		else {
			_case_begin_1c89b7976:;
			{
				return false;;
			}
		}
		_match_end_1c89b7921:;
	};
}



inline _20b1bc016_Log _20d84a780_compilerErr(jule::Ptr<_20b4e5581_Token>& _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_20b1bc016_Log _4213_log = _20b1bc016_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_4117_token.get()._field_Row, ._field_Column=_4117_token.get()._field_Column, ._field_Path=_4117_token.get()._field_File.get()._field_Path, ._field_Text=_20b1bc456_Logf(_4144_fmt,_4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_20b4ebae8_GetRow(_4117_token.get()._field_File.ptr(), _4117_token.get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _20d84aac1_impIsLookupable(jule::Ptr<_20d84404d_ImportInfo>& _5521_i, jule::Str _5537_ident) {
	if (_5521_i.get()._field_CppLinked) {
		return false;;
	};
	if ((!(_5521_i.get()._field_ImportAll))) {
		if ((_5521_i.get()._field_Selected.len() > 0LL)) {
			return _20d846924_existIdent(_5521_i.ptr(), _5537_ident);;
		};
	};
	return _5521_i.get()._field_ImportAll;;
}



inline void _20d84adbd_appendRetVars(jule::Slice<jule::Ptr<_20d869eb9_Var>>& _6723_dest, jule::Ptr<_20d814749_FnIns>& _6742_f) {
	if ((_20cbeec56_IsVoid(_6742_f.get()._field_Decl.ptr()) || (_6742_f.get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_20d8e3680_TypeKind>> _7213_types = _20d814ccc_Types(_6742_f.ptr());;
	{
		auto &expr = _6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1c89c163e:;
		if (it != expr.end()) {
			jule::I64 _7310_i = it - expr.begin();
			jule::Ptr<_20b4e5581_Token> _7317_ident = *it;
			{
				if ((_20b4e7d25_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _20b4e80bc_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1c89c163e;
				};
				_6723_dest = jule::alloc_for_append(_6723_dest,1);_6723_dest.__push(jule::new_ptr<_20d869eb9_Var>(_20d869eb9_Var{._field_Scope=_6742_f.get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_20d8e7a5d_TypeSymbol>(_20d8e7a5d_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_20d8b3919_Value>(_20d8b3919_Value{._field_Data=jule::new_ptr<_20d8b2891_Data>()}), ._field_RetOrder=_7310_i, }));;
			}
			_iter_next_1c89c163e:;
			++it;
			_7310_i++;
			goto _iter_begin_1c89c163e;
		}
		_iter_end_1c89c163e:;
	};
	if ((_6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_6723_dest[(_6723_dest.len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _20d84b176_appendParamVars(jule::Slice<jule::Ptr<_20d869eb9_Var>>& _9725_dest, jule::Ptr<_20d814749_FnIns>& _9744_f) {
	if ((_9744_f.get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9744_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c89c4e06:;
		if (it != expr.end()) {
			jule::Ptr<_20d81455c_ParamIns> _10217_p = *it;
			{
				if ((_20b4e7d25_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _20b4e80bc_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1c89c4e06;
				};
				jule::Ptr<_20d869eb9_Var> _10717_v = jule::new_ptr<_20d869eb9_Var>(_20d869eb9_Var{._field_Scope=_9744_f.get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_20d8e7a5d_TypeSymbol>(), ._field_Value=jule::new_ptr<_20d8b3919_Value>(_20d8b3919_Value{._field_Data=jule::new_ptr<_20d8b2891_Data>()}), });;
				{
					
					if (_20cbece41_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_1c89c78dc:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_20d8e3251_Kind>(_9744_f.get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_20cbedd43_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_20cbedd43_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_20d8e3251_Kind>(jule::new_ptr<_20d8ebb61_Sptr>(_20d8ebb61_Sptr{._field_Elem=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_CppIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1c89c7623:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_20d8e3251_Kind>(jule::new_ptr<_20d8ec5bd_Slc>(_20d8ec5bd_Slc{._field_Elem=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_CppIdent=_10217_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_1c89c55aa:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_1c89c7502:;
				};
				_9725_dest = jule::alloc_for_append(_9725_dest,1);_9725_dest.__push(_10717_v);;
			}
			_iter_next_1c89c4e06:;
			++it;
			goto _iter_begin_1c89c4e06;
		}
		_iter_end_1c89c4e06:;
	};
}



inline void _20d84b451_appendGenericTypeAliases(jule::Slice<jule::Ptr<_20d8e298c_TypeAlias>>& _15734_dest, jule::Ptr<_20d814749_FnIns>& _15759_f) {
	jule::I64 _15813_size = _15759_f.get()._field_Generics.len();;
	if ((_15759_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=_15759_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15759_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c89ccd76:;
		if (it != expr.end()) {
			jule::I64 _16710_i = it - expr.begin();
			jule::Ptr<_20d8e1e53_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_20cb965e3_GenericDecl> _16817_decl = _15759_f.get()._field_Decl.get()._field_Generics[_16710_i];;
				_15734_dest = jule::alloc_for_append(_15734_dest,1);_15734_dest.__push(jule::new_ptr<_20d8e298c_TypeAlias>(_20d8e298c_TypeAlias{._field_Scope=_15759_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_20d8e7a5d_TypeSymbol>(_20d8e7a5d_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), }));;
			}
			_iter_next_1c89ccd76:;
			++it;
			_16710_i++;
			goto _iter_begin_1c89ccd76;
		}
		_iter_end_1c89ccd76:;
	};
	if ((_15759_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_20cba5db6_StructIns> _18017_owner = _15759_f.get()._field_Owner;;
		{
			auto &expr = _18017_owner.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1c89d03a6:;
			if (it != expr.end()) {
				jule::I64 _18114_i = it - expr.begin();
				jule::Ptr<_20d8e1e53_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_20cb965e3_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					_15734_dest = jule::alloc_for_append(_15734_dest,1);_15734_dest.__push(jule::new_ptr<_20d8e298c_TypeAlias>(_20d8e298c_TypeAlias{._field_Scope=_15759_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_20d8e7a5d_TypeSymbol>(_20d8e7a5d_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), }));;
				}
				_iter_next_1c89d03a6:;
				++it;
				_18114_i++;
				goto _iter_begin_1c89d03a6;
			}
			_iter_end_1c89d03a6:;
		};
	};
}



inline jule::Ptr<_20d8aca67_SymbolTable> _20d84b7a3_findFile(jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>& _19518_files, jule::Ptr<_20b4ea91b_File>& _19542_handler) {
	{
		auto &expr = _19518_files;
		auto it = expr.begin();
		_iter_begin_1c89d0b7b:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == _19542_handler)) {
					return _19617_fl;;
				};
			}
			_iter_next_1c89d0b7b:;
			++it;
			goto _iter_begin_1c89d0b7b;
		}
		_iter_end_1c89d0b7b:;
	};
	return nullptr;;
}



inline void _20d84bc15_pushSugggestion(_20b1bc016_Log* _20431_log, jule::Str _20442_fmt, jule::Slice<jule::Any> _20455_args) {
	_20431_log->_field_Suggestion=_20b1bc456_Logf(_20442_fmt,_20455_args);
}



inline jule::Bool _20d88392d_traitHasReferenceReceiver(jule::Ptr<_20d81a3ed_Trait>& _2631_t) {
	{
		auto &expr = _2631_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c8c0182a:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_Statically) {
					goto _iter_next_1c8c0182a;
				};
				jule::Ptr<_20d814183_Param> _3313_p = _2712_f.get()._field_Params[0LL];;
				if ((_20cbedd43_IsRef(_3313_p.ptr()) && _20cbece41_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1c8c0182a:;
			++it;
			goto _iter_begin_1c8c0182a;
		}
		_iter_end_1c8c0182a:;
	};
	return false;;
}



inline jule::Bool _20d883a60_floatAssignable(jule::Str _4120_kind, jule::Ptr<_20d8b2891_Data>& _4132_d) {
	jule::Str _429_value = _20d25c03d_FmtFloat(static_cast<jule::F64>(_20d80b026_AsF64(_4132_d.get()._field_Constant.ptr())),'g',-1LL,64LL);;
	return _20d0b4a77_CheckBitFloat(_429_value,static_cast<jule::I64>(_20cd6962e_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _20d89a439_sigAssignable(jule::Str _4618_kind, jule::Ptr<_20d8b2891_Data>& _4630_d) {
	jule::F64 _479_min = _20d8076d7_Min(_4618_kind);;
	jule::F64 _489_max = _20d807819_Max(_4618_kind);;
	{
		
		if (_20d80bd6d_IsF64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1c8c075bc:;
			{
				jule::F64 _5113_x = _20d80ab80_ReadF64(_4630_d.get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					_f64_f64 __jule_assign_result = _20d7ca534_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_20d80b9c7_IsU64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1c8c0803a:;
			{
				jule::F64 _5813_x = _20d80b026_AsF64(_4630_d.get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_20d80b895_IsI64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1c8c080b2:;
			{
				jule::F64 _6313_x = _20d80b026_AsF64(_4630_d.get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_1c8c07e19:;
	};
	return false;;
}



inline jule::Bool _20d89a56b_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_20d8b2891_Data>& _6932_d) {
	jule::F64 _709_max = _20d807819_Max(_6920_kind);;
	if ((_6932_d.get()._field_IsRune && (_6920_kind == jule::Str("u8", 2)))) {
		return _20d883510_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_20d80a6a7_ReadI64(_6932_d.get()._field_Constant.ptr()))));;
	};
	{
		
		if (_20d80bd6d_IsF64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1c8c0cddb:;
			{
				jule::F64 _7713_x = _20d80ab80_ReadF64(_6932_d.get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					_f64_f64 __jule_assign_result = _20d7ca534_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_20d80b9c7_IsU64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1c8c0ce63:;
			{
				jule::F64 _8713_x = _20d80b026_AsF64(_6932_d.get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_20d80b895_IsI64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1c8c0ceda:;
			{
				jule::F64 _9213_x = _20d80b026_AsF64(_6932_d.get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_1c8c0c759:;
	};
	return false;;
}



inline jule::Bool _20d89b616_intAssignable(jule::Str _9818_kind, jule::Ptr<_20d8b2891_Data>& _9830_d) {
	{
		
		if (_20d809a6e_IsSigInt(_9818_kind)) {
			_case_begin_1c8c126e8:;
			{
				return _20d89a439_sigAssignable(_9818_kind,_9830_d);;
			}
		}
		else if (_20d809ba1_IsUnsigInt(_9818_kind)) {
			_case_begin_1c8c12099:;
			{
				return _20d89a56b_unsigAssignable(_9818_kind,_9830_d);;
			}
		}
		else {
			_case_begin_1c8c0d6c2:;
			{
				return false;;
			}
		}
		_match_end_1c8c0d606:;
	};
}



inline jule::Ptr<_20d8e3680_TypeKind> _20d8abadd_lenKind(void) {
	return jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("int", 3)), 6)});;
}



inline jule::Ptr<_20cb511e6_Directive> _20d8d7ec1_findDirective(jule::Slice<jule::Ptr<_20cb511e6_Directive>>& _410923_directives, jule::Str _410954_d) {
	{
		auto &expr = _410923_directives;
		auto it = expr.begin();
		_iter_begin_1c8d18d1b:;
		if (it != expr.end()) {
			jule::Ptr<_20cb511e6_Directive> _411017_dr = *it;
			{
				if ((_411017_dr.get()._field_Tag.get()._field_Kind == _410954_d)) {
					return _411017_dr;;
				};
			}
			_iter_next_1c8d18d1b:;
			++it;
			goto _iter_begin_1c8d18d1b;
		}
		_iter_end_1c8d18d1b:;
	};
	return nullptr;;
}



inline jule::Any _20d8d8356_findBuiltinsImport(jule::Str _411823_ident, jule::Ptr<_20d84404d_ImportInfo> _411835_imp) {
	return _20d9194a8_findPackageBuiltinDef(_411835_imp.get()._field_LinkPath,_411823_ident);;
}



inline void _20d8d8565_fitBitsize(jule::Ptr<_20d8b2891_Data>& _412520_d) {
	jule::Ptr<_20d8e83cc_Prim> _412613_prim = _20d8e5a17_Prim(_412520_d.get()._field_Kind.ptr());;
	jule::I64 _41279_z = _20cd6962e_BitsizeOf(_20d8e8740_Str(_412613_prim.ptr()));;
	if ((_41279_z == 64LLU)) {
		return;;
	};
	jule::I64 _413213_k = 0LL;;
	{
		
		if (_20d80b895_IsI64(_412520_d.get()._field_Constant.ptr())) {
			_case_begin_1c8d1b956:;
			{
				_413213_k=static_cast<jule::I64>(_20d1345b9_BitsizeOfInt(static_cast<jule::I64>(_20d80a6a7_ReadI64(_412520_d.get()._field_Constant.ptr()))));
				if ((_413213_k > _41279_z)) {
					_412613_prim.get()._field_Kind=_20cd80c1c_IntFromBits(_413213_k);
				};
			}
		}
		else if (_20d80b9c7_IsU64(_412520_d.get()._field_Constant.ptr())) {
			_case_begin_1c8d1b9cd:;
			{
				_413213_k=static_cast<jule::I64>(_20d1bb211_BitsizeOfUint(static_cast<jule::U64>(_20d80a7d9_ReadU64(_412520_d.get()._field_Constant.ptr()))));
				if ((_413213_k > _41279_z)) {
					_412613_prim.get()._field_Kind=_20cd7178a_UintFromBits(_413213_k);
				};
			}
		}
		else if (_20d80bd6d_IsF64(_412520_d.get()._field_Constant.ptr())) {
			_case_begin_1c8d1ba55:;
			{
				_413213_k=static_cast<jule::I64>(_20d0be389_BitsizeOfFloat(static_cast<jule::F64>(_20d80ab80_ReadF64(_412520_d.get()._field_Constant.ptr()))));
				if ((_413213_k > _41279_z)) {
					_412613_prim.get()._field_Kind=_20cdb22e2_FloatFromBits(_413213_k);
				};
			}
		}
		_match_end_1c8d1b88a:;
	};
}



inline void _20d8d8862_makeStructLitAlloc(jule::Ptr<_20d8b2891_Data>& _415228_d, jule::Ptr<_20d80ddd6_StructLitExprModel>& _415243_lit) {
	_415228_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(jule::new_ptr<_20d8ebb61_Sptr>(_20d8ebb61_Sptr{._field_Elem=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_415243_lit.get()._field_Strct, 0)})}), 7)});
	_415228_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d80e0c3_AllocStructLitExprModel>(_20d80e0c3_AllocStructLitExprModel{._field_Lit=_415243_lit}));
}



inline jule::Ptr<_20d869eb9_Var> _20d8d8ba3_buildErrorVar(jule::Ptr<_20d825848_Scope>& _416323_s, jule::Ptr<_20cb927ed_FnCallExpr>& _416339_fc) {
	return jule::new_ptr<_20d869eb9_Var>(_20d869eb9_Var{._field_Scope=_416323_s, ._field_Token=_416339_fc.get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_20d8e7a5d_TypeSymbol>(_20d8e7a5d_TypeSymbol{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_20d8b3919_Value>(_20d8b3919_Value{._field_Data=jule::new_ptr<_20d8b2891_Data>()}), });;
}



inline jule::Any _20d8d8ee4_findBuiltinsSema(jule::Str _418221_ident, jule::Ptr<_20d84c199_Sema> _418237_s) {
	{
		auto &expr = _418237_s.get()._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c8d21296:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _418317_imp = *it;
			{
				if ((_418317_imp.get()._field_ImportAll || _20d846924_existIdent(_418317_imp.ptr(), _418221_ident))) {
					jule::Any _418521_def = _20d8d8356_findBuiltinsImport(_418221_ident,_418317_imp);;
					if ((_418521_def != nullptr)) {
						return _418521_def;;
					};
				};
			}
			_iter_next_1c8d21296:;
			++it;
			goto _iter_begin_1c8d21296;
		}
		_iter_end_1c8d21296:;
	};
	jule::Str _419313_ppath = _20b4eb312_Dir(_418237_s.get()._field_file.get()._field_File.ptr());;
	if (_20b135bc7_HasPrefix(_419313_ppath,_20b20556b_PathStdlib)) {
		(_419313_ppath).mut_slice(_20b20556b_PathStdlib.len());;
		_419313_ppath=(jule::Str("std", 3) + _20b13b78d_Replace(_419313_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
		return _20d9194a8_findPackageBuiltinDef(_419313_ppath,_418221_ident);;
	};
	return nullptr;;
}



inline jule::Bool _20d8d928b_isOkForShifting(jule::Ptr<_20d8b2891_Data>& _420725_d) {
	if (_20d8b3254_IsConst(_420725_d.ptr())) {
		{
			
			if (_20d80b895_IsI64(_420725_d.get()._field_Constant.ptr())) {
				_case_begin_1c8d25c5c:;
				{
					return (_20d80a6a7_ReadI64(_420725_d.get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_20d80b9c7_IsU64(_420725_d.get()._field_Constant.ptr())) {
				_case_begin_1c8d25586:;
				{
					return true;;
				}
			}
			else if (_20d80bd6d_IsF64(_420725_d.get()._field_Constant.ptr())) {
				_case_begin_1c8d255ec:;
				{
					return (_20d80ab80_ReadF64(_420725_d.get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1c8d25520:;
				{
					return false;;
				}
			}
			_match_end_1c8d25454:;
		};
	};
	jule::Ptr<_20d8e83cc_Prim> _42209_prim = _20d8e5a17_Prim(_420725_d.get()._field_Kind.ptr());;
	return ((_42209_prim != nullptr) && _20d809cd3_IsInt(_20d8e8740_Str(_42209_prim.ptr())));;
}



inline jule::Bool _20d8d9643_isInstancedStruct(jule::Ptr<_20cba5db6_StructIns> _422422_s) {
	return (_422422_s.get()._field_Decl.get()._field_Generics.len() == _422422_s.get()._field_Generics.len());;
}



inline jule::Bool _20d8d99a6_isPtrArithmeticCompatible(jule::Ptr<_20d8b2891_Data>& _422835_l, jule::Ptr<_20d8b2891_Data>& _422850_r) {
	jule::Ptr<_20d9001c5_Ptr> _42299_ptr = _20d8e5ee0_Ptr(_422850_r.get()._field_Kind.ptr());;
	if ((_42299_ptr != nullptr)) {
		return _20d8e3d89_Equals(_20d8e5ee0_Ptr(_422835_l.get()._field_Kind.ptr()).get()._field_Elem, _42299_ptr.get()._field_Elem);;
	};
	if (_20d8b3254_IsConst(_422850_r.ptr())) {
		return _20d89b616_intAssignable(jule::Str("int", 3),_422850_r);;
	};
	_20d89b7e2_typeCompatibilityChecker _423613_tcc = _20d89b7e2_typeCompatibilityChecker{._field_dest=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=_422850_r.get()._field_Kind, };;
	return _20d89cdcb_check(&_423613_tcc);;
}



inline void _20d8d9be8_applyCastKindModel(jule::Ptr<_20d8b2891_Data>& _424528_d, jule::Ptr<_20d8e3680_TypeKind>& _424543_t) {
	_424528_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d80e2b0_CastingExprModel>(_20d80e2b0_CastingExprModel{._field_Expr=_424528_d.get()._field_Model, ._field_Kind=_424543_t, ._field_ExprKind=_424528_d.get()._field_Kind}));
}



inline void _20d8d9ea1_applyCastKind(jule::Ptr<_20d8b2891_Data>& _425323_d, jule::Ptr<_20d8e3680_TypeKind>& _425338_t) {
	_20d8d9be8_applyCastKindModel(_425323_d,_425338_t);
	_425323_d.get()._field_Kind=_425338_t;
}



inline jule::Ptr<_20d8b2891_Data> _20d8da19e_buildVoidData(void) {
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("void", 4)), 6)}), });;
}



inline jule::Str _20d8da468_checkDataForIntegerIndexing(jule::Ptr<_20d8b2891_Data>& _426637_d) {
	jule::Str __jule_func_result = jule::Str();
	if ((_426637_d == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_20d8e5a17_Prim(_426637_d.get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1c8d2ceb7:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_20d809cd3_IsInt(_20d8e8740_Str(_20d8e5a17_Prim(_426637_d.get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1c8d2d02d:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_20d8b3254_IsConst(_426637_d.ptr())) {
			_case_begin_1c8d2d094:;
			{
				if ((_20d80b026_AsF64(_426637_d.get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_20d8e5a17_Prim(_426637_d.get()._field_Kind.ptr()) == nullptr) || _20d8b3254_IsConst(_426637_d.ptr()) || (_20cd5a6a8_RealKindOf(_20d8e8740_Str(_20d8e5a17_Prim(_426637_d.get()._field_Kind.ptr()).ptr())) != _20cd5a6a8_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1c8d2d10a:;
			{
				jule::Ptr<_20d8e3680_TypeKind> _428317_t = jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("int", 3)), 6)});;
				_20d8d9ea1_applyCastKind(_426637_d,_428317_t);
			}
		}
		_match_end_1c8d2caee:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _20d8da732_applyCastModelByEnum(jule::Ptr<_20d8b2891_Data>& _429230_d, jule::Ptr<_20d81b0ad_Enum> _429244_e) {
	if ((_429244_e == nullptr)) {
		return;;
	};
	jule::Ptr<_20d8e83cc_Prim> _42969_p = _20d8e5a17_Prim(_429244_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_20d8eb611_IsStr(_42969_p.ptr())) {
		return;;
	};
	_20d8d9be8_applyCastKindModel(_429230_d,_429244_e.get()._field_Kind.get()._field_Kind);
}



inline void _20d8e0968_castConstByType(jule::Str& _430321_t, jule::Ptr<_20d8b2891_Data>& _430334_d) {
	{
		
		if (_20d809a6e_IsSigInt(_430321_t)) {
			_case_begin_1c8d33363:;
			{
				{
					auto _match_expr{ _20cd6962e_BitsizeOf(_20cd5a6a8_RealKindOf(_430321_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c8d33eac:;
						{
							_20d80b158_SetI64(_430334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_20d80acb2_AsI64(_430334_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c8d34034:;
						{
							_20d80b158_SetI64(_430334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_20d80acb2_AsI64(_430334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1c8d3409a:;
						{
							_20d80b158_SetI64(_430334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_20d80acb2_AsI64(_430334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1c8d34111:;
						{
							_20d80b158_SetI64(_430334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_20d80acb2_AsI64(_430334_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1c8d335e9:;
				};
			}
		}
		else if (_20d809ba1_IsUnsigInt(_430321_t)) {
			_case_begin_1c8d333da:;
			{
				{
					auto _match_expr{ _20cd6962e_BitsizeOf(_20cd5a6a8_RealKindOf(_430321_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c8d37598:;
						{
							_20d80b28a_SetU64(_430334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_20d80ade4_AsU64(_430334_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c8d37631:;
						{
							_20d80b28a_SetU64(_430334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_20d80ade4_AsU64(_430334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1c8d37697:;
						{
							_20d80b28a_SetU64(_430334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_20d80ade4_AsU64(_430334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1c8d3770d:;
						{
							_20d80b28a_SetU64(_430334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_20d80ade4_AsU64(_430334_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1c8d337d6:;
				};
			}
		}
		else if (_20d809e15_IsFloat(_430321_t)) {
			_case_begin_1c8d33462:;
			{
				{
					auto _match_expr{ _20cd6962e_BitsizeOf(_20cd5a6a8_RealKindOf(_430321_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c8d3ab95:;
						{
							_20d80b631_SetF64(_430334_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_20d80b026_AsF64(_430334_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c8d3ac2d:;
						{
							_20d80b631_SetF64(_430334_d.get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_20d80b026_AsF64(_430334_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1c8d392d1:;
				};
			}
		}
		_match_end_1c8d33242:;
	};
}



inline void _20d8e0d53_updateModelToGenericIns(jule::Any& _433733_m, jule::Ptr<_20d814749_FnIns>& _433752_f) {
	{
		auto &_match_expr{ _433733_m };
		
		if (_match_expr.type_is_ptr<_20d814749_FnIns>()) {
			_case_begin_1c8d3bc2e:;
			{
				_433733_m=static_cast<jule::Any>(_433752_f);
			}
		}
		else if (_match_expr.type_is_ptr<_20d810734_StructSubIdentExprModel>()) {
			_case_begin_1c8d3bc95:;
			{
				_433733_m.operator jule::Ptr<_20d810734_StructSubIdentExprModel>().get()._field_Method=_433752_f;
			}
		}
		else if (_match_expr.type_is_ptr<_20d810921_StructStaticIdentExprModel>()) {
			_case_begin_1c8d3bd0b:;
			{
				_433733_m.operator jule::Ptr<_20d810921_StructStaticIdentExprModel>().get()._field_Method=_433752_f;
			}
		}
		_match_end_1c8d33a8e:;
	};
}



inline jule::Bool _20d8e1095_pushSubIdentFromExpr(jule::Any _434829_expr, jule::Ptr<_20cb8a010_SubIdentTypeDecl>& _434850_t) {
	{
		auto &_match_expr{ _434829_expr };
		
		if (_match_expr.type_is_ptr<_20cb904cc_IdentExpr>()) {
			_case_begin_1c8d441ba:;
			{
				jule::Ptr<_20cb904cc_IdentExpr> _435117_e = _434829_expr.operator jule::Ptr<_20cb904cc_IdentExpr>();;
				_434850_t.get()._field_Idents = jule::alloc_for_append(_434850_t.get()._field_Idents,1);_434850_t.get()._field_Idents.__push(jule::new_ptr<_20cb898b1_IdentTypeDecl>(_20cb898b1_IdentTypeDecl{._field_Token=_435117_e.get()._field_Token, ._field_Ident=_435117_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type_is_ptr<_20cb91c70_SubIdentExpr>()) {
			_case_begin_1c8d44231:;
			{
				jule::Ptr<_20cb91c70_SubIdentExpr> _435717_e = _434829_expr.operator jule::Ptr<_20cb91c70_SubIdentExpr>();;
				if ((!(_20d8e1095_pushSubIdentFromExpr(_435717_e.get()._field_Expr.get()._field_Kind,_434850_t)))) {
					return false;;
				};
				_434850_t.get()._field_Idents = jule::alloc_for_append(_434850_t.get()._field_Idents,1);_434850_t.get()._field_Idents.__push(jule::new_ptr<_20cb898b1_IdentTypeDecl>(_20cb898b1_IdentTypeDecl{._field_Token=_435717_e.get()._field_Ident, ._field_Ident=_435717_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_1c8d4398e:;
			{
				return false;;
			}
		}
		_match_end_1c8d43939:;
	};
	return true;;
}



inline jule::Bool _20d90a2bd_kindUsesGenerics(jule::Any& _157822_k, jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>>& _157840_generics) {
	{
		auto &expr = _157840_generics;
		auto it = expr.begin();
		_iter_begin_1c9151917:;
		if (it != expr.end()) {
			jule::Ptr<_20cb965e3_GenericDecl> &_157912_g = *it;
			{
				if (static__20d909dc2_exist(_157912_g.get()._field_Ident,_157822_k)) {
					return true;;
				};
			}
			_iter_next_1c9151917:;
			++it;
			goto _iter_begin_1c9151917;
		}
		_iter_end_1c9151917:;
	};
	return false;;
}



inline jule::Bool _20d90a653_hasDirective(jule::Slice<jule::Ptr<_20cb511e6_Directive>>& _158822_directives, jule::Str _158853_tag) {
	{
		auto &expr = _158822_directives;
		auto it = expr.begin();
		_iter_begin_1c9152000:;
		if (it != expr.end()) {
			jule::Ptr<_20cb511e6_Directive> _158917_dr = *it;
			{
				if ((_158917_dr.get()._field_Tag.get()._field_Kind == _158853_tag)) {
					return true;;
				};
			}
			_iter_next_1c9152000:;
			++it;
			goto _iter_begin_1c9152000;
		}
		_iter_end_1c9152000:;
	};
	return false;;
}



inline jule::Bool _20d90a8ea_canGetPtr(jule::Ptr<_20d8b2891_Data>& _159719_d) {
	if (((!(_159719_d.get()._field_Lvalue)) || _20d8b3254_IsConst(_159719_d.ptr()))) {
		return false;;
	};
	{
		
		if (((_20d8e6c05_Fn(_159719_d.get()._field_Kind.ptr()) != nullptr) || (_20d8e6254_Enum(_159719_d.get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1c9154497:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c9153cc1:;
			{
				return true;;
			}
		}
		_match_end_1c9153c6b:;
	};
}



inline jule::Bool _20d90ac19_isValidForSptrType(jule::Ptr<_20d8e3680_TypeKind>& _161028_t) {
	jule::Ptr<_20cba5db6_StructIns> _161113_s = _20d8e6e69_Struct(_161028_t.ptr());;
	if ((((_161113_s != nullptr) && (_161113_s.get()._field_Decl != nullptr)) && _161113_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _20d90aeb1_isValidForRef(jule::Ptr<_20d8e3680_TypeKind>& _161923_t) {
	return (_20d8e6c05_Fn(_161923_t.ptr()) == nullptr);;
}



inline jule::Bool _20d90b27a_isBuiltinStrConvertable(jule::Ptr<_20d8e3680_TypeKind>& _162233_t) {
	return (((!(_20d8e4829_Void(_162233_t.ptr()))) && (_20d8e6c05_Fn(_162233_t.ptr()) == nullptr)) && (_20d8e76a6_Tup(_162233_t.ptr()) == nullptr));;
}



inline jule::Str _20d90b500_buildLinkPathByTokens(jule::Slice<jule::Ptr<_20b4e5581_Token>>& _162627_tokens) {
	jule::Str _162713_s = _162627_tokens[0LL].get()._field_Kind;;
	{
		auto expr = _162627_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1c915817c:;
		if (it != expr.end()) {
			jule::Ptr<_20b4e5581_Token> &_162812_token = *it;
			{
				_162713_s+=jule::Str("::", 2);
				_162713_s+=_162812_token.get()._field_Kind;
			}
			_iter_next_1c915817c:;
			++it;
			goto _iter_begin_1c915817c;
		}
		_iter_end_1c915817c:;
	};
	return _162713_s;;
}



inline jule::Ptr<_20d8e83cc_Prim> _20d90b8a7_buildPrimType(jule::Str _163518_kind) {
	return jule::new_ptr<_20d8e83cc_Prim>(_20d8e83cc_Prim{._field_Kind=_163518_kind});;
}



inline jule::Ptr<_20cba59dc_Struct> _20d90bb4e_getStructFromKind(jule::Ptr<_20d8e3680_TypeKind> _164126_k) {
	{
		
		if ((_164126_k == nullptr)) {
			_case_begin_1c915938c:;
			{
				return nullptr;;
			}
		}
		else if ((_20d8e6e69_Struct(_164126_k.ptr()) != nullptr)) {
			_case_begin_1c9159403:;
			{
				return _20d8e6e69_Struct(_164126_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_20d8e5c7b_Sptr(_164126_k.ptr()) != nullptr)) {
			_case_begin_1c9159469:;
			{
				return _20d90bb4e_getStructFromKind(_20d8e5c7b_Sptr(_164126_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_20d8e6991_Slc(_164126_k.ptr()) != nullptr)) {
			_case_begin_1c91594d0:;
			{
				return _20d90bb4e_getStructFromKind(_20d8e6991_Slc(_164126_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_20d8e672c_Arr(_164126_k.ptr()) != nullptr)) {
			_case_begin_1c9159766:;
			{
				return _20d90bb4e_getStructFromKind(_20d8e672c_Arr(_164126_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_20d8e5ee0_Ptr(_164126_k.ptr()) != nullptr)) {
			_case_begin_1c91597cc:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_1c9159326:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9158886:;
	};
}



inline jule::Bool _20d90bde6_isPrim(jule::Str _166411_kind) {
	return ((((((((((((((((_166411_kind == jule::Str("i8", 2)) || (_166411_kind == jule::Str("i16", 3))) || (_166411_kind == jule::Str("i32", 3))) || (_166411_kind == jule::Str("i64", 3))) || (_166411_kind == jule::Str("u8", 2))) || (_166411_kind == jule::Str("u16", 3))) || (_166411_kind == jule::Str("u32", 3))) || (_166411_kind == jule::Str("u64", 3))) || (_166411_kind == jule::Str("f32", 3))) || (_166411_kind == jule::Str("f64", 3))) || (_166411_kind == jule::Str("int", 3))) || (_166411_kind == jule::Str("uint", 4))) || (_166411_kind == jule::Str("uintptr", 7))) || (_166411_kind == jule::Str("bool", 4))) || (_166411_kind == jule::Str("str", 3))) || (_166411_kind == jule::Str("any", 3)));;
}



inline void _20d90c19e_applyImplicitCast(jule::Ptr<_20d8e3680_TypeKind>& _168327_dest, jule::Ptr<_20d8b2891_Data>& _168349_d) {
	if (_20d8e45b5_IsNil(_168349_d.get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_20d8e83cc_Prim> _16879_destPrim = _20d8e5a17_Prim(_168327_dest.ptr());;
	jule::Ptr<_20d8e83cc_Prim> _16889_prim = _20d8e5a17_Prim(_168349_d.get()._field_Kind.ptr());;
	if ((_16879_destPrim != nullptr)) {
		if (_20d8eb875_IsAny(_16879_destPrim.ptr())) {
			if (((_16889_prim == nullptr) || (!(_20d8eb875_IsAny(_16889_prim.ptr()))))) {
				_20d8d9ea1_applyCastKind(_168349_d,_168327_dest);
			};
			return;;
		};
		if (((((((!(_20d8e4351_CppLinked(_168349_d.get()._field_Kind.ptr()))) && (!(_168349_d.get()._field_Kind.get()._field_Variadic))) && (!(_168349_d.get()._field_Lvalue))) && (!(_20d8b3254_IsConst(_168349_d.ptr())))) && (_16889_prim != nullptr)) && _20d80a047_IsNum(_16889_prim.get()._field_Kind))) {
			_20d8d9ea1_applyCastKind(_168349_d,_168327_dest);
		};
		return;;
	};
	if (((_20d8e71cd_Trait(_168327_dest.ptr()) != nullptr) && (_20d8e71cd_Trait(_168349_d.get()._field_Kind.ptr()) == nullptr))) {
		_20d8d9be8_applyCastKindModel(_168349_d,_168327_dest);
		return;;
	};
	if (((_20d8e64b8_TypeEnum(_168327_dest.ptr()) != nullptr) && (_20d8e64b8_TypeEnum(_168349_d.get()._field_Kind.ptr()) == nullptr))) {
		_20d8d9be8_applyCastKindModel(_168349_d,_168327_dest);
		return;;
	};
}



inline _x_20d8aca67_SymbolTable_s_20b1bc016_Log _20d910218_buildSymbols(jule::Ptr<_20cb5014b_Ast>& _1622_ast, jule::Trait<_20d8413d0_Importer>& _1638_importer, jule::Ptr<_20d817e67_symbolBuilder> _1662_owner) {
	_x_20d8aca67_SymbolTable_s_20b1bc016_Log __jule_func_result;
	jule::Ptr<_20d817e67_symbolBuilder> _1713_sb = jule::new_ptr<_20d817e67_symbolBuilder>(_20d817e67_symbolBuilder{._field_owner=_1662_owner, ._field_importer=_1638_importer, ._field_ast=_1622_ast, });;
	_20d81a0e0_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline _x_20d846ea7_Package_s_20b1bc016_Log _20d910647_analyzePackage(jule::Slice<jule::Ptr<_20cb5014b_Ast>>& _3024_files, jule::Trait<_20d8413d0_Importer>& _3044_importer, jule::I64& _3065_flags) {
	_x_20d846ea7_Package_s_20b1bc016_Log __jule_func_result;
	jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_20d8aca67_SymbolTable>>::alloc(0LL, _3024_files.len());;
	{
		auto &expr = _3024_files;
		auto it = expr.begin();
		_iter_begin_1c9256467:;
		if (it != expr.end()) {
			jule::Ptr<_20cb5014b_Ast> _3317_f = *it;
			{
				jule::Ptr<_20d8aca67_SymbolTable> _3418_table;;
				jule::Slice<_20b1bc016_Log> _3429_errors;;
				({
					_x_20d8aca67_SymbolTable_s_20b1bc016_Log __jule_assign_result = _20d910218_buildSymbols(_3317_f,_3044_importer,nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_1c9256467:;
			++it;
			goto _iter_begin_1c9256467;
		}
		_iter_end_1c9256467:;
	};
	jule::Ptr<_20d84c199_Sema> _4113_sema = jule::new_ptr<_20d84c199_Sema>(_20d84c199_Sema{._field_flags=_3065_flags});;
	_20d866e1c_check(_4113_sema, _3213_tables);
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_20d846ea7_Package> _4913_pkg = jule::new_ptr<_20d846ea7_Package>(_20d846ea7_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _4913_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline _x_20d846ea7_Package_s_20b1bc016_Log _20d910a32_AnalyzePackage(jule::Slice<jule::Ptr<_20cb5014b_Ast>> _7323_files, jule::Trait<_20d8413d0_Importer> _7342_importer, jule::I64 _7362_flags) {
	_x_20d846ea7_Package_s_20b1bc016_Log __jule_func_result;
	if ((_7323_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_20d846ea7_Package> _7714_package;;
	jule::Slice<_20b1bc016_Log> _7727_logs;;
	({
		_x_20d846ea7_Package_s_20b1bc016_Log __jule_assign_result = _20d910647_analyzePackage(_7323_files,_7342_importer,_7362_flags);
		_7714_package = __jule_assign_result.__jule_result_arg0;
		_7727_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7714_package;
	__jule_func_result.__jule_result_arg1 = _7727_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_20d814749_FnIns> _20d91bae8_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1c925ed77:;
			{
				static jule::Ptr<_20d814749_FnIns> _2620_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a052d_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1c926053c:;
			{
				static jule::Ptr<_20d814749_FnIns> _2920_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a0918_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1c926062a:;
			{
				static jule::Ptr<_20d814749_FnIns> _3220_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a0d03_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1c9260691:;
			{
				static jule::Ptr<_20d814749_FnIns> _3520_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a11dd_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1c9260174:;
			{
				static jule::Ptr<_20d814749_FnIns> _3820_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a1809_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1c92601da:;
			{
				static jule::Ptr<_20d814749_FnIns> _4120_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a1be4_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1c9260262:;
			{
				static jule::Ptr<_20d814749_FnIns> _4420_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a29e7_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1c92602d9:;
			{
				static jule::Ptr<_20d814749_FnIns> _4720_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a3be6_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1c9260718:;
			{
				static jule::Ptr<_20d814749_FnIns> _5020_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a4763_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1c9260790:;
			{
				static jule::Ptr<_20d814749_FnIns> _5320_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a50d2_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1c9260817:;
			{
				static jule::Ptr<_20d814749_FnIns> _5620_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a54bc_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1c926088e:;
			{
				static jule::Ptr<_20d814749_FnIns> _5920_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a5a83_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1c926000e:;
			{
				return nullptr;;
			}
		}
		_match_end_1c925ee65:;
	};
}



inline jule::Ptr<_20d8e298c_TypeAlias> _20d91d732_findBuiltinTypeAlias(jule::Str _6625_ident) {
	{
		auto &_match_expr{ _6625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1c926cba9:;
			{
				static jule::Ptr<_20d8e298c_TypeAlias> _6920_t = jule::new_ptr<_20d8e298c_TypeAlias>(_20d8e298c_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_20d8e7a5d_TypeSymbol>(_20d8e7a5d_TypeSymbol{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _6920_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1c926cc20:;
			{
				static jule::Ptr<_20d8e298c_TypeAlias> _7920_t = jule::new_ptr<_20d8e298c_TypeAlias>(_20d8e298c_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_20d8e7a5d_TypeSymbol>(_20d8e7a5d_TypeSymbol{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _7920_t;;
			}
		}
		else {
			_case_begin_1c926c5e3:;
			{
				return nullptr;;
			}
		}
		_match_end_1c926c11a:;
	};
}



inline jule::Any _20d92310a_findBuiltinDef(jule::Str _9319_ident) {
	jule::Ptr<_20d814749_FnIns> _9413_f = _20d91bae8_findBuiltinFn(_9319_ident);;
	if ((_9413_f != nullptr)) {
		return jule::Any(_9413_f);;
	};
	jule::Ptr<_20d8e298c_TypeAlias> _9813_ta = _20d91d732_findBuiltinTypeAlias(_9319_ident);;
	if ((_9813_ta != nullptr)) {
		return jule::Any(_9813_ta);;
	};
	return nullptr;;
}



inline jule::Any _20d9222b3_findBuiltinDefStdDebug(jule::Str _10527_ident) {
	{
		auto &_match_expr{ _10527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1c9270b35:;
			{
				static jule::Ptr<_20d814749_FnIns> _10820_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a74be_builtinCallerStdDebugOut), });;
				return jule::Any(_10820_f);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1c927133e:;
			{
				static jule::Ptr<_20d814749_FnIns> _11120_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a78a9_builtinCallerStdDebugOutln), });;
				return jule::Any(_11120_f);;
			}
		}
		else {
			_case_begin_1c9270904:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9270d11:;
	};
}



inline jule::Any _20d9223e5_findBuiltinDefStdMem(jule::Str _11825_ident) {
	{
		auto &_match_expr{ _11825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1c9272bc0:;
			{
				static jule::Ptr<_20d814749_FnIns> _12120_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a5de6_builtinCallerStdMemSizeOf), });;
				return jule::Any(_12120_f);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1c9272c36:;
			{
				static jule::Ptr<_20d814749_FnIns> _12420_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a6314_builtinCallerStdMemAlignOf), });;
				return jule::Any(_12420_f);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1c92729e4:;
			{
				static jule::Ptr<_20d814749_FnIns> _12720_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a6732_builtinCallerStdMemFree), });;
				return jule::Any(_12720_f);;
			}
		}
		else {
			_case_begin_1c9270e54:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9271c35:;
	};
}



inline jule::Any _20d919376_findBuiltinDefStdJuleIntegrated(jule::Str _13436_ident) {
	{
		auto &_match_expr{ _13436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1c9274e8b:;
			{
				static jule::Ptr<_20d814749_FnIns> _13720_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a6b61_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_13720_f);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1c9275002:;
			{
				static jule::Ptr<_20d814749_FnIns> _14020_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_Decl=jule::new_ptr<_20d814370_Fn>(_20d814370_Fn{._field_Generics=jule::Slice<jule::Ptr<_20cb965e3_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d9a707e_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_14020_f);;
			}
		}
		else {
			_case_begin_1c9272c9c:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9274001:;
	};
}



inline jule::Any _20d9194a8_findPackageBuiltinDef(jule::Str _15226_link_path, jule::Str _15242_ident) {
	{
		auto &_match_expr{ _15226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1c9276db1:;
			{
				return _20d9222b3_findBuiltinDefStdDebug(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1c9276e27:;
			{
				return _20d9223e5_findBuiltinDefStdMem(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1c9276bd5:;
			{
				return _20d919376_findBuiltinDefStdJuleIntegrated(_15242_ident);;
			}
		}
		else {
			_case_begin_1c92767c8:;
			{
				return nullptr;;
			}
		}
		_match_end_1c92758d7:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d99e65e_builtinCallerCommonPlain(jule::Ptr<_20d8b440e_Eval>& _16534_e, jule::Ptr<_20cb927ed_FnCallExpr>& _16549_fc, jule::Ptr<_20d8b2891_Data>& _16571_d) {
	jule::Ptr<_20d814749_FnIns> _16613_f = _20d8e6c05_Fn(_16571_d.get()._field_Kind.ptr());;
	_20d8a4630_fnCallArgChecker _16813_fcac = _20d8a4630_fnCallArgChecker{._field_e=_16534_e, ._field_args=_16549_fc.get()._field_Args, ._field_errorToken=_16549_fc.get()._field_Token, ._field_f=_16613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_20d8a69ea_check(&_16813_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_20d80e49c_FnCallExprModel> _17913_model = jule::new_ptr<_20d80e49c_FnCallExprModel>(_20d80e49c_FnCallExprModel{._field_Token=_16549_fc.get()._field_Token, ._field_Func=_16613_f, ._field_Expr=_16571_d.get()._field_Model, ._field_Args=_16813_fcac._field_argModels, });;
	if ((_16613_f.get()._field_Result == nullptr)) {
		_16571_d=_20d8da19e_buildVoidData();
	} else {
		_16571_d=jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=_16613_f.get()._field_Result, });
	};
	_16571_d.get()._field_Model=static_cast<jule::Any>(_17913_model);
	return _16571_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d99e917_builtinCallerCommon(jule::Ptr<_20d8b440e_Eval>& _19829_e, jule::Ptr<_20cb927ed_FnCallExpr>& _19844_fc, jule::Ptr<_20d8b2891_Data>& _19866_d) {
	return _20d99e65e_builtinCallerCommonPlain(_19829_e,_19844_fc,_19866_d);;
}



inline jule::Ptr<_20d8b2891_Data> _20d99ed02_builtinCallerCommonMut(jule::Ptr<_20d8b440e_Eval>& _20232_e, jule::Ptr<_20cb927ed_FnCallExpr>& _20247_fc, jule::Ptr<_20d8b2891_Data>& _20269_d) {
	if ((!(_20269_d.get()._field_Mutable))) {
		_20d8b491a_pushErr(_20232_e.ptr(), _20247_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _20d99e917_builtinCallerCommon(_20232_e,_20247_fc,_20269_d);;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a0143_builtinCallerError(jule::Ptr<_20d8b440e_Eval>& _20928_e, jule::Ptr<_20cb927ed_FnCallExpr>& _20943_fc) {
	if ((_20943_fc.get()._field_Args.len() < 1LL)) {
		_20d8b491a_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;;
	};
	if ((_20943_fc.get()._field_Args.len() > 1LL)) {
		_20d8b491a_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _21713_expr = _20d8ced31_evalExpr(_20928_e, _20943_fc.get()._field_Args[0LL]);;
	if ((_21713_expr == nullptr)) {
		return nullptr;;
	};
	if (_20d8b2c7b_IsNil(_21713_expr.ptr())) {
		_20d8b491a_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _22613_d = _20d8da19e_buildVoidData();;
	_22613_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d812e51_BuiltinErrorCallExprModel>(_20d812e51_BuiltinErrorCallExprModel{._field_Err=_21713_expr.get()._field_Model}));
	return _22613_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a052d_builtinCallerOut(jule::Ptr<_20d8b440e_Eval>& _23426_e, jule::Ptr<_20cb927ed_FnCallExpr>& _23441_fc, jule::Ptr<_20d8b2891_Data>& ) {
	if ((_23441_fc.get()._field_Args.len() < 1LL)) {
		_20d8b491a_pushErr(_23426_e.ptr(), _23441_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;;
	};
	if ((_23441_fc.get()._field_Args.len() > 1LL)) {
		_20d8b491a_pushErr(_23426_e.ptr(), _23441_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _24313_expr = _20d8ced31_evalExpr(_23426_e, _23441_fc.get()._field_Args[0LL]);;
	if ((_24313_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_20d90b27a_isBuiltinStrConvertable(_24313_expr.get()._field_Kind)))) {
		_20d8b491a_pushErr(_23426_e.ptr(), _23441_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d8b2891_Data> _25313_d = _20d8da19e_buildVoidData();;
	_25313_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d8113b1_BuiltinOutCallExprModel>(_20d8113b1_BuiltinOutCallExprModel{._field_Expr=_24313_expr.get()._field_Model, }));
	return _25313_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a0918_builtinCallerOutln(jule::Ptr<_20d8b440e_Eval>& _25828_e, jule::Ptr<_20cb927ed_FnCallExpr>& _25843_fc, jule::Ptr<_20d8b2891_Data>& _25865_d) {
	_25865_d=_20d9a052d_builtinCallerOut(_25828_e,_25843_fc,_25865_d);
	if ((_25865_d == nullptr)) {
		return nullptr;;
	};
	_25865_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d81159d_BuiltinOutlnCallExprModel>(_20d81159d_BuiltinOutlnCallExprModel{._field_Expr=_25865_d.get()._field_Model.operator jule::Ptr<_20d8113b1_BuiltinOutCallExprModel>().get()._field_Expr, }));
	return _25865_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a0d03_builtinCallerNew(jule::Ptr<_20d8b440e_Eval>& _27026_e, jule::Ptr<_20cb927ed_FnCallExpr>& _27041_fc, jule::Ptr<_20d8b2891_Data>& _27063_d) {
	if ((_27041_fc.get()._field_Args.len() < 1LL)) {
		_20d8b491a_pushErr(_27026_e.ptr(), _27041_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;;
	};
	if ((_27041_fc.get()._field_Args.len() > 2LL)) {
		_20d8b491a_pushErr(_27026_e.ptr(), _27041_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _27913_t = _20d8ce715_evalExprKind(_27026_e, _27041_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_27913_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_27913_t.get()._field_Decl))) {
		_20d8b491a_pushErr(_27026_e.ptr(), _27041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_20d90ac19_isValidForSptrType(_27913_t.get()._field_Kind)))) {
		jule::Ptr<_20cba5db6_StructIns> _29017_s = _20d8e6e69_Struct(_27913_t.get()._field_Kind.ptr());;
		if ((((_29017_s != nullptr) && (_29017_s.get()._field_Decl != nullptr)) && _29017_s.get()._field_Decl.get()._field_CppLinked)) {
			_20d8b491a_pushErr(_27026_e.ptr(), _27041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	_27063_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(jule::new_ptr<_20d8ebb61_Sptr>(_20d8ebb61_Sptr{._field_Elem=_27913_t.get()._field_Kind}), 7)});
	if ((_27041_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_20d8e3680_TypeKind> _30417_old = _27026_e.get()._field_prefix;;
		_27026_e.get()._field_prefix=_27913_t.get()._field_Kind;
		jule::Ptr<_20d8b2891_Data> _30717_init = _20d8ced31_evalExpr(_27026_e, _27041_fc.get()._field_Args[1LL]);;
		_27026_e.get()._field_prefix=_30417_old;
		if ((_30717_init != nullptr)) {
			jule::Ptr<_20b4e5581_Token> _31221_token = _27041_fc.get()._field_Args[1LL].get()._field_Token;;
			;
			_20d85997b_checkValidityForInitExpr(_27026_e.get()._field_s, (!(_27026_e.get()._field_immutable)),false,_27913_t.get()._field_Kind,_30717_init,_31221_token);
			_20d856c42_checkAssignType(_27026_e.get()._field_s, false,_27913_t.get()._field_Kind,_30717_init,_31221_token);
			_27063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d811977_BuiltinNewCallExprModel>(_20d811977_BuiltinNewCallExprModel{._field_Kind=_27913_t.get()._field_Kind, ._field_Init=_30717_init.get()._field_Model}));
		};
	} else {
		_27063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d811977_BuiltinNewCallExprModel>(_20d811977_BuiltinNewCallExprModel{._field_Kind=_27913_t.get()._field_Kind, }));
	};
	return _27063_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a11dd_builtinCallerPanic(jule::Ptr<_20d8b440e_Eval>& _33228_e, jule::Ptr<_20cb927ed_FnCallExpr>& _33243_fc, jule::Ptr<_20d8b2891_Data>& ) {
	if ((_33243_fc.get()._field_Args.len() < 1LL)) {
		_20d8b491a_pushErr(_33228_e.ptr(), _33243_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;;
	};
	if ((_33243_fc.get()._field_Args.len() > 1LL)) {
		_20d8b491a_pushErr(_33228_e.ptr(), _33243_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _34113_expr = _20d8ced31_evalExpr(_33228_e, _33243_fc.get()._field_Args[0LL]);;
	if ((_34113_expr == nullptr)) {
		return nullptr;;
	};
	if (((_20d8e5a17_Prim(_34113_expr.get()._field_Kind.ptr()) == nullptr) || (!(_20d8eb611_IsStr(_20d8e5a17_Prim(_34113_expr.get()._field_Kind.ptr()).ptr()))))) {
		_20d8b491a_pushErr(_33228_e.ptr(), _33243_fc.get()._field_Token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _35013_d = _20d8da19e_buildVoidData();;
	_35013_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d811b64_BuiltinPanicCallExprModel>(_20d811b64_BuiltinPanicCallExprModel{._field_Token=_33243_fc.get()._field_Token, ._field_Expr=_34113_expr.get()._field_Model}));
	return _35013_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a1809_builtinCallerMake(jule::Ptr<_20d8b440e_Eval>& _35827_e, jule::Ptr<_20cb927ed_FnCallExpr>& _35842_fc, jule::Ptr<_20d8b2891_Data>& _35864_d) {
	if ((_35842_fc.get()._field_Args.len() < 2LL)) {
		if ((_35842_fc.get()._field_Args.len() == 1LL)) {
			_20d8b491a_pushErr(_35827_e.ptr(), _35842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;;
		};
		_20d8b491a_pushErr(_35827_e.ptr(), _35842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;;
	};
	jule::Ptr<_20d8b2891_Data> _36813_t = _20d8ce715_evalExprKind(_35827_e, _35842_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_36813_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_36813_t.get()._field_Decl))) {
		_20d8b491a_pushErr(_35827_e.ptr(), _35842_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_35842_fc.get()._field_Args.len() > 3LL)) {
		_20d8b491a_pushErr(_35827_e.ptr(), _35842_fc.get()._field_Args[3LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_35864_d.get()._field_Kind=_36813_t.get()._field_Kind;
	jule::Ptr<_20d8b2891_Data> _38413_lenExpr = _20d8ced31_evalExpr(_20d856439_evalp(_35827_e.get()._field_s, _35827_e.get()._field_lookup,_36813_t.get()._field_Kind), _35842_fc.get()._field_Args[1LL]);;
	if ((_38413_lenExpr == nullptr)) {
		return nullptr;;
	};
	_20d8bd00b_checkIntegerIndexingByData(_35827_e.ptr(), _38413_lenExpr,_35842_fc.get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_20d81203d_BuiltinMakeCallExprModel> _39113_model = jule::new_ptr<_20d81203d_BuiltinMakeCallExprModel>(_20d81203d_BuiltinMakeCallExprModel{._field_Kind=_36813_t.get()._field_Kind, ._field_Len=_38413_lenExpr.get()._field_Model, });;
	_35864_d.get()._field_Model=static_cast<jule::Any>(_39113_model);
	if ((_35842_fc.get()._field_Args.len() == 3LL)) {
		jule::Ptr<_20d8b2891_Data> _39717_capExpr = _20d8ced31_evalExpr(_20d856439_evalp(_35827_e.get()._field_s, _35827_e.get()._field_lookup,_36813_t.get()._field_Kind), _35842_fc.get()._field_Args[2LL]);;
		if ((_39717_capExpr == nullptr)) {
			return _35864_d;;
		};
		_20d8bd00b_checkIntegerIndexingByData(_35827_e.ptr(), _39717_capExpr,_35842_fc.get()._field_Args[2LL].get()._field_Token);
		_39113_model.get()._field_Cap=_39717_capExpr.get()._field_Model;
	};
	return _35864_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a1be4_builtinCallerAppend(jule::Ptr<_20d8b440e_Eval>& _40729_e, jule::Ptr<_20cb927ed_FnCallExpr>& _40744_fc, jule::Ptr<_20d8b2891_Data>& _40766_d) {
	if ((_40744_fc.get()._field_Args.len() < 2LL)) {
		if ((_40744_fc.get()._field_Args.len() == 1LL)) {
			_20d8b491a_pushErr(_40729_e.ptr(), _40744_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;;
		};
		_20d8b491a_pushErr(_40729_e.ptr(), _40744_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;;
	};
	jule::Ptr<_20d8b2891_Data> _41713_t = _20d8ced31_evalExpr(_40729_e, _40744_fc.get()._field_Args[0LL]);;
	if ((_41713_t == nullptr)) {
		return nullptr;;
	};
	if ((_20d8e6991_Slc(_41713_t.get()._field_Kind.ptr()) == nullptr)) {
		_20d8b491a_pushErr(_40729_e.ptr(), _40744_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d814749_FnIns> _42713_f = jule::new_ptr<_20d814749_FnIns>(_20d814749_FnIns{._field_Params=jule::Slice<jule::Ptr<_20d81455c_ParamIns>>::make({jule::new_ptr<_20d81455c_ParamIns>(_20d81455c_ParamIns{._field_Decl=jule::new_ptr<_20d814183_Param>(_20d814183_Param{._field_Mutable=true, }), ._field_Kind=_41713_t.get()._field_Kind}),jule::new_ptr<_20d81455c_ParamIns>(_20d81455c_ParamIns{._field_Decl=jule::new_ptr<_20d814183_Param>(_20d814183_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_20d8e6991_Slc(_41713_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41713_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_20d8b2891_Data>(jule::Ptr<_20d8b440e_Eval>&,jule::Ptr<_20cb927ed_FnCallExpr>&,jule::Ptr<_20d8b2891_Data>&)>(_20d99e65e_builtinCallerCommonPlain), });;
	_40766_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_42713_f, 1)});
	_40766_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d810cea_CommonIdentExprModel>(_20d810cea_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}));
	_40766_d=_20d99e65e_builtinCallerCommonPlain(_40729_e,_40744_fc,_40766_d);
	if ((_40766_d != nullptr)) {
		jule::Ptr<_20d80e49c_FnCallExprModel> _45517_model = _40766_d.get()._field_Model.operator jule::Ptr<_20d80e49c_FnCallExprModel>();;
		_40766_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d81222a_BuiltinAppendCallExprModel>(_20d81222a_BuiltinAppendCallExprModel{._field_Dest=_45517_model.get()._field_Args[0LL], ._field_Elements=_45517_model.get()._field_Args[1LL]}));
	};
	return _40766_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a2178_callerCopySlice(jule::Ptr<_20d8b2891_Data>& _46425_dest, jule::Ptr<_20d8b440e_Eval>& _46443_e, jule::Ptr<_20cb927ed_FnCallExpr>& _46458_fc, jule::Ptr<_20d8b2891_Data>& _46480_d) {
	if ((!(_46425_dest.get()._field_Mutable))) {
		_20d8b491a_pushErr(_46443_e.ptr(), _46458_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _46913_src = _20d8ced31_evalExpr(_46443_e, _46458_fc.get()._field_Args[1LL]);;
	if ((_46913_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20d8ec5bd_Slc> _47313_slc = _20d8e6991_Slc(_46913_src.get()._field_Kind.ptr());;
	if ((_47313_slc != nullptr)) {
		if (((!(_46913_src.get()._field_Mutable)) && _20d8e4d02_Mutable(_47313_slc.get()._field_Elem.ptr()))) {
			_20d8b491a_pushErr(_46443_e.ptr(), _46458_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_20d8e3d89_Equals(_46425_dest.get()._field_Kind, _46913_src.get()._field_Kind)))) {
			_20d8b491a_pushErr(_46443_e.ptr(), _46458_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_46425_dest.get()._field_Kind.ptr())),jule::Any(_20d8e3a7b_Str(_46913_src.get()._field_Kind.ptr()))}));
		};
	} else {
		jule::Ptr<_20d8e83cc_Prim> _48313_destPrim = _20d8e5a17_Prim(_20d8e6991_Slc(_46425_dest.get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_20d8e83cc_Prim> _48413_prim = _20d8e5a17_Prim(_46913_src.get()._field_Kind.ptr());;
		if (((((_48313_destPrim == nullptr) || (_48413_prim == nullptr)) || (!(_20d8eb611_IsStr(_48413_prim.ptr())))) || (!(_20d8e9bd6_IsU8(_48313_destPrim.ptr()))))) {
			_20d8b491a_pushErr(_46443_e.ptr(), _46458_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_46425_dest.get()._field_Kind.ptr())),jule::Any(_20d8e3a7b_Str(_46913_src.get()._field_Kind.ptr()))}));
		};
	};
	_46480_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("int", 3)), 6)});
	_46480_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d812c64_BuiltinCopyCallExprModel>(_20d812c64_BuiltinCopyCallExprModel{._field_Dest=_46425_dest, ._field_Src=_46913_src}));
	return _46480_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a260c_callerCopyStr(jule::Ptr<_20d8b2891_Data>& _49823_dest, jule::Ptr<_20d8b440e_Eval>& _49841_e, jule::Ptr<_20cb927ed_FnCallExpr>& _49856_fc, jule::Ptr<_20d8b2891_Data>& _49878_d) {
	if ((!(_49823_dest.get()._field_Mutable))) {
		_20d8b491a_pushErr(_49841_e.ptr(), _49856_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _50313_src = _20d8ced31_evalExpr(_49841_e, _49856_fc.get()._field_Args[1LL]);;
	if ((_50313_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_20d8e5a17_Prim(_50313_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c92b58c2:;
			{
				if (_20d8eb611_IsStr(_20d8e5a17_Prim(_50313_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_20d8e6991_Slc(_50313_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c92b5938:;
			{
				jule::Ptr<_20d8ec5bd_Slc> _51317_slc = _20d8e6991_Slc(_50313_src.get()._field_Kind.ptr());;
				if (((_20d8e5a17_Prim(_51317_slc.get()._field_Elem.ptr()) != nullptr) && _20d8e9bd6_IsU8(_20d8e5a17_Prim(_51317_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1c92b56a2:;
	};
	_20d8b491a_pushErr(_49841_e.ptr(), _49856_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_49823_dest.get()._field_Kind.ptr())),jule::Any(_20d8e3a7b_Str(_50313_src.get()._field_Kind.ptr()))}));
	_julec_label_end:;
	_49878_d.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("int", 3)), 6)});
	_49878_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d812c64_BuiltinCopyCallExprModel>(_20d812c64_BuiltinCopyCallExprModel{._field_Dest=_49823_dest, ._field_Src=_50313_src}));
	return _49878_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a29e7_builtinCallerCopy(jule::Ptr<_20d8b440e_Eval>& _52827_e, jule::Ptr<_20cb927ed_FnCallExpr>& _52842_fc, jule::Ptr<_20d8b2891_Data>& _52864_d) {
	if ((_52842_fc.get()._field_Args.len() < 2LL)) {
		if ((_52842_fc.get()._field_Args.len() == 1LL)) {
			_20d8b491a_pushErr(_52827_e.ptr(), _52842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;;
		};
		_20d8b491a_pushErr(_52827_e.ptr(), _52842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;;
	};
	if ((_52842_fc.get()._field_Args.len() > 2LL)) {
		_20d8b491a_pushErr(_52827_e.ptr(), _52842_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _54113_dest = _20d8ced31_evalExpr(_52827_e, _52842_fc.get()._field_Args[0LL]);;
	{
		
		if ((_54113_dest == nullptr)) {
			_case_begin_1c92c0b63:;
			{
				return nullptr;;
			}
		}
		else if ((_20d8e6991_Slc(_54113_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c92c0bc9:;
			{
				return _20d9a2178_callerCopySlice(_54113_dest,_52827_e,_52842_fc,_52864_d);;
			}
		}
		else if (((_20d8e5a17_Prim(_54113_dest.get()._field_Kind.ptr()) != nullptr) && _20d8eb611_IsStr(_20d8e5a17_Prim(_54113_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c92c09ba:;
			{
				return _20d9a260c_callerCopyStr(_54113_dest,_52827_e,_52842_fc,_52864_d);;
			}
		}
		else {
			_case_begin_1c92bebd9:;
			{
				_20d8b491a_pushErr(_52827_e.ptr(), _52842_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c92beb73:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d9a2d38_callerLenSlice(jule::Ptr<_20d8b2891_Data>& _55524_expr, jule::Ptr<_20d8b2891_Data>& _55542_d) {
	_55542_d.get()._field_Kind=_20d8abadd_lenKind();
	_55542_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d812417_BuiltinLenCallExprModel>(_20d812417_BuiltinLenCallExprModel{._field_Expr=_55524_expr}));
	return _55542_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a3179_callerLenMap(jule::Ptr<_20d8b2891_Data>& _56322_expr, jule::Ptr<_20d8b2891_Data>& _56340_d) {
	_56340_d.get()._field_Kind=_20d8abadd_lenKind();
	_56340_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d812417_BuiltinLenCallExprModel>(_20d812417_BuiltinLenCallExprModel{._field_Expr=_56322_expr}));
	return _56340_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a34ba_callerLenArr(jule::Ptr<_20d8b2891_Data>& _57122_expr, jule::Ptr<_20d8b2891_Data>& _57140_d) {
	_57140_d.get()._field_Kind=_20d8abadd_lenKind();
	_57140_d.get()._field_Constant=static__20cc98393_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_20d8e672c_Arr(_57122_expr.get()._field_Kind.ptr()).get()._field_N)));
	_57140_d.get()._field_Model=static_cast<jule::Any>(_57140_d.get()._field_Constant);
	return _57140_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a380b_callerLenStr(jule::Ptr<_20d8b2891_Data>& _57822_expr, jule::Ptr<_20d8b2891_Data>& _57840_d) {
	_57840_d.get()._field_Kind=_20d8abadd_lenKind();
	if (_20d8b3254_IsConst(_57822_expr.ptr())) {
		_57840_d.get()._field_Constant=static__20cc98393_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_20d80aa4d_ReadStr(_57822_expr.get()._field_Constant.ptr()).len())));
		_57840_d.get()._field_Model=static_cast<jule::Any>(_57840_d.get()._field_Constant);
	} else {
		_57840_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d812417_BuiltinLenCallExprModel>(_20d812417_BuiltinLenCallExprModel{._field_Expr=_57822_expr}));
	};
	return _57840_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a3be6_builtinCallerLen(jule::Ptr<_20d8b440e_Eval>& _59126_e, jule::Ptr<_20cb927ed_FnCallExpr>& _59141_fc, jule::Ptr<_20d8b2891_Data>& _59163_d) {
	if ((_59141_fc.get()._field_Args.len() < 1LL)) {
		_20d8b491a_pushErr(_59126_e.ptr(), _59141_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3))}));
		return nullptr;;
	};
	if ((_59141_fc.get()._field_Args.len() > 1LL)) {
		_20d8b491a_pushErr(_59126_e.ptr(), _59141_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _59913_dest = _20d8ced31_evalExpr(_59126_e, _59141_fc.get()._field_Args[0LL]);;
	{
		
		if ((_59913_dest == nullptr)) {
			_case_begin_1c92ca9a3:;
			{
				return nullptr;;
			}
		}
		else if (_59913_dest.get()._field_Decl) {
			_case_begin_1c92caa19:;
			{
				_20d8b491a_pushErr(_59126_e.ptr(), _59141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_20d8e6991_Slc(_59913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c92ca80a:;
			{
				return _20d9a2d38_callerLenSlice(_59913_dest,_59163_d);;
			}
		}
		else if ((_20d8e672c_Arr(_59913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c92ca882:;
			{
				return _20d9a34ba_callerLenArr(_59913_dest,_59163_d);;
			}
		}
		else if ((_20d8e7442_Map(_59913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c92c9a90:;
			{
				return _20d9a3179_callerLenMap(_59913_dest,_59163_d);;
			}
		}
		else if (((_20d8e5a17_Prim(_59913_dest.get()._field_Kind.ptr()) != nullptr) && _20d8eb611_IsStr(_20d8e5a17_Prim(_59913_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c92c9b06:;
			{
				return _20d9a380b_callerLenStr(_59913_dest,_59163_d);;
			}
		}
		else {
			_case_begin_1c92c9a29:;
			{
				_20d8b491a_pushErr(_59126_e.ptr(), _59141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c92c99b3:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d9a4037_callerCapSlice(jule::Ptr<_20d8b2891_Data>& _62024_expr, jule::Ptr<_20d8b2891_Data>& _62042_d) {
	_62042_d.get()._field_Kind=_20d8abadd_lenKind();
	_62042_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d812604_BuiltinCapCallExprModel>(_20d812604_BuiltinCapCallExprModel{._field_Expr=_62024_expr}));
	return _62042_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a4378_callerCapStr(jule::Ptr<_20d8b2891_Data>& _62822_expr, jule::Ptr<_20d8b2891_Data>& _62840_d) {
	_62840_d.get()._field_Kind=_20d8abadd_lenKind();
	if (_20d8b3254_IsConst(_62822_expr.ptr())) {
		_62840_d.get()._field_Constant=static__20cc98393_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_20d80aa4d_ReadStr(_62822_expr.get()._field_Constant.ptr()).cap())));
		_62840_d.get()._field_Model=static_cast<jule::Any>(_62840_d.get()._field_Constant);
	} else {
		_62840_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d812604_BuiltinCapCallExprModel>(_20d812604_BuiltinCapCallExprModel{._field_Expr=_62822_expr}));
	};
	return _62840_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a4763_builtinCallerCap(jule::Ptr<_20d8b440e_Eval>& _64126_e, jule::Ptr<_20cb927ed_FnCallExpr>& _64141_fc, jule::Ptr<_20d8b2891_Data>& _64163_d) {
	if ((_64141_fc.get()._field_Args.len() < 1LL)) {
		_20d8b491a_pushErr(_64126_e.ptr(), _64141_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3))}));
		return nullptr;;
	};
	if ((_64141_fc.get()._field_Args.len() > 1LL)) {
		_20d8b491a_pushErr(_64126_e.ptr(), _64141_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _64913_dest = _20d8ced31_evalExpr(_64126_e, _64141_fc.get()._field_Args[0LL]);;
	{
		
		if ((_64913_dest == nullptr)) {
			_case_begin_1c92d56a0:;
			{
				return nullptr;;
			}
		}
		else if (_64913_dest.get()._field_Decl) {
			_case_begin_1c92d5716:;
			{
				_20d8b491a_pushErr(_64126_e.ptr(), _64141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_20d8e6991_Slc(_64913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c92d5507:;
			{
				return _20d9a4037_callerCapSlice(_64913_dest,_64163_d);;
			}
		}
		else if (((_20d8e5a17_Prim(_64913_dest.get()._field_Kind.ptr()) != nullptr) && _20d8eb611_IsStr(_20d8e5a17_Prim(_64913_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c92d556d:;
			{
				return _20d9a4378_callerCapStr(_64913_dest,_64163_d);;
			}
		}
		else {
			_case_begin_1c92d4726:;
			{
				_20d8b491a_pushErr(_64126_e.ptr(), _64141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c92d46b0:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d9a4be7_callerDeleteMap(jule::Ptr<_20d8b440e_Eval>& _66625_e, jule::Ptr<_20cb927ed_FnCallExpr>& _66640_fc, jule::Ptr<_20d8b2891_Data>& _66662_expr, jule::Ptr<_20d8b2891_Data>& _66680_d) {
	if ((!(_66662_expr.get()._field_Mutable))) {
		_20d8b491a_pushErr(_66625_e.ptr(), _66640_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	_66680_d=_20d8da19e_buildVoidData();
	jule::Ptr<_20d810503_BuiltinDeleteCallExprModel> _67113_model = jule::new_ptr<_20d810503_BuiltinDeleteCallExprModel>(_20d810503_BuiltinDeleteCallExprModel{._field_Dest=_66662_expr, });;
	if ((_66640_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_20d8b2891_Data> _67517_key = _20d8ced31_evalExpr(_66625_e, _66640_fc.get()._field_Args[1LL]);;
		{
			
			if ((_67517_key == nullptr)) {
				_case_begin_1c92dbd16:;
				{
					return nullptr;;
				}
			}
			else if (_67517_key.get()._field_Decl) {
				_case_begin_1c92da63e:;
				{
					_20d8b491a_pushErr(_66625_e.ptr(), _66640_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1c92da5c8:;
				{
					;
					jule::Ptr<_20d8e3680_TypeKind> _68421_keyType = _20d8e7442_Map(_66662_expr.get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_20d856c42_checkAssignType(_66625_e.get()._field_s, false,_68421_keyType,_67517_key,_66640_fc.get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1c92da562:;
		};
		_67113_model.get()._field_Key=_67517_key;
	};
	_66680_d.get()._field_Model=static_cast<jule::Any>(_67113_model);
	return _66680_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a50d2_builtinCallerDelete(jule::Ptr<_20d8b440e_Eval>& _69529_e, jule::Ptr<_20cb927ed_FnCallExpr>& _69544_fc, jule::Ptr<_20d8b2891_Data>& _69566_d) {
	if ((_69544_fc.get()._field_Args.len() < 1LL)) {
		_20d8b491a_pushErr(_69529_e.ptr(), _69544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3))}));
		return nullptr;;
	};
	if ((_69544_fc.get()._field_Args.len() > 2LL)) {
		_20d8b491a_pushErr(_69529_e.ptr(), _69544_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _70313_dest = _20d8ced31_evalExpr(_69529_e, _69544_fc.get()._field_Args[0LL]);;
	{
		
		if ((_70313_dest == nullptr)) {
			_case_begin_1c92e23b0:;
			{
				return nullptr;;
			}
		}
		else if (_70313_dest.get()._field_Decl) {
			_case_begin_1c92e2426:;
			{
				_20d8b491a_pushErr(_69529_e.ptr(), _69544_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_20d8e7442_Map(_70313_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c92e2217:;
			{
				return _20d9a4be7_callerDeleteMap(_69529_e,_69544_fc,_70313_dest,_69566_d);;
			}
		}
		else {
			_case_begin_1c92e1436:;
			{
				_20d8b491a_pushErr(_69529_e.ptr(), _69544_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c92e13c0:;
	};
}



inline jule::Ptr<_20d8b2891_Data> _20d9a54bc_builtinCallerClone(jule::Ptr<_20d8b440e_Eval>& _71828_e, jule::Ptr<_20cb927ed_FnCallExpr>& _71843_fc, jule::Ptr<_20d8b2891_Data>& ) {
	if ((_71843_fc.get()._field_Args.len() < 1LL)) {
		_20d8b491a_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;;
	};
	if ((_71843_fc.get()._field_Args.len() > 1LL)) {
		_20d8b491a_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _72713_d = _20d8ce715_evalExprKind(_71828_e, _71843_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_72713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_20d8e553e_SupportsCloning(_72713_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_20d8e6991_Slc(_72713_d.get()._field_Kind.ptr()) != nullptr) || (_20d8e7442_Map(_72713_d.get()._field_Kind.ptr()) != nullptr) || (_20d8e672c_Arr(_72713_d.get()._field_Kind.ptr()) != nullptr) || (_20d8e5c7b_Sptr(_72713_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1c92e75a2:;
				{
					{
						_20d8b491a_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_72713_d.get()._field_Kind.ptr()))}));
					};
				}
			}
			else if ((_20d8e6e69_Struct(_72713_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1c92e6e0e:;
				{
					{
						_20d8b491a_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_72713_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_1c92e6d98:;
				{
					{
						_20d8b491a_pushErr(_71828_e.ptr(), _71843_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_20d8e3a7b_Str(_72713_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_1c92e69d0:;
		};
	};
	_72713_d.get()._field_Mutable=true;
	_72713_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d81178a_BuiltinCloneCallExprModel>(_20d81178a_BuiltinCloneCallExprModel{._field_Expr=_72713_d.get()._field_Model}));
	return _72713_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a5a83_builtinCallerAssert(jule::Ptr<_20d8b440e_Eval>& _76029_e, jule::Ptr<_20cb927ed_FnCallExpr>& _76044_fc, jule::Ptr<_20d8b2891_Data>& ) {
	if ((_76044_fc.get()._field_Args.len() < 1LL)) {
		_20d8b491a_pushErr(_76029_e.ptr(), _76044_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;;
	};
	if ((_76044_fc.get()._field_Args.len() > 2LL)) {
		_20d8b491a_pushErr(_76029_e.ptr(), _76044_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _76913_expr = _20d8ced31_evalExpr(_76029_e, _76044_fc.get()._field_Args[0LL]);;
	if ((_76913_expr == nullptr)) {
		return nullptr;;
	};
	if (((_20d8e5a17_Prim(_76913_expr.get()._field_Kind.ptr()) == nullptr) || (!(_20d8eb39c_IsBool(_20d8e5a17_Prim(_76913_expr.get()._field_Kind.ptr()).ptr()))))) {
		_20d8b491a_pushErr(_76029_e.ptr(), _76044_fc.get()._field_Token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d811d51_BuiltinAssertCallExprModel> _77813_model = jule::new_ptr<_20d811d51_BuiltinAssertCallExprModel>(_20d811d51_BuiltinAssertCallExprModel{._field_Token=_76044_fc.get()._field_Token, ._field_Expr=_76913_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if ((_76044_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_20d8b2891_Data> _78617_log = _20d8ced31_evalExpr(_76029_e, _76044_fc.get()._field_Args[1LL]);;
		if ((_78617_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_20d8b3254_IsConst(_78617_log.ptr()))) || (_20d8e5a17_Prim(_78617_log.get()._field_Kind.ptr()) == nullptr)) || (!(_20d8eb611_IsStr(_20d8e5a17_Prim(_78617_log.get()._field_Kind.ptr()).ptr()))))) {
			_20d8b491a_pushErr(_76029_e.ptr(), _76044_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_20d8e3a7b_Str(_78617_log.get()._field_Kind.ptr()))}));
			return nullptr;;
		};
		_77813_model.get()._field_Log=_20d80aa4d_ReadStr(_78617_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_20d8b2891_Data> _79913_d = _20d8da19e_buildVoidData();;
	_79913_d.get()._field_Model=static_cast<jule::Any>(_77813_model);
	return _79913_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a5de6_builtinCallerStdMemSizeOf(jule::Ptr<_20d8b440e_Eval>& _80435_e, jule::Ptr<_20cb927ed_FnCallExpr>& _80450_fc, jule::Ptr<_20d8b2891_Data>& ) {
	jule::Ptr<_20d8b2891_Data> _80513_result = jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_80450_fc.get()._field_Args.len() < 1LL)) {
		_20d8b491a_pushErr(_80435_e.ptr(), _80450_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _80513_result;;
	};
	if ((_80450_fc.get()._field_Args.len() > 1LL)) {
		_20d8b491a_pushErr(_80435_e.ptr(), _80450_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _81713_d = _20d8ce715_evalExprKind(_80435_e, _80450_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_81713_d == nullptr)) {
		return _80513_result;;
	};
	_80513_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d81313d_SizeofExprModel>(_20d81313d_SizeofExprModel{._field_Expr=_81713_d.get()._field_Model}));
	return _80513_result;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a6314_builtinCallerStdMemAlignOf(jule::Ptr<_20d8b440e_Eval>& _82636_e, jule::Ptr<_20cb927ed_FnCallExpr>& _82651_fc, jule::Ptr<_20d8b2891_Data>& ) {
	jule::Ptr<_20d8b2891_Data> _82713_result = jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_82651_fc.get()._field_Args.len() < 1LL)) {
		_20d8b491a_pushErr(_82636_e.ptr(), _82651_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _82713_result;;
	};
	if ((_82651_fc.get()._field_Args.len() > 1LL)) {
		_20d8b491a_pushErr(_82636_e.ptr(), _82651_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _83913_d = _20d8ce715_evalExprKind(_82636_e, _82651_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_83913_d == nullptr)) {
		return _82713_result;;
	};
	_82713_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d81332a_AlignofExprModel>(_20d81332a_AlignofExprModel{._field_Expr=_83913_d.get()._field_Model}));
	return _82713_result;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a6732_builtinCallerStdMemFree(jule::Ptr<_20d8b440e_Eval>& _84833_e, jule::Ptr<_20cb927ed_FnCallExpr>& _84848_fc, jule::Ptr<_20d8b2891_Data>& ) {
	if ((_84848_fc.get()._field_Args.len() < 1LL)) {
		_20d8b491a_pushErr(_84833_e.ptr(), _84848_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;;
	};
	if ((_84848_fc.get()._field_Args.len() > 1LL)) {
		_20d8b491a_pushErr(_84833_e.ptr(), _84848_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _85713_d = _20d8ce715_evalExprKind(_84833_e, _84848_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_85713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_20d8e52ca_PerformsRC(_85713_d.get()._field_Kind.ptr())))) {
		_20d8b491a_pushErr(_84833_e.ptr(), _84848_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _86613_result = _20d8da19e_buildVoidData();;
	_86613_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d813acd_FreeExprModel>(_20d813acd_FreeExprModel{._field_Expr=_85713_d.get()._field_Model}));
	return _86613_result;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a6b61_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_20d8b440e_Eval>& _87145_e, jule::Ptr<_20cb927ed_FnCallExpr>& _87160_fc, jule::Ptr<_20d8b2891_Data>& ) {
	if ((_87160_fc.get()._field_Args.len() < 1LL)) {
		_20d8b491a_pushErr(_87145_e.ptr(), _87160_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;;
	};
	if ((_87160_fc.get()._field_Args.len() > 1LL)) {
		_20d8b491a_pushErr(_87145_e.ptr(), _87160_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d8b2891_Data> _88013_d = _20d8ce715_evalExprKind(_87145_e, _87160_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_88013_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_20d90b27a_isBuiltinStrConvertable(_88013_d.get()._field_Kind)))) {
		_20d8b491a_pushErr(_87145_e.ptr(), _87160_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_20d8b2891_Data>(_20d8b2891_Data{._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(_20d90b8a7_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_20d813704_IntegratedToStrExprModel>(_20d813704_IntegratedToStrExprModel{._field_Expr=_88013_d.get()._field_Model})), });;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a707e_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_20d8b440e_Eval>& _89844_e, jule::Ptr<_20cb927ed_FnCallExpr>& _89859_fc, jule::Ptr<_20d8b2891_Data>& _89881_d) {
	if ((!(_20d8b5355_isUnsafe(_89844_e.ptr())))) {
		_20d8b491a_pushErr(_89844_e.ptr(), _89859_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_89859_fc.get()._field_Args.len() < 1LL)) {
		_20d8b491a_pushErr(_89844_e.ptr(), _89859_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;;
	};
	jule::Ptr<_20d8b2891_Data> _90813_argd = _20d8ced31_evalExpr(_89844_e, _89859_fc.get()._field_Args[0LL]);;
	if ((_90813_argd == nullptr)) {
		return nullptr;;
	};
	if (((_20d8e5a17_Prim(_90813_argd.get()._field_Kind.ptr()) == nullptr) || (!(_20d8eb611_IsStr(_20d8e5a17_Prim(_90813_argd.get()._field_Kind.ptr()).ptr()))))) {
		_20d8b491a_pushErr(_89844_e.ptr(), _89859_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_20d8e3a7b_Str(_90813_argd.get()._field_Kind.ptr()))}));
		return nullptr;;
	};
	if (((!(_20d8b3254_IsConst(_90813_argd.ptr()))) || (!(_20d80bc3b_IsStr(_90813_argd.get()._field_Constant.ptr()))))) {
		_20d8b491a_pushErr(_89844_e.ptr(), _89859_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d8b2891_Data> _92313_r = _20d8da19e_buildVoidData();;
	jule::Ptr<_20d814749_FnIns> _92513_f = _20d8e6c05_Fn(_89881_d.get()._field_Kind.ptr());;
	if ((_92513_f.get()._field_Generics.len() > 0LL)) {
		_92313_r.get()._field_Kind=_92513_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_20d8138e1_BackendEmitExprModel> _93013_model = jule::new_ptr<_20d8138e1_BackendEmitExprModel>(_20d8138e1_BackendEmitExprModel{._field_Code=_20d80aa4d_ReadStr(_90813_argd.get()._field_Constant.ptr()), });;
	if ((_89859_fc.get()._field_Args.len() > 1LL)) {
		_93013_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, (_89859_fc.get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = _89859_fc.get()._field_Args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1c9320740:;
			if (it != expr.end()) {
				jule::Ptr<_20cb8d81b_Expr> _93621_arg = *it;
				{
					_90813_argd=_20d8ce715_evalExprKind(_89844_e, _93621_arg.get()._field_Kind);
					if ((_90813_argd == nullptr)) {
						return nullptr;;
					};
					_93013_model.get()._field_Exprs = jule::alloc_for_append(_93013_model.get()._field_Exprs,1);_93013_model.get()._field_Exprs.__push(_90813_argd.get()._field_Model);;
				}
				_iter_next_1c9320740:;
				++it;
				goto _iter_begin_1c9320740;
			}
			_iter_end_1c9320740:;
		};
	};
	_92313_r.get()._field_Model=static_cast<jule::Any>(_93013_model);
	return _92313_r;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a74be_builtinCallerStdDebugOut(jule::Ptr<_20d8b440e_Eval>& _94934_e, jule::Ptr<_20cb927ed_FnCallExpr>& _94949_fc, jule::Ptr<_20d8b2891_Data>& _94971_d) {
	_94971_d=_20d9a052d_builtinCallerOut(_94934_e,_94949_fc,_94971_d);
	if ((_94971_d == nullptr)) {
		return nullptr;;
	};
	_94971_d.get()._field_Model.operator jule::Ptr<_20d8113b1_BuiltinOutCallExprModel>().get()._field_Debug=true;
	return _94971_d;;
}



inline jule::Ptr<_20d8b2891_Data> _20d9a78a9_builtinCallerStdDebugOutln(jule::Ptr<_20d8b440e_Eval>& _95836_e, jule::Ptr<_20cb927ed_FnCallExpr>& _95851_fc, jule::Ptr<_20d8b2891_Data>& _95873_d) {
	_95873_d=_20d9a0918_builtinCallerOutln(_95836_e,_95851_fc,_95873_d);
	if ((_95873_d == nullptr)) {
		return nullptr;;
	};
	_95873_d.get()._field_Model.operator jule::Ptr<_20d81159d_BuiltinOutlnCallExprModel>().get()._field_Debug=true;
	return _95873_d;;
}



inline jule::Bool _20db43e63_FindModuleFile(jule::Slice<jule::Ptr<_216327de2_DirEntry>>& _1220_dirents) {
	{
		auto &expr = _1220_dirents;
		auto it = expr.begin();
		_iter_begin_1c9325e2c:;
		if (it != expr.end()) {
			jule::Ptr<_216327de2_DirEntry> &_1312_d = *it;
			{
				if (((!(_2163285da_IsDir(_1312_d.get()._field_Stat.ptr()))) && (_1312_d.get()._field_Name == jule::Str("jule.mod", 8)))) {
					return true;;
				};
			}
			_iter_next_1c9325e2c:;
			++it;
			goto _iter_begin_1c9325e2c;
		}
		_iter_end_1c9325e2c:;
	};
	return false;;
}



inline jule::Str _20db4410b_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_216327de2_DirEntry>> _2617_dirents = ({
				auto except = static__20b13e021_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1c9326c41;
				} jule::Slice<jule::Ptr<_216327de2_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _20db43e63_FindModuleFile(_2617_dirents);;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_22321c8e0_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1c9326c41;
			};
		}
	_iter_next_1c9326c41:;
	}
	_iter_end_1c9326c41:;;
	return jule::Str();;
}



inline jule::Slice<_20b1bc016_Log> _20db443a3_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__216328be5_Read(_223218d81_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_20b1bc016_Log>::make({_20b1bc016_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _20b13d284_Trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_20b1bc016_Log>::make({_20b1bc016_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_1e11c41ae_FileInfo> _1e121ac1c_ParseFile(jule::Ptr<_20b4ea91b_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e11c41ae_FileInfo> _2713_finf = jule::new_ptr<_1e11c41ae_FileInfo>();;
	({
		_x_20cb5014b_Ast_s_20b1bc016_Log __jule_assign_result = _1e121b2a0_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline _x_20cb5014b_Ast_s_20b1bc016_Log _1e121b2a0_parseFileset(jule::Ptr<_20b4ea91b_File> _5521_f) {
	_x_20cb5014b_Ast_s_20b1bc016_Log __jule_func_result;
	jule::Ptr<_1e1239c4c_parser> _5613_p = jule::new_ptr<_1e1239c4c_parser>();;
	_1e124961e_parse(_5613_p, _5521_f);
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_20cb99283_ScopeTree> _1e121bc0c_newScope(void) {
	return jule::new_ptr<_20cb99283_ScopeTree>();;
}



inline _bool_bool _1e121beb5_isSt(jule::Ptr<_20b4e5581_Token> _499_current, jule::Ptr<_20b4e5581_Token> _4926_prev) {
	_bool_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return __jule_func_result;;
}



inline jule::Bool _1e121c306_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_20b4e5581_Token>>& _5526_tokens, jule::I64& _5545_i) {
	if (((_5545_i > 1LL) && (_5526_tokens[(_5545_i - 2LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_20b4e5581_Token> _6113_prev = _5526_tokens[(_5545_i - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _20b4e6076_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < _5526_tokens[_5545_i].get()._field_Row)));;
	};
}



inline _int_bool _1e121c68b_nextStPos(jule::Slice<jule::Ptr<_20b4e5581_Token>>& _7015_tokens, jule::I64 _7033_start) {
	_int_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _7113_braceN = 0LL;;
	jule::I64 _7213_i = _7033_start;;
	for (; (_7213_i < _7015_tokens.len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_20b4e5581_Token> _7613_tok = _7015_tokens[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_209c7532e:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_209c77760:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_1e121c306_prevIsIncompleteExpr(_7015_tokens,_7213_i)))) {
											({
												_bool_bool __jule_assign_result = _1e121beb5_isSt(_7613_tok,_7015_tokens[(_7213_i - 1LL)]);
												_7417_ok = __jule_assign_result.__jule_result_arg0;
												_7517_terminated = __jule_assign_result.__jule_result_arg1;
											});
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_209c75b26:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < _7015_tokens.len()))) {
										({
											_bool_bool __jule_assign_result = _1e121beb5_isSt(_7015_tokens[(_7213_i + 1LL)],_7613_tok);
											_7417_ok = __jule_assign_result.__jule_result_arg0;
											_7517_terminated = __jule_assign_result.__jule_result_arg1;
										});
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_209c7595b:;
						};
						goto _iter_next_209c73a36;
					}
				}
				_match_end_209c752c9:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_209c73a36;
			};
			if ((_7213_i > _7033_start)) {
				if (_1e121c306_prevIsIncompleteExpr(_7015_tokens,_7213_i)) {
					goto _iter_next_209c73a36;
				};
				({
					_bool_bool __jule_assign_result = _1e121beb5_isSt(_7613_tok,_7015_tokens[(_7213_i - 1LL)]);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					_bool_bool __jule_assign_result = _1e121beb5_isSt(_7613_tok,_7613_tok);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7417_ok))) {
				goto _iter_next_209c73a36;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7213_i;
			__jule_func_result.__jule_result_arg1 = _7517_terminated;
			return __jule_func_result;;
		}
	_iter_next_209c73a36:;
	}
	_iter_end_209c73a36:;;
	__jule_func_result.__jule_result_arg0 = _7213_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline _sx_20b4e5581_Token_bool _1e121c9cc_skipSt(jule::I64& _13216_i, jule::Slice<jule::Ptr<_20b4e5581_Token>> _13228_tokens) {
	_sx_20b4e5581_Token_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1339_start = _13216_i;;
	jule::Bool _13413_terminated = false;;
	({
		_int_bool __jule_assign_result = _1e121c68b_nextStPos(_13228_tokens,_1339_start);
		_13216_i = __jule_assign_result.__jule_result_arg0;
		_13413_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_20b4e5581_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start,_13216_i);;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			({
				_sx_20b4e5581_Token_bool __jule_assign_result = _1e121c9cc_skipSt(_13216_i,_13228_tokens);
				_13613_stTokens = __jule_assign_result.__jule_result_arg0;
				_13413_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13613_stTokens;
			__jule_func_result.__jule_result_arg1 = _13413_terminated;
			return __jule_func_result;;
		};
		_13613_stTokens=_13613_stTokens.slice(0LL,(_13613_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13613_stTokens;
	__jule_func_result.__jule_result_arg1 = _13413_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1e121ccc9_stmt>> _1e121d170_splitStmts(jule::Slice<jule::Ptr<_20b4e5581_Token>>& _15420_tokens) {
	jule::Slice<jule::Ptr<_1e121ccc9_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_1e121ccc9_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _15613_pos = 0LL;;
	while ((_15613_pos < _15420_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_20b4e5581_Token>> _15818_stmt;;
			jule::Bool _15824_terminated = false;;
			({
				_sx_20b4e5581_Token_bool __jule_assign_result = _1e121c9cc_skipSt(_15613_pos,_15420_tokens);
				_15818_stmt = __jule_assign_result.__jule_result_arg0;
				_15824_terminated = __jule_assign_result.__jule_result_arg1;
			});
			_15513_stmts = jule::alloc_for_append(_15513_stmts,1);_15513_stmts.__push(jule::new_ptr<_1e121ccc9_stmt>(_1e121ccc9_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated}));;
		}
	_iter_next_209c803d3:;
	}
	_iter_end_209c803d3:;;
	return _15513_stmts;;
}



inline jule::Bool _1e123485c_isTypeOp(jule::Str& _88814_kind) {
	return (((_88814_kind == jule::Str("&", 1)) || (_88814_kind == jule::Str("&&", 2))) || (_88814_kind == jule::Str("*", 1)));;
}



inline jule::Bool _1e1234b48_isTypeRange(jule::Slice<jule::Ptr<_20b4e5581_Token>>& _89521_tokens) {
	jule::Bool _89613_op = false;;
	{
		auto &expr = _89521_tokens;
		auto it = expr.begin();
		_iter_begin_209d3b14d:;
		if (it != expr.end()) {
			jule::I64 _8979_i = it - expr.begin();
			jule::Ptr<_20b4e5581_Token> _89712_token = *it;
			{
				if ((_89712_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					if ((_89712_token.get()._field_Kind == jule::Str("[", 1))) {
						if (_89613_op) {
							return true;;
						};
						jule::I64 _90325_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_20b4e5581_Token>> _90425_lTokens = _89521_tokens.slice(_8979_i);;
						{
							auto &expr = _90425_lTokens;
							auto it = expr.begin();
							_iter_begin_209d3c4c3:;
							if (it != expr.end()) {
								jule::Ptr<_20b4e5581_Token> _90524_lToken = *it;
								{
									{
										auto &_match_expr{ _90524_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(3LLU)) {
											_case_begin_209d3db56:;
											{
												{
													auto &_match_expr{ _90524_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_209d3e4b4:;
														{
															(_90325_rangeN)++;
															goto _iter_next_209d3c4c3;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_209d3e53b:;
														{
															(_90325_rangeN)--;
															goto _iter_next_209d3c4c3;
														}
													}
													_match_end_209d3e2d8:;
												};
											}
										}
										_match_end_209d3d914:;
									};
									if ((_90325_rangeN == 0LL)) {
										return _1e123485c_isTypeOp(_90524_lToken.get()._field_Kind);;
									};
								}
								_iter_next_209d3c4c3:;
								++it;
								goto _iter_begin_209d3c4c3;
							}
							_iter_end_209d3c4c3:;
						};
						return true;;
					};
				};
				if ((!(_1e123485c_isTypeOp(_89712_token.get()._field_Kind)))) {
					return false;;
				};
				_89613_op=true;
			}
			_iter_next_209d3b14d:;
			++it;
			_8979_i++;
			goto _iter_begin_209d3b14d;
		}
		_iter_end_209d3b14d:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_20b4e5581_Token>> _1e1234de0_getBlockExpr(jule::Slice<jule::Ptr<_20b4e5581_Token>>& _93322_tokens) {
	jule::I64 _93413_braceN = 0LL;;
	jule::I64 _93513_skipToNextBraceClose = 0LL;;
	{
		auto &expr = _93322_tokens;
		auto it = expr.begin();
		_iter_begin_209d40c8a:;
		if (it != expr.end()) {
			jule::I64 _9369_i = it - expr.begin();
			jule::Ptr<_20b4e5581_Token> _93612_tok = *it;
			{
				{
					auto &_match_expr{ _93612_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_209d41a6b:;
						{
							(_93513_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_209d41ae3:;
						{
							{
								auto &_match_expr{ _93612_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_209d42880:;
									{
										if (((_93413_braceN > 0LL) || (_93513_skipToNextBraceClose > 0LL))) {
											if ((_93513_skipToNextBraceClose > 0LL)) {
												(_93513_skipToNextBraceClose)--;
											};
											(_93413_braceN)++;
											goto _match_end_209d429c3;
										};
										return _93322_tokens.slice(0LL,_9369_i);;
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_209d43012:;
									{
										(_93413_braceN)++;
									}
								}
								else {
									_case_begin_209d42a39:;
									{
										(_93413_braceN)--;
									}
								}
								_match_end_209d429c3:;
							};
						}
					}
					_match_end_209d419c2:;
				};
			}
			_iter_next_209d40c8a:;
			++it;
			_9369_i++;
			goto _iter_begin_209d40c8a;
		}
		_iter_end_209d40c8a:;
	};
	return nullptr;;
}



inline _sx_20b4e5581_Token_sx_20b4e5581_Token _1e1235275_splitDelim(jule::Slice<jule::Ptr<_20b4e5581_Token>>& _96420_tokens, jule::U64 _96438_delim) {
	_sx_20b4e5581_Token_sx_20b4e5581_Token __jule_func_result;
	jule::I64 _96513_rangeN = 0LL;;
	{
		auto &expr = _96420_tokens;
		auto it = expr.begin();
		_iter_begin_209d415a4:;
		if (it != expr.end()) {
			jule::I64 _9669_i = it - expr.begin();
			jule::Ptr<_20b4e5581_Token> _96612_token = *it;
			{
				{
					auto &_match_expr{ _96612_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_209d45201:;
						{
							{
								auto &_match_expr{ _96612_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_209d45ee3:;
									{
										(_96513_rangeN)++;
										goto _iter_next_209d415a4;
									}
								}
								else {
									_case_begin_209d45ae7:;
									{
										(_96513_rangeN)--;
									}
								}
								_match_end_209d4592c:;
							};
						}
					}
					else if (_match_expr == _96438_delim) {
						_case_begin_209d45278:;
						{
							if ((_96513_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_20b4e5581_Token>> _98025_l = _96420_tokens.slice(0LL,_9669_i);;
								jule::Slice<jule::Ptr<_20b4e5581_Token>> _98125_r = _96420_tokens.slice((_9669_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _98025_l;
								__jule_func_result.__jule_result_arg1 = _98125_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_209d44ec0:;
				};
			}
			_iter_next_209d415a4:;
			++it;
			_9669_i++;
			goto _iter_begin_209d415a4;
		}
		_iter_end_209d415a4:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1e123551c_findLowestPrecOp(jule::Slice<jule::Ptr<_20b4e5581_Token>>& _99122_tokens) {
	jule::U8 _99613_prec = 255LLU;;
	jule::I64 _99713_precPos = -1LL;;
	jule::I64 _99913_braceN = 0LL;;
	jule::Bool _100013_skipToNextBraceOpen = false;;
	{
		auto &expr = _99122_tokens;
		auto it = expr.begin();
		_iter_begin_209d487ed:;
		if (it != expr.end()) {
			jule::I64 _10019_i = it - expr.begin();
			jule::Ptr<_20b4e5581_Token> &_100112_token = *it;
			{
				{
					
					if ((_100112_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_209d49535:;
						{
							{
								auto &_match_expr{ _100112_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_209d4a190:;
									{
										_100013_skipToNextBraceOpen=false;
										goto _case_begin_209d4a8bb;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_209d4a8bb:;
									{
										(_99913_braceN)++;
									}
								}
								else {
									_case_begin_209d4a426:;
									{
										(_99913_braceN)--;
									}
								}
								_match_end_209d4a25b:;
							};
							goto _iter_next_209d487ed;
						}
					}
					else if (_100013_skipToNextBraceOpen) {
						_case_begin_209d495ac:;
						{
							goto _iter_next_209d487ed;
						}
					}
					else if ((_100112_token.get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_209d49634:;
						{
							_100013_skipToNextBraceOpen=true;
							goto _iter_next_209d487ed;
						}
					}
					else if ((_10019_i == 0LL)) {
						_case_begin_209d496ab:;
						{
							goto _iter_next_209d487ed;
						}
					}
					else if ((_100112_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_209d49733:;
						{
							goto _iter_next_209d487ed;
						}
					}
					else if ((_99913_braceN > 0LL)) {
						_case_begin_209d497aa:;
						{
							goto _iter_next_209d487ed;
						}
					}
					_match_end_209d493d1:;
				};
				jule::Ptr<_20b4e5581_Token> _102813_left = _99122_tokens[(_10019_i - 1LL)];;
				if (((_102813_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_102813_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_209d487ed;
				};
				if ((((_10019_i > 1LL) && (_102813_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && (_102813_left.get()._field_Kind == jule::Str("]", 1)))) {
					jule::Ptr<_20b4e5581_Token> _103617_lleft = _99122_tokens[(_10019_i - 2LL)];;
					if (((_103617_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_103617_lleft.get()._field_Kind == jule::Str("[", 1)))) {
						if (((_100112_token.get()._field_Kind == jule::Str("&", 1)) || (_100112_token.get()._field_Kind == jule::Str("*", 1)))) {
							goto _iter_next_209d487ed;
						};
					};
				};
				jule::U8 _104513_p = _20b4e5938_Prec(_100112_token.ptr());;
				if (((_104513_p != 0LLU) && (_104513_p <= _99613_prec))) {
					_99613_prec=_104513_p;
					_99713_precPos=_10019_i;
				};
			}
			_iter_next_209d487ed:;
			++it;
			_10019_i++;
			goto _iter_begin_209d487ed;
		}
		_iter_end_209d487ed:;
	};
	return _99713_precPos;;
}



inline jule::Ptr<_20cb904cc_IdentExpr> _1e12357b4_buildIdentExpr(jule::Ptr<_20b4e5581_Token>& _105424_token) {
	return jule::new_ptr<_20cb904cc_IdentExpr>(_20cb904cc_IdentExpr{._field_Token=_105424_token, ._field_Ident=_105424_token.get()._field_Kind, ._field_CppLinked=false});;
}



inline _sx_20b4e5581_Token_int _1e1235a5b_getRangeExprTokens(jule::Slice<jule::Ptr<_20b4e5581_Token>>& _106228_tokens) {
	_sx_20b4e5581_Token_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _106313_rangeN = 0LL;;
	jule::I64 _106413_i = (_106228_tokens.len() - 1LL);;
	for (; (_106413_i >= 0LL); (_106413_i)--) {
		{
			jule::Ptr<_20b4e5581_Token> _106613_tok = _106228_tokens[_106413_i];;
			if ((_106613_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _106613_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_209d53d7a:;
						{
							(_106313_rangeN)++;
						}
					}
					else {
						_case_begin_209d5396d:;
						{
							(_106313_rangeN)--;
						}
					}
					_match_end_209d5375e:;
				};
			};
			if ((_106313_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = _106228_tokens.slice(0LL,_106413_i);
				__jule_func_result.__jule_result_arg1 = _106313_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_209d5294a:;
	}
	_iter_end_209d5294a:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _106313_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1e12367b5_checkAssignTokens(jule::Slice<jule::Ptr<_20b4e5581_Token>>& _1623_tokens) {
	if (((_1623_tokens.len() == 0LL) || (!(_20b4e9b29_IsAssign(_1623_tokens[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto &expr = _1623_tokens;
		auto it = expr.begin();
		_iter_begin_1c94119eb:;
		if (it != expr.end()) {
			jule::Ptr<_20b4e5581_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c9412c83:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1c9412876:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1c9412667:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1c94119eb;
				} else if (((_2112_t.get()._field_Id == static_cast<jule::U64>(7LLU)) && _20b4ea168_IsAssignOp(_2112_t.get()._field_Kind))) {
					return true;;
				};
			}
			_iter_next_1c94119eb:;
			++it;
			goto _iter_begin_1c94119eb;
		}
		_iter_end_1c94119eb:;
	};
	return false;;
}



inline _20b1bc016_Log _1e12379d6_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_20b4ea91b_File>& _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _20b1bc016_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=_5233_f.get()._field_Path, ._field_Text=_20b1bc456_Logf(_5243_fmt,_5256_args), };;
}



inline jule::Slice<jule::Ptr<_20b4e5581_Token>> _1e1237eae_range(jule::I64& _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_20b4e5581_Token>>& _7163_tokens) {
	if ((_7115_i >= _7163_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_20b4e5581_Token> _759_tok = _7163_tokens[_7115_i];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;;
	};
	(_7115_i)++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = _7115_i;;
	for (; ((_8013_rangeN != 0LL) && (_7115_i < _7163_tokens.len())); (_7115_i)++) {
		{
			jule::Ptr<_20b4e5581_Token> _8313_token = _7163_tokens[_7115_i];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1c9418607:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1c941867e:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_1c94183c6:;
				};
			};
		}
	_iter_next_1c9417606:;
	}
	_iter_end_1c9417606:;;
	return _7163_tokens.slice(_819_start,(_7115_i - 1LL));;
}



inline _sx_20b4e5581_Token_sx_20b4e5581_Token _1e1238256_rangeLast(jule::Slice<jule::Ptr<_20b4e5581_Token>>& _10319_tokens) {
	_sx_20b4e5581_Token_sx_20b4e5581_Token __jule_func_result;
	if ((_10319_tokens.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _10319_tokens;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	} else if ((_10319_tokens[(_10319_tokens.len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		__jule_func_result.__jule_result_arg0 = _10319_tokens;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = (_10319_tokens.len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_20b4e5581_Token> _11213_token = _10319_tokens[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1c941c92a:;
						{
							(_10913_braceN)++;
							goto _iter_next_1c9419680;
						}
					}
					else {
						_case_begin_1c941c51d:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_1c941c30e:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = _10319_tokens.slice(0LL,_11013_i);
				__jule_func_result.__jule_result_arg1 = _10319_tokens.slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1c9419680:;
	}
	_iter_end_1c9419680:;;
	__jule_func_result.__jule_result_arg0 = _10319_tokens;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline _ssx_20b4e5581_Token_s_20b1bc016_Log _1e1238641_partsKind(jule::Slice<jule::Ptr<_20b4e5581_Token>>& _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	_ssx_20b4e5581_Token_s_20b1bc016_Log __jule_func_result;
	if ((_13219_tokens.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _13713_parts = nullptr;;
	jule::Slice<_20b1bc016_Log> _13813_errors = nullptr;;
	jule::I64 _14013_rangeN = 0LL;;
	jule::I64 _14113_last = 0LL;;
	{
		auto &expr = _13219_tokens;
		auto it = expr.begin();
		_iter_begin_1c9420642:;
		if (it != expr.end()) {
			jule::I64 _1429_i = it - expr.begin();
			jule::Ptr<_20b4e5581_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c9421cc5:;
							{
								(_14013_rangeN)++;
								goto _iter_next_1c9420642;
							}
						}
						else {
							_case_begin_1c94218b8:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_1c94216a9:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_1c9420642;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_20b1bc016_Log _16121_err = _1e12379d6_makeErr(_14212_token.get()._field_Row,_14212_token.get()._field_Column,_14212_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_13813_errors = jule::alloc_for_append(_13813_errors,1);_13813_errors.__push(_16121_err);;
					};
					_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last,_1429_i));;
					_14113_last=static_cast<jule::I64>((_1429_i + 1LL));
				};
			}
			_iter_next_1c9420642:;
			++it;
			_1429_i++;
			goto _iter_begin_1c9420642;
		}
		_iter_end_1c9420642:;
	};
	if ((_14113_last < _13219_tokens.len())) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last));;
	} else if ((!(_13254_expr_must))) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(jule::Slice<jule::Ptr<_20b4e5581_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _13713_parts;
	__jule_func_result.__jule_result_arg1 = _13813_errors;
	return __jule_func_result;;
}



inline _ssx_20b4e5581_Token_s_20b1bc016_Log _1e1238a2b_parts(jule::Slice<jule::Ptr<_20b4e5581_Token>>& _18415_tokens, jule::U64 _18433_id, jule::Bool _18446_expr_must) {
	_ssx_20b4e5581_Token_s_20b1bc016_Log __jule_func_result;
	if ((_18415_tokens.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20b4e5581_Token>>> _18913_parts = nullptr;;
	jule::Slice<_20b1bc016_Log> _19013_errors = nullptr;;
	jule::I64 _19213_rangeN = 0LL;;
	jule::I64 _19313_last = 0LL;;
	{
		auto &expr = _18415_tokens;
		auto it = expr.begin();
		_iter_begin_1c9426d30:;
		if (it != expr.end()) {
			jule::I64 _1949_i = it - expr.begin();
			jule::Ptr<_20b4e5581_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c94284b3:;
							{
								(_19213_rangeN)++;
								goto _iter_next_1c9426d30;
							}
						}
						else {
							_case_begin_1c94280a6:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_1c9427d97:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_1c9426d30;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_20b1bc016_Log _21321_err = _1e12379d6_makeErr(_19412_token.get()._field_Row,_19412_token.get()._field_Column,_19412_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19013_errors = jule::alloc_for_append(_19013_errors,1);_19013_errors.__push(_21321_err);;
					};
					_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last,_1949_i));;
					_19313_last=static_cast<jule::I64>((_1949_i + 1LL));
				};
			}
			_iter_next_1c9426d30:;
			++it;
			_1949_i++;
			goto _iter_begin_1c9426d30;
		}
		_iter_end_1c9426d30:;
	};
	if ((_19313_last < _18415_tokens.len())) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last));;
	} else if ((!(_18446_expr_must))) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(jule::Slice<jule::Ptr<_20b4e5581_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _18913_parts;
	__jule_func_result.__jule_result_arg1 = _19013_errors;
	return __jule_func_result;;
}



inline jule::Str _1e1238cc3_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1c942b9b1:;
			{
				return jule::Str("(", 1);;
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1c942ba27:;
			{
				return jule::Str("{", 1);;
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1c942b7a2:;
			{
				return jule::Str("[", 1);;
			}
		}
		else {
			_case_begin_1c942aa59:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c942aa04:;
	};
}



inline _20b1bc016_Log _1e12391ad_compilerErr(jule::Ptr<_20b4e5581_Token>& _24317_token, jule::Str& _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _20b1bc016_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_24317_token.get()._field_Row, ._field_Column=_24317_token.get()._field_Column, ._field_Path=_24317_token.get()._field_File.get()._field_Path, ._field_Text=_20b1bc456_Logf(_24333_fmt,_24346_args), ._field_Line=_20b4ebae8_GetRow(_24317_token.get()._field_File.ptr(), _24317_token.get()._field_Row), };;
}



inline void _1e12395dc_pushSuggestion(_20b1bc016_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_20b1bc456_Logf(_25441_fmt,_25454_args);
}



inline jule::Str _1e1239884_tokstoa(jule::Slice<jule::Ptr<_20b4e5581_Token>>& _25813_tokens) {
	jule::I64 _25913_n = 0LL;;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_1c942e673:;
		if (it != expr.end()) {
			jule::Ptr<_20b4e5581_Token> &_26012_token = *it;
			{
				_25913_n+=_26012_token.get()._field_Kind.len();
			}
			_iter_next_1c942e673:;
			++it;
			goto _iter_begin_1c942e673;
		}
		_iter_end_1c942e673:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_1c942ed27:;
		if (it != expr.end()) {
			jule::Ptr<_20b4e5581_Token> &_26412_token = *it;
			{
				_26313_s+=_26412_token.get()._field_Kind;
			}
			_iter_next_1c942ed27:;
			++it;
			goto _iter_begin_1c942ed27;
		}
		_iter_end_1c942ed27:;
	};
	return _26313_s;;
}



inline jule::Bool _1e12498e9_isPub(jule::Str& _203511_ident) {
	jule::I32 _203610_r = 0;;
	({
		_i32_int __jule_assign_result = _20b115943_DecodeRuneStr(_203511_ident);
		_203610_r = __jule_assign_result.__jule_result_arg0;
	});
	return _20b055861_IsUpper(_203610_r);;
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e124a2bd_buildVoidType(void) {
	return jule::new_ptr<_20cb892ea_TypeDecl>();;
}



inline jule::Ptr<_20cb892ea_TypeDecl> _1e124a4cc_buildPrimType(jule::Ptr<_20b4e5581_Token> _2322_t) {
	return jule::new_ptr<_20cb892ea_TypeDecl>(_20cb892ea_TypeDecl{._field_Token=_2322_t, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_20cb898b1_IdentTypeDecl>(_20cb898b1_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }))});;
}



inline _bool_bool _20db1d14b_checkOs(jule::Str _912_arg) {
	_bool_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1c95cea21:;
			{
				__jule_func_result.__jule_result_arg0=_20b1c0327_IsWindows(_20b205901_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1c95ce427:;
			{
				__jule_func_result.__jule_result_arg0=_20b1c05d0_IsDarwin(_20b205901_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1c95ce48d:;
			{
				__jule_func_result.__jule_result_arg0=_20b1c0877_IsLinux(_20b205901_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1c95ce504:;
			{
				__jule_func_result.__jule_result_arg0=_20b1c147c_IsUnix(_20b205901_Os);
			}
		}
		else {
			_case_begin_1c95cdbc9:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1c95ce0e7:;
	};
	return __jule_func_result;;
}



inline _bool_bool _20db2e5e1_checkArch(jule::Str _2814_arg) {
	_bool_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1c95d18be:;
			{
				__jule_func_result.__jule_result_arg0=_20b1c0b96_IsI386(_20b1cd07c_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1c95d1935:;
			{
				__jule_func_result.__jule_result_arg0=_20b1c0e3d_IsAmd64(_20b1cd07c_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1c95d199b:;
			{
				__jule_func_result.__jule_result_arg0=_20b1c11d5_IsArm64(_20b1cd07c_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1c95d1a12:;
			{
				__jule_func_result.__jule_result_arg0=_20b1c1a98_Is64Bit(_20b1cd07c_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1c95d1a78:;
			{
				__jule_func_result.__jule_result_arg0=_20b1c1801_Is32Bit(_20b1cd07c_Arch);
			}
		}
		else {
			_case_begin_1c95d1171:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1c95d158e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20db18377_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_2231ee64c_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL,(_529_n - _22321a349_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _20b138b64_FindLastByte(_5029_p,'_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			_bool_bool __jule_assign_result = _20db1d14b_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			_bool_bool __jule_assign_result = _20db2e5e1_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL,_6413_i);;
	_6413_i=static_cast<jule::I64>(_20b138b64_FindLastByte(_5029_p,'_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			_bool_bool __jule_assign_result = _20db1d14b_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			_bool_bool __jule_assign_result = _20db2e5e1_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		_bool_bool __jule_assign_result = _20db2e5e1_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			_bool_bool __jule_assign_result = _20db1d14b_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		_bool_bool __jule_assign_result = _20db1d14b_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _20db32e85_setOsVars(jule::Slice<jule::Str>& _3619_vars) {
	_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(_20b205901_Os);;
	if (_20b1c147c_IsUnix(_20b205901_Os)) {
		_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _20db331d8_setArchVars(jule::Slice<jule::Str>& _4421_vars) {
	_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(_20b1cd07c_Arch);;
	if (_20b1c1a98_Is64Bit(_20b1cd07c_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x64", 3));;
	};
	if (_20b1c1801_Is32Bit(_20b1cd07c_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _20db33491_initVars(jule::Slice<jule::Str>& _5518_vars, _20db32b77_CompileInfo& _5532_info) {
	_20db32e85_setOsVars(_5518_vars);
	_20db331d8_setArchVars(_5518_vars);
	if (_5532_info._field_Prod) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("production", 10));;
	};
	if (_5532_info._field_Test) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5532_info._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1c95dcb94:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1c95dcc0a:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1c95dc688:;
	};
	{
		auto &_match_expr{ _5532_info._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1c95dd557:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1c95dd5bd:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1c95dd634:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1c95ddcb6:;
	};
}



inline jule::Slice<jule::U8> _1e10178a4_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__216328be5_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_20b21b043_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _20b1bc016_Log _1e101eb20_flatCompilerErr(jule::Str _4120_text) {
	return _20b1bc016_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1e0ee4683_pushPasses(jule::Ptr<_20d846ea7_Package>& _11120_p, jule::Slice<jule::Str>& _11144_passes) {
	{
		auto &expr = _11120_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c961eac7:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11217_f.get()._field_Passes;
					auto it = expr.begin();
					_iter_begin_1c9620556:;
					if (it != expr.end()) {
						_20d815edc_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1c9620556;
							};
							{
								auto &expr = _11144_passes;
								auto it = expr.begin();
								_iter_begin_1c9621513:;
								if (it != expr.end()) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1c9620556;
										};
									}
									_iter_next_1c9621513:;
									++it;
									goto _iter_begin_1c9621513;
								}
								_iter_end_1c9621513:;
							};
							_11144_passes = jule::alloc_for_append(_11144_passes,1);_11144_passes.__push(_11416_pass._field_Text);;
						}
						_iter_next_1c9620556:;
						++it;
						goto _iter_begin_1c9620556;
					}
					_iter_end_1c9620556:;
				};
			}
			_iter_next_1c961eac7:;
			++it;
			goto _iter_begin_1c961eac7;
		}
		_iter_end_1c961eac7:;
	};
}



inline jule::Slice<jule::Str> _1e1040547_getAllUniquePasses(jule::Ptr<_20d846ea7_Package>& _12828_pkg, jule::Slice<jule::Ptr<_20d84404d_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1e0ee4683_pushPasses(_12828_pkg,_12913_passes);
	{
		auto &expr = _12853_uses;
		auto it = expr.begin();
		_iter_begin_1c9622a86:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_1e0ee4683_pushPasses(_13217_u.get()._field_Package,_12913_passes);
				};
			}
			_iter_next_1c9622a86:;
			++it;
			goto _iter_begin_1c9622a86;
		}
		_iter_end_1c9622a86:;
	};
	return _12913_passes;;
}



inline _20db32b77_CompileInfo _1e106228e_buildCompileInfo(void) {
	_20db32b77_CompileInfo _14213_info = _20db32b77_CompileInfo{._field_Prod=_22eb61536_Production, ._field_Test=_22eb60ac9_Test, };;
	{
		auto &_match_expr{ _22eaa23bc_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1c9623dea:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1c9623e61:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1c9623d73:;
	};
	{
		auto &_match_expr{ _22eb6038c_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1c9623669:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1c96242e6:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1c962435c:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1c9624758:;
	};
	return _14213_info;;
}



inline void _1e136a047_EliminateDefines(jule::Ptr<_1e1012d55_IR>& _28526_ir) {
	jule::Ptr<_1e1335b06_ObjectDeadCode> _28613_ocd = static__1e13360ce_new(_28526_ir);;
	_1e1369c7d_elimanate(_28613_ocd);
}



inline jule::Ptr<_20cb511e6_Directive> _1e136a3cc_findDirective(jule::Slice<jule::Ptr<_20cb511e6_Directive>>& _29123_directives, jule::Str _29154_tag) {
	{
		auto &expr = _29123_directives;
		auto it = expr.begin();
		_iter_begin_1c96653d1:;
		if (it != expr.end()) {
			jule::Ptr<_20cb511e6_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;;
				};
			}
			_iter_next_1c96653d1:;
			++it;
			goto _iter_begin_1c96653d1;
		}
		_iter_end_1c96653d1:;
	};
	return nullptr;;
}



inline jule::Bool _1e136a71d_hasDirective(jule::Slice<jule::Ptr<_20cb511e6_Directive>>& _30118_directives, jule::Str _30149_tag) {
	return (_1e136a3cc_findDirective(_30118_directives,_30149_tag) != nullptr);;
}



inline void _1e136e36a_eliminateDeadCodeOfScope(jule::Ptr<_20d825848_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_20d828087_Label>> _2429_labels = jule::Slice<jule::Ptr<_20d828087_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_20d828373_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_20d828373_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1e136b466_scopeDeadCode> _24413_sdc = jule::new_ptr<_1e136b466_scopeDeadCode>(_1e136b466_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_20d828087_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_20d828373_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1e136e07e_optimizeStmts(_24413_sdc);
	};
}



inline void _1e136e601_eliminateScopeFunctions(jule::Slice<jule::Ptr<_20d814370_Fn>>& _25433_funcs) {
	{
		auto &expr = _25433_funcs;
		auto it = expr.begin();
		_iter_begin_1c96aa080:;
		if (it != expr.end()) {
			jule::Ptr<_20d814370_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_Instances;
					auto it = expr.begin();
					_iter_begin_1c96ac170:;
					if (it != expr.end()) {
						jule::Ptr<_20d814749_FnIns> _25621_ins = *it;
						{
							_1e136e36a_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1c96ac170:;
						++it;
						goto _iter_begin_1c96ac170;
					}
					_iter_end_1c96ac170:;
				};
			}
			_iter_next_1c96aa080:;
			++it;
			goto _iter_begin_1c96aa080;
		}
		_iter_end_1c96aa080:;
	};
}



inline void _1e136e843_eliminateFunctionsScopePackage(jule::Ptr<_20d846ea7_Package>& _26240_pkg) {
	{
		auto &expr = _26240_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c96ac5d2:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _26317_f = *it;
			{
				_1e136e601_eliminateScopeFunctions(_26317_f.get()._field_Funcs);
			}
			_iter_next_1c96ac5d2:;
			++it;
			goto _iter_begin_1c96ac5d2;
		}
		_iter_end_1c96ac5d2:;
	};
}



inline void _1e136eada_eliminateScopePackage(jule::Ptr<_20d846ea7_Package>& _26831_pkg) {
	_1e136e843_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1e136ece9_EliminateScopes(jule::Ptr<_1e1012d55_IR>& _27325_ir) {
	jule::I64 _27413_i = (_27325_ir.get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_20d84404d_ImportInfo> _27617_u = _27325_ir.get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_1e136eada_eliminateScopePackage(_27617_u.get()._field_Package);
			};
		}
	_iter_next_1c96adc87:;
	}
	_iter_end_1c96adc87:;;
	_1e136eada_eliminateScopePackage(_27325_ir.get()._field_Main);
}



inline jule::Bool _20da5226c_isStdPackage(jule::Str _39817_f, jule::Str _39825_p) {
	return _20b135bc7_HasPrefix(_39817_f,_223218d81_Join(jule::Slice<jule::Str>::make({_20b20556b_PathStdlib,_39825_p})));;
}



inline jule::Bool _20da5257a_isConstantValidConditionalCase(jule::Ptr<_20d825c44_If>& _40236_i) {
	{
		auto &_match_expr{ _40236_i.get()._field_Expr };
		
		if (_match_expr.type_is_ptr<_20cc572ec_Const>()) {
			_case_begin_1c9733339:;
			{
				jule::Ptr<_20cc572ec_Const> _40513_c = _40236_i.get()._field_Expr.operator jule::Ptr<_20cc572ec_Const>();;
				return (_20d80bb09_IsBool(_40513_c.ptr()) && _20d80a91b_ReadBool(_40513_c.ptr()));;
			}
		}
		_match_end_1c97331b3:;
	};
	return false;;
}



inline jule::Bool _20da52833_isUnreachableExpr(jule::Any& _41123_expr) {
	{
		auto &_match_expr{ _41123_expr };
		
		if (_match_expr.type_is_ptr<_20cc572ec_Const>()) {
			_case_begin_1c9733c74:;
			{
				jule::Ptr<_20cc572ec_Const> _41413_c = _41123_expr.operator jule::Ptr<_20cc572ec_Const>();;
				return (_20d80bb09_IsBool(_41413_c.ptr()) && (!(_20d80a91b_ReadBool(_41413_c.ptr()))));;
			}
		}
		else if (_match_expr.type_is_ptr<_20cc2c05d_BinopExprModel>()) {
			_case_begin_1c9733cda:;
			{
				jule::Ptr<_20cc2c05d_BinopExprModel> _41713_m = _41123_expr.operator jule::Ptr<_20cc2c05d_BinopExprModel>();;
				if ((_41713_m.get()._field_Op.get()._field_Kind == jule::Str("&&", 2))) {
					return (_20da52833_isUnreachableExpr(_41713_m.get()._field_Left.get()._field_Model) || _20da52833_isUnreachableExpr(_41713_m.get()._field_Right.get()._field_Model));;
				};
			}
		}
		_match_end_1c97333e4:;
	};
	return false;;
}



inline jule::Bool _20da52b74_isConstantValidMatchCase(jule::Ptr<_20d82a0de_Case>& _42630_case) {
	{
		auto &expr = _42630_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c97365b2:;
		if (it != expr.end()) {
			jule::Ptr<_20d8b2891_Data> &_42712_expr = *it;
			{
				if (((_20d8b3254_IsConst(_42712_expr.ptr()) && _20d80bb09_IsBool(_42712_expr.get()._field_Constant.ptr())) && _20d80a91b_ReadBool(_42712_expr.get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1c97365b2:;
			++it;
			goto _iter_begin_1c97365b2;
		}
		_iter_end_1c97365b2:;
	};
	return false;;
}



inline jule::Bool _20da52e1b_isUnreachableConditionalCase(jule::Ptr<_20d825c44_If>& _43534_i) {
	return _20da52833_isUnreachableExpr(_43534_i.get()._field_Expr);;
}



inline jule::Bool _20da531c4_isUnreachableMatchCase(jule::Ptr<_20d82a0de_Case>& _43928_case) {
	{
		auto &expr = _43928_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c9738b47:;
		if (it != expr.end()) {
			jule::Ptr<_20d8b2891_Data> &_44012_expr = *it;
			{
				if ((!(_20da52833_isUnreachableExpr(_44012_expr.get()._field_Model)))) {
					return false;;
				};
			}
			_iter_next_1c9738b47:;
			++it;
			goto _iter_begin_1c9738b47;
		}
		_iter_end_1c9738b47:;
	};
	return true;;
}



inline _bool_u64 _20da5aac2_checkForBitShiftOpt(jule::Ptr<_20cbed66c_OperandExprModel>& _45125_l, jule::Ptr<_20cbed66c_OperandExprModel>& _45148_r) {
	_bool_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_20d809cd3_IsInt(_20d8e3a7b_Str(_45125_l.get()._field_Kind.ptr())))) || (!(_20d809cd3_IsInt(_20d8e3a7b_Str(_45148_r.get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _45148_r.get()._field_Model };
		
		if (_match_expr.type_is_ptr<_20cc572ec_Const>()) {
			_case_begin_1c9771003:;
			{
				goto _match_end_1c97719e8;
			}
		}
		else {
			_case_begin_1c9771b4c:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1c97719e8:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_20d80ade4_AsU64(_45148_r.get()._field_Model.operator jule::Ptr<_20cc572ec_Const>().ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4659_j = _20d7ca974_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4669_z = static_cast<jule::U64>(_4659_j);;
	if ((static_cast<jule::F64>(_4669_z) != _4659_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4669_z;
	return __jule_func_result;;
}



inline void _20da5cb07_PushOptLevel(jule::I64 _3217_level) {
	_20da5b320_Copy=(_3217_level >= static_cast<jule::I64>(1LL));
	_20da5b62d_Deadcode=(_3217_level >= static_cast<jule::I64>(1LL));
	_20da5b8e7_Append=(_3217_level >= static_cast<jule::I64>(1LL));
	_20da5bc05_Math=(_3217_level >= static_cast<jule::I64>(1LL));
	_20da5bebe_Access=(_3217_level >= static_cast<jule::I64>(1LL));
	_20da5c288_Inline=(_3217_level >= static_cast<jule::I64>(1LL));
	_20da5c552_Ptr=(_3217_level >= static_cast<jule::I64>(1LL));
	_20da5c92b_Cond=(_3217_level >= static_cast<jule::I64>(1LL));
}



inline void _1e1302177_detectEnabled(void) {
	_1e1273ca8_exprEnabled=(((_20da5c552_Ptr || _20da5bc05_Math) || _20da5bebe_Access) || _20da5c92b_Cond);
	_1e1274924_scopeEnabled=((_20da5c92b_Cond || _20da5b8e7_Append) || _20da5b320_Copy);
}



inline void _1e137c6db_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_20b21b043_Exit(1LL);
}



inline jule::U64 _1e1aa7a3c_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::U64 _1e1aa7d4a_unixYearToSeconds(jule::U64 _20122_y, jule::Bool& _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		_20140_leap=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if (_20140_leap) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));;
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		_20140_leap=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			_20140_leap=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			_20140_leap=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if (_20140_leap) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));;
}



inline jule::U64 _1e1aa81d0_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1c9809dd3:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c9809e49:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1c9809eb0:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c980a026:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c980a09d:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1c980a125:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1c980a19c:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1c980a224:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1c980a29b:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1c980a323:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1c980a39a:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_1c9809c7e:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;;
}



inline jule::Bool _1e1a06e20_isCopyOptimizable(jule::Ptr<_20d8b2891_Data>& _75423_expr) {
	if ((!(_75423_expr.get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ _75423_expr.get()._field_Model };
		
		if (_match_expr.type_is_ptr<_20d810129_SlicingExprModel>()) {
			_case_begin_1c98a251e:;
			{
				return false;;
			}
		}
		_match_end_1c98a24b9:;
	};
	return true;;
}



inline jule::Bool _1e1a072a5_isIterCopyOptimizable(jule::Ptr<_20d8b2891_Data>& _76527_expr, jule::Ptr<_20d869eb9_Var>& _76541_v) {
	if (((!(_76527_expr.get()._field_Lvalue)) && (!(_20d8e4d02_Mutable(_76527_expr.get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!(_76541_v.get()._field_Mutable)) && (!(_76527_expr.get()._field_Mutable)));;
}



inline jule::Str _1e1a15e51_decomposeCommonEsq(jule::U8 _125023_b) {
	{
		auto &_match_expr{ _125023_b };
		
		if (_match_expr == '\\') {
			_case_begin_1c995d2de:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c995d883:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c995d8e9:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1c995d960:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1c995d575:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1c995d5db:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1c995d652:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1c995d6b8:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1c995dba2:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1c995dc18:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_1c995d443:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c995d377:;
	};
}



inline jule::Str _1e1a1623c_sbtoa(jule::U8 _127710_b) {
	if ((_127710_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_127710_b < 128LLU)) {
		jule::Str _128213_seq = _1e1a15e51_decomposeCommonEsq(_127710_b);;
		if ((!(_128213_seq.empty()))) {
			return _128213_seq;;
		};
		if (((32LL <= _127710_b) && (_127710_b <= 126LLU))) {
			return static_cast<jule::Str>(_127710_b);;
		};
	};
	jule::Str _12909_seq = _20d806e9a_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_127710_b)),8LL);;
	if ((_12909_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _12909_seq);;
	};
	return (jule::Str("\\", 1) + _12909_seq);;
}



inline jule::Str _1e1a164d4_cstrBytes(jule::Slice<jule::U8> _129714_bytes) {
	jule::Str _129813_lit = jule::Str::alloc(0LL, _129714_bytes.len());;
	{
		auto &expr = _129714_bytes;
		auto it = expr.begin();
		_iter_begin_1c9964779:;
		if (it != expr.end()) {
			jule::U8 &_129912_b = *it;
			{
				_129813_lit+=_1e1a1623c_sbtoa(_129912_b);
			}
			_iter_next_1c9964779:;
			++it;
			goto _iter_begin_1c9964779;
		}
		_iter_end_1c9964779:;
	};
	return _129813_lit;;
}



inline jule::Str _1e1a16803_cstrLit(jule::Slice<jule::U8> _130512_bytes) {
	return ((jule::Str("\"", 1) + _1e1a164d4_cstrBytes(_130512_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _1e1a16b11_ftoa(jule::F64 _13099_f, jule::I64 _130917_bitsize) {
	if ((_130917_bitsize != 32LL)) {
		if ((_13099_f == static_cast<jule::F64>(static_cast<jule::I64>(_13099_f)))) {
			return _1e1a16da8_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_13099_f)));;
		};
		if ((_13099_f == static_cast<jule::F64>(static_cast<jule::U64>(_13099_f)))) {
			return _1e1a17150_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_13099_f)));;
		};
	};
	jule::Str _131813_m = _20d25c03d_FmtFloat(_13099_f,'f',-1LL,_130917_bitsize);;
	if ((!(_20b13a4e5_Contains(_131813_m,jule::Str(".", 1))))) {
		_131813_m+=jule::Str(".0", 2);
	};
	return _131813_m;;
}



inline jule::Str _1e1a16da8_itoa(jule::I64 _13259_x) {
	{
		
		if ((_13259_x == jule::MAX_I64)) {
			_case_begin_1c9967d54:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_13259_x == jule::MIN_I64)) {
			_case_begin_1c9967dba:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_1c9967c11:;
	};
	jule::Str _13339_fmt = _20d8070cc_FmtInt(_13259_x,10LL);;
	if (_20b1c1a98_Is64Bit(jule::Str("amd64", 5))) {
		return (_13339_fmt + jule::Str("LL", 2));;
	};
	return (_13339_fmt + jule::Str("L", 1));;
}



inline jule::Str _1e1a17150_utoa(jule::U64 _13409_x) {
	{
		
		if ((_13409_x == jule::MAX_U64)) {
			_case_begin_1c9969a26:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_1c9969927:;
	};
	jule::Str _13469_fmt = _20d806e9a_FmtUint(_13409_x,10LL);;
	if (_20b1c1a98_Is64Bit(jule::Str("amd64", 5))) {
		return (_13469_fmt + jule::Str("LLU", 3));;
	};
	return (_13469_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _1e1a17507_isForwarded(jule::Ptr<_20d825848_Scope>& _135317_s) {
	jule::Any _13549_last = _135317_s.get()._field_Stmts[(_135317_s.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _13549_last };
		
		if (_match_expr.type_is_ptr<_20d8b2891_Data>()) {
			_case_begin_1c996b2ec:;
			{
				{
					auto &_match_expr{ _13549_last.operator jule::Ptr<_20d8b2891_Data>().get()._field_Model };
					
					if (_match_expr.type_is_ptr<_20d812e51_BuiltinErrorCallExprModel>()) {
						_case_begin_1c996c397:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1c996c760:;
						{
							return false;;
						}
					}
					_match_end_1c996c4a7:;
				};
			}
		}
		else {
			_case_begin_1c996bad3:;
			{
				return true;;
			}
		}
		_match_end_1c996ba06:;
	};
}



inline jule::Bool _1e1a177c1_isBuiltinCallHasDebuginf(jule::Ptr<_20d80e49c_FnCallExprModel>& _136830_m) {
	if ((!(_20d814e0e_IsBuiltin(_136830_m.get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ _136830_m.get()._field_Expr };
		
		if (_match_expr.type_is_ptr<_20d810ed7_CommonSubIdentExprModel>()) {
			_case_begin_1c996ca07:;
			{
				jule::Ptr<_20d810ed7_CommonSubIdentExprModel> _137413_csie = _136830_m.get()._field_Expr.operator jule::Ptr<_20d810ed7_CommonSubIdentExprModel>();;
				return (_137413_csie.get()._field_Ident == jule::Str("swap", 4));;
			}
		}
		else {
			_case_begin_1c996bd69:;
			{
				return false;;
			}
		}
		_match_end_1c996bd14:;
	};
}



inline jule::Bool _1e1a17a02_isExprComesFromBind(jule::Ptr<_20d8b2891_Data>& _138125_d) {
	{
		auto &_match_expr{ _138125_d.get()._field_Model };
		
		if (_match_expr.type_is_ptr<_20d869eb9_Var>()) {
			_case_begin_1c996ed06:;
			{
				return _138125_d.get()._field_Model.operator jule::Ptr<_20d869eb9_Var>().get()._field_CppLinked;;
			}
		}
		else if (_match_expr.type_is_ptr<_20d810734_StructSubIdentExprModel>()) {
			_case_begin_1c996ed6c:;
			{
				return _138125_d.get()._field_Model.operator jule::Ptr<_20d810734_StructSubIdentExprModel>().get()._field_Owner.get()._field_Decl.get()._field_CppLinked;;
			}
		}
		else {
			_case_begin_1c996e443:;
			{
				return false;;
			}
		}
		_match_end_1c996e3dd:;
	};
}



inline void _1ba6a96dc_iterFiles(jule::Ptr<_20d846ea7_Package>& _105719_pkg, jule::Fn<void(jule::Ptr<_20d8aca67_SymbolTable>&)> _105734_f) {
	{
		auto &expr = _105719_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c9ac329a:;
		if (it != expr.end()) {
			jule::Ptr<_20d8aca67_SymbolTable> _105817_file = *it;
			{
				_105734_f(_105817_file);
			}
			_iter_next_1c9ac329a:;
			++it;
			goto _iter_begin_1c9ac329a;
		}
		_iter_end_1c9ac329a:;
	};
}



inline void _1ba6a981e_prepareStructure(jule::Ptr<_20cba59dc_Struct>& _106326_s) {
	{
		auto &expr = _106326_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c9ac3a70:;
		if (it != expr.end()) {
			jule::Ptr<_20cba5db6_StructIns> _106417_ins = *it;
			{
				{
					auto &expr = _106417_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1c9ac4664:;
					if (it != expr.end()) {
						jule::Ptr<_20d814370_Fn> _106521_m = *it;
						{
							if (_106521_m.get()._field_Statically) {
								goto _iter_next_1c9ac4664;
							};
							{
								auto &expr = _106521_m.get()._field_Instances;
								auto it = expr.begin();
								_iter_begin_1c9ac53bd:;
								if (it != expr.end()) {
									jule::Ptr<_20d814749_FnIns> _106925_mins = *it;
									{
										jule::Ptr<_20d81455c_ParamIns> _107025_p = _106925_mins.get()._field_Params[0LL];;
										if ((!(_20cbedd43_IsRef(_107025_p.get()._field_Decl.ptr())))) {
											_107025_p.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(jule::new_ptr<_1ba6aa446_customType>(_1ba6aa446_customType{._field_kind=static__1ba6abcd8_asPtr(static__1ba6b02e7_kind(_107025_p.get()._field_Kind))}), 13)});
										} else {
											_107025_p.get()._field_Kind=jule::new_ptr<_20d8e3680_TypeKind>(_20d8e3680_TypeKind{._field_Kind=jule::Trait<_20d8e3251_Kind>(jule::new_ptr<_1ba6aa446_customType>(_1ba6aa446_customType{._field_kind=static__1ba6b02e7_kind(_107025_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_1c9ac53bd:;
									++it;
									goto _iter_begin_1c9ac53bd;
								}
								_iter_end_1c9ac53bd:;
							};
						}
						_iter_next_1c9ac4664:;
						++it;
						goto _iter_begin_1c9ac4664;
					}
					_iter_end_1c9ac4664:;
				};
			}
			_iter_next_1c9ac3a70:;
			++it;
			goto _iter_begin_1c9ac3a70;
		}
		_iter_end_1c9ac3a70:;
	};
}



inline jule::Str _1ba6a9951_concatAllParts(jule::Slice<jule::Ptr<_20b4e5581_Token>> _109019_parts) {
	jule::I64 _109113_n = 0LL;;
	{
		auto &expr = _109019_parts;
		auto it = expr.begin();
		_iter_begin_1c9ac4510:;
		if (it != expr.end()) {
			jule::Ptr<_20b4e5581_Token> &_109212_part = *it;
			{
				_109113_n+=_109212_part.get()._field_Kind.len();
			}
			_iter_next_1c9ac4510:;
			++it;
			goto _iter_begin_1c9ac4510;
		}
		_iter_end_1c9ac4510:;
	};
	if ((_109113_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _109813_s = jule::Str::alloc(0LL, _109113_n);;
	{
		auto &expr = _109019_parts;
		auto it = expr.begin();
		_iter_begin_1c9ac8bda:;
		if (it != expr.end()) {
			jule::Ptr<_20b4e5581_Token> &_109912_p = *it;
			{
				_109813_s+=_109912_p.get()._field_Kind;
			}
			_iter_next_1c9ac8bda:;
			++it;
			goto _iter_begin_1c9ac8bda;
		}
		_iter_end_1c9ac8bda:;
	};
	return _109813_s;;
}



inline jule::Ptr<_20cb511e6_Directive> _1ba6b5e57_findDirective(jule::Slice<jule::Ptr<_20cb511e6_Directive>>& _44423_directives, jule::Str _44454_tag) {
	{
		auto &expr = _44423_directives;
		auto it = expr.begin();
		_iter_begin_1c9b98925:;
		if (it != expr.end()) {
			jule::Ptr<_20cb511e6_Directive> _44517_dr = *it;
			{
				if ((_44517_dr.get()._field_Tag.get()._field_Kind == _44454_tag)) {
					return _44517_dr;;
				};
			}
			_iter_next_1c9b98925:;
			++it;
			goto _iter_begin_1c9b98925;
		}
		_iter_end_1c9b98925:;
	};
	return nullptr;;
}



inline jule::Bool _1ba6b62dc_hasDirective(jule::Slice<jule::Ptr<_20cb511e6_Directive>>& _45418_directives, jule::Str _45449_tag) {
	return (_1ba6b5e57_findDirective(_45418_directives,_45449_tag) != nullptr);;
}



inline jule::Bool _1ba6b6584_shouldInitialized(jule::Ptr<_20d8e3680_TypeKind>& _46127_t) {
	jule::Ptr<_20d8e83cc_Prim> _4629_prim = _20d8e5a17_Prim(_46127_t.ptr());;
	if ((_4629_prim != nullptr)) {
		return ((!(_20d8eb875_IsAny(_4629_prim.ptr()))) && (!(_20d8eb611_IsStr(_4629_prim.ptr()))));;
	};
	{
		
		if ((_20d8e5c7b_Sptr(_46127_t.ptr()) != nullptr)) {
			_case_begin_1c9b9b7c4:;
			{
				return false;;
			}
		}
		else if ((_20d8e7442_Map(_46127_t.ptr()) != nullptr)) {
			_case_begin_1c9b9b1ec:;
			{
				return false;;
			}
		}
		else if ((_20d8e6991_Slc(_46127_t.ptr()) != nullptr)) {
			_case_begin_1c9b9b274:;
			{
				return false;;
			}
		}
		else if ((_20d8e71cd_Trait(_46127_t.ptr()) != nullptr)) {
			_case_begin_1c9b9b2eb:;
			{
				return false;;
			}
		}
		else if ((_20d8e6c05_Fn(_46127_t.ptr()) != nullptr)) {
			_case_begin_1c9b9b4a5:;
			{
				return false;;
			}
		}
		else if ((_20d8e672c_Arr(_46127_t.ptr()) != nullptr)) {
			_case_begin_1c9b9b51b:;
			{
				jule::Ptr<_20d8ee768_Arr> _47817_arr = _20d8e672c_Arr(_46127_t.ptr());;
				return _1ba6b6584_shouldInitialized(_47817_arr.get()._field_Elem);;
			}
		}
		else if ((_20d8e6e69_Struct(_46127_t.ptr()) != nullptr)) {
			_case_begin_1c9b9b582:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c9b9aa48:;
			{
				return true;;
			}
		}
		_match_end_1c9b9a9e3:;
	};
}



inline void _20b191062_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _20b19e46b_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_20b191062_printErrorMessage((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _20b19dbeb_HelpMap[0LL][0LL].len();;
	{
		auto &expr = _20b19dbeb_HelpMap;
		auto it = expr.begin();
		_iter_begin_1c9c387a6:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1c9c387a6:;
			++it;
			goto _iter_begin_1c9c387a6;
		}
		_iter_end_1c9c387a6:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _20b19dbeb_HelpMap;
		auto it = expr.begin();
		_iter_begin_1c9c3a16a:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_20b11c7b3_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1c9c3a16a:;
			++it;
			_519_i++;
			goto _iter_begin_1c9c3a16a;
		}
		_iter_end_1c9c3a16a:;
	};
	jule::outln(_4913_s);
}



inline void _20b18d27e_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_20b191062_printErrorMessage((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _20b18d3b1_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _20b186178_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _20b1862aa_tool(jule::Slice<jule::Str>& _9410_args) {
	if ((_9410_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9410_args.len() > 3LL)) {
		_20b191062_printErrorMessage((jule::Str("invalid command: ", 17) + _9410_args[3LL]));
		return;;
	};
	jule::Str _1059_cmd = _9410_args[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1c9c4210b:;
			{
				_20b18d3b1_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1c9c41d20:;
			{
				_20b186178_toolDistarch();
			}
		}
		else {
			_case_begin_1c9c4069d:;
			{
				_20b191062_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1c9c41b33:;
	};
}



inline void _20b1a0d30_julenv(jule::Slice<jule::Str>& _11712_args) {
	if ((_11712_args.len() > 2LL)) {
		_20b191062_printErrorMessage((jule::Str("invalid command: ", 17) + _11712_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
	jule::outln((jule::Str("default compiler: ", 18) + _22eaa23bc_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _22eb6038c_CppStd));
}



inline void _20b1abc1a_mod(jule::Slice<jule::Str>& _1309_args) {
	if ((_1309_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1309_args.len() > 3LL)) {
		_20b191062_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1309_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1c9c464ea:;
			{
				({
					auto except = static__2163292ab_Write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_20b191062_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1c9c44dcd:;
			{
				_20b191062_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[2LL]));
			}
		}
		_match_end_1c9c46121:;
	};
}



inline jule::Bool _20b1abd4c_processCommand(jule::Slice<jule::Str>& _15320_args) {
	{
		auto &_match_expr{ _15320_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1c9c47b28:;
			{
				_20b19e46b_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1c9c48057:;
			{
				_20b18d27e_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1c9c480bd:;
			{
				_20b1862aa_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1c9c481ab:;
			{
				_20b1a0d30_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1c9c48222:;
			{
				_20b1abc1a_mod(_15320_args);
			}
		}
		else {
			_case_begin_1c9c476d8:;
			{
				return false;;
			}
		}
		_match_end_1c9c4761c:;
	};
	return true;;
}



inline void _20b1aeaa8_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _21649c1ed_Args();;
	if ((_18913_args.len() < 2LL)) {
		_20b1aeaa8_showInfo();
		return;;
	};
	if (_20b1abd4c_processCommand(_18913_args)) {
		return;;
	};
	_1ba719807_compileCommand(_18913_args);
}



inline void _1ba6d89c4_init(void) {
	_22eaa23bc_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_21624ed4c_File> _1ba6dc0b0_openOutput(jule::Str& _4316_path) {
	jule::Str _449_dir = _22321c8e0_Dir(_4316_path);;
	({
		auto except = static__21622e3c0_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__20b13e153_Create(_449_dir);
				if (!except.ok()) {
					_1e137c6db_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__21622ea52_Create(_4316_path);
		(except.ok()) ? (except.result) : ({
			_1e137c6db_Throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});;
}



inline void _1ba6e81ed_clearObjects(void) {
	({
		auto except = static__2162520e6_Remove(_1ba6d454c_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__20b13e285_Remove(_1ba6d478e_OutDir);
}



inline void _1ba6d6c03_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_20b2171a4_Cmd> _7313_cmd = static__20b2175d3_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=jule::Slice<jule::Str>::make({_7214_compiler});
	_7313_cmd.get()._field_Args=jule::append(_7313_cmd.get()._field_Args,_20b13a1a4_Split(_7229_compilerCmd,jule::Str(" ", 1),-1LL));
	jule::I64 _769_status = ({
		auto except = _20b217847_Spawn(_7313_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_1c9c5038e:;
					{
						static__1e137a101_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_1c9c4eb74:;
					{
						static__1e137a101_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_1c9c4edd8:;
					{
						static__1e137a101_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_1c9c4ee4e:;
					{
						static__1e137a101_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1c9c4eca6:;
					{
						static__1e137a101_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1c9c4ec0c:;
			};
			_1e137c6db_Throw(jule::Str());
			0LL;
		});
	});;
	if ((_769_status != 0LL)) {
		jule::Str _9313_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _22eaa23bc_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1e137a101_Print(jule::Str("\033[31m", 5),_9313_errorMessage);
		_1e137c6db_Throw(jule::Str());
	};
	_1ba6e81ed_clearObjects();
}



inline jule::Bool _1ba707c13_isCppSourceFile(jule::Str _10420_path) {
	jule::I64 _1059_offset = _20b138b64_FindLastByte(_10420_path,'.');;
	if ((_1059_offset == -1LL)) {
		return false;;
	};
	return _20b1b0405_IsValidCppExt(_10420_path.slice(_1059_offset));;
}



inline void _1ba70bd05_pushCompCmdClang(jule::Str& _11226_cmd) {
	_11226_cmd+=jule::Str("-Wno-everything ", 16);
	_11226_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _22eb6038c_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1c9c4d403:;
			{
				_11226_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1c9c54bbd:;
			{
				_11226_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1c9c54c34:;
			{
				_11226_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1c9c5499d:;
	};
	_11226_cmd+=jule::Str(" ", 1);
	if (_22eb61536_Production) {
		_11226_cmd+=jule::Str("-O3 ", 4);
		_11226_cmd+=jule::Str("-flto ", 6);
		_11226_cmd+=jule::Str("-DNDEBUG ", 9);
		_11226_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11226_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1ba6d4eba_pushCompCmdGcc(jule::Str& _13824_cmd) {
	_13824_cmd+=jule::Str("-w ", 3);
	_13824_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _22eb6038c_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1c9c55163:;
			{
				_13824_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1c9c57462:;
			{
				_13824_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1c9c574c8:;
			{
				_13824_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1c9c57242:;
	};
	_13824_cmd+=jule::Str(" ", 1);
	if (_22eb61536_Production) {
		_13824_cmd+=jule::Str("-O3 ", 4);
		_13824_cmd+=jule::Str("-DNDEBUG ", 9);
		_13824_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_13824_cmd+=jule::Str("-O0 ", 4);
	};
}



inline _str_str _1ba6d9e48_genCompileCmd(jule::Str _16418_sourcePath, jule::Ptr<_1e1012d55_IR>& _16436_ir) {
	_str_str __jule_func_result;
	jule::Str &_16510_compiler = _22eb6016c_CompilerPath;;
	jule::Str _16613_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _22eaa23bc_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1c9c59321:;
			{
				_1ba6d4eba_pushCompCmdGcc(_16613_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1c9c5a3bb:;
			{
				_1ba70bd05_pushCompCmdClang(_16613_cmd);
			}
		}
		_match_end_1c9c5a289:;
	};
	{
		auto &expr = _16436_ir.get()._field_Passes;
		auto it = expr.begin();
		_iter_begin_1c9c5ac6d:;
		if (it != expr.end()) {
			jule::Str &_17612_pass = *it;
			{
				_16613_cmd+=_17612_pass;
				_16613_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1c9c5ac6d:;
			++it;
			goto _iter_begin_1c9c5ac6d;
		}
		_iter_end_1c9c5ac6d:;
	};
	{
		auto &expr = _16436_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1c9c5b1d0:;
		if (it != expr.end()) {
			jule::Ptr<_20d84404d_ImportInfo> &_18212_u = *it;
			{
				if ((_18212_u.get()._field_CppLinked && _1ba707c13_isCppSourceFile(_18212_u.get()._field_Path))) {
					_16613_cmd+=_18212_u.get()._field_Path;
					_16613_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1c9c5b1d0:;
			++it;
			goto _iter_begin_1c9c5b1d0;
		}
		_iter_end_1c9c5b1d0:;
	};
	if ((!(_1ba6d4c01_Out.empty()))) {
		_16613_cmd+=jule::Str("-o ", 3);
		_16613_cmd+=_1ba6d4c01_Out;
		_16613_cmd+=jule::Str(" ", 1);
	};
	_16613_cmd+=_16418_sourcePath;
	__jule_func_result.__jule_result_arg0 = _16510_compiler;
	__jule_func_result.__jule_result_arg1 = _16613_cmd;
	return __jule_func_result;;
}



inline jule::Str _1ba6d454c_getCompilePath(void) {
	return _223218d81_Join(jule::Slice<jule::Str>::make({_1ba6d478e_OutDir,_1ba6d4a9c_OutName}));;
}



inline void _1ba6e401d_applyTargetIndependentOptimizations(jule::Ptr<_1e1012d55_IR>& _20545_ir) {
	jule::Ptr<_1e12723e4_Optimizer> _20713_opt = static__1e1291aea_New(_20545_ir);;
	_1e12d1e6a_Optimize(_20713_opt.ptr());
}



inline void _1ba6d3e75_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _22eaa23bc_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1c9c5bbd6:;
			{
				_1e137c6db_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1c9c5dec4:;
			{
				if (_22eb6016c_CompilerPath.empty()) {
					_22eb6016c_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1c9c5e03a:;
			{
				if (_22eb6016c_CompilerPath.empty()) {
					_22eb6016c_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1c9c5de5d:;
			{
				_1e137c6db_Throw((jule::Str("invalid option value for --compiler: ", 37) + _22eaa23bc_Compiler));
			}
		}
		_match_end_1c9c5dc82:;
	};
}



inline void _1ba6d7c59_checkTargetArch(jule::Str _22820_arch) {
	if ((((_22820_arch != jule::Str("amd64", 5)) && (_22820_arch != jule::Str("arm64", 5))) && (_22820_arch != jule::Str("i386", 4)))) {
		_1e137c6db_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22820_arch));
	};
}



inline void _1ba6d7d8b_checkTargetOs(jule::Str _23618_os) {
	if ((((_23618_os != jule::Str("windows", 7)) && (_23618_os != jule::Str("linux", 5))) && (_23618_os != jule::Str("darwin", 6)))) {
		_1e137c6db_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23618_os));
	};
}



inline void _1ba718d89_checkTargetFlag(jule::Str& _24421_target) {
	if (_24421_target.empty()) {
		_1e137c6db_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2499_parts = _20b13a1a4_Split(_24421_target,jule::Str("-", 1),-1LL);;
	if ((_2499_parts.len() != 2LL)) {
		_1e137c6db_Throw((jule::Str("--target: undefined platform target format: ", 44) + _24421_target));
	};
	jule::Str _25410_os;;
	jule::Str _25414_arch;;
	({
		jule::Str ___jule_assign_arg = _2499_parts[0LL];
		jule::Str _1___jule_assign_arg = _2499_parts[1LL];
		_25410_os = ___jule_assign_arg;
		_25414_arch = _1___jule_assign_arg;
	});
	if ((_25410_os != jule::Str("native", 6))) {
		_1ba6d7d8b_checkTargetOs(_25410_os);
		_20b205901_Os=_25410_os;
	};
	if ((_25414_arch != jule::Str("native", 6))) {
		_1ba6d7c59_checkTargetArch(_25414_arch);
		_20b1cd07c_Arch=_25414_arch;
	};
	_20d1c466a_UpdateTarget();
}



inline void _1ba718ebb_checkOptFlag(jule::Str& _26718_opt) {
	if (_26718_opt.empty()) {
		_1e137c6db_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _26718_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1c9c66a6a:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1c9c67076:;
			{
				_20da5cb07_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1c9c668a0:;
			{
				_1e137c6db_Throw((jule::Str("--opt: invalid optimization level: ", 35) + _26718_opt));
			}
		}
		_match_end_1c9c6684a:;
	};
}



inline void _1ba71932e_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _22eb6038c_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1c9c670dc:;
			{
				goto _match_end_1c9c67e45;
			}
		}
		else {
			_case_begin_1c9c679e4:;
			{
				_1e137c6db_Throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _22eb6038c_CppStd));
			}
		}
		_match_end_1c9c67e45:;
	};
}



inline jule::Slice<jule::Str> _1ba719461_checkFlags(jule::Slice<jule::Str>& _29216_args) {
	jule::Str _29313_opt = jule::Str("L0", 2);;
	jule::Str _29413_target = jule::Str("native-native", 13);;
	jule::Ptr<_1ba7150a5_FlagSet> _29613_fs = static__1ba715391_New();;
	_1c9c6a332_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1c9c6a332_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1c9c6a332_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1ba6d4c01_Out)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1c9c73c64_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22eb605ac_Shadowing)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1c9c73c64_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22eb60810_Transpilation)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1c9c6a332_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22eaa23bc_Compiler)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1c9c6a332_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22eb6016c_CompilerPath)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1c9c73c64_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22eb61536_Production)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1c9c73c64_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22eb60d93_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1c9c73c64_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22eb6126c_Safety)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1c9c6a332_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22eb6038c_CppStd)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1c9c73c64_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20da5b320_Copy)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1c9c73c64_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20da5b62d_Deadcode)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1c9c73c64_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20da5b8e7_Append)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1c9c73c64_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20da5bc05_Math)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1c9c73c64_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20da5bebe_Access)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1c9c73c64_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20da5c288_Inline)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1c9c73c64_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20da5c552_Ptr)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1c9c73c64_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20da5c92b_Cond)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _1ba7161a5_Parse(_29613_fs.ptr(), _29216_args);
		(except.ok()) ? (except.result) : ({
			_1e137c6db_Throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_1ba6d3e75_checkCompilerFlag();
	_1ba71932e_checkCppStdFlag();
	_1ba718d89_checkTargetFlag(_29413_target);
	_1ba718ebb_checkOptFlag(_29313_opt);
	return _31813_content;;
}



inline void _1ba719593_setupSemaFlags(jule::I64& _33124_flags) {
	if (_22eb605ac_Shadowing) {
		_33124_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1e1012d55_IR> _1ba7196c5_buildIr(jule::Slice<jule::Str>& _33713_args) {
	jule::Slice<jule::Str> _3389_content = _1ba719461_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_1ba719593_setupSemaFlags(_34013_semaFlags);
	if ((_3389_content.len() == 0LL)) {
		_1e137c6db_Throw(_20b1bc456_Logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_1e137c6db_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok = false;;
	({
		_str_bool __jule_assign_result = _2231d35a9_Abs(_3389_content[0LL]);
		_34814_path = __jule_assign_result.__jule_result_arg0;
		_34820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34820_ok))) {
		_1e137c6db_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_216417b08_Status> _3549_inf = ({
		auto except = static__21622e3c0_Of(_20b20556b_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1e137c6db_Throw(_20b1bc456_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_216417b08_Status>(nullptr);});
	});;
	if ((!(_2163285da_IsDir(_3549_inf.ptr())))) {
		_1e137c6db_Throw(_20b1bc456_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1e1012d55_IR> _36214_ir;;
	jule::Slice<_20b1bc016_Log> _36218_logs;;
	({
		_x_1e1012d55_IR_s_20b1bc016_Log __jule_assign_result = static__1e11752a3_Build(_34814_path,_34013_semaFlags);
		_36214_ir = __jule_assign_result.__jule_result_arg0;
		_36218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_1e137c6db_Throw(_20b1bc456_Logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_34814_path)})));
	};
	if ((_36218_logs != nullptr)) {
		static__1e137bcb2_PrintLogs(_36218_logs);
		_1e137c6db_Throw(jule::Str());
	};
	return _36214_ir;;
}



inline void _1ba719807_compileCommand(jule::Slice<jule::Str>& _37724_args) {
	_37724_args=_37724_args.slice(1LL);
	if ((_37724_args[0LL] == jule::Str("test", 4))) {
		_22eb60ac9_Test=true;
		_37724_args=_37724_args.slice(1LL);
	};
	jule::Ptr<_1e1012d55_IR> _38313_ir = _1ba7196c5_buildIr(_37724_args);;
	;
	if ((!(_22eb60ac9_Test))) {
		jule::Ptr<_20d814370_Fn> _38817_main = _20d84875b_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
		if ((_38817_main == nullptr)) {
			_1e137c6db_Throw(_20b1bc456_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1ba6e401d_applyTargetIndependentOptimizations(_38313_ir);
	_1e1127057_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	({
		_str_str __jule_assign_result = _1ba6d9e48_genCompileCmd(_1ba6d454c_getCompilePath(),_38313_ir);
		_39910_compiler = __jule_assign_result.__jule_result_arg0;
		_39920_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1ba6a5e14_ObjectCoder> _40113_oc = static__1e1a4d65e_New(_38313_ir,_1e1a4e473_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_22eb60ac9_Test) {
		jule::Ptr<_1e1a19581_TestCoder> _40617_tc = static__1e1a19a04_New(_40113_oc);;
		_1e1a1ac36_Serialize(_40617_tc);
	} else {
		_1ba6a95aa_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _1ba6d454c_getCompilePath();;
	jule::Ptr<_21624ed4c_File> _41313_file = _1ba6dc0b0_openOutput(_4129_path);;
	({
		auto except = _22ebe5a0a_Write(_41313_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_1e137c6db_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _216250ad9_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_22eb60810_Transpilation))) {
		_1ba6d6c03_compileIr(_39910_compiler,_39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_20b206638_init();
	_20d1cec6e_init();
	_1ba6d89c4_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}